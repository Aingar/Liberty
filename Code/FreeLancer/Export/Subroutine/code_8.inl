#ifndef __INTELLISENSE__
// clang-format off
#include "..\..\PCH.h"
#pragma init_seg(lib)
#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

_naked _weak void _sub_49C260() // _sub_49C260
{
    __DEBUG_ASM(49C260);
    // chunk 0x49C260 _sub_49C260
    asm("loc_49C260: push $0xFFFFFFFF;");
    asm("loc_49C262: push $_sub_5BCADB;");
    asm("loc_49C267: mov %fs:0,%eax;");
    asm("loc_49C26D: push %eax;");
    asm("loc_49C26E: mov %esp,%fs:0;");
    asm("loc_49C275: sub $0x124,%esp;");
    asm("loc_49C27B: push %ebx;");
    asm("loc_49C27C: push %ebp;");
    asm("loc_49C27D: push %esi;");
    asm("loc_49C27E: push %edi;");
    asm("loc_49C27F: mov %ecx,%ebp;");
    asm("loc_49C281: call _sub_49B600;");
    asm("loc_49C286: mov %al,0x13(%esp);");
    asm("loc_49C28A: mov 0xD74(%ebp),%eax;");
    asm("loc_49C290: xor %ebx,%ebx;");
    asm("loc_49C292: cmp %ebx,%eax;");
    asm("loc_49C294: je loc_49C71A;");
    asm("loc_49C29A: lea 0x3D4(%ebp),%eax;");
    asm("loc_49C2A0: mov %eax,%esi;");
    asm("loc_49C2A2: mov $9,%ecx;");
    asm("loc_49C2A7: lea 0xB0(%esp),%edi;");
    asm("loc_49C2AE: rep movsl (%esi),(%edi);");
    asm("loc_49C2B0: mov %ebx,%ecx;");
    asm("loc_49C2B2: mov %ecx,0xD4(%esp);");
    asm("loc_49C2B9: movl $0xBF0CCCCC,0x28(%esp);");
    asm("loc_49C2C1: mov 0x28(%esp),%ecx;");
    asm("loc_49C2C5: mov %eax,%esi;");
    asm("loc_49C2C7: mov _data_67209C,%eax;");
    asm("loc_49C2CC: cmp %ebx,%eax;");
    asm("loc_49C2CE: mov %ecx,0xDC(%esp);");
    asm("loc_49C2D5: mov %ebx,%edx;");
    asm("loc_49C2D7: mov $9,%ecx;");
    asm("loc_49C2DC: lea 0x110(%esp),%edi;");
    asm("loc_49C2E3: mov %ebx,0x20(%esp);");
    asm("loc_49C2E7: mov %ebx,0x24(%esp);");
    asm("loc_49C2EB: mov %edx,0xD8(%esp);");
    asm("loc_49C2F2: rep movsl (%esi),(%edi);");
    asm("loc_49C2F4: mov %ebx,0x20(%esp);");
    asm("loc_49C2F8: mov %ebx,0x24(%esp);");
    asm("loc_49C2FC: mov %ebx,0x28(%esp);");
    asm("loc_49C300: jne loc_49C30C;");
    asm("loc_49C302: call _sub_5B73E0;");
    asm("loc_49C307: mov %eax,_data_67209C;");
    asm("loc_49C30C: mov (%eax),%edx;");
    asm("loc_49C30E: lea 0x20(%esp),%ecx;");
    asm("loc_49C312: push %ecx;");
    asm("loc_49C313: lea 0xB4(%esp),%ecx;");
    asm("loc_49C31A: push %ecx;");
    asm("loc_49C31B: lea 0x3C(%esp),%ecx;");
    asm("loc_49C31F: push %ecx;");
    asm("loc_49C320: push %eax;");
    asm("loc_49C321: calll *0x28(%edx);");
    asm("loc_49C324: mov 0x34(%esp),%edx;");
    asm("loc_49C328: mov 0x38(%esp),%eax;");
    asm("loc_49C32C: mov $9,%ecx;");
    asm("loc_49C331: lea 0x110(%esp),%esi;");
    asm("loc_49C338: lea 0xE0(%esp),%edi;");
    asm("loc_49C33F: rep movsl (%esi),(%edi);");
    asm("loc_49C341: mov 0x3C(%esp),%ecx;");
    asm("loc_49C345: mov %edx,0x104(%esp);");
    asm("loc_49C34C: lea 0xE0(%esp),%edx;");
    asm("loc_49C353: push %edx;");
    asm("loc_49C354: push %ebx;");
    asm("loc_49C355: mov %eax,0x110(%esp);");
    asm("loc_49C35C: mov %ecx,0x114(%esp);");
    asm("loc_49C363: call _sub_422690;");
    asm("loc_49C368: push $0xB71;");
    asm("loc_49C36D: call _sub_421ED0;");
    asm("loc_49C372: push $0xB44;");
    asm("loc_49C377: call _sub_421ED0;");
    asm("loc_49C37C: push $0xBE2;");
    asm("loc_49C381: call _sub_421DD0;");
    asm("loc_49C386: push $6;");
    asm("loc_49C388: push $5;");
    asm("loc_49C38A: call _sub_4220C0;");
    asm("loc_49C38F: mov _import_5C6DE0,%eax;");
    asm("loc_49C394: mov (%eax),%edi;");
    asm("loc_49C396: add $0x1C,%esp;");
    asm("loc_49C399: mov $_data_5D2E34,%esi;");
    asm("loc_49C39E: mov $0x8D,%eax;");
    asm("loc_49C3A3: mov 4(%esi),%edx;");
    asm("loc_49C3A6: mov (%edi),%ecx;");
    asm("loc_49C3A8: push %edx;");
    asm("loc_49C3A9: push %eax;");
    asm("loc_49C3AA: push %edi;");
    asm("loc_49C3AB: calll *0xF0(%ecx);");
    asm("loc_49C3B1: mov 8(%esi),%eax;");
    asm("loc_49C3B4: add $8,%esi;");
    asm("loc_49C3B7: cmp %ebx,%eax;");
    asm("loc_49C3B9: jne loc_49C3A3;");
    asm("loc_49C3BB: mov _import_5C6DE0,%eax;");
    asm("loc_49C3C0: mov (%eax),%eax;");
    asm("loc_49C3C2: lea 0x1C(%esp),%edx;");
    asm("loc_49C3C6: push %edx;");
    asm("loc_49C3C7: push $0x89;");
    asm("loc_49C3CC: mov %eax,0x1C(%esp);");
    asm("loc_49C3D0: movl $0x89,0x20(%esp);");
    asm("loc_49C3D8: mov (%eax),%ecx;");
    asm("loc_49C3DA: push %eax;");
    asm("loc_49C3DB: calll *0xF4(%ecx);");
    asm("loc_49C3E1: mov 0x18(%esp),%edx;");
    asm("loc_49C3E5: mov 0x14(%esp),%eax;");
    asm("loc_49C3E9: mov (%eax),%ecx;");
    asm("loc_49C3EB: push %ebx;");
    asm("loc_49C3EC: push %edx;");
    asm("loc_49C3ED: push %eax;");
    asm("loc_49C3EE: calll *0xF0(%ecx);");
    asm("loc_49C3F4: mov 0x13(%esp),%al;");
    asm("loc_49C3F8: test %al,%al;");
    asm("loc_49C3FA: mov %ebx,0x13C(%esp);");
    asm("loc_49C401: jne loc_49C41D;");
    asm("loc_49C403: mov _data_6720B8,%edx;");
    asm("loc_49C409: mov _data_6720AC,%eax;");
    asm("loc_49C40E: mov (%eax),%ecx;");
    asm("loc_49C410: push %edx;");
    asm("loc_49C411: push %eax;");
    asm("loc_49C412: calll *0x28(%ecx);");
    asm("loc_49C415: test %eax,%eax;");
    asm("loc_49C417: je loc_49C540;");
    asm("loc_49C41D: cmp %ebx,_data_6720B8;");
    asm("loc_49C423: je loc_49C43B;");
    asm("loc_49C425: mov _data_6720AC,%eax;");
    asm("loc_49C42A: mov (%eax),%ecx;");
    asm("loc_49C42C: push $_data_6720B8;");
    asm("loc_49C431: push %eax;");
    asm("loc_49C432: calll *0x10(%ecx);");
    asm("loc_49C435: mov %ebx,_data_6720B8;");
    asm("loc_49C43B: mov 0xD74(%ebp),%ecx;");
    asm("loc_49C441: mov _data_6720AC,%eax;");
    asm("loc_49C446: mov (%eax),%edx;");
    asm("loc_49C448: push %ebx;");
    asm("loc_49C449: push $_data_6720B8;");
    asm("loc_49C44E: push %ecx;");
    asm("loc_49C44F: push $0x142;");
    asm("loc_49C454: push %eax;");
    asm("loc_49C455: calll *0xC(%edx);");
    asm("loc_49C458: test %eax,%eax;");
    asm("loc_49C45A: je loc_49C46C;");
    asm("loc_49C45C: movl $0xFFFFFFFF,0x13C(%esp);");
    asm("loc_49C467: jmp loc_49C5AD;");
    asm("loc_49C46C: xor %eax,%eax;");
    asm("loc_49C46E: mov $0x1C,%ecx;");
    asm("loc_49C473: lea 0x40(%esp),%edi;");
    asm("loc_49C477: rep stos %eax,(%edi);");
    asm("loc_49C479: mov $0x18,%eax;");
    asm("loc_49C47E: mov %eax,0x4C(%esp);");
    asm("loc_49C482: mov %eax,0x74(%esp);");
    asm("loc_49C486: mov %eax,0x88(%esp);");
    asm("loc_49C48D: mov 0xD6C(%ebp),%eax;");
    asm("loc_49C493: lea 0xC(%eax),%edx;");
    asm("loc_49C496: mov %eax,0x44(%esp);");
    asm("loc_49C49A: add $0x10,%eax;");
    asm("loc_49C49D: mov %eax,0x80(%esp);");
    asm("loc_49C4A4: mov 0xD74(%ebp),%eax;");
    asm("loc_49C4AA: push %eax;");
    asm("loc_49C4AB: push %ebx;");
    asm("loc_49C4AC: mov %eax,0xB4(%esp);");
    asm("loc_49C4B3: lea 0x48(%esp),%eax;");
    asm("loc_49C4B7: push %eax;");
    asm("loc_49C4B8: lea 0xEC8(%ebp),%ecx;");
    asm("loc_49C4BE: mov %ebx,(%ecx);");
    asm("loc_49C4C0: push %ecx;");
    asm("loc_49C4C1: mov _data_6720B8,%ecx;");
    asm("loc_49C4C7: mov %edx,0x7C(%esp);");
    asm("loc_49C4CB: mov _data_6720AC,%edx;");
    asm("loc_49C4D1: push %ecx;");
    asm("loc_49C4D2: movl $2,0x54(%esp);");
    asm("loc_49C4DA: movl $0xC,0x5C(%esp);");
    asm("loc_49C4E2: movl $4,0x84(%esp);");
    asm("loc_49C4ED: movl $8,0x98(%esp);");
    asm("loc_49C4F8: movl $0x142,0xBC(%esp);");
    asm("loc_49C503: mov (%edx),%esi;");
    asm("loc_49C505: push %edx;");
    asm("loc_49C506: calll *0x18(%esi);");
    asm("loc_49C509: test %eax,%eax;");
    asm("loc_49C50B: je loc_49C51D;");
    asm("loc_49C50D: movl $0xFFFFFFFF,0x13C(%esp);");
    asm("loc_49C518: jmp loc_49C5AD;");
    asm("loc_49C51D: mov _data_6720B8,%ecx;");
    asm("loc_49C523: mov _data_6720AC,%eax;");
    asm("loc_49C528: mov (%eax),%edx;");
    asm("loc_49C52A: push %ecx;");
    asm("loc_49C52B: push %eax;");
    asm("loc_49C52C: calll *0x28(%edx);");
    asm("loc_49C52F: test %eax,%eax;");
    asm("loc_49C531: je loc_49C540;");
    asm("loc_49C533: movl $0xFFFFFFFF,0x13C(%esp);");
    asm("loc_49C53E: jmp loc_49C5AD;");
    asm("loc_49C540: mov 0xEBC(%ebp),%ecx;");
    asm("loc_49C546: mov _data_6720B0,%eax;");
    asm("loc_49C54B: push %ecx;");
    asm("loc_49C54C: mov 0xD70(%ebp),%ecx;");
    asm("loc_49C552: push %ecx;");
    asm("loc_49C553: lea 0x34(%esp),%ecx;");
    asm("loc_49C557: push %ecx;");
    asm("loc_49C558: or $0xFFFFFFFF,%esi;");
    asm("loc_49C55B: push %esi;");
    asm("loc_49C55C: mov %ebx,0x3C(%esp);");
    asm("loc_49C560: mov (%eax),%edx;");
    asm("loc_49C562: push %eax;");
    asm("loc_49C563: calll *0x18(%edx);");
    asm("loc_49C566: test %eax,%eax;");
    asm("loc_49C568: je loc_49C58D;");
    asm("loc_49C56A: mov 0x1C(%esp),%ecx;");
    asm("loc_49C56E: mov 0x14(%esp),%eax;");
    asm("loc_49C572: mov (%eax),%edx;");
    asm("loc_49C574: push %ecx;");
    asm("loc_49C575: mov 0x1C(%esp),%ecx;");
    asm("loc_49C579: push %ecx;");
    asm("loc_49C57A: push %eax;");
    asm("loc_49C57B: mov %esi,0x148(%esp);");
    asm("loc_49C582: calll *0xF0(%edx);");
    asm("loc_49C588: jmp loc_49C71A;");
    asm("loc_49C58D: mov 0xEC8(%ebp),%ecx;");
    asm("loc_49C593: mov _data_6720B0,%eax;");
    asm("loc_49C598: mov (%eax),%edx;");
    asm("loc_49C59A: push %ebx;");
    asm("loc_49C59B: push %ebx;");
    asm("loc_49C59C: push %ecx;");
    asm("loc_49C59D: push %esi;");
    asm("loc_49C59E: push %eax;");
    asm("loc_49C59F: calll *0x24(%edx);");
    asm("loc_49C5A2: test %eax,%eax;");
    asm("loc_49C5A4: je loc_49C5C9;");
    asm("loc_49C5A6: mov %esi,0x13C(%esp);");
    asm("loc_49C5AD: mov 0x1C(%esp),%ecx;");
    asm("loc_49C5B1: mov 0x14(%esp),%eax;");
    asm("loc_49C5B5: mov (%eax),%edx;");
    asm("loc_49C5B7: push %ecx;");
    asm("loc_49C5B8: mov 0x1C(%esp),%ecx;");
    asm("loc_49C5BC: push %ecx;");
    asm("loc_49C5BD: push %eax;");
    asm("loc_49C5BE: calll *0xF0(%edx);");
    asm("loc_49C5C4: jmp loc_49C71A;");
    asm("loc_49C5C9: cmp %ebx,0xEB8(%ebp);");
    asm("loc_49C5CF: mov %ebx,0x30(%esp);");
    asm("loc_49C5D3: jle loc_49C6BB;");
    asm("loc_49C5D9: lea 0xE38(%ebp),%ebx;");
    asm("loc_49C5DF: nop;");
    asm("loc_49C5E0: mov _import_5C6DE0,%edx;");
    asm("loc_49C5E6: mov (%edx),%ecx;");
    asm("loc_49C5E8: mov 0x40(%ebx),%eax;");
    asm("loc_49C5EB: mov (%ecx),%esi;");
    asm("loc_49C5ED: mov 0xB68(%ebp,%eax,4),%ecx;");
    asm("loc_49C5F4: push $0;");
    asm("loc_49C5F6: call _sub_425640;");
    asm("loc_49C5FB: mov _import_5C6DE0,%edx;");
    asm("loc_49C601: push %eax;");
    asm("loc_49C602: mov (%edx),%eax;");
    asm("loc_49C604: push $0;");
    asm("loc_49C606: push %eax;");
    asm("loc_49C607: calll *0x108(%esi);");
    asm("loc_49C60D: mov _import_5C6DE0,%ecx;");
    asm("loc_49C613: mov (%ecx),%eax;");
    asm("loc_49C615: mov (%eax),%edx;");
    asm("loc_49C617: push $0;");
    asm("loc_49C619: push $0xB;");
    asm("loc_49C61B: push $0;");
    asm("loc_49C61D: push %eax;");
    asm("loc_49C61E: calll *0xF8(%edx);");
    asm("loc_49C624: mov _import_5C6DE0,%eax;");
    asm("loc_49C629: mov (%eax),%edi;");
    asm("loc_49C62B: mov $_data_5D2E5C,%esi;");
    asm("loc_49C630: mov $1,%eax;");
    asm("loc_49C635: mov 4(%esi),%edx;");
    asm("loc_49C638: mov (%edi),%ecx;");
    asm("loc_49C63A: push %edx;");
    asm("loc_49C63B: push %eax;");
    asm("loc_49C63C: push $0;");
    asm("loc_49C63E: push %edi;");
    asm("loc_49C63F: calll *0xF8(%ecx);");
    asm("loc_49C645: mov 8(%esi),%eax;");
    asm("loc_49C648: add $8,%esi;");
    asm("loc_49C64B: test %eax,%eax;");
    asm("loc_49C64D: jne loc_49C635;");
    asm("loc_49C64F: mov _import_5C6DE0,%eax;");
    asm("loc_49C654: mov (%eax),%edi;");
    asm("loc_49C656: mov $_data_5D2E94,%esi;");
    asm("loc_49C65B: mov $1,%eax;");
    asm("loc_49C660: mov 4(%esi),%edx;");
    asm("loc_49C663: mov (%edi),%ecx;");
    asm("loc_49C665: push %edx;");
    asm("loc_49C666: push %eax;");
    asm("loc_49C667: push $1;");
    asm("loc_49C669: push %edi;");
    asm("loc_49C66A: calll *0xF8(%ecx);");
    asm("loc_49C670: mov 8(%esi),%eax;");
    asm("loc_49C673: add $8,%esi;");
    asm("loc_49C676: test %eax,%eax;");
    asm("loc_49C678: jne loc_49C660;");
    asm("loc_49C67A: mov (%ebx),%edx;");
    asm("loc_49C67C: mov 0x2C(%esp),%edi;");
    asm("loc_49C680: mov _data_6720B4,%eax;");
    asm("loc_49C685: mov (%eax),%ecx;");
    asm("loc_49C687: push %edx;");
    asm("loc_49C688: mov -0x40(%ebx),%edx;");
    asm("loc_49C68B: add %edi,%edx;");
    asm("loc_49C68D: push %edx;");
    asm("loc_49C68E: mov -0x80(%ebx),%edx;");
    asm("loc_49C691: push %edx;");
    asm("loc_49C692: mov -0xC0(%ebx),%edx;");
    asm("loc_49C698: push %edx;");
    asm("loc_49C699: push $4;");
    asm("loc_49C69B: push %eax;");
    asm("loc_49C69C: calll *0xC(%ecx);");
    asm("loc_49C69F: mov 0x30(%esp),%eax;");
    asm("loc_49C6A3: mov 0xEB8(%ebp),%ecx;");
    asm("loc_49C6A9: inc %eax;");
    asm("loc_49C6AA: add $4,%ebx;");
    asm("loc_49C6AD: cmp %ecx,%eax;");
    asm("loc_49C6AF: mov %eax,0x30(%esp);");
    asm("loc_49C6B3: jl loc_49C5E0;");
    asm("loc_49C6B9: xor %ebx,%ebx;");
    asm("loc_49C6BB: mov _import_5C6DE0,%eax;");
    asm("loc_49C6C0: mov (%eax),%eax;");
    asm("loc_49C6C2: mov (%eax),%ecx;");
    asm("loc_49C6C4: push %ebx;");
    asm("loc_49C6C5: push %ebx;");
    asm("loc_49C6C6: push %eax;");
    asm("loc_49C6C7: calll *0x108(%ecx);");
    asm("loc_49C6CD: mov _import_5C6DE0,%edx;");
    asm("loc_49C6D3: mov (%edx),%edi;");
    asm("loc_49C6D5: mov $_data_5D2E4C,%esi;");
    asm("loc_49C6DA: mov $0x8D,%eax;");
    asm("loc_49C6DF: nop;");
    asm("loc_49C6E0: mov 4(%esi),%edx;");
    asm("loc_49C6E3: mov (%edi),%ecx;");
    asm("loc_49C6E5: push %edx;");
    asm("loc_49C6E6: push %eax;");
    asm("loc_49C6E7: push %edi;");
    asm("loc_49C6E8: calll *0xF0(%ecx);");
    asm("loc_49C6EE: mov 8(%esi),%eax;");
    asm("loc_49C6F1: add $8,%esi;");
    asm("loc_49C6F4: cmp %ebx,%eax;");
    asm("loc_49C6F6: jne loc_49C6E0;");
    asm("loc_49C6F8: mov 0x1C(%esp),%edx;");
    asm("loc_49C6FC: mov 0x14(%esp),%eax;");
    asm("loc_49C700: mov (%eax),%ecx;");
    asm("loc_49C702: push %edx;");
    asm("loc_49C703: mov 0x1C(%esp),%edx;");
    asm("loc_49C707: push %edx;");
    asm("loc_49C708: push %eax;");
    asm("loc_49C709: movl $0xFFFFFFFF,0x148(%esp);");
    asm("loc_49C714: calll *0xF0(%ecx);");
    asm("loc_49C71A: mov 0x134(%esp),%ecx;");
    asm("loc_49C721: pop %edi;");
    asm("loc_49C722: pop %esi;");
    asm("loc_49C723: pop %ebp;");
    asm("loc_49C724: pop %ebx;");
    asm("loc_49C725: mov %ecx,%fs:0;");
    asm("loc_49C72C: add $0x130,%esp;");
    asm("loc_49C732: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49C740() // _sub_49C740
{
    asm("jmp dgb_49C740;"); // jumptable skip
    asm(".long _jmp_49DCB0;"); // jumptable address
    __DEBUG_ASM(49C740);
    // chunk 0x49C740 _sub_49C740
    asm("loc_49C740: mov $0x1174,%eax;");
    asm("loc_49C745: call _sub_5B7E90;");
    asm("loc_49C74A: push %ebx;");
    asm("loc_49C74B: push %ebp;");
    asm("loc_49C74C: push %esi;");
    asm("loc_49C74D: mov %ecx,%ebx;");
    asm("loc_49C74F: mov 0xB5C(%ebx),%eax;");
    asm("loc_49C755: push %edi;");
    asm("loc_49C756: xor %edi,%edi;");
    asm("loc_49C758: cmp %edi,%eax;");
    asm("loc_49C75A: jne loc_49C762;");
    asm("loc_49C75C: mov %edi,0x50(%esp);");
    asm("loc_49C760: jmp loc_49C771;");
    asm("loc_49C762: mov 0xB60(%ebx),%ecx;");
    asm("loc_49C768: sub %eax,%ecx;");
    asm("loc_49C76A: sar $2,%ecx;");
    asm("loc_49C76D: mov %ecx,0x50(%esp);");
    asm("loc_49C771: mov 0x7E0(%ebx),%ecx;");
    asm("loc_49C777: mov (%ecx),%eax;");
    asm("loc_49C779: calll *0x18(%eax);");
    asm("loc_49C77C: mov %eax,%esi;");
    asm("loc_49C77E: mov %esi,0x68(%esp);");
    asm("loc_49C782: call _sub_4C5040;");
    asm("loc_49C787: flds 0x46C(%ebx);");
    asm("loc_49C78D: fcomps 0xEF0(%ebx);");
    asm("loc_49C793: fnstsw %ax;");
    asm("loc_49C795: test $0x44,%ah;");
    asm("loc_49C798: jp loc_49C99B;");
    asm("loc_49C79E: flds 0x470(%ebx);");
    asm("loc_49C7A4: fcomps 0xEF4(%ebx);");
    asm("loc_49C7AA: fnstsw %ax;");
    asm("loc_49C7AC: test $0x44,%ah;");
    asm("loc_49C7AF: jp loc_49C99B;");
    asm("loc_49C7B5: flds 0x474(%ebx);");
    asm("loc_49C7BB: fcomps 0xEF8(%ebx);");
    asm("loc_49C7C1: fnstsw %ax;");
    asm("loc_49C7C3: test $0x44,%ah;");
    asm("loc_49C7C6: jp loc_49C99B;");
    asm("loc_49C7CC: flds 0xEFC(%ebx);");
    asm("loc_49C7D2: fcomps 0x3F8(%ebx);");
    asm("loc_49C7D8: fnstsw %ax;");
    asm("loc_49C7DA: test $0x44,%ah;");
    asm("loc_49C7DD: jp loc_49C99B;");
    asm("loc_49C7E3: mov 0x7E0(%ebx),%ecx;");
    asm("loc_49C7E9: mov (%ecx),%edx;");
    asm("loc_49C7EB: calll *(%edx);");
    asm("loc_49C7ED: cmp %eax,0xF00(%ebx);");
    asm("loc_49C7F3: jne loc_49C99B;");
    asm("loc_49C7F9: mov 0xF04(%ebx),%eax;");
    asm("loc_49C7FF: cmp _data_6720A4,%eax;");
    asm("loc_49C805: jne loc_49C99B;");
    asm("loc_49C80B: mov 0xF08(%ebx),%ecx;");
    asm("loc_49C811: cmp _data_6720A0,%ecx;");
    asm("loc_49C817: jne loc_49C99B;");
    asm("loc_49C81D: call _sub_42D680;");
    asm("loc_49C822: fadds 0xF0C(%ebx);");
    asm("loc_49C828: fsts 0xF0C(%ebx);");
    asm("loc_49C82E: fcoms _data_5D2ED0;");
    asm("loc_49C834: fnstsw %ax;");
    asm("loc_49C836: test $5,%ah;");
    asm("loc_49C839: jp loc_49C84A;");
    asm("loc_49C83B: pop %edi;");
    asm("loc_49C83C: fstp %st(0);");
    asm("loc_49C83E: pop %esi;");
    asm("loc_49C83F: pop %ebp;");
    asm("loc_49C840: xor %al,%al;");
    asm("loc_49C842: pop %ebx;");
    asm("loc_49C843: add $0x1174,%esp;");
    asm("loc_49C849: ret;");
    asm("loc_49C84A: fsubs _data_5D2ED0;");
    asm("loc_49C850: mov %edi,0x20(%esp);");
    asm("loc_49C854: fstps 0xF0C(%ebx);");
    asm("loc_49C85A: mov 4(%esi),%eax;");
    asm("loc_49C85D: mov (%eax),%ebp;");
    asm("loc_49C85F: cmp %eax,%ebp;");
    asm("loc_49C861: je loc_49C907;");
    asm("loc_49C867: lea 8(%ebp),%esi;");
    asm("loc_49C86A: mov $0x303,%ecx;");
    asm("loc_49C86F: lea 0x578(%esp),%edi;");
    asm("loc_49C876: rep movsl (%esi),(%edi);");
    asm("loc_49C878: mov 0x1180(%esp),%esi;");
    asm("loc_49C87F: mov (%esi),%edx;");
    asm("loc_49C881: mov %esi,%ecx;");
    asm("loc_49C883: calll *0x64(%edx);");
    asm("loc_49C886: mov _data_6720A0,%ecx;");
    asm("loc_49C88C: cmp $1,%ecx;");
    asm("loc_49C88F: jne loc_49C8A2;");
    asm("loc_49C891: test %eax,%eax;");
    asm("loc_49C893: je loc_49C8F7;");
    asm("loc_49C895: mov (%esi),%eax;");
    asm("loc_49C897: mov %esi,%ecx;");
    asm("loc_49C899: calll *0x70(%eax);");
    asm("loc_49C89C: test %al,%al;");
    asm("loc_49C89E: jne loc_49C8F7;");
    asm("loc_49C8A0: jmp loc_49C8B6;");
    asm("loc_49C8A2: cmp $2,%ecx;");
    asm("loc_49C8A5: jne loc_49C924;");
    asm("loc_49C8A7: test %eax,%eax;");
    asm("loc_49C8A9: je loc_49C8F7;");
    asm("loc_49C8AB: mov (%esi),%edx;");
    asm("loc_49C8AD: mov %esi,%ecx;");
    asm("loc_49C8AF: calll *0x70(%edx);");
    asm("loc_49C8B2: test %al,%al;");
    asm("loc_49C8B4: je loc_49C8F7;");
    asm("loc_49C8B6: mov 0x87E(%ebx),%al;");
    asm("loc_49C8BC: test %al,%al;");
    asm("loc_49C8BE: jne loc_49C8F3;");
    asm("loc_49C8C0: mov (%esi),%edx;");
    asm("loc_49C8C2: push $0;");
    asm("loc_49C8C4: push $1;");
    asm("loc_49C8C6: lea 0x1B(%esp),%eax;");
    asm("loc_49C8CA: push %eax;");
    asm("loc_49C8CB: mov %esi,%ecx;");
    asm("loc_49C8CD: movb $0,0x1F(%esp);");
    asm("loc_49C8D2: calll *4(%edx);");
    asm("loc_49C8D5: push %eax;");
    asm("loc_49C8D6: call _sub_4C4DA0;");
    asm("loc_49C8DB: mov (%esi),%eax;");
    asm("loc_49C8DD: add $0x10,%esp;");
    asm("loc_49C8E0: mov %esi,%ecx;");
    asm("loc_49C8E2: calll *0x80(%eax);");
    asm("loc_49C8E8: mov 0x13(%esp),%cl;");
    asm("loc_49C8EC: or %al,%cl;");
    asm("loc_49C8EE: test $1,%cl;");
    asm("loc_49C8F1: je loc_49C8F7;");
    asm("loc_49C8F3: incl 0x20(%esp);");
    asm("loc_49C8F7: mov 0x68(%esp),%ecx;");
    asm("loc_49C8FB: mov (%ebp),%ebp;");
    asm("loc_49C8FE: cmp 4(%ecx),%ebp;");
    asm("loc_49C901: jne loc_49C867;");
    asm("loc_49C907: mov 0x20(%esp),%eax;");
    asm("loc_49C90B: cmp 0xF10(%ebx),%eax;");
    asm("loc_49C911: jne loc_49C995;");
    asm("loc_49C917: pop %edi;");
    asm("loc_49C918: pop %esi;");
    asm("loc_49C919: pop %ebp;");
    asm("loc_49C91A: xor %al,%al;");
    asm("loc_49C91C: pop %ebx;");
    asm("loc_49C91D: add $0x1174,%esp;");
    asm("loc_49C923: ret;");
    asm("loc_49C924: cmp $5,%ecx;");
    asm("loc_49C927: jne loc_49C95F;");
    asm("loc_49C929: mov (%esi),%edx;");
    asm("loc_49C92B: push $0;");
    asm("loc_49C92D: push $1;");
    asm("loc_49C92F: lea 0x1B(%esp),%eax;");
    asm("loc_49C933: push %eax;");
    asm("loc_49C934: mov %esi,%ecx;");
    asm("loc_49C936: movb $0,0x1F(%esp);");
    asm("loc_49C93B: calll *4(%edx);");
    asm("loc_49C93E: push %eax;");
    asm("loc_49C93F: call _sub_4C4DA0;");
    asm("loc_49C944: mov (%esi),%eax;");
    asm("loc_49C946: add $0x10,%esp;");
    asm("loc_49C949: mov %esi,%ecx;");
    asm("loc_49C94B: calll *0x80(%eax);");
    asm("loc_49C951: mov 0x13(%esp),%cl;");
    asm("loc_49C955: or %al,%cl;");
    asm("loc_49C957: test $4,%cl;");
    asm("loc_49C95A: jmp loc_49C8B4;");
    asm("loc_49C95F: test %eax,%eax;");
    asm("loc_49C961: je loc_49C8F7;");
    asm("loc_49C963: mov (%esi),%edx;");
    asm("loc_49C965: mov %esi,%ecx;");
    asm("loc_49C967: calll *4(%edx);");
    asm("loc_49C96A: mov 0x50(%esp),%edx;");
    asm("loc_49C96E: xor %ecx,%ecx;");
    asm("loc_49C970: test %edx,%edx;");
    asm("loc_49C972: jle loc_49C8F7;");
    asm("loc_49C974: mov 0xB5C(%ebx),%edx;");
    asm("loc_49C97A: mov 0x50(%esp),%edi;");
    asm("loc_49C97E: mov %edi,%edi;");
    asm("loc_49C980: cmp %eax,(%edx);");
    asm("loc_49C982: je loc_49C8B6;");
    asm("loc_49C988: inc %ecx;");
    asm("loc_49C989: add $4,%edx;");
    asm("loc_49C98C: cmp %edi,%ecx;");
    asm("loc_49C98E: jl loc_49C980;");
    asm("loc_49C990: jmp loc_49C8F7;");
    asm("loc_49C995: mov %eax,0xF10(%ebx);");
    asm("loc_49C99B: lea 0x46C(%ebx),%esi;");
    asm("loc_49C9A1: mov %esi,%edx;");
    asm("loc_49C9A3: mov (%edx),%eax;");
    asm("loc_49C9A5: mov 4(%edx),%ecx;");
    asm("loc_49C9A8: mov 8(%edx),%edx;");
    asm("loc_49C9AB: mov %eax,0xEF0(%ebx);");
    asm("loc_49C9B1: mov 0x3F8(%ebx),%eax;");
    asm("loc_49C9B7: mov %ecx,0xEF4(%ebx);");
    asm("loc_49C9BD: mov 0x7E0(%ebx),%ecx;");
    asm("loc_49C9C3: mov %edx,0xEF8(%ebx);");
    asm("loc_49C9C9: mov %eax,0xEFC(%ebx);");
    asm("loc_49C9CF: mov (%ecx),%edx;");
    asm("loc_49C9D1: calll *(%edx);");
    asm("loc_49C9D3: mov 0xEE0(%ebx),%edx;");
    asm("loc_49C9D9: mov %eax,0xF00(%ebx);");
    asm("loc_49C9DF: mov _data_6720A4,%eax;");
    asm("loc_49C9E4: mov %eax,0xF04(%ebx);");
    asm("loc_49C9EA: mov _data_6720A0,%ecx;");
    asm("loc_49C9F0: mov %ecx,0xF08(%ebx);");
    asm("loc_49C9F6: xor %eax,%eax;");
    asm("loc_49C9F8: mov %edx,0x6C(%esp);");
    asm("loc_49C9FC: mov %eax,0xEE8(%ebx);");
    asm("loc_49CA02: mov %eax,0xEEC(%ebx);");
    asm("loc_49CA08: lea 0x418(%ebx),%eax;");
    asm("loc_49CA0E: mov %eax,%ecx;");
    asm("loc_49CA10: mov (%ecx),%edx;");
    asm("loc_49CA12: mov %edx,0x24(%esp);");
    asm("loc_49CA16: flds 0x24(%esp);");
    asm("loc_49CA1A: fmuls _data_5C75E0;");
    asm("loc_49CA20: mov 4(%ecx),%edx;");
    asm("loc_49CA23: mov 8(%ecx),%ecx;");
    asm("loc_49CA26: mov %edx,0x28(%esp);");
    asm("loc_49CA2A: flds 0x28(%esp);");
    asm("loc_49CA2E: fmuls _data_5C75E0;");
    asm("loc_49CA34: mov %ecx,0x2C(%esp);");
    asm("loc_49CA38: flds 0x2C(%esp);");
    asm("loc_49CA3C: mov %eax,%edx;");
    asm("loc_49CA3E: fmuls _data_5C75E0;");
    asm("loc_49CA44: mov (%edx),%ecx;");
    asm("loc_49CA46: mov %ecx,0x24(%esp);");
    asm("loc_49CA4A: mov 4(%edx),%ecx;");
    asm("loc_49CA4D: fstps 0x2C(%esp);");
    asm("loc_49CA51: mov 8(%edx),%edx;");
    asm("loc_49CA54: fxch;");
    asm("loc_49CA56: mov %ecx,0x28(%esp);");
    asm("loc_49CA5A: fchs;");
    asm("loc_49CA5C: mov 0xEE4(%ebx),%ebp;");
    asm("loc_49CA62: fstps 0x14(%esp);");
    asm("loc_49CA66: mov 0x14(%esp),%ecx;");
    asm("loc_49CA6A: fchs;");
    asm("loc_49CA6C: mov %ecx,0x3C(%esp);");
    asm("loc_49CA70: fstps 0x18(%esp);");
    asm("loc_49CA74: flds 0x2C(%esp);");
    asm("loc_49CA78: mov %edx,0x2C(%esp);");
    asm("loc_49CA7C: fchs;");
    asm("loc_49CA7E: mov 0x18(%esp),%edx;");
    asm("loc_49CA82: fstps 0x1C(%esp);");
    asm("loc_49CA86: flds 0x24(%esp);");
    asm("loc_49CA8A: mov 0x1C(%esp),%ecx;");
    asm("loc_49CA8E: fmuls _data_5C75E0;");
    asm("loc_49CA94: mov %edx,0x40(%esp);");
    asm("loc_49CA98: flds 0x28(%esp);");
    asm("loc_49CA9C: mov %ecx,0x44(%esp);");
    asm("loc_49CAA0: fmuls _data_5C75E0;");
    asm("loc_49CAA6: flds 0x2C(%esp);");
    asm("loc_49CAAA: fmuls _data_5C75E0;");
    asm("loc_49CAB0: fstps 0x2C(%esp);");
    asm("loc_49CAB4: flds 0x3F8(%ebx);");
    asm("loc_49CABA: fsubs _data_5C75DC;");
    asm("loc_49CAC0: fstps 0x20(%esp);");
    asm("loc_49CAC4: fxch;");
    asm("loc_49CAC6: fmuls 0x20(%esp);");
    asm("loc_49CACA: fstps 0x24(%esp);");
    asm("loc_49CACE: fmuls 0x20(%esp);");
    asm("loc_49CAD2: flds 0x2C(%esp);");
    asm("loc_49CAD6: fmuls 0x20(%esp);");
    asm("loc_49CADA: flds 0x14(%esp);");
    asm("loc_49CADE: fsubs 0x24(%esp);");
    asm("loc_49CAE2: mov (%esi),%edx;");
    asm("loc_49CAE4: mov 4(%esi),%ecx;");
    asm("loc_49CAE7: mov %edx,0x24(%esp);");
    asm("loc_49CAEB: fstps 0x3C(%esp);");
    asm("loc_49CAEF: mov 8(%esi),%edx;");
    asm("loc_49CAF2: flds 0x40(%esp);");
    asm("loc_49CAF6: mov %ecx,0x28(%esp);");
    asm("loc_49CAFA: fsub %st(2),%st;");
    asm("loc_49CAFC: mov %edx,0x2C(%esp);");
    asm("loc_49CB00: mov (%eax),%ecx;");
    asm("loc_49CB02: mov 4(%eax),%edx;");
    asm("loc_49CB05: fstps 0x40(%esp);");
    asm("loc_49CB09: mov 8(%eax),%eax;");
    asm("loc_49CB0C: flds 0x44(%esp);");
    asm("loc_49CB10: mov %eax,0x44(%esp);");
    asm("loc_49CB14: fsub %st(1),%st;");
    asm("loc_49CB16: fstp %st(2);");
    asm("loc_49CB18: fstp %st(0);");
    asm("loc_49CB1A: flds 0x3F8(%ebx);");
    asm("loc_49CB20: flds 0x24(%esp);");
    asm("loc_49CB24: fmul %st(1),%st;");
    asm("loc_49CB26: flds 0x28(%esp);");
    asm("loc_49CB2A: fmul %st(2),%st;");
    asm("loc_49CB2C: fstps 0x28(%esp);");
    asm("loc_49CB30: flds 0x2C(%esp);");
    asm("loc_49CB34: fmul %st(2),%st;");
    asm("loc_49CB36: fstps 0x2C(%esp);");
    asm("loc_49CB3A: fadds 0x3C(%esp);");
    asm("loc_49CB3E: mov %ecx,0x3C(%esp);");
    asm("loc_49CB42: fstps 0xCC(%esp);");
    asm("loc_49CB49: fstp %st(0);");
    asm("loc_49CB4B: flds 0x28(%esp);");
    asm("loc_49CB4F: fadds 0x40(%esp);");
    asm("loc_49CB53: mov %edx,0x40(%esp);");
    asm("loc_49CB57: fstps 0xD0(%esp);");
    asm("loc_49CB5E: flds 0x2C(%esp);");
    asm("loc_49CB62: fadd %st(1),%st;");
    asm("loc_49CB64: fstps 0xD4(%esp);");
    asm("loc_49CB6B: fstp %st(0);");
    asm("loc_49CB6D: flds 0x3F8(%ebx);");
    asm("loc_49CB73: flds 0x3C(%esp);");
    asm("loc_49CB77: fmul %st(1),%st;");
    asm("loc_49CB79: fstps 0x3C(%esp);");
    asm("loc_49CB7D: flds 0x40(%esp);");
    asm("loc_49CB81: fmul %st(1),%st;");
    asm("loc_49CB83: fstps 0x40(%esp);");
    asm("loc_49CB87: flds 0x44(%esp);");
    asm("loc_49CB8B: fmul %st(1),%st;");
    asm("loc_49CB8D: fstps 0x44(%esp);");
    asm("loc_49CB91: fstp %st(0);");
    asm("loc_49CB93: call _sub_4C4670;");
    asm("loc_49CB98: mov 0x68(%esp),%ecx;");
    asm("loc_49CB9C: mov %eax,0xF4(%esp);");
    asm("loc_49CBA3: mov 4(%ecx),%eax;");
    asm("loc_49CBA6: mov (%eax),%ecx;");
    asm("loc_49CBA8: cmp %eax,%ecx;");
    asm("loc_49CBAA: mov %ecx,0x64(%esp);");
    asm("loc_49CBAE: je loc_49DCA1;");
    asm("loc_49CBB4: mov 0x64(%esp),%edx;");
    asm("loc_49CBB8: lea 8(%edx),%esi;");
    asm("loc_49CBBB: mov $0x303,%ecx;");
    asm("loc_49CBC0: lea 0x578(%esp),%edi;");
    asm("loc_49CBC7: rep movsl (%esi),(%edi);");
    asm("loc_49CBC9: mov 0x1180(%esp),%ecx;");
    asm("loc_49CBD0: mov (%ecx),%eax;");
    asm("loc_49CBD2: calll *0x64(%eax);");
    asm("loc_49CBD5: mov %eax,%ecx;");
    asm("loc_49CBD7: mov _data_6720A0,%eax;");
    asm("loc_49CBDC: cmp $1,%eax;");
    asm("loc_49CBDF: mov %ecx,0x20(%esp);");
    asm("loc_49CBE3: jne loc_49CC0A;");
    asm("loc_49CBE5: test %ecx,%ecx;");
    asm("loc_49CBE7: je loc_49DC8A;");
    asm("loc_49CBED: mov 0x1180(%esp),%ecx;");
    asm("loc_49CBF4: mov (%ecx),%edx;");
    asm("loc_49CBF6: calll *0x70(%edx);");
    asm("loc_49CBF9: test %al,%al;");
    asm("loc_49CBFB: jne loc_49DC8A;");
    asm("loc_49CC01: mov 0x1180(%esp),%esi;");
    asm("loc_49CC08: jmp loc_49CC31;");
    asm("loc_49CC0A: cmp $2,%eax;");
    asm("loc_49CC0D: jne loc_49CD76;");
    asm("loc_49CC13: test %ecx,%ecx;");
    asm("loc_49CC15: je loc_49DC8A;");
    asm("loc_49CC1B: mov 0x1180(%esp),%esi;");
    asm("loc_49CC22: mov (%esi),%eax;");
    asm("loc_49CC24: mov %esi,%ecx;");
    asm("loc_49CC26: calll *0x70(%eax);");
    asm("loc_49CC29: test %al,%al;");
    asm("loc_49CC2B: je loc_49DC8A;");
    asm("loc_49CC31: mov 0x87E(%ebx),%al;");
    asm("loc_49CC37: test %al,%al;");
    asm("loc_49CC39: jne loc_49CC72;");
    asm("loc_49CC3B: mov (%esi),%edx;");
    asm("loc_49CC3D: push $0;");
    asm("loc_49CC3F: push $1;");
    asm("loc_49CC41: lea 0x1B(%esp),%eax;");
    asm("loc_49CC45: push %eax;");
    asm("loc_49CC46: mov %esi,%ecx;");
    asm("loc_49CC48: movb $0,0x1F(%esp);");
    asm("loc_49CC4D: calll *4(%edx);");
    asm("loc_49CC50: push %eax;");
    asm("loc_49CC51: call _sub_4C4DA0;");
    asm("loc_49CC56: mov (%esi),%eax;");
    asm("loc_49CC58: add $0x10,%esp;");
    asm("loc_49CC5B: mov %esi,%ecx;");
    asm("loc_49CC5D: calll *0x80(%eax);");
    asm("loc_49CC63: mov 0x13(%esp),%cl;");
    asm("loc_49CC67: or %al,%cl;");
    asm("loc_49CC69: test $1,%cl;");
    asm("loc_49CC6C: je loc_49DC8A;");
    asm("loc_49CC72: mov 0x20(%esp),%ecx;");
    asm("loc_49CC76: xor %eax,%eax;");
    asm("loc_49CC78: test %ecx,%ecx;");
    asm("loc_49CC7A: movl $0,0x34(%esp);");
    asm("loc_49CC82: movl $0,0x48(%esp);");
    asm("loc_49CC8A: mov %eax,0x30(%esp);");
    asm("loc_49CC8E: jle loc_49CD13;");
    asm("loc_49CC94: mov (%esi),%edx;");
    asm("loc_49CC96: lea 0x70(%esp),%ecx;");
    asm("loc_49CC9A: push %ecx;");
    asm("loc_49CC9B: lea 0xA8(%esp),%ecx;");
    asm("loc_49CCA2: push %ecx;");
    asm("loc_49CCA3: push %eax;");
    asm("loc_49CCA4: mov %esi,%ecx;");
    asm("loc_49CCA6: calll *0x68(%edx);");
    asm("loc_49CCA9: test %al,%al;");
    asm("loc_49CCAB: je loc_49CCF1;");
    asm("loc_49CCAD: lea 0xC8(%esp),%edx;");
    asm("loc_49CCB4: push %edx;");
    asm("loc_49CCB5: lea 0xA8(%esp),%eax;");
    asm("loc_49CCBC: push %eax;");
    asm("loc_49CCBD: lea 0xFC(%esp),%ecx;");
    asm("loc_49CCC4: push %ecx;");
    asm("loc_49CCC5: calll *_import_5C63BC;");
    asm("loc_49CCCB: add $0xC,%esp;");
    asm("loc_49CCCE: test %eax,%eax;");
    asm("loc_49CCD0: jne loc_49CCF1;");
    asm("loc_49CCD2: flds 0xC8(%esp);");
    asm("loc_49CCD9: fmuls 0x70(%esp);");
    asm("loc_49CCDD: fadds 0x34(%esp);");
    asm("loc_49CCE1: fstps 0x34(%esp);");
    asm("loc_49CCE5: flds 0x70(%esp);");
    asm("loc_49CCE9: fadds 0x48(%esp);");
    asm("loc_49CCED: fstps 0x48(%esp);");
    asm("loc_49CCF1: mov 0x30(%esp),%eax;");
    asm("loc_49CCF5: mov 0x20(%esp),%ecx;");
    asm("loc_49CCF9: inc %eax;");
    asm("loc_49CCFA: cmp %ecx,%eax;");
    asm("loc_49CCFC: mov %eax,0x30(%esp);");
    asm("loc_49CD00: jl loc_49CC94;");
    asm("loc_49CD02: flds 0x48(%esp);");
    asm("loc_49CD06: fcomps _data_5C7474;");
    asm("loc_49CD0C: fnstsw %ax;");
    asm("loc_49CD0E: test $0x44,%ah;");
    asm("loc_49CD11: jp loc_49CD1B;");
    asm("loc_49CD13: movl $0x3F800000,0x48(%esp);");
    asm("loc_49CD1B: flds 0x34(%esp);");
    asm("loc_49CD1F: mov _data_6720A0,%eax;");
    asm("loc_49CD24: cmp $1,%eax;");
    asm("loc_49CD27: fdivs 0x48(%esp);");
    asm("loc_49CD2B: fstps 0x34(%esp);");
    asm("loc_49CD2F: je loc_49CD3A;");
    asm("loc_49CD31: cmp $2,%eax;");
    asm("loc_49CD34: jne loc_49CE2F;");
    asm("loc_49CD3A: mov _data_6720A4,%eax;");
    asm("loc_49CD3F: test %eax,%eax;");
    asm("loc_49CD41: jne loc_49CDF9;");
    asm("loc_49CD47: flds 0x34(%esp);");
    asm("loc_49CD4B: fcomps _data_5D2E2C;");
    asm("loc_49CD51: fnstsw %ax;");
    asm("loc_49CD53: test $0x41,%ah;");
    asm("loc_49CD56: jne loc_49DC8A;");
    asm("loc_49CD5C: flds 0x34(%esp);");
    asm("loc_49CD60: fcomps _data_5D2E30;");
    asm("loc_49CD66: fnstsw %ax;");
    asm("loc_49CD68: test $5,%ah;");
    asm("loc_49CD6B: jnp loc_49CE2F;");
    asm("loc_49CD71: jmp loc_49DC8A;");
    asm("loc_49CD76: cmp $5,%eax;");
    asm("loc_49CD79: jne loc_49CDB8;");
    asm("loc_49CD7B: mov 0x1180(%esp),%esi;");
    asm("loc_49CD82: mov (%esi),%edx;");
    asm("loc_49CD84: push $0;");
    asm("loc_49CD86: push $1;");
    asm("loc_49CD88: lea 0x1B(%esp),%ecx;");
    asm("loc_49CD8C: push %ecx;");
    asm("loc_49CD8D: mov %esi,%ecx;");
    asm("loc_49CD8F: movb $0,0x1F(%esp);");
    asm("loc_49CD94: calll *4(%edx);");
    asm("loc_49CD97: push %eax;");
    asm("loc_49CD98: call _sub_4C4DA0;");
    asm("loc_49CD9D: mov (%esi),%eax;");
    asm("loc_49CD9F: add $0x10,%esp;");
    asm("loc_49CDA2: mov %esi,%ecx;");
    asm("loc_49CDA4: calll *0x80(%eax);");
    asm("loc_49CDAA: mov 0x13(%esp),%cl;");
    asm("loc_49CDAE: or %al,%cl;");
    asm("loc_49CDB0: test $4,%cl;");
    asm("loc_49CDB3: jmp loc_49CC2B;");
    asm("loc_49CDB8: test %ecx,%ecx;");
    asm("loc_49CDBA: je loc_49DC8A;");
    asm("loc_49CDC0: mov 0x1180(%esp),%esi;");
    asm("loc_49CDC7: mov (%esi),%edx;");
    asm("loc_49CDC9: mov %esi,%ecx;");
    asm("loc_49CDCB: calll *4(%edx);");
    asm("loc_49CDCE: mov %eax,%edi;");
    asm("loc_49CDD0: mov 0x50(%esp),%eax;");
    asm("loc_49CDD4: xor %ecx,%ecx;");
    asm("loc_49CDD6: test %eax,%eax;");
    asm("loc_49CDD8: jle loc_49DC8A;");
    asm("loc_49CDDE: mov 0xB5C(%ebx),%edx;");
    asm("loc_49CDE4: cmp %edi,(%edx);");
    asm("loc_49CDE6: je loc_49CC31;");
    asm("loc_49CDEC: inc %ecx;");
    asm("loc_49CDED: add $4,%edx;");
    asm("loc_49CDF0: cmp %eax,%ecx;");
    asm("loc_49CDF2: jl loc_49CDE4;");
    asm("loc_49CDF4: jmp loc_49DC8A;");
    asm("loc_49CDF9: cmp $1,%eax;");
    asm("loc_49CDFC: jne loc_49CE15;");
    asm("loc_49CDFE: flds 0x34(%esp);");
    asm("loc_49CE02: fcomps _data_5D2E2C;");
    asm("loc_49CE08: fnstsw %ax;");
    asm("loc_49CE0A: test $0x41,%ah;");
    asm("loc_49CE0D: je loc_49DC8A;");
    asm("loc_49CE13: jmp loc_49CE2F;");
    asm("loc_49CE15: cmp $2,%eax;");
    asm("loc_49CE18: jne loc_49CE2F;");
    asm("loc_49CE1A: flds 0x34(%esp);");
    asm("loc_49CE1E: fcomps _data_5D2E30;");
    asm("loc_49CE24: fnstsw %ax;");
    asm("loc_49CE26: test $5,%ah;");
    asm("loc_49CE29: jnp loc_49DC8A;");
    asm("loc_49CE2F: mov 0x34(%esp),%edx;");
    asm("loc_49CE33: push %edx;");
    asm("loc_49CE34: lea 0x3C(%esp),%eax;");
    asm("loc_49CE38: push %eax;");
    asm("loc_49CE39: call _sub_45A650;");
    asm("loc_49CE3E: mov _data_6720A0,%eax;");
    asm("loc_49CE43: add $8,%esp;");
    asm("loc_49CE46: cmp $5,%eax;");
    asm("loc_49CE49: jne loc_49CE57;");
    asm("loc_49CE4B: mov _data_679BA4,%ecx;");
    asm("loc_49CE51: mov %ecx,0x38(%esp);");
    asm("loc_49CE55: jmp loc_49CE61;");
    asm("loc_49CE57: cmp $2,%eax;");
    asm("loc_49CE5A: je loc_49CE7D;");
    asm("loc_49CE5C: cmp $1,%eax;");
    asm("loc_49CE5F: je loc_49CE7D;");
    asm("loc_49CE61: movzbl 0x3B(%esp),%edx;");
    asm("loc_49CE66: mov %edx,0x5C(%esp);");
    asm("loc_49CE6A: fildl 0x5C(%esp);");
    asm("loc_49CE6E: fmuls _data_5C75E0;");
    asm("loc_49CE74: call _sub_5B7EC0;");
    asm("loc_49CE79: mov %al,0x3B(%esp);");
    asm("loc_49CE7D: mov 0x1180(%esp),%esi;");
    asm("loc_49CE84: mov (%esi),%eax;");
    asm("loc_49CE86: lea 0x14(%esp),%ecx;");
    asm("loc_49CE8A: push %ecx;");
    asm("loc_49CE8B: mov %esi,%ecx;");
    asm("loc_49CE8D: calll *0x28(%eax);");
    asm("loc_49CE90: flds 0xF48(%ebx);");
    asm("loc_49CE96: flds 0x14(%esp);");
    asm("loc_49CE9A: mov %esi,%ecx;");
    asm("loc_49CE9C: fmul %st(1),%st;");
    asm("loc_49CE9E: fstps 0x14(%esp);");
    asm("loc_49CEA2: flds 0x18(%esp);");
    asm("loc_49CEA6: fmul %st(1),%st;");
    asm("loc_49CEA8: fstps 0x18(%esp);");
    asm("loc_49CEAC: fmuls 0x1C(%esp);");
    asm("loc_49CEB0: fstps 0x1C(%esp);");
    asm("loc_49CEB4: mov (%esi),%edx;");
    asm("loc_49CEB6: calll *0xC(%edx);");
    asm("loc_49CEB9: flds 0xF48(%ebx);");
    asm("loc_49CEBF: mov %eax,%esi;");
    asm("loc_49CEC1: mov $0xC,%ecx;");
    asm("loc_49CEC6: lea 0x74(%esp),%edi;");
    asm("loc_49CECA: rep movsl (%esi),(%edi);");
    asm("loc_49CECC: flds 0x98(%esp);");
    asm("loc_49CED3: fmul %st(1),%st;");
    asm("loc_49CED5: fstps 0x98(%esp);");
    asm("loc_49CEDC: flds 0xA0(%esp);");
    asm("loc_49CEE3: fmul %st(1),%st;");
    asm("loc_49CEE5: fstps 0xA0(%esp);");
    asm("loc_49CEEC: mov 0x1180(%esp),%ecx;");
    asm("loc_49CEF3: fstp %st(0);");
    asm("loc_49CEF5: movl $0,0x9C(%esp);");
    asm("loc_49CF00: mov (%ecx),%eax;");
    asm("loc_49CF02: calll *0x18(%eax);");
    asm("loc_49CF05: mov %eax,0xD8(%esp);");
    asm("loc_49CF0C: dec %eax;");
    asm("loc_49CF0D: cmp $3,%eax;");
    asm("loc_49CF10: ja loc_49DC8A;");
    asm("loc_49CF16: jmpl *_jmp_49DCB0(,%eax,4);");
    asm("loc_49CF1D: flds 0x14(%esp);");
    asm("loc_49CF21: mov _data_67209C,%eax;");
    asm("loc_49CF26: test %eax,%eax;");
    asm("loc_49CF28: fmuls _data_5C75E0;");
    asm("loc_49CF2E: mov $4,%esi;");
    asm("loc_49CF33: mov %esi,0x20(%esp);");
    asm("loc_49CF37: fstps 0x14(%esp);");
    asm("loc_49CF3B: flds 0x18(%esp);");
    asm("loc_49CF3F: fmuls _data_5C75E0;");
    asm("loc_49CF45: fstps 0x18(%esp);");
    asm("loc_49CF49: flds 0x1C(%esp);");
    asm("loc_49CF4D: fmuls _data_5C75E0;");
    asm("loc_49CF53: fstps 0x1C(%esp);");
    asm("loc_49CF57: jne loc_49CF63;");
    asm("loc_49CF59: call _sub_5B73E0;");
    asm("loc_49CF5E: mov %eax,_data_67209C;");
    asm("loc_49CF63: mov (%eax),%ecx;");
    asm("loc_49CF65: lea 0x14(%esp),%edx;");
    asm("loc_49CF69: push %edx;");
    asm("loc_49CF6A: lea 0x78(%esp),%edx;");
    asm("loc_49CF6E: push %edx;");
    asm("loc_49CF6F: lea 0x220(%esp),%edx;");
    asm("loc_49CF76: push %edx;");
    asm("loc_49CF77: push %eax;");
    asm("loc_49CF78: calll *0x28(%ecx);");
    asm("loc_49CF7B: flds 0x14(%esp);");
    asm("loc_49CF7F: mov 0x218(%esp),%eax;");
    asm("loc_49CF86: fchs;");
    asm("loc_49CF88: mov 0x21C(%esp),%ecx;");
    asm("loc_49CF8F: mov 0x220(%esp),%edx;");
    asm("loc_49CF96: fstps 0x110(%esp);");
    asm("loc_49CF9D: flds 0x18(%esp);");
    asm("loc_49CFA1: mov %eax,0x278(%esp);");
    asm("loc_49CFA8: mov _data_67209C,%eax;");
    asm("loc_49CFAD: test %eax,%eax;");
    asm("loc_49CFAF: fstps 0x114(%esp);");
    asm("loc_49CFB6: flds 0x1C(%esp);");
    asm("loc_49CFBA: mov %ecx,0x27C(%esp);");
    asm("loc_49CFC1: fstps 0x118(%esp);");
    asm("loc_49CFC8: mov %edx,0x280(%esp);");
    asm("loc_49CFCF: jne loc_49CFDB;");
    asm("loc_49CFD1: call _sub_5B73E0;");
    asm("loc_49CFD6: mov %eax,_data_67209C;");
    asm("loc_49CFDB: mov (%eax),%ecx;");
    asm("loc_49CFDD: lea 0x110(%esp),%edx;");
    asm("loc_49CFE4: push %edx;");
    asm("loc_49CFE5: lea 0x78(%esp),%edx;");
    asm("loc_49CFE9: push %edx;");
    asm("loc_49CFEA: lea 0x1F0(%esp),%edx;");
    asm("loc_49CFF1: push %edx;");
    asm("loc_49CFF2: push %eax;");
    asm("loc_49CFF3: calll *0x28(%ecx);");
    asm("loc_49CFF6: flds 0x14(%esp);");
    asm("loc_49CFFA: mov 0x1E8(%esp),%eax;");
    asm("loc_49D001: fchs;");
    asm("loc_49D003: mov 0x1EC(%esp),%ecx;");
    asm("loc_49D00A: mov 0x1F0(%esp),%edx;");
    asm("loc_49D011: fstps 0x128(%esp);");
    asm("loc_49D018: flds 0x18(%esp);");
    asm("loc_49D01C: mov %eax,0x284(%esp);");
    asm("loc_49D023: mov _data_67209C,%eax;");
    asm("loc_49D028: test %eax,%eax;");
    asm("loc_49D02A: fstps 0x12C(%esp);");
    asm("loc_49D031: flds 0x1C(%esp);");
    asm("loc_49D035: mov %ecx,0x288(%esp);");
    asm("loc_49D03C: fchs;");
    asm("loc_49D03E: mov %edx,0x28C(%esp);");
    asm("loc_49D045: fstps 0x130(%esp);");
    asm("loc_49D04C: jne loc_49D058;");
    asm("loc_49D04E: call _sub_5B73E0;");
    asm("loc_49D053: mov %eax,_data_67209C;");
    asm("loc_49D058: mov (%eax),%ecx;");
    asm("loc_49D05A: lea 0x128(%esp),%edx;");
    asm("loc_49D061: push %edx;");
    asm("loc_49D062: lea 0x78(%esp),%edx;");
    asm("loc_49D066: push %edx;");
    asm("loc_49D067: lea 0x208(%esp),%edx;");
    asm("loc_49D06E: push %edx;");
    asm("loc_49D06F: push %eax;");
    asm("loc_49D070: calll *0x28(%ecx);");
    asm("loc_49D073: flds 0x14(%esp);");
    asm("loc_49D077: mov 0x200(%esp),%eax;");
    asm("loc_49D07E: mov 0x204(%esp),%ecx;");
    asm("loc_49D085: mov 0x208(%esp),%edx;");
    asm("loc_49D08C: fstps 0x140(%esp);");
    asm("loc_49D093: flds 0x18(%esp);");
    asm("loc_49D097: mov %eax,0x290(%esp);");
    asm("loc_49D09E: mov _data_67209C,%eax;");
    asm("loc_49D0A3: test %eax,%eax;");
    asm("loc_49D0A5: fstps 0x144(%esp);");
    asm("loc_49D0AC: flds 0x1C(%esp);");
    asm("loc_49D0B0: mov %ecx,0x294(%esp);");
    asm("loc_49D0B7: fchs;");
    asm("loc_49D0B9: mov %edx,0x298(%esp);");
    asm("loc_49D0C0: fstps 0x148(%esp);");
    asm("loc_49D0C7: jne loc_49D0D3;");
    asm("loc_49D0C9: call _sub_5B73E0;");
    asm("loc_49D0CE: mov %eax,_data_67209C;");
    asm("loc_49D0D3: mov (%eax),%ecx;");
    asm("loc_49D0D5: lea 0x140(%esp),%edx;");
    asm("loc_49D0DC: push %edx;");
    asm("loc_49D0DD: lea 0x78(%esp),%edx;");
    asm("loc_49D0E1: push %edx;");
    asm("loc_49D0E2: lea 0x214(%esp),%edx;");
    asm("loc_49D0E9: push %edx;");
    asm("loc_49D0EA: push %eax;");
    asm("loc_49D0EB: calll *0x28(%ecx);");
    asm("loc_49D0EE: mov 0x20C(%esp),%eax;");
    asm("loc_49D0F5: mov 0x210(%esp),%ecx;");
    asm("loc_49D0FC: mov 0x214(%esp),%edx;");
    asm("loc_49D103: mov %eax,0x29C(%esp);");
    asm("loc_49D10A: mov %ecx,0x2A0(%esp);");
    asm("loc_49D111: mov %edx,0x2A4(%esp);");
    asm("loc_49D118: jmp loc_49D881;");
    asm("loc_49D11D: movl $0,0x58(%esp);");
    asm("loc_49D125: lea 0x278(%esp),%esi;");
    asm("loc_49D12C: mov $0x10,%edi;");
    asm("loc_49D131: flds 0x58(%esp);");
    asm("loc_49D135: mov _data_67209C,%eax;");
    asm("loc_49D13A: test %eax,%eax;");
    asm("loc_49D13C: fsin;");
    asm("loc_49D13E: movl $0,0x15C(%esp);");
    asm("loc_49D149: fmuls 0x14(%esp);");
    asm("loc_49D14D: fstps 0x158(%esp);");
    asm("loc_49D154: flds 0x58(%esp);");
    asm("loc_49D158: fcos;");
    asm("loc_49D15A: fmuls 0x14(%esp);");
    asm("loc_49D15E: fstps 0x160(%esp);");
    asm("loc_49D165: jne loc_49D171;");
    asm("loc_49D167: call _sub_5B73E0;");
    asm("loc_49D16C: mov %eax,_data_67209C;");
    asm("loc_49D171: mov (%eax),%ecx;");
    asm("loc_49D173: lea 0x158(%esp),%edx;");
    asm("loc_49D17A: push %edx;");
    asm("loc_49D17B: lea 0x78(%esp),%edx;");
    asm("loc_49D17F: push %edx;");
    asm("loc_49D180: lea 0x1FC(%esp),%edx;");
    asm("loc_49D187: push %edx;");
    asm("loc_49D188: push %eax;");
    asm("loc_49D189: calll *0x28(%ecx);");
    asm("loc_49D18C: flds 0x58(%esp);");
    asm("loc_49D190: mov 0x1F4(%esp),%ecx;");
    asm("loc_49D197: fadds _data_5D3F00;");
    asm("loc_49D19D: mov 0x1F8(%esp),%edx;");
    asm("loc_49D1A4: mov %esi,%eax;");
    asm("loc_49D1A6: mov %ecx,(%eax);");
    asm("loc_49D1A8: fstps 0x58(%esp);");
    asm("loc_49D1AC: mov 0x1FC(%esp),%ecx;");
    asm("loc_49D1B3: mov %edx,4(%eax);");
    asm("loc_49D1B6: add $0xC,%esi;");
    asm("loc_49D1B9: dec %edi;");
    asm("loc_49D1BA: mov %ecx,8(%eax);");
    asm("loc_49D1BD: jne loc_49D131;");
    asm("loc_49D1C3: mov 0x98(%esp),%edx;");
    asm("loc_49D1CA: mov 0x9C(%esp),%eax;");
    asm("loc_49D1D1: mov 0xA0(%esp),%ecx;");
    asm("loc_49D1D8: mov %edx,0x338(%esp);");
    asm("loc_49D1DF: mov %eax,0x33C(%esp);");
    asm("loc_49D1E6: mov %ecx,0x340(%esp);");
    asm("loc_49D1ED: mov $0x11,%esi;");
    asm("loc_49D1F2: jmp loc_49D87D;");
    asm("loc_49D1F7: mov 0x1180(%esp),%edi;");
    asm("loc_49D1FE: movl $0,0x54(%esp);");
    asm("loc_49D206: lea 0x278(%esp),%esi;");
    asm("loc_49D20D: movl $0x10,0x30(%esp);");
    asm("loc_49D215: flds 0x54(%esp);");
    asm("loc_49D219: mov (%edi),%edx;");
    asm("loc_49D21B: fsin;");
    asm("loc_49D21D: lea 0x24(%esp),%eax;");
    asm("loc_49D221: push %eax;");
    asm("loc_49D222: mov %edi,%ecx;");
    asm("loc_49D224: movl $0,0x2C(%esp);");
    asm("loc_49D22C: fstps 0x28(%esp);");
    asm("loc_49D230: flds 0x58(%esp);");
    asm("loc_49D234: fcos;");
    asm("loc_49D236: fstps 0x30(%esp);");
    asm("loc_49D23A: calll *0x40(%edx);");
    asm("loc_49D23D: fmuls 0xF48(%ebx);");
    asm("loc_49D243: flds 0x24(%esp);");
    asm("loc_49D247: mov %esi,%ecx;");
    asm("loc_49D249: add $0xC,%esi;");
    asm("loc_49D24C: fmul %st(1),%st;");
    asm("loc_49D24E: flds 0x28(%esp);");
    asm("loc_49D252: fmul %st(2),%st;");
    asm("loc_49D254: fstps 0x28(%esp);");
    asm("loc_49D258: flds 0x2C(%esp);");
    asm("loc_49D25C: fmul %st(2),%st;");
    asm("loc_49D25E: fstps 0x2C(%esp);");
    asm("loc_49D262: fadds 0x98(%esp);");
    asm("loc_49D269: fstps 0xE8(%esp);");
    asm("loc_49D270: mov 0xE8(%esp),%edx;");
    asm("loc_49D277: fstp %st(0);");
    asm("loc_49D279: mov %edx,(%ecx);");
    asm("loc_49D27B: flds 0x28(%esp);");
    asm("loc_49D27F: fadds 0x9C(%esp);");
    asm("loc_49D286: fstps 0xEC(%esp);");
    asm("loc_49D28D: flds 0x2C(%esp);");
    asm("loc_49D291: mov 0xEC(%esp),%eax;");
    asm("loc_49D298: fadds 0xA0(%esp);");
    asm("loc_49D29F: mov %eax,4(%ecx);");
    asm("loc_49D2A2: mov 0x30(%esp),%eax;");
    asm("loc_49D2A6: dec %eax;");
    asm("loc_49D2A7: fstps 0xF0(%esp);");
    asm("loc_49D2AE: flds 0x54(%esp);");
    asm("loc_49D2B2: mov 0xF0(%esp),%edx;");
    asm("loc_49D2B9: fadds _data_5D3F00;");
    asm("loc_49D2BF: mov %edx,8(%ecx);");
    asm("loc_49D2C2: mov %eax,0x30(%esp);");
    asm("loc_49D2C6: fstps 0x54(%esp);");
    asm("loc_49D2CA: jne loc_49D215;");
    asm("loc_49D2D0: mov 0x98(%esp),%eax;");
    asm("loc_49D2D7: mov 0x9C(%esp),%ecx;");
    asm("loc_49D2DE: mov 0xA0(%esp),%edx;");
    asm("loc_49D2E5: mov %eax,0x338(%esp);");
    asm("loc_49D2EC: mov %ecx,0x33C(%esp);");
    asm("loc_49D2F3: mov %edx,0x340(%esp);");
    asm("loc_49D2FA: mov $0x11,%esi;");
    asm("loc_49D2FF: jmp loc_49D87D;");
    asm("loc_49D304: flds 0x18(%esp);");
    asm("loc_49D308: mov 0x478(%ebx),%al;");
    asm("loc_49D30E: test %al,%al;");
    asm("loc_49D310: fmuls _data_5C75E0;");
    asm("loc_49D316: fstps 0x18(%esp);");
    asm("loc_49D31A: jne loc_49D325;");
    asm("loc_49D31C: cmpl $2,0x7D0(%ebx);");
    asm("loc_49D323: jne loc_49D347;");
    asm("loc_49D325: flds 0x3F8(%ebx);");
    asm("loc_49D32B: fsubs _data_5C75DC;");
    asm("loc_49D331: fmuls _data_5D3E98;");
    asm("loc_49D337: fadd %st,%st(0);");
    asm("loc_49D339: fadds _data_5C75DC;");
    asm("loc_49D33F: fdivrs 0x14(%esp);");
    asm("loc_49D343: fstps 0x14(%esp);");
    asm("loc_49D347: flds 0x14(%esp);");
    asm("loc_49D34B: mov _data_67209C,%eax;");
    asm("loc_49D350: test %eax,%eax;");
    asm("loc_49D352: fstps 0x170(%esp);");
    asm("loc_49D359: flds 0x18(%esp);");
    asm("loc_49D35D: movl $0,0x178(%esp);");
    asm("loc_49D368: fstps 0x174(%esp);");
    asm("loc_49D36F: jne loc_49D37B;");
    asm("loc_49D371: call _sub_5B73E0;");
    asm("loc_49D376: mov %eax,_data_67209C;");
    asm("loc_49D37B: mov (%eax),%ecx;");
    asm("loc_49D37D: lea 0x170(%esp),%edx;");
    asm("loc_49D384: push %edx;");
    asm("loc_49D385: lea 0x78(%esp),%edx;");
    asm("loc_49D389: push %edx;");
    asm("loc_49D38A: lea 0x22C(%esp),%edx;");
    asm("loc_49D391: push %edx;");
    asm("loc_49D392: push %eax;");
    asm("loc_49D393: calll *0x28(%ecx);");
    asm("loc_49D396: flds 0x14(%esp);");
    asm("loc_49D39A: mov 0x224(%esp),%eax;");
    asm("loc_49D3A1: fchs;");
    asm("loc_49D3A3: mov 0x228(%esp),%ecx;");
    asm("loc_49D3AA: mov 0x22C(%esp),%edx;");
    asm("loc_49D3B1: fstps 0x188(%esp);");
    asm("loc_49D3B8: flds 0x18(%esp);");
    asm("loc_49D3BC: mov %eax,0x278(%esp);");
    asm("loc_49D3C3: mov _data_67209C,%eax;");
    asm("loc_49D3C8: test %eax,%eax;");
    asm("loc_49D3CA: fstps 0x18C(%esp);");
    asm("loc_49D3D1: mov %ecx,0x27C(%esp);");
    asm("loc_49D3D8: mov %edx,0x280(%esp);");
    asm("loc_49D3DF: movl $0,0x190(%esp);");
    asm("loc_49D3EA: jne loc_49D3F6;");
    asm("loc_49D3EC: call _sub_5B73E0;");
    asm("loc_49D3F1: mov %eax,_data_67209C;");
    asm("loc_49D3F6: mov (%eax),%ecx;");
    asm("loc_49D3F8: lea 0x188(%esp),%edx;");
    asm("loc_49D3FF: push %edx;");
    asm("loc_49D400: lea 0x78(%esp),%edx;");
    asm("loc_49D404: push %edx;");
    asm("loc_49D405: lea 0x1B4(%esp),%edx;");
    asm("loc_49D40C: push %edx;");
    asm("loc_49D40D: push %eax;");
    asm("loc_49D40E: calll *0x28(%ecx);");
    asm("loc_49D411: flds 0x14(%esp);");
    asm("loc_49D415: mov 0x1AC(%esp),%eax;");
    asm("loc_49D41C: fchs;");
    asm("loc_49D41E: mov 0x1B0(%esp),%ecx;");
    asm("loc_49D425: mov 0x1B4(%esp),%edx;");
    asm("loc_49D42C: fstps 0x1A0(%esp);");
    asm("loc_49D433: flds 0x18(%esp);");
    asm("loc_49D437: mov %eax,0x284(%esp);");
    asm("loc_49D43E: mov _data_67209C,%eax;");
    asm("loc_49D443: fchs;");
    asm("loc_49D445: test %eax,%eax;");
    asm("loc_49D447: fstps 0x1A4(%esp);");
    asm("loc_49D44E: mov %ecx,0x288(%esp);");
    asm("loc_49D455: mov %edx,0x28C(%esp);");
    asm("loc_49D45C: movl $0,0x1A8(%esp);");
    asm("loc_49D467: jne loc_49D473;");
    asm("loc_49D469: call _sub_5B73E0;");
    asm("loc_49D46E: mov %eax,_data_67209C;");
    asm("loc_49D473: mov (%eax),%ecx;");
    asm("loc_49D475: lea 0x1A0(%esp),%edx;");
    asm("loc_49D47C: push %edx;");
    asm("loc_49D47D: lea 0x78(%esp),%edx;");
    asm("loc_49D481: push %edx;");
    asm("loc_49D482: lea 0x10C(%esp),%edx;");
    asm("loc_49D489: push %edx;");
    asm("loc_49D48A: push %eax;");
    asm("loc_49D48B: calll *0x28(%ecx);");
    asm("loc_49D48E: flds 0x14(%esp);");
    asm("loc_49D492: mov 0x104(%esp),%eax;");
    asm("loc_49D499: mov 0x108(%esp),%ecx;");
    asm("loc_49D4A0: mov 0x10C(%esp),%edx;");
    asm("loc_49D4A7: fstps 0x11C(%esp);");
    asm("loc_49D4AE: flds 0x18(%esp);");
    asm("loc_49D4B2: mov %eax,0x290(%esp);");
    asm("loc_49D4B9: mov _data_67209C,%eax;");
    asm("loc_49D4BE: fchs;");
    asm("loc_49D4C0: test %eax,%eax;");
    asm("loc_49D4C2: fstps 0x120(%esp);");
    asm("loc_49D4C9: mov %ecx,0x294(%esp);");
    asm("loc_49D4D0: mov %edx,0x298(%esp);");
    asm("loc_49D4D7: movl $0,0x124(%esp);");
    asm("loc_49D4E2: jne loc_49D4EE;");
    asm("loc_49D4E4: call _sub_5B73E0;");
    asm("loc_49D4E9: mov %eax,_data_67209C;");
    asm("loc_49D4EE: mov (%eax),%ecx;");
    asm("loc_49D4F0: lea 0x11C(%esp),%edx;");
    asm("loc_49D4F7: push %edx;");
    asm("loc_49D4F8: lea 0x78(%esp),%edx;");
    asm("loc_49D4FC: push %edx;");
    asm("loc_49D4FD: lea 0x13C(%esp),%edx;");
    asm("loc_49D504: push %edx;");
    asm("loc_49D505: push %eax;");
    asm("loc_49D506: calll *0x28(%ecx);");
    asm("loc_49D509: flds 0x78(%esp);");
    asm("loc_49D50D: flds 0x84(%esp);");
    asm("loc_49D514: mov 0x134(%esp),%eax;");
    asm("loc_49D51B: flds 0x90(%esp);");
    asm("loc_49D522: mov 0x138(%esp),%ecx;");
    asm("loc_49D529: fstps 0x274(%esp);");
    asm("loc_49D530: fxch;");
    asm("loc_49D532: mov 0x13C(%esp),%edx;");
    asm("loc_49D539: fmuls 0x18(%esp);");
    asm("loc_49D53D: mov %eax,0x29C(%esp);");
    asm("loc_49D544: mov %ecx,0x2A0(%esp);");
    asm("loc_49D54B: mov %edx,0x2A4(%esp);");
    asm("loc_49D552: fstps 0x260(%esp);");
    asm("loc_49D559: movl $0x3F800000,0x250(%esp);");
    asm("loc_49D564: fmuls 0x18(%esp);");
    asm("loc_49D568: movl $0x3F800000,0x240(%esp);");
    asm("loc_49D573: flds 0x274(%esp);");
    asm("loc_49D57A: movl $0x3F800000,0x230(%esp);");
    asm("loc_49D585: fmuls 0x18(%esp);");
    asm("loc_49D589: movl $0,0x24C(%esp);");
    asm("loc_49D594: flds 0x260(%esp);");
    asm("loc_49D59B: movl $0,0x248(%esp);");
    asm("loc_49D5A6: fadds 0x98(%esp);");
    asm("loc_49D5AD: movl $0,0x244(%esp);");
    asm("loc_49D5B8: movl $0,0x23C(%esp);");
    asm("loc_49D5C3: movl $0,0x238(%esp);");
    asm("loc_49D5CE: fstps 0xA8(%esp);");
    asm("loc_49D5D5: fld %st(1);");
    asm("loc_49D5D7: mov 0xA8(%esp),%eax;");
    asm("loc_49D5DE: fadds 0x9C(%esp);");
    asm("loc_49D5E5: movl $0,0x234(%esp);");
    asm("loc_49D5F0: movl $0x3F800000,0x1D8(%esp);");
    asm("loc_49D5FB: movl $0x3F800000,0x1C8(%esp);");
    asm("loc_49D606: fstps 0xAC(%esp);");
    asm("loc_49D60D: flds 0xA0(%esp);");
    asm("loc_49D614: mov 0xAC(%esp),%ecx;");
    asm("loc_49D61B: fadd %st(1),%st;");
    asm("loc_49D61D: movl $0x3F800000,0x1B8(%esp);");
    asm("loc_49D628: movl $0,0x1D4(%esp);");
    asm("loc_49D633: movl $0,0x1D0(%esp);");
    asm("loc_49D63E: fstps 0xB0(%esp);");
    asm("loc_49D645: flds 0x98(%esp);");
    asm("loc_49D64C: mov 0xB0(%esp),%edx;");
    asm("loc_49D653: fsubs 0x260(%esp);");
    asm("loc_49D65A: movl $0,0x1CC(%esp);");
    asm("loc_49D665: movl $0,0x1C4(%esp);");
    asm("loc_49D670: movl $0,0x1C0(%esp);");
    asm("loc_49D67B: fstps 0xBC(%esp);");
    asm("loc_49D682: flds 0x9C(%esp);");
    asm("loc_49D689: movl $0,0x1BC(%esp);");
    asm("loc_49D694: fsub %st(2),%st;");
    asm("loc_49D696: fstps 0xC0(%esp);");
    asm("loc_49D69D: flds 0xA0(%esp);");
    asm("loc_49D6A4: fsub %st(1),%st;");
    asm("loc_49D6A6: mov %eax,0x254(%esp);");
    asm("loc_49D6AD: mov %ecx,0x258(%esp);");
    asm("loc_49D6B4: mov %edx,0x25C(%esp);");
    asm("loc_49D6BB: fstps 0xC4(%esp);");
    asm("loc_49D6C2: fstp %st(0);");
    asm("loc_49D6C4: fstp %st(0);");
    asm("loc_49D6C6: mov 0xBC(%esp),%eax;");
    asm("loc_49D6CD: mov 0xC0(%esp),%ecx;");
    asm("loc_49D6D4: mov 0xC4(%esp),%edx;");
    asm("loc_49D6DB: mov %eax,0x1DC(%esp);");
    asm("loc_49D6E2: mov %ecx,0x1E0(%esp);");
    asm("loc_49D6E9: mov %edx,0x1E4(%esp);");
    asm("loc_49D6F0: movl $0,0x4C(%esp);");
    asm("loc_49D6F8: lea 0x374(%esp),%esi;");
    asm("loc_49D6FF: mov $0x10,%edi;");
    asm("loc_49D704: flds 0x4C(%esp);");
    asm("loc_49D708: mov _data_67209C,%eax;");
    asm("loc_49D70D: test %eax,%eax;");
    asm("loc_49D70F: fsin;");
    asm("loc_49D711: movl $0,0x150(%esp);");
    asm("loc_49D71C: fstl 0xB4(%esp);");
    asm("loc_49D723: fmuls 0x14(%esp);");
    asm("loc_49D727: fstps 0x14C(%esp);");
    asm("loc_49D72E: flds 0x4C(%esp);");
    asm("loc_49D732: fcos;");
    asm("loc_49D734: fstl 0x5C(%esp);");
    asm("loc_49D738: fmuls 0x14(%esp);");
    asm("loc_49D73C: fstps 0x154(%esp);");
    asm("loc_49D743: jne loc_49D74F;");
    asm("loc_49D745: call _sub_5B73E0;");
    asm("loc_49D74A: mov %eax,_data_67209C;");
    asm("loc_49D74F: mov (%eax),%ecx;");
    asm("loc_49D751: lea 0x14C(%esp),%edx;");
    asm("loc_49D758: push %edx;");
    asm("loc_49D759: lea 0x234(%esp),%edx;");
    asm("loc_49D760: push %edx;");
    asm("loc_49D761: lea 0x16C(%esp),%edx;");
    asm("loc_49D768: push %edx;");
    asm("loc_49D769: push %eax;");
    asm("loc_49D76A: calll *0x28(%ecx);");
    asm("loc_49D76D: flds 0x14(%esp);");
    asm("loc_49D771: fmull 0xB4(%esp);");
    asm("loc_49D778: mov 0x164(%esp),%ecx;");
    asm("loc_49D77F: mov 0x168(%esp),%edx;");
    asm("loc_49D786: lea -0xCC(%esi),%eax;");
    asm("loc_49D78C: mov %ecx,(%eax);");
    asm("loc_49D78E: mov 0x16C(%esp),%ecx;");
    asm("loc_49D795: fstps 0x17C(%esp);");
    asm("loc_49D79C: flds 0x14(%esp);");
    asm("loc_49D7A0: mov %edx,4(%eax);");
    asm("loc_49D7A3: fmull 0x5C(%esp);");
    asm("loc_49D7A7: mov %ecx,8(%eax);");
    asm("loc_49D7AA: mov _data_67209C,%eax;");
    asm("loc_49D7AF: test %eax,%eax;");
    asm("loc_49D7B1: fstps 0x184(%esp);");
    asm("loc_49D7B8: movl $0,0x180(%esp);");
    asm("loc_49D7C3: jne loc_49D7CF;");
    asm("loc_49D7C5: call _sub_5B73E0;");
    asm("loc_49D7CA: mov %eax,_data_67209C;");
    asm("loc_49D7CF: mov (%eax),%edx;");
    asm("loc_49D7D1: lea 0x17C(%esp),%ecx;");
    asm("loc_49D7D8: push %ecx;");
    asm("loc_49D7D9: lea 0x1BC(%esp),%ecx;");
    asm("loc_49D7E0: push %ecx;");
    asm("loc_49D7E1: lea 0x19C(%esp),%ecx;");
    asm("loc_49D7E8: push %ecx;");
    asm("loc_49D7E9: push %eax;");
    asm("loc_49D7EA: calll *0x28(%edx);");
    asm("loc_49D7ED: flds 0x4C(%esp);");
    asm("loc_49D7F1: mov 0x194(%esp),%eax;");
    asm("loc_49D7F8: fadds _data_5D3F00;");
    asm("loc_49D7FE: mov 0x198(%esp),%ecx;");
    asm("loc_49D805: mov %esi,%edx;");
    asm("loc_49D807: mov %eax,(%edx);");
    asm("loc_49D809: fstps 0x4C(%esp);");
    asm("loc_49D80D: mov 0x19C(%esp),%eax;");
    asm("loc_49D814: mov %ecx,4(%edx);");
    asm("loc_49D817: add $0xC,%esi;");
    asm("loc_49D81A: dec %edi;");
    asm("loc_49D81B: mov %eax,8(%edx);");
    asm("loc_49D81E: jne loc_49D704;");
    asm("loc_49D824: mov 0x254(%esp),%ecx;");
    asm("loc_49D82B: mov 0x258(%esp),%edx;");
    asm("loc_49D832: mov 0x25C(%esp),%eax;");
    asm("loc_49D839: mov %ecx,0x368(%esp);");
    asm("loc_49D840: mov 0x1DC(%esp),%ecx;");
    asm("loc_49D847: mov %edx,0x36C(%esp);");
    asm("loc_49D84E: mov 0x1E0(%esp),%edx;");
    asm("loc_49D855: mov %eax,0x370(%esp);");
    asm("loc_49D85C: mov 0x1E4(%esp),%eax;");
    asm("loc_49D863: mov %ecx,0x434(%esp);");
    asm("loc_49D86A: mov %edx,0x438(%esp);");
    asm("loc_49D871: mov %eax,0x43C(%esp);");
    asm("loc_49D878: mov $0x26,%esi;");
    asm("loc_49D87D: mov %esi,0x20(%esp);");
    asm("loc_49D881: test %esi,%esi;");
    asm("loc_49D883: jle loc_49D963;");
    asm("loc_49D889: flds 0x4A8(%ebx);");
    asm("loc_49D88F: lea 0x278(%esp),%eax;");
    asm("loc_49D896: fld %st(0);");
    asm("loc_49D898: mov %esi,%ecx;");
    asm("loc_49D89A: fadd %st(1),%st;");
    asm("loc_49D89C: fstps 0x30(%esp);");
    asm("loc_49D8A0: flds 0x4AC(%ebx);");
    asm("loc_49D8A6: fld %st(0);");
    asm("loc_49D8A8: fadd %st(1),%st;");
    asm("loc_49D8AA: fstps 0xB4(%esp);");
    asm("loc_49D8B1: fxch;");
    asm("loc_49D8B3: fstps 0x5C(%esp);");
    asm("loc_49D8B7: flds 0x5C(%esp);");
    asm("loc_49D8BB: mov 0x3C(%esp),%edx;");
    asm("loc_49D8BF: fadds (%eax);");
    asm("loc_49D8C1: mov %edx,0xF8(%esp);");
    asm("loc_49D8C8: mov 0x40(%esp),%edx;");
    asm("loc_49D8CC: mov %edx,0xFC(%esp);");
    asm("loc_49D8D3: fdivs 0x30(%esp);");
    asm("loc_49D8D7: mov 0x44(%esp),%edx;");
    asm("loc_49D8DB: mov %edx,0x100(%esp);");
    asm("loc_49D8E2: mov %eax,%edx;");
    asm("loc_49D8E4: add $0xC,%eax;");
    asm("loc_49D8E7: dec %ecx;");
    asm("loc_49D8E8: fmuls 0x3C(%esp);");
    asm("loc_49D8EC: fld %st(1);");
    asm("loc_49D8EE: fadds -4(%eax);");
    asm("loc_49D8F1: fdivs 0xB4(%esp);");
    asm("loc_49D8F8: fsubrl _data_5C89B8;");
    asm("loc_49D8FE: fmuls 0xFC(%esp);");
    asm("loc_49D905: flds 0xCC(%esp);");
    asm("loc_49D90C: fadd %st(2),%st;");
    asm("loc_49D90E: fstps 0xDC(%esp);");
    asm("loc_49D915: flds 0xD0(%esp);");
    asm("loc_49D91C: mov 0xDC(%esp),%edi;");
    asm("loc_49D923: fadd %st(1),%st;");
    asm("loc_49D925: mov %edi,(%edx);");
    asm("loc_49D927: fstps 0xE0(%esp);");
    asm("loc_49D92E: mov 0xE0(%esp),%edi;");
    asm("loc_49D935: fstp %st(0);");
    asm("loc_49D937: mov %edi,4(%edx);");
    asm("loc_49D93A: fstp %st(0);");
    asm("loc_49D93C: flds 0x100(%esp);");
    asm("loc_49D943: fadds 0xD4(%esp);");
    asm("loc_49D94A: fstps 0xE4(%esp);");
    asm("loc_49D951: mov 0xE4(%esp),%edi;");
    asm("loc_49D958: mov %edi,8(%edx);");
    asm("loc_49D95B: jne loc_49D8B7;");
    asm("loc_49D961: fstp %st(0);");
    asm("loc_49D963: movzbl 0x3B(%esp),%eax;");
    asm("loc_49D968: movzbl 0x38(%esp),%ecx;");
    asm("loc_49D96D: movzbl 0x39(%esp),%edx;");
    asm("loc_49D972: shl $8,%eax;");
    asm("loc_49D975: or %ecx,%eax;");
    asm("loc_49D977: movzbl 0x3A(%esp),%ecx;");
    asm("loc_49D97C: shl $8,%eax;");
    asm("loc_49D97F: or %edx,%eax;");
    asm("loc_49D981: mov 0xEE8(%ebx),%edx;");
    asm("loc_49D987: shl $8,%eax;");
    asm("loc_49D98A: add %esi,%edx;");
    asm("loc_49D98C: or %ecx,%eax;");
    asm("loc_49D98E: cmp $0x1770,%edx;");
    asm("loc_49D994: jge loc_49DCA1;");
    asm("loc_49D99A: test %esi,%esi;");
    asm("loc_49D99C: jle loc_49D9EB;");
    asm("loc_49D99E: lea 0x278(%esp),%ecx;");
    asm("loc_49D9A5: mov %ecx,0x30(%esp);");
    asm("loc_49D9A9: mov 0x6C(%esp),%ecx;");
    asm("loc_49D9AD: mov %esi,0x5C(%esp);");
    asm("loc_49D9B1: mov 0x30(%esp),%edx;");
    asm("loc_49D9B5: mov (%edx),%edi;");
    asm("loc_49D9B7: mov %ecx,%esi;");
    asm("loc_49D9B9: mov %edi,(%esi);");
    asm("loc_49D9BB: mov 4(%edx),%edi;");
    asm("loc_49D9BE: mov 8(%edx),%edx;");
    asm("loc_49D9C1: mov %edi,4(%esi);");
    asm("loc_49D9C4: mov %edx,8(%esi);");
    asm("loc_49D9C7: mov 0x30(%esp),%esi;");
    asm("loc_49D9CB: mov 0x5C(%esp),%edx;");
    asm("loc_49D9CF: mov %eax,0xC(%ecx);");
    asm("loc_49D9D2: add $0xC,%esi;");
    asm("loc_49D9D5: add $0x10,%ecx;");
    asm("loc_49D9D8: dec %edx;");
    asm("loc_49D9D9: mov %esi,0x30(%esp);");
    asm("loc_49D9DD: mov %edx,0x5C(%esp);");
    asm("loc_49D9E1: jne loc_49D9B1;");
    asm("loc_49D9E3: mov 0x20(%esp),%esi;");
    asm("loc_49D9E7: mov %ecx,0x6C(%esp);");
    asm("loc_49D9EB: cmp $4,%esi;");
    asm("loc_49D9EE: jne loc_49DA57;");
    asm("loc_49D9F0: addl $6,0xEEC(%ebx);");
    asm("loc_49D9F7: mov 0xEE8(%ebx),%ax;");
    asm("loc_49D9FE: mov %ax,(%ebp);");
    asm("loc_49DA02: mov 0xEE8(%ebx),%cx;");
    asm("loc_49DA09: add $2,%ebp;");
    asm("loc_49DA0C: inc %cx;");
    asm("loc_49DA0E: mov %cx,(%ebp);");
    asm("loc_49DA12: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DA19: add $2,%ebp;");
    asm("loc_49DA1C: add $2,%dx;");
    asm("loc_49DA20: mov %dx,(%ebp);");
    asm("loc_49DA24: mov 0xEE8(%ebx),%ax;");
    asm("loc_49DA2B: add $2,%ebp;");
    asm("loc_49DA2E: mov %ax,(%ebp);");
    asm("loc_49DA32: mov 0xEE8(%ebx),%cx;");
    asm("loc_49DA39: add $2,%ebp;");
    asm("loc_49DA3C: add $2,%cx;");
    asm("loc_49DA40: mov %cx,(%ebp);");
    asm("loc_49DA44: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DA4B: add $2,%ebp;");
    asm("loc_49DA4E: add $3,%dx;");
    asm("loc_49DA52: jmp loc_49DC75;");
    asm("loc_49DA57: cmpl $4,0xD8(%esp);");
    asm("loc_49DA5F: jne loc_49DBEB;");
    asm("loc_49DA65: mov 0xEEC(%ebx),%ecx;");
    asm("loc_49DA6B: mov 0xEE8(%ebx),%ax;");
    asm("loc_49DA72: add $6,%ecx;");
    asm("loc_49DA75: mov %ecx,0xEEC(%ebx);");
    asm("loc_49DA7B: mov %ax,(%ebp);");
    asm("loc_49DA7F: mov 0xEE8(%ebx),%cx;");
    asm("loc_49DA86: add $2,%ebp;");
    asm("loc_49DA89: inc %cx;");
    asm("loc_49DA8B: mov %cx,(%ebp);");
    asm("loc_49DA8F: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DA96: add $2,%ebp;");
    asm("loc_49DA99: add $2,%dx;");
    asm("loc_49DA9D: mov %dx,(%ebp);");
    asm("loc_49DAA1: mov 0xEE8(%ebx),%ax;");
    asm("loc_49DAA8: mov %ax,2(%ebp);");
    asm("loc_49DAAC: mov 0xEE8(%ebx),%cx;");
    asm("loc_49DAB3: add $2,%ebp;");
    asm("loc_49DAB6: add $2,%ebp;");
    asm("loc_49DAB9: add $2,%cx;");
    asm("loc_49DABD: mov %cx,(%ebp);");
    asm("loc_49DAC1: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DAC8: add $2,%ebp;");
    asm("loc_49DACB: add $3,%dx;");
    asm("loc_49DACF: mov %dx,(%ebp);");
    asm("loc_49DAD3: mov 0xEEC(%ebx),%eax;");
    asm("loc_49DAD9: mov $0x30,%ecx;");
    asm("loc_49DADE: add $2,%ebp;");
    asm("loc_49DAE1: add %ecx,%eax;");
    asm("loc_49DAE3: mov %eax,0xEEC(%ebx);");
    asm("loc_49DAE9: mov $4,%eax;");
    asm("loc_49DAEE: mov %edi,%edi;");
    asm("loc_49DAF0: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DAF7: add %ax,%dx;");
    asm("loc_49DAFA: mov %dx,(%ebp);");
    asm("loc_49DAFE: xor %edx,%edx;");
    asm("loc_49DB00: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DB07: add %ax,%dx;");
    asm("loc_49DB0A: add $2,%ebp;");
    asm("loc_49DB0D: add $2,%ebp;");
    asm("loc_49DB10: add $2,%ebp;");
    asm("loc_49DB13: inc %edx;");
    asm("loc_49DB14: mov %dx,-4(%ebp);");
    asm("loc_49DB18: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DB1F: add $0x14,%dx;");
    asm("loc_49DB23: mov %dx,-2(%ebp);");
    asm("loc_49DB27: inc %eax;");
    asm("loc_49DB28: cmp $0x13,%eax;");
    asm("loc_49DB2B: jl loc_49DAF0;");
    asm("loc_49DB2D: mov 0xEE8(%ebx),%ax;");
    asm("loc_49DB34: add $0x13,%ax;");
    asm("loc_49DB38: mov %ax,(%ebp);");
    asm("loc_49DB3C: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DB43: add $2,%ebp;");
    asm("loc_49DB46: add $4,%dx;");
    asm("loc_49DB4A: mov %dx,(%ebp);");
    asm("loc_49DB4E: mov 0xEE8(%ebx),%ax;");
    asm("loc_49DB55: add $0x14,%ax;");
    asm("loc_49DB59: add $2,%ebp;");
    asm("loc_49DB5C: mov %ax,(%ebp);");
    asm("loc_49DB60: mov 0xEEC(%ebx),%eax;");
    asm("loc_49DB66: add $2,%ebp;");
    asm("loc_49DB69: add %ecx,%eax;");
    asm("loc_49DB6B: mov %eax,0xEEC(%ebx);");
    asm("loc_49DB71: mov $0x15,%eax;");
    asm("loc_49DB76: mov 0xEE8(%ebx),%cx;");
    asm("loc_49DB7D: add %ax,%cx;");
    asm("loc_49DB80: mov %cx,(%ebp);");
    asm("loc_49DB84: xor %edx,%edx;");
    asm("loc_49DB86: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DB8D: add %ax,%dx;");
    asm("loc_49DB90: add $2,%ebp;");
    asm("loc_49DB93: add $2,%ebp;");
    asm("loc_49DB96: add $2,%ebp;");
    asm("loc_49DB99: inc %edx;");
    asm("loc_49DB9A: mov %dx,-4(%ebp);");
    asm("loc_49DB9E: mov 0xEE8(%ebx),%cx;");
    asm("loc_49DBA5: add $0x25,%cx;");
    asm("loc_49DBA9: mov %cx,-2(%ebp);");
    asm("loc_49DBAD: inc %eax;");
    asm("loc_49DBAE: cmp $0x24,%eax;");
    asm("loc_49DBB1: jl loc_49DB76;");
    asm("loc_49DBB3: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DBBA: add $0x24,%dx;");
    asm("loc_49DBBE: mov %dx,(%ebp);");
    asm("loc_49DBC2: mov 0xEE8(%ebx),%ax;");
    asm("loc_49DBC9: add $2,%ebp;");
    asm("loc_49DBCC: add $0x15,%ax;");
    asm("loc_49DBD0: mov %ax,(%ebp);");
    asm("loc_49DBD4: mov 0xEE8(%ebx),%cx;");
    asm("loc_49DBDB: add $2,%ebp;");
    asm("loc_49DBDE: add $0x25,%cx;");
    asm("loc_49DBE2: mov %cx,(%ebp);");
    asm("loc_49DBE6: jmp loc_49DC79;");
    asm("loc_49DBEB: mov 0xEEC(%ebx),%edi;");
    asm("loc_49DBF1: lea -3(%esi,%esi,2),%edx;");
    asm("loc_49DBF5: add %edx,%edi;");
    asm("loc_49DBF7: lea -2(%esi),%ecx;");
    asm("loc_49DBFA: xor %eax,%eax;");
    asm("loc_49DBFC: test %ecx,%ecx;");
    asm("loc_49DBFE: mov %edi,0xEEC(%ebx);");
    asm("loc_49DC04: jle loc_49DC44;");
    asm("loc_49DC06: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DC0D: add %ax,%dx;");
    asm("loc_49DC10: mov %dx,(%ebp);");
    asm("loc_49DC14: xor %edx,%edx;");
    asm("loc_49DC16: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DC1D: add %ax,%dx;");
    asm("loc_49DC20: add $2,%ebp;");
    asm("loc_49DC23: add $2,%ebp;");
    asm("loc_49DC26: add $2,%ebp;");
    asm("loc_49DC29: inc %edx;");
    asm("loc_49DC2A: mov %dx,-4(%ebp);");
    asm("loc_49DC2E: xor %edx,%edx;");
    asm("loc_49DC30: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DC37: add %si,%dx;");
    asm("loc_49DC3A: dec %edx;");
    asm("loc_49DC3B: mov %dx,-2(%ebp);");
    asm("loc_49DC3F: inc %eax;");
    asm("loc_49DC40: cmp %ecx,%eax;");
    asm("loc_49DC42: jl loc_49DC06;");
    asm("loc_49DC44: xor %eax,%eax;");
    asm("loc_49DC46: mov 0xEE8(%ebx),%ax;");
    asm("loc_49DC4D: add %si,%ax;");
    asm("loc_49DC50: add $2,%ebp;");
    asm("loc_49DC53: xor %edx,%edx;");
    asm("loc_49DC55: add $2,%ebp;");
    asm("loc_49DC58: sub $2,%eax;");
    asm("loc_49DC5B: mov %ax,-4(%ebp);");
    asm("loc_49DC5F: mov 0xEE8(%ebx),%cx;");
    asm("loc_49DC66: mov %cx,-2(%ebp);");
    asm("loc_49DC6A: mov 0xEE8(%ebx),%dx;");
    asm("loc_49DC71: add %si,%dx;");
    asm("loc_49DC74: dec %edx;");
    asm("loc_49DC75: mov %dx,(%ebp);");
    asm("loc_49DC79: mov 0xEE8(%ebx),%eax;");
    asm("loc_49DC7F: add $2,%ebp;");
    asm("loc_49DC82: add %esi,%eax;");
    asm("loc_49DC84: mov %eax,0xEE8(%ebx);");
    asm("loc_49DC8A: mov 0x64(%esp),%eax;");
    asm("loc_49DC8E: mov 0x68(%esp),%ecx;");
    asm("loc_49DC92: mov (%eax),%eax;");
    asm("loc_49DC94: cmp 4(%ecx),%eax;");
    asm("loc_49DC97: mov %eax,0x64(%esp);");
    asm("loc_49DC9B: jne loc_49CBB4;");
    asm("loc_49DCA1: pop %edi;");
    asm("loc_49DCA2: pop %esi;");
    asm("loc_49DCA3: pop %ebp;");
    asm("loc_49DCA4: mov $1,%al;");
    asm("loc_49DCA6: pop %ebx;");
    asm("loc_49DCA7: add $0x1174,%esp;");
    asm("loc_49DCAD: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_49DCB0: .long loc_49D11D;");
    asm(".long loc_49D1F7;");
    asm(".long loc_49CF1D;");
    asm(".long loc_49D304;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_49C740);
_naked _weak void _sub_49DCC0() // _sub_49DCC0
{
    __DEBUG_ASM(49DCC0);
    // chunk 0x49DCC0 _sub_49DCC0
    asm("loc_49DCC0: mov %fs:0,%eax;");
    asm("loc_49DCC6: push $0xFFFFFFFF;");
    asm("loc_49DCC8: push $_sub_5BCA5B;");
    asm("loc_49DCCD: push %eax;");
    asm("loc_49DCCE: mov _data_6720A0,%eax;");
    asm("loc_49DCD3: mov %esp,%fs:0;");
    asm("loc_49DCDA: sub $0x120,%esp;");
    asm("loc_49DCE0: cmp $1,%eax;");
    asm("loc_49DCE3: push %ebp;");
    asm("loc_49DCE4: push %esi;");
    asm("loc_49DCE5: push %edi;");
    asm("loc_49DCE6: mov %ecx,%ebp;");
    asm("loc_49DCE8: je loc_49DCFD;");
    asm("loc_49DCEA: cmp $2,%eax;");
    asm("loc_49DCED: je loc_49DCFD;");
    asm("loc_49DCEF: cmp $3,%eax;");
    asm("loc_49DCF2: je loc_49DCFD;");
    asm("loc_49DCF4: cmp $5,%eax;");
    asm("loc_49DCF7: jne loc_49E16A;");
    asm("loc_49DCFD: mov %ebp,%ecx;");
    asm("loc_49DCFF: call _sub_49C740;");
    asm("loc_49DD04: mov %al,0xF(%esp);");
    asm("loc_49DD08: mov 0xEE8(%ebp),%eax;");
    asm("loc_49DD0E: test %eax,%eax;");
    asm("loc_49DD10: je loc_49E16A;");
    asm("loc_49DD16: lea 0x3D4(%ebp),%eax;");
    asm("loc_49DD1C: mov %eax,%esi;");
    asm("loc_49DD1E: mov $9,%ecx;");
    asm("loc_49DD23: lea 0x38(%esp),%edi;");
    asm("loc_49DD27: rep movsl (%esi),(%edi);");
    asm("loc_49DD29: movl $0,0x1C(%esp);");
    asm("loc_49DD31: mov 0x1C(%esp),%ecx;");
    asm("loc_49DD35: mov %ecx,0x5C(%esp);");
    asm("loc_49DD39: movl $0xBF0CCCCC,0x24(%esp);");
    asm("loc_49DD41: mov 0x24(%esp),%ecx;");
    asm("loc_49DD45: mov %eax,%esi;");
    asm("loc_49DD47: mov _data_67209C,%eax;");
    asm("loc_49DD4C: test %eax,%eax;");
    asm("loc_49DD4E: movl $0,0x20(%esp);");
    asm("loc_49DD56: mov 0x20(%esp),%edx;");
    asm("loc_49DD5A: mov %ecx,0x64(%esp);");
    asm("loc_49DD5E: mov $9,%ecx;");
    asm("loc_49DD63: lea 0x108(%esp),%edi;");
    asm("loc_49DD6A: mov %edx,0x60(%esp);");
    asm("loc_49DD6E: rep movsl (%esi),(%edi);");
    asm("loc_49DD70: movl $0,0x1C(%esp);");
    asm("loc_49DD78: movl $0,0x20(%esp);");
    asm("loc_49DD80: movl $0,0x24(%esp);");
    asm("loc_49DD88: jne loc_49DD94;");
    asm("loc_49DD8A: call _sub_5B73E0;");
    asm("loc_49DD8F: mov %eax,_data_67209C;");
    asm("loc_49DD94: mov (%eax),%edx;");
    asm("loc_49DD96: lea 0x1C(%esp),%ecx;");
    asm("loc_49DD9A: push %ecx;");
    asm("loc_49DD9B: lea 0x3C(%esp),%ecx;");
    asm("loc_49DD9F: push %ecx;");
    asm("loc_49DDA0: lea 0x34(%esp),%ecx;");
    asm("loc_49DDA4: push %ecx;");
    asm("loc_49DDA5: push %eax;");
    asm("loc_49DDA6: calll *0x28(%edx);");
    asm("loc_49DDA9: mov 0x2C(%esp),%edx;");
    asm("loc_49DDAD: mov 0x30(%esp),%eax;");
    asm("loc_49DDB1: mov $9,%ecx;");
    asm("loc_49DDB6: lea 0x108(%esp),%esi;");
    asm("loc_49DDBD: lea 0x68(%esp),%edi;");
    asm("loc_49DDC1: rep movsl (%esi),(%edi);");
    asm("loc_49DDC3: mov 0x34(%esp),%ecx;");
    asm("loc_49DDC7: mov %edx,0x8C(%esp);");
    asm("loc_49DDCE: lea 0x68(%esp),%edx;");
    asm("loc_49DDD2: push %edx;");
    asm("loc_49DDD3: push $0;");
    asm("loc_49DDD5: mov %eax,0x98(%esp);");
    asm("loc_49DDDC: mov %ecx,0x9C(%esp);");
    asm("loc_49DDE3: call _sub_422690;");
    asm("loc_49DDE8: push $0xB50;");
    asm("loc_49DDED: call _sub_421ED0;");
    asm("loc_49DDF2: push $0xB71;");
    asm("loc_49DDF7: call _sub_421ED0;");
    asm("loc_49DDFC: push $0xB44;");
    asm("loc_49DE01: call _sub_421ED0;");
    asm("loc_49DE06: push $0xDE1;");
    asm("loc_49DE0B: call _sub_421ED0;");
    asm("loc_49DE10: push $0xBE2;");
    asm("loc_49DE15: call _sub_421DD0;");
    asm("loc_49DE1A: push $6;");
    asm("loc_49DE1C: push $5;");
    asm("loc_49DE1E: call _sub_4220C0;");
    asm("loc_49DE23: mov _import_5C6DE0,%eax;");
    asm("loc_49DE28: mov (%eax),%edi;");
    asm("loc_49DE2A: add $0x24,%esp;");
    asm("loc_49DE2D: mov $_data_5D2E34,%esi;");
    asm("loc_49DE32: mov $0x8D,%eax;");
    asm("loc_49DE37: mov 4(%esi),%edx;");
    asm("loc_49DE3A: mov (%edi),%ecx;");
    asm("loc_49DE3C: push %edx;");
    asm("loc_49DE3D: push %eax;");
    asm("loc_49DE3E: push %edi;");
    asm("loc_49DE3F: calll *0xF0(%ecx);");
    asm("loc_49DE45: mov 8(%esi),%eax;");
    asm("loc_49DE48: add $8,%esi;");
    asm("loc_49DE4B: test %eax,%eax;");
    asm("loc_49DE4D: jne loc_49DE37;");
    asm("loc_49DE4F: mov _import_5C6DE0,%eax;");
    asm("loc_49DE54: mov (%eax),%edi;");
    asm("loc_49DE56: mov $_data_5D2E94,%esi;");
    asm("loc_49DE5B: mov $1,%eax;");
    asm("loc_49DE60: mov 4(%esi),%edx;");
    asm("loc_49DE63: mov (%edi),%ecx;");
    asm("loc_49DE65: push %edx;");
    asm("loc_49DE66: push %eax;");
    asm("loc_49DE67: push $0;");
    asm("loc_49DE69: push %edi;");
    asm("loc_49DE6A: calll *0xF8(%ecx);");
    asm("loc_49DE70: mov 8(%esi),%eax;");
    asm("loc_49DE73: add $8,%esi;");
    asm("loc_49DE76: test %eax,%eax;");
    asm("loc_49DE78: jne loc_49DE60;");
    asm("loc_49DE7A: mov _import_5C6DE0,%eax;");
    asm("loc_49DE7F: mov (%eax),%edi;");
    asm("loc_49DE81: mov $_data_5D2E94,%esi;");
    asm("loc_49DE86: mov $1,%eax;");
    asm("loc_49DE8B: nop;");
    asm("loc_49DE8C: lea (%esp),%esp;");
    asm("loc_49DE90: mov 4(%esi),%edx;");
    asm("loc_49DE93: mov (%edi),%ecx;");
    asm("loc_49DE95: push %edx;");
    asm("loc_49DE96: push %eax;");
    asm("loc_49DE97: push $1;");
    asm("loc_49DE99: push %edi;");
    asm("loc_49DE9A: calll *0xF8(%ecx);");
    asm("loc_49DEA0: mov 8(%esi),%eax;");
    asm("loc_49DEA3: add $8,%esi;");
    asm("loc_49DEA6: test %eax,%eax;");
    asm("loc_49DEA8: jne loc_49DE90;");
    asm("loc_49DEAA: mov _import_5C6DE0,%eax;");
    asm("loc_49DEAF: mov (%eax),%eax;");
    asm("loc_49DEB1: lea 0x18(%esp),%edx;");
    asm("loc_49DEB5: push %edx;");
    asm("loc_49DEB6: push $0x89;");
    asm("loc_49DEBB: mov %eax,0x18(%esp);");
    asm("loc_49DEBF: movl $0x89,0x1C(%esp);");
    asm("loc_49DEC7: mov (%eax),%ecx;");
    asm("loc_49DEC9: push %eax;");
    asm("loc_49DECA: calll *0xF4(%ecx);");
    asm("loc_49DED0: mov 0x14(%esp),%edx;");
    asm("loc_49DED4: mov 0x10(%esp),%eax;");
    asm("loc_49DED8: mov (%eax),%ecx;");
    asm("loc_49DEDA: push $0;");
    asm("loc_49DEDC: push %edx;");
    asm("loc_49DEDD: push %eax;");
    asm("loc_49DEDE: calll *0xF0(%ecx);");
    asm("loc_49DEE4: mov 0xF(%esp),%al;");
    asm("loc_49DEE8: test %al,%al;");
    asm("loc_49DEEA: movl $0,0x134(%esp);");
    asm("loc_49DEF5: jne loc_49DF11;");
    asm("loc_49DEF7: mov _data_6720BC,%edx;");
    asm("loc_49DEFD: mov _data_6720AC,%eax;");
    asm("loc_49DF02: mov (%eax),%ecx;");
    asm("loc_49DF04: push %edx;");
    asm("loc_49DF05: push %eax;");
    asm("loc_49DF06: calll *0x28(%ecx);");
    asm("loc_49DF09: test %eax,%eax;");
    asm("loc_49DF0B: je loc_49E038;");
    asm("loc_49DF11: mov _data_6720BC,%eax;");
    asm("loc_49DF16: test %eax,%eax;");
    asm("loc_49DF18: je loc_49DF34;");
    asm("loc_49DF1A: mov _data_6720AC,%eax;");
    asm("loc_49DF1F: mov (%eax),%ecx;");
    asm("loc_49DF21: push $_data_6720BC;");
    asm("loc_49DF26: push %eax;");
    asm("loc_49DF27: calll *0x10(%ecx);");
    asm("loc_49DF2A: movl $0,_data_6720BC;");
    asm("loc_49DF34: mov 0xEE8(%ebp),%ecx;");
    asm("loc_49DF3A: mov _data_6720AC,%eax;");
    asm("loc_49DF3F: mov (%eax),%edx;");
    asm("loc_49DF41: push $0;");
    asm("loc_49DF43: push $_data_6720BC;");
    asm("loc_49DF48: push %ecx;");
    asm("loc_49DF49: push $0x42;");
    asm("loc_49DF4B: push %eax;");
    asm("loc_49DF4C: calll *0xC(%edx);");
    asm("loc_49DF4F: test %eax,%eax;");
    asm("loc_49DF51: je loc_49DF63;");
    asm("loc_49DF53: movl $0xFFFFFFFF,0x134(%esp);");
    asm("loc_49DF5E: jmp loc_49E0AB;");
    asm("loc_49DF63: xor %eax,%eax;");
    asm("loc_49DF65: mov $0x1C,%ecx;");
    asm("loc_49DF6A: lea 0x98(%esp),%edi;");
    asm("loc_49DF71: rep stos %eax,(%edi);");
    asm("loc_49DF73: mov $0x10,%eax;");
    asm("loc_49DF78: mov %eax,0xA4(%esp);");
    asm("loc_49DF7F: mov %eax,0xCC(%esp);");
    asm("loc_49DF86: mov 0xEE0(%ebp),%eax;");
    asm("loc_49DF8C: mov %eax,0x9C(%esp);");
    asm("loc_49DF93: add $0xC,%eax;");
    asm("loc_49DF96: mov %eax,0xC4(%esp);");
    asm("loc_49DF9D: mov 0xEE8(%ebp),%eax;");
    asm("loc_49DFA3: push %eax;");
    asm("loc_49DFA4: push $0;");
    asm("loc_49DFA6: mov %eax,0x10C(%esp);");
    asm("loc_49DFAD: lea 0xA0(%esp),%eax;");
    asm("loc_49DFB4: push %eax;");
    asm("loc_49DFB5: lea 0xF14(%ebp),%ecx;");
    asm("loc_49DFBB: movl $0,(%ecx);");
    asm("loc_49DFC1: mov _data_6720AC,%edx;");
    asm("loc_49DFC7: push %ecx;");
    asm("loc_49DFC8: mov _data_6720BC,%ecx;");
    asm("loc_49DFCE: push %ecx;");
    asm("loc_49DFCF: movl $2,0xAC(%esp);");
    asm("loc_49DFDA: movl $0xC,0xB4(%esp);");
    asm("loc_49DFE5: movl $4,0xDC(%esp);");
    asm("loc_49DFF0: movl $0x42,0x114(%esp);");
    asm("loc_49DFFB: mov (%edx),%esi;");
    asm("loc_49DFFD: push %edx;");
    asm("loc_49DFFE: calll *0x18(%esi);");
    asm("loc_49E001: test %eax,%eax;");
    asm("loc_49E003: je loc_49E015;");
    asm("loc_49E005: movl $0xFFFFFFFF,0x134(%esp);");
    asm("loc_49E010: jmp loc_49E0AB;");
    asm("loc_49E015: mov _data_6720BC,%ecx;");
    asm("loc_49E01B: mov _data_6720AC,%eax;");
    asm("loc_49E020: mov (%eax),%edx;");
    asm("loc_49E022: push %ecx;");
    asm("loc_49E023: push %eax;");
    asm("loc_49E024: calll *0x28(%edx);");
    asm("loc_49E027: test %eax,%eax;");
    asm("loc_49E029: je loc_49E038;");
    asm("loc_49E02B: movl $0xFFFFFFFF,0x134(%esp);");
    asm("loc_49E036: jmp loc_49E0AB;");
    asm("loc_49E038: mov 0xEEC(%ebp),%ecx;");
    asm("loc_49E03E: mov _data_6720B0,%eax;");
    asm("loc_49E043: push %ecx;");
    asm("loc_49E044: mov 0xEE4(%ebp),%ecx;");
    asm("loc_49E04A: push %ecx;");
    asm("loc_49E04B: lea 0x30(%esp),%ecx;");
    asm("loc_49E04F: push %ecx;");
    asm("loc_49E050: or $0xFFFFFFFF,%esi;");
    asm("loc_49E053: push %esi;");
    asm("loc_49E054: movl $0,0x38(%esp);");
    asm("loc_49E05C: mov (%eax),%edx;");
    asm("loc_49E05E: push %eax;");
    asm("loc_49E05F: calll *0x18(%edx);");
    asm("loc_49E062: test %eax,%eax;");
    asm("loc_49E064: je loc_49E089;");
    asm("loc_49E066: mov 0x18(%esp),%ecx;");
    asm("loc_49E06A: mov 0x10(%esp),%eax;");
    asm("loc_49E06E: mov (%eax),%edx;");
    asm("loc_49E070: push %ecx;");
    asm("loc_49E071: mov 0x18(%esp),%ecx;");
    asm("loc_49E075: push %ecx;");
    asm("loc_49E076: push %eax;");
    asm("loc_49E077: mov %esi,0x140(%esp);");
    asm("loc_49E07E: calll *0xF0(%edx);");
    asm("loc_49E084: jmp loc_49E16A;");
    asm("loc_49E089: mov 0xF14(%ebp),%ecx;");
    asm("loc_49E08F: mov _data_6720B0,%eax;");
    asm("loc_49E094: mov (%eax),%edx;");
    asm("loc_49E096: push $0;");
    asm("loc_49E098: push $0;");
    asm("loc_49E09A: push %ecx;");
    asm("loc_49E09B: push %esi;");
    asm("loc_49E09C: push %eax;");
    asm("loc_49E09D: calll *0x24(%edx);");
    asm("loc_49E0A0: test %eax,%eax;");
    asm("loc_49E0A2: je loc_49E0C7;");
    asm("loc_49E0A4: mov %esi,0x134(%esp);");
    asm("loc_49E0AB: mov 0x18(%esp),%ecx;");
    asm("loc_49E0AF: mov 0x10(%esp),%eax;");
    asm("loc_49E0B3: mov (%eax),%edx;");
    asm("loc_49E0B5: push %ecx;");
    asm("loc_49E0B6: mov 0x18(%esp),%ecx;");
    asm("loc_49E0BA: push %ecx;");
    asm("loc_49E0BB: push %eax;");
    asm("loc_49E0BC: calll *0xF0(%edx);");
    asm("loc_49E0C2: jmp loc_49E16A;");
    asm("loc_49E0C7: mov 0xEEC(%ebp),%ecx;");
    asm("loc_49E0CD: mov _data_6720B4,%eax;");
    asm("loc_49E0D2: mov (%eax),%edx;");
    asm("loc_49E0D4: push %ecx;");
    asm("loc_49E0D5: mov 0x2C(%esp),%ecx;");
    asm("loc_49E0D9: push %ecx;");
    asm("loc_49E0DA: mov 0xEE8(%ebp),%ecx;");
    asm("loc_49E0E0: push %ecx;");
    asm("loc_49E0E1: push $0;");
    asm("loc_49E0E3: push $4;");
    asm("loc_49E0E5: push %eax;");
    asm("loc_49E0E6: calll *0xC(%edx);");
    asm("loc_49E0E9: mov _import_5C6DE0,%edx;");
    asm("loc_49E0EF: mov (%edx),%edi;");
    asm("loc_49E0F1: mov $_data_5D2E4C,%esi;");
    asm("loc_49E0F6: mov $0x8D,%eax;");
    asm("loc_49E0FB: nop;");
    asm("loc_49E0FC: lea (%esp),%esp;");
    asm("loc_49E100: mov 4(%esi),%edx;");
    asm("loc_49E103: mov (%edi),%ecx;");
    asm("loc_49E105: push %edx;");
    asm("loc_49E106: push %eax;");
    asm("loc_49E107: push %edi;");
    asm("loc_49E108: calll *0xF0(%ecx);");
    asm("loc_49E10E: mov 8(%esi),%eax;");
    asm("loc_49E111: add $8,%esi;");
    asm("loc_49E114: test %eax,%eax;");
    asm("loc_49E116: jne loc_49E100;");
    asm("loc_49E118: mov _import_5C6DE0,%eax;");
    asm("loc_49E11D: mov (%eax),%edi;");
    asm("loc_49E11F: mov $_data_5D2E4C,%esi;");
    asm("loc_49E124: mov $0x8D,%eax;");
    asm("loc_49E129: lea (%esp),%esp;");
    asm("loc_49E130: mov 4(%esi),%edx;");
    asm("loc_49E133: mov (%edi),%ecx;");
    asm("loc_49E135: push %edx;");
    asm("loc_49E136: push %eax;");
    asm("loc_49E137: push %edi;");
    asm("loc_49E138: calll *0xF0(%ecx);");
    asm("loc_49E13E: mov 8(%esi),%eax;");
    asm("loc_49E141: add $8,%esi;");
    asm("loc_49E144: test %eax,%eax;");
    asm("loc_49E146: jne loc_49E130;");
    asm("loc_49E148: mov 0x18(%esp),%edx;");
    asm("loc_49E14C: mov 0x10(%esp),%eax;");
    asm("loc_49E150: mov (%eax),%ecx;");
    asm("loc_49E152: push %edx;");
    asm("loc_49E153: mov 0x18(%esp),%edx;");
    asm("loc_49E157: push %edx;");
    asm("loc_49E158: push %eax;");
    asm("loc_49E159: movl $0xFFFFFFFF,0x140(%esp);");
    asm("loc_49E164: calll *0xF0(%ecx);");
    asm("loc_49E16A: mov 0x12C(%esp),%ecx;");
    asm("loc_49E171: pop %edi;");
    asm("loc_49E172: pop %esi;");
    asm("loc_49E173: pop %ebp;");
    asm("loc_49E174: mov %ecx,%fs:0;");
    asm("loc_49E17B: add $0x12C,%esp;");
    asm("loc_49E181: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49E190() // _sub_49E190
{
    __DEBUG_ASM(49E190);
    // chunk 0x49E190 _sub_49E190
    asm("loc_49E190: cmpl $0xF,4(%esp);");
    asm("loc_49E195: push %esi;");
    asm("loc_49E196: mov %ecx,%esi;");
    asm("loc_49E198: jne loc_49E1C7;");
    asm("loc_49E19A: mov 0xBF8(%esi),%al;");
    asm("loc_49E1A0: test %al,%al;");
    asm("loc_49E1A2: je loc_49E1C7;");
    asm("loc_49E1A4: call _sub_43D580;");
    asm("loc_49E1A9: mov -0x32C(%esi),%eax;");
    asm("loc_49E1AF: push $0;");
    asm("loc_49E1B1: lea -0x32C(%esi),%ecx;");
    asm("loc_49E1B7: push $0;");
    asm("loc_49E1B9: push $0xEF02;");
    asm("loc_49E1BE: calll *0x5C(%eax);");
    asm("loc_49E1C1: mov $1,%al;");
    asm("loc_49E1C3: pop %esi;");
    asm("loc_49E1C4: ret $4;");
    asm("loc_49E1C7: xor %al,%al;");
    asm("loc_49E1C9: pop %esi;");
    asm("loc_49E1CA: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49E1D0() // _sub_49E1D0
{
    __DEBUG_ASM(49E1D0);
    // chunk 0x49E1D0 _sub_49E1D0
    asm("loc_49E1D0: mov _data_6720A0,%eax;");
    asm("loc_49E1D5: sub $0x14,%esp;");
    asm("loc_49E1D8: cmp $6,%eax;");
    asm("loc_49E1DB: push %esi;");
    asm("loc_49E1DC: push %edi;");
    asm("loc_49E1DD: mov %ecx,%esi;");
    asm("loc_49E1DF: jne loc_49E1ED;");
    asm("loc_49E1E1: mov 0xF44(%esi),%eax;");
    asm("loc_49E1E7: push %eax;");
    asm("loc_49E1E8: call _sub_4A0220;");
    asm("loc_49E1ED: mov 0x814(%esi),%eax;");
    asm("loc_49E1F3: test %eax,%eax;");
    asm("loc_49E1F5: movl $1,0x7D0(%esi);");
    asm("loc_49E1FF: movl $0xFFFFFFFF,0x838(%esi);");
    asm("loc_49E209: je loc_49E248;");
    asm("loc_49E20B: lea 0x80C(%esi),%edi;");
    asm("loc_49E211: lea 8(%esp),%ecx;");
    asm("loc_49E215: push %ecx;");
    asm("loc_49E216: mov %edi,%ecx;");
    asm("loc_49E218: call _sub_53E430;");
    asm("loc_49E21D: mov 8(%esp),%edx;");
    asm("loc_49E221: mov 8(%edx),%eax;");
    asm("loc_49E224: push %eax;");
    asm("loc_49E225: call _sub_5B7E1D;");
    asm("loc_49E22A: mov 0xC(%esp),%ecx;");
    asm("loc_49E22E: add $4,%esp;");
    asm("loc_49E231: push %ecx;");
    asm("loc_49E232: lea 0x10(%esp),%edx;");
    asm("loc_49E236: push %edx;");
    asm("loc_49E237: mov %edi,%ecx;");
    asm("loc_49E239: call _sub_516F70;");
    asm("loc_49E23E: mov 0x814(%esi),%eax;");
    asm("loc_49E244: test %eax,%eax;");
    asm("loc_49E246: jne loc_49E211;");
    asm("loc_49E248: mov 0x404(%esi),%eax;");
    asm("loc_49E24E: test %eax,%eax;");
    asm("loc_49E250: push %ebx;");
    asm("loc_49E251: je loc_49E297;");
    asm("loc_49E253: push %ebp;");
    asm("loc_49E254: lea 0x3FC(%esi),%ebp;");
    asm("loc_49E25A: lea (%ebx),%ebx;");
    asm("loc_49E260: mov 0x400(%esi),%eax;");
    asm("loc_49E266: mov (%eax),%edi;");
    asm("loc_49E268: mov 8(%edi),%ebx;");
    asm("loc_49E26B: test %ebx,%ebx;");
    asm("loc_49E26D: je loc_49E27F;");
    asm("loc_49E26F: mov %ebx,%ecx;");
    asm("loc_49E271: call _sub_48DD40;");
    asm("loc_49E276: push %ebx;");
    asm("loc_49E277: call _sub_5B7E1D;");
    asm("loc_49E27C: add $4,%esp;");
    asm("loc_49E27F: push %edi;");
    asm("loc_49E280: lea 0x18(%esp),%ecx;");
    asm("loc_49E284: push %ecx;");
    asm("loc_49E285: mov %ebp,%ecx;");
    asm("loc_49E287: call _sub_516F70;");
    asm("loc_49E28C: mov 0x404(%esi),%eax;");
    asm("loc_49E292: test %eax,%eax;");
    asm("loc_49E294: jne loc_49E260;");
    asm("loc_49E296: pop %ebp;");
    asm("loc_49E297: xor %eax,%eax;");
    asm("loc_49E299: mov $0x63,%ecx;");
    asm("loc_49E29E: lea 0x4B8(%esi),%edi;");
    asm("loc_49E2A4: rep stos %eax,(%edi);");
    asm("loc_49E2A6: mov $0x63,%ecx;");
    asm("loc_49E2AB: lea 0x644(%esi),%edi;");
    asm("loc_49E2B1: rep stos %eax,(%edi);");
    asm("loc_49E2B3: mov %esi,%ecx;");
    asm("loc_49E2B5: call _sub_4917C0;");
    asm("loc_49E2BA: mov %esi,%ecx;");
    asm("loc_49E2BC: call _sub_491410;");
    asm("loc_49E2C1: mov 0x7EC(%esi),%ecx;");
    asm("loc_49E2C7: mov (%ecx),%edx;");
    asm("loc_49E2C9: push $0;");
    asm("loc_49E2CB: push $0;");
    asm("loc_49E2CD: push $1;");
    asm("loc_49E2CF: calll *0xA8(%edx);");
    asm("loc_49E2D5: mov 0x7E0(%esi),%ecx;");
    asm("loc_49E2DB: xor %bl,%bl;");
    asm("loc_49E2DD: test %ecx,%ecx;");
    asm("loc_49E2DF: je loc_49E2FF;");
    asm("loc_49E2E1: mov (%ecx),%eax;");
    asm("loc_49E2E3: calll *(%eax);");
    asm("loc_49E2E5: xor %ecx,%ecx;");
    asm("loc_49E2E7: lea 0xF28(%esi),%edx;");
    asm("loc_49E2ED: lea (%ecx),%ecx;");
    asm("loc_49E2F0: cmp %eax,(%edx);");
    asm("loc_49E2F2: je loc_49E2FF;");
    asm("loc_49E2F4: inc %ecx;");
    asm("loc_49E2F5: add $4,%edx;");
    asm("loc_49E2F8: cmp $4,%ecx;");
    asm("loc_49E2FB: jl loc_49E2F0;");
    asm("loc_49E2FD: jmp loc_49E301;");
    asm("loc_49E2FF: mov $1,%bl;");
    asm("loc_49E301: mov 0x7F0(%esi),%ecx;");
    asm("loc_49E307: mov (%ecx),%edx;");
    asm("loc_49E309: movzbl %bl,%edi;");
    asm("loc_49E30C: push $0;");
    asm("loc_49E30E: push %edi;");
    asm("loc_49E30F: push $1;");
    asm("loc_49E311: calll *0xA8(%edx);");
    asm("loc_49E317: mov 0x8D8(%esi),%ecx;");
    asm("loc_49E31D: mov (%ecx),%eax;");
    asm("loc_49E31F: push $0;");
    asm("loc_49E321: push %edi;");
    asm("loc_49E322: push $1;");
    asm("loc_49E324: calll *0xA8(%eax);");
    asm("loc_49E32A: mov 0x8DC(%esi),%ecx;");
    asm("loc_49E330: mov (%ecx),%edx;");
    asm("loc_49E332: push $0;");
    asm("loc_49E334: push %edi;");
    asm("loc_49E335: push $1;");
    asm("loc_49E337: calll *0xA8(%edx);");
    asm("loc_49E33D: mov 0xB4C(%esi),%ecx;");
    asm("loc_49E343: mov (%ecx),%eax;");
    asm("loc_49E345: push $0;");
    asm("loc_49E347: push %edi;");
    asm("loc_49E348: push $1;");
    asm("loc_49E34A: calll *0xA8(%eax);");
    asm("loc_49E350: mov 0xC58(%esi),%ecx;");
    asm("loc_49E356: mov (%ecx),%edx;");
    asm("loc_49E358: push $0;");
    asm("loc_49E35A: push %edi;");
    asm("loc_49E35B: push $1;");
    asm("loc_49E35D: calll *0xA8(%edx);");
    asm("loc_49E363: mov 0xB5C(%esi),%eax;");
    asm("loc_49E369: test %eax,%eax;");
    asm("loc_49E36B: je loc_49E384;");
    asm("loc_49E36D: mov 0xB60(%esi),%ecx;");
    asm("loc_49E373: sub %eax,%ecx;");
    asm("loc_49E375: sar $2,%ecx;");
    asm("loc_49E378: test %ecx,%ecx;");
    asm("loc_49E37A: je loc_49E384;");
    asm("loc_49E37C: test %bl,%bl;");
    asm("loc_49E37E: jne loc_49E384;");
    asm("loc_49E380: xor %eax,%eax;");
    asm("loc_49E382: jmp loc_49E389;");
    asm("loc_49E384: mov $1,%eax;");
    asm("loc_49E389: mov 0xB50(%esi),%ecx;");
    asm("loc_49E38F: mov (%ecx),%edx;");
    asm("loc_49E391: push $0;");
    asm("loc_49E393: push %eax;");
    asm("loc_49E394: push $1;");
    asm("loc_49E396: calll *0xA8(%edx);");
    asm("loc_49E39C: mov _data_6720A0,%eax;");
    asm("loc_49E3A1: cmp $1,%eax;");
    asm("loc_49E3A4: je loc_49E3E9;");
    asm("loc_49E3A6: cmp $2,%eax;");
    asm("loc_49E3A9: je loc_49E3E9;");
    asm("loc_49E3AB: mov 0xC5C(%esi),%ecx;");
    asm("loc_49E3B1: mov (%ecx),%eax;");
    asm("loc_49E3B3: push $0;");
    asm("loc_49E3B5: push $1;");
    asm("loc_49E3B7: push $1;");
    asm("loc_49E3B9: calll *0xA8(%eax);");
    asm("loc_49E3BF: mov 0xC60(%esi),%ecx;");
    asm("loc_49E3C5: mov (%ecx),%edx;");
    asm("loc_49E3C7: push $0;");
    asm("loc_49E3C9: push $1;");
    asm("loc_49E3CB: push $1;");
    asm("loc_49E3CD: calll *0xA8(%edx);");
    asm("loc_49E3D3: mov 0xC64(%esi),%ecx;");
    asm("loc_49E3D9: mov (%ecx),%eax;");
    asm("loc_49E3DB: push $0;");
    asm("loc_49E3DD: push $1;");
    asm("loc_49E3DF: push $1;");
    asm("loc_49E3E1: calll *0xA8(%eax);");
    asm("loc_49E3E7: jmp loc_49E422;");
    asm("loc_49E3E9: mov 0xC5C(%esi),%ecx;");
    asm("loc_49E3EF: mov (%ecx),%edx;");
    asm("loc_49E3F1: push $0;");
    asm("loc_49E3F3: push %edi;");
    asm("loc_49E3F4: push $1;");
    asm("loc_49E3F6: calll *0xA8(%edx);");
    asm("loc_49E3FC: mov 0xC60(%esi),%ecx;");
    asm("loc_49E402: mov (%ecx),%eax;");
    asm("loc_49E404: push $0;");
    asm("loc_49E406: push %edi;");
    asm("loc_49E407: push $1;");
    asm("loc_49E409: calll *0xA8(%eax);");
    asm("loc_49E40F: mov 0xC64(%esi),%ecx;");
    asm("loc_49E415: mov (%ecx),%edx;");
    asm("loc_49E417: push $0;");
    asm("loc_49E419: push %edi;");
    asm("loc_49E41A: push $1;");
    asm("loc_49E41C: calll *0xA8(%edx);");
    asm("loc_49E422: mov 0xB54(%esi),%ecx;");
    asm("loc_49E428: mov (%ecx),%eax;");
    asm("loc_49E42A: push $0;");
    asm("loc_49E42C: push %edi;");
    asm("loc_49E42D: push $1;");
    asm("loc_49E42F: calll *0xA8(%eax);");
    asm("loc_49E435: mov 0xC14(%esi),%ecx;");
    asm("loc_49E43B: mov (%ecx),%edx;");
    asm("loc_49E43D: push $0;");
    asm("loc_49E43F: push %edi;");
    asm("loc_49E440: push $1;");
    asm("loc_49E442: calll *0xA8(%edx);");
    asm("loc_49E448: mov 0xC18(%esi),%ecx;");
    asm("loc_49E44E: mov (%ecx),%eax;");
    asm("loc_49E450: push $0;");
    asm("loc_49E452: push %edi;");
    asm("loc_49E453: push $1;");
    asm("loc_49E455: calll *0xA8(%eax);");
    asm("loc_49E45B: mov 0xAF8(%esi),%ecx;");
    asm("loc_49E461: mov (%ecx),%edx;");
    asm("loc_49E463: push $0;");
    asm("loc_49E465: push $1;");
    asm("loc_49E467: push $1;");
    asm("loc_49E469: calll *0xA8(%edx);");
    asm("loc_49E46F: mov 0xAFC(%esi),%ecx;");
    asm("loc_49E475: mov (%ecx),%eax;");
    asm("loc_49E477: push $0;");
    asm("loc_49E479: push $1;");
    asm("loc_49E47B: push $1;");
    asm("loc_49E47D: calll *0xA8(%eax);");
    asm("loc_49E483: mov 0xB00(%esi),%ecx;");
    asm("loc_49E489: mov (%ecx),%edx;");
    asm("loc_49E48B: push $0;");
    asm("loc_49E48D: push $1;");
    asm("loc_49E48F: push $1;");
    asm("loc_49E491: calll *0xA8(%edx);");
    asm("loc_49E497: mov 0xB04(%esi),%ecx;");
    asm("loc_49E49D: mov (%ecx),%eax;");
    asm("loc_49E49F: push $0;");
    asm("loc_49E4A1: push $1;");
    asm("loc_49E4A3: push $1;");
    asm("loc_49E4A5: calll *0xA8(%eax);");
    asm("loc_49E4AB: movl $0,0x14(%esp);");
    asm("loc_49E4B3: mov 0x14(%esp),%edx;");
    asm("loc_49E4B7: lea 0x46C(%esi),%ecx;");
    asm("loc_49E4BD: mov %edx,(%ecx);");
    asm("loc_49E4BF: movl $0,0x18(%esp);");
    asm("loc_49E4C7: mov 0x18(%esp),%eax;");
    asm("loc_49E4CB: mov %eax,4(%ecx);");
    asm("loc_49E4CE: mov 0x7D0(%esi),%eax;");
    asm("loc_49E4D4: movl $0,0x1C(%esp);");
    asm("loc_49E4DC: mov 0x1C(%esp),%edx;");
    asm("loc_49E4E0: push $0x3F800000;");
    asm("loc_49E4E5: mov %edx,8(%ecx);");
    asm("loc_49E4E8: push %eax;");
    asm("loc_49E4E9: mov %esi,%ecx;");
    asm("loc_49E4EB: call _sub_4963D0;");
    asm("loc_49E4F0: mov %esi,%ecx;");
    asm("loc_49E4F2: call _sub_496600;");
    asm("loc_49E4F7: mov %esi,%ecx;");
    asm("loc_49E4F9: call _sub_49FBF0;");
    asm("loc_49E4FE: lea 0xB08(%esi),%edi;");
    asm("loc_49E504: mov $8,%ebx;");
    asm("loc_49E509: lea (%esp),%esp;");
    asm("loc_49E510: mov (%edi),%ecx;");
    asm("loc_49E512: mov (%ecx),%edx;");
    asm("loc_49E514: push $0;");
    asm("loc_49E516: push $0;");
    asm("loc_49E518: push $1;");
    asm("loc_49E51A: calll *0xA8(%edx);");
    asm("loc_49E520: add $4,%edi;");
    asm("loc_49E523: dec %ebx;");
    asm("loc_49E524: jne loc_49E510;");
    asm("loc_49E526: add $0xB28,%esi;");
    asm("loc_49E52C: mov $8,%edi;");
    asm("loc_49E531: pop %ebx;");
    asm("loc_49E532: mov (%esi),%ecx;");
    asm("loc_49E534: mov (%ecx),%eax;");
    asm("loc_49E536: push $0;");
    asm("loc_49E538: push $0;");
    asm("loc_49E53A: push $1;");
    asm("loc_49E53C: calll *0xA8(%eax);");
    asm("loc_49E542: add $4,%esi;");
    asm("loc_49E545: dec %edi;");
    asm("loc_49E546: jne loc_49E532;");
    asm("loc_49E548: pop %edi;");
    asm("loc_49E549: pop %esi;");
    asm("loc_49E54A: add $0x14,%esp;");
    asm("loc_49E54D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49E550() // _sub_49E550
{
    __DEBUG_ASM(49E550);
    // chunk 0x49E550 _sub_49E550
    asm("loc_49E550: sub $0x14,%esp;");
    asm("loc_49E553: push %ebx;");
    asm("loc_49E554: push %ebp;");
    asm("loc_49E555: push %esi;");
    asm("loc_49E556: mov %ecx,%esi;");
    asm("loc_49E558: movl $0,0x7D0(%esi);");
    asm("loc_49E562: mov _data_6720A0,%eax;");
    asm("loc_49E567: cmp $4,%eax;");
    asm("loc_49E56A: push %edi;");
    asm("loc_49E56B: je loc_49E580;");
    asm("loc_49E56D: cmp $7,%eax;");
    asm("loc_49E570: je loc_49E580;");
    asm("loc_49E572: cmp $6,%eax;");
    asm("loc_49E575: jne loc_49E589;");
    asm("loc_49E577: mov 0xF44(%esi),%eax;");
    asm("loc_49E57D: push %eax;");
    asm("loc_49E57E: jmp loc_49E582;");
    asm("loc_49E580: push $0;");
    asm("loc_49E582: mov %esi,%ecx;");
    asm("loc_49E584: call _sub_4A0220;");
    asm("loc_49E589: mov 0x814(%esi),%eax;");
    asm("loc_49E58F: test %eax,%eax;");
    asm("loc_49E591: je loc_49E5D7;");
    asm("loc_49E593: lea 0x80C(%esi),%edi;");
    asm("loc_49E599: lea (%esp),%esp;");
    asm("loc_49E5A0: lea 0x10(%esp),%ecx;");
    asm("loc_49E5A4: push %ecx;");
    asm("loc_49E5A5: mov %edi,%ecx;");
    asm("loc_49E5A7: call _sub_53E430;");
    asm("loc_49E5AC: mov 0x10(%esp),%edx;");
    asm("loc_49E5B0: mov 8(%edx),%eax;");
    asm("loc_49E5B3: push %eax;");
    asm("loc_49E5B4: call _sub_5B7E1D;");
    asm("loc_49E5B9: mov 0x14(%esp),%ecx;");
    asm("loc_49E5BD: add $4,%esp;");
    asm("loc_49E5C0: push %ecx;");
    asm("loc_49E5C1: lea 0x18(%esp),%edx;");
    asm("loc_49E5C5: push %edx;");
    asm("loc_49E5C6: mov %edi,%ecx;");
    asm("loc_49E5C8: call _sub_516F70;");
    asm("loc_49E5CD: mov 0x814(%esi),%eax;");
    asm("loc_49E5D3: test %eax,%eax;");
    asm("loc_49E5D5: jne loc_49E5A0;");
    asm("loc_49E5D7: mov 0x404(%esi),%eax;");
    asm("loc_49E5DD: test %eax,%eax;");
    asm("loc_49E5DF: je loc_49E61D;");
    asm("loc_49E5E1: lea 0x3FC(%esi),%ebp;");
    asm("loc_49E5E7: mov 0x400(%esi),%eax;");
    asm("loc_49E5ED: mov (%eax),%edi;");
    asm("loc_49E5EF: mov 8(%edi),%ebx;");
    asm("loc_49E5F2: test %ebx,%ebx;");
    asm("loc_49E5F4: je loc_49E606;");
    asm("loc_49E5F6: mov %ebx,%ecx;");
    asm("loc_49E5F8: call _sub_48DD40;");
    asm("loc_49E5FD: push %ebx;");
    asm("loc_49E5FE: call _sub_5B7E1D;");
    asm("loc_49E603: add $4,%esp;");
    asm("loc_49E606: push %edi;");
    asm("loc_49E607: lea 0x18(%esp),%ecx;");
    asm("loc_49E60B: push %ecx;");
    asm("loc_49E60C: mov %ebp,%ecx;");
    asm("loc_49E60E: call _sub_516F70;");
    asm("loc_49E613: mov 0x404(%esi),%eax;");
    asm("loc_49E619: test %eax,%eax;");
    asm("loc_49E61B: jne loc_49E5E7;");
    asm("loc_49E61D: xor %eax,%eax;");
    asm("loc_49E61F: mov $0x63,%ecx;");
    asm("loc_49E624: lea 0x4B8(%esi),%edi;");
    asm("loc_49E62A: rep stos %eax,(%edi);");
    asm("loc_49E62C: mov $0x63,%ecx;");
    asm("loc_49E631: lea 0x644(%esi),%edi;");
    asm("loc_49E637: rep stos %eax,(%edi);");
    asm("loc_49E639: mov %esi,%ecx;");
    asm("loc_49E63B: call _sub_4915B0;");
    asm("loc_49E640: mov %esi,%ecx;");
    asm("loc_49E642: call _sub_491410;");
    asm("loc_49E647: mov 0x400(%esi),%eax;");
    asm("loc_49E64D: mov (%eax),%edi;");
    asm("loc_49E64F: cmp %eax,%edi;");
    asm("loc_49E651: je loc_49E695;");
    asm("loc_49E653: mov 8(%edi),%ebx;");
    asm("loc_49E656: cmpl $0,(%ebx);");
    asm("loc_49E659: jne loc_49E66D;");
    asm("loc_49E65B: mov 0x64(%ebx),%ecx;");
    asm("loc_49E65E: mov (%ecx),%edx;");
    asm("loc_49E660: calll *(%edx);");
    asm("loc_49E662: mov %eax,%ebp;");
    asm("loc_49E664: call _sub_4C4830;");
    asm("loc_49E669: cmp %eax,%ebp;");
    asm("loc_49E66B: je loc_49E679;");
    asm("loc_49E66D: mov (%edi),%edi;");
    asm("loc_49E66F: cmp 0x400(%esi),%edi;");
    asm("loc_49E675: jne loc_49E653;");
    asm("loc_49E677: jmp loc_49E695;");
    asm("loc_49E679: mov 0x4B4(%esi),%eax;");
    asm("loc_49E67F: add $0x30,%ebx;");
    asm("loc_49E682: mov (%ebx),%ecx;");
    asm("loc_49E684: add $0x30,%eax;");
    asm("loc_49E687: mov %ecx,(%eax);");
    asm("loc_49E689: mov 4(%ebx),%edx;");
    asm("loc_49E68C: mov %edx,4(%eax);");
    asm("loc_49E68F: mov 8(%ebx),%ecx;");
    asm("loc_49E692: mov %ecx,8(%eax);");
    asm("loc_49E695: mov 0x7F0(%esi),%ecx;");
    asm("loc_49E69B: mov (%ecx),%edx;");
    asm("loc_49E69D: push $0;");
    asm("loc_49E69F: push $1;");
    asm("loc_49E6A1: push $1;");
    asm("loc_49E6A3: calll *0xA8(%edx);");
    asm("loc_49E6A9: mov 0x7EC(%esi),%ecx;");
    asm("loc_49E6AF: mov (%ecx),%eax;");
    asm("loc_49E6B1: push $0;");
    asm("loc_49E6B3: push $1;");
    asm("loc_49E6B5: push $1;");
    asm("loc_49E6B7: calll *0xA8(%eax);");
    asm("loc_49E6BD: mov 0x8D8(%esi),%ecx;");
    asm("loc_49E6C3: mov (%ecx),%edx;");
    asm("loc_49E6C5: push $0;");
    asm("loc_49E6C7: push $1;");
    asm("loc_49E6C9: push $1;");
    asm("loc_49E6CB: calll *0xA8(%edx);");
    asm("loc_49E6D1: mov 0x8DC(%esi),%ecx;");
    asm("loc_49E6D7: mov (%ecx),%eax;");
    asm("loc_49E6D9: push $0;");
    asm("loc_49E6DB: push $1;");
    asm("loc_49E6DD: push $1;");
    asm("loc_49E6DF: calll *0xA8(%eax);");
    asm("loc_49E6E5: mov 0xB4C(%esi),%ecx;");
    asm("loc_49E6EB: mov (%ecx),%edx;");
    asm("loc_49E6ED: push $0;");
    asm("loc_49E6EF: push $1;");
    asm("loc_49E6F1: push $1;");
    asm("loc_49E6F3: calll *0xA8(%edx);");
    asm("loc_49E6F9: mov 0xB50(%esi),%ecx;");
    asm("loc_49E6FF: mov (%ecx),%eax;");
    asm("loc_49E701: push $0;");
    asm("loc_49E703: push $1;");
    asm("loc_49E705: push $1;");
    asm("loc_49E707: calll *0xA8(%eax);");
    asm("loc_49E70D: mov 0xC58(%esi),%ecx;");
    asm("loc_49E713: mov (%ecx),%edx;");
    asm("loc_49E715: push $0;");
    asm("loc_49E717: push $1;");
    asm("loc_49E719: push $1;");
    asm("loc_49E71B: calll *0xA8(%edx);");
    asm("loc_49E721: mov 0xC14(%esi),%ecx;");
    asm("loc_49E727: mov (%ecx),%eax;");
    asm("loc_49E729: push $0;");
    asm("loc_49E72B: push $1;");
    asm("loc_49E72D: push $1;");
    asm("loc_49E72F: calll *0xA8(%eax);");
    asm("loc_49E735: mov 0xC18(%esi),%ecx;");
    asm("loc_49E73B: mov (%ecx),%edx;");
    asm("loc_49E73D: push $0;");
    asm("loc_49E73F: push $1;");
    asm("loc_49E741: push $1;");
    asm("loc_49E743: calll *0xA8(%edx);");
    asm("loc_49E749: mov 0xC5C(%esi),%ecx;");
    asm("loc_49E74F: mov (%ecx),%eax;");
    asm("loc_49E751: push $0;");
    asm("loc_49E753: push $1;");
    asm("loc_49E755: push $1;");
    asm("loc_49E757: calll *0xA8(%eax);");
    asm("loc_49E75D: mov 0xC60(%esi),%ecx;");
    asm("loc_49E763: mov (%ecx),%edx;");
    asm("loc_49E765: push $0;");
    asm("loc_49E767: push $1;");
    asm("loc_49E769: push $1;");
    asm("loc_49E76B: calll *0xA8(%edx);");
    asm("loc_49E771: mov 0xC64(%esi),%ecx;");
    asm("loc_49E777: mov (%ecx),%eax;");
    asm("loc_49E779: push $0;");
    asm("loc_49E77B: push $1;");
    asm("loc_49E77D: push $1;");
    asm("loc_49E77F: calll *0xA8(%eax);");
    asm("loc_49E785: mov 0xB54(%esi),%ecx;");
    asm("loc_49E78B: mov (%ecx),%edx;");
    asm("loc_49E78D: push $0;");
    asm("loc_49E78F: push $1;");
    asm("loc_49E791: push $1;");
    asm("loc_49E793: calll *0xA8(%edx);");
    asm("loc_49E799: mov 0xAF8(%esi),%ecx;");
    asm("loc_49E79F: mov (%ecx),%eax;");
    asm("loc_49E7A1: push $0;");
    asm("loc_49E7A3: push $0;");
    asm("loc_49E7A5: push $1;");
    asm("loc_49E7A7: calll *0xA8(%eax);");
    asm("loc_49E7AD: mov 0xAFC(%esi),%ecx;");
    asm("loc_49E7B3: mov (%ecx),%edx;");
    asm("loc_49E7B5: push $0;");
    asm("loc_49E7B7: push $0;");
    asm("loc_49E7B9: push $1;");
    asm("loc_49E7BB: calll *0xA8(%edx);");
    asm("loc_49E7C1: mov 0xB00(%esi),%ecx;");
    asm("loc_49E7C7: mov (%ecx),%eax;");
    asm("loc_49E7C9: push $0;");
    asm("loc_49E7CB: push $0;");
    asm("loc_49E7CD: push $1;");
    asm("loc_49E7CF: calll *0xA8(%eax);");
    asm("loc_49E7D5: mov 0xB04(%esi),%ecx;");
    asm("loc_49E7DB: mov (%ecx),%edx;");
    asm("loc_49E7DD: push $0;");
    asm("loc_49E7DF: push $0;");
    asm("loc_49E7E1: push $1;");
    asm("loc_49E7E3: calll *0xA8(%edx);");
    asm("loc_49E7E9: movl $0,0x18(%esp);");
    asm("loc_49E7F1: mov 0x18(%esp),%ecx;");
    asm("loc_49E7F5: lea 0x46C(%esi),%eax;");
    asm("loc_49E7FB: mov %ecx,(%eax);");
    asm("loc_49E7FD: movl $0,0x1C(%esp);");
    asm("loc_49E805: mov 0x1C(%esp),%edx;");
    asm("loc_49E809: movl $0,0x20(%esp);");
    asm("loc_49E811: mov 0x20(%esp),%ecx;");
    asm("loc_49E815: mov %edx,4(%eax);");
    asm("loc_49E818: mov %ecx,8(%eax);");
    asm("loc_49E81B: mov %esi,%ecx;");
    asm("loc_49E81D: call _sub_496600;");
    asm("loc_49E822: lea 0xB08(%esi),%edi;");
    asm("loc_49E828: mov $8,%ebx;");
    asm("loc_49E82D: lea (%ecx),%ecx;");
    asm("loc_49E830: mov (%edi),%ecx;");
    asm("loc_49E832: mov (%ecx),%edx;");
    asm("loc_49E834: push $0;");
    asm("loc_49E836: push $1;");
    asm("loc_49E838: push $1;");
    asm("loc_49E83A: calll *0xA8(%edx);");
    asm("loc_49E840: add $4,%edi;");
    asm("loc_49E843: dec %ebx;");
    asm("loc_49E844: jne loc_49E830;");
    asm("loc_49E846: lea 0xB28(%esi),%edi;");
    asm("loc_49E84C: mov $8,%ebx;");
    asm("loc_49E851: mov (%edi),%ecx;");
    asm("loc_49E853: mov (%ecx),%eax;");
    asm("loc_49E855: push $0;");
    asm("loc_49E857: push $1;");
    asm("loc_49E859: push $1;");
    asm("loc_49E85B: calll *0xA8(%eax);");
    asm("loc_49E861: add $4,%edi;");
    asm("loc_49E864: dec %ebx;");
    asm("loc_49E865: jne loc_49E851;");
    asm("loc_49E867: mov 0x8C8(%esi),%esi;");
    asm("loc_49E86D: mov (%esi),%edx;");
    asm("loc_49E86F: push $0;");
    asm("loc_49E871: push $0x505;");
    asm("loc_49E876: push $0x1E;");
    asm("loc_49E878: mov %esi,%ecx;");
    asm("loc_49E87A: calll *0xA8(%edx);");
    asm("loc_49E880: pop %edi;");
    asm("loc_49E881: pop %esi;");
    asm("loc_49E882: pop %ebp;");
    asm("loc_49E883: pop %ebx;");
    asm("loc_49E884: add $0x14,%esp;");
    asm("loc_49E887: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49E890() // _sub_49E890
{
    __DEBUG_ASM(49E890);
    // chunk 0x49E890 _sub_49E890
    asm("loc_49E890: sub $0x54,%esp;");
    asm("loc_49E893: fildl _data_616840;");
    asm("loc_49E899: push %ebx;");
    asm("loc_49E89A: mov %ecx,%ebx;");
    asm("loc_49E89C: fsts 8(%esp);");
    asm("loc_49E8A0: fsubs 0x424(%ebx);");
    asm("loc_49E8A6: fildl _data_616844;");
    asm("loc_49E8AC: fsts 0xC(%esp);");
    asm("loc_49E8B0: fsubs 0x428(%ebx);");
    asm("loc_49E8B6: fstps 4(%esp);");
    asm("loc_49E8BA: fcoms _data_5C7474;");
    asm("loc_49E8C0: fnstsw %ax;");
    asm("loc_49E8C2: test $1,%ah;");
    asm("loc_49E8C5: jne loc_49EA3A;");
    asm("loc_49E8CB: flds 4(%esp);");
    asm("loc_49E8CF: fcomps _data_5C7474;");
    asm("loc_49E8D5: fnstsw %ax;");
    asm("loc_49E8D7: test $1,%ah;");
    asm("loc_49E8DA: jne loc_49EA3A;");
    asm("loc_49E8E0: fcomps 0x430(%ebx);");
    asm("loc_49E8E6: fnstsw %ax;");
    asm("loc_49E8E8: test $5,%ah;");
    asm("loc_49E8EB: jp loc_49EA3C;");
    asm("loc_49E8F1: flds 4(%esp);");
    asm("loc_49E8F5: fcomps 0x434(%ebx);");
    asm("loc_49E8FB: fnstsw %ax;");
    asm("loc_49E8FD: test $5,%ah;");
    asm("loc_49E900: jp loc_49EA3C;");
    asm("loc_49E906: flds 8(%esp);");
    asm("loc_49E90A: push %esi;");
    asm("loc_49E90B: fsubs _data_67DC60;");
    asm("loc_49E911: push %edi;");
    asm("loc_49E912: mov $_data_67DBFC,%esi;");
    asm("loc_49E917: lea 0x3C(%esp),%edi;");
    asm("loc_49E91B: fdivs _data_67DC70;");
    asm("loc_49E921: fmuls _data_67DC9C;");
    asm("loc_49E927: fstps 0x18(%esp);");
    asm("loc_49E92B: mov 0x18(%esp),%eax;");
    asm("loc_49E92F: flds 0x14(%esp);");
    asm("loc_49E933: mov %eax,0x30(%esp);");
    asm("loc_49E937: fsubs _data_67DC64;");
    asm("loc_49E93D: lea 0x30(%esp),%eax;");
    asm("loc_49E941: push %eax;");
    asm("loc_49E942: fdivs _data_67DC74;");
    asm("loc_49E948: fmuls _data_67DC9C;");
    asm("loc_49E94E: fstps 0x20(%esp);");
    asm("loc_49E952: mov 0x20(%esp),%ecx;");
    asm("loc_49E956: flds _data_67DC9C;");
    asm("loc_49E95C: mov %ecx,0x38(%esp);");
    asm("loc_49E960: fchs;");
    asm("loc_49E962: mov $9,%ecx;");
    asm("loc_49E967: fstps 0x24(%esp);");
    asm("loc_49E96B: mov 0x24(%esp),%edx;");
    asm("loc_49E96F: rep movsl (%esi),(%edi);");
    asm("loc_49E971: lea 0x40(%esp),%ecx;");
    asm("loc_49E975: mov %edx,0x3C(%esp);");
    asm("loc_49E979: push %ecx;");
    asm("loc_49E97A: lea 0x2C(%esp),%edx;");
    asm("loc_49E97E: push %edx;");
    asm("loc_49E97F: call _sub_423B90;");
    asm("loc_49E984: mov 0x30(%esp),%eax;");
    asm("loc_49E988: flds 0xB0(%ebx);");
    asm("loc_49E98E: mov 0x34(%esp),%ecx;");
    asm("loc_49E992: fadds 0x68(%ebx);");
    asm("loc_49E995: mov 0x38(%esp),%edx;");
    asm("loc_49E999: mov %ecx,0x28(%esp);");
    asm("loc_49E99D: fdivs 0x38(%esp);");
    asm("loc_49E9A1: mov %eax,0x24(%esp);");
    asm("loc_49E9A5: mov 0x70(%esp),%eax;");
    asm("loc_49E9A9: mov %edx,0x2C(%esp);");
    asm("loc_49E9AD: mov %eax,%ecx;");
    asm("loc_49E9AF: add $0xC,%esp;");
    asm("loc_49E9B2: flds 0x24(%esp);");
    asm("loc_49E9B6: fmul %st(1),%st;");
    asm("loc_49E9B8: fstps 0x18(%esp);");
    asm("loc_49E9BC: flds 0x1C(%esp);");
    asm("loc_49E9C0: fmul %st(1),%st;");
    asm("loc_49E9C2: fstps 0x1C(%esp);");
    asm("loc_49E9C6: fmuls 0x20(%esp);");
    asm("loc_49E9CA: flds 0x60(%ebx);");
    asm("loc_49E9CD: fadds 0xA8(%ebx);");
    asm("loc_49E9D3: flds 0xAC(%ebx);");
    asm("loc_49E9D9: fadds 0x64(%ebx);");
    asm("loc_49E9DC: fstps 0x34(%esp);");
    asm("loc_49E9E0: flds 0x18(%esp);");
    asm("loc_49E9E4: fadds _data_5D3F10;");
    asm("loc_49E9EA: fstps 0x18(%esp);");
    asm("loc_49E9EE: mov 0x18(%esp),%edx;");
    asm("loc_49E9F2: flds 0x1C(%esp);");
    asm("loc_49E9F6: mov %edx,(%ecx);");
    asm("loc_49E9F8: fsubs _data_5D1494;");
    asm("loc_49E9FE: fstps 0x1C(%esp);");
    asm("loc_49EA02: mov 0x1C(%esp),%edx;");
    asm("loc_49EA06: mov %edx,4(%ecx);");
    asm("loc_49EA09: fxch;");
    asm("loc_49EA0B: fstps 0x20(%esp);");
    asm("loc_49EA0F: mov 0x20(%esp),%edx;");
    asm("loc_49EA13: mov %edx,8(%ecx);");
    asm("loc_49EA16: flds (%eax);");
    asm("loc_49EA18: fsub %st(1),%st;");
    asm("loc_49EA1A: fstps (%eax);");
    asm("loc_49EA1C: fstp %st(0);");
    asm("loc_49EA1E: flds 4(%eax);");
    asm("loc_49EA21: fsubs 0x34(%esp);");
    asm("loc_49EA25: pop %edi;");
    asm("loc_49EA26: fstps 4(%eax);");
    asm("loc_49EA29: pop %esi;");
    asm("loc_49EA2A: movl $0,8(%eax);");
    asm("loc_49EA31: mov $1,%al;");
    asm("loc_49EA33: pop %ebx;");
    asm("loc_49EA34: add $0x54,%esp;");
    asm("loc_49EA37: ret $4;");
    asm("loc_49EA3A: fstp %st(0);");
    asm("loc_49EA3C: xor %al,%al;");
    asm("loc_49EA3E: pop %ebx;");
    asm("loc_49EA3F: add $0x54,%esp;");
    asm("loc_49EA42: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49EA50() // _sub_49EA50
{
    __DEBUG_ASM(49EA50);
    // chunk 0x49EA50 _sub_49EA50
    asm("loc_49EA50: sub $0x48,%esp;");
    asm("loc_49EA53: push %ebx;");
    asm("loc_49EA54: push %ebp;");
    asm("loc_49EA55: push %esi;");
    asm("loc_49EA56: mov %ecx,%esi;");
    asm("loc_49EA58: mov 0x478(%esi),%al;");
    asm("loc_49EA5E: test %al,%al;");
    asm("loc_49EA60: push %edi;");
    asm("loc_49EA61: jne loc_49F0BE;");
    asm("loc_49EA67: lea 0x40(%esp),%eax;");
    asm("loc_49EA6B: push %eax;");
    asm("loc_49EA6C: call _sub_492410;");
    asm("loc_49EA71: test %al,%al;");
    asm("loc_49EA73: je loc_49F0BE;");
    asm("loc_49EA79: lea 0x28(%esp),%ecx;");
    asm("loc_49EA7D: push %ecx;");
    asm("loc_49EA7E: mov %esi,%ecx;");
    asm("loc_49EA80: call _sub_49E890;");
    asm("loc_49EA85: test %al,%al;");
    asm("loc_49EA87: je loc_49F0BE;");
    asm("loc_49EA8D: lea 0x24(%esp),%edx;");
    asm("loc_49EA91: push %edx;");
    asm("loc_49EA92: lea 0x24(%esp),%eax;");
    asm("loc_49EA96: push %eax;");
    asm("loc_49EA97: mov %esi,%ecx;");
    asm("loc_49EA99: call _sub_4980D0;");
    asm("loc_49EA9E: test %al,%al;");
    asm("loc_49EAA0: je loc_49F0BE;");
    asm("loc_49EAA6: mov _data_6720A0,%eax;");
    asm("loc_49EAAB: cmp $1,%eax;");
    asm("loc_49EAAE: je loc_49EAB5;");
    asm("loc_49EAB0: cmp $2,%eax;");
    asm("loc_49EAB3: jne loc_49EADB;");
    asm("loc_49EAB5: flds 0x20(%esp);");
    asm("loc_49EAB9: fcomps _data_5D3F20;");
    asm("loc_49EABF: fnstsw %ax;");
    asm("loc_49EAC1: test $0x41,%ah;");
    asm("loc_49EAC4: jne loc_49EADB;");
    asm("loc_49EAC6: flds 0x24(%esp);");
    asm("loc_49EACA: fcomps _data_5D3F1C;");
    asm("loc_49EAD0: fnstsw %ax;");
    asm("loc_49EAD2: test $5,%ah;");
    asm("loc_49EAD5: jnp loc_49F0BE;");
    asm("loc_49EADB: mov 0x30(%esp),%eax;");
    asm("loc_49EADF: flds 0x28(%esp);");
    asm("loc_49EAE3: mov 0x28(%esp),%ecx;");
    asm("loc_49EAE7: fsubs _data_5D3F18;");
    asm("loc_49EAED: mov 0x2C(%esp),%edx;");
    asm("loc_49EAF1: mov %eax,0x3C(%esp);");
    asm("loc_49EAF5: mov %ecx,0x34(%esp);");
    asm("loc_49EAF9: fstps 0x34(%esp);");
    asm("loc_49EAFD: mov 0x8E0(%esi),%ecx;");
    asm("loc_49EB03: push $0;");
    asm("loc_49EB05: lea 0x38(%esp),%eax;");
    asm("loc_49EB09: push %eax;");
    asm("loc_49EB0A: mov %edx,0x40(%esp);");
    asm("loc_49EB0E: mov (%ecx),%edx;");
    asm("loc_49EB10: push $6;");
    asm("loc_49EB12: calll *0xA8(%edx);");
    asm("loc_49EB18: mov 0x8E4(%esi),%ecx;");
    asm("loc_49EB1E: mov (%ecx),%edx;");
    asm("loc_49EB20: push $0;");
    asm("loc_49EB22: lea 0x38(%esp),%eax;");
    asm("loc_49EB26: push %eax;");
    asm("loc_49EB27: push $6;");
    asm("loc_49EB29: calll *0xA8(%edx);");
    asm("loc_49EB2F: mov 0x7FC(%esi),%ecx;");
    asm("loc_49EB35: mov (%ecx),%edx;");
    asm("loc_49EB37: push $0;");
    asm("loc_49EB39: lea 0x38(%esp),%eax;");
    asm("loc_49EB3D: push %eax;");
    asm("loc_49EB3E: push $6;");
    asm("loc_49EB40: calll *0xA8(%edx);");
    asm("loc_49EB46: flds 0x28(%esp);");
    asm("loc_49EB4A: mov 0x30(%esp),%eax;");
    asm("loc_49EB4E: fadds _data_5D3F18;");
    asm("loc_49EB54: mov 0x28(%esp),%ecx;");
    asm("loc_49EB58: mov 0x2C(%esp),%edx;");
    asm("loc_49EB5C: mov %eax,0x3C(%esp);");
    asm("loc_49EB60: mov %ecx,0x34(%esp);");
    asm("loc_49EB64: fstps 0x34(%esp);");
    asm("loc_49EB68: mov 0x7F4(%esi),%ecx;");
    asm("loc_49EB6E: push $0;");
    asm("loc_49EB70: lea 0x38(%esp),%eax;");
    asm("loc_49EB74: push %eax;");
    asm("loc_49EB75: mov %edx,0x40(%esp);");
    asm("loc_49EB79: mov (%ecx),%edx;");
    asm("loc_49EB7B: push $6;");
    asm("loc_49EB7D: calll *0xA8(%edx);");
    asm("loc_49EB83: mov 0x800(%esi),%ecx;");
    asm("loc_49EB89: mov (%ecx),%edx;");
    asm("loc_49EB8B: push $0;");
    asm("loc_49EB8D: lea 0x38(%esp),%eax;");
    asm("loc_49EB91: push %eax;");
    asm("loc_49EB92: push $6;");
    asm("loc_49EB94: calll *0xA8(%edx);");
    asm("loc_49EB9A: flds 0x2C(%esp);");
    asm("loc_49EB9E: mov 0x30(%esp),%eax;");
    asm("loc_49EBA2: fadds _data_5D3F18;");
    asm("loc_49EBA8: mov 0x28(%esp),%ecx;");
    asm("loc_49EBAC: mov 0x2C(%esp),%edx;");
    asm("loc_49EBB0: mov %eax,0x3C(%esp);");
    asm("loc_49EBB4: push $0;");
    asm("loc_49EBB6: mov %ecx,0x38(%esp);");
    asm("loc_49EBBA: mov 0x8E8(%esi),%ecx;");
    asm("loc_49EBC0: lea 0x38(%esp),%eax;");
    asm("loc_49EBC4: mov %edx,0x3C(%esp);");
    asm("loc_49EBC8: fstps 0x3C(%esp);");
    asm("loc_49EBCC: mov (%ecx),%edx;");
    asm("loc_49EBCE: push %eax;");
    asm("loc_49EBCF: push $6;");
    asm("loc_49EBD1: calll *0xA8(%edx);");
    asm("loc_49EBD7: flds 0x2C(%esp);");
    asm("loc_49EBDB: mov 0x28(%esp),%ecx;");
    asm("loc_49EBDF: fsubs _data_5D3F18;");
    asm("loc_49EBE5: mov 0x2C(%esp),%edx;");
    asm("loc_49EBE9: mov 0x30(%esp),%eax;");
    asm("loc_49EBED: mov %ecx,0x34(%esp);");
    asm("loc_49EBF1: mov 0x8EC(%esi),%ecx;");
    asm("loc_49EBF7: mov %edx,0x38(%esp);");
    asm("loc_49EBFB: fstps 0x38(%esp);");
    asm("loc_49EBFF: mov %eax,0x3C(%esp);");
    asm("loc_49EC03: mov (%ecx),%edx;");
    asm("loc_49EC05: push $0;");
    asm("loc_49EC07: lea 0x38(%esp),%eax;");
    asm("loc_49EC0B: push %eax;");
    asm("loc_49EC0C: push $6;");
    asm("loc_49EC0E: calll *0xA8(%edx);");
    asm("loc_49EC14: mov 0x7F8(%esi),%ecx;");
    asm("loc_49EC1A: mov (%ecx),%edx;");
    asm("loc_49EC1C: push $0;");
    asm("loc_49EC1E: lea 0x38(%esp),%eax;");
    asm("loc_49EC22: push %eax;");
    asm("loc_49EC23: push $6;");
    asm("loc_49EC25: calll *0xA8(%edx);");
    asm("loc_49EC2B: xor %bl,%bl;");
    asm("loc_49EC2D: push $0;");
    asm("loc_49EC2F: lea 0x44(%esp),%ecx;");
    asm("loc_49EC33: push %ecx;");
    asm("loc_49EC34: mov %esi,%ecx;");
    asm("loc_49EC36: mov %bl,0x1C(%esp);");
    asm("loc_49EC3A: mov %bl,0x1F(%esp);");
    asm("loc_49EC3E: mov %bl,0x19(%esp);");
    asm("loc_49EC42: mov %bl,0x1B(%esp);");
    asm("loc_49EC46: call _sub_496D40;");
    asm("loc_49EC4B: mov %eax,%edi;");
    asm("loc_49EC4D: test %edi,%edi;");
    asm("loc_49EC4F: mov %edi,0x18(%esp);");
    asm("loc_49EC53: je loc_49ED29;");
    asm("loc_49EC59: mov (%edi),%eax;");
    asm("loc_49EC5B: cmp $3,%eax;");
    asm("loc_49EC5E: jne loc_49EE7E;");
    asm("loc_49EC64: movb $1,0x17(%esp);");
    asm("loc_49EC69: call _sub_4C4690;");
    asm("loc_49EC6E: mov %eax,%ebx;");
    asm("loc_49EC70: or $0xFFFFFFFF,%ebp;");
    asm("loc_49EC73: xor %edi,%edi;");
    asm("loc_49EC75: test %ebx,%ebx;");
    asm("loc_49EC77: movl $0x7FFFFFFF,0x1C(%esp);");
    asm("loc_49EC7F: jle loc_49ECA2;");
    asm("loc_49EC81: push %edi;");
    asm("loc_49EC82: call _sub_4C46A0;");
    asm("loc_49EC87: mov 0x14(%eax),%eax;");
    asm("loc_49EC8A: add $4,%esp;");
    asm("loc_49EC8D: cmp %ebp,%eax;");
    asm("loc_49EC8F: jle loc_49EC93;");
    asm("loc_49EC91: mov %eax,%ebp;");
    asm("loc_49EC93: cmp 0x1C(%esp),%eax;");
    asm("loc_49EC97: jge loc_49EC9D;");
    asm("loc_49EC99: mov %eax,0x1C(%esp);");
    asm("loc_49EC9D: inc %edi;");
    asm("loc_49EC9E: cmp %ebx,%edi;");
    asm("loc_49ECA0: jl loc_49EC81;");
    asm("loc_49ECA2: mov 0x18(%esp),%ecx;");
    asm("loc_49ECA6: mov 0x54(%ecx),%eax;");
    asm("loc_49ECA9: cmp %ebp,%eax;");
    asm("loc_49ECAB: je loc_49ECB3;");
    asm("loc_49ECAD: cmp 0x1C(%esp),%eax;");
    asm("loc_49ECB1: jne loc_49ECB8;");
    asm("loc_49ECB3: movb $1,0x14(%esp);");
    asm("loc_49ECB8: mov 0x58(%ecx),%edx;");
    asm("loc_49ECBB: dec %edx;");
    asm("loc_49ECBC: push %edx;");
    asm("loc_49ECBD: call _sub_4C46A0;");
    asm("loc_49ECC2: add $4,%esp;");
    asm("loc_49ECC5: test %eax,%eax;");
    asm("loc_49ECC7: je loc_49ECF9;");
    asm("loc_49ECC9: mov 0x10(%eax),%edi;");
    asm("loc_49ECCC: test %edi,%edi;");
    asm("loc_49ECCE: je loc_49ECF9;");
    asm("loc_49ECD0: mov 0x400(%esi),%edx;");
    asm("loc_49ECD6: mov (%edx),%eax;");
    asm("loc_49ECD8: cmp %edx,%eax;");
    asm("loc_49ECDA: je loc_49ECF9;");
    asm("loc_49ECDC: lea (%esp),%esp;");
    asm("loc_49ECE0: mov 8(%eax),%ecx;");
    asm("loc_49ECE3: mov 0x48(%ecx),%bl;");
    asm("loc_49ECE6: test %bl,%bl;");
    asm("loc_49ECE8: je loc_49ECF3;");
    asm("loc_49ECEA: cmp %edi,0x70(%ecx);");
    asm("loc_49ECED: je loc_49EE69;");
    asm("loc_49ECF3: mov (%eax),%eax;");
    asm("loc_49ECF5: cmp %edx,%eax;");
    asm("loc_49ECF7: jne loc_49ECE0;");
    asm("loc_49ECF9: mov 0x18(%esp),%edi;");
    asm("loc_49ECFD: mov 0x14(%esp),%bl;");
    asm("loc_49ED01: mov (%edi),%eax;");
    asm("loc_49ED03: cmp $3,%eax;");
    asm("loc_49ED06: je loc_49ED0D;");
    asm("loc_49ED08: cmp $4,%eax;");
    asm("loc_49ED0B: jne loc_49ED29;");
    asm("loc_49ED0D: push $1;");
    asm("loc_49ED0F: lea 0x44(%esp),%ecx;");
    asm("loc_49ED13: push %ecx;");
    asm("loc_49ED14: mov %esi,%ecx;");
    asm("loc_49ED16: call _sub_496D40;");
    asm("loc_49ED1B: test %eax,%eax;");
    asm("loc_49ED1D: je loc_49ED29;");
    asm("loc_49ED1F: cmpl $0,(%eax);");
    asm("loc_49ED22: jne loc_49ED29;");
    asm("loc_49ED24: movb $1,0x11(%esp);");
    asm("loc_49ED29: mov 0x7D0(%esi),%eax;");
    asm("loc_49ED2F: test %eax,%eax;");
    asm("loc_49ED31: jne loc_49ED3F;");
    asm("loc_49ED33: mov 0x11(%esp),%al;");
    asm("loc_49ED37: test %al,%al;");
    asm("loc_49ED39: je loc_49F0BE;");
    asm("loc_49ED3F: mov 0x11(%esp),%al;");
    asm("loc_49ED43: test %al,%al;");
    asm("loc_49ED45: movb $0,0x15(%esp);");
    asm("loc_49ED4A: jne loc_49EDA3;");
    asm("loc_49ED4C: flds 0xF48(%esi);");
    asm("loc_49ED52: mov 0x7E0(%esi),%ecx;");
    asm("loc_49ED58: fdivrs _data_5C75DC;");
    asm("loc_49ED5E: xor %edx,%edx;");
    asm("loc_49ED60: mov 0x87E(%esi),%dl;");
    asm("loc_49ED66: lea 0x4C(%esp),%eax;");
    asm("loc_49ED6A: push %edx;");
    asm("loc_49ED6B: push $1;");
    asm("loc_49ED6D: push $0;");
    asm("loc_49ED6F: push %eax;");
    asm("loc_49ED70: push %ecx;");
    asm("loc_49ED71: flds 0x54(%esp);");
    asm("loc_49ED75: fmul %st(1),%st;");
    asm("loc_49ED77: fstps 0x60(%esp);");
    asm("loc_49ED7B: flds 0x58(%esp);");
    asm("loc_49ED7F: fmul %st(1),%st;");
    asm("loc_49ED81: fstps 0x64(%esp);");
    asm("loc_49ED85: fmuls 0x5C(%esp);");
    asm("loc_49ED89: fstps 0x68(%esp);");
    asm("loc_49ED8D: call _sub_4A1B50;");
    asm("loc_49ED92: add $0x14,%esp;");
    asm("loc_49ED95: test %eax,%eax;");
    asm("loc_49ED97: je loc_49EDA3;");
    asm("loc_49ED99: movb $1,0x11(%esp);");
    asm("loc_49ED9E: movb $1,0x15(%esp);");
    asm("loc_49EDA3: mov 0x40(%esp),%eax;");
    asm("loc_49EDA7: mov 0x44(%esp),%ecx;");
    asm("loc_49EDAB: lea 0x90C(%esi),%edx;");
    asm("loc_49EDB1: mov %eax,(%edx);");
    asm("loc_49EDB3: mov 0x48(%esp),%eax;");
    asm("loc_49EDB7: mov %ecx,4(%edx);");
    asm("loc_49EDBA: mov %eax,8(%edx);");
    asm("loc_49EDBD: mov 0x28(%esp),%edx;");
    asm("loc_49EDC1: mov 0x2C(%esp),%eax;");
    asm("loc_49EDC5: lea 0x918(%esi),%ecx;");
    asm("loc_49EDCB: mov %edx,(%ecx);");
    asm("loc_49EDCD: mov 0x30(%esp),%edx;");
    asm("loc_49EDD1: mov %eax,4(%ecx);");
    asm("loc_49EDD4: mov 0x20(%esp),%eax;");
    asm("loc_49EDD8: mov %edx,8(%ecx);");
    asm("loc_49EDDB: mov 0x24(%esp),%ecx;");
    asm("loc_49EDDF: push $0;");
    asm("loc_49EDE1: mov %ecx,0x928(%esi);");
    asm("loc_49EDE7: mov 0xAD0(%esi),%ecx;");
    asm("loc_49EDED: push $0;");
    asm("loc_49EDEF: mov %eax,0x924(%esi);");
    asm("loc_49EDF5: movb $1,0x92C(%esi);");
    asm("loc_49EDFC: mov (%ecx),%edx;");
    asm("loc_49EDFE: push $1;");
    asm("loc_49EE00: calll *0xA8(%edx);");
    asm("loc_49EE06: flds 0x28(%esp);");
    asm("loc_49EE0A: mov 0xAD0(%esi),%ecx;");
    asm("loc_49EE10: fadds 0x31C(%ecx);");
    asm("loc_49EE16: push $0;");
    asm("loc_49EE18: lea 0x2C(%esp),%edx;");
    asm("loc_49EE1C: push %edx;");
    asm("loc_49EE1D: fstps 0x30(%esp);");
    asm("loc_49EE21: push $6;");
    asm("loc_49EE23: flds 0x38(%esp);");
    asm("loc_49EE27: fadds 0x320(%ecx);");
    asm("loc_49EE2D: fstps 0x38(%esp);");
    asm("loc_49EE31: flds 0x3C(%esp);");
    asm("loc_49EE35: fadds 0x324(%ecx);");
    asm("loc_49EE3B: fstps 0x3C(%esp);");
    asm("loc_49EE3F: mov (%ecx),%eax;");
    asm("loc_49EE41: calll *0xA8(%eax);");
    asm("loc_49EE47: movzbl 0x13(%esp),%edx;");
    asm("loc_49EE4C: cmpl $2,0x7D0(%esi);");
    asm("loc_49EE53: push $0;");
    asm("loc_49EE55: push %edx;");
    asm("loc_49EE56: push $1;");
    asm("loc_49EE58: jne loc_49EEF6;");
    asm("loc_49EE5E: mov 0x8E4(%esi),%ecx;");
    asm("loc_49EE64: jmp loc_49EEFC;");
    asm("loc_49EE69: mov 0x64(%ecx),%eax;");
    asm("loc_49EE6C: test %eax,%eax;");
    asm("loc_49EE6E: je loc_49ECF9;");
    asm("loc_49EE74: movb $1,0x13(%esp);");
    asm("loc_49EE79: jmp loc_49ECF9;");
    asm("loc_49EE7E: cmp $4,%eax;");
    asm("loc_49EE81: jne loc_49EEC1;");
    asm("loc_49EE83: push $1;");
    asm("loc_49EE85: lea 0x44(%esp),%eax;");
    asm("loc_49EE89: push %eax;");
    asm("loc_49EE8A: mov %esi,%ecx;");
    asm("loc_49EE8C: call _sub_496D40;");
    asm("loc_49EE91: test %eax,%eax;");
    asm("loc_49EE93: je loc_49ED01;");
    asm("loc_49EE99: mov 0x7D0(%esi),%ecx;");
    asm("loc_49EE9F: test %ecx,%ecx;");
    asm("loc_49EEA1: je loc_49ED01;");
    asm("loc_49EEA7: mov 0x64(%eax),%ecx;");
    asm("loc_49EEAA: test %ecx,%ecx;");
    asm("loc_49EEAC: je loc_49ED01;");
    asm("loc_49EEB2: movb $1,0x11(%esp);");
    asm("loc_49EEB7: movb $1,0x13(%esp);");
    asm("loc_49EEBC: jmp loc_49ED01;");
    asm("loc_49EEC1: test %eax,%eax;");
    asm("loc_49EEC3: je loc_49EECE;");
    asm("loc_49EEC5: cmp $1,%eax;");
    asm("loc_49EEC8: jne loc_49ED01;");
    asm("loc_49EECE: mov 0x7D0(%esi),%eax;");
    asm("loc_49EED4: test %eax,%eax;");
    asm("loc_49EED6: movb $1,0x11(%esp);");
    asm("loc_49EEDB: je loc_49ED01;");
    asm("loc_49EEE1: mov 0x64(%edi),%eax;");
    asm("loc_49EEE4: test %eax,%eax;");
    asm("loc_49EEE6: je loc_49ED01;");
    asm("loc_49EEEC: movb $1,0x13(%esp);");
    asm("loc_49EEF1: jmp loc_49ED01;");
    asm("loc_49EEF6: mov 0x8E0(%esi),%ecx;");
    asm("loc_49EEFC: mov (%ecx),%eax;");
    asm("loc_49EEFE: calll *0xA8(%eax);");
    asm("loc_49EF04: movb $0,0x16(%esp);");
    asm("loc_49EF09: call _sub_4C4750;");
    asm("loc_49EF0E: cmp $0x63,%eax;");
    asm("loc_49EF11: jl loc_49EF18;");
    asm("loc_49EF13: movb $1,0x16(%esp);");
    asm("loc_49EF18: mov 0x11(%esp),%al;");
    asm("loc_49EF1C: test %al,%al;");
    asm("loc_49EF1E: jne loc_49EF24;");
    asm("loc_49EF20: test %bl,%bl;");
    asm("loc_49EF22: je loc_49EF8C;");
    asm("loc_49EF24: mov 0x7D0(%esi),%eax;");
    asm("loc_49EF2A: test %eax,%eax;");
    asm("loc_49EF2C: movb $1,0x12(%esp);");
    asm("loc_49EF31: je loc_49EF3C;");
    asm("loc_49EF33: call _sub_4C4810;");
    asm("loc_49EF38: test %al,%al;");
    asm("loc_49EF3A: je loc_49EF41;");
    asm("loc_49EF3C: movb $0,0x12(%esp);");
    asm("loc_49EF41: mov 0x7E0(%esi),%ecx;");
    asm("loc_49EF47: mov (%ecx),%eax;");
    asm("loc_49EF49: calll *(%eax);");
    asm("loc_49EF4B: mov %eax,%ebp;");
    asm("loc_49EF4D: call _sub_4C4830;");
    asm("loc_49EF52: cmp %eax,%ebp;");
    asm("loc_49EF54: je loc_49EF5B;");
    asm("loc_49EF56: movb $0,0x12(%esp);");
    asm("loc_49EF5B: mov 0x7D0(%esi),%eax;");
    asm("loc_49EF61: cmp $1,%eax;");
    asm("loc_49EF64: jne loc_49F01A;");
    asm("loc_49EF6A: test %bl,%bl;");
    asm("loc_49EF6C: jne loc_49F022;");
    asm("loc_49EF72: test %edi,%edi;");
    asm("loc_49EF74: je loc_49EF91;");
    asm("loc_49EF76: flds 0xF48(%esi);");
    asm("loc_49EF7C: fmuls 0x3C(%edi);");
    asm("loc_49EF7F: fcomps _data_5D3F14;");
    asm("loc_49EF85: fnstsw %ax;");
    asm("loc_49EF87: test $5,%ah;");
    asm("loc_49EF8A: jp loc_49EF91;");
    asm("loc_49EF8C: movb $0,0x12(%esp);");
    asm("loc_49EF91: mov $1,%eax;");
    asm("loc_49EF96: mov 0x8EC(%esi),%ecx;");
    asm("loc_49EF9C: mov (%ecx),%edx;");
    asm("loc_49EF9E: push $0;");
    asm("loc_49EFA0: push %eax;");
    asm("loc_49EFA1: push $1;");
    asm("loc_49EFA3: calll *0xA8(%edx);");
    asm("loc_49EFA9: mov 0x11(%esp),%bl;");
    asm("loc_49EFAD: mov 0x8E8(%esi),%ecx;");
    asm("loc_49EFB3: mov (%ecx),%eax;");
    asm("loc_49EFB5: xor %edx,%edx;");
    asm("loc_49EFB7: test %bl,%bl;");
    asm("loc_49EFB9: sete %dl;");
    asm("loc_49EFBC: push $0;");
    asm("loc_49EFBE: push %edx;");
    asm("loc_49EFBF: push $1;");
    asm("loc_49EFC1: calll *0xA8(%eax);");
    asm("loc_49EFC7: xor %bl,%bl;");
    asm("loc_49EFC9: call _sub_4C4FB0;");
    asm("loc_49EFCE: test %eax,%eax;");
    asm("loc_49EFD0: jle loc_49EFDD;");
    asm("loc_49EFD2: call _sub_4C58E0;");
    asm("loc_49EFD7: test %al,%al;");
    asm("loc_49EFD9: je loc_49EFDD;");
    asm("loc_49EFDB: mov $1,%bl;");
    asm("loc_49EFDD: mov 0x15(%esp),%al;");
    asm("loc_49EFE1: test %al,%al;");
    asm("loc_49EFE3: je loc_49EFEF;");
    asm("loc_49EFE5: movb $0,0x12(%esp);");
    asm("loc_49EFEA: movb $0,0x11(%esp);");
    asm("loc_49EFEF: mov 0x16(%esp),%al;");
    asm("loc_49EFF3: test %al,%al;");
    asm("loc_49EFF5: jne loc_49F044;");
    asm("loc_49EFF7: mov 0x14(%esp),%al;");
    asm("loc_49EFFB: test %al,%al;");
    asm("loc_49EFFD: jne loc_49F044;");
    asm("loc_49EFFF: mov 0x7D0(%esi),%eax;");
    asm("loc_49F005: test %eax,%eax;");
    asm("loc_49F007: je loc_49F044;");
    asm("loc_49F009: mov 0x17(%esp),%al;");
    asm("loc_49F00D: test %al,%al;");
    asm("loc_49F00F: jne loc_49F044;");
    asm("loc_49F011: test %bl,%bl;");
    asm("loc_49F013: jne loc_49F044;");
    asm("loc_49F015: jmp loc_49F0C6;");
    asm("loc_49F01A: test %bl,%bl;");
    asm("loc_49F01C: je loc_49EF91;");
    asm("loc_49F022: cmpl $1,0x54(%edi);");
    asm("loc_49F026: je loc_49F02D;");
    asm("loc_49F028: movb $0,0x12(%esp);");
    asm("loc_49F02D: test %bl,%bl;");
    asm("loc_49F02F: je loc_49EF91;");
    asm("loc_49F035: test %eax,%eax;");
    asm("loc_49F037: je loc_49EF91;");
    asm("loc_49F03D: xor %eax,%eax;");
    asm("loc_49F03F: jmp loc_49EF96;");
    asm("loc_49F044: mov $1,%bl;");
    asm("loc_49F046: mov $1,%eax;");
    asm("loc_49F04B: mov 0x7F4(%esi),%ecx;");
    asm("loc_49F051: mov (%ecx),%edx;");
    asm("loc_49F053: push $0;");
    asm("loc_49F055: push %eax;");
    asm("loc_49F056: push $1;");
    asm("loc_49F058: calll *0xA8(%edx);");
    asm("loc_49F05E: mov 0x7F8(%esi),%ecx;");
    asm("loc_49F064: mov (%ecx),%edx;");
    asm("loc_49F066: xor %eax,%eax;");
    asm("loc_49F068: test %bl,%bl;");
    asm("loc_49F06A: setne %al;");
    asm("loc_49F06D: push $0;");
    asm("loc_49F06F: push %eax;");
    asm("loc_49F070: push $1;");
    asm("loc_49F072: calll *0xA8(%edx);");
    asm("loc_49F078: mov 0x13(%esp),%bl;");
    asm("loc_49F07C: mov 0x7FC(%esi),%ecx;");
    asm("loc_49F082: mov (%ecx),%eax;");
    asm("loc_49F084: xor %edx,%edx;");
    asm("loc_49F086: test %bl,%bl;");
    asm("loc_49F088: sete %dl;");
    asm("loc_49F08B: push $0;");
    asm("loc_49F08D: push %edx;");
    asm("loc_49F08E: push $1;");
    asm("loc_49F090: calll *0xA8(%eax);");
    asm("loc_49F096: mov 0x12(%esp),%bl;");
    asm("loc_49F09A: mov 0x800(%esi),%ecx;");
    asm("loc_49F0A0: mov (%ecx),%eax;");
    asm("loc_49F0A2: xor %edx,%edx;");
    asm("loc_49F0A4: test %bl,%bl;");
    asm("loc_49F0A6: sete %dl;");
    asm("loc_49F0A9: push $0;");
    asm("loc_49F0AB: push %edx;");
    asm("loc_49F0AC: push $1;");
    asm("loc_49F0AE: calll *0xA8(%eax);");
    asm("loc_49F0B4: push $9;");
    asm("loc_49F0B6: call _sub_5645C0;");
    asm("loc_49F0BB: add $4,%esp;");
    asm("loc_49F0BE: pop %edi;");
    asm("loc_49F0BF: pop %esi;");
    asm("loc_49F0C0: pop %ebp;");
    asm("loc_49F0C1: pop %ebx;");
    asm("loc_49F0C2: add $0x48,%esp;");
    asm("loc_49F0C5: ret;");
    asm("loc_49F0C6: mov 0x11(%esp),%al;");
    asm("loc_49F0CA: test %al,%al;");
    asm("loc_49F0CC: jne loc_49F046;");
    asm("loc_49F0D2: xor %eax,%eax;");
    asm("loc_49F0D4: jmp loc_49F04B;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49F0E0() // _sub_49F0E0
{
    __DEBUG_ASM(49F0E0);
    // chunk 0x49F0E0 _sub_49F0E0
    asm("loc_49F0E0: push %esi;");
    asm("loc_49F0E1: push $0;");
    asm("loc_49F0E3: mov %ecx,%esi;");
    asm("loc_49F0E5: mov 0x8E0(%esi),%ecx;");
    asm("loc_49F0EB: mov (%ecx),%eax;");
    asm("loc_49F0ED: push $1;");
    asm("loc_49F0EF: push $1;");
    asm("loc_49F0F1: calll *0xA8(%eax);");
    asm("loc_49F0F7: mov 0x8E4(%esi),%ecx;");
    asm("loc_49F0FD: mov (%ecx),%edx;");
    asm("loc_49F0FF: push $0;");
    asm("loc_49F101: push $1;");
    asm("loc_49F103: push $1;");
    asm("loc_49F105: calll *0xA8(%edx);");
    asm("loc_49F10B: mov 0x8E8(%esi),%ecx;");
    asm("loc_49F111: mov (%ecx),%eax;");
    asm("loc_49F113: push $0;");
    asm("loc_49F115: push $1;");
    asm("loc_49F117: push $1;");
    asm("loc_49F119: calll *0xA8(%eax);");
    asm("loc_49F11F: mov 0x7F4(%esi),%ecx;");
    asm("loc_49F125: mov (%ecx),%edx;");
    asm("loc_49F127: push $0;");
    asm("loc_49F129: push $1;");
    asm("loc_49F12B: push $1;");
    asm("loc_49F12D: calll *0xA8(%edx);");
    asm("loc_49F133: mov 0x7F8(%esi),%ecx;");
    asm("loc_49F139: mov (%ecx),%eax;");
    asm("loc_49F13B: push $0;");
    asm("loc_49F13D: push $1;");
    asm("loc_49F13F: push $1;");
    asm("loc_49F141: calll *0xA8(%eax);");
    asm("loc_49F147: mov 0x7FC(%esi),%ecx;");
    asm("loc_49F14D: mov (%ecx),%edx;");
    asm("loc_49F14F: push $0;");
    asm("loc_49F151: push $1;");
    asm("loc_49F153: push $1;");
    asm("loc_49F155: calll *0xA8(%edx);");
    asm("loc_49F15B: mov 0x800(%esi),%ecx;");
    asm("loc_49F161: mov (%ecx),%eax;");
    asm("loc_49F163: push $0;");
    asm("loc_49F165: push $1;");
    asm("loc_49F167: push $1;");
    asm("loc_49F169: calll *0xA8(%eax);");
    asm("loc_49F16F: mov 0x8EC(%esi),%ecx;");
    asm("loc_49F175: mov (%ecx),%edx;");
    asm("loc_49F177: push $0;");
    asm("loc_49F179: push $1;");
    asm("loc_49F17B: push $1;");
    asm("loc_49F17D: calll *0xA8(%edx);");
    asm("loc_49F183: mov 0xAD0(%esi),%ecx;");
    asm("loc_49F189: mov (%ecx),%eax;");
    asm("loc_49F18B: push $0;");
    asm("loc_49F18D: push $1;");
    asm("loc_49F18F: push $1;");
    asm("loc_49F191: calll *0xA8(%eax);");
    asm("loc_49F197: movb $0,0x92C(%esi);");
    asm("loc_49F19E: pop %esi;");
    asm("loc_49F19F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49F1A0() // _sub_49F1A0
{
    __DEBUG_ASM(49F1A0);
    // chunk 0x49F1A0 _sub_49F1A0
    asm("loc_49F1A0: sub $0xC,%esp;");
    asm("loc_49F1A3: push %esi;");
    asm("loc_49F1A4: mov %ecx,%esi;");
    asm("loc_49F1A6: call _sub_49F0E0;");
    asm("loc_49F1AB: lea 0x418(%esi),%eax;");
    asm("loc_49F1B1: mov %eax,%ecx;");
    asm("loc_49F1B3: mov (%ecx),%edx;");
    asm("loc_49F1B5: mov %edx,4(%esp);");
    asm("loc_49F1B9: flds 4(%esp);");
    asm("loc_49F1BD: fmuls _data_5C75E0;");
    asm("loc_49F1C3: mov 4(%ecx),%edx;");
    asm("loc_49F1C6: mov %edx,8(%esp);");
    asm("loc_49F1CA: flds 8(%esp);");
    asm("loc_49F1CE: fmuls _data_5C75E0;");
    asm("loc_49F1D4: mov 8(%ecx),%ecx;");
    asm("loc_49F1D7: flds 0x924(%esi);");
    asm("loc_49F1DD: mov %ecx,0xC(%esp);");
    asm("loc_49F1E1: fmuls (%eax);");
    asm("loc_49F1E3: xor %eax,%eax;");
    asm("loc_49F1E5: mov %eax,0x490(%esi);");
    asm("loc_49F1EB: push $6;");
    asm("loc_49F1ED: fsubr %st(2),%st;");
    asm("loc_49F1EF: fstps 0x488(%esi);");
    asm("loc_49F1F5: flds _data_5C75DC;");
    asm("loc_49F1FB: fsubs 0x928(%esi);");
    asm("loc_49F201: fmuls 0x41C(%esi);");
    asm("loc_49F207: fsubr %st(1),%st;");
    asm("loc_49F209: fstps 0x48C(%esi);");
    asm("loc_49F20F: fstp %st(0);");
    asm("loc_49F211: fstp %st(0);");
    asm("loc_49F213: flds 0x488(%esi);");
    asm("loc_49F219: fsubs 0x46C(%esi);");
    asm("loc_49F21F: fstps 8(%esp);");
    asm("loc_49F223: flds 0x48C(%esi);");
    asm("loc_49F229: mov 8(%esp),%edx;");
    asm("loc_49F22D: fsubs 0x470(%esi);");
    asm("loc_49F233: fstps 0xC(%esp);");
    asm("loc_49F237: flds 0x490(%esi);");
    asm("loc_49F23D: mov 0xC(%esp),%ecx;");
    asm("loc_49F241: fsubs 0x474(%esi);");
    asm("loc_49F247: mov %edx,0x488(%esi);");
    asm("loc_49F24D: mov %ecx,0x48C(%esi);");
    asm("loc_49F253: mov 0x46C(%esi),%ecx;");
    asm("loc_49F259: fstps 0x10(%esp);");
    asm("loc_49F25D: flds 0x4A8(%esi);");
    asm("loc_49F263: mov 0x10(%esp),%edx;");
    asm("loc_49F267: fdivs 0x3F8(%esi);");
    asm("loc_49F26D: mov %eax,0x480(%esi);");
    asm("loc_49F273: mov %edx,0x490(%esi);");
    asm("loc_49F279: mov 0x470(%esi),%edx;");
    asm("loc_49F27F: lea 0x494(%esi),%eax;");
    asm("loc_49F285: mov %ecx,(%eax);");
    asm("loc_49F287: mov 0x474(%esi),%ecx;");
    asm("loc_49F28D: mov %edx,4(%eax);");
    asm("loc_49F290: movb $1,0x478(%esi);");
    asm("loc_49F297: movl $2,0x4A4(%esi);");
    asm("loc_49F2A1: movl $0x3FC00000,0x484(%esi);");
    asm("loc_49F2AB: mov %ecx,8(%eax);");
    asm("loc_49F2AE: flds 0x4A8(%esi);");
    asm("loc_49F2B4: fmull _data_5D3F28;");
    asm("loc_49F2BA: fld %st(1);");
    asm("loc_49F2BC: fsubrp;");
    asm("loc_49F2BE: fstps 0x490(%esi);");
    asm("loc_49F2C4: fstps 0x4A0(%esi);");
    asm("loc_49F2CA: call _sub_5645C0;");
    asm("loc_49F2CF: add $4,%esp;");
    asm("loc_49F2D2: pop %esi;");
    asm("loc_49F2D3: add $0xC,%esp;");
    asm("loc_49F2D6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49F2E0() // _sub_49F2E0
{
    __DEBUG_ASM(49F2E0);
    // chunk 0x49F2E0 _sub_49F2E0
    asm("loc_49F2E0: mov %fs:0,%eax;");
    asm("loc_49F2E6: push $0xFFFFFFFF;");
    asm("loc_49F2E8: push $_sub_5BCB0A;");
    asm("loc_49F2ED: push %eax;");
    asm("loc_49F2EE: mov %esp,%fs:0;");
    asm("loc_49F2F5: sub $0x1C,%esp;");
    asm("loc_49F2F8: push %ebp;");
    asm("loc_49F2F9: push %esi;");
    asm("loc_49F2FA: xor %ebp,%ebp;");
    asm("loc_49F2FC: push %ebp;");
    asm("loc_49F2FD: mov %ecx,%esi;");
    asm("loc_49F2FF: mov 0x904(%esi),%ecx;");
    asm("loc_49F305: mov (%ecx),%eax;");
    asm("loc_49F307: push $1;");
    asm("loc_49F309: push $1;");
    asm("loc_49F30B: calll *0xA8(%eax);");
    asm("loc_49F311: mov 0x908(%esi),%ecx;");
    asm("loc_49F317: mov (%ecx),%edx;");
    asm("loc_49F319: push %ebp;");
    asm("loc_49F31A: push $1;");
    asm("loc_49F31C: push $1;");
    asm("loc_49F31E: calll *0xA8(%edx);");
    asm("loc_49F324: mov _data_672950,%ecx;");
    asm("loc_49F32A: mov (%ecx),%eax;");
    asm("loc_49F32C: cmp %ecx,%eax;");
    asm("loc_49F32E: je loc_49F52A;");
    asm("loc_49F334: mov _data_6119F8,%ecx;");
    asm("loc_49F33A: push %ebx;");
    asm("loc_49F33B: push %edi;");
    asm("loc_49F33C: push %ecx;");
    asm("loc_49F33D: push $_data_66FC60;");
    asm("loc_49F342: lea 0x20(%eax),%ecx;");
    asm("loc_49F345: call _sub_41C970;");
    asm("loc_49F34A: mov _import_5C70AC,%edi;");
    asm("loc_49F350: push $_data_5D0A08;");
    asm("loc_49F355: push $_data_66FC60;");
    asm("loc_49F35A: call *%edi;");
    asm("loc_49F35C: mov _data_6119F8,%edx;");
    asm("loc_49F362: add $8,%esp;");
    asm("loc_49F365: push %edx;");
    asm("loc_49F366: push $_data_66DC60;");
    asm("loc_49F36B: calll *_import_5C60D0;");
    asm("loc_49F371: neg %al;");
    asm("loc_49F373: sbb %eax,%eax;");
    asm("loc_49F375: and $0xFFFFFE52,%eax;");
    asm("loc_49F37A: add $0x689,%eax;");
    asm("loc_49F37F: push %eax;");
    asm("loc_49F380: mov _data_67ECA8,%eax;");
    asm("loc_49F385: push %eax;");
    asm("loc_49F386: call _sub_4347E0;");
    asm("loc_49F38B: push $_data_66DC60;");
    asm("loc_49F390: push $_data_66FC60;");
    asm("loc_49F395: call *%edi;");
    asm("loc_49F397: mov 0x8F4(%esi),%eax;");
    asm("loc_49F39D: mov 0x6C(%eax),%cl;");
    asm("loc_49F3A0: mov $2,%bl;");
    asm("loc_49F3A2: or %bl,%cl;");
    asm("loc_49F3A4: mov %cl,0x6C(%eax);");
    asm("loc_49F3A7: mov 0x2B(%esp),%cl;");
    asm("loc_49F3AB: push $0xC;");
    asm("loc_49F3AD: mov %cl,0x3C(%esp);");
    asm("loc_49F3B1: call _sub_5B7E84;");
    asm("loc_49F3B6: mov %eax,(%eax);");
    asm("loc_49F3B8: mov %eax,4(%eax);");
    asm("loc_49F3BB: add $0x1C,%esp;");
    asm("loc_49F3BE: mov %eax,0x24(%esp);");
    asm("loc_49F3C2: mov %ebp,0x28(%esp);");
    asm("loc_49F3C6: push $0x9CA4;");
    asm("loc_49F3CB: lea 0x1C(%esp),%ecx;");
    asm("loc_49F3CF: mov %ebp,0x38(%esp);");
    asm("loc_49F3D3: calll *_import_5C62B8;");
    asm("loc_49F3D9: mov (%eax),%edx;");
    asm("loc_49F3DB: mov %eax,%ecx;");
    asm("loc_49F3DD: movb $1,0x34(%esp);");
    asm("loc_49F3E2: calll *0x1C(%edx);");
    asm("loc_49F3E5: mov %eax,0x14(%esp);");
    asm("loc_49F3E9: mov 0x24(%esp),%eax;");
    asm("loc_49F3ED: mov 4(%eax),%ebp;");
    asm("loc_49F3F0: lea 4(%eax),%edi;");
    asm("loc_49F3F3: mov %bl,0x34(%esp);");
    asm("loc_49F3F7: push $0xC;");
    asm("loc_49F3F9: mov %eax,%ebx;");
    asm("loc_49F3FB: call _sub_5B7E84;");
    asm("loc_49F400: add $4,%esp;");
    asm("loc_49F403: test %ebp,%ebp;");
    asm("loc_49F405: mov %ebx,(%eax);");
    asm("loc_49F407: jne loc_49F40B;");
    asm("loc_49F409: mov %eax,%ebp;");
    asm("loc_49F40B: mov %ebp,4(%eax);");
    asm("loc_49F40E: mov %eax,(%edi);");
    asm("loc_49F410: mov 4(%eax),%ecx;");
    asm("loc_49F413: mov %eax,(%ecx);");
    asm("loc_49F415: lea 0x14(%esp),%ecx;");
    asm("loc_49F419: push %ecx;");
    asm("loc_49F41A: add $8,%eax;");
    asm("loc_49F41D: push %eax;");
    asm("loc_49F41E: call _sub_46EA00;");
    asm("loc_49F423: mov 0x30(%esp),%ecx;");
    asm("loc_49F427: add $8,%esp;");
    asm("loc_49F42A: inc %ecx;");
    asm("loc_49F42B: mov %ecx,0x28(%esp);");
    asm("loc_49F42F: mov 0x14(%esp),%ecx;");
    asm("loc_49F433: test %ecx,%ecx;");
    asm("loc_49F435: movb $1,0x34(%esp);");
    asm("loc_49F43A: je loc_49F44A;");
    asm("loc_49F43C: mov (%ecx),%edx;");
    asm("loc_49F43E: push $1;");
    asm("loc_49F440: calll *(%edx);");
    asm("loc_49F442: movl $0,0x14(%esp);");
    asm("loc_49F44A: lea 0x18(%esp),%ecx;");
    asm("loc_49F44E: movb $0,0x34(%esp);");
    asm("loc_49F453: calll *_import_5C62B4;");
    asm("loc_49F459: push $0;");
    asm("loc_49F45B: lea 0x24(%esp),%eax;");
    asm("loc_49F45F: push %eax;");
    asm("loc_49F460: push $_data_66FC60;");
    asm("loc_49F465: calll *_import_5C71C8;");
    asm("loc_49F46B: add $4,%esp;");
    asm("loc_49F46E: push %eax;");
    asm("loc_49F46F: push $_data_66FC60;");
    asm("loc_49F474: call _sub_57E2C0;");
    asm("loc_49F479: mov 0x8F4(%esi),%edi;");
    asm("loc_49F47F: add $0x10,%esp;");
    asm("loc_49F482: mov %edi,%ecx;");
    asm("loc_49F484: call _sub_57B370;");
    asm("loc_49F489: lea 0x20(%esp),%ecx;");
    asm("loc_49F48D: push %ecx;");
    asm("loc_49F48E: mov %edi,%ecx;");
    asm("loc_49F490: call _sub_57B3E0;");
    asm("loc_49F495: push $0;");
    asm("loc_49F497: push $0;");
    asm("loc_49F499: mov %edi,%ecx;");
    asm("loc_49F49B: call _sub_5798B0;");
    asm("loc_49F4A0: mov 0xAC0(%esi),%ecx;");
    asm("loc_49F4A6: mov (%ecx),%edx;");
    asm("loc_49F4A8: push $0;");
    asm("loc_49F4AA: push $0;");
    asm("loc_49F4AC: push $1;");
    asm("loc_49F4AE: calll *0xA8(%edx);");
    asm("loc_49F4B4: mov 0xAC4(%esi),%ecx;");
    asm("loc_49F4BA: mov (%ecx),%eax;");
    asm("loc_49F4BC: push $0;");
    asm("loc_49F4BE: push $0;");
    asm("loc_49F4C0: push $1;");
    asm("loc_49F4C2: calll *0xA8(%eax);");
    asm("loc_49F4C8: mov 0xAC8(%esi),%ecx;");
    asm("loc_49F4CE: mov (%ecx),%edx;");
    asm("loc_49F4D0: push $0;");
    asm("loc_49F4D2: push $0;");
    asm("loc_49F4D4: push $1;");
    asm("loc_49F4D6: calll *0xA8(%edx);");
    asm("loc_49F4DC: mov 0xACC(%esi),%ecx;");
    asm("loc_49F4E2: mov (%ecx),%eax;");
    asm("loc_49F4E4: push $0;");
    asm("loc_49F4E6: push $0;");
    asm("loc_49F4E8: push $1;");
    asm("loc_49F4EA: calll *0xA8(%eax);");
    asm("loc_49F4F0: mov 0x24(%esp),%eax;");
    asm("loc_49F4F4: mov (%eax),%esi;");
    asm("loc_49F4F6: cmp %eax,%esi;");
    asm("loc_49F4F8: movl $0xFFFFFFFF,0x34(%esp);");
    asm("loc_49F500: mov %eax,%edi;");
    asm("loc_49F502: je loc_49F51F;");
    asm("loc_49F504: mov %esi,%eax;");
    asm("loc_49F506: mov (%esi),%esi;");
    asm("loc_49F508: push %eax;");
    asm("loc_49F509: lea 0x18(%esp),%ecx;");
    asm("loc_49F50D: push %ecx;");
    asm("loc_49F50E: lea 0x28(%esp),%ecx;");
    asm("loc_49F512: call _sub_46D680;");
    asm("loc_49F517: cmp %edi,%esi;");
    asm("loc_49F519: jne loc_49F504;");
    asm("loc_49F51B: mov 0x24(%esp),%eax;");
    asm("loc_49F51F: push %eax;");
    asm("loc_49F520: call _sub_5B7E1D;");
    asm("loc_49F525: add $4,%esp;");
    asm("loc_49F528: pop %edi;");
    asm("loc_49F529: pop %ebx;");
    asm("loc_49F52A: mov 0x24(%esp),%ecx;");
    asm("loc_49F52E: pop %esi;");
    asm("loc_49F52F: pop %ebp;");
    asm("loc_49F530: mov %ecx,%fs:0;");
    asm("loc_49F537: add $0x28,%esp;");
    asm("loc_49F53A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49F540() // _sub_49F540
{
    __DEBUG_ASM(49F540);
    // chunk 0x49F540 _sub_49F540
    asm("loc_49F540: push $0xFFFFFFFF;");
    asm("loc_49F542: push $_sub_5BCB0A;");
    asm("loc_49F547: mov %fs:0,%eax;");
    asm("loc_49F54D: push %eax;");
    asm("loc_49F54E: mov %esp,%fs:0;");
    asm("loc_49F555: sub $0x1C,%esp;");
    asm("loc_49F558: push %ebx;");
    asm("loc_49F559: push %ebp;");
    asm("loc_49F55A: push %esi;");
    asm("loc_49F55B: push %edi;");
    asm("loc_49F55C: xor %edi,%edi;");
    asm("loc_49F55E: push %edi;");
    asm("loc_49F55F: mov %ecx,%esi;");
    asm("loc_49F561: mov 0xAC0(%esi),%ecx;");
    asm("loc_49F567: mov (%ecx),%eax;");
    asm("loc_49F569: push $1;");
    asm("loc_49F56B: push $1;");
    asm("loc_49F56D: calll *0xA8(%eax);");
    asm("loc_49F573: mov 0xAC4(%esi),%ecx;");
    asm("loc_49F579: mov (%ecx),%edx;");
    asm("loc_49F57B: push %edi;");
    asm("loc_49F57C: push $1;");
    asm("loc_49F57E: push $1;");
    asm("loc_49F580: calll *0xA8(%edx);");
    asm("loc_49F586: mov 0xAC8(%esi),%ecx;");
    asm("loc_49F58C: mov (%ecx),%eax;");
    asm("loc_49F58E: push %edi;");
    asm("loc_49F58F: push $1;");
    asm("loc_49F591: push $1;");
    asm("loc_49F593: calll *0xA8(%eax);");
    asm("loc_49F599: mov 0xACC(%esi),%ecx;");
    asm("loc_49F59F: mov (%ecx),%edx;");
    asm("loc_49F5A1: push %edi;");
    asm("loc_49F5A2: push $1;");
    asm("loc_49F5A4: push $1;");
    asm("loc_49F5A6: calll *0xA8(%edx);");
    asm("loc_49F5AC: mov 0x13(%esp),%al;");
    asm("loc_49F5B0: push $0xC;");
    asm("loc_49F5B2: mov %di,_data_66FC60;");
    asm("loc_49F5B9: mov %al,0x24(%esp);");
    asm("loc_49F5BD: call _sub_5B7E84;");
    asm("loc_49F5C2: mov %eax,(%eax);");
    asm("loc_49F5C4: mov %eax,4(%eax);");
    asm("loc_49F5C7: add $4,%esp;");
    asm("loc_49F5CA: mov %eax,0x24(%esp);");
    asm("loc_49F5CE: mov %edi,0x28(%esp);");
    asm("loc_49F5D2: push $0x9CA4;");
    asm("loc_49F5D7: lea 0x1C(%esp),%ecx;");
    asm("loc_49F5DB: mov %edi,0x38(%esp);");
    asm("loc_49F5DF: calll *_import_5C62B8;");
    asm("loc_49F5E5: mov (%eax),%edx;");
    asm("loc_49F5E7: mov %eax,%ecx;");
    asm("loc_49F5E9: movb $1,0x34(%esp);");
    asm("loc_49F5EE: calll *0x1C(%edx);");
    asm("loc_49F5F1: mov %eax,0x14(%esp);");
    asm("loc_49F5F5: mov 0x24(%esp),%eax;");
    asm("loc_49F5F9: mov 4(%eax),%ebp;");
    asm("loc_49F5FC: lea 4(%eax),%edi;");
    asm("loc_49F5FF: push $0xC;");
    asm("loc_49F601: movb $2,0x38(%esp);");
    asm("loc_49F606: mov %eax,%ebx;");
    asm("loc_49F608: call _sub_5B7E84;");
    asm("loc_49F60D: add $4,%esp;");
    asm("loc_49F610: test %ebp,%ebp;");
    asm("loc_49F612: mov %ebx,(%eax);");
    asm("loc_49F614: jne loc_49F618;");
    asm("loc_49F616: mov %eax,%ebp;");
    asm("loc_49F618: mov %ebp,4(%eax);");
    asm("loc_49F61B: mov %eax,(%edi);");
    asm("loc_49F61D: mov 4(%eax),%ecx;");
    asm("loc_49F620: mov %eax,(%ecx);");
    asm("loc_49F622: lea 0x14(%esp),%ecx;");
    asm("loc_49F626: push %ecx;");
    asm("loc_49F627: add $8,%eax;");
    asm("loc_49F62A: push %eax;");
    asm("loc_49F62B: call _sub_46EA00;");
    asm("loc_49F630: mov 0x30(%esp),%ecx;");
    asm("loc_49F634: add $8,%esp;");
    asm("loc_49F637: inc %ecx;");
    asm("loc_49F638: mov %ecx,0x28(%esp);");
    asm("loc_49F63C: mov 0x14(%esp),%ecx;");
    asm("loc_49F640: test %ecx,%ecx;");
    asm("loc_49F642: movb $1,0x34(%esp);");
    asm("loc_49F647: je loc_49F657;");
    asm("loc_49F649: mov (%ecx),%edx;");
    asm("loc_49F64B: push $1;");
    asm("loc_49F64D: calll *(%edx);");
    asm("loc_49F64F: movl $0,0x14(%esp);");
    asm("loc_49F657: lea 0x18(%esp),%ecx;");
    asm("loc_49F65B: movb $0,0x34(%esp);");
    asm("loc_49F660: calll *_import_5C62B4;");
    asm("loc_49F666: push $0;");
    asm("loc_49F668: lea 0x24(%esp),%eax;");
    asm("loc_49F66C: push %eax;");
    asm("loc_49F66D: push $_data_66FC60;");
    asm("loc_49F672: calll *_import_5C71C8;");
    asm("loc_49F678: add $4,%esp;");
    asm("loc_49F67B: push %eax;");
    asm("loc_49F67C: push $_data_66FC60;");
    asm("loc_49F681: call _sub_57E2C0;");
    asm("loc_49F686: mov 0x8F4(%esi),%edi;");
    asm("loc_49F68C: add $0x10,%esp;");
    asm("loc_49F68F: mov %edi,%ecx;");
    asm("loc_49F691: call _sub_57B370;");
    asm("loc_49F696: lea 0x20(%esp),%ecx;");
    asm("loc_49F69A: push %ecx;");
    asm("loc_49F69B: mov %edi,%ecx;");
    asm("loc_49F69D: call _sub_57B3E0;");
    asm("loc_49F6A2: push $0;");
    asm("loc_49F6A4: push $0;");
    asm("loc_49F6A6: mov %edi,%ecx;");
    asm("loc_49F6A8: call _sub_5798B0;");
    asm("loc_49F6AD: mov 0x8F4(%esi),%eax;");
    asm("loc_49F6B3: andb $0xFD,0x6C(%eax);");
    asm("loc_49F6B7: lea 0xAE4(%esi),%edi;");
    asm("loc_49F6BD: mov $3,%ebx;");
    asm("loc_49F6C2: mov (%edi),%ecx;");
    asm("loc_49F6C4: mov (%ecx),%edx;");
    asm("loc_49F6C6: push $0;");
    asm("loc_49F6C8: push $_data_66FC60;");
    asm("loc_49F6CD: push $0x1D;");
    asm("loc_49F6CF: calll *0xA8(%edx);");
    asm("loc_49F6D5: add $4,%edi;");
    asm("loc_49F6D8: dec %ebx;");
    asm("loc_49F6D9: jne loc_49F6C2;");
    asm("loc_49F6DB: mov 0xAE0(%esi),%ecx;");
    asm("loc_49F6E1: mov (%ecx),%eax;");
    asm("loc_49F6E3: push $0;");
    asm("loc_49F6E5: push $1;");
    asm("loc_49F6E7: push $2;");
    asm("loc_49F6E9: calll *0xA8(%eax);");
    asm("loc_49F6EF: call _sub_4C5040;");
    asm("loc_49F6F4: test %eax,%eax;");
    asm("loc_49F6F6: je loc_49F746;");
    asm("loc_49F6F8: mov 0x40(%eax),%al;");
    asm("loc_49F6FB: cmp $7,%al;");
    asm("loc_49F6FD: je loc_49F746;");
    asm("loc_49F6FF: cmp $8,%al;");
    asm("loc_49F701: je loc_49F746;");
    asm("loc_49F703: mov _data_67ECD0,%ecx;");
    asm("loc_49F709: mov (%ecx),%edx;");
    asm("loc_49F70B: movzbl %al,%eax;");
    asm("loc_49F70E: push %eax;");
    asm("loc_49F70F: mov _data_673344,%eax;");
    asm("loc_49F714: push %eax;");
    asm("loc_49F715: calll *0x110(%edx);");
    asm("loc_49F71B: call _sub_4B9BB0;");
    asm("loc_49F720: mov 0xF24(%esi),%al;");
    asm("loc_49F726: test %al,%al;");
    asm("loc_49F728: je loc_49F741;");
    asm("loc_49F72A: call _sub_43D580;");
    asm("loc_49F72F: mov (%esi),%edx;");
    asm("loc_49F731: push $0;");
    asm("loc_49F733: push $0;");
    asm("loc_49F735: push $0xEF02;");
    asm("loc_49F73A: mov %esi,%ecx;");
    asm("loc_49F73C: calll *0x5C(%edx);");
    asm("loc_49F73F: jmp loc_49F746;");
    asm("loc_49F741: call _sub_45A460;");
    asm("loc_49F746: mov 0x24(%esp),%eax;");
    asm("loc_49F74A: mov (%eax),%esi;");
    asm("loc_49F74C: cmp %eax,%esi;");
    asm("loc_49F74E: movl $0xFFFFFFFF,0x34(%esp);");
    asm("loc_49F756: mov %eax,%edi;");
    asm("loc_49F758: je loc_49F77B;");
    asm("loc_49F75A: lea (%ebx),%ebx;");
    asm("loc_49F760: mov %esi,%eax;");
    asm("loc_49F762: mov (%esi),%esi;");
    asm("loc_49F764: push %eax;");
    asm("loc_49F765: lea 0x18(%esp),%eax;");
    asm("loc_49F769: push %eax;");
    asm("loc_49F76A: lea 0x28(%esp),%ecx;");
    asm("loc_49F76E: call _sub_46D680;");
    asm("loc_49F773: cmp %edi,%esi;");
    asm("loc_49F775: jne loc_49F760;");
    asm("loc_49F777: mov 0x24(%esp),%eax;");
    asm("loc_49F77B: push %eax;");
    asm("loc_49F77C: call _sub_5B7E1D;");
    asm("loc_49F781: mov 0x30(%esp),%ecx;");
    asm("loc_49F785: add $4,%esp;");
    asm("loc_49F788: pop %edi;");
    asm("loc_49F789: pop %esi;");
    asm("loc_49F78A: pop %ebp;");
    asm("loc_49F78B: pop %ebx;");
    asm("loc_49F78C: mov %ecx,%fs:0;");
    asm("loc_49F793: add $0x28,%esp;");
    asm("loc_49F796: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49F7A0() // _sub_49F7A0
{
    __DEBUG_ASM(49F7A0);
    // chunk 0x49F7A0 _sub_49F7A0
    asm("loc_49F7A0: sub $0x410,%esp;");
    asm("loc_49F7A6: push %ebx;");
    asm("loc_49F7A7: mov %ecx,%ebx;");
    asm("loc_49F7A9: push %ebp;");
    asm("loc_49F7AA: movb $0,_data_6720C9;");
    asm("loc_49F7B1: mov 0xBCC(%ebx),%al;");
    asm("loc_49F7B7: test %al,%al;");
    asm("loc_49F7B9: push %esi;");
    asm("loc_49F7BA: push %edi;");
    asm("loc_49F7BB: mov %ebx,0x14(%esp);");
    asm("loc_49F7BF: jne loc_49F9F9;");
    asm("loc_49F7C5: call _sub_4C4690;");
    asm("loc_49F7CA: mov %eax,%edi;");
    asm("loc_49F7CC: lea -3(%edi),%esi;");
    asm("loc_49F7CF: xor %ebp,%ebp;");
    asm("loc_49F7D1: cmp %ebp,%esi;");
    asm("loc_49F7D3: mov %edi,0x18(%esp);");
    asm("loc_49F7D7: jge loc_49F7DB;");
    asm("loc_49F7D9: xor %esi,%esi;");
    asm("loc_49F7DB: mov 0xAE0(%ebx),%ecx;");
    asm("loc_49F7E1: mov (%ecx),%eax;");
    asm("loc_49F7E3: lea -1(%edi),%edx;");
    asm("loc_49F7E6: push %edx;");
    asm("loc_49F7E7: push %ebp;");
    asm("loc_49F7E8: push $0x37;");
    asm("loc_49F7EA: calll *0xA8(%eax);");
    asm("loc_49F7F0: cmp %ebp,%esi;");
    asm("loc_49F7F2: mov 0xAE0(%ebx),%ecx;");
    asm("loc_49F7F8: push %ebp;");
    asm("loc_49F7F9: jne loc_49F809;");
    asm("loc_49F7FB: mov (%ecx),%eax;");
    asm("loc_49F7FD: push $1;");
    asm("loc_49F7FF: push $2;");
    asm("loc_49F801: calll *0xA8(%eax);");
    asm("loc_49F807: jmp loc_49F814;");
    asm("loc_49F809: mov (%ecx),%edx;");
    asm("loc_49F80B: push %ebp;");
    asm("loc_49F80C: push $2;");
    asm("loc_49F80E: calll *0xA8(%edx);");
    asm("loc_49F814: cmp %edi,0xAF4(%ebx);");
    asm("loc_49F81A: jl loc_49F822;");
    asm("loc_49F81C: mov %ebp,0xAF4(%ebx);");
    asm("loc_49F822: mov 0xAF4(%ebx),%eax;");
    asm("loc_49F828: cmp %edi,%eax;");
    asm("loc_49F82A: mov %eax,0x10(%esp);");
    asm("loc_49F82E: jge loc_49F9B9;");
    asm("loc_49F834: lea 0xAE4(%ebx),%esi;");
    asm("loc_49F83A: mov _import_5C70EC,%ebx;");
    asm("loc_49F840: jmp loc_49F846;");
    asm("loc_49F842: mov 0x10(%esp),%eax;");
    asm("loc_49F846: push %eax;");
    asm("loc_49F847: movw $0,_data_66FC60;");
    asm("loc_49F850: call _sub_4C46A0;");
    asm("loc_49F855: mov %eax,%edi;");
    asm("loc_49F857: add $4,%esp;");
    asm("loc_49F85A: test %edi,%edi;");
    asm("loc_49F85C: je loc_49F94C;");
    asm("loc_49F862: mov _data_6119F8,%eax;");
    asm("loc_49F867: mov _data_67ECA8,%ecx;");
    asm("loc_49F86D: push %eax;");
    asm("loc_49F86E: push $_data_66DC60;");
    asm("loc_49F873: push $0x54B;");
    asm("loc_49F878: push %ecx;");
    asm("loc_49F879: call _sub_4347E0;");
    asm("loc_49F87E: mov 0x14(%edi),%edx;");
    asm("loc_49F881: push %edx;");
    asm("loc_49F882: push $_data_66DC60;");
    asm("loc_49F887: push $_data_66FC60;");
    asm("loc_49F88C: call *%ebx;");
    asm("loc_49F88E: push $0x100;");
    asm("loc_49F893: lea 0x240(%esp),%eax;");
    asm("loc_49F89A: push %eax;");
    asm("loc_49F89B: push %edi;");
    asm("loc_49F89C: call _sub_48DC10;");
    asm("loc_49F8A1: mov 0xC(%edi),%ecx;");
    asm("loc_49F8A4: push %ecx;");
    asm("loc_49F8A5: calll *_import_5C6094;");
    asm("loc_49F8AB: mov %eax,%edi;");
    asm("loc_49F8AD: add $0x2C,%esp;");
    asm("loc_49F8B0: test %edi,%edi;");
    asm("loc_49F8B2: je loc_49F928;");
    asm("loc_49F8B4: mov _data_6119F8,%edx;");
    asm("loc_49F8BA: mov _data_67ECA8,%eax;");
    asm("loc_49F8BF: push %edx;");
    asm("loc_49F8C0: push $_data_66DC60;");
    asm("loc_49F8C5: push $0x54C;");
    asm("loc_49F8CA: push %eax;");
    asm("loc_49F8CB: call _sub_4347E0;");
    asm("loc_49F8D0: push $_data_5D0254;");
    asm("loc_49F8D5: push $_data_66FC60;");
    asm("loc_49F8DA: calll *_import_5C70AC;");
    asm("loc_49F8E0: mov (%edi),%edx;");
    asm("loc_49F8E2: add $0x18,%esp;");
    asm("loc_49F8E5: push $0x100;");
    asm("loc_49F8EA: lea 0x24(%esp),%ecx;");
    asm("loc_49F8EE: push %ecx;");
    asm("loc_49F8EF: mov %edi,%ecx;");
    asm("loc_49F8F1: calll *0xC(%edx);");
    asm("loc_49F8F4: push %eax;");
    asm("loc_49F8F5: mov _data_67ECA8,%eax;");
    asm("loc_49F8FA: push %eax;");
    asm("loc_49F8FB: call _sub_4347E0;");
    asm("loc_49F900: add $0x10,%esp;");
    asm("loc_49F903: lea 0x20(%esp),%ecx;");
    asm("loc_49F907: push %ecx;");
    asm("loc_49F908: push $_data_66DC60;");
    asm("loc_49F90D: push $_data_66FC60;");
    asm("loc_49F912: calll *_import_5C71C8;");
    asm("loc_49F918: lea _data_66FC60(,%eax,2),%edx;");
    asm("loc_49F91F: add $4,%esp;");
    asm("loc_49F922: push %edx;");
    asm("loc_49F923: call *%ebx;");
    asm("loc_49F925: add $0xC,%esp;");
    asm("loc_49F928: mov _import_5C70AC,%edi;");
    asm("loc_49F92E: push $_data_5D0254;");
    asm("loc_49F933: push $_data_66FC60;");
    asm("loc_49F938: call *%edi;");
    asm("loc_49F93A: lea 0x228(%esp),%eax;");
    asm("loc_49F941: push %eax;");
    asm("loc_49F942: push $_data_66FC60;");
    asm("loc_49F947: call *%edi;");
    asm("loc_49F949: add $0x10,%esp;");
    asm("loc_49F94C: mov (%esi),%ecx;");
    asm("loc_49F94E: mov (%ecx),%edx;");
    asm("loc_49F950: push $0;");
    asm("loc_49F952: push $_data_66FC60;");
    asm("loc_49F957: push $0x1D;");
    asm("loc_49F959: calll *0xA8(%edx);");
    asm("loc_49F95F: mov (%esi),%ecx;");
    asm("loc_49F961: mov (%ecx),%eax;");
    asm("loc_49F963: push $1;");
    asm("loc_49F965: push $_data_679BB0;");
    asm("loc_49F96A: push $0x33;");
    asm("loc_49F96C: calll *0xA8(%eax);");
    asm("loc_49F972: mov (%esi),%ecx;");
    asm("loc_49F974: mov (%ecx),%edx;");
    asm("loc_49F976: push $0;");
    asm("loc_49F978: push $0;");
    asm("loc_49F97A: push $1;");
    asm("loc_49F97C: calll *0xA8(%edx);");
    asm("loc_49F982: mov -0x10(%esi),%ecx;");
    asm("loc_49F985: mov (%ecx),%eax;");
    asm("loc_49F987: push $0;");
    asm("loc_49F989: push $0;");
    asm("loc_49F98B: push $1;");
    asm("loc_49F98D: inc %ebp;");
    asm("loc_49F98E: add $4,%esi;");
    asm("loc_49F991: calll *0xA8(%eax);");
    asm("loc_49F997: cmp $3,%ebp;");
    asm("loc_49F99A: jge loc_49FBE4;");
    asm("loc_49F9A0: mov 0x10(%esp),%eax;");
    asm("loc_49F9A4: mov 0x18(%esp),%ecx;");
    asm("loc_49F9A8: inc %eax;");
    asm("loc_49F9A9: cmp %ecx,%eax;");
    asm("loc_49F9AB: mov %eax,0x10(%esp);");
    asm("loc_49F9AF: jl loc_49F842;");
    asm("loc_49F9B5: mov 0x14(%esp),%ebx;");
    asm("loc_49F9B9: mov $3,%edi;");
    asm("loc_49F9BE: lea 0xAE4(%ebx,%ebp,4),%esi;");
    asm("loc_49F9C5: sub %ebp,%edi;");
    asm("loc_49F9C7: mov (%esi),%ecx;");
    asm("loc_49F9C9: mov (%ecx),%edx;");
    asm("loc_49F9CB: push $0;");
    asm("loc_49F9CD: push $1;");
    asm("loc_49F9CF: push $1;");
    asm("loc_49F9D1: calll *0xA8(%edx);");
    asm("loc_49F9D7: mov -0x10(%esi),%ecx;");
    asm("loc_49F9DA: mov (%ecx),%eax;");
    asm("loc_49F9DC: push $0;");
    asm("loc_49F9DE: push $1;");
    asm("loc_49F9E0: push $1;");
    asm("loc_49F9E2: add $4,%esi;");
    asm("loc_49F9E5: calll *0xA8(%eax);");
    asm("loc_49F9EB: dec %edi;");
    asm("loc_49F9EC: jne loc_49F9C7;");
    asm("loc_49F9EE: pop %edi;");
    asm("loc_49F9EF: pop %esi;");
    asm("loc_49F9F0: pop %ebp;");
    asm("loc_49F9F1: pop %ebx;");
    asm("loc_49F9F2: add $0x410,%esp;");
    asm("loc_49F9F8: ret;");
    asm("loc_49F9F9: call _sub_4C4FB0;");
    asm("loc_49F9FE: xor %ebp,%ebp;");
    asm("loc_49FA00: lea (%eax,%eax,4),%eax;");
    asm("loc_49FA03: cmp %ebp,%eax;");
    asm("loc_49FA05: mov %ebp,0x18(%esp);");
    asm("loc_49FA09: movl $1,0x14(%esp);");
    asm("loc_49FA11: mov %ebp,0x10(%esp);");
    asm("loc_49FA15: mov %eax,0x1C(%esp);");
    asm("loc_49FA19: jle loc_49FB54;");
    asm("loc_49FA1F: lea 0xAE4(%ebx),%esi;");
    asm("loc_49FA25: mov 0x10(%esp),%ecx;");
    asm("loc_49FA29: push %ecx;");
    asm("loc_49FA2A: call _sub_4C4FF0;");
    asm("loc_49FA2F: mov %eax,%edi;");
    asm("loc_49FA31: add $4,%esp;");
    asm("loc_49FA34: test %edi,%edi;");
    asm("loc_49FA36: je loc_49FB3A;");
    asm("loc_49FA3C: mov 0x18(%edi),%eax;");
    asm("loc_49FA3F: and $0xF,%eax;");
    asm("loc_49FA42: cmp $9,%eax;");
    asm("loc_49FA45: je loc_49FA4B;");
    asm("loc_49FA47: incl 0x18(%esp);");
    asm("loc_49FA4B: mov 0x10(%esp),%edx;");
    asm("loc_49FA4F: cmp 0xAF4(%ebx),%edx;");
    asm("loc_49FA55: jge loc_49FA69;");
    asm("loc_49FA57: cmp $0xA,%eax;");
    asm("loc_49FA5A: jne loc_49FB3A;");
    asm("loc_49FA60: incl 0x14(%esp);");
    asm("loc_49FA64: jmp loc_49FB3A;");
    asm("loc_49FA69: cmp $9,%eax;");
    asm("loc_49FA6C: je loc_49FB3A;");
    asm("loc_49FA72: cmp $3,%ebp;");
    asm("loc_49FA75: jge loc_49FB3A;");
    asm("loc_49FA7B: cmp $0xA,%eax;");
    asm("loc_49FA7E: jne loc_49FABD;");
    asm("loc_49FA80: mov _data_6119F8,%eax;");
    asm("loc_49FA85: mov _data_67ECA8,%ecx;");
    asm("loc_49FA8B: push %eax;");
    asm("loc_49FA8C: push $_data_66DC60;");
    asm("loc_49FA91: push $0x4DF;");
    asm("loc_49FA96: push %ecx;");
    asm("loc_49FA97: call _sub_4347E0;");
    asm("loc_49FA9C: mov 0x24(%esp),%ecx;");
    asm("loc_49FAA0: mov %ecx,%eax;");
    asm("loc_49FAA2: push %eax;");
    asm("loc_49FAA3: inc %ecx;");
    asm("loc_49FAA4: push $_data_66DC60;");
    asm("loc_49FAA9: push $_data_66FC60;");
    asm("loc_49FAAE: mov %ecx,0x30(%esp);");
    asm("loc_49FAB2: calll *_import_5C70EC;");
    asm("loc_49FAB8: add $0x1C,%esp;");
    asm("loc_49FABB: jmp loc_49FADC;");
    asm("loc_49FABD: mov _data_6119F8,%edx;");
    asm("loc_49FAC3: mov _data_67ECA8,%eax;");
    asm("loc_49FAC8: push %edx;");
    asm("loc_49FAC9: push $_data_66FC60;");
    asm("loc_49FACE: push $0x331C;");
    asm("loc_49FAD3: push %eax;");
    asm("loc_49FAD4: call _sub_4347E0;");
    asm("loc_49FAD9: add $0x10,%esp;");
    asm("loc_49FADC: mov _data_6119F8,%ecx;");
    asm("loc_49FAE2: push %ecx;");
    asm("loc_49FAE3: push $_data_66DC60;");
    asm("loc_49FAE8: mov %edi,%ecx;");
    asm("loc_49FAEA: call _sub_41C970;");
    asm("loc_49FAEF: push $_data_66DC60;");
    asm("loc_49FAF4: push $_data_66FC60;");
    asm("loc_49FAF9: calll *_import_5C70AC;");
    asm("loc_49FAFF: mov (%esi),%ecx;");
    asm("loc_49FB01: mov (%ecx),%edx;");
    asm("loc_49FB03: add $8,%esp;");
    asm("loc_49FB06: push $0;");
    asm("loc_49FB08: push $_data_66FC60;");
    asm("loc_49FB0D: push $0x1D;");
    asm("loc_49FB0F: calll *0xA8(%edx);");
    asm("loc_49FB15: mov (%esi),%ecx;");
    asm("loc_49FB17: mov (%ecx),%eax;");
    asm("loc_49FB19: push $0;");
    asm("loc_49FB1B: push $0;");
    asm("loc_49FB1D: push $1;");
    asm("loc_49FB1F: calll *0xA8(%eax);");
    asm("loc_49FB25: mov -0x10(%esi),%ecx;");
    asm("loc_49FB28: mov (%ecx),%edx;");
    asm("loc_49FB2A: push $0;");
    asm("loc_49FB2C: push $0;");
    asm("loc_49FB2E: push $1;");
    asm("loc_49FB30: inc %ebp;");
    asm("loc_49FB31: add $4,%esi;");
    asm("loc_49FB34: calll *0xA8(%edx);");
    asm("loc_49FB3A: mov 0x10(%esp),%eax;");
    asm("loc_49FB3E: mov 0x1C(%esp),%ecx;");
    asm("loc_49FB42: inc %eax;");
    asm("loc_49FB43: cmp %ecx,%eax;");
    asm("loc_49FB45: mov %eax,0x10(%esp);");
    asm("loc_49FB49: jl loc_49FA25;");
    asm("loc_49FB4F: cmp $3,%ebp;");
    asm("loc_49FB52: jge loc_49FB89;");
    asm("loc_49FB54: mov $3,%edi;");
    asm("loc_49FB59: lea 0xAE4(%ebx,%ebp,4),%esi;");
    asm("loc_49FB60: sub %ebp,%edi;");
    asm("loc_49FB62: mov (%esi),%ecx;");
    asm("loc_49FB64: mov (%ecx),%eax;");
    asm("loc_49FB66: push $0;");
    asm("loc_49FB68: push $1;");
    asm("loc_49FB6A: push $1;");
    asm("loc_49FB6C: calll *0xA8(%eax);");
    asm("loc_49FB72: mov -0x10(%esi),%ecx;");
    asm("loc_49FB75: mov (%ecx),%edx;");
    asm("loc_49FB77: push $0;");
    asm("loc_49FB79: push $1;");
    asm("loc_49FB7B: push $1;");
    asm("loc_49FB7D: add $4,%esi;");
    asm("loc_49FB80: calll *0xA8(%edx);");
    asm("loc_49FB86: dec %edi;");
    asm("loc_49FB87: jne loc_49FB62;");
    asm("loc_49FB89: mov 0x18(%esp),%edi;");
    asm("loc_49FB8D: lea -3(%edi),%esi;");
    asm("loc_49FB90: test %esi,%esi;");
    asm("loc_49FB92: jge loc_49FB96;");
    asm("loc_49FB94: xor %esi,%esi;");
    asm("loc_49FB96: mov 0xAE0(%ebx),%ecx;");
    asm("loc_49FB9C: mov (%ecx),%eax;");
    asm("loc_49FB9E: lea -1(%edi),%edx;");
    asm("loc_49FBA1: push %edx;");
    asm("loc_49FBA2: push $0;");
    asm("loc_49FBA4: push $0x37;");
    asm("loc_49FBA6: calll *0xA8(%eax);");
    asm("loc_49FBAC: test %esi,%esi;");
    asm("loc_49FBAE: mov 0xAE0(%ebx),%ecx;");
    asm("loc_49FBB4: push $0;");
    asm("loc_49FBB6: jne loc_49FBC6;");
    asm("loc_49FBB8: mov (%ecx),%eax;");
    asm("loc_49FBBA: push $1;");
    asm("loc_49FBBC: push $2;");
    asm("loc_49FBBE: calll *0xA8(%eax);");
    asm("loc_49FBC4: jmp loc_49FBD2;");
    asm("loc_49FBC6: mov (%ecx),%edx;");
    asm("loc_49FBC8: push $0;");
    asm("loc_49FBCA: push $2;");
    asm("loc_49FBCC: calll *0xA8(%edx);");
    asm("loc_49FBD2: cmp %edi,0xAF4(%ebx);");
    asm("loc_49FBD8: jl loc_49FBE4;");
    asm("loc_49FBDA: movl $0,0xAF4(%ebx);");
    asm("loc_49FBE4: pop %edi;");
    asm("loc_49FBE5: pop %esi;");
    asm("loc_49FBE6: pop %ebp;");
    asm("loc_49FBE7: pop %ebx;");
    asm("loc_49FBE8: add $0x410,%esp;");
    asm("loc_49FBEE: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49FBF0() // _sub_49FBF0
{
    __DEBUG_ASM(49FBF0);
    // chunk 0x49FBF0 _sub_49FBF0
    asm("loc_49FBF0: sub $0x2C,%esp;");
    asm("loc_49FBF3: push %ebx;");
    asm("loc_49FBF4: mov %ecx,%ebx;");
    asm("loc_49FBF6: mov 0x478(%ebx),%al;");
    asm("loc_49FBFC: push %esi;");
    asm("loc_49FBFD: test %al,%al;");
    asm("loc_49FBFF: mov 0x7D0(%ebx),%eax;");
    asm("loc_49FC05: push %edi;");
    asm("loc_49FC06: movl $0x3F800000,0xC(%esp);");
    asm("loc_49FC0E: movl $0x3F800000,0x10(%esp);");
    asm("loc_49FC16: movl $0,0x20(%esp);");
    asm("loc_49FC1E: movl $0,0x18(%esp);");
    asm("loc_49FC26: movl $0,0x24(%esp);");
    asm("loc_49FC2E: movl $0,0x1C(%esp);");
    asm("loc_49FC36: movl $0,0x28(%esp);");
    asm("loc_49FC3E: je loc_49FCC5;");
    asm("loc_49FC44: cmp $2,%eax;");
    asm("loc_49FC47: jne loc_49FC79;");
    asm("loc_49FC49: flds _data_5D3F48;");
    asm("loc_49FC4F: mov 0x47C(%ebx),%eax;");
    asm("loc_49FC55: fsubs 0x488(%ebx);");
    asm("loc_49FC5B: mov %eax,0x20(%esp);");
    asm("loc_49FC5F: movl $0x3F800000,0x10(%esp);");
    asm("loc_49FC67: fstps 0x18(%esp);");
    asm("loc_49FC6B: flds _data_5D3F44;");
    asm("loc_49FC71: fsubs 0x48C(%ebx);");
    asm("loc_49FC77: jmp loc_49FCEE;");
    asm("loc_49FC79: flds 0x488(%ebx);");
    asm("loc_49FC7F: mov 0x47C(%ebx),%ecx;");
    asm("loc_49FC85: fadds _data_5D3F48;");
    asm("loc_49FC8B: mov %ecx,0x20(%esp);");
    asm("loc_49FC8F: movl $0x3F800000,0xC(%esp);");
    asm("loc_49FC97: movl $0x4109999A,0x10(%esp);");
    asm("loc_49FC9F: fstps 0x24(%esp);");
    asm("loc_49FCA3: movl $0x3CDD2F1B,0x18(%esp);");
    asm("loc_49FCAB: flds 0x48C(%ebx);");
    asm("loc_49FCB1: movl $0xBC3C6A7F,0x1C(%esp);");
    asm("loc_49FCB9: fsubs _data_5D3F40;");
    asm("loc_49FCBF: fstps 0x28(%esp);");
    asm("loc_49FCC3: jmp loc_49FCFA;");
    asm("loc_49FCC5: cmp $2,%eax;");
    asm("loc_49FCC8: jne loc_49FCFA;");
    asm("loc_49FCCA: flds 0x46C(%ebx);");
    asm("loc_49FCD0: movl $0x4109999A,0x10(%esp);");
    asm("loc_49FCD8: fadds _data_5D3F48;");
    asm("loc_49FCDE: fstps 0x18(%esp);");
    asm("loc_49FCE2: flds 0x470(%ebx);");
    asm("loc_49FCE8: fsubs _data_5D3F40;");
    asm("loc_49FCEE: fstps 0x1C(%esp);");
    asm("loc_49FCF2: movl $0x4109999A,0xC(%esp);");
    asm("loc_49FCFA: xor %edi,%edi;");
    asm("loc_49FCFC: mov %edi,0x14(%esp);");
    asm("loc_49FD00: lea 0xB08(%ebx),%esi;");
    asm("loc_49FD06: fildl 0x14(%esp);");
    asm("loc_49FD0A: fmuls _data_5D3168;");
    asm("loc_49FD10: flds 0x18(%esp);");
    asm("loc_49FD14: fadd %st(1),%st;");
    asm("loc_49FD16: fsubs _data_5D3164;");
    asm("loc_49FD1C: fmuls 0xC(%esp);");
    asm("loc_49FD20: fxch;");
    asm("loc_49FD22: fadds 0x24(%esp);");
    asm("loc_49FD26: fsubs _data_5D3164;");
    asm("loc_49FD2C: fmuls 0x10(%esp);");
    asm("loc_49FD30: fsub %st(1),%st;");
    asm("loc_49FD32: fmuls 0x20(%esp);");
    asm("loc_49FD36: fadd %st(1),%st;");
    asm("loc_49FD38: fstps 0x14(%esp);");
    asm("loc_49FD3C: fstp %st(0);");
    asm("loc_49FD3E: flds 0x14(%esp);");
    asm("loc_49FD42: fcomps _data_5D3F3C;");
    asm("loc_49FD48: fnstsw %ax;");
    asm("loc_49FD4A: test $0x41,%ah;");
    asm("loc_49FD4D: je loc_49FD93;");
    asm("loc_49FD4F: flds 0x14(%esp);");
    asm("loc_49FD53: fcomps _data_5D3F38;");
    asm("loc_49FD59: fnstsw %ax;");
    asm("loc_49FD5B: test $5,%ah;");
    asm("loc_49FD5E: jnp loc_49FD93;");
    asm("loc_49FD60: mov (%esi),%ecx;");
    asm("loc_49FD62: mov (%ecx),%edx;");
    asm("loc_49FD64: push $0;");
    asm("loc_49FD66: push $0;");
    asm("loc_49FD68: push $1;");
    asm("loc_49FD6A: calll *0xA8(%edx);");
    asm("loc_49FD70: mov 0x14(%esp),%eax;");
    asm("loc_49FD74: mov %eax,0x2C(%esp);");
    asm("loc_49FD78: push $0;");
    asm("loc_49FD7A: lea 0x30(%esp),%eax;");
    asm("loc_49FD7E: push %eax;");
    asm("loc_49FD7F: movl $0xBE96872B,0x38(%esp);");
    asm("loc_49FD87: movl $0,0x3C(%esp);");
    asm("loc_49FD8F: push $6;");
    asm("loc_49FD91: jmp loc_49FD99;");
    asm("loc_49FD93: push $0;");
    asm("loc_49FD95: push $1;");
    asm("loc_49FD97: push $1;");
    asm("loc_49FD99: mov (%esi),%ecx;");
    asm("loc_49FD9B: mov (%ecx),%edx;");
    asm("loc_49FD9D: calll *0xA8(%edx);");
    asm("loc_49FDA3: inc %edi;");
    asm("loc_49FDA4: add $4,%esi;");
    asm("loc_49FDA7: cmp $8,%edi;");
    asm("loc_49FDAA: mov %edi,0x14(%esp);");
    asm("loc_49FDAE: jl loc_49FD06;");
    asm("loc_49FDB4: xor %edi,%edi;");
    asm("loc_49FDB6: mov %edi,0x14(%esp);");
    asm("loc_49FDBA: lea 0xB28(%ebx),%esi;");
    asm("loc_49FDC0: fildl 0x14(%esp);");
    asm("loc_49FDC4: fmuls _data_5D3168;");
    asm("loc_49FDCA: fsubrs _data_5D314C;");
    asm("loc_49FDD0: flds 0x1C(%esp);");
    asm("loc_49FDD4: fadd %st(1),%st;");
    asm("loc_49FDD6: fmuls 0xC(%esp);");
    asm("loc_49FDDA: fxch;");
    asm("loc_49FDDC: fadds 0x28(%esp);");
    asm("loc_49FDE0: fmuls 0x10(%esp);");
    asm("loc_49FDE4: fsub %st(1),%st;");
    asm("loc_49FDE6: fmuls 0x20(%esp);");
    asm("loc_49FDEA: fadd %st(1),%st;");
    asm("loc_49FDEC: fstps 0x18(%esp);");
    asm("loc_49FDF0: fstp %st(0);");
    asm("loc_49FDF2: flds 0x18(%esp);");
    asm("loc_49FDF6: fcomps _data_5D3F34;");
    asm("loc_49FDFC: fnstsw %ax;");
    asm("loc_49FDFE: test $0x41,%ah;");
    asm("loc_49FE01: je loc_49FE47;");
    asm("loc_49FE03: flds 0x18(%esp);");
    asm("loc_49FE07: fcomps _data_5D3F30;");
    asm("loc_49FE0D: fnstsw %ax;");
    asm("loc_49FE0F: test $5,%ah;");
    asm("loc_49FE12: jnp loc_49FE47;");
    asm("loc_49FE14: mov (%esi),%ecx;");
    asm("loc_49FE16: mov (%ecx),%eax;");
    asm("loc_49FE18: push $0;");
    asm("loc_49FE1A: push $0;");
    asm("loc_49FE1C: push $1;");
    asm("loc_49FE1E: calll *0xA8(%eax);");
    asm("loc_49FE24: mov 0x18(%esp),%ecx;");
    asm("loc_49FE28: push $0;");
    asm("loc_49FE2A: lea 0x30(%esp),%eax;");
    asm("loc_49FE2E: push %eax;");
    asm("loc_49FE2F: movl $0xBE9E353F,0x34(%esp);");
    asm("loc_49FE37: mov %ecx,0x38(%esp);");
    asm("loc_49FE3B: movl $0,0x3C(%esp);");
    asm("loc_49FE43: push $6;");
    asm("loc_49FE45: jmp loc_49FE4D;");
    asm("loc_49FE47: push $0;");
    asm("loc_49FE49: push $1;");
    asm("loc_49FE4B: push $1;");
    asm("loc_49FE4D: mov (%esi),%ecx;");
    asm("loc_49FE4F: mov (%ecx),%edx;");
    asm("loc_49FE51: calll *0xA8(%edx);");
    asm("loc_49FE57: inc %edi;");
    asm("loc_49FE58: add $4,%esi;");
    asm("loc_49FE5B: cmp $8,%edi;");
    asm("loc_49FE5E: mov %edi,0x14(%esp);");
    asm("loc_49FE62: jl loc_49FDC0;");
    asm("loc_49FE68: pop %edi;");
    asm("loc_49FE69: pop %esi;");
    asm("loc_49FE6A: pop %ebx;");
    asm("loc_49FE6B: add $0x2C,%esp;");
    asm("loc_49FE6E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_49FE70() // _sub_49FE70
{
    __DEBUG_ASM(49FE70);
    // chunk 0x49FE70 _sub_49FE70
    asm("loc_49FE70: sub $0xA8,%esp;");
    asm("loc_49FE76: push %ebx;");
    asm("loc_49FE77: push %ebp;");
    asm("loc_49FE78: mov %ecx,%ebp;");
    asm("loc_49FE7A: mov 0x87D(%ebp),%al;");
    asm("loc_49FE80: test %al,%al;");
    asm("loc_49FE82: push %esi;");
    asm("loc_49FE83: push %edi;");
    asm("loc_49FE84: je loc_4A020F;");
    asm("loc_49FE8A: mov 0x7D0(%ebp),%eax;");
    asm("loc_49FE90: test %eax,%eax;");
    asm("loc_49FE92: je loc_4A020F;");
    asm("loc_49FE98: lea 0x3D4(%ebp),%eax;");
    asm("loc_49FE9E: mov %eax,%esi;");
    asm("loc_49FEA0: mov $9,%ecx;");
    asm("loc_49FEA5: lea 0x64(%esp),%edi;");
    asm("loc_49FEA9: rep movsl (%esi),(%edi);");
    asm("loc_49FEAB: movl $0,0x1C(%esp);");
    asm("loc_49FEB3: mov 0x1C(%esp),%ecx;");
    asm("loc_49FEB7: mov %ecx,0x88(%esp);");
    asm("loc_49FEBE: movl $0,0x24(%esp);");
    asm("loc_49FEC6: mov 0x24(%esp),%ecx;");
    asm("loc_49FECA: mov %eax,%esi;");
    asm("loc_49FECC: mov _data_67209C,%eax;");
    asm("loc_49FED1: test %eax,%eax;");
    asm("loc_49FED3: movl $0,0x20(%esp);");
    asm("loc_49FEDB: mov 0x20(%esp),%edx;");
    asm("loc_49FEDF: mov %ecx,0x90(%esp);");
    asm("loc_49FEE6: mov $9,%ecx;");
    asm("loc_49FEEB: lea 0x94(%esp),%edi;");
    asm("loc_49FEF2: mov %edx,0x8C(%esp);");
    asm("loc_49FEF9: rep movsl (%esi),(%edi);");
    asm("loc_49FEFB: movl $0,0x1C(%esp);");
    asm("loc_49FF03: movl $0,0x20(%esp);");
    asm("loc_49FF0B: movl $0,0x24(%esp);");
    asm("loc_49FF13: jne loc_49FF1F;");
    asm("loc_49FF15: call _sub_5B73E0;");
    asm("loc_49FF1A: mov %eax,_data_67209C;");
    asm("loc_49FF1F: mov (%eax),%edx;");
    asm("loc_49FF21: lea 0x1C(%esp),%ecx;");
    asm("loc_49FF25: push %ecx;");
    asm("loc_49FF26: lea 0x68(%esp),%ecx;");
    asm("loc_49FF2A: push %ecx;");
    asm("loc_49FF2B: lea 0x30(%esp),%ecx;");
    asm("loc_49FF2F: push %ecx;");
    asm("loc_49FF30: push %eax;");
    asm("loc_49FF31: calll *0x28(%edx);");
    asm("loc_49FF34: mov 0x28(%esp),%edx;");
    asm("loc_49FF38: mov 0x2C(%esp),%eax;");
    asm("loc_49FF3C: mov $9,%ecx;");
    asm("loc_49FF41: lea 0x94(%esp),%esi;");
    asm("loc_49FF48: lea 0x34(%esp),%edi;");
    asm("loc_49FF4C: rep movsl (%esi),(%edi);");
    asm("loc_49FF4E: mov 0x30(%esp),%ecx;");
    asm("loc_49FF52: mov %edx,0x58(%esp);");
    asm("loc_49FF56: lea 0x34(%esp),%edx;");
    asm("loc_49FF5A: push %edx;");
    asm("loc_49FF5B: push $0;");
    asm("loc_49FF5D: mov %eax,0x64(%esp);");
    asm("loc_49FF61: mov %ecx,0x68(%esp);");
    asm("loc_49FF65: call _sub_422690;");
    asm("loc_49FF6A: push $0xB50;");
    asm("loc_49FF6F: call _sub_421ED0;");
    asm("loc_49FF74: push $0xB71;");
    asm("loc_49FF79: call _sub_421ED0;");
    asm("loc_49FF7E: push $0xB44;");
    asm("loc_49FF83: call _sub_421ED0;");
    asm("loc_49FF88: push $0xDE1;");
    asm("loc_49FF8D: call _sub_421ED0;");
    asm("loc_49FF92: push $0xBE2;");
    asm("loc_49FF97: call _sub_421DD0;");
    asm("loc_49FF9C: push $6;");
    asm("loc_49FF9E: push $5;");
    asm("loc_49FFA0: call _sub_4220C0;");
    asm("loc_49FFA5: mov 0xBD0(%ebp),%ecx;");
    asm("loc_49FFAB: add $0x24,%esp;");
    asm("loc_49FFAE: push $0;");
    asm("loc_49FFB0: call _sub_425640;");
    asm("loc_49FFB5: push %eax;");
    asm("loc_49FFB6: call _sub_4220A0;");
    asm("loc_49FFBB: push $0xFF;");
    asm("loc_49FFC0: push $0xFF;");
    asm("loc_49FFC5: push $0xFF;");
    asm("loc_49FFCA: call _sub_421A70;");
    asm("loc_49FFCF: push $4;");
    asm("loc_49FFD1: call _sub_421670;");
    asm("loc_49FFD6: add $0x14,%esp;");
    asm("loc_49FFD9: call _sub_4C4690;");
    asm("loc_49FFDE: lea -1(%eax),%edi;");
    asm("loc_49FFE1: or $0xFFFFFFFF,%esi;");
    asm("loc_49FFE4: cmp $0xFFFFFFFF,%edi;");
    asm("loc_49FFE7: mov %esi,0x10(%esp);");
    asm("loc_49FFEB: mov %edi,0x18(%esp);");
    asm("loc_49FFEF: jle loc_4A00F9;");
    asm("loc_49FFF5: cmp $0xFFFFFFFF,%esi;");
    asm("loc_49FFF8: jne loc_4A003E;");
    asm("loc_49FFFA: mov 0x4B8(%ebp),%eax;");
    asm("loc_4A0000: test %eax,%eax;");
    asm("loc_4A0002: je loc_4A003E;");
    asm("loc_4A0004: mov 0x48(%eax),%cl;");
    asm("loc_4A0007: test %cl,%cl;");
    asm("loc_4A0009: je loc_4A00EC;");
    asm("loc_4A000F: mov 0x7E0(%ebp),%ecx;");
    asm("loc_4A0015: mov (%ecx),%eax;");
    asm("loc_4A0017: calll *(%eax);");
    asm("loc_4A0019: mov %eax,%ebx;");
    asm("loc_4A001B: call _sub_4C4830;");
    asm("loc_4A0020: cmp %ebx,%eax;");
    asm("loc_4A0022: jne loc_4A00EC;");
    asm("loc_4A0028: mov 0x4B4(%ebp),%ecx;");
    asm("loc_4A002E: add $8,%ecx;");
    asm("loc_4A0031: call _sub_420FB0;");
    asm("loc_4A0036: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4A003C: jmp loc_4A0085;");
    asm("loc_4A003E: mov 0x4B8(%ebp,%esi,4),%eax;");
    asm("loc_4A0045: test %eax,%eax;");
    asm("loc_4A0047: je loc_4A00EC;");
    asm("loc_4A004D: mov 0x4BC(%ebp,%esi,4),%ecx;");
    asm("loc_4A0054: test %ecx,%ecx;");
    asm("loc_4A0056: je loc_4A00EC;");
    asm("loc_4A005C: mov 0x48(%eax),%dl;");
    asm("loc_4A005F: test %dl,%dl;");
    asm("loc_4A0061: je loc_4A00EC;");
    asm("loc_4A0067: mov 0x48(%ecx),%dl;");
    asm("loc_4A006A: test %dl,%dl;");
    asm("loc_4A006C: je loc_4A00EC;");
    asm("loc_4A0072: lea 8(%eax),%ecx;");
    asm("loc_4A0075: call _sub_420FB0;");
    asm("loc_4A007A: mov 0x10(%esp),%ecx;");
    asm("loc_4A007E: mov 0x4BC(%ebp,%ecx,4),%ecx;");
    asm("loc_4A0085: mov 8(%eax),%ebx;");
    asm("loc_4A0088: mov 4(%eax),%edi;");
    asm("loc_4A008B: mov (%eax),%esi;");
    asm("loc_4A008D: add $8,%ecx;");
    asm("loc_4A0090: call _sub_420FB0;");
    asm("loc_4A0095: mov 4(%eax),%edx;");
    asm("loc_4A0098: mov (%eax),%ecx;");
    asm("loc_4A009A: mov 8(%eax),%eax;");
    asm("loc_4A009D: mov %eax,0x30(%esp);");
    asm("loc_4A00A1: mov _data_679B80,%eax;");
    asm("loc_4A00A6: mov %eax,0x14(%esp);");
    asm("loc_4A00AA: push $0x3B656042;");
    asm("loc_4A00AF: lea 0x18(%esp),%eax;");
    asm("loc_4A00B3: push %eax;");
    asm("loc_4A00B4: push $_data_679B80;");
    asm("loc_4A00B9: sub $0xC,%esp;");
    asm("loc_4A00BC: mov %esp,%eax;");
    asm("loc_4A00BE: mov %ecx,(%eax);");
    asm("loc_4A00C0: mov 0x48(%esp),%ecx;");
    asm("loc_4A00C4: mov %edx,4(%eax);");
    asm("loc_4A00C7: sub $0xC,%esp;");
    asm("loc_4A00CA: mov %ecx,8(%eax);");
    asm("loc_4A00CD: mov %esp,%edx;");
    asm("loc_4A00CF: mov %esi,(%edx);");
    asm("loc_4A00D1: mov %edi,4(%edx);");
    asm("loc_4A00D4: movb $0,0x3B(%esp);");
    asm("loc_4A00D9: mov %ebx,8(%edx);");
    asm("loc_4A00DC: call _sub_498730;");
    asm("loc_4A00E1: mov 0x3C(%esp),%edi;");
    asm("loc_4A00E5: mov 0x34(%esp),%esi;");
    asm("loc_4A00E9: add $0x24,%esp;");
    asm("loc_4A00EC: inc %esi;");
    asm("loc_4A00ED: cmp %edi,%esi;");
    asm("loc_4A00EF: mov %esi,0x10(%esp);");
    asm("loc_4A00F3: jl loc_49FFF5;");
    asm("loc_4A00F9: call _sub_4C4FB0;");
    asm("loc_4A00FE: lea -1(%eax),%esi;");
    asm("loc_4A0101: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A0104: cmp $0xFFFFFFFF,%esi;");
    asm("loc_4A0107: mov %ecx,0x10(%esp);");
    asm("loc_4A010B: mov %esi,0x18(%esp);");
    asm("loc_4A010F: jle loc_4A0200;");
    asm("loc_4A0115: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_4A0118: jne loc_4A0145;");
    asm("loc_4A011A: mov 0x644(%ebp),%eax;");
    asm("loc_4A0120: test %eax,%eax;");
    asm("loc_4A0122: je loc_4A0145;");
    asm("loc_4A0124: mov 0x48(%eax),%dl;");
    asm("loc_4A0127: test %dl,%dl;");
    asm("loc_4A0129: je loc_4A01F3;");
    asm("loc_4A012F: mov 0x4B4(%ebp),%ecx;");
    asm("loc_4A0135: add $8,%ecx;");
    asm("loc_4A0138: call _sub_420FB0;");
    asm("loc_4A013D: mov 0x644(%ebp),%ecx;");
    asm("loc_4A0143: jmp loc_4A018C;");
    asm("loc_4A0145: mov 0x644(%ebp,%ecx,4),%eax;");
    asm("loc_4A014C: test %eax,%eax;");
    asm("loc_4A014E: je loc_4A01F3;");
    asm("loc_4A0154: mov 0x648(%ebp,%ecx,4),%edx;");
    asm("loc_4A015B: test %edx,%edx;");
    asm("loc_4A015D: je loc_4A01F3;");
    asm("loc_4A0163: mov 0x48(%eax),%bl;");
    asm("loc_4A0166: test %bl,%bl;");
    asm("loc_4A0168: je loc_4A01F3;");
    asm("loc_4A016E: mov 0x48(%edx),%bl;");
    asm("loc_4A0171: test %bl,%bl;");
    asm("loc_4A0173: je loc_4A01F3;");
    asm("loc_4A0179: lea 8(%eax),%ecx;");
    asm("loc_4A017C: call _sub_420FB0;");
    asm("loc_4A0181: mov 0x10(%esp),%ecx;");
    asm("loc_4A0185: mov 0x648(%ebp,%ecx,4),%ecx;");
    asm("loc_4A018C: mov 8(%eax),%ebx;");
    asm("loc_4A018F: mov 4(%eax),%edi;");
    asm("loc_4A0192: mov (%eax),%esi;");
    asm("loc_4A0194: add $8,%ecx;");
    asm("loc_4A0197: call _sub_420FB0;");
    asm("loc_4A019C: mov 4(%eax),%edx;");
    asm("loc_4A019F: mov (%eax),%ecx;");
    asm("loc_4A01A1: mov 8(%eax),%eax;");
    asm("loc_4A01A4: mov %eax,0x30(%esp);");
    asm("loc_4A01A8: mov _data_679B80,%eax;");
    asm("loc_4A01AD: mov %eax,0x14(%esp);");
    asm("loc_4A01B1: push $0x3BA3D70A;");
    asm("loc_4A01B6: lea 0x18(%esp),%eax;");
    asm("loc_4A01BA: push %eax;");
    asm("loc_4A01BB: push $_data_679B80;");
    asm("loc_4A01C0: sub $0xC,%esp;");
    asm("loc_4A01C3: mov %esp,%eax;");
    asm("loc_4A01C5: mov %ecx,(%eax);");
    asm("loc_4A01C7: mov 0x48(%esp),%ecx;");
    asm("loc_4A01CB: mov %edx,4(%eax);");
    asm("loc_4A01CE: sub $0xC,%esp;");
    asm("loc_4A01D1: mov %ecx,8(%eax);");
    asm("loc_4A01D4: mov %esp,%edx;");
    asm("loc_4A01D6: mov %esi,(%edx);");
    asm("loc_4A01D8: mov %edi,4(%edx);");
    asm("loc_4A01DB: movb $0,0x3B(%esp);");
    asm("loc_4A01E0: mov %ebx,8(%edx);");
    asm("loc_4A01E3: call _sub_498730;");
    asm("loc_4A01E8: mov 0x34(%esp),%ecx;");
    asm("loc_4A01EC: mov 0x3C(%esp),%esi;");
    asm("loc_4A01F0: add $0x24,%esp;");
    asm("loc_4A01F3: inc %ecx;");
    asm("loc_4A01F4: cmp %esi,%ecx;");
    asm("loc_4A01F6: mov %ecx,0x10(%esp);");
    asm("loc_4A01FA: jl loc_4A0115;");
    asm("loc_4A0200: pop %edi;");
    asm("loc_4A0201: pop %esi;");
    asm("loc_4A0202: pop %ebp;");
    asm("loc_4A0203: pop %ebx;");
    asm("loc_4A0204: add $0xA8,%esp;");
    asm("loc_4A020A: jmp _sub_421690;");
    asm("loc_4A020F: pop %edi;");
    asm("loc_4A0210: pop %esi;");
    asm("loc_4A0211: pop %ebp;");
    asm("loc_4A0212: pop %ebx;");
    asm("loc_4A0213: add $0xA8,%esp;");
    asm("loc_4A0219: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A0220() // _sub_4A0220
{
    __DEBUG_ASM(4A0220);
    // chunk 0x4A0220 _sub_4A0220
    asm("loc_4A0220: push %ebx;");
    asm("loc_4A0221: push %ebp;");
    asm("loc_4A0222: push %esi;");
    asm("loc_4A0223: mov %ecx,%esi;");
    asm("loc_4A0225: mov 0x10(%esp),%ecx;");
    asm("loc_4A0229: xor %eax,%eax;");
    asm("loc_4A022B: cmp $7,%ecx;");
    asm("loc_4A022E: sete %al;");
    asm("loc_4A0231: push %edi;");
    asm("loc_4A0232: lea 0xF88(%esi),%ebx;");
    asm("loc_4A0238: mov $0xF,%ebp;");
    asm("loc_4A023D: mov %eax,%edi;");
    asm("loc_4A023F: nop;");
    asm("loc_4A0240: mov -0x3C(%ebx),%ecx;");
    asm("loc_4A0243: mov (%ecx),%edx;");
    asm("loc_4A0245: push $0;");
    asm("loc_4A0247: push %edi;");
    asm("loc_4A0248: push $0x24;");
    asm("loc_4A024A: calll *0xA8(%edx);");
    asm("loc_4A0250: mov (%ebx),%ecx;");
    asm("loc_4A0252: mov (%ecx),%eax;");
    asm("loc_4A0254: push $0;");
    asm("loc_4A0256: push %edi;");
    asm("loc_4A0257: push $0x24;");
    asm("loc_4A0259: calll *0xA8(%eax);");
    asm("loc_4A025F: add $4,%ebx;");
    asm("loc_4A0262: dec %ebp;");
    asm("loc_4A0263: jne loc_4A0240;");
    asm("loc_4A0265: mov 0xFC8(%esi),%ecx;");
    asm("loc_4A026B: mov (%ecx),%edx;");
    asm("loc_4A026D: push $0;");
    asm("loc_4A026F: push %edi;");
    asm("loc_4A0270: push $0x24;");
    asm("loc_4A0272: calll *0xA8(%edx);");
    asm("loc_4A0278: mov 0xFCC(%esi),%ecx;");
    asm("loc_4A027E: mov (%ecx),%eax;");
    asm("loc_4A0280: push $0;");
    asm("loc_4A0282: push %edi;");
    asm("loc_4A0283: push $0x24;");
    asm("loc_4A0285: calll *0xA8(%eax);");
    asm("loc_4A028B: mov _data_6720A0,%eax;");
    asm("loc_4A0290: cmp $6,%eax;");
    asm("loc_4A0293: mov $3,%ebx;");
    asm("loc_4A0298: je loc_4A02A3;");
    asm("loc_4A029A: cmp $7,%eax;");
    asm("loc_4A029D: jne loc_4A037E;");
    asm("loc_4A02A3: mov 0xF38(%esi),%eax;");
    asm("loc_4A02A9: andb $0xFC,0x6C(%eax);");
    asm("loc_4A02AD: mov 0xF3C(%esi),%eax;");
    asm("loc_4A02B3: andb $0xFC,0x6C(%eax);");
    asm("loc_4A02B7: mov 0xF40(%esi),%eax;");
    asm("loc_4A02BD: andb $0xFC,0x6C(%eax);");
    asm("loc_4A02C1: mov 0x7D0(%esi),%eax;");
    asm("loc_4A02C7: test %eax,%eax;");
    asm("loc_4A02C9: jne loc_4A031D;");
    asm("loc_4A02CB: mov 0xAF8(%esi),%ecx;");
    asm("loc_4A02D1: mov (%ecx),%edx;");
    asm("loc_4A02D3: push $0;");
    asm("loc_4A02D5: push $0;");
    asm("loc_4A02D7: push $1;");
    asm("loc_4A02D9: calll *0xA8(%edx);");
    asm("loc_4A02DF: mov 0xAFC(%esi),%ecx;");
    asm("loc_4A02E5: mov (%ecx),%eax;");
    asm("loc_4A02E7: push $0;");
    asm("loc_4A02E9: push $0;");
    asm("loc_4A02EB: push $1;");
    asm("loc_4A02ED: calll *0xA8(%eax);");
    asm("loc_4A02F3: mov 0xB00(%esi),%ecx;");
    asm("loc_4A02F9: mov (%ecx),%edx;");
    asm("loc_4A02FB: push $0;");
    asm("loc_4A02FD: push $0;");
    asm("loc_4A02FF: push $1;");
    asm("loc_4A0301: calll *0xA8(%edx);");
    asm("loc_4A0307: mov 0xB04(%esi),%ecx;");
    asm("loc_4A030D: mov (%ecx),%eax;");
    asm("loc_4A030F: push $0;");
    asm("loc_4A0311: push $0;");
    asm("loc_4A0313: push $1;");
    asm("loc_4A0315: calll *0xA8(%eax);");
    asm("loc_4A031B: jmp loc_4A037E;");
    asm("loc_4A031D: mov 0x8D8(%esi),%eax;");
    asm("loc_4A0323: or %bl,0x6C(%eax);");
    asm("loc_4A0326: mov 0x8DC(%esi),%eax;");
    asm("loc_4A032C: or %bl,0x6C(%eax);");
    asm("loc_4A032F: mov 0xB4C(%esi),%eax;");
    asm("loc_4A0335: or %bl,0x6C(%eax);");
    asm("loc_4A0338: mov 0xC14(%esi),%eax;");
    asm("loc_4A033E: or %bl,0x6C(%eax);");
    asm("loc_4A0341: mov 0xC18(%esi),%eax;");
    asm("loc_4A0347: or %bl,0x6C(%eax);");
    asm("loc_4A034A: mov 0xC58(%esi),%eax;");
    asm("loc_4A0350: or %bl,0x6C(%eax);");
    asm("loc_4A0353: mov 0x7F0(%esi),%eax;");
    asm("loc_4A0359: or %bl,0x6C(%eax);");
    asm("loc_4A035C: mov 0xB5C(%esi),%eax;");
    asm("loc_4A0362: test %eax,%eax;");
    asm("loc_4A0364: je loc_4A037E;");
    asm("loc_4A0366: mov 0xB60(%esi),%ecx;");
    asm("loc_4A036C: sub %eax,%ecx;");
    asm("loc_4A036E: sar $2,%ecx;");
    asm("loc_4A0371: test %ecx,%ecx;");
    asm("loc_4A0373: jbe loc_4A037E;");
    asm("loc_4A0375: mov 0xB50(%esi),%eax;");
    asm("loc_4A037B: or %bl,0x6C(%eax);");
    asm("loc_4A037E: mov 0x14(%esp),%edi;");
    asm("loc_4A0382: xor %eax,%eax;");
    asm("loc_4A0384: test %edi,%edi;");
    asm("loc_4A0386: sete %al;");
    asm("loc_4A0389: push $0;");
    asm("loc_4A038B: mov %edi,_data_6720A0;");
    asm("loc_4A0391: mov 0x8D8(%esi),%ecx;");
    asm("loc_4A0397: mov (%ecx),%edx;");
    asm("loc_4A0399: push %eax;");
    asm("loc_4A039A: push $0xC;");
    asm("loc_4A039C: calll *0xA8(%edx);");
    asm("loc_4A03A2: mov _data_6720A0,%ebp;");
    asm("loc_4A03A8: mov 0x8DC(%esi),%ecx;");
    asm("loc_4A03AE: mov (%ecx),%edx;");
    asm("loc_4A03B0: xor %eax,%eax;");
    asm("loc_4A03B2: cmp $1,%ebp;");
    asm("loc_4A03B5: sete %al;");
    asm("loc_4A03B8: push $0;");
    asm("loc_4A03BA: push %eax;");
    asm("loc_4A03BB: push $0xC;");
    asm("loc_4A03BD: calll *0xA8(%edx);");
    asm("loc_4A03C3: mov _data_6720A0,%edi;");
    asm("loc_4A03C9: mov 0xB4C(%esi),%ecx;");
    asm("loc_4A03CF: mov (%ecx),%edx;");
    asm("loc_4A03D1: xor %eax,%eax;");
    asm("loc_4A03D3: cmp $2,%edi;");
    asm("loc_4A03D6: sete %al;");
    asm("loc_4A03D9: push $0;");
    asm("loc_4A03DB: push %eax;");
    asm("loc_4A03DC: push $0xC;");
    asm("loc_4A03DE: calll *0xA8(%edx);");
    asm("loc_4A03E4: mov _data_6720A0,%ebp;");
    asm("loc_4A03EA: mov 0xB50(%esi),%ecx;");
    asm("loc_4A03F0: mov (%ecx),%edx;");
    asm("loc_4A03F2: xor %eax,%eax;");
    asm("loc_4A03F4: cmp %ebx,%ebp;");
    asm("loc_4A03F6: sete %al;");
    asm("loc_4A03F9: push $0;");
    asm("loc_4A03FB: push %eax;");
    asm("loc_4A03FC: push $0xC;");
    asm("loc_4A03FE: calll *0xA8(%edx);");
    asm("loc_4A0404: mov _data_6720A0,%ebp;");
    asm("loc_4A040A: mov 0xC14(%esi),%ecx;");
    asm("loc_4A0410: mov (%ecx),%edx;");
    asm("loc_4A0412: xor %eax,%eax;");
    asm("loc_4A0414: cmp $4,%ebp;");
    asm("loc_4A0417: sete %al;");
    asm("loc_4A041A: push $0;");
    asm("loc_4A041C: push %eax;");
    asm("loc_4A041D: push $0xC;");
    asm("loc_4A041F: calll *0xA8(%edx);");
    asm("loc_4A0425: mov _data_6720A0,%ebp;");
    asm("loc_4A042B: mov 0xC18(%esi),%ecx;");
    asm("loc_4A0431: mov (%ecx),%edx;");
    asm("loc_4A0433: xor %eax,%eax;");
    asm("loc_4A0435: cmp $7,%ebp;");
    asm("loc_4A0438: sete %al;");
    asm("loc_4A043B: push $0;");
    asm("loc_4A043D: push %eax;");
    asm("loc_4A043E: push $0xC;");
    asm("loc_4A0440: calll *0xA8(%edx);");
    asm("loc_4A0446: mov _data_6720A0,%ebp;");
    asm("loc_4A044C: mov 0xC58(%esi),%ecx;");
    asm("loc_4A0452: mov (%ecx),%edx;");
    asm("loc_4A0454: xor %eax,%eax;");
    asm("loc_4A0456: cmp $5,%ebp;");
    asm("loc_4A0459: sete %al;");
    asm("loc_4A045C: push $0;");
    asm("loc_4A045E: push %eax;");
    asm("loc_4A045F: push $0xC;");
    asm("loc_4A0461: calll *0xA8(%edx);");
    asm("loc_4A0467: mov _data_6720A0,%eax;");
    asm("loc_4A046C: cmp $1,%eax;");
    asm("loc_4A046F: je loc_4A04B4;");
    asm("loc_4A0471: cmp $2,%eax;");
    asm("loc_4A0474: je loc_4A04B4;");
    asm("loc_4A0476: mov 0xC5C(%esi),%ecx;");
    asm("loc_4A047C: mov (%ecx),%edx;");
    asm("loc_4A047E: push $0;");
    asm("loc_4A0480: push $1;");
    asm("loc_4A0482: push $1;");
    asm("loc_4A0484: calll *0xA8(%edx);");
    asm("loc_4A048A: mov 0xC60(%esi),%ecx;");
    asm("loc_4A0490: mov (%ecx),%eax;");
    asm("loc_4A0492: push $0;");
    asm("loc_4A0494: push $1;");
    asm("loc_4A0496: push $1;");
    asm("loc_4A0498: calll *0xA8(%eax);");
    asm("loc_4A049E: mov 0xC64(%esi),%ecx;");
    asm("loc_4A04A4: mov (%ecx),%edx;");
    asm("loc_4A04A6: push $0;");
    asm("loc_4A04A8: push $1;");
    asm("loc_4A04AA: push $1;");
    asm("loc_4A04AC: calll *0xA8(%edx);");
    asm("loc_4A04B2: jmp loc_4A04F0;");
    asm("loc_4A04B4: mov 0xC5C(%esi),%ecx;");
    asm("loc_4A04BA: mov (%ecx),%eax;");
    asm("loc_4A04BC: push $0;");
    asm("loc_4A04BE: push $0;");
    asm("loc_4A04C0: push $1;");
    asm("loc_4A04C2: calll *0xA8(%eax);");
    asm("loc_4A04C8: mov 0xC60(%esi),%ecx;");
    asm("loc_4A04CE: mov (%ecx),%edx;");
    asm("loc_4A04D0: push $0;");
    asm("loc_4A04D2: push $0;");
    asm("loc_4A04D4: push $1;");
    asm("loc_4A04D6: calll *0xA8(%edx);");
    asm("loc_4A04DC: mov 0xC64(%esi),%ecx;");
    asm("loc_4A04E2: mov (%ecx),%eax;");
    asm("loc_4A04E4: push $0;");
    asm("loc_4A04E6: push $0;");
    asm("loc_4A04E8: push $1;");
    asm("loc_4A04EA: calll *0xA8(%eax);");
    asm("loc_4A04F0: cmpl $6,_data_6720A0;");
    asm("loc_4A04F7: jne loc_4A0549;");
    asm("loc_4A04F9: mov 0x8D8(%esi),%eax;");
    asm("loc_4A04FF: andb $0xFC,0x6C(%eax);");
    asm("loc_4A0503: mov 0x8DC(%esi),%eax;");
    asm("loc_4A0509: andb $0xFC,0x6C(%eax);");
    asm("loc_4A050D: mov 0xB4C(%esi),%eax;");
    asm("loc_4A0513: andb $0xFC,0x6C(%eax);");
    asm("loc_4A0517: mov 0xB50(%esi),%eax;");
    asm("loc_4A051D: andb $0xFC,0x6C(%eax);");
    asm("loc_4A0521: mov 0xC14(%esi),%eax;");
    asm("loc_4A0527: andb $0xFC,0x6C(%eax);");
    asm("loc_4A052B: mov 0xC18(%esi),%eax;");
    asm("loc_4A0531: andb $0xFC,0x6C(%eax);");
    asm("loc_4A0535: mov 0xC58(%esi),%eax;");
    asm("loc_4A053B: andb $0xFC,0x6C(%eax);");
    asm("loc_4A053F: mov 0x7F0(%esi),%eax;");
    asm("loc_4A0545: andb $0xFC,0x6C(%eax);");
    asm("loc_4A0549: mov _data_6720A0,%eax;");
    asm("loc_4A054E: mov _data_611C84(,%eax,4),%ecx;");
    asm("loc_4A0555: mov 0xB54(%esi),%esi;");
    asm("loc_4A055B: mov (%esi),%edx;");
    asm("loc_4A055D: push $0;");
    asm("loc_4A055F: push %ecx;");
    asm("loc_4A0560: push $0x1E;");
    asm("loc_4A0562: mov %esi,%ecx;");
    asm("loc_4A0564: calll *0xA8(%edx);");
    asm("loc_4A056A: pop %edi;");
    asm("loc_4A056B: pop %esi;");
    asm("loc_4A056C: pop %ebp;");
    asm("loc_4A056D: pop %ebx;");
    asm("loc_4A056E: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A0580() // _sub_4A0580
{
    __DEBUG_ASM(4A0580);
    // chunk 0x4A0580 _sub_4A0580
    asm("loc_4A0580: sub $8,%esp;");
    asm("loc_4A0583: mov _data_5D2ED0,%eax;");
    asm("loc_4A0588: push %ebx;");
    asm("loc_4A0589: push %esi;");
    asm("loc_4A058A: mov %ecx,%esi;");
    asm("loc_4A058C: push %edi;");
    asm("loc_4A058D: mov %eax,0xF0C(%esi);");
    asm("loc_4A0593: mov 0xB60(%esi),%edx;");
    asm("loc_4A0599: mov 0xB5C(%esi),%ecx;");
    asm("loc_4A059F: lea 0xB58(%esi),%edi;");
    asm("loc_4A05A5: mov %edx,%eax;");
    asm("loc_4A05A7: cmp %edx,%eax;");
    asm("loc_4A05A9: mov %esi,0x10(%esp);");
    asm("loc_4A05AD: je loc_4A05BE;");
    asm("loc_4A05AF: nop;");
    asm("loc_4A05B0: mov (%eax),%ebx;");
    asm("loc_4A05B2: mov %ebx,(%ecx);");
    asm("loc_4A05B4: add $4,%eax;");
    asm("loc_4A05B7: add $4,%ecx;");
    asm("loc_4A05BA: cmp %edx,%eax;");
    asm("loc_4A05BC: jne loc_4A05B0;");
    asm("loc_4A05BE: push %ebp;");
    asm("loc_4A05BF: mov %ecx,8(%edi);");
    asm("loc_4A05C2: call _sub_4C4FB0;");
    asm("loc_4A05C7: mov %eax,%ebp;");
    asm("loc_4A05C9: xor %ebx,%ebx;");
    asm("loc_4A05CB: test %ebp,%ebp;");
    asm("loc_4A05CD: jle loc_4A060F;");
    asm("loc_4A05CF: nop;");
    asm("loc_4A05D0: push %ebx;");
    asm("loc_4A05D1: call _sub_4C4FF0;");
    asm("loc_4A05D6: mov (%eax),%esi;");
    asm("loc_4A05D8: add $4,%esp;");
    asm("loc_4A05DB: test %esi,%esi;");
    asm("loc_4A05DD: je loc_4A0606;");
    asm("loc_4A05DF: nop;");
    asm("loc_4A05E0: cmpw $0x5A,8(%esi);");
    asm("loc_4A05E5: jne loc_4A0600;");
    asm("loc_4A05E7: mov 4(%esi),%ecx;");
    asm("loc_4A05EA: mov 8(%edi),%eax;");
    asm("loc_4A05ED: lea 0x10(%esp),%edx;");
    asm("loc_4A05F1: push %edx;");
    asm("loc_4A05F2: push $1;");
    asm("loc_4A05F4: mov %ecx,0x18(%esp);");
    asm("loc_4A05F8: push %eax;");
    asm("loc_4A05F9: mov %edi,%ecx;");
    asm("loc_4A05FB: call _sub_537260;");
    asm("loc_4A0600: mov (%esi),%esi;");
    asm("loc_4A0602: test %esi,%esi;");
    asm("loc_4A0604: jne loc_4A05E0;");
    asm("loc_4A0606: inc %ebx;");
    asm("loc_4A0607: cmp %ebp,%ebx;");
    asm("loc_4A0609: jl loc_4A05D0;");
    asm("loc_4A060B: mov 0x14(%esp),%esi;");
    asm("loc_4A060F: mov 0x7D0(%esi),%eax;");
    asm("loc_4A0615: test %eax,%eax;");
    asm("loc_4A0617: pop %ebp;");
    asm("loc_4A0618: je loc_4A0669;");
    asm("loc_4A061A: mov 0x478(%esi),%al;");
    asm("loc_4A0620: test %al,%al;");
    asm("loc_4A0622: jne loc_4A0669;");
    asm("loc_4A0624: mov 4(%edi),%eax;");
    asm("loc_4A0627: test %eax,%eax;");
    asm("loc_4A0629: jne loc_4A062F;");
    asm("loc_4A062B: xor %edi,%edi;");
    asm("loc_4A062D: jmp loc_4A0637;");
    asm("loc_4A062F: mov 8(%edi),%edi;");
    asm("loc_4A0632: sub %eax,%edi;");
    asm("loc_4A0634: sar $2,%edi;");
    asm("loc_4A0637: mov 0xB50(%esi),%ecx;");
    asm("loc_4A063D: mov (%ecx),%edx;");
    asm("loc_4A063F: test %edi,%edi;");
    asm("loc_4A0641: sete %bl;");
    asm("loc_4A0644: xor %eax,%eax;");
    asm("loc_4A0646: mov %bl,%al;");
    asm("loc_4A0648: push $0;");
    asm("loc_4A064A: push %eax;");
    asm("loc_4A064B: push $1;");
    asm("loc_4A064D: calll *0xA8(%edx);");
    asm("loc_4A0653: test %bl,%bl;");
    asm("loc_4A0655: je loc_4A0669;");
    asm("loc_4A0657: cmpl $3,_data_6720A0;");
    asm("loc_4A065E: jne loc_4A0669;");
    asm("loc_4A0660: push $0;");
    asm("loc_4A0662: mov %esi,%ecx;");
    asm("loc_4A0664: call _sub_4A0220;");
    asm("loc_4A0669: pop %edi;");
    asm("loc_4A066A: pop %esi;");
    asm("loc_4A066B: pop %ebx;");
    asm("loc_4A066C: add $8,%esp;");
    asm("loc_4A066F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A0670() // _sub_4A0670
{
    __DEBUG_ASM(4A0670);
    // chunk 0x4A0670 _sub_4A0670
    asm("loc_4A0670: sub $0xC2C,%esp;");
    asm("loc_4A0676: push %ebx;");
    asm("loc_4A0677: push %ebp;");
    asm("loc_4A0678: push %esi;");
    asm("loc_4A0679: mov %ecx,%ebx;");
    asm("loc_4A067B: xor %esi,%esi;");
    asm("loc_4A067D: mov %esi,0xEC4(%ebx);");
    asm("loc_4A0683: mov _data_5D2ECC,%eax;");
    asm("loc_4A0688: lea 0xB8C(%ebx),%ecx;");
    asm("loc_4A068E: mov %eax,0xEC0(%ebx);");
    asm("loc_4A0694: mov 8(%ecx),%edx;");
    asm("loc_4A0697: mov 4(%ecx),%eax;");
    asm("loc_4A069A: push %edi;");
    asm("loc_4A069B: push %edx;");
    asm("loc_4A069C: push %eax;");
    asm("loc_4A069D: mov %ebx,0x28(%esp);");
    asm("loc_4A06A1: call _sub_5995C0;");
    asm("loc_4A06A6: mov %esi,0x18(%esp);");
    asm("loc_4A06AA: lea (%ebx),%ebx;");
    asm("loc_4A06B0: mov 0xB90(%ebx),%ecx;");
    asm("loc_4A06B6: test %ecx,%ecx;");
    asm("loc_4A06B8: jne loc_4A06BE;");
    asm("loc_4A06BA: xor %eax,%eax;");
    asm("loc_4A06BC: jmp loc_4A06C9;");
    asm("loc_4A06BE: mov 0xB94(%ebx),%eax;");
    asm("loc_4A06C4: sub %ecx,%eax;");
    asm("loc_4A06C6: sar $2,%eax;");
    asm("loc_4A06C9: mov 0x7E0(%ebx),%ecx;");
    asm("loc_4A06CF: mov (%ecx),%edx;");
    asm("loc_4A06D1: mov %eax,0x24(%esp,%esi,4);");
    asm("loc_4A06D5: calll *0x18(%edx);");
    asm("loc_4A06D8: mov %eax,0x1C(%esp);");
    asm("loc_4A06DC: mov 4(%eax),%eax;");
    asm("loc_4A06DF: mov (%eax),%ebp;");
    asm("loc_4A06E1: cmp %eax,%ebp;");
    asm("loc_4A06E3: je loc_4A0770;");
    asm("loc_4A06E9: lea (%esp),%esp;");
    asm("loc_4A06F0: lea 8(%ebp),%esi;");
    asm("loc_4A06F3: mov $0x303,%ecx;");
    asm("loc_4A06F8: lea 0x30(%esp),%edi;");
    asm("loc_4A06FC: rep movsl (%esi),(%edi);");
    asm("loc_4A06FE: mov 0xC38(%esp),%ecx;");
    asm("loc_4A0705: mov %ecx,0x14(%esp);");
    asm("loc_4A0709: mov (%ecx),%eax;");
    asm("loc_4A070B: calll *0x1C(%eax);");
    asm("loc_4A070E: mov 0x18(%esp),%ecx;");
    asm("loc_4A0712: test %ecx,%ecx;");
    asm("loc_4A0714: jne loc_4A0728;");
    asm("loc_4A0716: test %ah,%ah;");
    asm("loc_4A0718: jns loc_4A0760;");
    asm("loc_4A071A: test $0x30000,%eax;");
    asm("loc_4A071F: jne loc_4A0760;");
    asm("loc_4A0721: lea 0x14(%esp),%ecx;");
    asm("loc_4A0725: push %ecx;");
    asm("loc_4A0726: jmp loc_4A074C;");
    asm("loc_4A0728: cmp $1,%ecx;");
    asm("loc_4A072B: jne loc_4A073B;");
    asm("loc_4A072D: test $0x38000,%eax;");
    asm("loc_4A0732: jne loc_4A0760;");
    asm("loc_4A0734: test $0x7FC0,%eax;");
    asm("loc_4A0739: jmp loc_4A0745;");
    asm("loc_4A073B: cmp $2,%ecx;");
    asm("loc_4A073E: jne loc_4A0760;");
    asm("loc_4A0740: test $0x30000,%eax;");
    asm("loc_4A0745: je loc_4A0760;");
    asm("loc_4A0747: lea 0x14(%esp),%eax;");
    asm("loc_4A074B: push %eax;");
    asm("loc_4A074C: mov 0xB94(%ebx),%edx;");
    asm("loc_4A0752: lea 0xB8C(%ebx),%ecx;");
    asm("loc_4A0758: push $1;");
    asm("loc_4A075A: push %edx;");
    asm("loc_4A075B: call _sub_537260;");
    asm("loc_4A0760: mov 0x1C(%esp),%eax;");
    asm("loc_4A0764: mov (%ebp),%ebp;");
    asm("loc_4A0767: cmp 4(%eax),%ebp;");
    asm("loc_4A076A: jne loc_4A06F0;");
    asm("loc_4A076C: mov 0x18(%esp),%esi;");
    asm("loc_4A0770: inc %esi;");
    asm("loc_4A0771: cmp $3,%esi;");
    asm("loc_4A0774: mov %esi,0x18(%esp);");
    asm("loc_4A0778: jl loc_4A06B0;");
    asm("loc_4A077E: mov 0x2C(%esp),%ecx;");
    asm("loc_4A0782: lea -1(%ecx),%eax;");
    asm("loc_4A0785: mov %eax,0x1C(%esp);");
    asm("loc_4A0789: mov 0x28(%esp),%ebp;");
    asm("loc_4A078D: cmp %eax,%ebp;");
    asm("loc_4A078F: movb $1,0x13(%esp);");
    asm("loc_4A0794: jge loc_4A07EF;");
    asm("loc_4A0796: mov 0xB90(%ebx),%eax;");
    asm("loc_4A079C: mov 4(%eax,%ebp,4),%edi;");
    asm("loc_4A07A0: mov (%edi),%edx;");
    asm("loc_4A07A2: mov (%eax,%ebp,4),%esi;");
    asm("loc_4A07A5: mov %edi,%ecx;");
    asm("loc_4A07A7: calll *0x1C(%edx);");
    asm("loc_4A07AA: mov %eax,%ebx;");
    asm("loc_4A07AC: mov (%esi),%eax;");
    asm("loc_4A07AE: mov %esi,%ecx;");
    asm("loc_4A07B0: and $0x7FC0,%ebx;");
    asm("loc_4A07B6: calll *0x1C(%eax);");
    asm("loc_4A07B9: and $0x7FC0,%eax;");
    asm("loc_4A07BE: cmp %ebx,%eax;");
    asm("loc_4A07C0: mov 0x20(%esp),%ebx;");
    asm("loc_4A07C4: jbe loc_4A07DE;");
    asm("loc_4A07C6: mov 0xB90(%ebx),%ecx;");
    asm("loc_4A07CC: mov %edi,(%ecx,%ebp,4);");
    asm("loc_4A07CF: mov 0xB90(%ebx),%edx;");
    asm("loc_4A07D5: mov %esi,4(%edx,%ebp,4);");
    asm("loc_4A07D9: movb $0,0x13(%esp);");
    asm("loc_4A07DE: mov 0x1C(%esp),%eax;");
    asm("loc_4A07E2: inc %ebp;");
    asm("loc_4A07E3: cmp %eax,%ebp;");
    asm("loc_4A07E5: jl loc_4A0796;");
    asm("loc_4A07E7: mov 0x13(%esp),%cl;");
    asm("loc_4A07EB: test %cl,%cl;");
    asm("loc_4A07ED: je loc_4A0789;");
    asm("loc_4A07EF: pop %edi;");
    asm("loc_4A07F0: pop %esi;");
    asm("loc_4A07F1: pop %ebp;");
    asm("loc_4A07F2: pop %ebx;");
    asm("loc_4A07F3: add $0xC2C,%esp;");
    asm("loc_4A07F9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A0800() // _sub_4A0800
{
    __DEBUG_ASM(4A0800);
    // chunk 0x4A0800 _sub_4A0800
    asm("loc_4A0800: sub $0x12C,%esp;");
    asm("loc_4A0806: push %ebx;");
    asm("loc_4A0807: push %ebp;");
    asm("loc_4A0808: push %esi;");
    asm("loc_4A0809: mov 0x13C(%esp),%esi;");
    asm("loc_4A0810: push %edi;");
    asm("loc_4A0811: mov %ecx,%ebp;");
    asm("loc_4A0813: push %esi;");
    asm("loc_4A0814: mov %ebp,0x1C(%esp);");
    asm("loc_4A0818: call _sub_4C5530;");
    asm("loc_4A081D: mov 0xB9C(%ebp),%ecx;");
    asm("loc_4A0823: add $4,%esp;");
    asm("loc_4A0826: cmp %ecx,%eax;");
    asm("loc_4A0828: mov %eax,0x1C(%esp);");
    asm("loc_4A082C: jne loc_4A0869;");
    asm("loc_4A082E: mov 0x144(%esp),%ecx;");
    asm("loc_4A0835: lea 0xBA0(%ebp),%eax;");
    asm("loc_4A083B: mov (%eax),%edx;");
    asm("loc_4A083D: mov %edx,(%ecx);");
    asm("loc_4A083F: mov 4(%eax),%edx;");
    asm("loc_4A0842: mov %edx,4(%ecx);");
    asm("loc_4A0845: mov 8(%eax),%eax;");
    asm("loc_4A0848: mov 0x148(%esp),%edx;");
    asm("loc_4A084F: pop %edi;");
    asm("loc_4A0850: mov %eax,8(%ecx);");
    asm("loc_4A0853: mov 0xBAC(%ebp),%ecx;");
    asm("loc_4A0859: pop %esi;");
    asm("loc_4A085A: pop %ebp;");
    asm("loc_4A085B: mov %ecx,(%edx);");
    asm("loc_4A085D: mov $1,%al;");
    asm("loc_4A085F: pop %ebx;");
    asm("loc_4A0860: add $0x12C,%esp;");
    asm("loc_4A0866: ret $0xC;");
    asm("loc_4A0869: push %esi;");
    asm("loc_4A086A: call _sub_4C4FF0;");
    asm("loc_4A086F: mov (%eax),%edi;");
    asm("loc_4A0871: xor %ebx,%ebx;");
    asm("loc_4A0873: add $4,%esp;");
    asm("loc_4A0876: cmp %ebx,%edi;");
    asm("loc_4A0878: mov %edi,0x14(%esp);");
    asm("loc_4A087C: mov %bl,0x13(%esp);");
    asm("loc_4A0880: jne loc_4A0895;");
    asm("loc_4A0882: pop %edi;");
    asm("loc_4A0883: pop %esi;");
    asm("loc_4A0884: pop %ebp;");
    asm("loc_4A0885: xor %al,%al;");
    asm("loc_4A0887: pop %ebx;");
    asm("loc_4A0888: add $0x12C,%esp;");
    asm("loc_4A088E: ret $0xC;");
    asm("loc_4A0891: mov 0x14(%esp),%edi;");
    asm("loc_4A0895: movzwl 8(%edi),%eax;");
    asm("loc_4A0899: cmp $0x42,%eax;");
    asm("loc_4A089C: je loc_4A08C6;");
    asm("loc_4A089E: cmp $0x4E,%eax;");
    asm("loc_4A08A1: je loc_4A099A;");
    asm("loc_4A08A7: cmp $0x53,%eax;");
    asm("loc_4A08AA: jne loc_4A097D;");
    asm("loc_4A08B0: mov 4(%edi),%eax;");
    asm("loc_4A08B3: mov 0x148(%esp),%ecx;");
    asm("loc_4A08BA: movb $1,0x13(%esp);");
    asm("loc_4A08BF: mov %eax,(%ecx);");
    asm("loc_4A08C1: jmp loc_4A097D;");
    asm("loc_4A08C6: mov 4(%edi),%edx;");
    asm("loc_4A08C9: mov %edx,0x20(%esp);");
    asm("loc_4A08CD: calll *_import_5C63EC;");
    asm("loc_4A08D3: mov %eax,%esi;");
    asm("loc_4A08D5: cmp %bl,0x13(%esp);");
    asm("loc_4A08D9: je loc_4A08F0;");
    asm("loc_4A08DB: mov 0x148(%esp),%eax;");
    asm("loc_4A08E2: mov (%eax),%ecx;");
    asm("loc_4A08E4: push %ecx;");
    asm("loc_4A08E5: calll *_import_5C6094;");
    asm("loc_4A08EB: add $4,%esp;");
    asm("loc_4A08EE: mov %eax,%esi;");
    asm("loc_4A08F0: cmp %ebx,%esi;");
    asm("loc_4A08F2: je loc_4A097D;");
    asm("loc_4A08F8: mov (%esi),%edx;");
    asm("loc_4A08FA: mov %esi,%ecx;");
    asm("loc_4A08FC: mov %ebx,0x24(%esp);");
    asm("loc_4A0900: mov %bl,0x28(%esp);");
    asm("loc_4A0904: mov %ebx,0x80(%esp);");
    asm("loc_4A090B: mov %bl,0x84(%esp);");
    asm("loc_4A0912: mov %ebx,0xB0(%esp);");
    asm("loc_4A0919: mov %bl,0xB4(%esp);");
    asm("loc_4A0920: mov %ebx,0xF4(%esp);");
    asm("loc_4A0927: mov %bl,0xF8(%esp);");
    asm("loc_4A092E: calll *0x3C(%edx);");
    asm("loc_4A0931: mov %eax,%ebp;");
    asm("loc_4A0933: xor %edi,%edi;");
    asm("loc_4A0935: cmp %ebx,%ebp;");
    asm("loc_4A0937: jbe loc_4A0969;");
    asm("loc_4A0939: lea (%esp),%esp;");
    asm("loc_4A0940: mov (%esi),%eax;");
    asm("loc_4A0942: lea 0x24(%esp),%ecx;");
    asm("loc_4A0946: push %ecx;");
    asm("loc_4A0947: push %edi;");
    asm("loc_4A0948: mov %esi,%ecx;");
    asm("loc_4A094A: calll *0x40(%eax);");
    asm("loc_4A094D: test %al,%al;");
    asm("loc_4A094F: je loc_4A0962;");
    asm("loc_4A0951: mov 0x20(%esp),%edx;");
    asm("loc_4A0955: cmp %edx,0xA4(%esp);");
    asm("loc_4A095C: je loc_4A09FB;");
    asm("loc_4A0962: inc %edi;");
    asm("loc_4A0963: cmp %ebp,%edi;");
    asm("loc_4A0965: jb loc_4A0940;");
    asm("loc_4A0967: xor %ebx,%ebx;");
    asm("loc_4A0969: calll *_import_5C63E8;");
    asm("loc_4A096F: mov %eax,%esi;");
    asm("loc_4A0971: cmp %ebx,%esi;");
    asm("loc_4A0973: jne loc_4A08F8;");
    asm("loc_4A0975: mov 0x14(%esp),%edi;");
    asm("loc_4A0979: mov 0x18(%esp),%ebp;");
    asm("loc_4A097D: mov (%edi),%edi;");
    asm("loc_4A097F: cmp %ebx,%edi;");
    asm("loc_4A0981: mov %edi,0x14(%esp);");
    asm("loc_4A0985: jne loc_4A0891;");
    asm("loc_4A098B: pop %edi;");
    asm("loc_4A098C: pop %esi;");
    asm("loc_4A098D: pop %ebp;");
    asm("loc_4A098E: xor %al,%al;");
    asm("loc_4A0990: pop %ebx;");
    asm("loc_4A0991: add $0x12C,%esp;");
    asm("loc_4A0997: ret $0xC;");
    asm("loc_4A099A: mov 4(%edi),%edi;");
    asm("loc_4A099D: mov (%edi),%eax;");
    asm("loc_4A099F: mov 0x148(%esp),%ecx;");
    asm("loc_4A09A6: mov 0x144(%esp),%esi;");
    asm("loc_4A09AD: mov %eax,(%ecx);");
    asm("loc_4A09AF: lea 8(%edi),%eax;");
    asm("loc_4A09B2: mov %eax,%edx;");
    asm("loc_4A09B4: mov (%edx),%edi;");
    asm("loc_4A09B6: mov %edi,(%esi);");
    asm("loc_4A09B8: mov 4(%edx),%edi;");
    asm("loc_4A09BB: mov %edi,4(%esi);");
    asm("loc_4A09BE: mov 8(%edx),%edx;");
    asm("loc_4A09C1: mov %edx,8(%esi);");
    asm("loc_4A09C4: mov (%eax),%esi;");
    asm("loc_4A09C6: lea 0xBA0(%ebp),%edx;");
    asm("loc_4A09CC: mov %esi,(%edx);");
    asm("loc_4A09CE: mov 4(%eax),%esi;");
    asm("loc_4A09D1: mov %esi,4(%edx);");
    asm("loc_4A09D4: mov 8(%eax),%eax;");
    asm("loc_4A09D7: mov %eax,8(%edx);");
    asm("loc_4A09DA: mov (%ecx),%ecx;");
    asm("loc_4A09DC: mov 0x1C(%esp),%edx;");
    asm("loc_4A09E0: pop %edi;");
    asm("loc_4A09E1: pop %esi;");
    asm("loc_4A09E2: mov %ecx,0xBAC(%ebp);");
    asm("loc_4A09E8: mov %edx,0xB9C(%ebp);");
    asm("loc_4A09EE: pop %ebp;");
    asm("loc_4A09EF: mov $1,%al;");
    asm("loc_4A09F1: pop %ebx;");
    asm("loc_4A09F2: add $0x12C,%esp;");
    asm("loc_4A09F8: ret $0xC;");
    asm("loc_4A09FB: mov 0x144(%esp),%edi;");
    asm("loc_4A0A02: mov 0x68(%esp),%ecx;");
    asm("loc_4A0A06: mov 0x6C(%esp),%edx;");
    asm("loc_4A0A0A: mov %edi,%eax;");
    asm("loc_4A0A0C: mov %ecx,(%eax);");
    asm("loc_4A0A0E: mov 0x70(%esp),%ecx;");
    asm("loc_4A0A12: mov %edx,4(%eax);");
    asm("loc_4A0A15: mov %ecx,8(%eax);");
    asm("loc_4A0A18: mov (%esi),%edx;");
    asm("loc_4A0A1A: mov %esi,%ecx;");
    asm("loc_4A0A1C: calll *(%edx);");
    asm("loc_4A0A1E: mov 0x148(%esp),%ecx;");
    asm("loc_4A0A25: mov %eax,(%ecx);");
    asm("loc_4A0A27: mov (%edi),%esi;");
    asm("loc_4A0A29: mov 0x18(%esp),%eax;");
    asm("loc_4A0A2D: lea 0xBA0(%eax),%edx;");
    asm("loc_4A0A33: mov %esi,(%edx);");
    asm("loc_4A0A35: mov 4(%edi),%esi;");
    asm("loc_4A0A38: mov %esi,4(%edx);");
    asm("loc_4A0A3B: mov 8(%edi),%esi;");
    asm("loc_4A0A3E: pop %edi;");
    asm("loc_4A0A3F: mov %esi,8(%edx);");
    asm("loc_4A0A42: mov (%ecx),%ecx;");
    asm("loc_4A0A44: mov 0x18(%esp),%edx;");
    asm("loc_4A0A48: pop %esi;");
    asm("loc_4A0A49: pop %ebp;");
    asm("loc_4A0A4A: mov %ecx,0xBAC(%eax);");
    asm("loc_4A0A50: mov %edx,0xB9C(%eax);");
    asm("loc_4A0A56: mov $1,%al;");
    asm("loc_4A0A58: pop %ebx;");
    asm("loc_4A0A59: add $0x12C,%esp;");
    asm("loc_4A0A5F: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A0A70() // _sub_4A0A70
{
    __DEBUG_ASM(4A0A70);
    // chunk 0x4A0A70 _sub_4A0A70
    asm("loc_4A0A70: sub $0x18,%esp;");
    asm("loc_4A0A73: push %ebx;");
    asm("loc_4A0A74: mov 0x20(%esp),%bl;");
    asm("loc_4A0A78: push %esi;");
    asm("loc_4A0A79: mov %ecx,%esi;");
    asm("loc_4A0A7B: cmp 0xBC0(%esi),%bl;");
    asm("loc_4A0A81: push %edi;");
    asm("loc_4A0A82: je loc_4A1609;");
    asm("loc_4A0A88: push $5;");
    asm("loc_4A0A8A: call _sub_5645C0;");
    asm("loc_4A0A8F: add $4,%esp;");
    asm("loc_4A0A92: lea 0x330(%esi),%edi;");
    asm("loc_4A0A98: push $0x3ECCCCCD;");
    asm("loc_4A0A9D: mov %edi,%ecx;");
    asm("loc_4A0A9F: call _sub_55E120;");
    asm("loc_4A0AA4: test %bl,%bl;");
    asm("loc_4A0AA6: mov 0xBBC(%esi),%edx;");
    asm("loc_4A0AAC: mov %bl,0xBC0(%esi);");
    asm("loc_4A0AB2: movl $0xBE6147AE,0x20(%esp);");
    asm("loc_4A0ABA: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A0AC2: movl $0x3F85C28F,0x18(%esp);");
    asm("loc_4A0ACA: movl $0xBE6147AE,0x14(%esp);");
    asm("loc_4A0AD2: movl $0xBE6B851F,0x10(%esp);");
    asm("loc_4A0ADA: movl $0x3F283127,0xC(%esp);");
    asm("loc_4A0AE2: je loc_4A105F;");
    asm("loc_4A0AE8: lea 0xC(%esp),%eax;");
    asm("loc_4A0AEC: push %eax;");
    asm("loc_4A0AED: lea 0x1C(%esp),%ecx;");
    asm("loc_4A0AF1: push %ecx;");
    asm("loc_4A0AF2: push %edx;");
    asm("loc_4A0AF3: mov %edi,%ecx;");
    asm("loc_4A0AF5: call _sub_55DEE0;");
    asm("loc_4A0AFA: mov 0xBB8(%esi),%edx;");
    asm("loc_4A0B00: lea 0x18(%esp),%eax;");
    asm("loc_4A0B04: push %eax;");
    asm("loc_4A0B05: lea 0x10(%esp),%ecx;");
    asm("loc_4A0B09: push %ecx;");
    asm("loc_4A0B0A: push %edx;");
    asm("loc_4A0B0B: mov %edi,%ecx;");
    asm("loc_4A0B0D: movl $0x3F15C28F,0x24(%esp);");
    asm("loc_4A0B15: movl $0xBE6B851F,0x28(%esp);");
    asm("loc_4A0B1D: movl $0xBE6147AE,0x2C(%esp);");
    asm("loc_4A0B25: movl $0x3E428F5C,0x18(%esp);");
    asm("loc_4A0B2D: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A0B35: movl $0xBE6147AE,0x20(%esp);");
    asm("loc_4A0B3D: call _sub_55DEE0;");
    asm("loc_4A0B42: flds _data_5D2ED8;");
    asm("loc_4A0B48: fsubs _data_5D33DC;");
    asm("loc_4A0B4E: mov 0x8FC(%esi),%edx;");
    asm("loc_4A0B54: lea 0x18(%esp),%eax;");
    asm("loc_4A0B58: push %eax;");
    asm("loc_4A0B59: lea 0x10(%esp),%ecx;");
    asm("loc_4A0B5D: push %ecx;");
    asm("loc_4A0B5E: fstps 0x14(%esp);");
    asm("loc_4A0B62: push %edx;");
    asm("loc_4A0B63: mov %edi,%ecx;");
    asm("loc_4A0B65: movl $0xBF041893,0x24(%esp);");
    asm("loc_4A0B6D: movl $0xBE72B021,0x28(%esp);");
    asm("loc_4A0B75: movl $0,0x2C(%esp);");
    asm("loc_4A0B7D: movl $0xBE72B021,0x1C(%esp);");
    asm("loc_4A0B85: movl $0,0x20(%esp);");
    asm("loc_4A0B8D: call _sub_55DEE0;");
    asm("loc_4A0B92: flds _data_5D2ED8;");
    asm("loc_4A0B98: fsubs _data_5D33B8;");
    asm("loc_4A0B9E: mov 0x900(%esi),%edx;");
    asm("loc_4A0BA4: lea 0x18(%esp),%eax;");
    asm("loc_4A0BA8: push %eax;");
    asm("loc_4A0BA9: lea 0x10(%esp),%ecx;");
    asm("loc_4A0BAD: push %ecx;");
    asm("loc_4A0BAE: fstps 0x14(%esp);");
    asm("loc_4A0BB2: push %edx;");
    asm("loc_4A0BB3: mov %edi,%ecx;");
    asm("loc_4A0BB5: movl $0xBF28B439,0x24(%esp);");
    asm("loc_4A0BBD: movl $0xBE560419,0x28(%esp);");
    asm("loc_4A0BC5: movl $0,0x2C(%esp);");
    asm("loc_4A0BCD: movl $0xBE560419,0x1C(%esp);");
    asm("loc_4A0BD5: movl $0,0x20(%esp);");
    asm("loc_4A0BDD: call _sub_55DEE0;");
    asm("loc_4A0BE2: flds _data_5D2ED4;");
    asm("loc_4A0BE8: fadds _data_5D3410;");
    asm("loc_4A0BEE: mov 0x8F4(%esi),%edx;");
    asm("loc_4A0BF4: lea 0x18(%esp),%eax;");
    asm("loc_4A0BF8: push %eax;");
    asm("loc_4A0BF9: lea 0x10(%esp),%ecx;");
    asm("loc_4A0BFD: push %ecx;");
    asm("loc_4A0BFE: fstps 0x14(%esp);");
    asm("loc_4A0C02: push %edx;");
    asm("loc_4A0C03: mov %edi,%ecx;");
    asm("loc_4A0C05: movl $0x3F65A1CB,0x24(%esp);");
    asm("loc_4A0C0D: movl $0xBD75C28F,0x28(%esp);");
    asm("loc_4A0C15: movl $0,0x2C(%esp);");
    asm("loc_4A0C1D: movl $0xBD75C28F,0x1C(%esp);");
    asm("loc_4A0C25: movl $0,0x20(%esp);");
    asm("loc_4A0C2D: call _sub_55DEE0;");
    asm("loc_4A0C32: flds _data_5D2ED4;");
    asm("loc_4A0C38: fadds _data_5D2AC0;");
    asm("loc_4A0C3E: movl $0x3EA76C8C,0x18(%esp);");
    asm("loc_4A0C46: movl $0x3E83126F,0x1C(%esp);");
    asm("loc_4A0C4E: movl $0,0x20(%esp);");
    asm("loc_4A0C56: fstps 0xC(%esp);");
    asm("loc_4A0C5A: movl $0x3E83126F,0x10(%esp);");
    asm("loc_4A0C62: movl $0,0x14(%esp);");
    asm("loc_4A0C6A: mov 0x8F0(%esi),%edx;");
    asm("loc_4A0C70: lea 0x18(%esp),%eax;");
    asm("loc_4A0C74: push %eax;");
    asm("loc_4A0C75: lea 0x10(%esp),%ecx;");
    asm("loc_4A0C79: push %ecx;");
    asm("loc_4A0C7A: push %edx;");
    asm("loc_4A0C7B: mov %edi,%ecx;");
    asm("loc_4A0C7D: call _sub_55DEE0;");
    asm("loc_4A0C82: flds _data_5D2ED4;");
    asm("loc_4A0C88: fadds _data_5D3398;");
    asm("loc_4A0C8E: mov 0x904(%esi),%edx;");
    asm("loc_4A0C94: lea 0x18(%esp),%eax;");
    asm("loc_4A0C98: push %eax;");
    asm("loc_4A0C99: lea 0x10(%esp),%ecx;");
    asm("loc_4A0C9D: push %ecx;");
    asm("loc_4A0C9E: fstps 0x14(%esp);");
    asm("loc_4A0CA2: push %edx;");
    asm("loc_4A0CA3: mov %edi,%ecx;");
    asm("loc_4A0CA5: movl $0x3EFE76C8,0x24(%esp);");
    asm("loc_4A0CAD: movl $0xBE6B851F,0x28(%esp);");
    asm("loc_4A0CB5: movl $0,0x2C(%esp);");
    asm("loc_4A0CBD: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A0CC5: movl $0,0x20(%esp);");
    asm("loc_4A0CCD: call _sub_55DEE0;");
    asm("loc_4A0CD2: flds _data_5D2ED4;");
    asm("loc_4A0CD8: fadds _data_5D3378;");
    asm("loc_4A0CDE: mov 0x908(%esi),%edx;");
    asm("loc_4A0CE4: lea 0x18(%esp),%eax;");
    asm("loc_4A0CE8: push %eax;");
    asm("loc_4A0CE9: lea 0x10(%esp),%ecx;");
    asm("loc_4A0CED: push %ecx;");
    asm("loc_4A0CEE: fstps 0x14(%esp);");
    asm("loc_4A0CF2: push %edx;");
    asm("loc_4A0CF3: mov %edi,%ecx;");
    asm("loc_4A0CF5: movl $0x3EBA5E36,0x24(%esp);");
    asm("loc_4A0CFD: movl $0xBE52F1AA,0x28(%esp);");
    asm("loc_4A0D05: movl $0,0x2C(%esp);");
    asm("loc_4A0D0D: movl $0xBE52F1AA,0x1C(%esp);");
    asm("loc_4A0D15: movl $0,0x20(%esp);");
    asm("loc_4A0D1D: call _sub_55DEE0;");
    asm("loc_4A0D22: flds _data_5D2ED4;");
    asm("loc_4A0D28: fadds _data_5D335C;");
    asm("loc_4A0D2E: mov 0xAC0(%esi),%edx;");
    asm("loc_4A0D34: lea 0x18(%esp),%eax;");
    asm("loc_4A0D38: push %eax;");
    asm("loc_4A0D39: lea 0x10(%esp),%ecx;");
    asm("loc_4A0D3D: push %ecx;");
    asm("loc_4A0D3E: fstps 0x14(%esp);");
    asm("loc_4A0D42: push %edx;");
    asm("loc_4A0D43: mov %edi,%ecx;");
    asm("loc_4A0D45: movl $0x3ED3F7CF,0x24(%esp);");
    asm("loc_4A0D4D: movl $0xBE6B851F,0x28(%esp);");
    asm("loc_4A0D55: movl $0,0x2C(%esp);");
    asm("loc_4A0D5D: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A0D65: movl $0,0x20(%esp);");
    asm("loc_4A0D6D: call _sub_55DEE0;");
    asm("loc_4A0D72: flds _data_5D2ED4;");
    asm("loc_4A0D78: fadds _data_5D3340;");
    asm("loc_4A0D7E: mov 0xAC4(%esi),%edx;");
    asm("loc_4A0D84: lea 0x18(%esp),%eax;");
    asm("loc_4A0D88: push %eax;");
    asm("loc_4A0D89: lea 0x10(%esp),%ecx;");
    asm("loc_4A0D8D: push %ecx;");
    asm("loc_4A0D8E: fstps 0x14(%esp);");
    asm("loc_4A0D92: push %edx;");
    asm("loc_4A0D93: mov %edi,%ecx;");
    asm("loc_4A0D95: movl $0x3EB22D0F,0x24(%esp);");
    asm("loc_4A0D9D: movl $0xBE52F1AA,0x28(%esp);");
    asm("loc_4A0DA5: movl $0,0x2C(%esp);");
    asm("loc_4A0DAD: movl $0xBE52F1AA,0x1C(%esp);");
    asm("loc_4A0DB5: movl $0,0x20(%esp);");
    asm("loc_4A0DBD: call _sub_55DEE0;");
    asm("loc_4A0DC2: flds _data_5D2ED4;");
    asm("loc_4A0DC8: fadds _data_5D3328;");
    asm("loc_4A0DCE: movl $0x3F158106,0x18(%esp);");
    asm("loc_4A0DD6: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A0DDE: movl $0,0x20(%esp);");
    asm("loc_4A0DE6: mov 0xAC8(%esi),%edx;");
    asm("loc_4A0DEC: lea 0x18(%esp),%eax;");
    asm("loc_4A0DF0: push %eax;");
    asm("loc_4A0DF1: lea 0x10(%esp),%ecx;");
    asm("loc_4A0DF5: push %ecx;");
    asm("loc_4A0DF6: fstps 0x14(%esp);");
    asm("loc_4A0DFA: push %edx;");
    asm("loc_4A0DFB: mov %edi,%ecx;");
    asm("loc_4A0DFD: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A0E05: movl $0,0x20(%esp);");
    asm("loc_4A0E0D: call _sub_55DEE0;");
    asm("loc_4A0E12: flds _data_5D2ED4;");
    asm("loc_4A0E18: fadds _data_5D3310;");
    asm("loc_4A0E1E: mov 0xACC(%esi),%edx;");
    asm("loc_4A0E24: lea 0x18(%esp),%eax;");
    asm("loc_4A0E28: push %eax;");
    asm("loc_4A0E29: lea 0x10(%esp),%ecx;");
    asm("loc_4A0E2D: push %ecx;");
    asm("loc_4A0E2E: fstps 0x14(%esp);");
    asm("loc_4A0E32: push %edx;");
    asm("loc_4A0E33: mov %edi,%ecx;");
    asm("loc_4A0E35: movl $0x3F045A1D,0x24(%esp);");
    asm("loc_4A0E3D: movl $0xBE52F1AA,0x28(%esp);");
    asm("loc_4A0E45: movl $0,0x2C(%esp);");
    asm("loc_4A0E4D: movl $0xBE52F1AA,0x1C(%esp);");
    asm("loc_4A0E55: movl $0,0x20(%esp);");
    asm("loc_4A0E5D: call _sub_55DEE0;");
    asm("loc_4A0E62: flds _data_5D2ED8;");
    asm("loc_4A0E68: fsubs _data_5D32AC;");
    asm("loc_4A0E6E: mov 0xAD4(%esi),%edx;");
    asm("loc_4A0E74: lea 0x18(%esp),%eax;");
    asm("loc_4A0E78: push %eax;");
    asm("loc_4A0E79: lea 0x10(%esp),%ecx;");
    asm("loc_4A0E7D: push %ecx;");
    asm("loc_4A0E7E: fstps 0x14(%esp);");
    asm("loc_4A0E82: push %edx;");
    asm("loc_4A0E83: mov %edi,%ecx;");
    asm("loc_4A0E85: movl $0xBF045A1D,0x24(%esp);");
    asm("loc_4A0E8D: movl $0x3E395810,0x28(%esp);");
    asm("loc_4A0E95: movl $0,0x2C(%esp);");
    asm("loc_4A0E9D: movl $0x3E395810,0x1C(%esp);");
    asm("loc_4A0EA5: movl $0,0x20(%esp);");
    asm("loc_4A0EAD: call _sub_55DEE0;");
    asm("loc_4A0EB2: flds _data_5D2ED8;");
    asm("loc_4A0EB8: fsubs _data_5D32AC;");
    asm("loc_4A0EBE: mov 0xAD8(%esi),%edx;");
    asm("loc_4A0EC4: lea 0x18(%esp),%eax;");
    asm("loc_4A0EC8: push %eax;");
    asm("loc_4A0EC9: lea 0x10(%esp),%ecx;");
    asm("loc_4A0ECD: push %ecx;");
    asm("loc_4A0ECE: fstps 0x14(%esp);");
    asm("loc_4A0ED2: push %edx;");
    asm("loc_4A0ED3: mov %edi,%ecx;");
    asm("loc_4A0ED5: movl $0xBF045A1D,0x24(%esp);");
    asm("loc_4A0EDD: movl $0x3D3C6A7F,0x28(%esp);");
    asm("loc_4A0EE5: movl $0,0x2C(%esp);");
    asm("loc_4A0EED: movl $0x3D3C6A7F,0x1C(%esp);");
    asm("loc_4A0EF5: movl $0,0x20(%esp);");
    asm("loc_4A0EFD: call _sub_55DEE0;");
    asm("loc_4A0F02: flds _data_5D2ED8;");
    asm("loc_4A0F08: fsubs _data_5D32AC;");
    asm("loc_4A0F0E: mov 0xADC(%esi),%edx;");
    asm("loc_4A0F14: lea 0x18(%esp),%eax;");
    asm("loc_4A0F18: push %eax;");
    asm("loc_4A0F19: lea 0x10(%esp),%ecx;");
    asm("loc_4A0F1D: push %ecx;");
    asm("loc_4A0F1E: fstps 0x14(%esp);");
    asm("loc_4A0F22: push %edx;");
    asm("loc_4A0F23: mov %edi,%ecx;");
    asm("loc_4A0F25: movl $0xBF045A1D,0x24(%esp);");
    asm("loc_4A0F2D: movl $0xBDB645A2,0x28(%esp);");
    asm("loc_4A0F35: movl $0,0x2C(%esp);");
    asm("loc_4A0F3D: movl $0xBDB645A2,0x1C(%esp);");
    asm("loc_4A0F45: movl $0,0x20(%esp);");
    asm("loc_4A0F4D: call _sub_55DEE0;");
    asm("loc_4A0F52: movl $0x3EA6F694,0x18(%esp);");
    asm("loc_4A0F5A: flds _data_5D2ED8;");
    asm("loc_4A0F60: mov 0xAE0(%esi),%edx;");
    asm("loc_4A0F66: fadds _data_5D3260;");
    asm("loc_4A0F6C: lea 0x18(%esp),%eax;");
    asm("loc_4A0F70: push %eax;");
    asm("loc_4A0F71: lea 0x10(%esp),%ecx;");
    asm("loc_4A0F75: push %ecx;");
    asm("loc_4A0F76: fstps 0x14(%esp);");
    asm("loc_4A0F7A: push %edx;");
    asm("loc_4A0F7B: mov %edi,%ecx;");
    asm("loc_4A0F7D: movl $0xBD6D9168,0x28(%esp);");
    asm("loc_4A0F85: movl $0,0x2C(%esp);");
    asm("loc_4A0F8D: movl $0xBD6D9168,0x1C(%esp);");
    asm("loc_4A0F95: movl $0,0x20(%esp);");
    asm("loc_4A0F9D: call _sub_55DEE0;");
    asm("loc_4A0FA2: flds _data_5D2ED8;");
    asm("loc_4A0FA8: fsubs _data_5D323C;");
    asm("loc_4A0FAE: mov 0xAE4(%esi),%edx;");
    asm("loc_4A0FB4: lea 0x18(%esp),%eax;");
    asm("loc_4A0FB8: push %eax;");
    asm("loc_4A0FB9: lea 0x10(%esp),%ecx;");
    asm("loc_4A0FBD: push %ecx;");
    asm("loc_4A0FBE: fstps 0x14(%esp);");
    asm("loc_4A0FC2: push %edx;");
    asm("loc_4A0FC3: mov %edi,%ecx;");
    asm("loc_4A0FC5: movl $0xBF27EF9E,0x24(%esp);");
    asm("loc_4A0FCD: movl $0x3E808313,0x28(%esp);");
    asm("loc_4A0FD5: movl $0,0x2C(%esp);");
    asm("loc_4A0FDD: movl $0x3E808313,0x1C(%esp);");
    asm("loc_4A0FE5: movl $0,0x20(%esp);");
    asm("loc_4A0FED: call _sub_55DEE0;");
    asm("loc_4A0FF2: flds _data_5D2ED8;");
    asm("loc_4A0FF8: fsubs _data_5D323C;");
    asm("loc_4A0FFE: mov 0xAE8(%esi),%edx;");
    asm("loc_4A1004: lea 0x18(%esp),%eax;");
    asm("loc_4A1008: push %eax;");
    asm("loc_4A1009: lea 0x10(%esp),%ecx;");
    asm("loc_4A100D: push %ecx;");
    asm("loc_4A100E: fstps 0x14(%esp);");
    asm("loc_4A1012: push %edx;");
    asm("loc_4A1013: mov %edi,%ecx;");
    asm("loc_4A1015: movl $0xBF27EF9E,0x24(%esp);");
    asm("loc_4A101D: movl $0x3DED9168,0x28(%esp);");
    asm("loc_4A1025: movl $0,0x2C(%esp);");
    asm("loc_4A102D: movl $0x3DED9168,0x1C(%esp);");
    asm("loc_4A1035: movl $0,0x20(%esp);");
    asm("loc_4A103D: call _sub_55DEE0;");
    asm("loc_4A1042: flds _data_5D2ED8;");
    asm("loc_4A1048: fsubs _data_5D323C;");
    asm("loc_4A104E: movl $0xBF27EF9E,0x18(%esp);");
    asm("loc_4A1056: fstps 0xC(%esp);");
    asm("loc_4A105A: jmp loc_4A15D1;");
    asm("loc_4A105F: lea 0x18(%esp),%eax;");
    asm("loc_4A1063: push %eax;");
    asm("loc_4A1064: lea 0x10(%esp),%ecx;");
    asm("loc_4A1068: push %ecx;");
    asm("loc_4A1069: push %edx;");
    asm("loc_4A106A: mov %edi,%ecx;");
    asm("loc_4A106C: call _sub_55DEE0;");
    asm("loc_4A1071: mov 0xBB8(%esi),%edx;");
    asm("loc_4A1077: lea 0x18(%esp),%eax;");
    asm("loc_4A107B: push %eax;");
    asm("loc_4A107C: lea 0x10(%esp),%ecx;");
    asm("loc_4A1080: push %ecx;");
    asm("loc_4A1081: push %edx;");
    asm("loc_4A1082: mov %edi,%ecx;");
    asm("loc_4A1084: movl $0x3E428F5C,0x24(%esp);");
    asm("loc_4A108C: movl $0xBE6B851F,0x28(%esp);");
    asm("loc_4A1094: movl $0xBE6147AE,0x2C(%esp);");
    asm("loc_4A109C: movl $0x3F15C28F,0x18(%esp);");
    asm("loc_4A10A4: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A10AC: movl $0xBE6147AE,0x20(%esp);");
    asm("loc_4A10B4: call _sub_55DEE0;");
    asm("loc_4A10B9: flds _data_5D2ED8;");
    asm("loc_4A10BF: fsubs _data_5D33DC;");
    asm("loc_4A10C5: mov 0x8FC(%esi),%edx;");
    asm("loc_4A10CB: lea 0x18(%esp),%eax;");
    asm("loc_4A10CF: push %eax;");
    asm("loc_4A10D0: lea 0x10(%esp),%ecx;");
    asm("loc_4A10D4: push %ecx;");
    asm("loc_4A10D5: fstps 0x20(%esp);");
    asm("loc_4A10D9: push %edx;");
    asm("loc_4A10DA: mov %edi,%ecx;");
    asm("loc_4A10DC: movl $0xBE72B021,0x28(%esp);");
    asm("loc_4A10E4: movl $0,0x2C(%esp);");
    asm("loc_4A10EC: movl $0xBF041893,0x18(%esp);");
    asm("loc_4A10F4: movl $0xBE72B021,0x1C(%esp);");
    asm("loc_4A10FC: movl $0,0x20(%esp);");
    asm("loc_4A1104: call _sub_55DEE0;");
    asm("loc_4A1109: flds _data_5D2ED8;");
    asm("loc_4A110F: fsubs _data_5D33B8;");
    asm("loc_4A1115: mov 0x900(%esi),%edx;");
    asm("loc_4A111B: lea 0x18(%esp),%eax;");
    asm("loc_4A111F: push %eax;");
    asm("loc_4A1120: lea 0x10(%esp),%ecx;");
    asm("loc_4A1124: push %ecx;");
    asm("loc_4A1125: fstps 0x20(%esp);");
    asm("loc_4A1129: push %edx;");
    asm("loc_4A112A: mov %edi,%ecx;");
    asm("loc_4A112C: movl $0xBE560419,0x28(%esp);");
    asm("loc_4A1134: movl $0,0x2C(%esp);");
    asm("loc_4A113C: movl $0xBF28B439,0x18(%esp);");
    asm("loc_4A1144: movl $0xBE560419,0x1C(%esp);");
    asm("loc_4A114C: movl $0,0x20(%esp);");
    asm("loc_4A1154: call _sub_55DEE0;");
    asm("loc_4A1159: flds _data_5D2ED4;");
    asm("loc_4A115F: fadds _data_5D3410;");
    asm("loc_4A1165: mov 0x8F4(%esi),%edx;");
    asm("loc_4A116B: lea 0x18(%esp),%eax;");
    asm("loc_4A116F: push %eax;");
    asm("loc_4A1170: lea 0x10(%esp),%ecx;");
    asm("loc_4A1174: push %ecx;");
    asm("loc_4A1175: fstps 0x20(%esp);");
    asm("loc_4A1179: push %edx;");
    asm("loc_4A117A: mov %edi,%ecx;");
    asm("loc_4A117C: movl $0xBD75C28F,0x28(%esp);");
    asm("loc_4A1184: movl $0,0x2C(%esp);");
    asm("loc_4A118C: movl $0x3F65A1CB,0x18(%esp);");
    asm("loc_4A1194: movl $0xBD75C28F,0x1C(%esp);");
    asm("loc_4A119C: movl $0,0x20(%esp);");
    asm("loc_4A11A4: call _sub_55DEE0;");
    asm("loc_4A11A9: flds _data_5D2ED4;");
    asm("loc_4A11AF: fadds _data_5D2AC0;");
    asm("loc_4A11B5: movl $0x3E83126F,0x1C(%esp);");
    asm("loc_4A11BD: movl $0,0x20(%esp);");
    asm("loc_4A11C5: movl $0x3EA76C8C,0xC(%esp);");
    asm("loc_4A11CD: fstps 0x18(%esp);");
    asm("loc_4A11D1: movl $0x3E83126F,0x10(%esp);");
    asm("loc_4A11D9: movl $0,0x14(%esp);");
    asm("loc_4A11E1: mov 0x8F0(%esi),%edx;");
    asm("loc_4A11E7: lea 0x18(%esp),%eax;");
    asm("loc_4A11EB: push %eax;");
    asm("loc_4A11EC: lea 0x10(%esp),%ecx;");
    asm("loc_4A11F0: push %ecx;");
    asm("loc_4A11F1: push %edx;");
    asm("loc_4A11F2: mov %edi,%ecx;");
    asm("loc_4A11F4: call _sub_55DEE0;");
    asm("loc_4A11F9: flds _data_5D2ED4;");
    asm("loc_4A11FF: fadds _data_5D3398;");
    asm("loc_4A1205: mov 0x904(%esi),%edx;");
    asm("loc_4A120B: lea 0x18(%esp),%eax;");
    asm("loc_4A120F: push %eax;");
    asm("loc_4A1210: lea 0x10(%esp),%ecx;");
    asm("loc_4A1214: push %ecx;");
    asm("loc_4A1215: fstps 0x20(%esp);");
    asm("loc_4A1219: push %edx;");
    asm("loc_4A121A: mov %edi,%ecx;");
    asm("loc_4A121C: movl $0xBE6B851F,0x28(%esp);");
    asm("loc_4A1224: movl $0,0x2C(%esp);");
    asm("loc_4A122C: movl $0x3EFE76C8,0x18(%esp);");
    asm("loc_4A1234: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A123C: movl $0,0x20(%esp);");
    asm("loc_4A1244: call _sub_55DEE0;");
    asm("loc_4A1249: flds _data_5D2ED4;");
    asm("loc_4A124F: fadds _data_5D3378;");
    asm("loc_4A1255: mov 0x908(%esi),%edx;");
    asm("loc_4A125B: lea 0x18(%esp),%eax;");
    asm("loc_4A125F: push %eax;");
    asm("loc_4A1260: lea 0x10(%esp),%ecx;");
    asm("loc_4A1264: push %ecx;");
    asm("loc_4A1265: fstps 0x20(%esp);");
    asm("loc_4A1269: push %edx;");
    asm("loc_4A126A: mov %edi,%ecx;");
    asm("loc_4A126C: movl $0xBE52F1AA,0x28(%esp);");
    asm("loc_4A1274: movl $0,0x2C(%esp);");
    asm("loc_4A127C: movl $0x3EBA5E36,0x18(%esp);");
    asm("loc_4A1284: movl $0xBE52F1AA,0x1C(%esp);");
    asm("loc_4A128C: movl $0,0x20(%esp);");
    asm("loc_4A1294: call _sub_55DEE0;");
    asm("loc_4A1299: flds _data_5D2ED4;");
    asm("loc_4A129F: fadds _data_5D335C;");
    asm("loc_4A12A5: mov 0xAC0(%esi),%edx;");
    asm("loc_4A12AB: lea 0x18(%esp),%eax;");
    asm("loc_4A12AF: push %eax;");
    asm("loc_4A12B0: lea 0x10(%esp),%ecx;");
    asm("loc_4A12B4: push %ecx;");
    asm("loc_4A12B5: fstps 0x20(%esp);");
    asm("loc_4A12B9: push %edx;");
    asm("loc_4A12BA: mov %edi,%ecx;");
    asm("loc_4A12BC: movl $0xBE6B851F,0x28(%esp);");
    asm("loc_4A12C4: movl $0,0x2C(%esp);");
    asm("loc_4A12CC: movl $0x3ED3F7CF,0x18(%esp);");
    asm("loc_4A12D4: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A12DC: movl $0,0x20(%esp);");
    asm("loc_4A12E4: call _sub_55DEE0;");
    asm("loc_4A12E9: flds _data_5D2ED4;");
    asm("loc_4A12EF: fadds _data_5D3340;");
    asm("loc_4A12F5: mov 0xAC4(%esi),%edx;");
    asm("loc_4A12FB: lea 0x18(%esp),%eax;");
    asm("loc_4A12FF: push %eax;");
    asm("loc_4A1300: lea 0x10(%esp),%ecx;");
    asm("loc_4A1304: push %ecx;");
    asm("loc_4A1305: fstps 0x20(%esp);");
    asm("loc_4A1309: push %edx;");
    asm("loc_4A130A: mov %edi,%ecx;");
    asm("loc_4A130C: movl $0xBE52F1AA,0x28(%esp);");
    asm("loc_4A1314: movl $0,0x2C(%esp);");
    asm("loc_4A131C: movl $0x3EB22D0F,0x18(%esp);");
    asm("loc_4A1324: movl $0xBE52F1AA,0x1C(%esp);");
    asm("loc_4A132C: movl $0,0x20(%esp);");
    asm("loc_4A1334: call _sub_55DEE0;");
    asm("loc_4A1339: flds _data_5D2ED4;");
    asm("loc_4A133F: fadds _data_5D3328;");
    asm("loc_4A1345: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A134D: fstps 0x18(%esp);");
    asm("loc_4A1351: mov 0xAC8(%esi),%edx;");
    asm("loc_4A1357: lea 0x18(%esp),%eax;");
    asm("loc_4A135B: push %eax;");
    asm("loc_4A135C: lea 0x10(%esp),%ecx;");
    asm("loc_4A1360: push %ecx;");
    asm("loc_4A1361: push %edx;");
    asm("loc_4A1362: mov %edi,%ecx;");
    asm("loc_4A1364: movl $0,0x2C(%esp);");
    asm("loc_4A136C: movl $0x3F158106,0x18(%esp);");
    asm("loc_4A1374: movl $0xBE6B851F,0x1C(%esp);");
    asm("loc_4A137C: movl $0,0x20(%esp);");
    asm("loc_4A1384: call _sub_55DEE0;");
    asm("loc_4A1389: flds _data_5D2ED4;");
    asm("loc_4A138F: fadds _data_5D3310;");
    asm("loc_4A1395: mov 0xACC(%esi),%edx;");
    asm("loc_4A139B: lea 0x18(%esp),%eax;");
    asm("loc_4A139F: push %eax;");
    asm("loc_4A13A0: lea 0x10(%esp),%ecx;");
    asm("loc_4A13A4: push %ecx;");
    asm("loc_4A13A5: fstps 0x20(%esp);");
    asm("loc_4A13A9: push %edx;");
    asm("loc_4A13AA: mov %edi,%ecx;");
    asm("loc_4A13AC: movl $0xBE52F1AA,0x28(%esp);");
    asm("loc_4A13B4: movl $0,0x2C(%esp);");
    asm("loc_4A13BC: movl $0x3F045A1D,0x18(%esp);");
    asm("loc_4A13C4: movl $0xBE52F1AA,0x1C(%esp);");
    asm("loc_4A13CC: movl $0,0x20(%esp);");
    asm("loc_4A13D4: call _sub_55DEE0;");
    asm("loc_4A13D9: flds _data_5D2ED8;");
    asm("loc_4A13DF: fsubs _data_5D32AC;");
    asm("loc_4A13E5: mov 0xAD4(%esi),%edx;");
    asm("loc_4A13EB: lea 0x18(%esp),%eax;");
    asm("loc_4A13EF: push %eax;");
    asm("loc_4A13F0: lea 0x10(%esp),%ecx;");
    asm("loc_4A13F4: push %ecx;");
    asm("loc_4A13F5: fstps 0x20(%esp);");
    asm("loc_4A13F9: push %edx;");
    asm("loc_4A13FA: mov %edi,%ecx;");
    asm("loc_4A13FC: movl $0x3E395810,0x28(%esp);");
    asm("loc_4A1404: movl $0,0x2C(%esp);");
    asm("loc_4A140C: movl $0xBF045A1D,0x18(%esp);");
    asm("loc_4A1414: movl $0x3E395810,0x1C(%esp);");
    asm("loc_4A141C: movl $0,0x20(%esp);");
    asm("loc_4A1424: call _sub_55DEE0;");
    asm("loc_4A1429: flds _data_5D2ED8;");
    asm("loc_4A142F: fsubs _data_5D32AC;");
    asm("loc_4A1435: mov 0xAD8(%esi),%edx;");
    asm("loc_4A143B: lea 0x18(%esp),%eax;");
    asm("loc_4A143F: push %eax;");
    asm("loc_4A1440: lea 0x10(%esp),%ecx;");
    asm("loc_4A1444: push %ecx;");
    asm("loc_4A1445: fstps 0x20(%esp);");
    asm("loc_4A1449: push %edx;");
    asm("loc_4A144A: mov %edi,%ecx;");
    asm("loc_4A144C: movl $0x3D3C6A7F,0x28(%esp);");
    asm("loc_4A1454: movl $0,0x2C(%esp);");
    asm("loc_4A145C: movl $0xBF045A1D,0x18(%esp);");
    asm("loc_4A1464: movl $0x3D3C6A7F,0x1C(%esp);");
    asm("loc_4A146C: movl $0,0x20(%esp);");
    asm("loc_4A1474: call _sub_55DEE0;");
    asm("loc_4A1479: flds _data_5D2ED8;");
    asm("loc_4A147F: fsubs _data_5D32AC;");
    asm("loc_4A1485: mov 0xADC(%esi),%edx;");
    asm("loc_4A148B: lea 0x18(%esp),%eax;");
    asm("loc_4A148F: push %eax;");
    asm("loc_4A1490: lea 0x10(%esp),%ecx;");
    asm("loc_4A1494: push %ecx;");
    asm("loc_4A1495: fstps 0x20(%esp);");
    asm("loc_4A1499: push %edx;");
    asm("loc_4A149A: mov %edi,%ecx;");
    asm("loc_4A149C: movl $0xBDB645A2,0x28(%esp);");
    asm("loc_4A14A4: movl $0,0x2C(%esp);");
    asm("loc_4A14AC: movl $0xBF045A1D,0x18(%esp);");
    asm("loc_4A14B4: movl $0xBDB645A2,0x1C(%esp);");
    asm("loc_4A14BC: movl $0,0x20(%esp);");
    asm("loc_4A14C4: call _sub_55DEE0;");
    asm("loc_4A14C9: flds _data_5D2ED8;");
    asm("loc_4A14CF: fadds _data_5D3260;");
    asm("loc_4A14D5: mov 0xAE0(%esi),%edx;");
    asm("loc_4A14DB: lea 0x18(%esp),%eax;");
    asm("loc_4A14DF: push %eax;");
    asm("loc_4A14E0: lea 0x10(%esp),%ecx;");
    asm("loc_4A14E4: push %ecx;");
    asm("loc_4A14E5: fstps 0x20(%esp);");
    asm("loc_4A14E9: push %edx;");
    asm("loc_4A14EA: mov %edi,%ecx;");
    asm("loc_4A14EC: movl $0xBD6D9168,0x28(%esp);");
    asm("loc_4A14F4: movl $0,0x2C(%esp);");
    asm("loc_4A14FC: movl $0x3EA6F694,0x18(%esp);");
    asm("loc_4A1504: movl $0xBD6D9168,0x1C(%esp);");
    asm("loc_4A150C: movl $0,0x20(%esp);");
    asm("loc_4A1514: call _sub_55DEE0;");
    asm("loc_4A1519: flds _data_5D2ED8;");
    asm("loc_4A151F: fsubs _data_5D323C;");
    asm("loc_4A1525: mov 0xAE4(%esi),%edx;");
    asm("loc_4A152B: lea 0x18(%esp),%eax;");
    asm("loc_4A152F: push %eax;");
    asm("loc_4A1530: lea 0x10(%esp),%ecx;");
    asm("loc_4A1534: push %ecx;");
    asm("loc_4A1535: fstps 0x20(%esp);");
    asm("loc_4A1539: push %edx;");
    asm("loc_4A153A: mov %edi,%ecx;");
    asm("loc_4A153C: movl $0x3E808313,0x28(%esp);");
    asm("loc_4A1544: movl $0,0x2C(%esp);");
    asm("loc_4A154C: movl $0xBF27EF9E,0x18(%esp);");
    asm("loc_4A1554: movl $0x3E808313,0x1C(%esp);");
    asm("loc_4A155C: movl $0,0x20(%esp);");
    asm("loc_4A1564: call _sub_55DEE0;");
    asm("loc_4A1569: flds _data_5D2ED8;");
    asm("loc_4A156F: fsubs _data_5D323C;");
    asm("loc_4A1575: mov 0xAE8(%esi),%edx;");
    asm("loc_4A157B: lea 0x18(%esp),%eax;");
    asm("loc_4A157F: push %eax;");
    asm("loc_4A1580: lea 0x10(%esp),%ecx;");
    asm("loc_4A1584: push %ecx;");
    asm("loc_4A1585: fstps 0x20(%esp);");
    asm("loc_4A1589: push %edx;");
    asm("loc_4A158A: mov %edi,%ecx;");
    asm("loc_4A158C: movl $0x3DED9168,0x28(%esp);");
    asm("loc_4A1594: movl $0,0x2C(%esp);");
    asm("loc_4A159C: movl $0xBF27EF9E,0x18(%esp);");
    asm("loc_4A15A4: movl $0x3DED9168,0x1C(%esp);");
    asm("loc_4A15AC: movl $0,0x20(%esp);");
    asm("loc_4A15B4: call _sub_55DEE0;");
    asm("loc_4A15B9: flds _data_5D2ED8;");
    asm("loc_4A15BF: fsubs _data_5D323C;");
    asm("loc_4A15C5: movl $0xBF27EF9E,0xC(%esp);");
    asm("loc_4A15CD: fstps 0x18(%esp);");
    asm("loc_4A15D1: mov 0xAEC(%esi),%edx;");
    asm("loc_4A15D7: lea 0x18(%esp),%eax;");
    asm("loc_4A15DB: push %eax;");
    asm("loc_4A15DC: lea 0x10(%esp),%ecx;");
    asm("loc_4A15E0: push %ecx;");
    asm("loc_4A15E1: mov %edi,%ecx;");
    asm("loc_4A15E3: push %edx;");
    asm("loc_4A15E4: movl $0,0x20(%esp);");
    asm("loc_4A15EC: movl $0xBC9BA5E4,0x1C(%esp);");
    asm("loc_4A15F4: movl $0,0x2C(%esp);");
    asm("loc_4A15FC: movl $0xBC9BA5E4,0x28(%esp);");
    asm("loc_4A1604: call _sub_55DEE0;");
    asm("loc_4A1609: pop %edi;");
    asm("loc_4A160A: pop %esi;");
    asm("loc_4A160B: pop %ebx;");
    asm("loc_4A160C: add $0x18,%esp;");
    asm("loc_4A160F: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A1620() // _sub_4A1620
{
    __DEBUG_ASM(4A1620);
    // chunk 0x4A1620 _sub_4A1620
    asm("loc_4A1620: sub $0x28,%esp;");
    asm("loc_4A1623: push %esi;");
    asm("loc_4A1624: mov %ecx,%esi;");
    asm("loc_4A1626: lea 0x330(%esi),%ecx;");
    asm("loc_4A162C: call _sub_55E280;");
    asm("loc_4A1631: test %al,%al;");
    asm("loc_4A1633: jne loc_4A1700;");
    asm("loc_4A1639: mov 0x900(%esi),%ecx;");
    asm("loc_4A163F: mov 0x904(%esi),%edx;");
    asm("loc_4A1645: mov %ecx,0xC(%esp);");
    asm("loc_4A1649: mov 0x908(%esi),%ecx;");
    asm("loc_4A164F: mov %edx,0x10(%esp);");
    asm("loc_4A1653: mov 0xAC0(%esi),%edx;");
    asm("loc_4A1659: mov %ecx,0x14(%esp);");
    asm("loc_4A165D: mov 0xAC4(%esi),%ecx;");
    asm("loc_4A1663: mov %al,4(%esp);");
    asm("loc_4A1667: mov 0x8FC(%esi),%eax;");
    asm("loc_4A166D: test %eax,%eax;");
    asm("loc_4A166F: mov %edx,0x18(%esp);");
    asm("loc_4A1673: mov 0xAC8(%esi),%edx;");
    asm("loc_4A1679: mov %ecx,0x1C(%esp);");
    asm("loc_4A167D: mov 0xACC(%esi),%ecx;");
    asm("loc_4A1683: push %ebx;");
    asm("loc_4A1684: mov %eax,0xC(%esp);");
    asm("loc_4A1688: mov %edx,0x24(%esp);");
    asm("loc_4A168C: mov %ecx,0x28(%esp);");
    asm("loc_4A1690: movl $0,0x2C(%esp);");
    asm("loc_4A1698: mov $2,%bl;");
    asm("loc_4A169A: je loc_4A16AF;");
    asm("loc_4A169C: lea 0xC(%esp),%ecx;");
    asm("loc_4A16A0: test %bl,0x6C(%eax);");
    asm("loc_4A16A3: jne loc_4A16E2;");
    asm("loc_4A16A5: mov 4(%ecx),%eax;");
    asm("loc_4A16A8: add $4,%ecx;");
    asm("loc_4A16AB: test %eax,%eax;");
    asm("loc_4A16AD: jne loc_4A16A0;");
    asm("loc_4A16AF: xor %edx,%edx;");
    asm("loc_4A16B1: lea 0xAE4(%esi),%eax;");
    asm("loc_4A16B7: mov -0x10(%eax),%ecx;");
    asm("loc_4A16BA: test %ecx,%ecx;");
    asm("loc_4A16BC: je loc_4A16C3;");
    asm("loc_4A16BE: test %bl,0x6C(%ecx);");
    asm("loc_4A16C1: jne loc_4A16E2;");
    asm("loc_4A16C3: mov (%eax),%ecx;");
    asm("loc_4A16C5: test %ecx,%ecx;");
    asm("loc_4A16C7: je loc_4A16CE;");
    asm("loc_4A16C9: test %bl,0x6C(%ecx);");
    asm("loc_4A16CC: jne loc_4A16E2;");
    asm("loc_4A16CE: inc %edx;");
    asm("loc_4A16CF: add $4,%eax;");
    asm("loc_4A16D2: cmp $3,%edx;");
    asm("loc_4A16D5: jl loc_4A16B7;");
    asm("loc_4A16D7: mov 0x8F4(%esi),%edx;");
    asm("loc_4A16DD: test %bl,0x6C(%edx);");
    asm("loc_4A16E0: je loc_4A16E7;");
    asm("loc_4A16E2: movb $1,8(%esp);");
    asm("loc_4A16E7: mov 8(%esp),%al;");
    asm("loc_4A16EB: cmp 0xBC0(%esi),%al;");
    asm("loc_4A16F1: pop %ebx;");
    asm("loc_4A16F2: je loc_4A1700;");
    asm("loc_4A16F4: mov 4(%esp),%ecx;");
    asm("loc_4A16F8: push %ecx;");
    asm("loc_4A16F9: mov %esi,%ecx;");
    asm("loc_4A16FB: call _sub_4A0A70;");
    asm("loc_4A1700: pop %esi;");
    asm("loc_4A1701: add $0x28,%esp;");
    asm("loc_4A1704: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A1710() // _sub_4A1710
{
    asm("jmp dgb_4A1710;"); // jumptable skip
    asm(".long _jmp_4A1A8C;"); // jumptable address
    __DEBUG_ASM(4A1710);
    // chunk 0x4A1710 _sub_4A1710
    asm("loc_4A1710: sub $0x1C,%esp;");
    asm("loc_4A1713: push %ebp;");
    asm("loc_4A1714: push %esi;");
    asm("loc_4A1715: push %edi;");
    asm("loc_4A1716: mov %ecx,%ebp;");
    asm("loc_4A1718: call _sub_42D680;");
    asm("loc_4A171D: fstps 0x10(%esp);");
    asm("loc_4A1721: flds 0xBC4(%ebp);");
    asm("loc_4A1727: fsubs 0x10(%esp);");
    asm("loc_4A172B: fsts 0xBC4(%ebp);");
    asm("loc_4A1731: fcomps _data_5C7474;");
    asm("loc_4A1737: fnstsw %ax;");
    asm("loc_4A1739: test $0x41,%ah;");
    asm("loc_4A173C: jp loc_4A179D;");
    asm("loc_4A173E: mov _import_5C71DC,%esi;");
    asm("loc_4A1744: call *%esi;");
    asm("loc_4A1746: imul $0x7D0,%eax;");
    asm("loc_4A174C: mov 0x404(%ebp),%edi;");
    asm("loc_4A1752: cltd;");
    asm("loc_4A1753: and $0x7FFF,%edx;");
    asm("loc_4A1759: add %edx,%eax;");
    asm("loc_4A175B: sar $0xF,%eax;");
    asm("loc_4A175E: add $0x64,%eax;");
    asm("loc_4A1761: mov %eax,0x20(%esp);");
    asm("loc_4A1765: movl $0,0x24(%esp);");
    asm("loc_4A176D: fildll 0x20(%esp);");
    asm("loc_4A1771: fmuls _data_5D1494;");
    asm("loc_4A1777: fadds 0xBC4(%ebp);");
    asm("loc_4A177D: fstps 0xBC4(%ebp);");
    asm("loc_4A1783: call *%esi;");
    asm("loc_4A1785: imul %edi,%eax;");
    asm("loc_4A1788: lea (%eax,%eax,2),%eax;");
    asm("loc_4A178B: cltd;");
    asm("loc_4A178C: and $0x7FFF,%edx;");
    asm("loc_4A1792: add %edx,%eax;");
    asm("loc_4A1794: sar $0xF,%eax;");
    asm("loc_4A1797: mov %eax,0xBC8(%ebp);");
    asm("loc_4A179D: mov 0x400(%ebp),%eax;");
    asm("loc_4A17A3: mov (%eax),%edi;");
    asm("loc_4A17A5: cmp %eax,%edi;");
    asm("loc_4A17A7: movl $0,0xC(%esp);");
    asm("loc_4A17AF: je loc_4A1A84;");
    asm("loc_4A17B5: push %ebx;");
    asm("loc_4A17B6: mov 8(%edi),%esi;");
    asm("loc_4A17B9: mov 0x48(%esi),%al;");
    asm("loc_4A17BC: test %al,%al;");
    asm("loc_4A17BE: je loc_4A1A6A;");
    asm("loc_4A17C4: cmpl $0,(%esi);");
    asm("loc_4A17C7: jne loc_4A1A6A;");
    asm("loc_4A17CD: flds 0x14(%esp);");
    asm("loc_4A17D1: fmuls 0x68(%esi);");
    asm("loc_4A17D4: fadds 0x6C(%esi);");
    asm("loc_4A17D7: fcoms _data_5C75DC;");
    asm("loc_4A17DD: fsts 0x6C(%esi);");
    asm("loc_4A17E0: fnstsw %ax;");
    asm("loc_4A17E2: test $0x41,%ah;");
    asm("loc_4A17E5: jne loc_4A17FF;");
    asm("loc_4A17E7: fsubs _data_5C75DC;");
    asm("loc_4A17ED: fcoms _data_5C75DC;");
    asm("loc_4A17F3: fnstsw %ax;");
    asm("loc_4A17F5: test $0x41,%ah;");
    asm("loc_4A17F8: je loc_4A17E7;");
    asm("loc_4A17FA: fstps 0x6C(%esi);");
    asm("loc_4A17FD: jmp loc_4A1801;");
    asm("loc_4A17FF: fstp %st(0);");
    asm("loc_4A1801: flds 0x6C(%esi);");
    asm("loc_4A1804: fcomps _data_5C75E0;");
    asm("loc_4A180A: fnstsw %ax;");
    asm("loc_4A180C: test $5,%ah;");
    asm("loc_4A180F: jp loc_4A1816;");
    asm("loc_4A1811: flds 0x6C(%esi);");
    asm("loc_4A1814: jmp loc_4A181F;");
    asm("loc_4A1816: flds _data_5C75DC;");
    asm("loc_4A181C: fsubs 0x6C(%esi);");
    asm("loc_4A181F: fadd %st,%st(0);");
    asm("loc_4A1821: fldl _data_5D3F50;");
    asm("loc_4A1827: fmul %st(1),%st;");
    asm("loc_4A1829: fadds 0x40(%esi);");
    asm("loc_4A182C: fstps 0x3C(%esi);");
    asm("loc_4A182F: fmuls _data_5D3F08;");
    asm("loc_4A1835: call _sub_5B7EC0;");
    asm("loc_4A183A: lea (,%eax,4),%ebx;");
    asm("loc_4A1841: cmp $0xFF,%ebx;");
    asm("loc_4A1847: mov %eax,0x20(%esp);");
    asm("loc_4A184B: jle loc_4A1852;");
    asm("loc_4A184D: mov $0xFF,%ebx;");
    asm("loc_4A1852: fildl 0x20(%esp);");
    asm("loc_4A1856: fadds _data_5D3F0C;");
    asm("loc_4A185C: call _sub_5B7EC0;");
    asm("loc_4A1861: mov 0x10(%esp),%ecx;");
    asm("loc_4A1865: cmp %ecx,0xBC8(%ebp);");
    asm("loc_4A186B: je loc_4A1872;");
    asm("loc_4A186D: mov $0xFF,%ebx;");
    asm("loc_4A1872: mov 0x54(%esi),%ecx;");
    asm("loc_4A1875: cmp $6,%ecx;");
    asm("loc_4A1878: ja loc_4A1A6A;");
    asm("loc_4A187E: jmpl *_jmp_4A1A8C(,%ecx,4);");
    asm("loc_4A1885: xor %edx,%edx;");
    asm("loc_4A1887: mov %al,%dl;");
    asm("loc_4A1889: xor %eax,%eax;");
    asm("loc_4A188B: mov %bl,%al;");
    asm("loc_4A188D: movl $0x3F800000,0x1C(%esi);");
    asm("loc_4A1894: mov %edx,0x20(%esp);");
    asm("loc_4A1898: fildl 0x20(%esp);");
    asm("loc_4A189C: mov %eax,0x20(%esp);");
    asm("loc_4A18A0: fmuls _data_5C7F68;");
    asm("loc_4A18A6: fsts 0x20(%esi);");
    asm("loc_4A18A9: fstps 0x24(%esi);");
    asm("loc_4A18AC: fildl 0x20(%esp);");
    asm("loc_4A18B0: fmuls _data_5C7F68;");
    asm("loc_4A18B6: fstps 0x2C(%esi);");
    asm("loc_4A18B9: jmp loc_4A1A6A;");
    asm("loc_4A18BE: xor %ecx,%ecx;");
    asm("loc_4A18C0: mov %al,%cl;");
    asm("loc_4A18C2: xor %edx,%edx;");
    asm("loc_4A18C4: mov %bl,%dl;");
    asm("loc_4A18C6: movl $0x3F800000,0x20(%esi);");
    asm("loc_4A18CD: mov %ecx,0x20(%esp);");
    asm("loc_4A18D1: fildl 0x20(%esp);");
    asm("loc_4A18D5: mov %edx,0x20(%esp);");
    asm("loc_4A18D9: fmuls _data_5C7F68;");
    asm("loc_4A18DF: fsts 0x1C(%esi);");
    asm("loc_4A18E2: fstps 0x24(%esi);");
    asm("loc_4A18E5: fildl 0x20(%esp);");
    asm("loc_4A18E9: fmuls _data_5C7F68;");
    asm("loc_4A18EF: fstps 0x2C(%esi);");
    asm("loc_4A18F2: jmp loc_4A1A6A;");
    asm("loc_4A18F7: movzbl %al,%eax;");
    asm("loc_4A18FA: mov %eax,0x20(%esp);");
    asm("loc_4A18FE: xor %ecx,%ecx;");
    asm("loc_4A1900: mov %bl,%cl;");
    asm("loc_4A1902: fildl 0x20(%esp);");
    asm("loc_4A1906: movl $0x3F800000,0x24(%esi);");
    asm("loc_4A190D: fmuls _data_5C7F68;");
    asm("loc_4A1913: fsts 0x1C(%esi);");
    asm("loc_4A1916: fstps 0x20(%esi);");
    asm("loc_4A1919: mov %ecx,0x20(%esp);");
    asm("loc_4A191D: fildl 0x20(%esp);");
    asm("loc_4A1921: fmuls _data_5C7F68;");
    asm("loc_4A1927: fstps 0x2C(%esi);");
    asm("loc_4A192A: jmp loc_4A1A6A;");
    asm("loc_4A192F: xor %edx,%edx;");
    asm("loc_4A1931: mov %al,%dl;");
    asm("loc_4A1933: mov $0x3F800000,%eax;");
    asm("loc_4A1938: mov %eax,0x20(%esi);");
    asm("loc_4A193B: mov %eax,0x24(%esi);");
    asm("loc_4A193E: xor %eax,%eax;");
    asm("loc_4A1940: mov %bl,%al;");
    asm("loc_4A1942: mov %edx,0x20(%esp);");
    asm("loc_4A1946: fildl 0x20(%esp);");
    asm("loc_4A194A: fmuls _data_5C7F68;");
    asm("loc_4A1950: mov %eax,0x20(%esp);");
    asm("loc_4A1954: fstps 0x1C(%esi);");
    asm("loc_4A1957: fildl 0x20(%esp);");
    asm("loc_4A195B: fmuls _data_5C7F68;");
    asm("loc_4A1961: fstps 0x2C(%esi);");
    asm("loc_4A1964: jmp loc_4A1A6A;");
    asm("loc_4A1969: push %ebx;");
    asm("loc_4A196A: push $0xFF;");
    asm("loc_4A196F: push %eax;");
    asm("loc_4A1970: push $0xFF;");
    asm("loc_4A1975: lea 0x28(%esp),%ecx;");
    asm("loc_4A1979: call _sub_4A1AD0;");
    asm("loc_4A197E: mov 0x18(%esp),%eax;");
    asm("loc_4A1982: xor %ecx,%ecx;");
    asm("loc_4A1984: mov %al,%cl;");
    asm("loc_4A1986: xor %edx,%edx;");
    asm("loc_4A1988: mov %ah,%dl;");
    asm("loc_4A198A: mov 0x1A(%esp),%ax;");
    asm("loc_4A198F: mov %ecx,0x20(%esp);");
    asm("loc_4A1993: fildl 0x20(%esp);");
    asm("loc_4A1997: xor %ecx,%ecx;");
    asm("loc_4A1999: mov %edx,0x20(%esp);");
    asm("loc_4A199D: mov %al,%cl;");
    asm("loc_4A199F: fmuls _data_5C7F68;");
    asm("loc_4A19A5: xor %edx,%edx;");
    asm("loc_4A19A7: mov %ah,%dl;");
    asm("loc_4A19A9: fstps 0x1C(%esi);");
    asm("loc_4A19AC: fildl 0x20(%esp);");
    asm("loc_4A19B0: mov %ecx,0x20(%esp);");
    asm("loc_4A19B4: fmuls _data_5C7F68;");
    asm("loc_4A19BA: fstps 0x20(%esi);");
    asm("loc_4A19BD: fildl 0x20(%esp);");
    asm("loc_4A19C1: mov %edx,0x20(%esp);");
    asm("loc_4A19C5: fmuls _data_5C7F68;");
    asm("loc_4A19CB: fstps 0x24(%esi);");
    asm("loc_4A19CE: fildl 0x20(%esp);");
    asm("loc_4A19D2: fmuls _data_5C7F68;");
    asm("loc_4A19D8: fstps 0x2C(%esi);");
    asm("loc_4A19DB: jmp loc_4A1A6A;");
    asm("loc_4A19E0: push %ebx;");
    asm("loc_4A19E1: push %eax;");
    asm("loc_4A19E2: push $0xFF;");
    asm("loc_4A19E7: push $0xFF;");
    asm("loc_4A19EC: lea 0x2C(%esp),%ecx;");
    asm("loc_4A19F0: call _sub_4A1AD0;");
    asm("loc_4A19F5: mov 0x1C(%esp),%eax;");
    asm("loc_4A19F9: xor %ecx,%ecx;");
    asm("loc_4A19FB: mov %al,%cl;");
    asm("loc_4A19FD: xor %edx,%edx;");
    asm("loc_4A19FF: mov %ah,%dl;");
    asm("loc_4A1A01: mov 0x1E(%esp),%ax;");
    asm("loc_4A1A06: mov %ecx,0x20(%esp);");
    asm("loc_4A1A0A: fildl 0x20(%esp);");
    asm("loc_4A1A0E: xor %ecx,%ecx;");
    asm("loc_4A1A10: mov %edx,0x20(%esp);");
    asm("loc_4A1A14: mov %al,%cl;");
    asm("loc_4A1A16: fmuls _data_5C7F68;");
    asm("loc_4A1A1C: xor %edx,%edx;");
    asm("loc_4A1A1E: mov %ah,%dl;");
    asm("loc_4A1A20: fstps 0x1C(%esi);");
    asm("loc_4A1A23: fildl 0x20(%esp);");
    asm("loc_4A1A27: mov %ecx,0x20(%esp);");
    asm("loc_4A1A2B: fmuls _data_5C7F68;");
    asm("loc_4A1A31: fstps 0x20(%esi);");
    asm("loc_4A1A34: fildl 0x20(%esp);");
    asm("loc_4A1A38: mov %edx,0x20(%esp);");
    asm("loc_4A1A3C: fmuls _data_5C7F68;");
    asm("loc_4A1A42: fstps 0x24(%esi);");
    asm("loc_4A1A45: fildl 0x20(%esp);");
    asm("loc_4A1A49: fmuls _data_5C7F68;");
    asm("loc_4A1A4F: fstps 0x2C(%esi);");
    asm("loc_4A1A52: jmp loc_4A1A6A;");
    asm("loc_4A1A54: push %ebx;");
    asm("loc_4A1A55: push %eax;");
    asm("loc_4A1A56: push %eax;");
    asm("loc_4A1A57: push %eax;");
    asm("loc_4A1A58: lea 0x34(%esp),%ecx;");
    asm("loc_4A1A5C: call _sub_4A1AB0;");
    asm("loc_4A1A61: push %eax;");
    asm("loc_4A1A62: lea 8(%esi),%ecx;");
    asm("loc_4A1A65: call _sub_4A1AF0;");
    asm("loc_4A1A6A: mov 0x10(%esp),%ecx;");
    asm("loc_4A1A6E: mov (%edi),%edi;");
    asm("loc_4A1A70: mov 0x400(%ebp),%eax;");
    asm("loc_4A1A76: inc %ecx;");
    asm("loc_4A1A77: cmp %eax,%edi;");
    asm("loc_4A1A79: mov %ecx,0x10(%esp);");
    asm("loc_4A1A7D: jne loc_4A17B6;");
    asm("loc_4A1A83: pop %ebx;");
    asm("loc_4A1A84: pop %edi;");
    asm("loc_4A1A85: pop %esi;");
    asm("loc_4A1A86: pop %ebp;");
    asm("loc_4A1A87: add $0x1C,%esp;");
    asm("loc_4A1A8A: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_4A1A8C: .long loc_4A1885;");
    asm(".long loc_4A18BE;");
    asm(".long loc_4A18F7;");
    asm(".long loc_4A192F;");
    asm(".long loc_4A1969;");
    asm(".long loc_4A19E0;");
    asm(".long loc_4A1A54;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4A1710);
_naked _weak void _sub_4A1AB0() // _sub_4A1AB0
{
    __DEBUG_ASM(4A1AB0);
    // chunk 0x4A1AB0 _sub_4A1AB0
    asm("loc_4A1AB0: mov 8(%esp),%dl;");
    asm("loc_4A1AB4: mov %ecx,%eax;");
    asm("loc_4A1AB6: mov 4(%esp),%cl;");
    asm("loc_4A1ABA: mov %cl,(%eax);");
    asm("loc_4A1ABC: mov 0xC(%esp),%cl;");
    asm("loc_4A1AC0: mov %dl,1(%eax);");
    asm("loc_4A1AC3: mov 0x10(%esp),%dl;");
    asm("loc_4A1AC7: mov %cl,2(%eax);");
    asm("loc_4A1ACA: mov %dl,3(%eax);");
    asm("loc_4A1ACD: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A1AD0() // _sub_4A1AD0
{
    __DEBUG_ASM(4A1AD0);
    // chunk 0x4A1AD0 _sub_4A1AD0
    asm("loc_4A1AD0: mov 4(%esp),%al;");
    asm("loc_4A1AD4: mov 8(%esp),%dl;");
    asm("loc_4A1AD8: mov %al,(%ecx);");
    asm("loc_4A1ADA: mov 0xC(%esp),%al;");
    asm("loc_4A1ADE: mov %dl,1(%ecx);");
    asm("loc_4A1AE1: mov 0x10(%esp),%dl;");
    asm("loc_4A1AE5: mov %al,2(%ecx);");
    asm("loc_4A1AE8: mov %dl,3(%ecx);");
    asm("loc_4A1AEB: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A1AF0() // _sub_4A1AF0
{
    __DEBUG_ASM(4A1AF0);
    // chunk 0x4A1AF0 _sub_4A1AF0
    asm("loc_4A1AF0: mov 4(%esp),%eax;");
    asm("loc_4A1AF4: movzbl (%eax),%edx;");
    asm("loc_4A1AF7: mov %edx,4(%esp);");
    asm("loc_4A1AFB: fildl 4(%esp);");
    asm("loc_4A1AFF: fmuls _data_5C7F68;");
    asm("loc_4A1B05: fstps 0x14(%ecx);");
    asm("loc_4A1B08: movzbl 1(%eax),%edx;");
    asm("loc_4A1B0C: mov %edx,4(%esp);");
    asm("loc_4A1B10: fildl 4(%esp);");
    asm("loc_4A1B14: fmuls _data_5C7F68;");
    asm("loc_4A1B1A: fstps 0x18(%ecx);");
    asm("loc_4A1B1D: movzbl 2(%eax),%edx;");
    asm("loc_4A1B21: mov %edx,4(%esp);");
    asm("loc_4A1B25: fildl 4(%esp);");
    asm("loc_4A1B29: fmuls _data_5C7F68;");
    asm("loc_4A1B2F: fstps 0x1C(%ecx);");
    asm("loc_4A1B32: movzbl 3(%eax),%eax;");
    asm("loc_4A1B36: mov %eax,4(%esp);");
    asm("loc_4A1B3A: fildl 4(%esp);");
    asm("loc_4A1B3E: fmuls _data_5C7F68;");
    asm("loc_4A1B44: fstps 0x24(%ecx);");
    asm("loc_4A1B47: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A1B50() // _sub_4A1B50
{
    __DEBUG_ASM(4A1B50);
    // chunk 0x4A1B50 _sub_4A1B50
    asm("loc_4A1B50: mov $0x2028,%eax;");
    asm("loc_4A1B55: call _sub_5B7E90;");
    asm("loc_4A1B5A: mov 0x202C(%esp),%ecx;");
    asm("loc_4A1B61: mov (%ecx),%eax;");
    asm("loc_4A1B63: push %esi;");
    asm("loc_4A1B64: push %edi;");
    asm("loc_4A1B65: calll *0x1C(%eax);");
    asm("loc_4A1B68: xor %esi,%esi;");
    asm("loc_4A1B6A: test %eax,%eax;");
    asm("loc_4A1B6C: mov %esi,0x14(%esp);");
    asm("loc_4A1B70: je loc_4A1CCA;");
    asm("loc_4A1B76: mov 0x2038(%esp),%ecx;");
    asm("loc_4A1B7D: mov (%ecx),%edx;");
    asm("loc_4A1B7F: mov %edx,0x18(%esp);");
    asm("loc_4A1B83: mov 4(%ecx),%edx;");
    asm("loc_4A1B86: mov 8(%ecx),%ecx;");
    asm("loc_4A1B89: mov %ecx,0x20(%esp);");
    asm("loc_4A1B8D: lea 0x28(%esp),%ecx;");
    asm("loc_4A1B91: push %ecx;");
    asm("loc_4A1B92: lea 0x1C(%esp),%ecx;");
    asm("loc_4A1B96: mov %edx,0x20(%esp);");
    asm("loc_4A1B9A: mov (%eax),%edx;");
    asm("loc_4A1B9C: push %ecx;");
    asm("loc_4A1B9D: mov %eax,%ecx;");
    asm("loc_4A1B9F: mov %esi,0x34(%esp);");
    asm("loc_4A1BA3: movl $0x800,0x30(%esp);");
    asm("loc_4A1BAB: movl $0x3DCCCCCD,0x2C(%esp);");
    asm("loc_4A1BB3: calll *0x1C(%edx);");
    asm("loc_4A1BB6: test %eax,%eax;");
    asm("loc_4A1BB8: jbe loc_4A1CCA;");
    asm("loc_4A1BBE: mov 0x2C(%esp),%eax;");
    asm("loc_4A1BC2: xor %edi,%edi;");
    asm("loc_4A1BC4: test %eax,%eax;");
    asm("loc_4A1BC6: movl $0x60AD78EC,0x10(%esp);");
    asm("loc_4A1BCE: jbe loc_4A1CCA;");
    asm("loc_4A1BD4: cmp %eax,%edi;");
    asm("loc_4A1BD6: lea 0x30(%esp),%edx;");
    asm("loc_4A1BDA: mov %edx,0xC(%esp);");
    asm("loc_4A1BDE: jae loc_4A1BE8;");
    asm("loc_4A1BE0: mov 0xC(%esp),%eax;");
    asm("loc_4A1BE4: mov (%eax),%esi;");
    asm("loc_4A1BE6: jmp loc_4A1BEA;");
    asm("loc_4A1BE8: xor %esi,%esi;");
    asm("loc_4A1BEA: mov 0x203C(%esp),%al;");
    asm("loc_4A1BF1: test %al,%al;");
    asm("loc_4A1BF3: je loc_4A1C07;");
    asm("loc_4A1BF5: mov (%esi),%edx;");
    asm("loc_4A1BF7: mov %esi,%ecx;");
    asm("loc_4A1BF9: calll *0x84(%edx);");
    asm("loc_4A1BFF: test %eax,%eax;");
    asm("loc_4A1C01: je loc_4A1CA5;");
    asm("loc_4A1C07: mov 0x2040(%esp),%al;");
    asm("loc_4A1C0E: test %al,%al;");
    asm("loc_4A1C10: je loc_4A1C24;");
    asm("loc_4A1C12: mov (%esi),%eax;");
    asm("loc_4A1C14: mov %esi,%ecx;");
    asm("loc_4A1C16: calll *0x88(%eax);");
    asm("loc_4A1C1C: test %eax,%eax;");
    asm("loc_4A1C1E: je loc_4A1CA5;");
    asm("loc_4A1C24: mov 0x2044(%esp),%al;");
    asm("loc_4A1C2B: test %al,%al;");
    asm("loc_4A1C2D: jne loc_4A1C72;");
    asm("loc_4A1C2F: mov (%esi),%edx;");
    asm("loc_4A1C31: push $0;");
    asm("loc_4A1C33: push $1;");
    asm("loc_4A1C35: lea 0x13(%esp),%ecx;");
    asm("loc_4A1C39: push %ecx;");
    asm("loc_4A1C3A: mov %esi,%ecx;");
    asm("loc_4A1C3C: movb $0,0x17(%esp);");
    asm("loc_4A1C41: calll *4(%edx);");
    asm("loc_4A1C44: push %eax;");
    asm("loc_4A1C45: call _sub_4C4DA0;");
    asm("loc_4A1C4A: mov (%esi),%eax;");
    asm("loc_4A1C4C: add $0x10,%esp;");
    asm("loc_4A1C4F: mov %esi,%ecx;");
    asm("loc_4A1C51: calll *0x80(%eax);");
    asm("loc_4A1C57: mov 0xB(%esp),%cl;");
    asm("loc_4A1C5B: or %al,%cl;");
    asm("loc_4A1C5D: test $1,%cl;");
    asm("loc_4A1C60: je loc_4A1CA5;");
    asm("loc_4A1C62: mov 0x2040(%esp),%al;");
    asm("loc_4A1C69: test %al,%al;");
    asm("loc_4A1C6B: je loc_4A1C72;");
    asm("loc_4A1C6D: test $8,%cl;");
    asm("loc_4A1C70: je loc_4A1CA5;");
    asm("loc_4A1C72: mov 0x2038(%esp),%eax;");
    asm("loc_4A1C79: mov (%esi),%edx;");
    asm("loc_4A1C7B: push $0;");
    asm("loc_4A1C7D: push %eax;");
    asm("loc_4A1C7E: mov %esi,%ecx;");
    asm("loc_4A1C80: calll *0x38(%edx);");
    asm("loc_4A1C83: test %al,%al;");
    asm("loc_4A1C85: je loc_4A1CA5;");
    asm("loc_4A1C87: mov (%esi),%edx;");
    asm("loc_4A1C89: mov %esi,%ecx;");
    asm("loc_4A1C8B: calll *0x30(%edx);");
    asm("loc_4A1C8E: fcoms 0x10(%esp);");
    asm("loc_4A1C92: fnstsw %ax;");
    asm("loc_4A1C94: test $5,%ah;");
    asm("loc_4A1C97: jp loc_4A1CA3;");
    asm("loc_4A1C99: fstps 0x10(%esp);");
    asm("loc_4A1C9D: mov %esi,0x14(%esp);");
    asm("loc_4A1CA1: jmp loc_4A1CA5;");
    asm("loc_4A1CA3: fstp %st(0);");
    asm("loc_4A1CA5: mov 0xC(%esp),%edx;");
    asm("loc_4A1CA9: mov 0x2C(%esp),%eax;");
    asm("loc_4A1CAD: inc %edi;");
    asm("loc_4A1CAE: add $4,%edx;");
    asm("loc_4A1CB1: cmp %eax,%edi;");
    asm("loc_4A1CB3: mov %edx,0xC(%esp);");
    asm("loc_4A1CB7: jb loc_4A1BE0;");
    asm("loc_4A1CBD: mov 0x14(%esp),%eax;");
    asm("loc_4A1CC1: pop %edi;");
    asm("loc_4A1CC2: pop %esi;");
    asm("loc_4A1CC3: add $0x2028,%esp;");
    asm("loc_4A1CC9: ret;");
    asm("loc_4A1CCA: pop %edi;");
    asm("loc_4A1CCB: mov %esi,%eax;");
    asm("loc_4A1CCD: pop %esi;");
    asm("loc_4A1CCE: add $0x2028,%esp;");
    asm("loc_4A1CD4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A1CE0() // _sub_4A1CE0
{
    __DEBUG_ASM(4A1CE0);
    // chunk 0x4A1CE0 _sub_4A1CE0
    asm("loc_4A1CE0: sub $0x78,%esp;");
    asm("loc_4A1CE3: push %ebx;");
    asm("loc_4A1CE4: push %esi;");
    asm("loc_4A1CE5: mov %ecx,%esi;");
    asm("loc_4A1CE7: mov 0x7D0(%esi),%eax;");
    asm("loc_4A1CED: test %eax,%eax;");
    asm("loc_4A1CEF: push %edi;");
    asm("loc_4A1CF0: je loc_4A21E9;");
    asm("loc_4A1CF6: calll *_import_5C60D0;");
    asm("loc_4A1CFC: test %al,%al;");
    asm("loc_4A1CFE: jne loc_4A21E9;");
    asm("loc_4A1D04: mov _data_67204C,%eax;");
    asm("loc_4A1D09: test %eax,%eax;");
    asm("loc_4A1D0B: je loc_4A21E9;");
    asm("loc_4A1D11: mov _data_672050,%ecx;");
    asm("loc_4A1D17: sub %eax,%ecx;");
    asm("loc_4A1D19: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A1D1E: imul %ecx;");
    asm("loc_4A1D20: sar $2,%edx;");
    asm("loc_4A1D23: mov %edx,%eax;");
    asm("loc_4A1D25: shr $0x1F,%eax;");
    asm("loc_4A1D28: add %eax,%edx;");
    asm("loc_4A1D2A: mov %edx,%ebx;");
    asm("loc_4A1D2C: je loc_4A21E9;");
    asm("loc_4A1D32: cmpl $0xFFFFFFFF,0x8A0(%esi);");
    asm("loc_4A1D39: jne loc_4A1DB1;");
    asm("loc_4A1D3B: push $0;");
    asm("loc_4A1D3D: push $0;");
    asm("loc_4A1D3F: lea 0x89C(%esi),%edi;");
    asm("loc_4A1D45: push $_data_5D3F58;");
    asm("loc_4A1D4A: mov %edi,%ecx;");
    asm("loc_4A1D4C: call _sub_59EC80;");
    asm("loc_4A1D51: movzbl _data_679BAC,%ecx;");
    asm("loc_4A1D58: mov %ecx,0x10(%esp);");
    asm("loc_4A1D5C: fildl 0x10(%esp);");
    asm("loc_4A1D60: fmuls _data_5C7F68;");
    asm("loc_4A1D66: fstps 0x14(%edi);");
    asm("loc_4A1D69: movzbl _data_679BAC+1,%edx;");
    asm("loc_4A1D70: mov %edx,0x10(%esp);");
    asm("loc_4A1D74: fildl 0x10(%esp);");
    asm("loc_4A1D78: fmuls _data_5C7F68;");
    asm("loc_4A1D7E: fstps 0x18(%edi);");
    asm("loc_4A1D81: movzbl _data_679BAC+2,%eax;");
    asm("loc_4A1D88: mov %eax,0x10(%esp);");
    asm("loc_4A1D8C: fildl 0x10(%esp);");
    asm("loc_4A1D90: fmuls _data_5C7F68;");
    asm("loc_4A1D96: fstps 0x1C(%edi);");
    asm("loc_4A1D99: movzbl _data_679BAC+3,%ecx;");
    asm("loc_4A1DA0: mov %ecx,0x10(%esp);");
    asm("loc_4A1DA4: fildl 0x10(%esp);");
    asm("loc_4A1DA8: fmuls _data_5C7F68;");
    asm("loc_4A1DAE: fstps 0x24(%edi);");
    asm("loc_4A1DB1: lea 0x418(%esi),%edi;");
    asm("loc_4A1DB7: mov %edi,%edx;");
    asm("loc_4A1DB9: mov (%edx),%eax;");
    asm("loc_4A1DBB: mov 4(%edx),%ecx;");
    asm("loc_4A1DBE: mov 8(%edx),%edx;");
    asm("loc_4A1DC1: mov %eax,0x24(%esp);");
    asm("loc_4A1DC5: flds 0x24(%esp);");
    asm("loc_4A1DC9: fmuls _data_5C75E0;");
    asm("loc_4A1DCF: mov %ecx,0x28(%esp);");
    asm("loc_4A1DD3: flds 0x28(%esp);");
    asm("loc_4A1DD7: mov %edx,0x2C(%esp);");
    asm("loc_4A1DDB: fmuls _data_5C75E0;");
    asm("loc_4A1DE1: sub $0xC,%esp;");
    asm("loc_4A1DE4: flds 0x38(%esp);");
    asm("loc_4A1DE8: lea 0x3C(%esp),%ecx;");
    asm("loc_4A1DEC: fmuls _data_5C75E0;");
    asm("loc_4A1DF2: fchs;");
    asm("loc_4A1DF4: fstps 8(%esp);");
    asm("loc_4A1DF8: fchs;");
    asm("loc_4A1DFA: fstps 4(%esp);");
    asm("loc_4A1DFE: fchs;");
    asm("loc_4A1E00: fstps (%esp);");
    asm("loc_4A1E03: call _sub_422B80;");
    asm("loc_4A1E08: mov %edi,%eax;");
    asm("loc_4A1E0A: mov (%eax),%ecx;");
    asm("loc_4A1E0C: mov 4(%eax),%edx;");
    asm("loc_4A1E0F: mov 8(%eax),%eax;");
    asm("loc_4A1E12: mov %ecx,0x18(%esp);");
    asm("loc_4A1E16: flds 0x18(%esp);");
    asm("loc_4A1E1A: fmuls _data_5C75E0;");
    asm("loc_4A1E20: mov %edx,0x1C(%esp);");
    asm("loc_4A1E24: flds 0x1C(%esp);");
    asm("loc_4A1E28: mov %eax,0x20(%esp);");
    asm("loc_4A1E2C: fmuls _data_5C75E0;");
    asm("loc_4A1E32: mov 0x30(%esp),%ecx;");
    asm("loc_4A1E36: flds 0x20(%esp);");
    asm("loc_4A1E3A: mov 0x34(%esp),%edx;");
    asm("loc_4A1E3E: fmuls _data_5C75E0;");
    asm("loc_4A1E44: mov 0x38(%esp),%eax;");
    asm("loc_4A1E48: mov %ecx,0x24(%esp);");
    asm("loc_4A1E4C: mov %edx,0x28(%esp);");
    asm("loc_4A1E50: fstps 0x20(%esp);");
    asm("loc_4A1E54: mov %eax,0x2C(%esp);");
    asm("loc_4A1E58: flds 0x3F8(%esi);");
    asm("loc_4A1E5E: lea 0x46C(%esi),%ecx;");
    asm("loc_4A1E64: fsubs _data_5C75DC;");
    asm("loc_4A1E6A: mov (%ecx),%edx;");
    asm("loc_4A1E6C: mov 4(%ecx),%eax;");
    asm("loc_4A1E6F: mov 8(%ecx),%ecx;");
    asm("loc_4A1E72: fstps 0xC(%esp);");
    asm("loc_4A1E76: fxch;");
    asm("loc_4A1E78: mov %eax,0x1C(%esp);");
    asm("loc_4A1E7C: fmuls 0xC(%esp);");
    asm("loc_4A1E80: sub $0xC,%esp;");
    asm("loc_4A1E83: fstps 0x24(%esp);");
    asm("loc_4A1E87: fmuls 0x18(%esp);");
    asm("loc_4A1E8B: flds 0x2C(%esp);");
    asm("loc_4A1E8F: mov %ecx,0x2C(%esp);");
    asm("loc_4A1E93: fmuls 0x18(%esp);");
    asm("loc_4A1E97: flds 0x3C(%esp);");
    asm("loc_4A1E9B: fsubs 0x24(%esp);");
    asm("loc_4A1E9F: mov %edx,0x24(%esp);");
    asm("loc_4A1EA3: fstps 0x30(%esp);");
    asm("loc_4A1EA7: flds 0x34(%esp);");
    asm("loc_4A1EAB: fsub %st(2),%st;");
    asm("loc_4A1EAD: fstps 0x34(%esp);");
    asm("loc_4A1EB1: flds 0x38(%esp);");
    asm("loc_4A1EB5: fsub %st(1),%st;");
    asm("loc_4A1EB7: fstp %st(2);");
    asm("loc_4A1EB9: fstp %st(0);");
    asm("loc_4A1EBB: flds 0x3F8(%esi);");
    asm("loc_4A1EC1: flds 0x24(%esp);");
    asm("loc_4A1EC5: fmul %st(1),%st;");
    asm("loc_4A1EC7: fstps 0x24(%esp);");
    asm("loc_4A1ECB: flds 0x28(%esp);");
    asm("loc_4A1ECF: fmul %st(1),%st;");
    asm("loc_4A1ED1: fstps 0x28(%esp);");
    asm("loc_4A1ED5: fmuls 0x2C(%esp);");
    asm("loc_4A1ED9: fadd %st(1),%st;");
    asm("loc_4A1EDB: fstps 8(%esp);");
    asm("loc_4A1EDF: fstp %st(0);");
    asm("loc_4A1EE1: lea 0x54(%esp),%ecx;");
    asm("loc_4A1EE5: flds 0x28(%esp);");
    asm("loc_4A1EE9: fadds 0x34(%esp);");
    asm("loc_4A1EED: fstps 4(%esp);");
    asm("loc_4A1EF1: flds 0x24(%esp);");
    asm("loc_4A1EF5: fadds 0x30(%esp);");
    asm("loc_4A1EF9: fstps (%esp);");
    asm("loc_4A1EFC: call _sub_422B80;");
    asm("loc_4A1F01: mov (%edi),%edx;");
    asm("loc_4A1F03: flds 0x3F8(%esi);");
    asm("loc_4A1F09: mov 4(%edi),%eax;");
    asm("loc_4A1F0C: mov 8(%edi),%ecx;");
    asm("loc_4A1F0F: mov %edx,0x18(%esp);");
    asm("loc_4A1F13: flds 0x18(%esp);");
    asm("loc_4A1F17: fmul %st(1),%st;");
    asm("loc_4A1F19: mov %eax,0x1C(%esp);");
    asm("loc_4A1F1D: mov 0x478(%esi),%al;");
    asm("loc_4A1F23: test %al,%al;");
    asm("loc_4A1F25: fstps 0x18(%esp);");
    asm("loc_4A1F29: mov %ecx,0x20(%esp);");
    asm("loc_4A1F2D: flds 0x1C(%esp);");
    asm("loc_4A1F31: fmul %st(1),%st;");
    asm("loc_4A1F33: fstps 0x1C(%esp);");
    asm("loc_4A1F37: flds 0x20(%esp);");
    asm("loc_4A1F3B: fmul %st(1),%st;");
    asm("loc_4A1F3D: fstps 0x20(%esp);");
    asm("loc_4A1F41: fstp %st(0);");
    asm("loc_4A1F43: flds 0x7E4(%esi);");
    asm("loc_4A1F49: je loc_4A1FB7;");
    asm("loc_4A1F4B: flds 0x4A8(%esi);");
    asm("loc_4A1F51: fdivs 0x4A0(%esi);");
    asm("loc_4A1F57: fmuls _data_5C75E0;");
    asm("loc_4A1F5D: fcoms _data_5C75DC;");
    asm("loc_4A1F63: fnstsw %ax;");
    asm("loc_4A1F65: test $5,%ah;");
    asm("loc_4A1F68: jp loc_4A1F72;");
    asm("loc_4A1F6A: fstp %st(0);");
    asm("loc_4A1F6C: flds _data_5C75DC;");
    asm("loc_4A1F72: fld %st(1);");
    asm("loc_4A1F74: fdivp;");
    asm("loc_4A1F76: flds 0x490(%esi);");
    asm("loc_4A1F7C: fadds 0x4A0(%esi);");
    asm("loc_4A1F82: fdivrs 0x4A8(%esi);");
    asm("loc_4A1F88: fmuls _data_5C75E0;");
    asm("loc_4A1F8E: fcoms _data_5C75DC;");
    asm("loc_4A1F94: fnstsw %ax;");
    asm("loc_4A1F96: test $5,%ah;");
    asm("loc_4A1F99: jp loc_4A1FA3;");
    asm("loc_4A1F9B: fstp %st(0);");
    asm("loc_4A1F9D: flds _data_5C75DC;");
    asm("loc_4A1FA3: fxch %st(2);");
    asm("loc_4A1FA5: fdiv %st(2),%st;");
    asm("loc_4A1FA7: fsub %st(1),%st;");
    asm("loc_4A1FA9: fmuls 0x47C(%esi);");
    asm("loc_4A1FAF: fadd %st(1),%st;");
    asm("loc_4A1FB1: fstp %st(2);");
    asm("loc_4A1FB3: fstp %st(0);");
    asm("loc_4A1FB5: jmp loc_4A1FDA;");
    asm("loc_4A1FB7: flds 0x3F8(%esi);");
    asm("loc_4A1FBD: fmuls _data_5C75E0;");
    asm("loc_4A1FC3: fcoms _data_5C75DC;");
    asm("loc_4A1FC9: fnstsw %ax;");
    asm("loc_4A1FCB: test $5,%ah;");
    asm("loc_4A1FCE: jp loc_4A1FD8;");
    asm("loc_4A1FD0: fstp %st(0);");
    asm("loc_4A1FD2: flds _data_5C75DC;");
    asm("loc_4A1FD8: fdivrp;");
    asm("loc_4A1FDA: test %ebx,%ebx;");
    asm("loc_4A1FDC: flds 0x4AC(%esi);");
    asm("loc_4A1FE2: fadd %st,%st(0);");
    asm("loc_4A1FE4: fdivr %st(1),%st;");
    asm("loc_4A1FE6: fmuls 0x18(%esp);");
    asm("loc_4A1FEA: fmuls _data_5D3E4C;");
    asm("loc_4A1FF0: fstps 0x14(%esp);");
    asm("loc_4A1FF4: fstp %st(0);");
    asm("loc_4A1FF6: jle loc_4A21E9;");
    asm("loc_4A1FFC: push %ebp;");
    asm("loc_4A1FFD: mov 0x18(%esp),%ebp;");
    asm("loc_4A2001: movl $0,0x10(%esp);");
    asm("loc_4A2009: mov %ebx,0x14(%esp);");
    asm("loc_4A200D: lea (%ecx),%ecx;");
    asm("loc_4A2010: mov _data_67204C,%edx;");
    asm("loc_4A2016: mov 0x10(%esp),%eax;");
    asm("loc_4A201A: mov 0x7E0(%esi),%ecx;");
    asm("loc_4A2020: lea (%eax,%edx),%edi;");
    asm("loc_4A2023: mov (%ecx),%edx;");
    asm("loc_4A2025: calll *(%edx);");
    asm("loc_4A2027: cmp %eax,0x10(%edi);");
    asm("loc_4A202A: jne loc_4A21CE;");
    asm("loc_4A2030: flds 0xF48(%esi);");
    asm("loc_4A2036: mov 0x20(%esp),%ecx;");
    asm("loc_4A203A: fld %st(0);");
    asm("loc_4A203C: mov 0x24(%esp),%edx;");
    asm("loc_4A2040: fmuls (%edi);");
    asm("loc_4A2042: mov %ecx,0x38(%esp);");
    asm("loc_4A2046: fxch;");
    asm("loc_4A2048: mov %edx,0x3C(%esp);");
    asm("loc_4A204C: fmuls 8(%edi);");
    asm("loc_4A204F: mov 0x1C(%esp),%eax;");
    asm("loc_4A2053: mov %eax,0x34(%esp);");
    asm("loc_4A2057: fstps 0x48(%esp);");
    asm("loc_4A205B: movl $0,0x84(%esp);");
    asm("loc_4A2066: fadds 0x4A8(%esi);");
    asm("loc_4A206C: movl $0,0x80(%esp);");
    asm("loc_4A2077: flds 0x4A8(%esi);");
    asm("loc_4A207D: movl $0,0x7C(%esp);");
    asm("loc_4A2085: fadd %st,%st(0);");
    asm("loc_4A2087: movl $0,0x60(%esp);");
    asm("loc_4A208F: movl $0,0x6C(%esp);");
    asm("loc_4A2097: fdivrp;");
    asm("loc_4A2099: movl $0,0x70(%esp);");
    asm("loc_4A20A1: movl $0,0x74(%esp);");
    asm("loc_4A20A9: movl $0x3F800000,0x78(%esp);");
    asm("loc_4A20B1: fmuls 0x1C(%esp);");
    asm("loc_4A20B5: flds 0x48(%esp);");
    asm("loc_4A20B9: fadds 0x4AC(%esi);");
    asm("loc_4A20BF: flds 0x4AC(%esi);");
    asm("loc_4A20C5: fadd %st,%st(0);");
    asm("loc_4A20C7: fdivrp;");
    asm("loc_4A20C9: fsubrl _data_5C89B8;");
    asm("loc_4A20CF: fmuls 0x38(%esp);");
    asm("loc_4A20D3: flds 0x4C(%esp);");
    asm("loc_4A20D7: fadd %st(2),%st;");
    asm("loc_4A20D9: fstps 0x28(%esp);");
    asm("loc_4A20DD: flds 0x50(%esp);");
    asm("loc_4A20E1: mov 0x28(%esp),%edi;");
    asm("loc_4A20E5: fadd %st(1),%st;");
    asm("loc_4A20E7: fstps 0x2C(%esp);");
    asm("loc_4A20EB: mov 0x2C(%esp),%ebx;");
    asm("loc_4A20EF: fstp %st(0);");
    asm("loc_4A20F1: fstp %st(0);");
    asm("loc_4A20F3: flds 0x54(%esp);");
    asm("loc_4A20F7: fadds 0x3C(%esp);");
    asm("loc_4A20FB: fstps 0x30(%esp);");
    asm("loc_4A20FF: fldl _data_5C8BA8;");
    asm("loc_4A2105: mov 0x30(%esp),%eax;");
    asm("loc_4A2109: fcos;");
    asm("loc_4A210B: mov %eax,0x48(%esp);");
    asm("loc_4A210F: mov _data_67209C,%eax;");
    asm("loc_4A2114: test %eax,%eax;");
    asm("loc_4A2116: movl $0xBF0CCCCC,0x48(%esp);");
    asm("loc_4A211E: fldl _data_5C8BA8;");
    asm("loc_4A2124: fsin;");
    asm("loc_4A2126: fld %st(1);");
    asm("loc_4A2128: fstps 0x58(%esp);");
    asm("loc_4A212C: fld %st(0);");
    asm("loc_4A212E: fchs;");
    asm("loc_4A2130: fstps 0x5C(%esp);");
    asm("loc_4A2134: fstps 0x64(%esp);");
    asm("loc_4A2138: fstps 0x68(%esp);");
    asm("loc_4A213C: jne loc_4A2148;");
    asm("loc_4A213E: call _sub_5B73E0;");
    asm("loc_4A2143: mov %eax,_data_67209C;");
    asm("loc_4A2148: mov (%eax),%ecx;");
    asm("loc_4A214A: push %ebp;");
    asm("loc_4A214B: lea 0x5C(%esp),%edx;");
    asm("loc_4A214F: push %edx;");
    asm("loc_4A2150: lea 0x60(%esp),%edx;");
    asm("loc_4A2154: push %edx;");
    asm("loc_4A2155: push %eax;");
    asm("loc_4A2156: calll *0x10(%ecx);");
    asm("loc_4A2159: mov 0x48(%esp),%eax;");
    asm("loc_4A215D: mov _import_5C6D90,%ecx;");
    asm("loc_4A2163: mov %edi,0x7C(%esp);");
    asm("loc_4A2167: mov %ebx,0x80(%esp);");
    asm("loc_4A216E: mov %eax,0x84(%esp);");
    asm("loc_4A2175: mov (%ecx),%eax;");
    asm("loc_4A2177: mov (%eax),%edx;");
    asm("loc_4A2179: lea 0x58(%esp),%ecx;");
    asm("loc_4A217D: push %ecx;");
    asm("loc_4A217E: mov 0x8A0(%esi),%ecx;");
    asm("loc_4A2184: push %ecx;");
    asm("loc_4A2185: push %eax;");
    asm("loc_4A2186: calll *0x9C(%edx);");
    asm("loc_4A218C: mov _import_5C6D90,%edx;");
    asm("loc_4A2192: mov (%edx),%eax;");
    asm("loc_4A2194: mov 0x8A0(%esi),%edx;");
    asm("loc_4A219A: mov (%eax),%ecx;");
    asm("loc_4A219C: push $0;");
    asm("loc_4A219E: push $0;");
    asm("loc_4A21A0: push %edx;");
    asm("loc_4A21A1: push %eax;");
    asm("loc_4A21A2: calll *0x6C(%ecx);");
    asm("loc_4A21A5: mov 0x8A0(%esi),%edx;");
    asm("loc_4A21AB: mov _import_5C6DF0,%eax;");
    asm("loc_4A21B0: mov (%eax),%eax;");
    asm("loc_4A21B2: mov (%eax),%ecx;");
    asm("loc_4A21B4: push $0;");
    asm("loc_4A21B6: push $0;");
    asm("loc_4A21B8: push $0x308;");
    asm("loc_4A21BD: push $0x3F800000;");
    asm("loc_4A21C2: push %edx;");
    asm("loc_4A21C3: lea 0xC80(%esi),%edx;");
    asm("loc_4A21C9: push %edx;");
    asm("loc_4A21CA: push %eax;");
    asm("loc_4A21CB: calll *0x1C(%ecx);");
    asm("loc_4A21CE: mov 0x10(%esp),%ecx;");
    asm("loc_4A21D2: mov 0x14(%esp),%eax;");
    asm("loc_4A21D6: add $0x18,%ecx;");
    asm("loc_4A21D9: dec %eax;");
    asm("loc_4A21DA: mov %ecx,0x10(%esp);");
    asm("loc_4A21DE: mov %eax,0x14(%esp);");
    asm("loc_4A21E2: jne loc_4A2010;");
    asm("loc_4A21E8: pop %ebp;");
    asm("loc_4A21E9: pop %edi;");
    asm("loc_4A21EA: pop %esi;");
    asm("loc_4A21EB: pop %ebx;");
    asm("loc_4A21EC: add $0x78,%esp;");
    asm("loc_4A21EF: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A21F0() // _sub_4A21F0
{
    __DEBUG_ASM(4A21F0);
    // chunk 0x4A21F0 _sub_4A21F0
    asm("loc_4A21F0: sub $0x14,%esp;");
    asm("loc_4A21F3: push %ebx;");
    asm("loc_4A21F4: push %ebp;");
    asm("loc_4A21F5: push %esi;");
    asm("loc_4A21F6: push %edi;");
    asm("loc_4A21F7: mov %ecx,%edi;");
    asm("loc_4A21F9: mov %edi,0x10(%esp);");
    asm("loc_4A21FD: calll *_import_5C60D0;");
    asm("loc_4A2203: test %al,%al;");
    asm("loc_4A2205: jne loc_4A22EB;");
    asm("loc_4A220B: mov _data_67204C,%esi;");
    asm("loc_4A2211: test %esi,%esi;");
    asm("loc_4A2213: jne loc_4A2219;");
    asm("loc_4A2215: xor %ebp,%ebp;");
    asm("loc_4A2217: jmp loc_4A2234;");
    asm("loc_4A2219: mov _data_672050,%ecx;");
    asm("loc_4A221F: sub %esi,%ecx;");
    asm("loc_4A2221: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A2226: imul %ecx;");
    asm("loc_4A2228: sar $2,%edx;");
    asm("loc_4A222B: mov %edx,%eax;");
    asm("loc_4A222D: shr $0x1F,%eax;");
    asm("loc_4A2230: add %eax,%edx;");
    asm("loc_4A2232: mov %edx,%ebp;");
    asm("loc_4A2234: flds 0x7E4(%edi);");
    asm("loc_4A223A: flds 0x3F8(%edi);");
    asm("loc_4A2240: fmuls _data_5C75E0;");
    asm("loc_4A2246: fcoms _data_5C75DC;");
    asm("loc_4A224C: fnstsw %ax;");
    asm("loc_4A224E: test $5,%ah;");
    asm("loc_4A2251: jp loc_4A225B;");
    asm("loc_4A2253: fstp %st(0);");
    asm("loc_4A2255: flds _data_5C75DC;");
    asm("loc_4A225B: fxch;");
    asm("loc_4A225D: xor %ebx,%ebx;");
    asm("loc_4A225F: test %ebp,%ebp;");
    asm("loc_4A2261: fdiv %st(1),%st;");
    asm("loc_4A2263: fmuls _data_5D3E6C;");
    asm("loc_4A2269: fstp %st(1);");
    asm("loc_4A226B: fld %st(0);");
    asm("loc_4A226D: fmul %st(1),%st;");
    asm("loc_4A226F: fstps 0x14(%esp);");
    asm("loc_4A2273: fstp %st(0);");
    asm("loc_4A2275: jle loc_4A22EB;");
    asm("loc_4A2277: xor %edi,%edi;");
    asm("loc_4A2279: jmp loc_4A2281;");
    asm("loc_4A227B: mov _data_67204C,%esi;");
    asm("loc_4A2281: mov 0x10(%esp),%ecx;");
    asm("loc_4A2285: mov 0x7E0(%ecx),%ecx;");
    asm("loc_4A228B: mov (%ecx),%edx;");
    asm("loc_4A228D: add %edi,%esi;");
    asm("loc_4A228F: calll *(%edx);");
    asm("loc_4A2291: cmp %eax,0x10(%esi);");
    asm("loc_4A2294: jne loc_4A22E3;");
    asm("loc_4A2296: mov 0x28(%esp),%eax;");
    asm("loc_4A229A: mov (%eax),%ecx;");
    asm("loc_4A229C: mov 4(%eax),%edx;");
    asm("loc_4A229F: mov 8(%eax),%eax;");
    asm("loc_4A22A2: mov %ecx,0x18(%esp);");
    asm("loc_4A22A6: flds 0x18(%esp);");
    asm("loc_4A22AA: fsubs (%esi);");
    asm("loc_4A22AC: mov %edx,0x1C(%esp);");
    asm("loc_4A22B0: flds 0x1C(%esp);");
    asm("loc_4A22B4: mov %eax,0x20(%esp);");
    asm("loc_4A22B8: fsubs 4(%esi);");
    asm("loc_4A22BB: flds 0x20(%esp);");
    asm("loc_4A22BF: fsubs 8(%esi);");
    asm("loc_4A22C2: fld %st(2);");
    asm("loc_4A22C4: fmul %st(3),%st;");
    asm("loc_4A22C6: fld %st(1);");
    asm("loc_4A22C8: fmul %st(2),%st;");
    asm("loc_4A22CA: faddp;");
    asm("loc_4A22CC: fld %st(2);");
    asm("loc_4A22CE: fmul %st(3),%st;");
    asm("loc_4A22D0: faddp;");
    asm("loc_4A22D2: fcomps 0x14(%esp);");
    asm("loc_4A22D6: fstp %st(0);");
    asm("loc_4A22D8: fnstsw %ax;");
    asm("loc_4A22DA: fstp %st(0);");
    asm("loc_4A22DC: test $0x41,%ah;");
    asm("loc_4A22DF: fstp %st(0);");
    asm("loc_4A22E1: jnp loc_4A22F8;");
    asm("loc_4A22E3: inc %ebx;");
    asm("loc_4A22E4: add $0x18,%edi;");
    asm("loc_4A22E7: cmp %ebp,%ebx;");
    asm("loc_4A22E9: jl loc_4A227B;");
    asm("loc_4A22EB: pop %edi;");
    asm("loc_4A22EC: pop %esi;");
    asm("loc_4A22ED: pop %ebp;");
    asm("loc_4A22EE: or $0xFFFFFFFF,%eax;");
    asm("loc_4A22F1: pop %ebx;");
    asm("loc_4A22F2: add $0x14,%esp;");
    asm("loc_4A22F5: ret $4;");
    asm("loc_4A22F8: mov 0x14(%esi),%eax;");
    asm("loc_4A22FB: pop %edi;");
    asm("loc_4A22FC: pop %esi;");
    asm("loc_4A22FD: pop %ebp;");
    asm("loc_4A22FE: pop %ebx;");
    asm("loc_4A22FF: add $0x14,%esp;");
    asm("loc_4A2302: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2310() // _sub_4A2310
{
    __DEBUG_ASM(4A2310);
    // chunk 0x4A2310 _sub_4A2310
    asm("loc_4A2310: mov 4(%esp),%eax;");
    asm("loc_4A2314: cmp $0x3FC27,%eax;");
    asm("loc_4A2319: je loc_4A2361;");
    asm("loc_4A231B: cmp $0x3FC2E,%eax;");
    asm("loc_4A2320: je loc_4A2361;");
    asm("loc_4A2322: cmp $0x3FC28,%eax;");
    asm("loc_4A2327: je loc_4A2361;");
    asm("loc_4A2329: cmp $0xEB41,%eax;");
    asm("loc_4A232E: je loc_4A2361;");
    asm("loc_4A2330: test %eax,%eax;");
    asm("loc_4A2332: je loc_4A2361;");
    asm("loc_4A2334: cmp $0xEB3F,%eax;");
    asm("loc_4A2339: je loc_4A2361;");
    asm("loc_4A233B: cmp $0x300EA,%eax;");
    asm("loc_4A2340: je loc_4A2361;");
    asm("loc_4A2342: cmp $0x30052,%eax;");
    asm("loc_4A2347: je loc_4A2361;");
    asm("loc_4A2349: cmp $0x3009C,%eax;");
    asm("loc_4A234E: je loc_4A2361;");
    asm("loc_4A2350: cmp $0x3009D,%eax;");
    asm("loc_4A2355: je loc_4A2361;");
    asm("loc_4A2357: cmp $0x300BF,%eax;");
    asm("loc_4A235C: je loc_4A2361;");
    asm("loc_4A235E: mov $1,%al;");
    asm("loc_4A2360: ret;");
    asm("loc_4A2361: xor %al,%al;");
    asm("loc_4A2363: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2370() // _sub_4A2370
{
    __DEBUG_ASM(4A2370);
    // chunk 0x4A2370 _sub_4A2370
    asm("loc_4A2370: push $0xFFFFFFFF;");
    asm("loc_4A2372: push $_sub_5BCB36;");
    asm("loc_4A2377: mov %fs:0,%eax;");
    asm("loc_4A237D: push %eax;");
    asm("loc_4A237E: mov %esp,%fs:0;");
    asm("loc_4A2385: sub $0x164,%esp;");
    asm("loc_4A238B: push %ebx;");
    asm("loc_4A238C: mov %ecx,%ebx;");
    asm("loc_4A238E: mov 0x1004(%ebx),%al;");
    asm("loc_4A2394: test %al,%al;");
    asm("loc_4A2396: mov %ebx,0x20(%esp);");
    asm("loc_4A239A: jne loc_4A273E;");
    asm("loc_4A23A0: push %esi;");
    asm("loc_4A23A1: lea 0xFD4(%ebx),%ecx;");
    asm("loc_4A23A7: movb $1,0x1004(%ebx);");
    asm("loc_4A23AE: mov 8(%ecx),%eax;");
    asm("loc_4A23B1: mov 4(%ecx),%edx;");
    asm("loc_4A23B4: push %edi;");
    asm("loc_4A23B5: push %eax;");
    asm("loc_4A23B6: push %edx;");
    asm("loc_4A23B7: call _sub_4A2FD0;");
    asm("loc_4A23BC: mov 0xFEC(%ebx),%eax;");
    asm("loc_4A23C2: mov 0xFE8(%ebx),%edx;");
    asm("loc_4A23C8: lea 0xFE4(%ebx),%ecx;");
    asm("loc_4A23CE: push %eax;");
    asm("loc_4A23CF: push %edx;");
    asm("loc_4A23D0: call _sub_4A3240;");
    asm("loc_4A23D5: mov 0xFFC(%ebx),%eax;");
    asm("loc_4A23DB: mov 0xFF8(%ebx),%edx;");
    asm("loc_4A23E1: lea 0xFF4(%ebx),%ecx;");
    asm("loc_4A23E7: push %eax;");
    asm("loc_4A23E8: push %edx;");
    asm("loc_4A23E9: call _sub_4A3240;");
    asm("loc_4A23EE: xor %esi,%esi;");
    asm("loc_4A23F0: mov %esi,0x18(%esp);");
    asm("loc_4A23F4: calll *_import_5C63EC;");
    asm("loc_4A23FA: mov %eax,%edi;");
    asm("loc_4A23FC: cmp %esi,%edi;");
    asm("loc_4A23FE: je loc_4A2733;");
    asm("loc_4A2404: push %ebp;");
    asm("loc_4A2405: movl $0xFFFFFFFF,0x20(%esp);");
    asm("loc_4A240D: lea (%ecx),%ecx;");
    asm("loc_4A2410: mov (%edi),%edx;");
    asm("loc_4A2412: push %esi;");
    asm("loc_4A2413: push %esi;");
    asm("loc_4A2414: lea 0x1B(%esp),%eax;");
    asm("loc_4A2418: push %eax;");
    asm("loc_4A2419: mov %edi,%ecx;");
    asm("loc_4A241B: movb $0,0x1F(%esp);");
    asm("loc_4A2420: calll *(%edx);");
    asm("loc_4A2422: push %eax;");
    asm("loc_4A2423: call _sub_4C4DA0;");
    asm("loc_4A2428: mov (%edi),%eax;");
    asm("loc_4A242A: add $0x10,%esp;");
    asm("loc_4A242D: mov %edi,%ecx;");
    asm("loc_4A242F: calll *0x48(%eax);");
    asm("loc_4A2432: mov 0x13(%esp),%cl;");
    asm("loc_4A2436: or %al,%cl;");
    asm("loc_4A2438: test $1,%cl;");
    asm("loc_4A243B: mov %cl,0x13(%esp);");
    asm("loc_4A243F: je loc_4A2722;");
    asm("loc_4A2445: mov _data_6119F8,%ecx;");
    asm("loc_4A244B: mov (%edi),%edx;");
    asm("loc_4A244D: push %ecx;");
    asm("loc_4A244E: push $_data_66FC60;");
    asm("loc_4A2453: mov %edi,%ecx;");
    asm("loc_4A2455: calll *0xC(%edx);");
    asm("loc_4A2458: push %eax;");
    asm("loc_4A2459: mov _data_67ECA8,%eax;");
    asm("loc_4A245E: push %eax;");
    asm("loc_4A245F: call _sub_4347E0;");
    asm("loc_4A2464: add $0x10,%esp;");
    asm("loc_4A2467: push $0xFFFFFFFF;");
    asm("loc_4A2469: push $_data_66FC60;");
    asm("loc_4A246E: lea 0x2C(%esp),%ecx;");
    asm("loc_4A2472: mov %esi,0x2C(%esp);");
    asm("loc_4A2476: mov %esi,0x30(%esp);");
    asm("loc_4A247A: call _sub_413DF0;");
    asm("loc_4A247F: mov 0xFFC(%ebx),%eax;");
    asm("loc_4A2485: lea 0x24(%esp),%edx;");
    asm("loc_4A2489: push %edx;");
    asm("loc_4A248A: lea 0xFF4(%ebx),%ecx;");
    asm("loc_4A2490: push $1;");
    asm("loc_4A2492: push %eax;");
    asm("loc_4A2493: mov %esi,0x188(%esp);");
    asm("loc_4A249A: call _sub_4A3360;");
    asm("loc_4A249F: mov 0x24(%esp),%eax;");
    asm("loc_4A24A3: cmp %esi,%eax;");
    asm("loc_4A24A5: movl $0xFFFFFFFF,0x17C(%esp);");
    asm("loc_4A24B0: je loc_4A24C4;");
    asm("loc_4A24B2: push %eax;");
    asm("loc_4A24B3: calll *_import_5C71D8;");
    asm("loc_4A24B9: add $4,%esp;");
    asm("loc_4A24BC: mov %esi,0x24(%esp);");
    asm("loc_4A24C0: mov %esi,0x28(%esp);");
    asm("loc_4A24C4: mov 0x20(%esp),%ebp;");
    asm("loc_4A24C8: mov (%edi),%eax;");
    asm("loc_4A24CA: inc %ebp;");
    asm("loc_4A24CB: mov %edi,%ecx;");
    asm("loc_4A24CD: mov %ebp,0x20(%esp);");
    asm("loc_4A24D1: mov %esi,0x5C(%esp);");
    asm("loc_4A24D5: movb $0,0x60(%esp);");
    asm("loc_4A24DA: mov %esi,0xB8(%esp);");
    asm("loc_4A24E1: movb $0,0xBC(%esp);");
    asm("loc_4A24E9: mov %esi,0xE8(%esp);");
    asm("loc_4A24F0: movb $0,0xEC(%esp);");
    asm("loc_4A24F8: mov %esi,0x12C(%esp);");
    asm("loc_4A24FF: movb $0,0x130(%esp);");
    asm("loc_4A2507: calll *0x3C(%eax);");
    asm("loc_4A250A: xor %ecx,%ecx;");
    asm("loc_4A250C: cmp %esi,%eax;");
    asm("loc_4A250E: mov %eax,0x34(%esp);");
    asm("loc_4A2512: mov %ecx,0x30(%esp);");
    asm("loc_4A2516: jbe loc_4A2722;");
    asm("loc_4A251C: lea (%esp),%esp;");
    asm("loc_4A2520: mov (%edi),%edx;");
    asm("loc_4A2522: lea 0x5C(%esp),%eax;");
    asm("loc_4A2526: push %eax;");
    asm("loc_4A2527: push %ecx;");
    asm("loc_4A2528: mov %edi,%ecx;");
    asm("loc_4A252A: calll *0x40(%edx);");
    asm("loc_4A252D: test %al,%al;");
    asm("loc_4A252F: je loc_4A2709;");
    asm("loc_4A2535: cmp %esi,0xE4(%esp);");
    asm("loc_4A253C: je loc_4A2709;");
    asm("loc_4A2542: lea 0x60(%esp),%ecx;");
    asm("loc_4A2546: push %ecx;");
    asm("loc_4A2547: movb $0,0x16(%esp);");
    asm("loc_4A254C: calll *_import_5C6020;");
    asm("loc_4A2552: push %esi;");
    asm("loc_4A2553: push %esi;");
    asm("loc_4A2554: lea 0x1E(%esp),%edx;");
    asm("loc_4A2558: push %edx;");
    asm("loc_4A2559: push %eax;");
    asm("loc_4A255A: call _sub_4C4DA0;");
    asm("loc_4A255F: mov 0x26(%esp),%al;");
    asm("loc_4A2563: or 0x184(%esp),%al;");
    asm("loc_4A256A: add $0x14,%esp;");
    asm("loc_4A256D: test $1,%al;");
    asm("loc_4A256F: mov %al,0x12(%esp);");
    asm("loc_4A2573: je loc_4A2709;");
    asm("loc_4A2579: mov 0xB0(%esp),%eax;");
    asm("loc_4A2580: cmp $0x3FC27,%eax;");
    asm("loc_4A2585: je loc_4A2709;");
    asm("loc_4A258B: cmp $0x3FC2E,%eax;");
    asm("loc_4A2590: je loc_4A2709;");
    asm("loc_4A2596: cmp $0x3FC28,%eax;");
    asm("loc_4A259B: je loc_4A2709;");
    asm("loc_4A25A1: cmp $0xEB41,%eax;");
    asm("loc_4A25A6: je loc_4A2709;");
    asm("loc_4A25AC: cmp %esi,%eax;");
    asm("loc_4A25AE: je loc_4A2709;");
    asm("loc_4A25B4: cmp $0xEB3F,%eax;");
    asm("loc_4A25B9: je loc_4A2709;");
    asm("loc_4A25BF: cmp $0x300EA,%eax;");
    asm("loc_4A25C4: je loc_4A2709;");
    asm("loc_4A25CA: cmp $0x30052,%eax;");
    asm("loc_4A25CF: je loc_4A2709;");
    asm("loc_4A25D5: cmp $0x3009C,%eax;");
    asm("loc_4A25DA: je loc_4A2709;");
    asm("loc_4A25E0: cmp $0x3009D,%eax;");
    asm("loc_4A25E5: je loc_4A2709;");
    asm("loc_4A25EB: cmp $0x300BF,%eax;");
    asm("loc_4A25F0: je loc_4A2709;");
    asm("loc_4A25F6: mov 0xA8(%esp),%eax;");
    asm("loc_4A25FD: mov (%edi),%edx;");
    asm("loc_4A25FF: mov 0x1C(%esp),%esi;");
    asm("loc_4A2603: mov 0xA0(%esp),%ebp;");
    asm("loc_4A260A: mov 0xA4(%esp),%ebx;");
    asm("loc_4A2611: mov %edi,%ecx;");
    asm("loc_4A2613: mov %eax,0x58(%esp);");
    asm("loc_4A2617: calll *(%edx);");
    asm("loc_4A2619: mov %esi,%ecx;");
    asm("loc_4A261B: inc %ecx;");
    asm("loc_4A261C: mov %ecx,0x1C(%esp);");
    asm("loc_4A2620: mov 0x20(%esp),%ecx;");
    asm("loc_4A2624: mov %eax,0x38(%esp);");
    asm("loc_4A2628: mov 0x58(%esp),%eax;");
    asm("loc_4A262C: mov %ebx,0x40(%esp);");
    asm("loc_4A2630: mov 0x2C(%esp),%ebx;");
    asm("loc_4A2634: lea 0x38(%esp),%edx;");
    asm("loc_4A2638: mov %ecx,0x4C(%esp);");
    asm("loc_4A263C: push %edx;");
    asm("loc_4A263D: lea 0xFD4(%ebx),%ecx;");
    asm("loc_4A2643: mov %eax,0x48(%esp);");
    asm("loc_4A2647: mov 8(%ecx),%eax;");
    asm("loc_4A264A: push $1;");
    asm("loc_4A264C: push %eax;");
    asm("loc_4A264D: mov %ebp,0x48(%esp);");
    asm("loc_4A2651: mov %esi,0x54(%esp);");
    asm("loc_4A2655: call _sub_4A3680;");
    asm("loc_4A265A: mov _data_6119F8,%eax;");
    asm("loc_4A265F: mov 0xB0(%esp),%ecx;");
    asm("loc_4A2666: mov _data_67ECA8,%edx;");
    asm("loc_4A266C: push %eax;");
    asm("loc_4A266D: push $_data_66FC60;");
    asm("loc_4A2672: push %ecx;");
    asm("loc_4A2673: push %edx;");
    asm("loc_4A2674: call _sub_4347E0;");
    asm("loc_4A2679: xor %ebp,%ebp;");
    asm("loc_4A267B: push $_data_66FC60;");
    asm("loc_4A2680: mov %ebp,0x28(%esp);");
    asm("loc_4A2684: mov %ebp,0x2C(%esp);");
    asm("loc_4A2688: calll *_import_5C71C8;");
    asm("loc_4A268E: mov %eax,%esi;");
    asm("loc_4A2690: add $0x14,%esp;");
    asm("loc_4A2693: lea 1(%esi),%eax;");
    asm("loc_4A2696: push %eax;");
    asm("loc_4A2697: lea 0x18(%esp),%ecx;");
    asm("loc_4A269B: call _sub_4142A0;");
    asm("loc_4A26A0: mov 0x14(%esp),%ecx;");
    asm("loc_4A26A4: push %esi;");
    asm("loc_4A26A5: push $_data_66FC60;");
    asm("loc_4A26AA: push %ecx;");
    asm("loc_4A26AB: calll *_import_5C71C0;");
    asm("loc_4A26B1: mov 0x20(%esp),%edx;");
    asm("loc_4A26B5: add $0xC,%esp;");
    asm("loc_4A26B8: mov %bp,(%edx,%esi,2);");
    asm("loc_4A26BC: mov 0xFEC(%ebx),%eax;");
    asm("loc_4A26C2: lea 0x14(%esp),%edx;");
    asm("loc_4A26C6: push %edx;");
    asm("loc_4A26C7: lea 0xFE4(%ebx),%ecx;");
    asm("loc_4A26CD: push $1;");
    asm("loc_4A26CF: push %eax;");
    asm("loc_4A26D0: movl $1,0x188(%esp);");
    asm("loc_4A26DB: call _sub_4A3360;");
    asm("loc_4A26E0: mov 0x14(%esp),%eax;");
    asm("loc_4A26E4: cmp %ebp,%eax;");
    asm("loc_4A26E6: movl $0xFFFFFFFF,0x17C(%esp);");
    asm("loc_4A26F1: je loc_4A2707;");
    asm("loc_4A26F3: push %eax;");
    asm("loc_4A26F4: calll *_import_5C71D8;");
    asm("loc_4A26FA: add $4,%esp;");
    asm("loc_4A26FD: xor %eax,%eax;");
    asm("loc_4A26FF: mov %eax,0x14(%esp);");
    asm("loc_4A2703: mov %eax,0x18(%esp);");
    asm("loc_4A2707: xor %esi,%esi;");
    asm("loc_4A2709: mov 0x30(%esp),%ecx;");
    asm("loc_4A270D: mov 0x34(%esp),%eax;");
    asm("loc_4A2711: inc %ecx;");
    asm("loc_4A2712: cmp %eax,%ecx;");
    asm("loc_4A2714: mov %ecx,0x30(%esp);");
    asm("loc_4A2718: jb loc_4A2520;");
    asm("loc_4A271E: mov 0x2C(%esp),%ebx;");
    asm("loc_4A2722: calll *_import_5C63E8;");
    asm("loc_4A2728: mov %eax,%edi;");
    asm("loc_4A272A: cmp %esi,%edi;");
    asm("loc_4A272C: jne loc_4A2410;");
    asm("loc_4A2732: pop %ebp;");
    asm("loc_4A2733: push $1;");
    asm("loc_4A2735: mov %ebx,%ecx;");
    asm("loc_4A2737: call _sub_4A2760;");
    asm("loc_4A273C: pop %edi;");
    asm("loc_4A273D: pop %esi;");
    asm("loc_4A273E: mov 0x168(%esp),%ecx;");
    asm("loc_4A2745: pop %ebx;");
    asm("loc_4A2746: mov %ecx,%fs:0;");
    asm("loc_4A274D: add $0x170,%esp;");
    asm("loc_4A2753: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2760() // _sub_4A2760
{
    __DEBUG_ASM(4A2760);
    // chunk 0x4A2760 _sub_4A2760
    asm("loc_4A2760: sub $0x28,%esp;");
    asm("loc_4A2763: push %ebx;");
    asm("loc_4A2764: mov 0x30(%esp),%bl;");
    asm("loc_4A2768: push %ebp;");
    asm("loc_4A2769: push %esi;");
    asm("loc_4A276A: mov %ecx,%esi;");
    asm("loc_4A276C: mov %bl,0xFD0(%esi);");
    asm("loc_4A2772: mov 0xFD8(%esi),%eax;");
    asm("loc_4A2778: test %eax,%eax;");
    asm("loc_4A277A: push %edi;");
    asm("loc_4A277B: mov %esi,0x1C(%esp);");
    asm("loc_4A277F: jne loc_4A2785;");
    asm("loc_4A2781: xor %edx,%edx;");
    asm("loc_4A2783: jmp loc_4A279E;");
    asm("loc_4A2785: mov 0xFDC(%esi),%ecx;");
    asm("loc_4A278B: sub %eax,%ecx;");
    asm("loc_4A278D: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A2792: imul %ecx;");
    asm("loc_4A2794: sar $2,%edx;");
    asm("loc_4A2797: mov %edx,%eax;");
    asm("loc_4A2799: shr $0x1F,%eax;");
    asm("loc_4A279C: add %eax,%edx;");
    asm("loc_4A279E: test %bl,%bl;");
    asm("loc_4A27A0: lea -1(%edx),%eax;");
    asm("loc_4A27A3: mov %eax,0x14(%esp);");
    asm("loc_4A27A7: je loc_4A2860;");
    asm("loc_4A27AD: jmp loc_4A27B3;");
    asm("loc_4A27AF: mov 0x14(%esp),%eax;");
    asm("loc_4A27B3: test %eax,%eax;");
    asm("loc_4A27B5: movb $1,0x3C(%esp);");
    asm("loc_4A27BA: jle loc_4A2925;");
    asm("loc_4A27C0: xor %edi,%edi;");
    asm("loc_4A27C2: mov %edi,0x10(%esp);");
    asm("loc_4A27C6: mov %eax,0x18(%esp);");
    asm("loc_4A27CA: jmp loc_4A27D0;");
    asm("loc_4A27CC: mov 0x10(%esp),%edi;");
    asm("loc_4A27D0: mov 0xFD8(%esi),%eax;");
    asm("loc_4A27D6: mov 0x28(%edi,%eax),%ecx;");
    asm("loc_4A27DA: mov 0x10(%edi,%eax),%edx;");
    asm("loc_4A27DE: lea 0x18(%edi,%eax),%ebx;");
    asm("loc_4A27E2: lea (%edi,%eax),%ebp;");
    asm("loc_4A27E5: mov 0xFE8(%esi),%eax;");
    asm("loc_4A27EB: mov (%eax,%ecx,8),%ecx;");
    asm("loc_4A27EE: mov (%eax,%edx,8),%eax;");
    asm("loc_4A27F1: push %ecx;");
    asm("loc_4A27F2: push %eax;");
    asm("loc_4A27F3: calll *_import_5C7200;");
    asm("loc_4A27F9: add $8,%esp;");
    asm("loc_4A27FC: test %eax,%eax;");
    asm("loc_4A27FE: jle loc_4A2832;");
    asm("loc_4A2800: mov $6,%ecx;");
    asm("loc_4A2805: mov %ebp,%esi;");
    asm("loc_4A2807: lea 0x20(%esp),%edi;");
    asm("loc_4A280B: rep movsl (%esi),(%edi);");
    asm("loc_4A280D: mov $6,%ecx;");
    asm("loc_4A2812: mov %ebx,%esi;");
    asm("loc_4A2814: mov %ebp,%edi;");
    asm("loc_4A2816: rep movsl (%esi),(%edi);");
    asm("loc_4A2818: mov $6,%ecx;");
    asm("loc_4A281D: lea 0x20(%esp),%esi;");
    asm("loc_4A2821: mov %ebx,%edi;");
    asm("loc_4A2823: rep movsl (%esi),(%edi);");
    asm("loc_4A2825: mov 0x1C(%esp),%esi;");
    asm("loc_4A2829: mov 0x10(%esp),%edi;");
    asm("loc_4A282D: movb $0,0x3C(%esp);");
    asm("loc_4A2832: mov 0x18(%esp),%eax;");
    asm("loc_4A2836: add $0x18,%edi;");
    asm("loc_4A2839: dec %eax;");
    asm("loc_4A283A: mov %edi,0x10(%esp);");
    asm("loc_4A283E: mov %eax,0x18(%esp);");
    asm("loc_4A2842: jne loc_4A27CC;");
    asm("loc_4A2844: mov 0x3C(%esp),%al;");
    asm("loc_4A2848: test %al,%al;");
    asm("loc_4A284A: je loc_4A27AF;");
    asm("loc_4A2850: pop %edi;");
    asm("loc_4A2851: pop %esi;");
    asm("loc_4A2852: pop %ebp;");
    asm("loc_4A2853: pop %ebx;");
    asm("loc_4A2854: add $0x28,%esp;");
    asm("loc_4A2857: ret $4;");
    asm("loc_4A285A: mov 0x14(%esp),%eax;");
    asm("loc_4A285E: mov %edi,%edi;");
    asm("loc_4A2860: test %eax,%eax;");
    asm("loc_4A2862: movb $1,0x3C(%esp);");
    asm("loc_4A2867: jle loc_4A2925;");
    asm("loc_4A286D: xor %edi,%edi;");
    asm("loc_4A286F: mov %edi,0x10(%esp);");
    asm("loc_4A2873: mov %eax,0x18(%esp);");
    asm("loc_4A2877: jmp loc_4A2880;");
    asm("loc_4A2879: mov 0x10(%esp),%edi;");
    asm("loc_4A287D: lea (%ecx),%ecx;");
    asm("loc_4A2880: mov 0xFD8(%esi),%eax;");
    asm("loc_4A2886: mov 0x2C(%edi,%eax),%ecx;");
    asm("loc_4A288A: mov 0x14(%edi,%eax),%edx;");
    asm("loc_4A288E: lea 0x18(%edi,%eax),%ebx;");
    asm("loc_4A2892: lea (%edi,%eax),%ebp;");
    asm("loc_4A2895: mov 0xFF8(%esi),%eax;");
    asm("loc_4A289B: mov (%eax,%ecx,8),%ecx;");
    asm("loc_4A289E: mov (%eax,%edx,8),%eax;");
    asm("loc_4A28A1: push %ecx;");
    asm("loc_4A28A2: push %eax;");
    asm("loc_4A28A3: calll *_import_5C7200;");
    asm("loc_4A28A9: add $8,%esp;");
    asm("loc_4A28AC: test %eax,%eax;");
    asm("loc_4A28AE: jne loc_4A28CF;");
    asm("loc_4A28B0: mov 0xFE8(%esi),%eax;");
    asm("loc_4A28B6: mov 0x10(%ebx),%ecx;");
    asm("loc_4A28B9: mov (%eax,%ecx,8),%ecx;");
    asm("loc_4A28BC: mov 0x10(%ebp),%edx;");
    asm("loc_4A28BF: mov (%eax,%edx,8),%eax;");
    asm("loc_4A28C2: push %ecx;");
    asm("loc_4A28C3: push %eax;");
    asm("loc_4A28C4: calll *_import_5C7200;");
    asm("loc_4A28CA: add $8,%esp;");
    asm("loc_4A28CD: test %eax,%eax;");
    asm("loc_4A28CF: jle loc_4A2903;");
    asm("loc_4A28D1: mov $6,%ecx;");
    asm("loc_4A28D6: mov %ebp,%esi;");
    asm("loc_4A28D8: lea 0x20(%esp),%edi;");
    asm("loc_4A28DC: rep movsl (%esi),(%edi);");
    asm("loc_4A28DE: mov $6,%ecx;");
    asm("loc_4A28E3: mov %ebx,%esi;");
    asm("loc_4A28E5: mov %ebp,%edi;");
    asm("loc_4A28E7: rep movsl (%esi),(%edi);");
    asm("loc_4A28E9: mov $6,%ecx;");
    asm("loc_4A28EE: lea 0x20(%esp),%esi;");
    asm("loc_4A28F2: mov %ebx,%edi;");
    asm("loc_4A28F4: rep movsl (%esi),(%edi);");
    asm("loc_4A28F6: mov 0x10(%esp),%edi;");
    asm("loc_4A28FA: mov 0x1C(%esp),%esi;");
    asm("loc_4A28FE: movb $0,0x3C(%esp);");
    asm("loc_4A2903: mov 0x18(%esp),%eax;");
    asm("loc_4A2907: add $0x18,%edi;");
    asm("loc_4A290A: dec %eax;");
    asm("loc_4A290B: mov %edi,0x10(%esp);");
    asm("loc_4A290F: mov %eax,0x18(%esp);");
    asm("loc_4A2913: jne loc_4A2879;");
    asm("loc_4A2919: mov 0x3C(%esp),%al;");
    asm("loc_4A291D: test %al,%al;");
    asm("loc_4A291F: je loc_4A285A;");
    asm("loc_4A2925: pop %edi;");
    asm("loc_4A2926: pop %esi;");
    asm("loc_4A2927: pop %ebp;");
    asm("loc_4A2928: pop %ebx;");
    asm("loc_4A2929: add $0x28,%esp;");
    asm("loc_4A292C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2930() // _sub_4A2930
{
    __DEBUG_ASM(4A2930);
    // chunk 0x4A2930 _sub_4A2930
    asm("loc_4A2930: sub $0x10,%esp;");
    asm("loc_4A2933: push %ebx;");
    asm("loc_4A2934: push %ebp;");
    asm("loc_4A2935: mov %ecx,%ebp;");
    asm("loc_4A2937: mov 0xFD8(%ebp),%eax;");
    asm("loc_4A293D: test %eax,%eax;");
    asm("loc_4A293F: push %esi;");
    asm("loc_4A2940: push %edi;");
    asm("loc_4A2941: jne loc_4A2947;");
    asm("loc_4A2943: xor %edx,%edx;");
    asm("loc_4A2945: jmp loc_4A2960;");
    asm("loc_4A2947: mov 0xFDC(%ebp),%ecx;");
    asm("loc_4A294D: sub %eax,%ecx;");
    asm("loc_4A294F: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A2954: imul %ecx;");
    asm("loc_4A2956: sar $2,%edx;");
    asm("loc_4A2959: mov %edx,%eax;");
    asm("loc_4A295B: shr $0x1F,%eax;");
    asm("loc_4A295E: add %eax,%edx;");
    asm("loc_4A2960: mov 0x1008(%ebp),%edi;");
    asm("loc_4A2966: lea (%edi,%edi,2),%ecx;");
    asm("loc_4A2969: shl $3,%ecx;");
    asm("loc_4A296C: mov %edx,0x10(%esp);");
    asm("loc_4A2970: mov %edi,0x14(%esp);");
    asm("loc_4A2974: mov %ecx,0x18(%esp);");
    asm("loc_4A2978: lea 0xF88(%ebp),%esi;");
    asm("loc_4A297E: movl $0xF,0x1C(%esp);");
    asm("loc_4A2986: mov $3,%bl;");
    asm("loc_4A2988: cmp %edx,%edi;");
    asm("loc_4A298A: mov -0x3C(%esi),%eax;");
    asm("loc_4A298D: jl loc_4A299B;");
    asm("loc_4A298F: andb $0xFC,0x6C(%eax);");
    asm("loc_4A2993: mov (%esi),%eax;");
    asm("loc_4A2995: andb $0xFC,0x6C(%eax);");
    asm("loc_4A2999: jmp loc_4A29F1;");
    asm("loc_4A299B: or %bl,0x6C(%eax);");
    asm("loc_4A299E: mov (%esi),%eax;");
    asm("loc_4A29A0: or %bl,0x6C(%eax);");
    asm("loc_4A29A3: mov 0xFD8(%ebp),%edi;");
    asm("loc_4A29A9: mov 0x10(%edi,%ecx),%eax;");
    asm("loc_4A29AD: mov 0xFE8(%ebp),%ebx;");
    asm("loc_4A29B3: mov (%ebx,%eax,8),%eax;");
    asm("loc_4A29B6: add %ecx,%edi;");
    asm("loc_4A29B8: mov -0x3C(%esi),%ecx;");
    asm("loc_4A29BB: mov (%ecx),%edx;");
    asm("loc_4A29BD: push $0;");
    asm("loc_4A29BF: push %eax;");
    asm("loc_4A29C0: push $0x1D;");
    asm("loc_4A29C2: calll *0xA8(%edx);");
    asm("loc_4A29C8: mov 0x14(%edi),%eax;");
    asm("loc_4A29CB: mov 0xFF8(%ebp),%edi;");
    asm("loc_4A29D1: mov (%edi,%eax,8),%eax;");
    asm("loc_4A29D4: mov (%esi),%ecx;");
    asm("loc_4A29D6: mov (%ecx),%edx;");
    asm("loc_4A29D8: push $0;");
    asm("loc_4A29DA: push %eax;");
    asm("loc_4A29DB: push $0x1D;");
    asm("loc_4A29DD: calll *0xA8(%edx);");
    asm("loc_4A29E3: mov 0x14(%esp),%edi;");
    asm("loc_4A29E7: mov 0x18(%esp),%ecx;");
    asm("loc_4A29EB: mov 0x10(%esp),%edx;");
    asm("loc_4A29EF: mov $3,%bl;");
    asm("loc_4A29F1: mov 0x1C(%esp),%eax;");
    asm("loc_4A29F5: inc %edi;");
    asm("loc_4A29F6: add $0x18,%ecx;");
    asm("loc_4A29F9: add $4,%esi;");
    asm("loc_4A29FC: dec %eax;");
    asm("loc_4A29FD: mov %edi,0x14(%esp);");
    asm("loc_4A2A01: mov %ecx,0x18(%esp);");
    asm("loc_4A2A05: mov %eax,0x1C(%esp);");
    asm("loc_4A2A09: jne loc_4A2988;");
    asm("loc_4A2A0F: mov 0xFC4(%ebp),%ecx;");
    asm("loc_4A2A15: lea -0xF(%edx),%esi;");
    asm("loc_4A2A18: test %esi,%esi;");
    asm("loc_4A2A1A: push $0;");
    asm("loc_4A2A1C: jg loc_4A2A40;");
    asm("loc_4A2A1E: mov (%ecx),%edx;");
    asm("loc_4A2A20: push $1;");
    asm("loc_4A2A22: push $2;");
    asm("loc_4A2A24: calll *0xA8(%edx);");
    asm("loc_4A2A2A: mov 0xFC4(%ebp),%ebp;");
    asm("loc_4A2A30: mov 0x6C(%ebp),%al;");
    asm("loc_4A2A33: pop %edi;");
    asm("loc_4A2A34: and $0xFD,%al;");
    asm("loc_4A2A36: pop %esi;");
    asm("loc_4A2A37: mov %al,0x6C(%ebp);");
    asm("loc_4A2A3A: pop %ebp;");
    asm("loc_4A2A3B: pop %ebx;");
    asm("loc_4A2A3C: add $0x10,%esp;");
    asm("loc_4A2A3F: ret;");
    asm("loc_4A2A40: mov (%ecx),%eax;");
    asm("loc_4A2A42: push $0;");
    asm("loc_4A2A44: push $2;");
    asm("loc_4A2A46: calll *0xA8(%eax);");
    asm("loc_4A2A4C: mov 0xFC4(%ebp),%eax;");
    asm("loc_4A2A52: mov 0x6C(%eax),%bl;");
    asm("loc_4A2A55: add $2,%esi;");
    asm("loc_4A2A58: or $2,%bl;");
    asm("loc_4A2A5B: push %esi;");
    asm("loc_4A2A5C: mov %bl,0x6C(%eax);");
    asm("loc_4A2A5F: mov 0xFC4(%ebp),%ebp;");
    asm("loc_4A2A65: mov (%ebp),%edx;");
    asm("loc_4A2A68: push $0;");
    asm("loc_4A2A6A: push $0x37;");
    asm("loc_4A2A6C: mov %ebp,%ecx;");
    asm("loc_4A2A6E: calll *0xA8(%edx);");
    asm("loc_4A2A74: pop %edi;");
    asm("loc_4A2A75: pop %esi;");
    asm("loc_4A2A76: pop %ebp;");
    asm("loc_4A2A77: pop %ebx;");
    asm("loc_4A2A78: add $0x10,%esp;");
    asm("loc_4A2A7B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2A80() // _sub_4A2A80
{
    __DEBUG_ASM(4A2A80);
    // chunk 0x4A2A80 _sub_4A2A80
    asm("loc_4A2A80: mov _data_6720C4,%eax;");
    asm("loc_4A2A85: test %eax,%eax;");
    asm("loc_4A2A87: je loc_4A2A95;");
    asm("loc_4A2A89: push $0;");
    asm("loc_4A2A8B: push $0x63;");
    asm("loc_4A2A8D: call _sub_5763B0;");
    asm("loc_4A2A92: add $8,%esp;");
    asm("loc_4A2A95: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2AA0() // _sub_4A2AA0
{
    __DEBUG_ASM(4A2AA0);
    // chunk 0x4A2AA0 _sub_4A2AA0
    asm("loc_4A2AA0: mov 8(%esp),%al;");
    asm("loc_4A2AA4: sub $0xD28,%esp;");
    asm("loc_4A2AAA: test %al,%al;");
    asm("loc_4A2AAC: push %ebx;");
    asm("loc_4A2AAD: push %ebp;");
    asm("loc_4A2AAE: push %esi;");
    asm("loc_4A2AAF: push %edi;");
    asm("loc_4A2AB0: je loc_4A2B51;");
    asm("loc_4A2AB6: calll *_import_5C63EC;");
    asm("loc_4A2ABC: mov %eax,%ebx;");
    asm("loc_4A2ABE: test %ebx,%ebx;");
    asm("loc_4A2AC0: je loc_4A2C43;");
    asm("loc_4A2AC6: mov (%ebx),%eax;");
    asm("loc_4A2AC8: mov %ebx,%ecx;");
    asm("loc_4A2ACA: calll *0x18(%eax);");
    asm("loc_4A2ACD: mov %eax,0x10(%esp);");
    asm("loc_4A2AD1: mov 4(%eax),%eax;");
    asm("loc_4A2AD4: mov (%eax),%ebp;");
    asm("loc_4A2AD6: cmp %eax,%ebp;");
    asm("loc_4A2AD8: je loc_4A2B14;");
    asm("loc_4A2ADA: lea (%ebx),%ebx;");
    asm("loc_4A2AE0: lea 8(%ebp),%esi;");
    asm("loc_4A2AE3: mov $0x303,%ecx;");
    asm("loc_4A2AE8: lea 0x12C(%esp),%edi;");
    asm("loc_4A2AEF: rep movsl (%esi),(%edi);");
    asm("loc_4A2AF1: mov 0xD34(%esp),%esi;");
    asm("loc_4A2AF8: mov (%esi),%edx;");
    asm("loc_4A2AFA: mov %esi,%ecx;");
    asm("loc_4A2AFC: calll *4(%edx);");
    asm("loc_4A2AFF: cmp 0xD3C(%esp),%eax;");
    asm("loc_4A2B06: je loc_4A2B2B;");
    asm("loc_4A2B08: mov 0x10(%esp),%eax;");
    asm("loc_4A2B0C: mov (%ebp),%ebp;");
    asm("loc_4A2B0F: cmp 4(%eax),%ebp;");
    asm("loc_4A2B12: jne loc_4A2AE0;");
    asm("loc_4A2B14: calll *_import_5C63E8;");
    asm("loc_4A2B1A: mov %eax,%ebx;");
    asm("loc_4A2B1C: test %ebx,%ebx;");
    asm("loc_4A2B1E: jne loc_4A2AC6;");
    asm("loc_4A2B20: pop %edi;");
    asm("loc_4A2B21: pop %esi;");
    asm("loc_4A2B22: pop %ebp;");
    asm("loc_4A2B23: pop %ebx;");
    asm("loc_4A2B24: add $0xD28,%esp;");
    asm("loc_4A2B2A: ret;");
    asm("loc_4A2B2B: mov (%esi),%edx;");
    asm("loc_4A2B2D: mov %esi,%ecx;");
    asm("loc_4A2B2F: calll *0x10(%edx);");
    asm("loc_4A2B32: mov (%eax),%esi;");
    asm("loc_4A2B34: mov 4(%eax),%edi;");
    asm("loc_4A2B37: mov 8(%eax),%ebp;");
    asm("loc_4A2B3A: mov (%ebx),%eax;");
    asm("loc_4A2B3C: mov %ebx,%ecx;");
    asm("loc_4A2B3E: calll *(%eax);");
    asm("loc_4A2B40: mov %esi,_data_672084;");
    asm("loc_4A2B46: mov %edi,_data_672088;");
    asm("loc_4A2B4C: jmp loc_4A2C31;");
    asm("loc_4A2B51: calll *_import_5C63EC;");
    asm("loc_4A2B57: mov %eax,%esi;");
    asm("loc_4A2B59: xor %edi,%edi;");
    asm("loc_4A2B5B: cmp %edi,%esi;");
    asm("loc_4A2B5D: je loc_4A2C43;");
    asm("loc_4A2B63: mov (%esi),%edx;");
    asm("loc_4A2B65: mov %esi,%ecx;");
    asm("loc_4A2B67: calll *(%edx);");
    asm("loc_4A2B69: cmp 0xD3C(%esp),%eax;");
    asm("loc_4A2B70: mov %esi,%ecx;");
    asm("loc_4A2B72: je loc_4A2BFF;");
    asm("loc_4A2B78: mov (%esi),%eax;");
    asm("loc_4A2B7A: mov %edi,0x14(%esp);");
    asm("loc_4A2B7E: movb $0,0x18(%esp);");
    asm("loc_4A2B83: mov %edi,0x70(%esp);");
    asm("loc_4A2B87: movb $0,0x74(%esp);");
    asm("loc_4A2B8C: mov %edi,0xA0(%esp);");
    asm("loc_4A2B93: movb $0,0xA4(%esp);");
    asm("loc_4A2B9B: mov %edi,0xE4(%esp);");
    asm("loc_4A2BA2: movb $0,0xE8(%esp);");
    asm("loc_4A2BAA: calll *0x3C(%eax);");
    asm("loc_4A2BAD: mov %eax,%ebx;");
    asm("loc_4A2BAF: cmp %edi,%ebx;");
    asm("loc_4A2BB1: jbe loc_4A2BE4;");
    asm("loc_4A2BB3: mov (%esi),%edx;");
    asm("loc_4A2BB5: lea 0x14(%esp),%eax;");
    asm("loc_4A2BB9: push %eax;");
    asm("loc_4A2BBA: push %edi;");
    asm("loc_4A2BBB: mov %esi,%ecx;");
    asm("loc_4A2BBD: calll *0x40(%edx);");
    asm("loc_4A2BC0: test %al,%al;");
    asm("loc_4A2BC2: je loc_4A2BDD;");
    asm("loc_4A2BC4: lea 0x18(%esp),%ecx;");
    asm("loc_4A2BC8: push %ecx;");
    asm("loc_4A2BC9: calll *_import_5C6020;");
    asm("loc_4A2BCF: mov 0xD40(%esp),%ecx;");
    asm("loc_4A2BD6: add $4,%esp;");
    asm("loc_4A2BD9: cmp %ecx,%eax;");
    asm("loc_4A2BDB: je loc_4A2C13;");
    asm("loc_4A2BDD: inc %edi;");
    asm("loc_4A2BDE: cmp %ebx,%edi;");
    asm("loc_4A2BE0: jb loc_4A2BB3;");
    asm("loc_4A2BE2: xor %edi,%edi;");
    asm("loc_4A2BE4: calll *_import_5C63E8;");
    asm("loc_4A2BEA: mov %eax,%esi;");
    asm("loc_4A2BEC: cmp %edi,%esi;");
    asm("loc_4A2BEE: jne loc_4A2B63;");
    asm("loc_4A2BF4: pop %edi;");
    asm("loc_4A2BF5: pop %esi;");
    asm("loc_4A2BF6: pop %ebp;");
    asm("loc_4A2BF7: pop %ebx;");
    asm("loc_4A2BF8: add $0xD28,%esp;");
    asm("loc_4A2BFE: ret;");
    asm("loc_4A2BFF: mov (%esi),%edx;");
    asm("loc_4A2C01: calll *(%edx);");
    asm("loc_4A2C03: pop %edi;");
    asm("loc_4A2C04: pop %esi;");
    asm("loc_4A2C05: pop %ebp;");
    asm("loc_4A2C06: mov %eax,_data_6720C4;");
    asm("loc_4A2C0B: pop %ebx;");
    asm("loc_4A2C0C: add $0xD28,%esp;");
    asm("loc_4A2C12: ret;");
    asm("loc_4A2C13: mov (%esi),%eax;");
    asm("loc_4A2C15: mov 0x58(%esp),%edi;");
    asm("loc_4A2C19: mov 0x5C(%esp),%ebx;");
    asm("loc_4A2C1D: mov 0x60(%esp),%ebp;");
    asm("loc_4A2C21: mov %esi,%ecx;");
    asm("loc_4A2C23: calll *(%eax);");
    asm("loc_4A2C25: mov %edi,_data_672084;");
    asm("loc_4A2C2B: mov %ebx,_data_672088;");
    asm("loc_4A2C31: mov %ebp,_data_67208C;");
    asm("loc_4A2C37: movb $1,_data_6720C8;");
    asm("loc_4A2C3E: mov %eax,_data_6720C4;");
    asm("loc_4A2C43: pop %edi;");
    asm("loc_4A2C44: pop %esi;");
    asm("loc_4A2C45: pop %ebp;");
    asm("loc_4A2C46: pop %ebx;");
    asm("loc_4A2C47: add $0xD28,%esp;");
    asm("loc_4A2C4D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2C50() // _sub_4A2C50
{
    __DEBUG_ASM(4A2C50);
    // chunk 0x4A2C50 _sub_4A2C50
    asm("loc_4A2C50: push $_data_5CB130;");
    asm("loc_4A2C55: call _sub_59DA10;");
    asm("loc_4A2C5A: add $4,%esp;");
    asm("loc_4A2C5D: test %eax,%eax;");
    asm("loc_4A2C5F: setne %al;");
    asm("loc_4A2C62: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2C70() // _sub_4A2C70
{
    __DEBUG_ASM(4A2C70);
    // chunk 0x4A2C70 _sub_4A2C70
    asm("loc_4A2C70: sub $8,%esp;");
    asm("loc_4A2C73: push %ebx;");
    asm("loc_4A2C74: push %ebp;");
    asm("loc_4A2C75: push %esi;");
    asm("loc_4A2C76: mov %ecx,%esi;");
    asm("loc_4A2C78: mov 0x10(%esi),%ecx;");
    asm("loc_4A2C7B: push %edi;");
    asm("loc_4A2C7C: mov 4(%esi),%edi;");
    asm("loc_4A2C7F: mov (%edi),%eax;");
    asm("loc_4A2C81: xor %ebp,%ebp;");
    asm("loc_4A2C83: cmp %ebp,%ecx;");
    asm("loc_4A2C85: mov %eax,0x10(%esp);");
    asm("loc_4A2C89: je loc_4A2CE1;");
    asm("loc_4A2C8B: mov %eax,%ecx;");
    asm("loc_4A2C8D: cmp %ecx,%eax;");
    asm("loc_4A2C8F: jne loc_4A2CE1;");
    asm("loc_4A2C91: mov 4(%edi),%ebx;");
    asm("loc_4A2C94: cmp 8(%esi),%ebx;");
    asm("loc_4A2C97: mov %ebx,%edi;");
    asm("loc_4A2C99: je loc_4A2CC8;");
    asm("loc_4A2C9B: nop;");
    asm("loc_4A2C9C: lea (%esp),%esp;");
    asm("loc_4A2CA0: mov 8(%edi),%eax;");
    asm("loc_4A2CA3: push %eax;");
    asm("loc_4A2CA4: mov %esi,%ecx;");
    asm("loc_4A2CA6: call _sub_420BE0;");
    asm("loc_4A2CAB: mov (%edi),%edi;");
    asm("loc_4A2CAD: push %ebp;");
    asm("loc_4A2CAE: lea 0xC(%ebx),%ecx;");
    asm("loc_4A2CB1: call _sub_420C90;");
    asm("loc_4A2CB6: push %ebx;");
    asm("loc_4A2CB7: call _sub_5B7E1D;");
    asm("loc_4A2CBC: mov 8(%esi),%eax;");
    asm("loc_4A2CBF: add $4,%esp;");
    asm("loc_4A2CC2: cmp %eax,%edi;");
    asm("loc_4A2CC4: mov %edi,%ebx;");
    asm("loc_4A2CC6: jne loc_4A2CA0;");
    asm("loc_4A2CC8: mov 4(%esi),%ecx;");
    asm("loc_4A2CCB: mov 8(%esi),%edx;");
    asm("loc_4A2CCE: mov %edx,4(%ecx);");
    asm("loc_4A2CD1: mov 4(%esi),%eax;");
    asm("loc_4A2CD4: mov %ebp,0x10(%esi);");
    asm("loc_4A2CD7: mov %eax,(%eax);");
    asm("loc_4A2CD9: mov 4(%esi),%eax;");
    asm("loc_4A2CDC: mov %eax,8(%eax);");
    asm("loc_4A2CDF: jmp loc_4A2D05;");
    asm("loc_4A2CE1: cmp %edi,%eax;");
    asm("loc_4A2CE3: je loc_4A2D05;");
    asm("loc_4A2CE5: lea 0x10(%esp),%ecx;");
    asm("loc_4A2CE9: mov %eax,%ebx;");
    asm("loc_4A2CEB: call _sub_420C40;");
    asm("loc_4A2CF0: push %ebx;");
    asm("loc_4A2CF1: lea 0x18(%esp),%eax;");
    asm("loc_4A2CF5: push %eax;");
    asm("loc_4A2CF6: mov %esi,%ecx;");
    asm("loc_4A2CF8: call _sub_420800;");
    asm("loc_4A2CFD: mov 0x10(%esp),%eax;");
    asm("loc_4A2D01: cmp %edi,%eax;");
    asm("loc_4A2D03: jne loc_4A2CE5;");
    asm("loc_4A2D05: mov 4(%esi),%ecx;");
    asm("loc_4A2D08: push %ecx;");
    asm("loc_4A2D09: call _sub_5B7E1D;");
    asm("loc_4A2D0E: mov 8(%esi),%edx;");
    asm("loc_4A2D11: push %edx;");
    asm("loc_4A2D12: mov %ebp,4(%esi);");
    asm("loc_4A2D15: mov %ebp,0x10(%esi);");
    asm("loc_4A2D18: call _sub_5B7E1D;");
    asm("loc_4A2D1D: add $8,%esp;");
    asm("loc_4A2D20: pop %edi;");
    asm("loc_4A2D21: mov %ebp,8(%esi);");
    asm("loc_4A2D24: pop %esi;");
    asm("loc_4A2D25: pop %ebp;");
    asm("loc_4A2D26: pop %ebx;");
    asm("loc_4A2D27: add $8,%esp;");
    asm("loc_4A2D2A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2D30() // _sub_4A2D30
{
    __DEBUG_ASM(4A2D30);
    // chunk 0x4A2D30 _sub_4A2D30
    asm("loc_4A2D30: push %ebx;");
    asm("loc_4A2D31: push %esi;");
    asm("loc_4A2D32: push %edi;");
    asm("loc_4A2D33: mov %ecx,%edi;");
    asm("loc_4A2D35: mov 4(%edi),%ebx;");
    asm("loc_4A2D38: mov (%ebx),%esi;");
    asm("loc_4A2D3A: cmp %ebx,%esi;");
    asm("loc_4A2D3C: je loc_4A2D67;");
    asm("loc_4A2D3E: mov %edi,%edi;");
    asm("loc_4A2D40: mov %esi,%eax;");
    asm("loc_4A2D42: mov 4(%eax),%ecx;");
    asm("loc_4A2D45: mov (%eax),%edx;");
    asm("loc_4A2D47: mov (%esi),%esi;");
    asm("loc_4A2D49: mov %edx,(%ecx);");
    asm("loc_4A2D4B: mov (%eax),%ecx;");
    asm("loc_4A2D4D: mov 4(%eax),%edx;");
    asm("loc_4A2D50: push %eax;");
    asm("loc_4A2D51: mov %edx,4(%ecx);");
    asm("loc_4A2D54: call _sub_5B7E1D;");
    asm("loc_4A2D59: mov 8(%edi),%ecx;");
    asm("loc_4A2D5C: add $4,%esp;");
    asm("loc_4A2D5F: dec %ecx;");
    asm("loc_4A2D60: cmp %ebx,%esi;");
    asm("loc_4A2D62: mov %ecx,8(%edi);");
    asm("loc_4A2D65: jne loc_4A2D40;");
    asm("loc_4A2D67: mov 4(%edi),%eax;");
    asm("loc_4A2D6A: push %eax;");
    asm("loc_4A2D6B: call _sub_5B7E1D;");
    asm("loc_4A2D70: add $4,%esp;");
    asm("loc_4A2D73: xor %eax,%eax;");
    asm("loc_4A2D75: mov %eax,4(%edi);");
    asm("loc_4A2D78: mov %eax,8(%edi);");
    asm("loc_4A2D7B: pop %edi;");
    asm("loc_4A2D7C: pop %esi;");
    asm("loc_4A2D7D: pop %ebx;");
    asm("loc_4A2D7E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2D80() // _sub_4A2D80
{
    __DEBUG_ASM(4A2D80);
    // chunk 0x4A2D80 _sub_4A2D80
    asm("loc_4A2D80: push %ebx;");
    asm("loc_4A2D81: push %ebp;");
    asm("loc_4A2D82: push %esi;");
    asm("loc_4A2D83: push %edi;");
    asm("loc_4A2D84: mov %ecx,%edi;");
    asm("loc_4A2D86: mov 8(%edi),%ebx;");
    asm("loc_4A2D89: mov 4(%edi),%esi;");
    asm("loc_4A2D8C: xor %ebp,%ebp;");
    asm("loc_4A2D8E: cmp %ebx,%esi;");
    asm("loc_4A2D90: je loc_4A2DAE;");
    asm("loc_4A2D92: mov (%esi),%eax;");
    asm("loc_4A2D94: cmp %ebp,%eax;");
    asm("loc_4A2D96: je loc_4A2DA7;");
    asm("loc_4A2D98: push %eax;");
    asm("loc_4A2D99: calll *_import_5C71D8;");
    asm("loc_4A2D9F: add $4,%esp;");
    asm("loc_4A2DA2: mov %ebp,(%esi);");
    asm("loc_4A2DA4: mov %ebp,4(%esi);");
    asm("loc_4A2DA7: add $8,%esi;");
    asm("loc_4A2DAA: cmp %ebx,%esi;");
    asm("loc_4A2DAC: jne loc_4A2D92;");
    asm("loc_4A2DAE: mov 4(%edi),%eax;");
    asm("loc_4A2DB1: push %eax;");
    asm("loc_4A2DB2: call _sub_5B7E1D;");
    asm("loc_4A2DB7: add $4,%esp;");
    asm("loc_4A2DBA: mov %ebp,4(%edi);");
    asm("loc_4A2DBD: mov %ebp,8(%edi);");
    asm("loc_4A2DC0: mov %ebp,0xC(%edi);");
    asm("loc_4A2DC3: pop %edi;");
    asm("loc_4A2DC4: pop %esi;");
    asm("loc_4A2DC5: pop %ebp;");
    asm("loc_4A2DC6: pop %ebx;");
    asm("loc_4A2DC7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2DD0() // _sub_4A2DD0
{
    __DEBUG_ASM(4A2DD0);
    // chunk 0x4A2DD0 _sub_4A2DD0
    asm("loc_4A2DD0: push %ebx;");
    asm("loc_4A2DD1: mov %ecx,%ebx;");
    asm("loc_4A2DD3: xor %eax,%eax;");
    asm("loc_4A2DD5: push %esi;");
    asm("loc_4A2DD6: mov 0xC(%esp),%esi;");
    asm("loc_4A2DDA: cmp %eax,%esi;");
    asm("loc_4A2DDC: mov %eax,8(%ebx);");
    asm("loc_4A2DDF: mov %al,0xC(%ebx);");
    asm("loc_4A2DE2: movl $_off_5CB554,(%ebx);");
    asm("loc_4A2DE8: mov %eax,4(%ebx);");
    asm("loc_4A2DEB: jne loc_4A2DF2;");
    asm("loc_4A2DED: mov %al,0xC(%ebx);");
    asm("loc_4A2DF0: jmp loc_4A2E27;");
    asm("loc_4A2DF2: push %ebp;");
    asm("loc_4A2DF3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A2DF6: xor %eax,%eax;");
    asm("loc_4A2DF8: push %edi;");
    asm("loc_4A2DF9: mov %esi,%edi;");
    asm("loc_4A2DFB: repne scas (%edi),%al;");
    asm("loc_4A2DFD: not %ecx;");
    asm("loc_4A2DFF: dec %ecx;");
    asm("loc_4A2E00: mov %ecx,%eax;");
    asm("loc_4A2E02: cmp $0x20,%eax;");
    asm("loc_4A2E05: lea 0xC(%ebx),%ebp;");
    asm("loc_4A2E08: jb loc_4A2E0F;");
    asm("loc_4A2E0A: mov $0x1F,%eax;");
    asm("loc_4A2E0F: mov %eax,%ecx;");
    asm("loc_4A2E11: mov %ecx,%edx;");
    asm("loc_4A2E13: shr $2,%ecx;");
    asm("loc_4A2E16: mov %ebp,%edi;");
    asm("loc_4A2E18: rep movsl (%esi),(%edi);");
    asm("loc_4A2E1A: mov %edx,%ecx;");
    asm("loc_4A2E1C: and $3,%ecx;");
    asm("loc_4A2E1F: rep movsb (%esi),(%edi);");
    asm("loc_4A2E21: pop %edi;");
    asm("loc_4A2E22: movb $0,(%eax,%ebp);");
    asm("loc_4A2E26: pop %ebp;");
    asm("loc_4A2E27: push %ebx;");
    asm("loc_4A2E28: mov %eax,8(%ebx);");
    asm("loc_4A2E2B: call _sub_59DAB0;");
    asm("loc_4A2E30: add $4,%esp;");
    asm("loc_4A2E33: pop %esi;");
    asm("loc_4A2E34: movl $_off_5D3FA0,(%ebx);");
    asm("loc_4A2E3A: mov %ebx,%eax;");
    asm("loc_4A2E3C: pop %ebx;");
    asm("loc_4A2E3D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2E40() // _sub_4A2E40
{
    __DEBUG_ASM(4A2E40);
    // chunk 0x4A2E40 _sub_4A2E40
    asm("loc_4A2E40: push $0xFFFFFFFF;");
    asm("loc_4A2E42: push $_sub_5BCB4B;");
    asm("loc_4A2E47: mov %fs:0,%eax;");
    asm("loc_4A2E4D: push %eax;");
    asm("loc_4A2E4E: mov %esp,%fs:0;");
    asm("loc_4A2E55: push %ecx;");
    asm("loc_4A2E56: push %esi;");
    asm("loc_4A2E57: push %edi;");
    asm("loc_4A2E58: push $0x100C;");
    asm("loc_4A2E5D: mov %ecx,%edi;");
    asm("loc_4A2E5F: call _sub_5B7E84;");
    asm("loc_4A2E64: add $4,%esp;");
    asm("loc_4A2E67: mov %eax,8(%esp);");
    asm("loc_4A2E6B: test %eax,%eax;");
    asm("loc_4A2E6D: movl $0,0x14(%esp);");
    asm("loc_4A2E75: je loc_4A2E82;");
    asm("loc_4A2E77: mov %eax,%ecx;");
    asm("loc_4A2E79: call _sub_48DE20;");
    asm("loc_4A2E7E: mov %eax,%esi;");
    asm("loc_4A2E80: jmp loc_4A2E84;");
    asm("loc_4A2E82: xor %esi,%esi;");
    asm("loc_4A2E84: mov 0x20(%esp),%ecx;");
    asm("loc_4A2E88: mov 0x1C(%esp),%edx;");
    asm("loc_4A2E8C: mov (%esi),%eax;");
    asm("loc_4A2E8E: push %ecx;");
    asm("loc_4A2E8F: add $0xC,%edi;");
    asm("loc_4A2E92: push %edx;");
    asm("loc_4A2E93: mov %esi,%ecx;");
    asm("loc_4A2E95: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4A2E9D: mov %edi,0x10(%esi);");
    asm("loc_4A2EA0: calll *0x24(%eax);");
    asm("loc_4A2EA3: test %al,%al;");
    asm("loc_4A2EA5: jne loc_4A2EC4;");
    asm("loc_4A2EA7: mov (%esi),%eax;");
    asm("loc_4A2EA9: push $1;");
    asm("loc_4A2EAB: mov %esi,%ecx;");
    asm("loc_4A2EAD: calll *(%eax);");
    asm("loc_4A2EAF: pop %edi;");
    asm("loc_4A2EB0: xor %eax,%eax;");
    asm("loc_4A2EB2: pop %esi;");
    asm("loc_4A2EB3: mov 4(%esp),%ecx;");
    asm("loc_4A2EB7: mov %ecx,%fs:0;");
    asm("loc_4A2EBE: add $0x10,%esp;");
    asm("loc_4A2EC1: ret $8;");
    asm("loc_4A2EC4: mov 0xC(%esp),%ecx;");
    asm("loc_4A2EC8: pop %edi;");
    asm("loc_4A2EC9: mov %esi,%eax;");
    asm("loc_4A2ECB: pop %esi;");
    asm("loc_4A2ECC: mov %ecx,%fs:0;");
    asm("loc_4A2ED3: add $0x10,%esp;");
    asm("loc_4A2ED6: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2EE0() // _sub_4A2EE0
{
    __DEBUG_ASM(4A2EE0);
    // chunk 0x4A2EE0 _sub_4A2EE0
    asm("loc_4A2EE0: mov 4(%ecx),%eax;");
    asm("loc_4A2EE3: test %eax,%eax;");
    asm("loc_4A2EE5: jne loc_4A2EE8;");
    asm("loc_4A2EE7: ret;");
    asm("loc_4A2EE8: mov 8(%ecx),%ecx;");
    asm("loc_4A2EEB: sub %eax,%ecx;");
    asm("loc_4A2EED: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A2EF2: imul %ecx;");
    asm("loc_4A2EF4: sar $2,%edx;");
    asm("loc_4A2EF7: mov %edx,%eax;");
    asm("loc_4A2EF9: shr $0x1F,%eax;");
    asm("loc_4A2EFC: add %eax,%edx;");
    asm("loc_4A2EFE: mov %edx,%eax;");
    asm("loc_4A2F00: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2F10() // _sub_4A2F10
{
    __DEBUG_ASM(4A2F10);
    // chunk 0x4A2F10 _sub_4A2F10
    asm("loc_4A2F10: mov 8(%esp),%eax;");
    asm("loc_4A2F14: mov 4(%esp),%edx;");
    asm("loc_4A2F18: push %ebx;");
    asm("loc_4A2F19: push %esi;");
    asm("loc_4A2F1A: mov %ecx,%esi;");
    asm("loc_4A2F1C: mov (%eax),%cl;");
    asm("loc_4A2F1E: mov %cl,(%esi);");
    asm("loc_4A2F20: mov (%edx),%al;");
    asm("loc_4A2F22: push %edi;");
    asm("loc_4A2F23: xor %ebx,%ebx;");
    asm("loc_4A2F25: push $0x5C;");
    asm("loc_4A2F27: mov %al,1(%esi);");
    asm("loc_4A2F2A: mov %bl,0xC(%esi);");
    asm("loc_4A2F2D: call _sub_5B7E84;");
    asm("loc_4A2F32: mov %ebx,4(%eax);");
    asm("loc_4A2F35: mov %bl,0x59(%eax);");
    asm("loc_4A2F38: mov $1,%cl;");
    asm("loc_4A2F3A: mov %cl,0x58(%eax);");
    asm("loc_4A2F3D: mov %eax,8(%esi);");
    asm("loc_4A2F40: mov %cl,0x59(%eax);");
    asm("loc_4A2F43: mov 8(%esi),%ecx;");
    asm("loc_4A2F46: mov %ebx,(%ecx);");
    asm("loc_4A2F48: mov 8(%esi),%edx;");
    asm("loc_4A2F4B: mov %ebx,8(%edx);");
    asm("loc_4A2F4E: mov 8(%esi),%edi;");
    asm("loc_4A2F51: push $0x5C;");
    asm("loc_4A2F53: call _sub_5B7E84;");
    asm("loc_4A2F58: mov %edi,4(%eax);");
    asm("loc_4A2F5B: mov %bl,0x58(%eax);");
    asm("loc_4A2F5E: mov %bl,0x59(%eax);");
    asm("loc_4A2F61: mov %eax,4(%esi);");
    asm("loc_4A2F64: mov %eax,(%eax);");
    asm("loc_4A2F66: mov 4(%esi),%eax;");
    asm("loc_4A2F69: add $8,%esp;");
    asm("loc_4A2F6C: mov %eax,8(%eax);");
    asm("loc_4A2F6F: pop %edi;");
    asm("loc_4A2F70: mov %ebx,0x10(%esi);");
    asm("loc_4A2F73: mov %esi,%eax;");
    asm("loc_4A2F75: pop %esi;");
    asm("loc_4A2F76: pop %ebx;");
    asm("loc_4A2F77: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2F80() // _sub_4A2F80
{
    __DEBUG_ASM(4A2F80);
    // chunk 0x4A2F80 _sub_4A2F80
    asm("loc_4A2F80: push %ebx;");
    asm("loc_4A2F81: mov 0x10(%esp),%ebx;");
    asm("loc_4A2F85: push %esi;");
    asm("loc_4A2F86: mov 0x10(%esp),%esi;");
    asm("loc_4A2F8A: cmp %ebx,%esi;");
    asm("loc_4A2F8C: push %edi;");
    asm("loc_4A2F8D: mov %ecx,%edi;");
    asm("loc_4A2F8F: je loc_4A2FB8;");
    asm("loc_4A2F91: mov %esi,%eax;");
    asm("loc_4A2F93: mov 4(%eax),%ecx;");
    asm("loc_4A2F96: mov (%eax),%edx;");
    asm("loc_4A2F98: mov (%esi),%esi;");
    asm("loc_4A2F9A: mov %edx,(%ecx);");
    asm("loc_4A2F9C: mov (%eax),%ecx;");
    asm("loc_4A2F9E: mov 4(%eax),%edx;");
    asm("loc_4A2FA1: push %eax;");
    asm("loc_4A2FA2: mov %edx,4(%ecx);");
    asm("loc_4A2FA5: call _sub_5B7E1D;");
    asm("loc_4A2FAA: mov 8(%edi),%ecx;");
    asm("loc_4A2FAD: add $4,%esp;");
    asm("loc_4A2FB0: dec %ecx;");
    asm("loc_4A2FB1: cmp %ebx,%esi;");
    asm("loc_4A2FB3: mov %ecx,8(%edi);");
    asm("loc_4A2FB6: jne loc_4A2F91;");
    asm("loc_4A2FB8: mov 0x10(%esp),%eax;");
    asm("loc_4A2FBC: pop %edi;");
    asm("loc_4A2FBD: mov %esi,(%eax);");
    asm("loc_4A2FBF: pop %esi;");
    asm("loc_4A2FC0: pop %ebx;");
    asm("loc_4A2FC1: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A2FD0() // _sub_4A2FD0
{
    __DEBUG_ASM(4A2FD0);
    // chunk 0x4A2FD0 _sub_4A2FD0
    asm("loc_4A2FD0: mov 8(%esp),%edx;");
    asm("loc_4A2FD4: push %ebx;");
    asm("loc_4A2FD5: mov 8(%esp),%ebx;");
    asm("loc_4A2FD9: mov %ecx,%eax;");
    asm("loc_4A2FDB: push %ebp;");
    asm("loc_4A2FDC: mov 8(%eax),%ebp;");
    asm("loc_4A2FDF: cmp %ebp,%edx;");
    asm("loc_4A2FE1: je loc_4A3008;");
    asm("loc_4A2FE3: push %esi;");
    asm("loc_4A2FE4: push %edi;");
    asm("loc_4A2FE5: mov %edx,%esi;");
    asm("loc_4A2FE7: mov %ebx,%edi;");
    asm("loc_4A2FE9: add $0x18,%edx;");
    asm("loc_4A2FEC: mov $6,%ecx;");
    asm("loc_4A2FF1: add $0x18,%ebx;");
    asm("loc_4A2FF4: cmp %ebp,%edx;");
    asm("loc_4A2FF6: rep movsl (%esi),(%edi);");
    asm("loc_4A2FF8: jne loc_4A2FE5;");
    asm("loc_4A2FFA: pop %edi;");
    asm("loc_4A2FFB: pop %esi;");
    asm("loc_4A2FFC: mov %ebx,8(%eax);");
    asm("loc_4A2FFF: mov 0xC(%esp),%eax;");
    asm("loc_4A3003: pop %ebp;");
    asm("loc_4A3004: pop %ebx;");
    asm("loc_4A3005: ret $8;");
    asm("loc_4A3008: mov %ebx,8(%eax);");
    asm("loc_4A300B: pop %ebp;");
    asm("loc_4A300C: mov %ebx,%eax;");
    asm("loc_4A300E: pop %ebx;");
    asm("loc_4A300F: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3020() // _sub_4A3020
{
    __DEBUG_ASM(4A3020);
    // chunk 0x4A3020 _sub_4A3020
    asm("loc_4A3020: sub $8,%esp;");
    asm("loc_4A3023: push %ebx;");
    asm("loc_4A3024: push %ebp;");
    asm("loc_4A3025: push %esi;");
    asm("loc_4A3026: mov %ecx,%esi;");
    asm("loc_4A3028: mov 4(%esi),%ebp;");
    asm("loc_4A302B: mov 0xC(%esi),%ebx;");
    asm("loc_4A302E: push %edi;");
    asm("loc_4A302F: mov 0x1C(%esp),%edi;");
    asm("loc_4A3033: mov %edi,%ecx;");
    asm("loc_4A3035: sub %ebp,%ecx;");
    asm("loc_4A3037: mov $0x84210843,%eax;");
    asm("loc_4A303C: imul %ecx;");
    asm("loc_4A303E: add %ecx,%edx;");
    asm("loc_4A3040: mov 8(%esi),%ecx;");
    asm("loc_4A3043: sar $6,%edx;");
    asm("loc_4A3046: mov %edx,%eax;");
    asm("loc_4A3048: shr $0x1F,%eax;");
    asm("loc_4A304B: add %eax,%edx;");
    asm("loc_4A304D: mov %edx,0x14(%esp);");
    asm("loc_4A3051: sub %ecx,%ebx;");
    asm("loc_4A3053: mov $0x84210843,%eax;");
    asm("loc_4A3058: imul %ebx;");
    asm("loc_4A305A: add %ebx,%edx;");
    asm("loc_4A305C: sar $6,%edx;");
    asm("loc_4A305F: mov %edx,%eax;");
    asm("loc_4A3061: shr $0x1F,%eax;");
    asm("loc_4A3064: add %eax,%edx;");
    asm("loc_4A3066: cmp $1,%edx;");
    asm("loc_4A3069: jae loc_4A3152;");
    asm("loc_4A306F: test %ebp,%ebp;");
    asm("loc_4A3071: je loc_4A3091;");
    asm("loc_4A3073: mov %ecx,%ebx;");
    asm("loc_4A3075: sub %ebp,%ebx;");
    asm("loc_4A3077: mov $0x84210843,%eax;");
    asm("loc_4A307C: imul %ebx;");
    asm("loc_4A307E: add %ebx,%edx;");
    asm("loc_4A3080: sar $6,%edx;");
    asm("loc_4A3083: mov %edx,%eax;");
    asm("loc_4A3085: shr $0x1F,%eax;");
    asm("loc_4A3088: add %eax,%edx;");
    asm("loc_4A308A: cmp $1,%edx;");
    asm("loc_4A308D: mov %edx,%ebx;");
    asm("loc_4A308F: ja loc_4A3096;");
    asm("loc_4A3091: mov $1,%ebx;");
    asm("loc_4A3096: test %ebp,%ebp;");
    asm("loc_4A3098: jne loc_4A309E;");
    asm("loc_4A309A: xor %edx,%edx;");
    asm("loc_4A309C: jmp loc_4A30B3;");
    asm("loc_4A309E: sub %ebp,%ecx;");
    asm("loc_4A30A0: mov $0x84210843,%eax;");
    asm("loc_4A30A5: imul %ecx;");
    asm("loc_4A30A7: add %ecx,%edx;");
    asm("loc_4A30A9: sar $6,%edx;");
    asm("loc_4A30AC: mov %edx,%ecx;");
    asm("loc_4A30AE: shr $0x1F,%ecx;");
    asm("loc_4A30B1: add %ecx,%edx;");
    asm("loc_4A30B3: lea (%edx,%ebx),%eax;");
    asm("loc_4A30B6: test %eax,%eax;");
    asm("loc_4A30B8: mov %eax,0x1C(%esp);");
    asm("loc_4A30BC: jge loc_4A30C0;");
    asm("loc_4A30BE: xor %eax,%eax;");
    asm("loc_4A30C0: imul $0x7C,%eax;");
    asm("loc_4A30C3: push %eax;");
    asm("loc_4A30C4: call _sub_5B7E84;");
    asm("loc_4A30C9: mov 4(%esi),%ebx;");
    asm("loc_4A30CC: add $4,%esp;");
    asm("loc_4A30CF: cmp %edi,%ebx;");
    asm("loc_4A30D1: mov %eax,0x10(%esp);");
    asm("loc_4A30D5: mov %eax,%ebp;");
    asm("loc_4A30D7: je loc_4A30F4;");
    asm("loc_4A30D9: lea (%esp),%esp;");
    asm("loc_4A30E0: push %ebx;");
    asm("loc_4A30E1: push %ebp;");
    asm("loc_4A30E2: call _sub_4A3EA0;");
    asm("loc_4A30E7: add $0x7C,%ebx;");
    asm("loc_4A30EA: add $8,%esp;");
    asm("loc_4A30ED: add $0x7C,%ebp;");
    asm("loc_4A30F0: cmp %edi,%ebx;");
    asm("loc_4A30F2: jne loc_4A30E0;");
    asm("loc_4A30F4: mov 0x20(%esp),%edx;");
    asm("loc_4A30F8: push %edx;");
    asm("loc_4A30F9: push %ebp;");
    asm("loc_4A30FA: call _sub_4A3EA0;");
    asm("loc_4A30FF: mov 8(%esi),%eax;");
    asm("loc_4A3102: add $8,%esp;");
    asm("loc_4A3105: add $0x7C,%ebp;");
    asm("loc_4A3108: push %ebp;");
    asm("loc_4A3109: push %eax;");
    asm("loc_4A310A: push %edi;");
    asm("loc_4A310B: mov %esi,%ecx;");
    asm("loc_4A310D: call _sub_4A39A0;");
    asm("loc_4A3112: mov 8(%esi),%ecx;");
    asm("loc_4A3115: mov 4(%esi),%edx;");
    asm("loc_4A3118: push %ecx;");
    asm("loc_4A3119: push %edx;");
    asm("loc_4A311A: mov %esi,%ecx;");
    asm("loc_4A311C: call _sub_53AAA0;");
    asm("loc_4A3121: mov 4(%esi),%eax;");
    asm("loc_4A3124: push %eax;");
    asm("loc_4A3125: call _sub_5B7E1D;");
    asm("loc_4A312A: mov 0x20(%esp),%eax;");
    asm("loc_4A312E: mov 0x14(%esp),%edi;");
    asm("loc_4A3132: imul $0x7C,%eax;");
    asm("loc_4A3135: add %edi,%eax;");
    asm("loc_4A3137: add $4,%esp;");
    asm("loc_4A313A: mov %esi,%ecx;");
    asm("loc_4A313C: mov %eax,0xC(%esi);");
    asm("loc_4A313F: call _sub_4A3210;");
    asm("loc_4A3144: inc %eax;");
    asm("loc_4A3145: imul $0x7C,%eax;");
    asm("loc_4A3148: add %edi,%eax;");
    asm("loc_4A314A: mov %edi,4(%esi);");
    asm("loc_4A314D: jmp loc_4A31ED;");
    asm("loc_4A3152: mov %ecx,%ebx;");
    asm("loc_4A3154: sub %edi,%ebx;");
    asm("loc_4A3156: mov $0x84210843,%eax;");
    asm("loc_4A315B: imul %ebx;");
    asm("loc_4A315D: add %ebx,%edx;");
    asm("loc_4A315F: sar $6,%edx;");
    asm("loc_4A3162: mov %edx,%eax;");
    asm("loc_4A3164: shr $0x1F,%eax;");
    asm("loc_4A3167: add %eax,%edx;");
    asm("loc_4A3169: cmp $1,%edx;");
    asm("loc_4A316C: jae loc_4A31BA;");
    asm("loc_4A316E: lea 0x7C(%edi),%edx;");
    asm("loc_4A3171: push %edx;");
    asm("loc_4A3172: push %ecx;");
    asm("loc_4A3173: push %edi;");
    asm("loc_4A3174: mov %esi,%ecx;");
    asm("loc_4A3176: call _sub_4A39A0;");
    asm("loc_4A317B: mov 8(%esi),%ebx;");
    asm("loc_4A317E: mov 0x20(%esp),%ebp;");
    asm("loc_4A3182: mov %ebx,%ecx;");
    asm("loc_4A3184: sub %edi,%ecx;");
    asm("loc_4A3186: mov $0x84210843,%eax;");
    asm("loc_4A318B: imul %ecx;");
    asm("loc_4A318D: add %ecx,%edx;");
    asm("loc_4A318F: sar $6,%edx;");
    asm("loc_4A3192: mov %edx,%eax;");
    asm("loc_4A3194: shr $0x1F,%eax;");
    asm("loc_4A3197: add %eax,%edx;");
    asm("loc_4A3199: push %ebp;");
    asm("loc_4A319A: mov $1,%ecx;");
    asm("loc_4A319F: sub %edx,%ecx;");
    asm("loc_4A31A1: push %ecx;");
    asm("loc_4A31A2: push %ebx;");
    asm("loc_4A31A3: mov %esi,%ecx;");
    asm("loc_4A31A5: call _sub_4A39E0;");
    asm("loc_4A31AA: mov 8(%esi),%edx;");
    asm("loc_4A31AD: push %ebp;");
    asm("loc_4A31AE: push %edx;");
    asm("loc_4A31AF: push %edi;");
    asm("loc_4A31B0: call _sub_4A3C20;");
    asm("loc_4A31B5: add $0xC,%esp;");
    asm("loc_4A31B8: jmp loc_4A31E7;");
    asm("loc_4A31BA: push %ecx;");
    asm("loc_4A31BB: push %ecx;");
    asm("loc_4A31BC: add $0xFFFFFF84,%ecx;");
    asm("loc_4A31BF: push %ecx;");
    asm("loc_4A31C0: mov %esi,%ecx;");
    asm("loc_4A31C2: call _sub_4A39A0;");
    asm("loc_4A31C7: mov 8(%esi),%eax;");
    asm("loc_4A31CA: push %eax;");
    asm("loc_4A31CB: add $0xFFFFFF84,%eax;");
    asm("loc_4A31CE: push %eax;");
    asm("loc_4A31CF: push %edi;");
    asm("loc_4A31D0: call _sub_4A3D60;");
    asm("loc_4A31D5: mov 0x2C(%esp),%eax;");
    asm("loc_4A31D9: push %eax;");
    asm("loc_4A31DA: lea 0x7C(%edi),%ecx;");
    asm("loc_4A31DD: push %ecx;");
    asm("loc_4A31DE: push %edi;");
    asm("loc_4A31DF: call _sub_4A3C20;");
    asm("loc_4A31E4: add $0x18,%esp;");
    asm("loc_4A31E7: mov 8(%esi),%eax;");
    asm("loc_4A31EA: add $0x7C,%eax;");
    asm("loc_4A31ED: mov 4(%esi),%ecx;");
    asm("loc_4A31F0: mov %eax,8(%esi);");
    asm("loc_4A31F3: mov 0x14(%esp),%eax;");
    asm("loc_4A31F7: imul $0x7C,%eax;");
    asm("loc_4A31FA: pop %edi;");
    asm("loc_4A31FB: pop %esi;");
    asm("loc_4A31FC: pop %ebp;");
    asm("loc_4A31FD: add %ecx,%eax;");
    asm("loc_4A31FF: pop %ebx;");
    asm("loc_4A3200: add $8,%esp;");
    asm("loc_4A3203: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3210() // _sub_4A3210
{
    __DEBUG_ASM(4A3210);
    // chunk 0x4A3210 _sub_4A3210
    asm("loc_4A3210: mov 4(%ecx),%eax;");
    asm("loc_4A3213: test %eax,%eax;");
    asm("loc_4A3215: jne loc_4A3218;");
    asm("loc_4A3217: ret;");
    asm("loc_4A3218: mov 8(%ecx),%ecx;");
    asm("loc_4A321B: sub %eax,%ecx;");
    asm("loc_4A321D: mov $0x84210843,%eax;");
    asm("loc_4A3222: imul %ecx;");
    asm("loc_4A3224: add %ecx,%edx;");
    asm("loc_4A3226: sar $6,%edx;");
    asm("loc_4A3229: mov %edx,%eax;");
    asm("loc_4A322B: shr $0x1F,%eax;");
    asm("loc_4A322E: add %eax,%edx;");
    asm("loc_4A3230: mov %edx,%eax;");
    asm("loc_4A3232: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3240() // _sub_4A3240
{
    __DEBUG_ASM(4A3240);
    // chunk 0x4A3240 _sub_4A3240
    asm("loc_4A3240: sub $8,%esp;");
    asm("loc_4A3243: mov 0xC(%esp),%eax;");
    asm("loc_4A3247: push %ebx;");
    asm("loc_4A3248: mov %ecx,%ebx;");
    asm("loc_4A324A: mov 8(%ebx),%edx;");
    asm("loc_4A324D: mov 0x14(%esp),%ecx;");
    asm("loc_4A3251: cmp %edx,%ecx;");
    asm("loc_4A3253: push %ebp;");
    asm("loc_4A3254: push %esi;");
    asm("loc_4A3255: push %edi;");
    asm("loc_4A3256: mov %ebx,0x10(%esp);");
    asm("loc_4A325A: mov %edx,0x14(%esp);");
    asm("loc_4A325E: mov %eax,%esi;");
    asm("loc_4A3260: je loc_4A3303;");
    asm("loc_4A3266: sub %eax,%ecx;");
    asm("loc_4A3268: mov %ecx,0x20(%esp);");
    asm("loc_4A326C: lea (%esp),%esp;");
    asm("loc_4A3270: mov (%ecx,%esi),%ebp;");
    asm("loc_4A3273: test %ebp,%ebp;");
    asm("loc_4A3275: je loc_4A32DC;");
    asm("loc_4A3277: push %ebp;");
    asm("loc_4A3278: calll *_import_5C71C8;");
    asm("loc_4A327E: mov %eax,%ebx;");
    asm("loc_4A3280: mov 4(%esi),%eax;");
    asm("loc_4A3283: lea 1(%ebx),%edi;");
    asm("loc_4A3286: add $4,%esp;");
    asm("loc_4A3289: cmp %eax,%edi;");
    asm("loc_4A328B: jbe loc_4A32BC;");
    asm("loc_4A328D: mov (%esi),%eax;");
    asm("loc_4A328F: test %eax,%eax;");
    asm("loc_4A3291: je loc_4A32A5;");
    asm("loc_4A3293: lea (%edi,%edi),%ecx;");
    asm("loc_4A3296: push %ecx;");
    asm("loc_4A3297: push %eax;");
    asm("loc_4A3298: calll *_import_5C71BC;");
    asm("loc_4A329E: add $8,%esp;");
    asm("loc_4A32A1: mov %eax,(%esi);");
    asm("loc_4A32A3: jmp loc_4A32B9;");
    asm("loc_4A32A5: lea (%edi,%edi),%edx;");
    asm("loc_4A32A8: push %edx;");
    asm("loc_4A32A9: calll *_import_5C71CC;");
    asm("loc_4A32AF: mov %eax,(%esi);");
    asm("loc_4A32B1: add $4,%esp;");
    asm("loc_4A32B4: movw $0,(%eax);");
    asm("loc_4A32B9: mov %edi,4(%esi);");
    asm("loc_4A32BC: mov (%esi),%eax;");
    asm("loc_4A32BE: push %ebx;");
    asm("loc_4A32BF: push %ebp;");
    asm("loc_4A32C0: push %eax;");
    asm("loc_4A32C1: calll *_import_5C71C0;");
    asm("loc_4A32C7: mov (%esi),%ecx;");
    asm("loc_4A32C9: mov 0x20(%esp),%edx;");
    asm("loc_4A32CD: movw $0,(%ecx,%ebx,2);");
    asm("loc_4A32D3: mov 0x2C(%esp),%ecx;");
    asm("loc_4A32D7: add $0xC,%esp;");
    asm("loc_4A32DA: jmp loc_4A32ED;");
    asm("loc_4A32DC: mov (%esi),%eax;");
    asm("loc_4A32DE: test %eax,%eax;");
    asm("loc_4A32E0: je loc_4A32ED;");
    asm("loc_4A32E2: cmpw $0,(%eax);");
    asm("loc_4A32E6: je loc_4A32ED;");
    asm("loc_4A32E8: movw $0,(%eax);");
    asm("loc_4A32ED: add $8,%esi;");
    asm("loc_4A32F0: lea (%ecx,%esi),%eax;");
    asm("loc_4A32F3: cmp %edx,%eax;");
    asm("loc_4A32F5: jne loc_4A3270;");
    asm("loc_4A32FB: mov 0x1C(%esp),%eax;");
    asm("loc_4A32FF: mov 0x10(%esp),%ebx;");
    asm("loc_4A3303: mov 8(%ebx),%ebp;");
    asm("loc_4A3306: cmp %ebp,%esi;");
    asm("loc_4A3308: mov %esi,%edi;");
    asm("loc_4A330A: je loc_4A3347;");
    asm("loc_4A330C: mov _import_5C71D8,%ebx;");
    asm("loc_4A3312: mov (%edi),%eax;");
    asm("loc_4A3314: test %eax,%eax;");
    asm("loc_4A3316: je loc_4A332B;");
    asm("loc_4A3318: push %eax;");
    asm("loc_4A3319: call *%ebx;");
    asm("loc_4A331B: add $4,%esp;");
    asm("loc_4A331E: movl $0,(%edi);");
    asm("loc_4A3324: movl $0,4(%edi);");
    asm("loc_4A332B: add $8,%edi;");
    asm("loc_4A332E: cmp %ebp,%edi;");
    asm("loc_4A3330: jne loc_4A3312;");
    asm("loc_4A3332: mov 0x10(%esp),%ecx;");
    asm("loc_4A3336: mov 0x1C(%esp),%eax;");
    asm("loc_4A333A: pop %edi;");
    asm("loc_4A333B: mov %esi,8(%ecx);");
    asm("loc_4A333E: pop %esi;");
    asm("loc_4A333F: pop %ebp;");
    asm("loc_4A3340: pop %ebx;");
    asm("loc_4A3341: add $8,%esp;");
    asm("loc_4A3344: ret $8;");
    asm("loc_4A3347: pop %edi;");
    asm("loc_4A3348: mov %esi,8(%ebx);");
    asm("loc_4A334B: pop %esi;");
    asm("loc_4A334C: pop %ebp;");
    asm("loc_4A334D: pop %ebx;");
    asm("loc_4A334E: add $8,%esp;");
    asm("loc_4A3351: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3360() // _sub_4A3360
{
    __DEBUG_ASM(4A3360);
    // chunk 0x4A3360 _sub_4A3360
    asm("loc_4A3360: sub $0xC,%esp;");
    asm("loc_4A3363: mov 0xC(%ecx),%eax;");
    asm("loc_4A3366: push %ebx;");
    asm("loc_4A3367: mov 0x18(%esp),%ebx;");
    asm("loc_4A336B: push %ebp;");
    asm("loc_4A336C: push %esi;");
    asm("loc_4A336D: mov 8(%ecx),%esi;");
    asm("loc_4A3370: sub %esi,%eax;");
    asm("loc_4A3372: sar $3,%eax;");
    asm("loc_4A3375: cmp %ebx,%eax;");
    asm("loc_4A3377: push %edi;");
    asm("loc_4A3378: mov %ecx,0x10(%esp);");
    asm("loc_4A337C: jae loc_4A34BB;");
    asm("loc_4A3382: mov 4(%ecx),%ecx;");
    asm("loc_4A3385: test %ecx,%ecx;");
    asm("loc_4A3387: je loc_4A3394;");
    asm("loc_4A3389: mov %esi,%eax;");
    asm("loc_4A338B: sub %ecx,%eax;");
    asm("loc_4A338D: sar $3,%eax;");
    asm("loc_4A3390: cmp %eax,%ebx;");
    asm("loc_4A3392: jb loc_4A3396;");
    asm("loc_4A3394: mov %ebx,%eax;");
    asm("loc_4A3396: test %ecx,%ecx;");
    asm("loc_4A3398: jne loc_4A339E;");
    asm("loc_4A339A: xor %esi,%esi;");
    asm("loc_4A339C: jmp loc_4A33A3;");
    asm("loc_4A339E: sub %ecx,%esi;");
    asm("loc_4A33A0: sar $3,%esi;");
    asm("loc_4A33A3: add %esi,%eax;");
    asm("loc_4A33A5: test %eax,%eax;");
    asm("loc_4A33A7: mov %eax,0x18(%esp);");
    asm("loc_4A33AB: jge loc_4A33AF;");
    asm("loc_4A33AD: xor %eax,%eax;");
    asm("loc_4A33AF: lea (,%eax,8),%ecx;");
    asm("loc_4A33B6: push %ecx;");
    asm("loc_4A33B7: call _sub_5B7E84;");
    asm("loc_4A33BC: mov 0x14(%esp),%ebp;");
    asm("loc_4A33C0: mov 4(%ebp),%esi;");
    asm("loc_4A33C3: mov 0x24(%esp),%ebx;");
    asm("loc_4A33C7: add $4,%esp;");
    asm("loc_4A33CA: cmp %ebx,%esi;");
    asm("loc_4A33CC: mov %eax,0x14(%esp);");
    asm("loc_4A33D0: mov %eax,%edi;");
    asm("loc_4A33D2: je loc_4A33E8;");
    asm("loc_4A33D4: push %esi;");
    asm("loc_4A33D5: push %edi;");
    asm("loc_4A33D6: call _sub_4A3EC0;");
    asm("loc_4A33DB: add $8,%esi;");
    asm("loc_4A33DE: add $8,%esp;");
    asm("loc_4A33E1: add $8,%edi;");
    asm("loc_4A33E4: cmp %ebx,%esi;");
    asm("loc_4A33E6: jne loc_4A33D4;");
    asm("loc_4A33E8: mov 0x24(%esp),%eax;");
    asm("loc_4A33EC: test %eax,%eax;");
    asm("loc_4A33EE: mov %edi,%esi;");
    asm("loc_4A33F0: jbe loc_4A3416;");
    asm("loc_4A33F2: mov %eax,0x20(%esp);");
    asm("loc_4A33F6: mov 0x28(%esp),%edx;");
    asm("loc_4A33FA: push %edx;");
    asm("loc_4A33FB: push %esi;");
    asm("loc_4A33FC: call _sub_4A3EC0;");
    asm("loc_4A3401: mov 0x28(%esp),%eax;");
    asm("loc_4A3405: add $8,%esp;");
    asm("loc_4A3408: add $8,%esi;");
    asm("loc_4A340B: dec %eax;");
    asm("loc_4A340C: mov %eax,0x20(%esp);");
    asm("loc_4A3410: jne loc_4A33F6;");
    asm("loc_4A3412: mov 0x24(%esp),%eax;");
    asm("loc_4A3416: lea (%edi,%eax,8),%eax;");
    asm("loc_4A3419: mov 8(%ebp),%edi;");
    asm("loc_4A341C: cmp %edi,%ebx;");
    asm("loc_4A341E: mov %ebx,%esi;");
    asm("loc_4A3420: je loc_4A3443;");
    asm("loc_4A3422: sub %ebx,%eax;");
    asm("loc_4A3424: mov %eax,0x20(%esp);");
    asm("loc_4A3428: jmp loc_4A3430;");
    asm("loc_4A342A: mov 0x20(%esp),%eax;");
    asm("loc_4A342E: mov %edi,%edi;");
    asm("loc_4A3430: add %esi,%eax;");
    asm("loc_4A3432: push %esi;");
    asm("loc_4A3433: push %eax;");
    asm("loc_4A3434: call _sub_4A3EC0;");
    asm("loc_4A3439: add $8,%esi;");
    asm("loc_4A343C: add $8,%esp;");
    asm("loc_4A343F: cmp %edi,%esi;");
    asm("loc_4A3441: jne loc_4A342A;");
    asm("loc_4A3443: mov 8(%ebp),%edi;");
    asm("loc_4A3446: mov 4(%ebp),%esi;");
    asm("loc_4A3449: cmp %edi,%esi;");
    asm("loc_4A344B: je loc_4A345E;");
    asm("loc_4A344D: lea (%ecx),%ecx;");
    asm("loc_4A3450: mov %esi,%ecx;");
    asm("loc_4A3452: call _sub_444E20;");
    asm("loc_4A3457: add $8,%esi;");
    asm("loc_4A345A: cmp %edi,%esi;");
    asm("loc_4A345C: jne loc_4A3450;");
    asm("loc_4A345E: mov 4(%ebp),%eax;");
    asm("loc_4A3461: push %eax;");
    asm("loc_4A3462: call _sub_5B7E1D;");
    asm("loc_4A3467: mov 0x1C(%esp),%ecx;");
    asm("loc_4A346B: mov 0x18(%esp),%edx;");
    asm("loc_4A346F: lea (%edx,%ecx,8),%eax;");
    asm("loc_4A3472: mov 4(%ebp),%ecx;");
    asm("loc_4A3475: add $4,%esp;");
    asm("loc_4A3478: test %ecx,%ecx;");
    asm("loc_4A347A: mov %eax,0xC(%ebp);");
    asm("loc_4A347D: jne loc_4A349A;");
    asm("loc_4A347F: mov 0x24(%esp),%ecx;");
    asm("loc_4A3483: xor %eax,%eax;");
    asm("loc_4A3485: pop %edi;");
    asm("loc_4A3486: mov %ecx,%eax;");
    asm("loc_4A3488: lea (%edx,%eax,8),%eax;");
    asm("loc_4A348B: pop %esi;");
    asm("loc_4A348C: mov %eax,8(%ebp);");
    asm("loc_4A348F: mov %edx,4(%ebp);");
    asm("loc_4A3492: pop %ebp;");
    asm("loc_4A3493: pop %ebx;");
    asm("loc_4A3494: add $0xC,%esp;");
    asm("loc_4A3497: ret $0xC;");
    asm("loc_4A349A: mov 8(%ebp),%eax;");
    asm("loc_4A349D: sub %ecx,%eax;");
    asm("loc_4A349F: mov 0x24(%esp),%ecx;");
    asm("loc_4A34A3: sar $3,%eax;");
    asm("loc_4A34A6: pop %edi;");
    asm("loc_4A34A7: add %ecx,%eax;");
    asm("loc_4A34A9: lea (%edx,%eax,8),%eax;");
    asm("loc_4A34AC: pop %esi;");
    asm("loc_4A34AD: mov %eax,8(%ebp);");
    asm("loc_4A34B0: mov %edx,4(%ebp);");
    asm("loc_4A34B3: pop %ebp;");
    asm("loc_4A34B4: pop %ebx;");
    asm("loc_4A34B5: add $0xC,%esp;");
    asm("loc_4A34B8: ret $0xC;");
    asm("loc_4A34BB: mov 0x20(%esp),%ebp;");
    asm("loc_4A34BF: mov %esi,%edx;");
    asm("loc_4A34C1: sub %ebp,%edx;");
    asm("loc_4A34C3: sar $3,%edx;");
    asm("loc_4A34C6: cmp %ebx,%edx;");
    asm("loc_4A34C8: jae loc_4A356D;");
    asm("loc_4A34CE: lea (,%ebx,8),%eax;");
    asm("loc_4A34D5: mov %eax,0x24(%esp);");
    asm("loc_4A34D9: add %ebp,%eax;");
    asm("loc_4A34DB: cmp %esi,%ebp;");
    asm("loc_4A34DD: mov %ebp,%edi;");
    asm("loc_4A34DF: je loc_4A3507;");
    asm("loc_4A34E1: sub %ebp,%eax;");
    asm("loc_4A34E3: mov %eax,0x20(%esp);");
    asm("loc_4A34E7: jmp loc_4A34F0;");
    asm("loc_4A34E9: mov 0x20(%esp),%eax;");
    asm("loc_4A34ED: lea (%ecx),%ecx;");
    asm("loc_4A34F0: add %edi,%eax;");
    asm("loc_4A34F2: push %edi;");
    asm("loc_4A34F3: push %eax;");
    asm("loc_4A34F4: call _sub_4A3EC0;");
    asm("loc_4A34F9: add $8,%edi;");
    asm("loc_4A34FC: add $8,%esp;");
    asm("loc_4A34FF: cmp %esi,%edi;");
    asm("loc_4A3501: jne loc_4A34E9;");
    asm("loc_4A3503: mov 0x10(%esp),%ecx;");
    asm("loc_4A3507: mov 8(%ecx),%esi;");
    asm("loc_4A350A: mov 0x28(%esp),%edi;");
    asm("loc_4A350E: mov %esi,%eax;");
    asm("loc_4A3510: sub %ebp,%eax;");
    asm("loc_4A3512: sar $3,%eax;");
    asm("loc_4A3515: sub %eax,%ebx;");
    asm("loc_4A3517: je loc_4A3534;");
    asm("loc_4A3519: lea (%esp),%esp;");
    asm("loc_4A3520: push %edi;");
    asm("loc_4A3521: push %esi;");
    asm("loc_4A3522: call _sub_4A3EC0;");
    asm("loc_4A3527: add $8,%esp;");
    asm("loc_4A352A: add $8,%esi;");
    asm("loc_4A352D: dec %ebx;");
    asm("loc_4A352E: jne loc_4A3520;");
    asm("loc_4A3530: mov 0x10(%esp),%ecx;");
    asm("loc_4A3534: mov 8(%ecx),%esi;");
    asm("loc_4A3537: cmp %esi,%ebp;");
    asm("loc_4A3539: je loc_4A3557;");
    asm("loc_4A353B: nop;");
    asm("loc_4A353C: lea (%esp),%esp;");
    asm("loc_4A3540: mov (%edi),%ecx;");
    asm("loc_4A3542: push $0xFFFFFFFF;");
    asm("loc_4A3544: push %ecx;");
    asm("loc_4A3545: mov %ebp,%ecx;");
    asm("loc_4A3547: call _sub_413DF0;");
    asm("loc_4A354C: add $8,%ebp;");
    asm("loc_4A354F: cmp %esi,%ebp;");
    asm("loc_4A3551: jne loc_4A3540;");
    asm("loc_4A3553: mov 0x10(%esp),%ecx;");
    asm("loc_4A3557: mov 8(%ecx),%eax;");
    asm("loc_4A355A: mov 0x24(%esp),%edx;");
    asm("loc_4A355E: pop %edi;");
    asm("loc_4A355F: pop %esi;");
    asm("loc_4A3560: add %edx,%eax;");
    asm("loc_4A3562: pop %ebp;");
    asm("loc_4A3563: mov %eax,8(%ecx);");
    asm("loc_4A3566: pop %ebx;");
    asm("loc_4A3567: add $0xC,%esp;");
    asm("loc_4A356A: ret $0xC;");
    asm("loc_4A356D: test %ebx,%ebx;");
    asm("loc_4A356F: jbe loc_4A3673;");
    asm("loc_4A3575: lea (,%ebx,8),%eax;");
    asm("loc_4A357C: mov %esi,%edi;");
    asm("loc_4A357E: sub %eax,%edi;");
    asm("loc_4A3580: cmp %esi,%edi;");
    asm("loc_4A3582: mov %esi,0x14(%esp);");
    asm("loc_4A3586: mov %eax,0x24(%esp);");
    asm("loc_4A358A: je loc_4A35B8;");
    asm("loc_4A358C: lea (%esp),%esp;");
    asm("loc_4A3590: mov 0x14(%esp),%eax;");
    asm("loc_4A3594: push %edi;");
    asm("loc_4A3595: push %eax;");
    asm("loc_4A3596: call _sub_4A3EC0;");
    asm("loc_4A359B: mov 0x1C(%esp),%edx;");
    asm("loc_4A359F: add $8,%edx;");
    asm("loc_4A35A2: add $8,%edi;");
    asm("loc_4A35A5: add $8,%esp;");
    asm("loc_4A35A8: cmp %esi,%edi;");
    asm("loc_4A35AA: mov %edx,0x14(%esp);");
    asm("loc_4A35AE: jne loc_4A3590;");
    asm("loc_4A35B0: mov 0x10(%esp),%ecx;");
    asm("loc_4A35B4: mov 0x24(%esp),%eax;");
    asm("loc_4A35B8: mov 8(%ecx),%esi;");
    asm("loc_4A35BB: mov %esi,%ebx;");
    asm("loc_4A35BD: sub %eax,%ebx;");
    asm("loc_4A35BF: cmp %ebx,%ebp;");
    asm("loc_4A35C1: je loc_4A3618;");
    asm("loc_4A35C3: mov -8(%ebx),%ebp;");
    asm("loc_4A35C6: sub $8,%ebx;");
    asm("loc_4A35C9: sub $8,%esi;");
    asm("loc_4A35CC: test %ebp,%ebp;");
    asm("loc_4A35CE: je loc_4A35FF;");
    asm("loc_4A35D0: push %ebp;");
    asm("loc_4A35D1: calll *_import_5C71C8;");
    asm("loc_4A35D7: mov %eax,%edi;");
    asm("loc_4A35D9: add $4,%esp;");
    asm("loc_4A35DC: lea 1(%edi),%ecx;");
    asm("loc_4A35DF: push %ecx;");
    asm("loc_4A35E0: mov %esi,%ecx;");
    asm("loc_4A35E2: call _sub_4142A0;");
    asm("loc_4A35E7: mov (%esi),%edx;");
    asm("loc_4A35E9: push %edi;");
    asm("loc_4A35EA: push %ebp;");
    asm("loc_4A35EB: push %edx;");
    asm("loc_4A35EC: calll *_import_5C71C0;");
    asm("loc_4A35F2: mov (%esi),%eax;");
    asm("loc_4A35F4: add $0xC,%esp;");
    asm("loc_4A35F7: movw $0,(%eax,%edi,2);");
    asm("loc_4A35FD: jmp loc_4A3606;");
    asm("loc_4A35FF: mov %esi,%ecx;");
    asm("loc_4A3601: call _sub_414280;");
    asm("loc_4A3606: mov 0x20(%esp),%eax;");
    asm("loc_4A360A: cmp %eax,%ebx;");
    asm("loc_4A360C: jne loc_4A35C3;");
    asm("loc_4A360E: mov 0x10(%esp),%ecx;");
    asm("loc_4A3612: mov %eax,%ebp;");
    asm("loc_4A3614: mov 0x24(%esp),%eax;");
    asm("loc_4A3618: lea (%eax,%ebp),%ebx;");
    asm("loc_4A361B: cmp %ebx,%ebp;");
    asm("loc_4A361D: mov %ebp,%esi;");
    asm("loc_4A361F: je loc_4A3670;");
    asm("loc_4A3621: mov 0x28(%esp),%ecx;");
    asm("loc_4A3625: mov (%ecx),%ebp;");
    asm("loc_4A3627: test %ebp,%ebp;");
    asm("loc_4A3629: je loc_4A365A;");
    asm("loc_4A362B: push %ebp;");
    asm("loc_4A362C: calll *_import_5C71C8;");
    asm("loc_4A3632: mov %eax,%edi;");
    asm("loc_4A3634: add $4,%esp;");
    asm("loc_4A3637: lea 1(%edi),%edx;");
    asm("loc_4A363A: push %edx;");
    asm("loc_4A363B: mov %esi,%ecx;");
    asm("loc_4A363D: call _sub_4142A0;");
    asm("loc_4A3642: mov (%esi),%eax;");
    asm("loc_4A3644: push %edi;");
    asm("loc_4A3645: push %ebp;");
    asm("loc_4A3646: push %eax;");
    asm("loc_4A3647: calll *_import_5C71C0;");
    asm("loc_4A364D: mov (%esi),%ecx;");
    asm("loc_4A364F: add $0xC,%esp;");
    asm("loc_4A3652: movw $0,(%ecx,%edi,2);");
    asm("loc_4A3658: jmp loc_4A3661;");
    asm("loc_4A365A: mov %esi,%ecx;");
    asm("loc_4A365C: call _sub_414280;");
    asm("loc_4A3661: add $8,%esi;");
    asm("loc_4A3664: cmp %ebx,%esi;");
    asm("loc_4A3666: jne loc_4A3621;");
    asm("loc_4A3668: mov 0x10(%esp),%ecx;");
    asm("loc_4A366C: mov 0x24(%esp),%eax;");
    asm("loc_4A3670: add %eax,8(%ecx);");
    asm("loc_4A3673: pop %edi;");
    asm("loc_4A3674: pop %esi;");
    asm("loc_4A3675: pop %ebp;");
    asm("loc_4A3676: pop %ebx;");
    asm("loc_4A3677: add $0xC,%esp;");
    asm("loc_4A367A: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3680() // _sub_4A3680
{
    __DEBUG_ASM(4A3680);
    // chunk 0x4A3680 _sub_4A3680
    asm("loc_4A3680: sub $8,%esp;");
    asm("loc_4A3683: push %ebx;");
    asm("loc_4A3684: push %ebp;");
    asm("loc_4A3685: mov 0x18(%esp),%ebp;");
    asm("loc_4A3689: push %esi;");
    asm("loc_4A368A: push %edi;");
    asm("loc_4A368B: mov %ecx,%edi;");
    asm("loc_4A368D: mov 8(%edi),%ebx;");
    asm("loc_4A3690: mov 0xC(%edi),%ecx;");
    asm("loc_4A3693: sub %ebx,%ecx;");
    asm("loc_4A3695: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A369A: imul %ecx;");
    asm("loc_4A369C: sar $2,%edx;");
    asm("loc_4A369F: mov %edx,%eax;");
    asm("loc_4A36A1: shr $0x1F,%eax;");
    asm("loc_4A36A4: add %eax,%edx;");
    asm("loc_4A36A6: cmp %ebp,%edx;");
    asm("loc_4A36A8: mov %edi,0x10(%esp);");
    asm("loc_4A36AC: jae loc_4A381F;");
    asm("loc_4A36B2: mov 4(%edi),%esi;");
    asm("loc_4A36B5: test %esi,%esi;");
    asm("loc_4A36B7: je loc_4A36D4;");
    asm("loc_4A36B9: mov %ebx,%ecx;");
    asm("loc_4A36BB: sub %esi,%ecx;");
    asm("loc_4A36BD: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A36C2: imul %ecx;");
    asm("loc_4A36C4: sar $2,%edx;");
    asm("loc_4A36C7: mov %edx,%ecx;");
    asm("loc_4A36C9: shr $0x1F,%ecx;");
    asm("loc_4A36CC: add %ecx,%edx;");
    asm("loc_4A36CE: cmp %edx,%ebp;");
    asm("loc_4A36D0: mov %edx,%ecx;");
    asm("loc_4A36D2: jb loc_4A36D6;");
    asm("loc_4A36D4: mov %ebp,%ecx;");
    asm("loc_4A36D6: test %esi,%esi;");
    asm("loc_4A36D8: jne loc_4A36DE;");
    asm("loc_4A36DA: xor %edx,%edx;");
    asm("loc_4A36DC: jmp loc_4A36F1;");
    asm("loc_4A36DE: sub %esi,%ebx;");
    asm("loc_4A36E0: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A36E5: imul %ebx;");
    asm("loc_4A36E7: sar $2,%edx;");
    asm("loc_4A36EA: mov %edx,%eax;");
    asm("loc_4A36EC: shr $0x1F,%eax;");
    asm("loc_4A36EF: add %eax,%edx;");
    asm("loc_4A36F1: lea (%edx,%ecx),%eax;");
    asm("loc_4A36F4: test %eax,%eax;");
    asm("loc_4A36F6: mov %eax,0x20(%esp);");
    asm("loc_4A36FA: jge loc_4A36FE;");
    asm("loc_4A36FC: xor %eax,%eax;");
    asm("loc_4A36FE: lea (%eax,%eax,2),%ecx;");
    asm("loc_4A3701: shl $3,%ecx;");
    asm("loc_4A3704: push %ecx;");
    asm("loc_4A3705: call _sub_5B7E84;");
    asm("loc_4A370A: mov 0x20(%esp),%ecx;");
    asm("loc_4A370E: mov %eax,0x18(%esp);");
    asm("loc_4A3712: mov %eax,%edx;");
    asm("loc_4A3714: mov 4(%edi),%eax;");
    asm("loc_4A3717: add $4,%esp;");
    asm("loc_4A371A: cmp %ecx,%eax;");
    asm("loc_4A371C: je loc_4A3741;");
    asm("loc_4A371E: mov %edi,%edi;");
    asm("loc_4A3720: test %edx,%edx;");
    asm("loc_4A3722: je loc_4A3733;");
    asm("loc_4A3724: mov $6,%ecx;");
    asm("loc_4A3729: mov %eax,%esi;");
    asm("loc_4A372B: mov %edx,%edi;");
    asm("loc_4A372D: rep movsl (%esi),(%edi);");
    asm("loc_4A372F: mov 0x10(%esp),%edi;");
    asm("loc_4A3733: mov 0x1C(%esp),%ecx;");
    asm("loc_4A3737: add $0x18,%eax;");
    asm("loc_4A373A: add $0x18,%edx;");
    asm("loc_4A373D: cmp %ecx,%eax;");
    asm("loc_4A373F: jne loc_4A3720;");
    asm("loc_4A3741: test %ebp,%ebp;");
    asm("loc_4A3743: mov %edx,%eax;");
    asm("loc_4A3745: jbe loc_4A376B;");
    asm("loc_4A3747: mov %ebp,%ebx;");
    asm("loc_4A3749: lea (%esp),%esp;");
    asm("loc_4A3750: test %eax,%eax;");
    asm("loc_4A3752: je loc_4A3765;");
    asm("loc_4A3754: mov 0x24(%esp),%esi;");
    asm("loc_4A3758: mov $6,%ecx;");
    asm("loc_4A375D: mov %eax,%edi;");
    asm("loc_4A375F: rep movsl (%esi),(%edi);");
    asm("loc_4A3761: mov 0x10(%esp),%edi;");
    asm("loc_4A3765: add $0x18,%eax;");
    asm("loc_4A3768: dec %ebx;");
    asm("loc_4A3769: jne loc_4A3750;");
    asm("loc_4A376B: mov 8(%edi),%esi;");
    asm("loc_4A376E: mov 0x1C(%esp),%eax;");
    asm("loc_4A3772: lea (%ebp,%ebp,2),%ecx;");
    asm("loc_4A3776: shl $3,%ecx;");
    asm("loc_4A3779: cmp %esi,%eax;");
    asm("loc_4A377B: lea (%ecx,%edx),%ebx;");
    asm("loc_4A377E: mov %esi,0x24(%esp);");
    asm("loc_4A3782: je loc_4A37B1;");
    asm("loc_4A3784: mov %ebx,%eax;");
    asm("loc_4A3786: sub %ecx,%eax;");
    asm("loc_4A3788: mov 0x1C(%esp),%ecx;");
    asm("loc_4A378C: sub %edx,%eax;");
    asm("loc_4A378E: add %ecx,%eax;");
    asm("loc_4A3790: test %ebx,%ebx;");
    asm("loc_4A3792: je loc_4A37A7;");
    asm("loc_4A3794: mov $6,%ecx;");
    asm("loc_4A3799: mov %eax,%esi;");
    asm("loc_4A379B: mov %ebx,%edi;");
    asm("loc_4A379D: rep movsl (%esi),(%edi);");
    asm("loc_4A379F: mov 0x10(%esp),%edi;");
    asm("loc_4A37A3: mov 0x24(%esp),%esi;");
    asm("loc_4A37A7: add $0x18,%eax;");
    asm("loc_4A37AA: add $0x18,%ebx;");
    asm("loc_4A37AD: cmp %esi,%eax;");
    asm("loc_4A37AF: jne loc_4A3790;");
    asm("loc_4A37B1: mov 4(%edi),%edx;");
    asm("loc_4A37B4: push %edx;");
    asm("loc_4A37B5: call _sub_5B7E1D;");
    asm("loc_4A37BA: mov 0x24(%esp),%eax;");
    asm("loc_4A37BE: mov 0x18(%esp),%esi;");
    asm("loc_4A37C2: lea (%eax,%eax,2),%eax;");
    asm("loc_4A37C5: lea (%esi,%eax,8),%ecx;");
    asm("loc_4A37C8: mov 4(%edi),%eax;");
    asm("loc_4A37CB: add $4,%esp;");
    asm("loc_4A37CE: test %eax,%eax;");
    asm("loc_4A37D0: mov %ecx,0xC(%edi);");
    asm("loc_4A37D3: jne loc_4A37F0;");
    asm("loc_4A37D5: xor %edx,%edx;");
    asm("loc_4A37D7: add %edx,%ebp;");
    asm("loc_4A37D9: lea (%ebp,%ebp,2),%ecx;");
    asm("loc_4A37DD: lea (%esi,%ecx,8),%edx;");
    asm("loc_4A37E0: mov %esi,4(%edi);");
    asm("loc_4A37E3: mov %edx,8(%edi);");
    asm("loc_4A37E6: pop %edi;");
    asm("loc_4A37E7: pop %esi;");
    asm("loc_4A37E8: pop %ebp;");
    asm("loc_4A37E9: pop %ebx;");
    asm("loc_4A37EA: add $8,%esp;");
    asm("loc_4A37ED: ret $0xC;");
    asm("loc_4A37F0: mov 8(%edi),%ecx;");
    asm("loc_4A37F3: sub %eax,%ecx;");
    asm("loc_4A37F5: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A37FA: imul %ecx;");
    asm("loc_4A37FC: sar $2,%edx;");
    asm("loc_4A37FF: mov %edx,%eax;");
    asm("loc_4A3801: shr $0x1F,%eax;");
    asm("loc_4A3804: add %eax,%edx;");
    asm("loc_4A3806: add %edx,%ebp;");
    asm("loc_4A3808: lea (%ebp,%ebp,2),%ecx;");
    asm("loc_4A380C: lea (%esi,%ecx,8),%edx;");
    asm("loc_4A380F: mov %esi,4(%edi);");
    asm("loc_4A3812: mov %edx,8(%edi);");
    asm("loc_4A3815: pop %edi;");
    asm("loc_4A3816: pop %esi;");
    asm("loc_4A3817: pop %ebp;");
    asm("loc_4A3818: pop %ebx;");
    asm("loc_4A3819: add $8,%esp;");
    asm("loc_4A381C: ret $0xC;");
    asm("loc_4A381F: mov 0x1C(%esp),%esi;");
    asm("loc_4A3823: mov %ebx,%ecx;");
    asm("loc_4A3825: sub %esi,%ecx;");
    asm("loc_4A3827: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A382C: imul %ecx;");
    asm("loc_4A382E: sar $2,%edx;");
    asm("loc_4A3831: mov %edx,%eax;");
    asm("loc_4A3833: shr $0x1F,%eax;");
    asm("loc_4A3836: add %eax,%edx;");
    asm("loc_4A3838: cmp %ebp,%edx;");
    asm("loc_4A383A: jae loc_4A38F2;");
    asm("loc_4A3840: lea (%ebp,%ebp,2),%ecx;");
    asm("loc_4A3844: shl $3,%ecx;");
    asm("loc_4A3847: cmp %ebx,%esi;");
    asm("loc_4A3849: mov %ecx,0x20(%esp);");
    asm("loc_4A384D: lea (%ecx,%esi),%eax;");
    asm("loc_4A3850: je loc_4A3877;");
    asm("loc_4A3852: mov %eax,%edx;");
    asm("loc_4A3854: sub %ecx,%edx;");
    asm("loc_4A3856: test %eax,%eax;");
    asm("loc_4A3858: je loc_4A386D;");
    asm("loc_4A385A: mov $6,%ecx;");
    asm("loc_4A385F: mov %edx,%esi;");
    asm("loc_4A3861: mov %eax,%edi;");
    asm("loc_4A3863: rep movsl (%esi),(%edi);");
    asm("loc_4A3865: mov 0x10(%esp),%edi;");
    asm("loc_4A3869: mov 0x1C(%esp),%esi;");
    asm("loc_4A386D: add $0x18,%edx;");
    asm("loc_4A3870: add $0x18,%eax;");
    asm("loc_4A3873: cmp %ebx,%edx;");
    asm("loc_4A3875: jne loc_4A3856;");
    asm("loc_4A3877: mov 8(%edi),%ebx;");
    asm("loc_4A387A: mov %ebx,%ecx;");
    asm("loc_4A387C: sub %esi,%ecx;");
    asm("loc_4A387E: mov $0x2AAAAAAB,%eax;");
    asm("loc_4A3883: imul %ecx;");
    asm("loc_4A3885: sar $2,%edx;");
    asm("loc_4A3888: mov %edx,%ecx;");
    asm("loc_4A388A: shr $0x1F,%ecx;");
    asm("loc_4A388D: add %ecx,%edx;");
    asm("loc_4A388F: sub %edx,%ebp;");
    asm("loc_4A3891: mov %ebp,%eax;");
    asm("loc_4A3893: mov 0x24(%esp),%ebp;");
    asm("loc_4A3897: je loc_4A38BD;");
    asm("loc_4A3899: lea (%esp),%esp;");
    asm("loc_4A38A0: test %ebx,%ebx;");
    asm("loc_4A38A2: je loc_4A38B7;");
    asm("loc_4A38A4: mov $6,%ecx;");
    asm("loc_4A38A9: mov %ebp,%esi;");
    asm("loc_4A38AB: mov %ebx,%edi;");
    asm("loc_4A38AD: rep movsl (%esi),(%edi);");
    asm("loc_4A38AF: mov 0x10(%esp),%edi;");
    asm("loc_4A38B3: mov 0x1C(%esp),%esi;");
    asm("loc_4A38B7: add $0x18,%ebx;");
    asm("loc_4A38BA: dec %eax;");
    asm("loc_4A38BB: jne loc_4A38A0;");
    asm("loc_4A38BD: mov 8(%edi),%edx;");
    asm("loc_4A38C0: cmp %edx,%esi;");
    asm("loc_4A38C2: mov %esi,%eax;");
    asm("loc_4A38C4: je loc_4A38DC;");
    asm("loc_4A38C6: mov %eax,%edi;");
    asm("loc_4A38C8: add $0x18,%eax;");
    asm("loc_4A38CB: cmp %edx,%eax;");
    asm("loc_4A38CD: mov $6,%ecx;");
    asm("loc_4A38D2: mov %ebp,%esi;");
    asm("loc_4A38D4: rep movsl (%esi),(%edi);");
    asm("loc_4A38D6: jne loc_4A38C6;");
    asm("loc_4A38D8: mov 0x10(%esp),%edi;");
    asm("loc_4A38DC: mov 8(%edi),%eax;");
    asm("loc_4A38DF: mov 0x20(%esp),%edx;");
    asm("loc_4A38E3: add %edx,%eax;");
    asm("loc_4A38E5: mov %eax,8(%edi);");
    asm("loc_4A38E8: pop %edi;");
    asm("loc_4A38E9: pop %esi;");
    asm("loc_4A38EA: pop %ebp;");
    asm("loc_4A38EB: pop %ebx;");
    asm("loc_4A38EC: add $8,%esp;");
    asm("loc_4A38EF: ret $0xC;");
    asm("loc_4A38F2: test %ebp,%ebp;");
    asm("loc_4A38F4: jbe loc_4A3989;");
    asm("loc_4A38FA: lea (%ebp,%ebp,2),%ebp;");
    asm("loc_4A38FE: shl $3,%ebp;");
    asm("loc_4A3901: mov %ebx,%eax;");
    asm("loc_4A3903: sub %ebp,%eax;");
    asm("loc_4A3905: cmp %ebx,%eax;");
    asm("loc_4A3907: mov %ebx,%edx;");
    asm("loc_4A3909: je loc_4A3931;");
    asm("loc_4A390B: nop;");
    asm("loc_4A390C: lea (%esp),%esp;");
    asm("loc_4A3910: test %edx,%edx;");
    asm("loc_4A3912: je loc_4A3927;");
    asm("loc_4A3914: mov $6,%ecx;");
    asm("loc_4A3919: mov %eax,%esi;");
    asm("loc_4A391B: mov %edx,%edi;");
    asm("loc_4A391D: rep movsl (%esi),(%edi);");
    asm("loc_4A391F: mov 0x10(%esp),%edi;");
    asm("loc_4A3923: mov 0x1C(%esp),%esi;");
    asm("loc_4A3927: add $0x18,%eax;");
    asm("loc_4A392A: add $0x18,%edx;");
    asm("loc_4A392D: cmp %ebx,%eax;");
    asm("loc_4A392F: jne loc_4A3910;");
    asm("loc_4A3931: mov 8(%edi),%edx;");
    asm("loc_4A3934: mov %edx,%eax;");
    asm("loc_4A3936: sub %ebp,%eax;");
    asm("loc_4A3938: cmp %eax,%esi;");
    asm("loc_4A393A: je loc_4A395F;");
    asm("loc_4A393C: lea (%esp),%esp;");
    asm("loc_4A3940: sub $0x18,%eax;");
    asm("loc_4A3943: sub $0x18,%edx;");
    asm("loc_4A3946: mov $6,%ecx;");
    asm("loc_4A394B: mov %eax,%esi;");
    asm("loc_4A394D: mov %edx,%edi;");
    asm("loc_4A394F: rep movsl (%esi),(%edi);");
    asm("loc_4A3951: mov 0x1C(%esp),%ecx;");
    asm("loc_4A3955: cmp %ecx,%eax;");
    asm("loc_4A3957: jne loc_4A3940;");
    asm("loc_4A3959: mov 0x10(%esp),%edi;");
    asm("loc_4A395D: mov %ecx,%esi;");
    asm("loc_4A395F: lea (%esi,%ebp),%edx;");
    asm("loc_4A3962: cmp %edx,%esi;");
    asm("loc_4A3964: mov %esi,%eax;");
    asm("loc_4A3966: je loc_4A3986;");
    asm("loc_4A3968: mov 0x24(%esp),%ebx;");
    asm("loc_4A396C: lea (%esp),%esp;");
    asm("loc_4A3970: mov %eax,%edi;");
    asm("loc_4A3972: add $0x18,%eax;");
    asm("loc_4A3975: cmp %edx,%eax;");
    asm("loc_4A3977: mov $6,%ecx;");
    asm("loc_4A397C: mov %ebx,%esi;");
    asm("loc_4A397E: rep movsl (%esi),(%edi);");
    asm("loc_4A3980: jne loc_4A3970;");
    asm("loc_4A3982: mov 0x10(%esp),%edi;");
    asm("loc_4A3986: add %ebp,8(%edi);");
    asm("loc_4A3989: pop %edi;");
    asm("loc_4A398A: pop %esi;");
    asm("loc_4A398B: pop %ebp;");
    asm("loc_4A398C: pop %ebx;");
    asm("loc_4A398D: add $8,%esp;");
    asm("loc_4A3990: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A39A0() // _sub_4A39A0
{
    __DEBUG_ASM(4A39A0);
    // chunk 0x4A39A0 _sub_4A39A0
    asm("loc_4A39A0: mov 4(%esp),%edx;");
    asm("loc_4A39A4: mov 0xC(%esp),%eax;");
    asm("loc_4A39A8: push %ebx;");
    asm("loc_4A39A9: mov 0xC(%esp),%ebx;");
    asm("loc_4A39AD: cmp %ebx,%edx;");
    asm("loc_4A39AF: je loc_4A39CE;");
    asm("loc_4A39B1: push %esi;");
    asm("loc_4A39B2: push %edi;");
    asm("loc_4A39B3: test %eax,%eax;");
    asm("loc_4A39B5: je loc_4A39C2;");
    asm("loc_4A39B7: mov $0x1F,%ecx;");
    asm("loc_4A39BC: mov %edx,%esi;");
    asm("loc_4A39BE: mov %eax,%edi;");
    asm("loc_4A39C0: rep movsl (%esi),(%edi);");
    asm("loc_4A39C2: add $0x7C,%edx;");
    asm("loc_4A39C5: add $0x7C,%eax;");
    asm("loc_4A39C8: cmp %ebx,%edx;");
    asm("loc_4A39CA: jne loc_4A39B3;");
    asm("loc_4A39CC: pop %edi;");
    asm("loc_4A39CD: pop %esi;");
    asm("loc_4A39CE: pop %ebx;");
    asm("loc_4A39CF: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A39E0() // _sub_4A39E0
{
    __DEBUG_ASM(4A39E0);
    // chunk 0x4A39E0 _sub_4A39E0
    asm("loc_4A39E0: mov 8(%esp),%eax;");
    asm("loc_4A39E4: test %eax,%eax;");
    asm("loc_4A39E6: jbe loc_4A3A0D;");
    asm("loc_4A39E8: push %ebx;");
    asm("loc_4A39E9: mov 0x10(%esp),%ebx;");
    asm("loc_4A39ED: push %esi;");
    asm("loc_4A39EE: mov %eax,%edx;");
    asm("loc_4A39F0: mov 0xC(%esp),%eax;");
    asm("loc_4A39F4: push %edi;");
    asm("loc_4A39F5: test %eax,%eax;");
    asm("loc_4A39F7: je loc_4A3A04;");
    asm("loc_4A39F9: mov $0x1F,%ecx;");
    asm("loc_4A39FE: mov %ebx,%esi;");
    asm("loc_4A3A00: mov %eax,%edi;");
    asm("loc_4A3A02: rep movsl (%esi),(%edi);");
    asm("loc_4A3A04: add $0x7C,%eax;");
    asm("loc_4A3A07: dec %edx;");
    asm("loc_4A3A08: jne loc_4A39F5;");
    asm("loc_4A3A0A: pop %edi;");
    asm("loc_4A3A0B: pop %esi;");
    asm("loc_4A3A0C: pop %ebx;");
    asm("loc_4A3A0D: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3A10() // _sub_4A3A10
{
    __DEBUG_ASM(4A3A10);
    // chunk 0x4A3A10 _sub_4A3A10
    asm("loc_4A3A10: mov 4(%esp),%edx;");
    asm("loc_4A3A14: mov 0xC(%esp),%eax;");
    asm("loc_4A3A18: push %ebx;");
    asm("loc_4A3A19: mov 0xC(%esp),%ebx;");
    asm("loc_4A3A1D: cmp %ebx,%edx;");
    asm("loc_4A3A1F: je loc_4A3A3E;");
    asm("loc_4A3A21: push %esi;");
    asm("loc_4A3A22: push %edi;");
    asm("loc_4A3A23: test %eax,%eax;");
    asm("loc_4A3A25: je loc_4A3A32;");
    asm("loc_4A3A27: mov $6,%ecx;");
    asm("loc_4A3A2C: mov %edx,%esi;");
    asm("loc_4A3A2E: mov %eax,%edi;");
    asm("loc_4A3A30: rep movsl (%esi),(%edi);");
    asm("loc_4A3A32: add $0x18,%edx;");
    asm("loc_4A3A35: add $0x18,%eax;");
    asm("loc_4A3A38: cmp %ebx,%edx;");
    asm("loc_4A3A3A: jne loc_4A3A23;");
    asm("loc_4A3A3C: pop %edi;");
    asm("loc_4A3A3D: pop %esi;");
    asm("loc_4A3A3E: pop %ebx;");
    asm("loc_4A3A3F: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3A50() // _sub_4A3A50
{
    __DEBUG_ASM(4A3A50);
    // chunk 0x4A3A50 _sub_4A3A50
    asm("loc_4A3A50: mov 8(%esp),%eax;");
    asm("loc_4A3A54: test %eax,%eax;");
    asm("loc_4A3A56: jbe loc_4A3A7D;");
    asm("loc_4A3A58: push %ebx;");
    asm("loc_4A3A59: mov 0x10(%esp),%ebx;");
    asm("loc_4A3A5D: push %esi;");
    asm("loc_4A3A5E: mov %eax,%edx;");
    asm("loc_4A3A60: mov 0xC(%esp),%eax;");
    asm("loc_4A3A64: push %edi;");
    asm("loc_4A3A65: test %eax,%eax;");
    asm("loc_4A3A67: je loc_4A3A74;");
    asm("loc_4A3A69: mov $6,%ecx;");
    asm("loc_4A3A6E: mov %ebx,%esi;");
    asm("loc_4A3A70: mov %eax,%edi;");
    asm("loc_4A3A72: rep movsl (%esi),(%edi);");
    asm("loc_4A3A74: add $0x18,%eax;");
    asm("loc_4A3A77: dec %edx;");
    asm("loc_4A3A78: jne loc_4A3A65;");
    asm("loc_4A3A7A: pop %edi;");
    asm("loc_4A3A7B: pop %esi;");
    asm("loc_4A3A7C: pop %ebx;");
    asm("loc_4A3A7D: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3A80() // _sub_4A3A80
{
    __DEBUG_ASM(4A3A80);
    // chunk 0x4A3A80 _sub_4A3A80
    asm("loc_4A3A80: mov 4(%esp),%edx;");
    asm("loc_4A3A84: mov 0xC(%esp),%eax;");
    asm("loc_4A3A88: push %ebx;");
    asm("loc_4A3A89: mov 0xC(%esp),%ebx;");
    asm("loc_4A3A8D: cmp %ebx,%edx;");
    asm("loc_4A3A8F: je loc_4A3AAA;");
    asm("loc_4A3A91: push %esi;");
    asm("loc_4A3A92: push %edi;");
    asm("loc_4A3A93: mov %edx,%esi;");
    asm("loc_4A3A95: mov %eax,%edi;");
    asm("loc_4A3A97: add $0x18,%edx;");
    asm("loc_4A3A9A: mov $6,%ecx;");
    asm("loc_4A3A9F: add $0x18,%eax;");
    asm("loc_4A3AA2: cmp %ebx,%edx;");
    asm("loc_4A3AA4: rep movsl (%esi),(%edi);");
    asm("loc_4A3AA6: jne loc_4A3A93;");
    asm("loc_4A3AA8: pop %edi;");
    asm("loc_4A3AA9: pop %esi;");
    asm("loc_4A3AAA: pop %ebx;");
    asm("loc_4A3AAB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3AB0() // _sub_4A3AB0
{
    __DEBUG_ASM(4A3AB0);
    // chunk 0x4A3AB0 _sub_4A3AB0
    asm("loc_4A3AB0: push %ecx;");
    asm("loc_4A3AB1: mov 0xC(%esp),%eax;");
    asm("loc_4A3AB5: push %ebx;");
    asm("loc_4A3AB6: mov 0xC(%esp),%ebx;");
    asm("loc_4A3ABA: cmp %eax,%ebx;");
    asm("loc_4A3ABC: mov 0x14(%esp),%eax;");
    asm("loc_4A3AC0: je loc_4A3BE9;");
    asm("loc_4A3AC6: push %ebp;");
    asm("loc_4A3AC7: push %esi;");
    asm("loc_4A3AC8: add $4,%ebx;");
    asm("loc_4A3ACB: push %edi;");
    asm("loc_4A3ACC: mov %ebx,0x10(%esp);");
    asm("loc_4A3AD0: lea 0x5C(%eax),%edx;");
    asm("loc_4A3AD3: test %ebx,%ebx;");
    asm("loc_4A3AD5: jne loc_4A3ADE;");
    asm("loc_4A3AD7: mov %ebx,(%eax);");
    asm("loc_4A3AD9: mov %bl,-0x58(%edx);");
    asm("loc_4A3ADC: jmp loc_4A3B1B;");
    asm("loc_4A3ADE: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3AE1: xor %eax,%eax;");
    asm("loc_4A3AE3: mov %ebx,%edi;");
    asm("loc_4A3AE5: repne scas (%edi),%al;");
    asm("loc_4A3AE7: not %ecx;");
    asm("loc_4A3AE9: dec %ecx;");
    asm("loc_4A3AEA: mov %ecx,%eax;");
    asm("loc_4A3AEC: cmp $0x20,%eax;");
    asm("loc_4A3AEF: jb loc_4A3AF6;");
    asm("loc_4A3AF1: mov $0x1F,%eax;");
    asm("loc_4A3AF6: mov %ebx,%esi;");
    asm("loc_4A3AF8: mov %eax,%ecx;");
    asm("loc_4A3AFA: mov %ecx,%ebx;");
    asm("loc_4A3AFC: shr $2,%ecx;");
    asm("loc_4A3AFF: lea -0x58(%edx),%ebp;");
    asm("loc_4A3B02: mov %ebp,%edi;");
    asm("loc_4A3B04: rep movsl (%esi),(%edi);");
    asm("loc_4A3B06: mov %ebx,%ecx;");
    asm("loc_4A3B08: mov 0x10(%esp),%ebx;");
    asm("loc_4A3B0C: and $3,%ecx;");
    asm("loc_4A3B0F: rep movsb (%esi),(%edi);");
    asm("loc_4A3B11: mov 0x20(%esp),%ecx;");
    asm("loc_4A3B15: movb $0,(%eax,%ebp);");
    asm("loc_4A3B19: mov %eax,(%ecx);");
    asm("loc_4A3B1B: lea 0x20(%ebx),%eax;");
    asm("loc_4A3B1E: mov (%eax),%esi;");
    asm("loc_4A3B20: lea -0x38(%edx),%ecx;");
    asm("loc_4A3B23: mov %esi,(%ecx);");
    asm("loc_4A3B25: mov 4(%eax),%esi;");
    asm("loc_4A3B28: mov %esi,4(%ecx);");
    asm("loc_4A3B2B: mov 8(%eax),%eax;");
    asm("loc_4A3B2E: mov %eax,8(%ecx);");
    asm("loc_4A3B31: mov 0x2C(%ebx),%ecx;");
    asm("loc_4A3B34: lea 0x34(%ebx),%esi;");
    asm("loc_4A3B37: test %esi,%esi;");
    asm("loc_4A3B39: mov %ecx,-0x2C(%edx);");
    asm("loc_4A3B3C: jne loc_4A3B47;");
    asm("loc_4A3B3E: mov %esi,-0x28(%edx);");
    asm("loc_4A3B41: movb $0,-0x24(%edx);");
    asm("loc_4A3B45: jmp loc_4A3B7A;");
    asm("loc_4A3B47: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3B4A: xor %eax,%eax;");
    asm("loc_4A3B4C: mov %esi,%edi;");
    asm("loc_4A3B4E: repne scas (%edi),%al;");
    asm("loc_4A3B50: not %ecx;");
    asm("loc_4A3B52: dec %ecx;");
    asm("loc_4A3B53: mov %ecx,%eax;");
    asm("loc_4A3B55: cmp $0x20,%eax;");
    asm("loc_4A3B58: jb loc_4A3B5F;");
    asm("loc_4A3B5A: mov $0x1F,%eax;");
    asm("loc_4A3B5F: mov %eax,%ecx;");
    asm("loc_4A3B61: mov %ecx,%ebp;");
    asm("loc_4A3B63: shr $2,%ecx;");
    asm("loc_4A3B66: lea -0x24(%edx),%edi;");
    asm("loc_4A3B69: rep movsl (%esi),(%edi);");
    asm("loc_4A3B6B: mov %ebp,%ecx;");
    asm("loc_4A3B6D: and $3,%ecx;");
    asm("loc_4A3B70: rep movsb (%esi),(%edi);");
    asm("loc_4A3B72: movb $0,-0x24(%edx,%eax);");
    asm("loc_4A3B77: mov %eax,-0x28(%edx);");
    asm("loc_4A3B7A: lea 0x58(%ebx),%esi;");
    asm("loc_4A3B7D: test %esi,%esi;");
    asm("loc_4A3B7F: jne loc_4A3B89;");
    asm("loc_4A3B81: mov %esi,-4(%edx);");
    asm("loc_4A3B84: movb $0,(%edx);");
    asm("loc_4A3B87: jmp loc_4A3BBA;");
    asm("loc_4A3B89: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3B8C: xor %eax,%eax;");
    asm("loc_4A3B8E: mov %esi,%edi;");
    asm("loc_4A3B90: repne scas (%edi),%al;");
    asm("loc_4A3B92: not %ecx;");
    asm("loc_4A3B94: dec %ecx;");
    asm("loc_4A3B95: mov %ecx,%eax;");
    asm("loc_4A3B97: cmp $0x20,%eax;");
    asm("loc_4A3B9A: jb loc_4A3BA1;");
    asm("loc_4A3B9C: mov $0x1F,%eax;");
    asm("loc_4A3BA1: mov %eax,%ecx;");
    asm("loc_4A3BA3: mov %ecx,%ebp;");
    asm("loc_4A3BA5: shr $2,%ecx;");
    asm("loc_4A3BA8: mov %edx,%edi;");
    asm("loc_4A3BAA: rep movsl (%esi),(%edi);");
    asm("loc_4A3BAC: mov %ebp,%ecx;");
    asm("loc_4A3BAE: and $3,%ecx;");
    asm("loc_4A3BB1: rep movsb (%esi),(%edi);");
    asm("loc_4A3BB3: movb $0,(%edx,%eax);");
    asm("loc_4A3BB7: mov %eax,-4(%edx);");
    asm("loc_4A3BBA: mov 0x18(%esp),%ecx;");
    asm("loc_4A3BBE: mov 0x20(%esp),%eax;");
    asm("loc_4A3BC2: mov 0x1C(%esp),%esi;");
    asm("loc_4A3BC6: add $0x7C,%ecx;");
    asm("loc_4A3BC9: add $0x7C,%eax;");
    asm("loc_4A3BCC: add $0x7C,%ebx;");
    asm("loc_4A3BCF: add $0x7C,%edx;");
    asm("loc_4A3BD2: cmp %esi,%ecx;");
    asm("loc_4A3BD4: mov %eax,0x20(%esp);");
    asm("loc_4A3BD8: mov %ecx,0x18(%esp);");
    asm("loc_4A3BDC: mov %ebx,0x10(%esp);");
    asm("loc_4A3BE0: jne loc_4A3AD3;");
    asm("loc_4A3BE6: pop %edi;");
    asm("loc_4A3BE7: pop %esi;");
    asm("loc_4A3BE8: pop %ebp;");
    asm("loc_4A3BE9: pop %ebx;");
    asm("loc_4A3BEA: pop %ecx;");
    asm("loc_4A3BEB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3BF0() // _sub_4A3BF0
{
    __DEBUG_ASM(4A3BF0);
    // chunk 0x4A3BF0 _sub_4A3BF0
    asm("loc_4A3BF0: mov 4(%esp),%edx;");
    asm("loc_4A3BF4: mov 0xC(%esp),%eax;");
    asm("loc_4A3BF8: push %ebx;");
    asm("loc_4A3BF9: mov 0xC(%esp),%ebx;");
    asm("loc_4A3BFD: cmp %ebx,%edx;");
    asm("loc_4A3BFF: je loc_4A3C1A;");
    asm("loc_4A3C01: push %esi;");
    asm("loc_4A3C02: push %edi;");
    asm("loc_4A3C03: mov %edx,%esi;");
    asm("loc_4A3C05: mov %eax,%edi;");
    asm("loc_4A3C07: add $0x14,%edx;");
    asm("loc_4A3C0A: mov $5,%ecx;");
    asm("loc_4A3C0F: add $0x14,%eax;");
    asm("loc_4A3C12: cmp %ebx,%edx;");
    asm("loc_4A3C14: rep movsl (%esi),(%edi);");
    asm("loc_4A3C16: jne loc_4A3C03;");
    asm("loc_4A3C18: pop %edi;");
    asm("loc_4A3C19: pop %esi;");
    asm("loc_4A3C1A: pop %ebx;");
    asm("loc_4A3C1B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3C20() // _sub_4A3C20
{
    __DEBUG_ASM(4A3C20);
    // chunk 0x4A3C20 _sub_4A3C20
    asm("loc_4A3C20: mov 8(%esp),%eax;");
    asm("loc_4A3C24: push %ebp;");
    asm("loc_4A3C25: mov 8(%esp),%ebp;");
    asm("loc_4A3C29: cmp %eax,%ebp;");
    asm("loc_4A3C2B: je loc_4A3D51;");
    asm("loc_4A3C31: mov 0x10(%esp),%eax;");
    asm("loc_4A3C35: push %ebx;");
    asm("loc_4A3C36: push %esi;");
    asm("loc_4A3C37: push %edi;");
    asm("loc_4A3C38: lea 0x5C(%ebp),%edx;");
    asm("loc_4A3C3B: xor %ebx,%ebx;");
    asm("loc_4A3C3D: lea (%ecx),%ecx;");
    asm("loc_4A3C40: lea 4(%eax),%esi;");
    asm("loc_4A3C43: cmp %ebx,%esi;");
    asm("loc_4A3C45: jne loc_4A3C4F;");
    asm("loc_4A3C47: mov %ebx,(%ebp);");
    asm("loc_4A3C4A: mov %bl,-0x58(%edx);");
    asm("loc_4A3C4D: jmp loc_4A3C8C;");
    asm("loc_4A3C4F: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3C52: xor %eax,%eax;");
    asm("loc_4A3C54: mov %esi,%edi;");
    asm("loc_4A3C56: repne scas (%edi),%al;");
    asm("loc_4A3C58: not %ecx;");
    asm("loc_4A3C5A: dec %ecx;");
    asm("loc_4A3C5B: mov %ecx,%eax;");
    asm("loc_4A3C5D: cmp $0x20,%eax;");
    asm("loc_4A3C60: jb loc_4A3C67;");
    asm("loc_4A3C62: mov $0x1F,%eax;");
    asm("loc_4A3C67: mov %eax,%ecx;");
    asm("loc_4A3C69: mov %ecx,%ebx;");
    asm("loc_4A3C6B: lea -0x58(%edx),%ebp;");
    asm("loc_4A3C6E: shr $2,%ecx;");
    asm("loc_4A3C71: mov %ebp,%edi;");
    asm("loc_4A3C73: rep movsl (%esi),(%edi);");
    asm("loc_4A3C75: mov %ebx,%ecx;");
    asm("loc_4A3C77: and $3,%ecx;");
    asm("loc_4A3C7A: rep movsb (%esi),(%edi);");
    asm("loc_4A3C7C: xor %ebx,%ebx;");
    asm("loc_4A3C7E: mov %bl,(%eax,%ebp);");
    asm("loc_4A3C81: mov 0x14(%esp),%ebp;");
    asm("loc_4A3C85: mov %eax,(%ebp);");
    asm("loc_4A3C88: mov 0x1C(%esp),%eax;");
    asm("loc_4A3C8C: lea 0x24(%eax),%ecx;");
    asm("loc_4A3C8F: mov (%ecx),%edi;");
    asm("loc_4A3C91: lea -0x38(%edx),%esi;");
    asm("loc_4A3C94: mov %edi,(%esi);");
    asm("loc_4A3C96: mov 4(%ecx),%edi;");
    asm("loc_4A3C99: mov %edi,4(%esi);");
    asm("loc_4A3C9C: mov 8(%ecx),%ecx;");
    asm("loc_4A3C9F: mov %ecx,8(%esi);");
    asm("loc_4A3CA2: mov 0x30(%eax),%ecx;");
    asm("loc_4A3CA5: lea 0x38(%eax),%esi;");
    asm("loc_4A3CA8: cmp %ebx,%esi;");
    asm("loc_4A3CAA: mov %ecx,-0x2C(%edx);");
    asm("loc_4A3CAD: jne loc_4A3CB7;");
    asm("loc_4A3CAF: mov %ebx,-0x28(%edx);");
    asm("loc_4A3CB2: mov %bl,-0x24(%edx);");
    asm("loc_4A3CB5: jmp loc_4A3CF4;");
    asm("loc_4A3CB7: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3CBA: xor %eax,%eax;");
    asm("loc_4A3CBC: mov %esi,%edi;");
    asm("loc_4A3CBE: repne scas (%edi),%al;");
    asm("loc_4A3CC0: not %ecx;");
    asm("loc_4A3CC2: dec %ecx;");
    asm("loc_4A3CC3: mov %ecx,%eax;");
    asm("loc_4A3CC5: cmp $0x20,%eax;");
    asm("loc_4A3CC8: jb loc_4A3CCF;");
    asm("loc_4A3CCA: mov $0x1F,%eax;");
    asm("loc_4A3CCF: mov %eax,%ecx;");
    asm("loc_4A3CD1: mov %ecx,%ebx;");
    asm("loc_4A3CD3: lea -0x24(%edx),%ebp;");
    asm("loc_4A3CD6: shr $2,%ecx;");
    asm("loc_4A3CD9: mov %ebp,%edi;");
    asm("loc_4A3CDB: rep movsl (%esi),(%edi);");
    asm("loc_4A3CDD: mov %ebx,%ecx;");
    asm("loc_4A3CDF: and $3,%ecx;");
    asm("loc_4A3CE2: rep movsb (%esi),(%edi);");
    asm("loc_4A3CE4: xor %ebx,%ebx;");
    asm("loc_4A3CE6: mov %bl,(%eax,%ebp);");
    asm("loc_4A3CE9: mov 0x14(%esp),%ebp;");
    asm("loc_4A3CED: mov %eax,-0x28(%edx);");
    asm("loc_4A3CF0: mov 0x1C(%esp),%eax;");
    asm("loc_4A3CF4: lea 0x5C(%eax),%esi;");
    asm("loc_4A3CF7: cmp %ebx,%esi;");
    asm("loc_4A3CF9: jne loc_4A3D02;");
    asm("loc_4A3CFB: mov %ebx,-4(%edx);");
    asm("loc_4A3CFE: mov %bl,(%edx);");
    asm("loc_4A3D00: jmp loc_4A3D38;");
    asm("loc_4A3D02: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3D05: xor %eax,%eax;");
    asm("loc_4A3D07: mov %esi,%edi;");
    asm("loc_4A3D09: repne scas (%edi),%al;");
    asm("loc_4A3D0B: not %ecx;");
    asm("loc_4A3D0D: dec %ecx;");
    asm("loc_4A3D0E: mov %ecx,%eax;");
    asm("loc_4A3D10: cmp $0x20,%eax;");
    asm("loc_4A3D13: jb loc_4A3D1A;");
    asm("loc_4A3D15: mov $0x1F,%eax;");
    asm("loc_4A3D1A: mov %eax,%ecx;");
    asm("loc_4A3D1C: mov %ecx,%ebx;");
    asm("loc_4A3D1E: shr $2,%ecx;");
    asm("loc_4A3D21: mov %edx,%edi;");
    asm("loc_4A3D23: rep movsl (%esi),(%edi);");
    asm("loc_4A3D25: mov %ebx,%ecx;");
    asm("loc_4A3D27: and $3,%ecx;");
    asm("loc_4A3D2A: rep movsb (%esi),(%edi);");
    asm("loc_4A3D2C: xor %ebx,%ebx;");
    asm("loc_4A3D2E: mov %bl,(%edx,%eax);");
    asm("loc_4A3D31: mov %eax,-4(%edx);");
    asm("loc_4A3D34: mov 0x1C(%esp),%eax;");
    asm("loc_4A3D38: mov 0x18(%esp),%ecx;");
    asm("loc_4A3D3C: add $0x7C,%ebp;");
    asm("loc_4A3D3F: add $0x7C,%edx;");
    asm("loc_4A3D42: cmp %ecx,%ebp;");
    asm("loc_4A3D44: mov %ebp,0x14(%esp);");
    asm("loc_4A3D48: jne loc_4A3C40;");
    asm("loc_4A3D4E: pop %edi;");
    asm("loc_4A3D4F: pop %esi;");
    asm("loc_4A3D50: pop %ebx;");
    asm("loc_4A3D51: pop %ebp;");
    asm("loc_4A3D52: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3D60() // _sub_4A3D60
{
    __DEBUG_ASM(4A3D60);
    // chunk 0x4A3D60 _sub_4A3D60
    asm("loc_4A3D60: mov 8(%esp),%eax;");
    asm("loc_4A3D64: cmp %eax,4(%esp);");
    asm("loc_4A3D68: je loc_4A3E8F;");
    asm("loc_4A3D6E: mov 0xC(%esp),%ecx;");
    asm("loc_4A3D72: push %ebx;");
    asm("loc_4A3D73: push %ebp;");
    asm("loc_4A3D74: push %esi;");
    asm("loc_4A3D75: lea 0x5C(%ecx),%edx;");
    asm("loc_4A3D78: push %edi;");
    asm("loc_4A3D79: lea 4(%eax),%ebp;");
    asm("loc_4A3D7C: xor %ecx,%ecx;");
    asm("loc_4A3D7E: mov %edi,%edi;");
    asm("loc_4A3D80: mov 0x1C(%esp),%edi;");
    asm("loc_4A3D84: sub $0x7C,%eax;");
    asm("loc_4A3D87: sub $0x7C,%ebp;");
    asm("loc_4A3D8A: sub $0x7C,%edi;");
    asm("loc_4A3D8D: sub $0x7C,%edx;");
    asm("loc_4A3D90: cmp %ecx,%ebp;");
    asm("loc_4A3D92: mov %eax,0x18(%esp);");
    asm("loc_4A3D96: mov %edi,0x1C(%esp);");
    asm("loc_4A3D9A: jne loc_4A3DA5;");
    asm("loc_4A3D9C: mov %edi,%eax;");
    asm("loc_4A3D9E: mov %ecx,(%eax);");
    asm("loc_4A3DA0: mov %cl,-0x58(%edx);");
    asm("loc_4A3DA3: jmp loc_4A3DDE;");
    asm("loc_4A3DA5: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3DA8: xor %eax,%eax;");
    asm("loc_4A3DAA: mov %ebp,%edi;");
    asm("loc_4A3DAC: repne scas (%edi),%al;");
    asm("loc_4A3DAE: not %ecx;");
    asm("loc_4A3DB0: dec %ecx;");
    asm("loc_4A3DB1: mov %ecx,%eax;");
    asm("loc_4A3DB3: cmp $0x20,%eax;");
    asm("loc_4A3DB6: jb loc_4A3DBD;");
    asm("loc_4A3DB8: mov $0x1F,%eax;");
    asm("loc_4A3DBD: mov %eax,%ecx;");
    asm("loc_4A3DBF: mov %ecx,%ebx;");
    asm("loc_4A3DC1: shr $2,%ecx;");
    asm("loc_4A3DC4: lea -0x58(%edx),%edi;");
    asm("loc_4A3DC7: mov %ebp,%esi;");
    asm("loc_4A3DC9: rep movsl (%esi),(%edi);");
    asm("loc_4A3DCB: mov %ebx,%ecx;");
    asm("loc_4A3DCD: and $3,%ecx;");
    asm("loc_4A3DD0: rep movsb (%esi),(%edi);");
    asm("loc_4A3DD2: mov 0x1C(%esp),%esi;");
    asm("loc_4A3DD6: xor %ecx,%ecx;");
    asm("loc_4A3DD8: mov %cl,-0x58(%edx,%eax);");
    asm("loc_4A3DDC: mov %eax,(%esi);");
    asm("loc_4A3DDE: lea 0x20(%ebp),%eax;");
    asm("loc_4A3DE1: mov (%eax),%edi;");
    asm("loc_4A3DE3: lea -0x38(%edx),%esi;");
    asm("loc_4A3DE6: mov %edi,(%esi);");
    asm("loc_4A3DE8: mov 4(%eax),%edi;");
    asm("loc_4A3DEB: mov %edi,4(%esi);");
    asm("loc_4A3DEE: mov 8(%eax),%eax;");
    asm("loc_4A3DF1: mov %eax,8(%esi);");
    asm("loc_4A3DF4: mov 0x2C(%ebp),%eax;");
    asm("loc_4A3DF7: lea 0x34(%ebp),%esi;");
    asm("loc_4A3DFA: cmp %ecx,%esi;");
    asm("loc_4A3DFC: mov %eax,-0x2C(%edx);");
    asm("loc_4A3DFF: jne loc_4A3E09;");
    asm("loc_4A3E01: mov %ecx,-0x28(%edx);");
    asm("loc_4A3E04: mov %cl,-0x24(%edx);");
    asm("loc_4A3E07: jmp loc_4A3E3D;");
    asm("loc_4A3E09: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3E0C: xor %eax,%eax;");
    asm("loc_4A3E0E: mov %esi,%edi;");
    asm("loc_4A3E10: repne scas (%edi),%al;");
    asm("loc_4A3E12: not %ecx;");
    asm("loc_4A3E14: dec %ecx;");
    asm("loc_4A3E15: mov %ecx,%eax;");
    asm("loc_4A3E17: cmp $0x20,%eax;");
    asm("loc_4A3E1A: jb loc_4A3E21;");
    asm("loc_4A3E1C: mov $0x1F,%eax;");
    asm("loc_4A3E21: mov %eax,%ecx;");
    asm("loc_4A3E23: mov %ecx,%ebx;");
    asm("loc_4A3E25: shr $2,%ecx;");
    asm("loc_4A3E28: lea -0x24(%edx),%edi;");
    asm("loc_4A3E2B: rep movsl (%esi),(%edi);");
    asm("loc_4A3E2D: mov %ebx,%ecx;");
    asm("loc_4A3E2F: and $3,%ecx;");
    asm("loc_4A3E32: rep movsb (%esi),(%edi);");
    asm("loc_4A3E34: xor %ecx,%ecx;");
    asm("loc_4A3E36: mov %cl,-0x24(%edx,%eax);");
    asm("loc_4A3E3A: mov %eax,-0x28(%edx);");
    asm("loc_4A3E3D: lea 0x58(%ebp),%esi;");
    asm("loc_4A3E40: cmp %ecx,%esi;");
    asm("loc_4A3E42: jne loc_4A3E4B;");
    asm("loc_4A3E44: mov %ecx,-4(%edx);");
    asm("loc_4A3E47: mov %cl,(%edx);");
    asm("loc_4A3E49: jmp loc_4A3E7D;");
    asm("loc_4A3E4B: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A3E4E: xor %eax,%eax;");
    asm("loc_4A3E50: mov %esi,%edi;");
    asm("loc_4A3E52: repne scas (%edi),%al;");
    asm("loc_4A3E54: not %ecx;");
    asm("loc_4A3E56: dec %ecx;");
    asm("loc_4A3E57: mov %ecx,%eax;");
    asm("loc_4A3E59: cmp $0x20,%eax;");
    asm("loc_4A3E5C: jb loc_4A3E63;");
    asm("loc_4A3E5E: mov $0x1F,%eax;");
    asm("loc_4A3E63: mov %eax,%ecx;");
    asm("loc_4A3E65: mov %ecx,%ebx;");
    asm("loc_4A3E67: shr $2,%ecx;");
    asm("loc_4A3E6A: mov %edx,%edi;");
    asm("loc_4A3E6C: rep movsl (%esi),(%edi);");
    asm("loc_4A3E6E: mov %ebx,%ecx;");
    asm("loc_4A3E70: and $3,%ecx;");
    asm("loc_4A3E73: rep movsb (%esi),(%edi);");
    asm("loc_4A3E75: xor %ecx,%ecx;");
    asm("loc_4A3E77: mov %cl,(%edx,%eax);");
    asm("loc_4A3E7A: mov %eax,-4(%edx);");
    asm("loc_4A3E7D: mov 0x18(%esp),%eax;");
    asm("loc_4A3E81: cmp 0x14(%esp),%eax;");
    asm("loc_4A3E85: jne loc_4A3D80;");
    asm("loc_4A3E8B: pop %edi;");
    asm("loc_4A3E8C: pop %esi;");
    asm("loc_4A3E8D: pop %ebp;");
    asm("loc_4A3E8E: pop %ebx;");
    asm("loc_4A3E8F: mov 0xC(%esp),%eax;");
    asm("loc_4A3E93: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3EA0() // _sub_4A3EA0
{
    __DEBUG_ASM(4A3EA0);
    // chunk 0x4A3EA0 _sub_4A3EA0
    asm("loc_4A3EA0: push %edi;");
    asm("loc_4A3EA1: mov 8(%esp),%edi;");
    asm("loc_4A3EA5: test %edi,%edi;");
    asm("loc_4A3EA7: je loc_4A3EB6;");
    asm("loc_4A3EA9: push %esi;");
    asm("loc_4A3EAA: mov 0x10(%esp),%esi;");
    asm("loc_4A3EAE: mov $0x1F,%ecx;");
    asm("loc_4A3EB3: rep movsl (%esi),(%edi);");
    asm("loc_4A3EB5: pop %esi;");
    asm("loc_4A3EB6: pop %edi;");
    asm("loc_4A3EB7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3EC0() // _sub_4A3EC0
{
    __DEBUG_ASM(4A3EC0);
    // chunk 0x4A3EC0 _sub_4A3EC0
    asm("loc_4A3EC0: push %ebp;");
    asm("loc_4A3EC1: push %esi;");
    asm("loc_4A3EC2: mov 0xC(%esp),%esi;");
    asm("loc_4A3EC6: test %esi,%esi;");
    asm("loc_4A3EC8: je loc_4A3F40;");
    asm("loc_4A3ECA: mov 0x10(%esp),%eax;");
    asm("loc_4A3ECE: movl $0,(%esi);");
    asm("loc_4A3ED4: movl $0,4(%esi);");
    asm("loc_4A3EDB: mov (%eax),%ebp;");
    asm("loc_4A3EDD: test %ebp,%ebp;");
    asm("loc_4A3EDF: je loc_4A3F40;");
    asm("loc_4A3EE1: push %ebx;");
    asm("loc_4A3EE2: push %edi;");
    asm("loc_4A3EE3: push %ebp;");
    asm("loc_4A3EE4: calll *_import_5C71C8;");
    asm("loc_4A3EEA: mov %eax,%ebx;");
    asm("loc_4A3EEC: mov 4(%esi),%eax;");
    asm("loc_4A3EEF: lea 1(%ebx),%edi;");
    asm("loc_4A3EF2: add $4,%esp;");
    asm("loc_4A3EF5: cmp %eax,%edi;");
    asm("loc_4A3EF7: jbe loc_4A3F28;");
    asm("loc_4A3EF9: mov (%esi),%eax;");
    asm("loc_4A3EFB: test %eax,%eax;");
    asm("loc_4A3EFD: je loc_4A3F11;");
    asm("loc_4A3EFF: lea (%edi,%edi),%ecx;");
    asm("loc_4A3F02: push %ecx;");
    asm("loc_4A3F03: push %eax;");
    asm("loc_4A3F04: calll *_import_5C71BC;");
    asm("loc_4A3F0A: add $8,%esp;");
    asm("loc_4A3F0D: mov %eax,(%esi);");
    asm("loc_4A3F0F: jmp loc_4A3F25;");
    asm("loc_4A3F11: lea (%edi,%edi),%edx;");
    asm("loc_4A3F14: push %edx;");
    asm("loc_4A3F15: calll *_import_5C71CC;");
    asm("loc_4A3F1B: mov %eax,(%esi);");
    asm("loc_4A3F1D: add $4,%esp;");
    asm("loc_4A3F20: movw $0,(%eax);");
    asm("loc_4A3F25: mov %edi,4(%esi);");
    asm("loc_4A3F28: mov (%esi),%eax;");
    asm("loc_4A3F2A: push %ebx;");
    asm("loc_4A3F2B: push %ebp;");
    asm("loc_4A3F2C: push %eax;");
    asm("loc_4A3F2D: calll *_import_5C71C0;");
    asm("loc_4A3F33: mov (%esi),%ecx;");
    asm("loc_4A3F35: add $0xC,%esp;");
    asm("loc_4A3F38: pop %edi;");
    asm("loc_4A3F39: movw $0,(%ecx,%ebx,2);");
    asm("loc_4A3F3F: pop %ebx;");
    asm("loc_4A3F40: pop %esi;");
    asm("loc_4A3F41: pop %ebp;");
    asm("loc_4A3F42: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3F50() // _sub_4A3F50
{
    __DEBUG_ASM(4A3F50);
    // chunk 0x4A3F50 _sub_4A3F50
    asm("loc_4A3F50: push %esi;");
    asm("loc_4A3F51: mov %ecx,%esi;");
    asm("loc_4A3F53: mov (%esi),%eax;");
    asm("loc_4A3F55: test %eax,%eax;");
    asm("loc_4A3F57: je loc_4A3F70;");
    asm("loc_4A3F59: push %eax;");
    asm("loc_4A3F5A: calll *_import_5C71D8;");
    asm("loc_4A3F60: add $4,%esp;");
    asm("loc_4A3F63: movl $0,(%esi);");
    asm("loc_4A3F69: movl $0,4(%esi);");
    asm("loc_4A3F70: testb $1,8(%esp);");
    asm("loc_4A3F75: je loc_4A3F80;");
    asm("loc_4A3F77: push %esi;");
    asm("loc_4A3F78: call _sub_5B7E1D;");
    asm("loc_4A3F7D: add $4,%esp;");
    asm("loc_4A3F80: mov %esi,%eax;");
    asm("loc_4A3F82: pop %esi;");
    asm("loc_4A3F83: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3F90() // _sub_4A3F90
{
    __DEBUG_ASM(4A3F90);
    // chunk 0x4A3F90 _sub_4A3F90
    asm("loc_4A3F90: mov _data_5D3FA4,%eax;");
    asm("loc_4A3F95: mov %eax,_data_672100;");
    asm("loc_4A3F9A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3FA0() // _sub_4A3FA0
{
    __DEBUG_ASM(4A3FA0);
    // chunk 0x4A3FA0 _sub_4A3FA0
    asm("loc_4A3FA0: mov _data_5D3FA4,%eax;");
    asm("loc_4A3FA5: mov %eax,_data_6720FC;");
    asm("loc_4A3FAA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3FB0() // _sub_4A3FB0
{
    __DEBUG_ASM(4A3FB0);
    // chunk 0x4A3FB0 _sub_4A3FB0
    asm("loc_4A3FB0: mov _data_5D3FA8,%eax;");
    asm("loc_4A3FB5: mov %eax,_data_6720F8;");
    asm("loc_4A3FBA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3FC0() // _sub_4A3FC0
{
    __DEBUG_ASM(4A3FC0);
    // chunk 0x4A3FC0 _sub_4A3FC0
    asm("loc_4A3FC0: push $_data_5CB6B4;");
    asm("loc_4A3FC5: mov $_data_6720CC,%ecx;");
    asm("loc_4A3FCA: call _sub_4A5FB0;");
    asm("loc_4A3FCF: push $_sub_4A3FE0;");
    asm("loc_4A3FD4: call _sub_5B7E6C;");
    asm("loc_4A3FD9: pop %ecx;");
    asm("loc_4A3FDA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3FE0() // _unknown_libname_29
{
    __DEBUG_ASM(4A3FE0);
    // chunk 0x4A3FE0 _sub_4A3FE0
    asm("loc_4A3FE0: mov $_data_6720CC,%ecx;");
    asm("loc_4A3FE5: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A3FF0() // _sub_4A3FF0
{
    __DEBUG_ASM(4A3FF0);
    // chunk 0x4A3FF0 _sub_4A3FF0
    asm("loc_4A3FF0: push $0xFFFFFFFF;");
    asm("loc_4A3FF2: push $_sub_5BCB84;");
    asm("loc_4A3FF7: mov %fs:0,%eax;");
    asm("loc_4A3FFD: push %eax;");
    asm("loc_4A3FFE: mov %esp,%fs:0;");
    asm("loc_4A4005: push %ecx;");
    asm("loc_4A4006: push %ebx;");
    asm("loc_4A4007: push %esi;");
    asm("loc_4A4008: mov %ecx,%esi;");
    asm("loc_4A400A: push %edi;");
    asm("loc_4A400B: mov %esi,0xC(%esp);");
    asm("loc_4A400F: call _sub_59F860;");
    asm("loc_4A4014: xor %ebx,%ebx;");
    asm("loc_4A4016: mov %ebx,0x18(%esp);");
    asm("loc_4A401A: movl $_off_5CBED8,0x32C(%esi);");
    asm("loc_4A4024: lea 0x564(%esi),%edi;");
    asm("loc_4A402A: mov %edi,%ecx;");
    asm("loc_4A402C: movb $1,0x18(%esp);");
    asm("loc_4A4031: call _sub_42CC10;");
    asm("loc_4A4036: lea 0x668(%esi),%ecx;");
    asm("loc_4A403C: movb $2,0x18(%esp);");
    asm("loc_4A4041: calll *_import_5C6030;");
    asm("loc_4A4047: mov %edi,%ecx;");
    asm("loc_4A4049: movl $_off_5D3FDC,(%esi);");
    asm("loc_4A404F: movl $_off_5D3FD0,0x7C(%esi);");
    asm("loc_4A4056: movl $_off_5D3FC8,0x32C(%esi);");
    asm("loc_4A4060: mov %ebx,0x33C(%esi);");
    asm("loc_4A4066: mov %ebx,0x340(%esi);");
    asm("loc_4A406C: mov %ebx,0x578(%esi);");
    asm("loc_4A4072: mov %ebx,0x57C(%esi);");
    asm("loc_4A4078: mov %ebx,0x580(%esi);");
    asm("loc_4A407E: mov %ebx,0x584(%esi);");
    asm("loc_4A4084: mov %ebx,0x588(%esi);");
    asm("loc_4A408A: mov %ebx,0x58C(%esi);");
    asm("loc_4A4090: mov %ebx,0x590(%esi);");
    asm("loc_4A4096: movl $0xFFFFFFFF,0x660(%esi);");
    asm("loc_4A40A0: mov %ebx,0x664(%esi);");
    asm("loc_4A40A6: mov %ebx,0x344(%esi);");
    asm("loc_4A40AC: mov %ebx,0x348(%esi);");
    asm("loc_4A40B2: mov %ebx,0x34C(%esi);");
    asm("loc_4A40B8: mov %ebx,0x350(%esi);");
    asm("loc_4A40BE: mov %ebx,0x354(%esi);");
    asm("loc_4A40C4: mov %ebx,0x560(%esi);");
    asm("loc_4A40CA: call _sub_42CC30;");
    asm("loc_4A40CF: mov 0x10(%esp),%ecx;");
    asm("loc_4A40D3: mov %bl,0x66C(%esi);");
    asm("loc_4A40D9: pop %edi;");
    asm("loc_4A40DA: mov %esi,%eax;");
    asm("loc_4A40DC: pop %esi;");
    asm("loc_4A40DD: pop %ebx;");
    asm("loc_4A40DE: mov %ecx,%fs:0;");
    asm("loc_4A40E5: add $0x10,%esp;");
    asm("loc_4A40E8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A40F0() // _sub_4A40F0
{
    __DEBUG_ASM(4A40F0);
    // chunk 0x4A40F0 _sub_4A40F0
    asm("loc_4A40F0: push %esi;");
    asm("loc_4A40F1: mov %ecx,%esi;");
    asm("loc_4A40F3: call _sub_4A4110;");
    asm("loc_4A40F8: testb $1,8(%esp);");
    asm("loc_4A40FD: je loc_4A4108;");
    asm("loc_4A40FF: push %esi;");
    asm("loc_4A4100: call _sub_5B7E1D;");
    asm("loc_4A4105: add $4,%esp;");
    asm("loc_4A4108: mov %esi,%eax;");
    asm("loc_4A410A: pop %esi;");
    asm("loc_4A410B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A4110() // _sub_4A4110
{
    __DEBUG_ASM(4A4110);
    // chunk 0x4A4110 _sub_4A4110
    asm("loc_4A4110: push $0xFFFFFFFF;");
    asm("loc_4A4112: push $_sub_5BCBCF;");
    asm("loc_4A4117: mov %fs:0,%eax;");
    asm("loc_4A411D: push %eax;");
    asm("loc_4A411E: mov %esp,%fs:0;");
    asm("loc_4A4125: sub $8,%esp;");
    asm("loc_4A4128: push %ebx;");
    asm("loc_4A4129: push %ebp;");
    asm("loc_4A412A: push %esi;");
    asm("loc_4A412B: mov %ecx,%esi;");
    asm("loc_4A412D: push %edi;");
    asm("loc_4A412E: mov %esi,0x14(%esp);");
    asm("loc_4A4132: movl $_off_5D3FDC,(%esi);");
    asm("loc_4A4138: movl $_off_5D3FD0,0x7C(%esi);");
    asm("loc_4A413F: movl $_off_5D3FC8,0x32C(%esi);");
    asm("loc_4A4149: mov 0x66C(%esi),%al;");
    asm("loc_4A414F: xor %ebx,%ebx;");
    asm("loc_4A4151: cmp %bl,%al;");
    asm("loc_4A4153: movl $2,0x20(%esp);");
    asm("loc_4A415B: je loc_4A4172;");
    asm("loc_4A415D: lea 0x668(%esi),%eax;");
    asm("loc_4A4163: push %eax;");
    asm("loc_4A4164: call _sub_42AE40;");
    asm("loc_4A4169: push %eax;");
    asm("loc_4A416A: call _sub_4285C0;");
    asm("loc_4A416F: add $8,%esp;");
    asm("loc_4A4172: mov 0x584(%esi),%eax;");
    asm("loc_4A4178: cmp %ebx,%eax;");
    asm("loc_4A417A: je loc_4A419B;");
    asm("loc_4A417C: mov _import_5C6148,%ecx;");
    asm("loc_4A4182: mov -4(%eax),%edx;");
    asm("loc_4A4185: lea -4(%eax),%edi;");
    asm("loc_4A4188: push %ecx;");
    asm("loc_4A4189: push %edx;");
    asm("loc_4A418A: push $0x60;");
    asm("loc_4A418C: push %eax;");
    asm("loc_4A418D: call _sub_5B7EC6;");
    asm("loc_4A4192: push %edi;");
    asm("loc_4A4193: call _sub_5B7E1D;");
    asm("loc_4A4198: add $4,%esp;");
    asm("loc_4A419B: mov 0x58C(%esi),%eax;");
    asm("loc_4A41A1: push %eax;");
    asm("loc_4A41A2: call _sub_5B7E1D;");
    asm("loc_4A41A7: mov 0x344(%esi),%eax;");
    asm("loc_4A41AD: push %eax;");
    asm("loc_4A41AE: calll *_import_5C71D8;");
    asm("loc_4A41B4: mov 0x348(%esi),%eax;");
    asm("loc_4A41BA: push %eax;");
    asm("loc_4A41BB: call _sub_5B7E1D;");
    asm("loc_4A41C0: lea 0x560(%esi),%ebp;");
    asm("loc_4A41C6: push %ebp;");
    asm("loc_4A41C7: mov %ebx,0x344(%esi);");
    asm("loc_4A41CD: mov %ebx,0x348(%esi);");
    asm("loc_4A41D3: mov %ebx,0x34C(%esi);");
    asm("loc_4A41D9: calll *_import_5C60C8;");
    asm("loc_4A41DF: lea 0x564(%esi),%edi;");
    asm("loc_4A41E5: add $0x10,%esp;");
    asm("loc_4A41E8: mov %edi,%ecx;");
    asm("loc_4A41EA: call _sub_42CC50;");
    asm("loc_4A41EF: mov %edi,%ecx;");
    asm("loc_4A41F1: mov %ebx,(%ebp);");
    asm("loc_4A41F4: call _sub_42CC30;");
    asm("loc_4A41F9: mov _import_5C6D38,%ecx;");
    asm("loc_4A41FF: mov (%ecx),%eax;");
    asm("loc_4A4201: mov 0x55C(%esi),%ecx;");
    asm("loc_4A4207: mov (%eax),%edx;");
    asm("loc_4A4209: push %ecx;");
    asm("loc_4A420A: push %eax;");
    asm("loc_4A420B: calll *0x28(%edx);");
    asm("loc_4A420E: or $0xFFFFFFFF,%ebp;");
    asm("loc_4A4211: mov %edi,%ecx;");
    asm("loc_4A4213: mov %ebp,0x55C(%esi);");
    asm("loc_4A4219: movb $1,0x20(%esp);");
    asm("loc_4A421E: call _sub_42CC50;");
    asm("loc_4A4223: lea 0x32C(%esi),%ecx;");
    asm("loc_4A4229: mov %bl,0x20(%esp);");
    asm("loc_4A422D: call _sub_576010;");
    asm("loc_4A4232: mov %esi,%ecx;");
    asm("loc_4A4234: mov %ebp,0x20(%esp);");
    asm("loc_4A4238: call _sub_59FA50;");
    asm("loc_4A423D: mov 0x18(%esp),%ecx;");
    asm("loc_4A4241: pop %edi;");
    asm("loc_4A4242: pop %esi;");
    asm("loc_4A4243: pop %ebp;");
    asm("loc_4A4244: pop %ebx;");
    asm("loc_4A4245: mov %ecx,%fs:0;");
    asm("loc_4A424C: add $0x14,%esp;");
    asm("loc_4A424F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A4250() // _sub_4A4250
{
    __DEBUG_ASM(4A4250);
    // chunk 0x4A4250 _sub_4A4250
    asm("loc_4A4250: sub $0x180,%esp;");
    asm("loc_4A4256: push %ebx;");
    asm("loc_4A4257: push %ebp;");
    asm("loc_4A4258: push %esi;");
    asm("loc_4A4259: mov %ecx,%esi;");
    asm("loc_4A425B: movl $0x3EDC28F6,0xC(%esp);");
    asm("loc_4A4263: mov 0xC(%esp),%ecx;");
    asm("loc_4A4267: movl $0x3E99999A,0x10(%esp);");
    asm("loc_4A426F: mov 0x10(%esp),%edx;");
    asm("loc_4A4273: lea 0xB4(%esi),%eax;");
    asm("loc_4A4279: mov %ecx,(%eax);");
    asm("loc_4A427B: mov %edx,4(%eax);");
    asm("loc_4A427E: movl $0,0x14(%esp);");
    asm("loc_4A4286: mov 0x14(%esp),%ecx;");
    asm("loc_4A428A: mov %ecx,8(%eax);");
    asm("loc_4A428D: movl $0,0xC(%esp);");
    asm("loc_4A4295: mov 0xC(%esp),%eax;");
    asm("loc_4A4299: movl $0x3D072B02,0x10(%esp);");
    asm("loc_4A42A1: mov 0x10(%esp),%ecx;");
    asm("loc_4A42A5: lea 0xC0(%esi),%edx;");
    asm("loc_4A42AB: mov %eax,(%edx);");
    asm("loc_4A42AD: mov %ecx,4(%edx);");
    asm("loc_4A42B0: push %edi;");
    asm("loc_4A42B1: movl $0xBF800000,0x18(%esp);");
    asm("loc_4A42B9: mov 0x18(%esp),%eax;");
    asm("loc_4A42BD: mov %eax,8(%edx);");
    asm("loc_4A42C0: movl $0,0x10(%esp);");
    asm("loc_4A42C8: mov 0x10(%esp),%edx;");
    asm("loc_4A42CC: lea 0x330(%esi),%edi;");
    asm("loc_4A42D2: movl $0xBDCCCCCD,0x14(%esp);");
    asm("loc_4A42DA: mov 0x14(%esp),%eax;");
    asm("loc_4A42DE: mov %edi,%ecx;");
    asm("loc_4A42E0: mov %edx,(%ecx);");
    asm("loc_4A42E2: mov %eax,4(%ecx);");
    asm("loc_4A42E5: movl $0xBFBFBE77,0x18(%esp);");
    asm("loc_4A42ED: mov 0x18(%esp),%edx;");
    asm("loc_4A42F1: lea 0x10(%esp),%eax;");
    asm("loc_4A42F5: push %eax;");
    asm("loc_4A42F6: mov %edx,8(%ecx);");
    asm("loc_4A42F9: lea 0x20(%esp),%ecx;");
    asm("loc_4A42FD: push %edi;");
    asm("loc_4A42FE: push %ecx;");
    asm("loc_4A42FF: movl $0,0x40(%esp);");
    asm("loc_4A4307: movl $0,0x44(%esp);");
    asm("loc_4A430F: movl $0,0x48(%esp);");
    asm("loc_4A4317: movl $0,0x34(%esp);");
    asm("loc_4A431F: movl $0,0x38(%esp);");
    asm("loc_4A4327: movl $0,0x3C(%esp);");
    asm("loc_4A432F: movl $0,0x1C(%esp);");
    asm("loc_4A4337: movl $0,0x20(%esp);");
    asm("loc_4A433F: movl $0,0x24(%esp);");
    asm("loc_4A4347: call _sub_423B30;");
    asm("loc_4A434C: add $0xC,%esp;");
    asm("loc_4A434F: lea 0x34(%esp),%edx;");
    asm("loc_4A4353: push %edx;");
    asm("loc_4A4354: push $0;");
    asm("loc_4A4356: push $0;");
    asm("loc_4A4358: push $0;");
    asm("loc_4A435A: push $1;");
    asm("loc_4A435C: push $0;");
    asm("loc_4A435E: push $1;");
    asm("loc_4A4360: push $1;");
    asm("loc_4A4362: push $0;");
    asm("loc_4A4364: push $0;");
    asm("loc_4A4366: push $0;");
    asm("loc_4A4368: lea 0x54(%esp),%eax;");
    asm("loc_4A436C: push %eax;");
    asm("loc_4A436D: push $0;");
    asm("loc_4A436F: lea 0x50(%esp),%ecx;");
    asm("loc_4A4373: push %ecx;");
    asm("loc_4A4374: push $_data_5CB6D8;");
    asm("loc_4A4379: push $_data_5D42FC;");
    asm("loc_4A437E: mov %esi,%ecx;");
    asm("loc_4A4380: call _sub_5A0DB0;");
    asm("loc_4A4385: mov %eax,0x670(%esi);");
    asm("loc_4A438B: movl $0,0x34(%esp);");
    asm("loc_4A4393: movl $0,0x38(%esp);");
    asm("loc_4A439B: movl $0,0x3C(%esp);");
    asm("loc_4A43A3: movl $0,0x10(%esp);");
    asm("loc_4A43AB: movl $0,0x14(%esp);");
    asm("loc_4A43B3: movl $0,0x18(%esp);");
    asm("loc_4A43BB: movl $0xBE5C28F6,0x28(%esp);");
    asm("loc_4A43C3: lea 0x28(%esp),%edx;");
    asm("loc_4A43C7: push %edx;");
    asm("loc_4A43C8: lea 0x20(%esp),%eax;");
    asm("loc_4A43CC: push %edi;");
    asm("loc_4A43CD: push %eax;");
    asm("loc_4A43CE: movl $0x3E5E353F,0x38(%esp);");
    asm("loc_4A43D6: movl $0,0x3C(%esp);");
    asm("loc_4A43DE: call _sub_423B30;");
    asm("loc_4A43E3: add $0xC,%esp;");
    asm("loc_4A43E6: lea 0x34(%esp),%ecx;");
    asm("loc_4A43EA: push %ecx;");
    asm("loc_4A43EB: push $0;");
    asm("loc_4A43ED: push $0;");
    asm("loc_4A43EF: push $0;");
    asm("loc_4A43F1: push $1;");
    asm("loc_4A43F3: push $0;");
    asm("loc_4A43F5: push $1;");
    asm("loc_4A43F7: push $1;");
    asm("loc_4A43F9: push $0;");
    asm("loc_4A43FB: push $0;");
    asm("loc_4A43FD: push $0;");
    asm("loc_4A43FF: lea 0x3C(%esp),%edx;");
    asm("loc_4A4403: push %edx;");
    asm("loc_4A4404: push $0;");
    asm("loc_4A4406: lea 0x50(%esp),%eax;");
    asm("loc_4A440A: push %eax;");
    asm("loc_4A440B: push $_data_5D2C30;");
    asm("loc_4A4410: push $_data_5D42E8;");
    asm("loc_4A4415: mov %esi,%ecx;");
    asm("loc_4A4417: call _sub_5A0DB0;");
    asm("loc_4A441C: flds 4(%edi);");
    asm("loc_4A441F: mov 8(%edi),%ecx;");
    asm("loc_4A4422: fsubs _data_5D2C10;");
    asm("loc_4A4428: push %ecx;");
    asm("loc_4A4429: sub $8,%esp;");
    asm("loc_4A442C: fstps 4(%esp);");
    asm("loc_4A4430: lea 0x28(%esp),%ecx;");
    asm("loc_4A4434: flds (%edi);");
    asm("loc_4A4436: movl $0,0x34(%esp);");
    asm("loc_4A443E: fsubs _data_5D2C0C;");
    asm("loc_4A4444: movl $0,0x38(%esp);");
    asm("loc_4A444C: movl $0,0x3C(%esp);");
    asm("loc_4A4454: movl $0,0x40(%esp);");
    asm("loc_4A445C: fstps (%esp);");
    asm("loc_4A445F: movl $0,0x44(%esp);");
    asm("loc_4A4467: movl $0,0x48(%esp);");
    asm("loc_4A446F: call _sub_422B80;");
    asm("loc_4A4474: lea 0x28(%esp),%edx;");
    asm("loc_4A4478: push %edx;");
    asm("loc_4A4479: push $0;");
    asm("loc_4A447B: push $0;");
    asm("loc_4A447D: push $0;");
    asm("loc_4A447F: push $1;");
    asm("loc_4A4481: push $0;");
    asm("loc_4A4483: push $1;");
    asm("loc_4A4485: push $1;");
    asm("loc_4A4487: push $0;");
    asm("loc_4A4489: push $0;");
    asm("loc_4A448B: push $0;");
    asm("loc_4A448D: lea 0x60(%esp),%eax;");
    asm("loc_4A4491: push %eax;");
    asm("loc_4A4492: push $0;");
    asm("loc_4A4494: lea 0x50(%esp),%ecx;");
    asm("loc_4A4498: push %ecx;");
    asm("loc_4A4499: push $_data_5D2BD8;");
    asm("loc_4A449E: push $_data_5D42D8;");
    asm("loc_4A44A3: mov %esi,%ecx;");
    asm("loc_4A44A5: call _sub_5A0DB0;");
    asm("loc_4A44AA: flds 4(%edi);");
    asm("loc_4A44AD: mov 8(%edi),%edx;");
    asm("loc_4A44B0: fadds _data_5D42D4;");
    asm("loc_4A44B6: push %edx;");
    asm("loc_4A44B7: sub $8,%esp;");
    asm("loc_4A44BA: fstps 4(%esp);");
    asm("loc_4A44BE: movl $0,0x34(%esp);");
    asm("loc_4A44C6: flds (%edi);");
    asm("loc_4A44C8: movl $0,0x38(%esp);");
    asm("loc_4A44D0: movl $0,0x3C(%esp);");
    asm("loc_4A44D8: movl $0,0x40(%esp);");
    asm("loc_4A44E0: movl $0,0x44(%esp);");
    asm("loc_4A44E8: movl $0,0x48(%esp);");
    asm("loc_4A44F0: fadds _data_5D129C;");
    asm("loc_4A44F6: lea 0x28(%esp),%ecx;");
    asm("loc_4A44FA: fstps (%esp);");
    asm("loc_4A44FD: call _sub_422B80;");
    asm("loc_4A4502: lea 0x28(%esp),%eax;");
    asm("loc_4A4506: push %eax;");
    asm("loc_4A4507: push $0;");
    asm("loc_4A4509: push $0;");
    asm("loc_4A450B: push $0;");
    asm("loc_4A450D: push $1;");
    asm("loc_4A450F: push $0;");
    asm("loc_4A4511: push $1;");
    asm("loc_4A4513: push $1;");
    asm("loc_4A4515: push $0;");
    asm("loc_4A4517: push $0;");
    asm("loc_4A4519: push $0;");
    asm("loc_4A451B: lea 0x60(%esp),%ecx;");
    asm("loc_4A451F: push %ecx;");
    asm("loc_4A4520: push $0;");
    asm("loc_4A4522: lea 0x50(%esp),%edx;");
    asm("loc_4A4526: push %edx;");
    asm("loc_4A4527: push $_data_5D2B88;");
    asm("loc_4A452C: push $_data_5D42C4;");
    asm("loc_4A4531: mov %esi,%ecx;");
    asm("loc_4A4533: call _sub_5A0DB0;");
    asm("loc_4A4538: flds 4(%edi);");
    asm("loc_4A453B: mov 8(%edi),%eax;");
    asm("loc_4A453E: fadds _data_5D42C0;");
    asm("loc_4A4544: push %eax;");
    asm("loc_4A4545: sub $8,%esp;");
    asm("loc_4A4548: fstps 4(%esp);");
    asm("loc_4A454C: lea 0x28(%esp),%ecx;");
    asm("loc_4A4550: flds (%edi);");
    asm("loc_4A4552: fsubs _data_5D3E90;");
    asm("loc_4A4558: fstps (%esp);");
    asm("loc_4A455B: call _sub_422B80;");
    asm("loc_4A4560: push $0;");
    asm("loc_4A4562: push $0;");
    asm("loc_4A4564: push $1;");
    asm("loc_4A4566: push $0x4AB;");
    asm("loc_4A456B: push $0x40000000;");
    asm("loc_4A4570: push $0x3CF5C28F;");
    asm("loc_4A4575: push $0x3F9C28F6;");
    asm("loc_4A457A: push $0;");
    asm("loc_4A457C: lea 0x3C(%esp),%ecx;");
    asm("loc_4A4580: push %ecx;");
    asm("loc_4A4581: push $_data_5CE91C;");
    asm("loc_4A4586: push $_data_5D42B4;");
    asm("loc_4A458B: mov %esi,%ecx;");
    asm("loc_4A458D: call _sub_5A0E30;");
    asm("loc_4A4592: push $_data_5D2B3C;");
    asm("loc_4A4597: call _sub_41C850;");
    asm("loc_4A459C: mov %eax,0x55C(%esi);");
    asm("loc_4A45A2: flds 4(%edi);");
    asm("loc_4A45A5: mov 8(%edi),%edx;");
    asm("loc_4A45A8: fadds _data_5D42D4;");
    asm("loc_4A45AE: add $4,%esp;");
    asm("loc_4A45B1: push %edx;");
    asm("loc_4A45B2: sub $8,%esp;");
    asm("loc_4A45B5: fstps 4(%esp);");
    asm("loc_4A45B9: lea 0x28(%esp),%ecx;");
    asm("loc_4A45BD: flds (%edi);");
    asm("loc_4A45BF: movl $0,0x34(%esp);");
    asm("loc_4A45C7: fadds _data_5D129C;");
    asm("loc_4A45CD: movl $0,0x38(%esp);");
    asm("loc_4A45D5: movl $0,0x3C(%esp);");
    asm("loc_4A45DD: movl $0,0x40(%esp);");
    asm("loc_4A45E5: fstps (%esp);");
    asm("loc_4A45E8: movl $0,0x44(%esp);");
    asm("loc_4A45F0: movl $0,0x48(%esp);");
    asm("loc_4A45F8: call _sub_422B80;");
    asm("loc_4A45FD: lea 0x28(%esp),%eax;");
    asm("loc_4A4601: push %eax;");
    asm("loc_4A4602: push $0;");
    asm("loc_4A4604: push $0;");
    asm("loc_4A4606: push $0;");
    asm("loc_4A4608: push $1;");
    asm("loc_4A460A: push $0;");
    asm("loc_4A460C: push $1;");
    asm("loc_4A460E: push $1;");
    asm("loc_4A4610: push $0;");
    asm("loc_4A4612: push $0;");
    asm("loc_4A4614: push $0;");
    asm("loc_4A4616: lea 0x60(%esp),%ecx;");
    asm("loc_4A461A: push %ecx;");
    asm("loc_4A461B: push $0;");
    asm("loc_4A461D: lea 0x50(%esp),%edx;");
    asm("loc_4A4621: push %edx;");
    asm("loc_4A4622: push $_data_5D2B3C;");
    asm("loc_4A4627: push $_data_5D42A4;");
    asm("loc_4A462C: mov %esi,%ecx;");
    asm("loc_4A462E: call _sub_5A0DB0;");
    asm("loc_4A4633: flds 4(%edi);");
    asm("loc_4A4636: mov 8(%edi),%eax;");
    asm("loc_4A4639: fadds _data_5D42A0;");
    asm("loc_4A463F: push %eax;");
    asm("loc_4A4640: sub $8,%esp;");
    asm("loc_4A4643: fstps 4(%esp);");
    asm("loc_4A4647: lea 0x28(%esp),%ecx;");
    asm("loc_4A464B: flds (%edi);");
    asm("loc_4A464D: movl $0x3CA3D70A,0x34(%esp);");
    asm("loc_4A4655: fadds _data_5D429C;");
    asm("loc_4A465B: movl $0x3CA3D70A,0x38(%esp);");
    asm("loc_4A4663: movl $0,0x3C(%esp);");
    asm("loc_4A466B: fstps (%esp);");
    asm("loc_4A466E: call _sub_422B80;");
    asm("loc_4A4673: push $0;");
    asm("loc_4A4675: push $0;");
    asm("loc_4A4677: push $0x42A;");
    asm("loc_4A467C: push $0;");
    asm("loc_4A467E: push $0;");
    asm("loc_4A4680: push $0;");
    asm("loc_4A4682: push $0;");
    asm("loc_4A4684: lea 0x44(%esp),%ecx;");
    asm("loc_4A4688: push %ecx;");
    asm("loc_4A4689: push $0;");
    asm("loc_4A468B: lea 0x40(%esp),%edx;");
    asm("loc_4A468F: push %edx;");
    asm("loc_4A4690: push $0;");
    asm("loc_4A4692: push $_data_5CED30;");
    asm("loc_4A4697: push $0;");
    asm("loc_4A4699: push $_data_5D01D0;");
    asm("loc_4A469E: push $_data_5D428C;");
    asm("loc_4A46A3: mov %esi,%ecx;");
    asm("loc_4A46A5: call _sub_5A0C90;");
    asm("loc_4A46AA: mov %eax,0x5B4(%esi);");
    asm("loc_4A46B0: flds 4(%edi);");
    asm("loc_4A46B3: mov 8(%edi),%eax;");
    asm("loc_4A46B6: fadds _data_5D2AC0;");
    asm("loc_4A46BC: push %eax;");
    asm("loc_4A46BD: sub $8,%esp;");
    asm("loc_4A46C0: fstps 4(%esp);");
    asm("loc_4A46C4: lea 0x78(%esp),%ecx;");
    asm("loc_4A46C8: flds (%edi);");
    asm("loc_4A46CA: fsubs _data_5D2ABC;");
    asm("loc_4A46D0: fstps (%esp);");
    asm("loc_4A46D3: call _sub_422B80;");
    asm("loc_4A46D8: xor %ebp,%ebp;");
    asm("loc_4A46DA: lea 0x60C(%esi),%ecx;");
    asm("loc_4A46E0: mov %ebp,0x44(%esp);");
    asm("loc_4A46E4: mov %ecx,0x40(%esp);");
    asm("loc_4A46E8: lea 0x5D0(%esi),%ebx;");
    asm("loc_4A46EE: mov %edi,%edi;");
    asm("loc_4A46F0: fildl 0x44(%esp);");
    asm("loc_4A46F4: mov 0x74(%esp),%edx;");
    asm("loc_4A46F8: mov 0x6C(%esp),%eax;");
    asm("loc_4A46FC: push %edx;");
    asm("loc_4A46FD: fmuls _data_5D2AB8;");
    asm("loc_4A4703: push %ecx;");
    asm("loc_4A4704: flds 0x78(%esp);");
    asm("loc_4A4708: lea 0x18(%esp),%ecx;");
    asm("loc_4A470C: fsub %st(1),%st;");
    asm("loc_4A470E: fstps (%esp);");
    asm("loc_4A4711: push %eax;");
    asm("loc_4A4712: fstp %st(0);");
    asm("loc_4A4714: call _sub_422B80;");
    asm("loc_4A4719: push %ebp;");
    asm("loc_4A471A: lea 0x94(%esp),%ecx;");
    asm("loc_4A4721: push $_data_5D4278;");
    asm("loc_4A4726: push %ecx;");
    asm("loc_4A4727: calll *_import_5C71EC;");
    asm("loc_4A472D: flds 0x1C(%esp);");
    asm("loc_4A4731: mov 0x24(%esp),%edx;");
    asm("loc_4A4735: fsubs _data_5D2A98;");
    asm("loc_4A473B: mov 0x20(%esp),%eax;");
    asm("loc_4A473F: add $0xC,%esp;");
    asm("loc_4A4742: push %edx;");
    asm("loc_4A4743: push %eax;");
    asm("loc_4A4744: push %ecx;");
    asm("loc_4A4745: lea 0x84(%esp),%ecx;");
    asm("loc_4A474C: fstps (%esp);");
    asm("loc_4A474F: movl $0,0x34(%esp);");
    asm("loc_4A4757: movl $0,0x38(%esp);");
    asm("loc_4A475F: movl $0,0x3C(%esp);");
    asm("loc_4A4767: movl $0,0x40(%esp);");
    asm("loc_4A476F: movl $0,0x44(%esp);");
    asm("loc_4A4777: movl $0,0x48(%esp);");
    asm("loc_4A477F: call _sub_422B80;");
    asm("loc_4A4784: lea 0x28(%esp),%ecx;");
    asm("loc_4A4788: push %ecx;");
    asm("loc_4A4789: push $0;");
    asm("loc_4A478B: push $0;");
    asm("loc_4A478D: push $0;");
    asm("loc_4A478F: push $1;");
    asm("loc_4A4791: push $0;");
    asm("loc_4A4793: push $0;");
    asm("loc_4A4795: push $1;");
    asm("loc_4A4797: push $0;");
    asm("loc_4A4799: push $0;");
    asm("loc_4A479B: push $0;");
    asm("loc_4A479D: lea 0x60(%esp),%edx;");
    asm("loc_4A47A1: push %edx;");
    asm("loc_4A47A2: push $0;");
    asm("loc_4A47A4: lea 0xAC(%esp),%eax;");
    asm("loc_4A47AB: push %eax;");
    asm("loc_4A47AC: push $_data_5D2A64;");
    asm("loc_4A47B1: lea 0xCC(%esp),%ecx;");
    asm("loc_4A47B8: push %ecx;");
    asm("loc_4A47B9: mov %esi,%ecx;");
    asm("loc_4A47BB: call _sub_5A0DB0;");
    asm("loc_4A47C0: push %ebp;");
    asm("loc_4A47C1: lea 0x94(%esp),%edx;");
    asm("loc_4A47C8: push $_data_5D4260;");
    asm("loc_4A47CD: push %edx;");
    asm("loc_4A47CE: mov %eax,-0x14(%ebx);");
    asm("loc_4A47D1: calll *_import_5C71EC;");
    asm("loc_4A47D7: flds 0x1C(%esp);");
    asm("loc_4A47DB: mov 0x24(%esp),%eax;");
    asm("loc_4A47DF: fsubs _data_5D2A98;");
    asm("loc_4A47E5: mov 0x20(%esp),%ecx;");
    asm("loc_4A47E9: add $0xC,%esp;");
    asm("loc_4A47EC: push %eax;");
    asm("loc_4A47ED: push %ecx;");
    asm("loc_4A47EE: push %ecx;");
    asm("loc_4A47EF: lea 0x90(%esp),%ecx;");
    asm("loc_4A47F6: fstps (%esp);");
    asm("loc_4A47F9: movl $0x3CF5C28F,0x54(%esp);");
    asm("loc_4A4801: movl $0x3CF5C28F,0x58(%esp);");
    asm("loc_4A4809: movl $0,0x5C(%esp);");
    asm("loc_4A4811: call _sub_422B80;");
    asm("loc_4A4816: push $0;");
    asm("loc_4A4818: push $0;");
    asm("loc_4A481A: push $0x42B;");
    asm("loc_4A481F: push $0;");
    asm("loc_4A4821: push $0;");
    asm("loc_4A4823: lea 0x5C(%esp),%edx;");
    asm("loc_4A4827: push %edx;");
    asm("loc_4A4828: lea 0x9C(%esp),%eax;");
    asm("loc_4A482F: push %eax;");
    asm("loc_4A4830: push $_data_5CED30;");
    asm("loc_4A4835: lea 0xB0(%esp),%ecx;");
    asm("loc_4A483C: push %ecx;");
    asm("loc_4A483D: mov %esi,%ecx;");
    asm("loc_4A483F: call _sub_5A0D00;");
    asm("loc_4A4844: push %ebp;");
    asm("loc_4A4845: lea 0x94(%esp),%edx;");
    asm("loc_4A484C: push $_data_5D424C;");
    asm("loc_4A4851: push %edx;");
    asm("loc_4A4852: mov %eax,(%ebx);");
    asm("loc_4A4854: calll *_import_5C71EC;");
    asm("loc_4A485A: flds 0x1C(%esp);");
    asm("loc_4A485E: mov 0x24(%esp),%eax;");
    asm("loc_4A4862: fadds _data_5D4248;");
    asm("loc_4A4868: mov 0x20(%esp),%ecx;");
    asm("loc_4A486C: add $0xC,%esp;");
    asm("loc_4A486F: push %eax;");
    asm("loc_4A4870: push %ecx;");
    asm("loc_4A4871: push %ecx;");
    asm("loc_4A4872: lea 0x6C(%esp),%ecx;");
    asm("loc_4A4876: fstps (%esp);");
    asm("loc_4A4879: movl $0x3E7AE148,0x60(%esp);");
    asm("loc_4A4881: movl $0x3CFDF3B6,0x64(%esp);");
    asm("loc_4A4889: movl $0,0x68(%esp);");
    asm("loc_4A4891: call _sub_422B80;");
    asm("loc_4A4896: push $0;");
    asm("loc_4A4898: push $0;");
    asm("loc_4A489A: push $0x42B;");
    asm("loc_4A489F: push $0;");
    asm("loc_4A48A1: push $0;");
    asm("loc_4A48A3: lea 0x68(%esp),%edx;");
    asm("loc_4A48A7: push %edx;");
    asm("loc_4A48A8: lea 0x78(%esp),%eax;");
    asm("loc_4A48AC: push %eax;");
    asm("loc_4A48AD: push $0;");
    asm("loc_4A48AF: lea 0xB0(%esp),%ecx;");
    asm("loc_4A48B6: push %ecx;");
    asm("loc_4A48B7: mov %esi,%ecx;");
    asm("loc_4A48B9: call _sub_5A0D00;");
    asm("loc_4A48BE: push %ebp;");
    asm("loc_4A48BF: lea 0x94(%esp),%edx;");
    asm("loc_4A48C6: push $_data_5D4230;");
    asm("loc_4A48CB: push %edx;");
    asm("loc_4A48CC: mov %eax,0x14(%ebx);");
    asm("loc_4A48CF: calll *_import_5C71EC;");
    asm("loc_4A48D5: flds 0x20(%esp);");
    asm("loc_4A48D9: mov 0x24(%esp),%eax;");
    asm("loc_4A48DD: fadds _data_5D422C;");
    asm("loc_4A48E3: add $0xC,%esp;");
    asm("loc_4A48E6: push %eax;");
    asm("loc_4A48E7: sub $8,%esp;");
    asm("loc_4A48EA: fstps 4(%esp);");
    asm("loc_4A48EE: lea 0x28(%esp),%ecx;");
    asm("loc_4A48F2: flds 0x1C(%esp);");
    asm("loc_4A48F6: fsubs _data_5D4228;");
    asm("loc_4A48FC: fstps (%esp);");
    asm("loc_4A48FF: call _sub_422B80;");
    asm("loc_4A4904: mov 0x40(%esp),%eax;");
    asm("loc_4A4908: mov 0x1C(%esp),%edx;");
    asm("loc_4A490C: push $1;");
    asm("loc_4A490E: push $0;");
    asm("loc_4A4910: push $0;");
    asm("loc_4A4912: push $0;");
    asm("loc_4A4914: push $0x3FC00000;");
    asm("loc_4A4919: push $0x3CF5C28F;");
    asm("loc_4A491E: mov %eax,%ecx;");
    asm("loc_4A4920: mov %edx,(%ecx);");
    asm("loc_4A4922: mov 0x38(%esp),%edx;");
    asm("loc_4A4926: push $0x3EF33333;");
    asm("loc_4A492B: push $0;");
    asm("loc_4A492D: mov %edx,4(%ecx);");
    asm("loc_4A4930: mov 0x44(%esp),%edx;");
    asm("loc_4A4934: push %eax;");
    asm("loc_4A4935: mov %edx,8(%ecx);");
    asm("loc_4A4938: push $_data_5D29F8;");
    asm("loc_4A493D: lea 0xB8(%esp),%eax;");
    asm("loc_4A4944: push %eax;");
    asm("loc_4A4945: mov %esi,%ecx;");
    asm("loc_4A4947: call _sub_5A0E30;");
    asm("loc_4A494C: mov %eax,0x28(%ebx);");
    asm("loc_4A494F: mov 0x334(%eax),%eax;");
    asm("loc_4A4955: cmpb $1,0x30(%eax);");
    asm("loc_4A4959: je loc_4A4966;");
    asm("loc_4A495B: movb $1,0x30(%eax);");
    asm("loc_4A495F: movl $0,0x28(%eax);");
    asm("loc_4A4966: mov 0x40(%esp),%edx;");
    asm("loc_4A496A: inc %ebp;");
    asm("loc_4A496B: add $0xC,%edx;");
    asm("loc_4A496E: add $4,%ebx;");
    asm("loc_4A4971: cmp $5,%ebp;");
    asm("loc_4A4974: mov %ebp,0x44(%esp);");
    asm("loc_4A4978: mov %edx,0x40(%esp);");
    asm("loc_4A497C: jl loc_4A46F0;");
    asm("loc_4A4982: mov 8(%edi),%ecx;");
    asm("loc_4A4985: flds 4(%edi);");
    asm("loc_4A4988: fadds _data_5D29AC;");
    asm("loc_4A498E: push %ecx;");
    asm("loc_4A498F: sub $8,%esp;");
    asm("loc_4A4992: lea 0x6C(%esp),%ecx;");
    asm("loc_4A4996: fstps 4(%esp);");
    asm("loc_4A499A: flds (%edi);");
    asm("loc_4A499C: fadds _data_5D29B0;");
    asm("loc_4A49A2: fstps (%esp);");
    asm("loc_4A49A5: call _sub_422B80;");
    asm("loc_4A49AA: push $0;");
    asm("loc_4A49AC: push $5;");
    asm("loc_4A49AE: push $5;");
    asm("loc_4A49B0: push $0;");
    asm("loc_4A49B2: push $0x3EA24DD3;");
    asm("loc_4A49B7: push $0x3C9BA5E3;");
    asm("loc_4A49BC: lea 0x78(%esp),%edx;");
    asm("loc_4A49C0: push %edx;");
    asm("loc_4A49C1: push $_data_5D4214;");
    asm("loc_4A49C6: mov %esi,%ecx;");
    asm("loc_4A49C8: call _sub_5A17E0;");
    asm("loc_4A49CD: mov %eax,0x648(%esi);");
    asm("loc_4A49D3: flds 4(%edi);");
    asm("loc_4A49D6: mov 8(%edi),%eax;");
    asm("loc_4A49D9: fsubs _data_5D4210;");
    asm("loc_4A49DF: push %eax;");
    asm("loc_4A49E0: sub $8,%esp;");
    asm("loc_4A49E3: fstps 4(%esp);");
    asm("loc_4A49E7: lea 0x6C(%esp),%ecx;");
    asm("loc_4A49EB: flds (%edi);");
    asm("loc_4A49ED: fadds _data_5D420C;");
    asm("loc_4A49F3: fstps (%esp);");
    asm("loc_4A49F6: call _sub_422B80;");
    asm("loc_4A49FB: mov _data_5D3FB0,%ecx;");
    asm("loc_4A4A01: mov _off_611D0C,%eax;");
    asm("loc_4A4A06: push $0;");
    asm("loc_4A4A08: push $0;");
    asm("loc_4A4A0A: push $0;");
    asm("loc_4A4A0C: push $0;");
    asm("loc_4A4A0E: push %ecx;");
    asm("loc_4A4A0F: push $0x3CF5C28F;");
    asm("loc_4A4A14: push $0x3FACCCCD;");
    asm("loc_4A4A19: push $0;");
    asm("loc_4A4A1B: lea 0x80(%esp),%edx;");
    asm("loc_4A4A22: push %edx;");
    asm("loc_4A4A23: push %eax;");
    asm("loc_4A4A24: push $_data_5D3FB8;");
    asm("loc_4A4A29: mov %esi,%ecx;");
    asm("loc_4A4A2B: call _sub_5A0E30;");
    asm("loc_4A4A30: flds 0x338(%esi);");
    asm("loc_4A4A36: lea 0x1C(%esp),%ecx;");
    asm("loc_4A4A3A: push %ecx;");
    asm("loc_4A4A3B: push $0;");
    asm("loc_4A4A3D: push $0;");
    asm("loc_4A4A3F: push $0;");
    asm("loc_4A4A41: push $1;");
    asm("loc_4A4A43: push $0;");
    asm("loc_4A4A45: push $0;");
    asm("loc_4A4A47: push $1;");
    asm("loc_4A4A49: push $0;");
    asm("loc_4A4A4B: push $0;");
    asm("loc_4A4A4D: push $0;");
    asm("loc_4A4A4F: lea 0x80(%esp),%edx;");
    asm("loc_4A4A56: push %edx;");
    asm("loc_4A4A57: push $0;");
    asm("loc_4A4A59: mov %eax,0x5B8(%esi);");
    asm("loc_4A4A5F: lea 0x7C(%esp),%eax;");
    asm("loc_4A4A63: push %eax;");
    asm("loc_4A4A64: push $_data_5D2A64;");
    asm("loc_4A4A69: fstps 0x8C(%esp);");
    asm("loc_4A4A70: movl $0,0x58(%esp);");
    asm("loc_4A4A78: movl $0,0x5C(%esp);");
    asm("loc_4A4A80: movl $0,0x60(%esp);");
    asm("loc_4A4A88: movl $0x3CF5C28F,0x90(%esp);");
    asm("loc_4A4A93: movl $0x3CF5C28F,0x94(%esp);");
    asm("loc_4A4A9E: movl $0,0x98(%esp);");
    asm("loc_4A4AA9: movl $0xBF08F5C3,0x84(%esp);");
    asm("loc_4A4AB4: movl $0xBDE353F8,0x88(%esp);");
    asm("loc_4A4ABF: push $_data_5D41FC;");
    asm("loc_4A4AC4: mov %esi,%ecx;");
    asm("loc_4A4AC6: call _sub_5A0DB0;");
    asm("loc_4A4ACB: lea 0x90(%esp),%ecx;");
    asm("loc_4A4AD2: push $_data_5D41E8;");
    asm("loc_4A4AD7: push %ecx;");
    asm("loc_4A4AD8: mov %eax,0x658(%esi);");
    asm("loc_4A4ADE: calll *_import_5C71EC;");
    asm("loc_4A4AE4: flds (%edi);");
    asm("loc_4A4AE6: fadds _data_5D1FE4;");
    asm("loc_4A4AEC: add $8,%esp;");
    asm("loc_4A4AEF: push $0;");
    asm("loc_4A4AF1: push $0;");
    asm("loc_4A4AF3: push $1;");
    asm("loc_4A4AF5: push $0;");
    asm("loc_4A4AF7: push $0x3FE66666;");
    asm("loc_4A4AFC: push $0x3CF5C28F;");
    asm("loc_4A4B01: fstps 0x34(%esp);");
    asm("loc_4A4B05: flds 4(%edi);");
    asm("loc_4A4B08: push $0x3F970A3D;");
    asm("loc_4A4B0D: fsubs _data_5D2C0C;");
    asm("loc_4A4B13: push $0;");
    asm("loc_4A4B15: lea 0x3C(%esp),%edx;");
    asm("loc_4A4B19: push %edx;");
    asm("loc_4A4B1A: fstps 0x44(%esp);");
    asm("loc_4A4B1E: flds 8(%edi);");
    asm("loc_4A4B21: push $_data_5D0608;");
    asm("loc_4A4B26: lea 0xB8(%esp),%eax;");
    asm("loc_4A4B2D: fstps 0x4C(%esp);");
    asm("loc_4A4B31: push %eax;");
    asm("loc_4A4B32: mov %esi,%ecx;");
    asm("loc_4A4B34: call _sub_5A0E30;");
    asm("loc_4A4B39: mov %eax,0x64C(%esi);");
    asm("loc_4A4B3F: flds (%edi);");
    asm("loc_4A4B41: fsubs _data_5D290C;");
    asm("loc_4A4B47: push $1;");
    asm("loc_4A4B49: lea 0x20(%esp),%ecx;");
    asm("loc_4A4B4D: push %ecx;");
    asm("loc_4A4B4E: fstps 0x24(%esp);");
    asm("loc_4A4B52: flds 4(%edi);");
    asm("loc_4A4B55: push $0x3E8A3D71;");
    asm("loc_4A4B5A: fsubs _data_5D2908;");
    asm("loc_4A4B60: push $0x3F8A3D71;");
    asm("loc_4A4B65: push $_data_5D41D8;");
    asm("loc_4A4B6A: mov %esi,%ecx;");
    asm("loc_4A4B6C: fstps 0x34(%esp);");
    asm("loc_4A4B70: flds 8(%edi);");
    asm("loc_4A4B73: fstps 0x38(%esp);");
    asm("loc_4A4B77: call _sub_5A10E0;");
    asm("loc_4A4B7C: mov (%esi),%edx;");
    asm("loc_4A4B7E: mov %eax,0x650(%esi);");
    asm("loc_4A4B84: sub $0xC,%esp;");
    asm("loc_4A4B87: movl $0,0x1C(%esp);");
    asm("loc_4A4B8F: mov 0x1C(%esp),%ecx;");
    asm("loc_4A4B93: mov %esp,%eax;");
    asm("loc_4A4B95: mov %ecx,(%eax);");
    asm("loc_4A4B97: movl $0,0x20(%esp);");
    asm("loc_4A4B9F: mov 0x20(%esp),%ecx;");
    asm("loc_4A4BA3: mov %ecx,4(%eax);");
    asm("loc_4A4BA6: movl $0,0x24(%esp);");
    asm("loc_4A4BAE: mov 0x24(%esp),%ecx;");
    asm("loc_4A4BB2: mov %ecx,8(%eax);");
    asm("loc_4A4BB5: mov %esi,%ecx;");
    asm("loc_4A4BB7: movl $0x64,0x70(%esi);");
    asm("loc_4A4BBE: calll *0x7C(%edx);");
    asm("loc_4A4BC1: mov (%esi),%edx;");
    asm("loc_4A4BC3: lea 0x60(%esi),%eax;");
    asm("loc_4A4BC6: push %eax;");
    asm("loc_4A4BC7: mov %esi,%ecx;");
    asm("loc_4A4BC9: calll *0x14(%edx);");
    asm("loc_4A4BCC: push $0x1C;");
    asm("loc_4A4BCE: movl $7,0x590(%esi);");
    asm("loc_4A4BD8: call _sub_5B7E84;");
    asm("loc_4A4BDD: mov %eax,0x58C(%esi);");
    asm("loc_4A4BE3: add $4,%esp;");
    asm("loc_4A4BE6: movl $_data_5D2A64,(%eax);");
    asm("loc_4A4BEC: mov 0x58C(%esi),%ecx;");
    asm("loc_4A4BF2: movl $_data_5D419C,4(%ecx);");
    asm("loc_4A4BF9: mov 0x58C(%esi),%edx;");
    asm("loc_4A4BFF: movl $_data_5D4168,8(%edx);");
    asm("loc_4A4C06: mov 0x58C(%esi),%eax;");
    asm("loc_4A4C0C: movl $_data_5D4134,0xC(%eax);");
    asm("loc_4A4C13: mov 0x58C(%esi),%ecx;");
    asm("loc_4A4C19: movl $_data_5D4104,0x10(%ecx);");
    asm("loc_4A4C20: mov 0x58C(%esi),%edx;");
    asm("loc_4A4C26: movl $_data_5D40D4,0x14(%edx);");
    asm("loc_4A4C2D: mov 0x58C(%esi),%eax;");
    asm("loc_4A4C33: movl $_data_5D40A4,0x18(%eax);");
    asm("loc_4A4C3A: mov %esi,%ecx;");
    asm("loc_4A4C3C: movl $0x4AE,0x594(%esi);");
    asm("loc_4A4C46: movl $0x4AF,0x598(%esi);");
    asm("loc_4A4C50: movl $0x4B0,0x59C(%esi);");
    asm("loc_4A4C5A: movl $0x4B1,0x5A0(%esi);");
    asm("loc_4A4C64: movl $0x67C,0x5A4(%esi);");
    asm("loc_4A4C6E: movl $0x67D,0x5A8(%esi);");
    asm("loc_4A4C78: movl $0x67E,0x5AC(%esi);");
    asm("loc_4A4C82: call _sub_4A4FD0;");
    asm("loc_4A4C87: mov %esi,%ecx;");
    asm("loc_4A4C89: call _sub_4A5890;");
    asm("loc_4A4C8E: mov %esi,%ecx;");
    asm("loc_4A4C90: call _sub_4A5270;");
    asm("loc_4A4C95: mov %esi,%ecx;");
    asm("loc_4A4C97: movl $0,0x57C(%esi);");
    asm("loc_4A4CA1: call _sub_4A5580;");
    asm("loc_4A4CA6: mov 0x580(%esi),%eax;");
    asm("loc_4A4CAC: mov 0x584(%esi),%ecx;");
    asm("loc_4A4CB2: lea (%eax,%eax,2),%edi;");
    asm("loc_4A4CB5: shl $5,%edi;");
    asm("loc_4A4CB8: add %ecx,%edi;");
    asm("loc_4A4CBA: lea 0x28(%edi),%ecx;");
    asm("loc_4A4CBD: push %ecx;");
    asm("loc_4A4CBE: call _sub_459950;");
    asm("loc_4A4CC3: add $0x40,%edi;");
    asm("loc_4A4CC6: push %edi;");
    asm("loc_4A4CC7: call _sub_459950;");
    asm("loc_4A4CCC: add $8,%esp;");
    asm("loc_4A4CCF: push $0;");
    asm("loc_4A4CD1: lea 0x32C(%esi),%ecx;");
    asm("loc_4A4CD7: call _sub_576360;");
    asm("loc_4A4CDC: mov 0x66C(%esi),%al;");
    asm("loc_4A4CE2: test %al,%al;");
    asm("loc_4A4CE4: je loc_4A4CFB;");
    asm("loc_4A4CE6: lea 0x668(%esi),%edx;");
    asm("loc_4A4CEC: push %edx;");
    asm("loc_4A4CED: call _sub_42AE40;");
    asm("loc_4A4CF2: push %eax;");
    asm("loc_4A4CF3: call _sub_4285C0;");
    asm("loc_4A4CF8: add $8,%esp;");
    asm("loc_4A4CFB: push $_data_5D4090;");
    asm("loc_4A4D00: lea 0x668(%esi),%edi;");
    asm("loc_4A4D06: calll *_import_5C6020;");
    asm("loc_4A4D0C: push %edi;");
    asm("loc_4A4D0D: mov %eax,(%edi);");
    asm("loc_4A4D0F: call _sub_42AE40;");
    asm("loc_4A4D14: push $0;");
    asm("loc_4A4D16: push $0;");
    asm("loc_4A4D18: push $0;");
    asm("loc_4A4D1A: push %eax;");
    asm("loc_4A4D1B: call _sub_428680;");
    asm("loc_4A4D20: mov 0x1B0(%esp),%eax;");
    asm("loc_4A4D27: mov 0x1AC(%esp),%ecx;");
    asm("loc_4A4D2E: add $0x18,%esp;");
    asm("loc_4A4D31: push %eax;");
    asm("loc_4A4D32: push %ecx;");
    asm("loc_4A4D33: mov %esi,%ecx;");
    asm("loc_4A4D35: movb $1,0x66C(%esi);");
    asm("loc_4A4D3C: call _sub_4B5060;");
    asm("loc_4A4D41: pop %edi;");
    asm("loc_4A4D42: pop %esi;");
    asm("loc_4A4D43: test %al,%al;");
    asm("loc_4A4D45: pop %ebp;");
    asm("loc_4A4D46: setne %al;");
    asm("loc_4A4D49: pop %ebx;");
    asm("loc_4A4D4A: add $0x180,%esp;");
    asm("loc_4A4D50: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A4D60() // _sub_4A4D60
{
    asm("jmp dgb_4A4D60;"); // jumptable skip
    asm(".long _jmp_4A4F88;"); // jumptable address
    __DEBUG_ASM(4A4D60);
    // chunk 0x4A4D60 _sub_4A4D60
    asm("loc_4A4D60: push %ebx;");
    asm("loc_4A4D61: push %ebp;");
    asm("loc_4A4D62: mov 0xC(%esp),%ebp;");
    asm("loc_4A4D66: push %esi;");
    asm("loc_4A4D67: lea -0x26(%ebp),%eax;");
    asm("loc_4A4D6A: cmp $0x28,%eax;");
    asm("loc_4A4D6D: push %edi;");
    asm("loc_4A4D6E: mov %ecx,%esi;");
    asm("loc_4A4D70: ja loc_4A4F7D;");
    asm("loc_4A4D76: movzbl _data_4A4FA0(%eax),%eax;");
    asm("loc_4A4D7D: mov 0x18(%esp),%ebx;");
    asm("loc_4A4D81: jmpl *_jmp_4A4F88(,%eax,4);");
    asm("loc_4A4D88: test %esi,%esi;");
    asm("loc_4A4D8A: je loc_4A4F7D;");
    asm("loc_4A4D90: mov 0xC(%esi),%eax;");
    asm("loc_4A4D93: test %eax,%eax;");
    asm("loc_4A4D95: je loc_4A4DA9;");
    asm("loc_4A4D97: mov 8(%eax),%edi;");
    asm("loc_4A4D9A: push %eax;");
    asm("loc_4A4D9B: call _sub_43D2A0;");
    asm("loc_4A4DA0: add $4,%esp;");
    asm("loc_4A4DA3: test %edi,%edi;");
    asm("loc_4A4DA5: mov %edi,%eax;");
    asm("loc_4A4DA7: jne loc_4A4D97;");
    asm("loc_4A4DA9: mov (%esi),%edx;");
    asm("loc_4A4DAB: mov %esi,%ecx;");
    asm("loc_4A4DAD: calll *0x28(%edx);");
    asm("loc_4A4DB0: mov (%esi),%eax;");
    asm("loc_4A4DB2: push $1;");
    asm("loc_4A4DB4: mov %esi,%ecx;");
    asm("loc_4A4DB6: calll *(%eax);");
    asm("loc_4A4DB8: xor %eax,%eax;");
    asm("loc_4A4DBA: pop %edi;");
    asm("loc_4A4DBB: pop %esi;");
    asm("loc_4A4DBC: pop %ebp;");
    asm("loc_4A4DBD: pop %ebx;");
    asm("loc_4A4DBE: ret $0xC;");
    asm("loc_4A4DC1: cmp 0x648(%esi),%ebx;");
    asm("loc_4A4DC7: jne loc_4A4DE2;");
    asm("loc_4A4DC9: mov 0x1C(%esp),%eax;");
    asm("loc_4A4DCD: cmp 0x578(%esi),%eax;");
    asm("loc_4A4DD3: je loc_4A4DE2;");
    asm("loc_4A4DD5: mov %esi,%ecx;");
    asm("loc_4A4DD7: mov %eax,0x578(%esi);");
    asm("loc_4A4DDD: call _sub_4A5270;");
    asm("loc_4A4DE2: xor %edi,%edi;");
    asm("loc_4A4DE4: lea 0x5E4(%esi),%eax;");
    asm("loc_4A4DEA: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A4DED: lea (%ecx),%ecx;");
    asm("loc_4A4DF0: mov 0x578(%esi),%edx;");
    asm("loc_4A4DF6: add %edi,%edx;");
    asm("loc_4A4DF8: cmp $0x2C,%ebp;");
    asm("loc_4A4DFB: jne loc_4A4E05;");
    asm("loc_4A4DFD: mov %edx,0x660(%esi);");
    asm("loc_4A4E03: jmp loc_4A4E13;");
    asm("loc_4A4E05: cmp %edx,0x660(%esi);");
    asm("loc_4A4E0B: jne loc_4A4E13;");
    asm("loc_4A4E0D: mov %ecx,0x660(%esi);");
    asm("loc_4A4E13: cmp -0x14(%eax),%ebx;");
    asm("loc_4A4E16: je loc_4A4E2E;");
    asm("loc_4A4E18: cmp (%eax),%ebx;");
    asm("loc_4A4E1A: je loc_4A4E2E;");
    asm("loc_4A4E1C: inc %edi;");
    asm("loc_4A4E1D: add $4,%eax;");
    asm("loc_4A4E20: cmp $5,%edi;");
    asm("loc_4A4E23: jl loc_4A4DF0;");
    asm("loc_4A4E25: xor %eax,%eax;");
    asm("loc_4A4E27: pop %edi;");
    asm("loc_4A4E28: pop %esi;");
    asm("loc_4A4E29: pop %ebp;");
    asm("loc_4A4E2A: pop %ebx;");
    asm("loc_4A4E2B: ret $0xC;");
    asm("loc_4A4E2E: mov 0x5D0(%esi,%edi,4),%ecx;");
    asm("loc_4A4E35: cmp %ecx,%ebx;");
    asm("loc_4A4E37: je loc_4A4E46;");
    asm("loc_4A4E39: mov (%ecx),%eax;");
    asm("loc_4A4E3B: push $0;");
    asm("loc_4A4E3D: push $0;");
    asm("loc_4A4E3F: push %ebp;");
    asm("loc_4A4E40: calll *0xA8(%eax);");
    asm("loc_4A4E46: mov 0x5E4(%esi,%edi,4),%ecx;");
    asm("loc_4A4E4D: cmp %ecx,%ebx;");
    asm("loc_4A4E4F: je loc_4A4F7D;");
    asm("loc_4A4E55: mov (%ecx),%edx;");
    asm("loc_4A4E57: push $0;");
    asm("loc_4A4E59: push $0;");
    asm("loc_4A4E5B: push %ebp;");
    asm("loc_4A4E5C: calll *0xA8(%edx);");
    asm("loc_4A4E62: xor %eax,%eax;");
    asm("loc_4A4E64: pop %edi;");
    asm("loc_4A4E65: pop %esi;");
    asm("loc_4A4E66: pop %ebp;");
    asm("loc_4A4E67: pop %ebx;");
    asm("loc_4A4E68: ret $0xC;");
    asm("loc_4A4E6B: mov 0x18(%esp),%ecx;");
    asm("loc_4A4E6F: mov (%ecx),%edi;");
    asm("loc_4A4E71: mov (%esi),%eax;");
    asm("loc_4A4E73: sub $0xC,%esp;");
    asm("loc_4A4E76: mov %esp,%edx;");
    asm("loc_4A4E78: mov %edi,(%edx);");
    asm("loc_4A4E7A: mov 4(%ecx),%edi;");
    asm("loc_4A4E7D: mov 8(%ecx),%ecx;");
    asm("loc_4A4E80: mov %edi,4(%edx);");
    asm("loc_4A4E83: mov %ecx,8(%edx);");
    asm("loc_4A4E86: mov %esi,%ecx;");
    asm("loc_4A4E88: calll *0x7C(%eax);");
    asm("loc_4A4E8B: mov (%esi),%edx;");
    asm("loc_4A4E8D: lea 0x60(%esi),%eax;");
    asm("loc_4A4E90: push %eax;");
    asm("loc_4A4E91: mov %esi,%ecx;");
    asm("loc_4A4E93: calll *0x14(%edx);");
    asm("loc_4A4E96: xor %eax,%eax;");
    asm("loc_4A4E98: pop %edi;");
    asm("loc_4A4E99: pop %esi;");
    asm("loc_4A4E9A: pop %ebp;");
    asm("loc_4A4E9B: pop %ebx;");
    asm("loc_4A4E9C: ret $0xC;");
    asm("loc_4A4E9F: mov 0x18(%esp),%edx;");
    asm("loc_4A4EA3: cmp 0x5B4(%esi),%edx;");
    asm("loc_4A4EA9: jne loc_4A4EFC;");
    asm("loc_4A4EAB: mov 0x33C(%esi),%eax;");
    asm("loc_4A4EB1: test %eax,%eax;");
    asm("loc_4A4EB3: je loc_4A4EC1;");
    asm("loc_4A4EB5: mov 0x340(%esi),%ecx;");
    asm("loc_4A4EBB: push %ecx;");
    asm("loc_4A4EBC: call *%eax;");
    asm("loc_4A4EBE: add $4,%esp;");
    asm("loc_4A4EC1: push $0;");
    asm("loc_4A4EC3: call _sub_4424F0;");
    asm("loc_4A4EC8: mov 0xC(%esi),%eax;");
    asm("loc_4A4ECB: add $4,%esp;");
    asm("loc_4A4ECE: test %eax,%eax;");
    asm("loc_4A4ED0: je loc_4A4EE4;");
    asm("loc_4A4ED2: mov 8(%eax),%edi;");
    asm("loc_4A4ED5: push %eax;");
    asm("loc_4A4ED6: call _sub_43D2A0;");
    asm("loc_4A4EDB: add $4,%esp;");
    asm("loc_4A4EDE: test %edi,%edi;");
    asm("loc_4A4EE0: mov %edi,%eax;");
    asm("loc_4A4EE2: jne loc_4A4ED2;");
    asm("loc_4A4EE4: mov (%esi),%edx;");
    asm("loc_4A4EE6: mov %esi,%ecx;");
    asm("loc_4A4EE8: calll *0x28(%edx);");
    asm("loc_4A4EEB: mov (%esi),%eax;");
    asm("loc_4A4EED: push $1;");
    asm("loc_4A4EEF: mov %esi,%ecx;");
    asm("loc_4A4EF1: calll *(%eax);");
    asm("loc_4A4EF3: xor %eax,%eax;");
    asm("loc_4A4EF5: pop %edi;");
    asm("loc_4A4EF6: pop %esi;");
    asm("loc_4A4EF7: pop %ebp;");
    asm("loc_4A4EF8: pop %ebx;");
    asm("loc_4A4EF9: ret $0xC;");
    asm("loc_4A4EFC: movl $0xFFFFFFFF,0x664(%esi);");
    asm("loc_4A4F06: xor %ecx,%ecx;");
    asm("loc_4A4F08: lea 0x5E4(%esi),%eax;");
    asm("loc_4A4F0E: mov %edi,%edi;");
    asm("loc_4A4F10: cmp -0x14(%eax),%edx;");
    asm("loc_4A4F13: je loc_4A4F24;");
    asm("loc_4A4F15: cmp (%eax),%edx;");
    asm("loc_4A4F17: je loc_4A4F24;");
    asm("loc_4A4F19: inc %ecx;");
    asm("loc_4A4F1A: add $4,%eax;");
    asm("loc_4A4F1D: cmp $5,%ecx;");
    asm("loc_4A4F20: jl loc_4A4F10;");
    asm("loc_4A4F22: jmp loc_4A4F2A;");
    asm("loc_4A4F24: mov %ecx,0x664(%esi);");
    asm("loc_4A4F2A: mov 0x578(%esi),%ecx;");
    asm("loc_4A4F30: add 0x664(%esi),%ecx;");
    asm("loc_4A4F36: mov %ecx,0x580(%esi);");
    asm("loc_4A4F3C: mov %esi,%ecx;");
    asm("loc_4A4F3E: call _sub_4A5270;");
    asm("loc_4A4F43: mov %esi,%ecx;");
    asm("loc_4A4F45: movl $0,0x57C(%esi);");
    asm("loc_4A4F4F: call _sub_4A5580;");
    asm("loc_4A4F54: mov 0x580(%esi),%eax;");
    asm("loc_4A4F5A: mov 0x584(%esi),%ebx;");
    asm("loc_4A4F60: lea (%eax,%eax,2),%edi;");
    asm("loc_4A4F63: shl $5,%edi;");
    asm("loc_4A4F66: add %ebx,%edi;");
    asm("loc_4A4F68: lea 0x28(%edi),%edx;");
    asm("loc_4A4F6B: push %edx;");
    asm("loc_4A4F6C: call _sub_459950;");
    asm("loc_4A4F71: add $0x40,%edi;");
    asm("loc_4A4F74: push %edi;");
    asm("loc_4A4F75: call _sub_459950;");
    asm("loc_4A4F7A: add $8,%esp;");
    asm("loc_4A4F7D: pop %edi;");
    asm("loc_4A4F7E: pop %esi;");
    asm("loc_4A4F7F: pop %ebp;");
    asm("loc_4A4F80: xor %eax,%eax;");
    asm("loc_4A4F82: pop %ebx;");
    asm("loc_4A4F83: ret $0xC;");
    asm("int3;"); // unreachable
    asm("_jmp_4A4F88: .long loc_4A4E9F;");
    asm(".long loc_4A4DE2;");
    asm(".long loc_4A4DC1;");
    asm(".long loc_4A4E6B;");
    asm(".long loc_4A4D88;");
    asm(".long loc_4A4F7D;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4A4D60);
_naked _weak void _sub_4A4FD0() // _sub_4A4FD0
{
    __DEBUG_ASM(4A4FD0);
    // chunk 0x4A4FD0 _sub_4A4FD0
    asm("loc_4A4FD0: push $0xFFFFFFFF;");
    asm("loc_4A4FD2: push $_sub_5BCBEB;");
    asm("loc_4A4FD7: mov %fs:0,%eax;");
    asm("loc_4A4FDD: push %eax;");
    asm("loc_4A4FDE: mov %esp,%fs:0;");
    asm("loc_4A4FE5: sub $0x10,%esp;");
    asm("loc_4A4FE8: mov _data_66873C,%eax;");
    asm("loc_4A4FED: push %ebx;");
    asm("loc_4A4FEE: push %ebp;");
    asm("loc_4A4FEF: push %esi;");
    asm("loc_4A4FF0: push %edi;");
    asm("loc_4A4FF1: mov %ecx,%ebx;");
    asm("loc_4A4FF3: push %eax;");
    asm("loc_4A4FF4: mov $_data_668708,%ecx;");
    asm("loc_4A4FF9: mov %ebx,0x18(%esp);");
    asm("loc_4A4FFD: call _sub_43A630;");
    asm("loc_4A5002: mov %eax,%ecx;");
    asm("loc_4A5004: xor %edi,%edi;");
    asm("loc_4A5006: xor %esi,%esi;");
    asm("loc_4A5008: mov %ecx,0x18(%esp);");
    asm("loc_4A500C: mov %edi,0x10(%esp);");
    asm("loc_4A5010: xor %eax,%eax;");
    asm("loc_4A5012: cmp %esi,%eax;");
    asm("loc_4A5014: jne loc_4A501B;");
    asm("loc_4A5016: mov 4(%ecx),%eax;");
    asm("loc_4A5019: jmp loc_4A501D;");
    asm("loc_4A501B: mov (%eax),%eax;");
    asm("loc_4A501D: cmp %esi,%eax;");
    asm("loc_4A501F: je loc_4A5024;");
    asm("loc_4A5021: inc %edi;");
    asm("loc_4A5022: jmp loc_4A5012;");
    asm("loc_4A5024: lea (%edi,%edi,2),%eax;");
    asm("loc_4A5027: shl $5,%eax;");
    asm("loc_4A502A: add $4,%eax;");
    asm("loc_4A502D: push %eax;");
    asm("loc_4A502E: mov %edi,0x14(%esp);");
    asm("loc_4A5032: call _sub_5B7E84;");
    asm("loc_4A5037: add $4,%esp;");
    asm("loc_4A503A: mov %eax,0x1C(%esp);");
    asm("loc_4A503E: cmp %esi,%eax;");
    asm("loc_4A5040: mov %esi,0x28(%esp);");
    asm("loc_4A5044: je loc_4A5062;");
    asm("loc_4A5046: mov _import_5C6148,%ecx;");
    asm("loc_4A504C: mov _import_5C6150,%edx;");
    asm("loc_4A5052: push %ecx;");
    asm("loc_4A5053: push %edx;");
    asm("loc_4A5054: push %edi;");
    asm("loc_4A5055: lea 4(%eax),%esi;");
    asm("loc_4A5058: push $0x60;");
    asm("loc_4A505A: push %esi;");
    asm("loc_4A505B: mov %edi,(%eax);");
    asm("loc_4A505D: call _sub_5B7FBA;");
    asm("loc_4A5062: push %edi;");
    asm("loc_4A5063: movl $0xFFFFFFFF,0x2C(%esp);");
    asm("loc_4A506B: mov %esi,0x584(%ebx);");
    asm("loc_4A5071: mov %edi,0x588(%ebx);");
    asm("loc_4A5077: call _sub_5B7E84;");
    asm("loc_4A507C: add $4,%esp;");
    asm("loc_4A507F: test %edi,%edi;");
    asm("loc_4A5081: mov %eax,%ebp;");
    asm("loc_4A5083: jle loc_4A50A0;");
    asm("loc_4A5085: mov %edi,%ecx;");
    asm("loc_4A5087: mov %ecx,%edx;");
    asm("loc_4A5089: shr $2,%ecx;");
    asm("loc_4A508C: xor %eax,%eax;");
    asm("loc_4A508E: mov %ebp,%edi;");
    asm("loc_4A5090: rep stos %eax,(%edi);");
    asm("loc_4A5092: mov %edx,%ecx;");
    asm("loc_4A5094: and $3,%ecx;");
    asm("loc_4A5097: rep stos %al,(%edi);");
    asm("loc_4A5099: lea (%esp),%esp;");
    asm("loc_4A50A0: mov 0x10(%esp),%eax;");
    asm("loc_4A50A4: xor %ebx,%ebx;");
    asm("loc_4A50A6: xor %esi,%esi;");
    asm("loc_4A50A8: test %eax,%eax;");
    asm("loc_4A50AA: jle loc_4A5108;");
    asm("loc_4A50AC: xor %edi,%edi;");
    asm("loc_4A50AE: mov %edi,%edi;");
    asm("loc_4A50B0: cmpb $0,(%esi,%ebp);");
    asm("loc_4A50B4: jne loc_4A50FF;");
    asm("loc_4A50B6: xor %ecx,%ecx;");
    asm("loc_4A50B8: xor %edx,%edx;");
    asm("loc_4A50BA: xor %eax,%eax;");
    asm("loc_4A50BC: lea (%esp),%esp;");
    asm("loc_4A50C0: test %eax,%eax;");
    asm("loc_4A50C2: jne loc_4A50CD;");
    asm("loc_4A50C4: mov 0x18(%esp),%eax;");
    asm("loc_4A50C8: mov 4(%eax),%eax;");
    asm("loc_4A50CB: jmp loc_4A50CF;");
    asm("loc_4A50CD: mov (%eax),%eax;");
    asm("loc_4A50CF: test %eax,%eax;");
    asm("loc_4A50D1: je loc_4A50DD;");
    asm("loc_4A50D3: cmp %esi,%edx;");
    asm("loc_4A50D5: je loc_4A50DA;");
    asm("loc_4A50D7: inc %edx;");
    asm("loc_4A50D8: jmp loc_4A50C0;");
    asm("loc_4A50DA: mov 8(%eax),%ecx;");
    asm("loc_4A50DD: mov 9(%ecx),%al;");
    asm("loc_4A50E0: test %al,%al;");
    asm("loc_4A50E2: je loc_4A50FF;");
    asm("loc_4A50E4: push %ecx;");
    asm("loc_4A50E5: mov 0x18(%esp),%ecx;");
    asm("loc_4A50E9: mov 0x584(%ecx),%ecx;");
    asm("loc_4A50EF: add %edi,%ecx;");
    asm("loc_4A50F1: calll *_import_5C6174;");
    asm("loc_4A50F7: inc %ebx;");
    asm("loc_4A50F8: movb $1,(%esi,%ebp);");
    asm("loc_4A50FC: add $0x60,%edi;");
    asm("loc_4A50FF: mov 0x10(%esp),%eax;");
    asm("loc_4A5103: inc %esi;");
    asm("loc_4A5104: cmp %eax,%esi;");
    asm("loc_4A5106: jl loc_4A50B0;");
    asm("loc_4A5108: xor %esi,%esi;");
    asm("loc_4A510A: test %eax,%eax;");
    asm("loc_4A510C: jle loc_4A5167;");
    asm("loc_4A510E: lea (%ebx,%ebx,2),%edi;");
    asm("loc_4A5111: shl $5,%edi;");
    asm("loc_4A5114: cmpb $0,(%esi,%ebp);");
    asm("loc_4A5118: jne loc_4A515E;");
    asm("loc_4A511A: xor %ecx,%ecx;");
    asm("loc_4A511C: xor %edx,%edx;");
    asm("loc_4A511E: xor %eax,%eax;");
    asm("loc_4A5120: test %eax,%eax;");
    asm("loc_4A5122: jne loc_4A512D;");
    asm("loc_4A5124: mov 0x18(%esp),%eax;");
    asm("loc_4A5128: mov 4(%eax),%eax;");
    asm("loc_4A512B: jmp loc_4A512F;");
    asm("loc_4A512D: mov (%eax),%eax;");
    asm("loc_4A512F: test %eax,%eax;");
    asm("loc_4A5131: je loc_4A513D;");
    asm("loc_4A5133: cmp %esi,%edx;");
    asm("loc_4A5135: je loc_4A513A;");
    asm("loc_4A5137: inc %edx;");
    asm("loc_4A5138: jmp loc_4A5120;");
    asm("loc_4A513A: mov 8(%eax),%ecx;");
    asm("loc_4A513D: cmpl $1,0xC(%ecx);");
    asm("loc_4A5141: jne loc_4A515E;");
    asm("loc_4A5143: push %ecx;");
    asm("loc_4A5144: mov 0x18(%esp),%ecx;");
    asm("loc_4A5148: mov 0x584(%ecx),%ecx;");
    asm("loc_4A514E: add %edi,%ecx;");
    asm("loc_4A5150: calll *_import_5C6174;");
    asm("loc_4A5156: inc %ebx;");
    asm("loc_4A5157: movb $1,(%esi,%ebp);");
    asm("loc_4A515B: add $0x60,%edi;");
    asm("loc_4A515E: mov 0x10(%esp),%eax;");
    asm("loc_4A5162: inc %esi;");
    asm("loc_4A5163: cmp %eax,%esi;");
    asm("loc_4A5165: jl loc_4A5114;");
    asm("loc_4A5167: xor %esi,%esi;");
    asm("loc_4A5169: test %eax,%eax;");
    asm("loc_4A516B: jle loc_4A51C8;");
    asm("loc_4A516D: lea (%ebx,%ebx,2),%edi;");
    asm("loc_4A5170: shl $5,%edi;");
    asm("loc_4A5173: cmpb $0,(%esi,%ebp);");
    asm("loc_4A5177: jne loc_4A51BF;");
    asm("loc_4A5179: xor %ecx,%ecx;");
    asm("loc_4A517B: xor %edx,%edx;");
    asm("loc_4A517D: xor %eax,%eax;");
    asm("loc_4A517F: nop;");
    asm("loc_4A5180: test %eax,%eax;");
    asm("loc_4A5182: jne loc_4A518D;");
    asm("loc_4A5184: mov 0x18(%esp),%eax;");
    asm("loc_4A5188: mov 4(%eax),%eax;");
    asm("loc_4A518B: jmp loc_4A518F;");
    asm("loc_4A518D: mov (%eax),%eax;");
    asm("loc_4A518F: test %eax,%eax;");
    asm("loc_4A5191: je loc_4A519D;");
    asm("loc_4A5193: cmp %esi,%edx;");
    asm("loc_4A5195: je loc_4A519A;");
    asm("loc_4A5197: inc %edx;");
    asm("loc_4A5198: jmp loc_4A5180;");
    asm("loc_4A519A: mov 8(%eax),%ecx;");
    asm("loc_4A519D: mov 8(%ecx),%al;");
    asm("loc_4A51A0: test %al,%al;");
    asm("loc_4A51A2: je loc_4A51BF;");
    asm("loc_4A51A4: push %ecx;");
    asm("loc_4A51A5: mov 0x18(%esp),%ecx;");
    asm("loc_4A51A9: mov 0x584(%ecx),%ecx;");
    asm("loc_4A51AF: add %edi,%ecx;");
    asm("loc_4A51B1: calll *_import_5C6174;");
    asm("loc_4A51B7: inc %ebx;");
    asm("loc_4A51B8: movb $1,(%esi,%ebp);");
    asm("loc_4A51BC: add $0x60,%edi;");
    asm("loc_4A51BF: mov 0x10(%esp),%eax;");
    asm("loc_4A51C3: inc %esi;");
    asm("loc_4A51C4: cmp %eax,%esi;");
    asm("loc_4A51C6: jl loc_4A5173;");
    asm("loc_4A51C8: xor %esi,%esi;");
    asm("loc_4A51CA: test %eax,%eax;");
    asm("loc_4A51CC: jle loc_4A5220;");
    asm("loc_4A51CE: lea (%ebx,%ebx,2),%edi;");
    asm("loc_4A51D1: shl $5,%edi;");
    asm("loc_4A51D4: cmpb $0,(%esi,%ebp);");
    asm("loc_4A51D8: jne loc_4A5217;");
    asm("loc_4A51DA: xor %ecx,%ecx;");
    asm("loc_4A51DC: xor %edx,%edx;");
    asm("loc_4A51DE: xor %eax,%eax;");
    asm("loc_4A51E0: test %eax,%eax;");
    asm("loc_4A51E2: jne loc_4A51ED;");
    asm("loc_4A51E4: mov 0x18(%esp),%eax;");
    asm("loc_4A51E8: mov 4(%eax),%eax;");
    asm("loc_4A51EB: jmp loc_4A51EF;");
    asm("loc_4A51ED: mov (%eax),%eax;");
    asm("loc_4A51EF: test %eax,%eax;");
    asm("loc_4A51F1: je loc_4A51FD;");
    asm("loc_4A51F3: cmp %esi,%edx;");
    asm("loc_4A51F5: je loc_4A51FA;");
    asm("loc_4A51F7: inc %edx;");
    asm("loc_4A51F8: jmp loc_4A51E0;");
    asm("loc_4A51FA: mov 8(%eax),%ecx;");
    asm("loc_4A51FD: push %ecx;");
    asm("loc_4A51FE: mov 0x18(%esp),%ecx;");
    asm("loc_4A5202: mov 0x584(%ecx),%ecx;");
    asm("loc_4A5208: add %edi,%ecx;");
    asm("loc_4A520A: calll *_import_5C6174;");
    asm("loc_4A5210: movb $1,(%esi,%ebp);");
    asm("loc_4A5214: add $0x60,%edi;");
    asm("loc_4A5217: mov 0x10(%esp),%eax;");
    asm("loc_4A521B: inc %esi;");
    asm("loc_4A521C: cmp %eax,%esi;");
    asm("loc_4A521E: jl loc_4A51D4;");
    asm("loc_4A5220: mov 0x14(%esp),%eax;");
    asm("loc_4A5224: mov 0x648(%eax),%ecx;");
    asm("loc_4A522A: xor %edx,%edx;");
    asm("loc_4A522C: mov %edx,0x578(%eax);");
    asm("loc_4A5232: mov %edx,0x57C(%eax);");
    asm("loc_4A5238: mov %edx,0x580(%eax);");
    asm("loc_4A523E: mov 0x588(%eax),%eax;");
    asm("loc_4A5244: mov (%ecx),%esi;");
    asm("loc_4A5246: dec %eax;");
    asm("loc_4A5247: push %eax;");
    asm("loc_4A5248: push %edx;");
    asm("loc_4A5249: push $0x37;");
    asm("loc_4A524B: calll *0xA8(%esi);");
    asm("loc_4A5251: push %ebp;");
    asm("loc_4A5252: call _sub_5B7E1D;");
    asm("loc_4A5257: mov 0x24(%esp),%ecx;");
    asm("loc_4A525B: add $4,%esp;");
    asm("loc_4A525E: pop %edi;");
    asm("loc_4A525F: pop %esi;");
    asm("loc_4A5260: pop %ebp;");
    asm("loc_4A5261: pop %ebx;");
    asm("loc_4A5262: mov %ecx,%fs:0;");
    asm("loc_4A5269: add $0x1C,%esp;");
    asm("loc_4A526C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A5270() // _sub_4A5270
{
    __DEBUG_ASM(4A5270);
    // chunk 0x4A5270 _sub_4A5270
    asm("loc_4A5270: sub $0x828,%esp;");
    asm("loc_4A5276: push %ebx;");
    asm("loc_4A5277: mov %ecx,%ebx;");
    asm("loc_4A5279: mov 0x578(%ebx),%eax;");
    asm("loc_4A527F: mov 0x588(%ebx),%edx;");
    asm("loc_4A5285: push %ebp;");
    asm("loc_4A5286: xor %ecx,%ecx;");
    asm("loc_4A5288: cmp %edx,%eax;");
    asm("loc_4A528A: push %esi;");
    asm("loc_4A528B: push %edi;");
    asm("loc_4A528C: mov %ecx,0x18(%esp);");
    asm("loc_4A5290: mov %eax,0x1C(%esp);");
    asm("loc_4A5294: jge loc_4A5493;");
    asm("loc_4A529A: lea (%eax,%eax,2),%eax;");
    asm("loc_4A529D: shl $5,%eax;");
    asm("loc_4A52A0: lea 0x60C(%ebx),%ecx;");
    asm("loc_4A52A6: mov %eax,0x14(%esp);");
    asm("loc_4A52AA: lea 0x5F8(%ebx),%esi;");
    asm("loc_4A52B0: mov %ecx,0x10(%esp);");
    asm("loc_4A52B4: jmp loc_4A52C0;");
    asm("loc_4A52B6: mov 0x14(%esp),%eax;");
    asm("loc_4A52BA: lea (%ebx),%ebx;");
    asm("loc_4A52C0: mov -0x3C(%esi),%ecx;");
    asm("loc_4A52C3: mov 0x584(%ebx),%edi;");
    asm("loc_4A52C9: mov (%ecx),%edx;");
    asm("loc_4A52CB: push $0;");
    asm("loc_4A52CD: push $0;");
    asm("loc_4A52CF: push $2;");
    asm("loc_4A52D1: add %eax,%edi;");
    asm("loc_4A52D3: calll *0xA8(%edx);");
    asm("loc_4A52D9: mov -0x28(%esi),%ecx;");
    asm("loc_4A52DC: mov (%ecx),%eax;");
    asm("loc_4A52DE: push $0;");
    asm("loc_4A52E0: push $0;");
    asm("loc_4A52E2: push $2;");
    asm("loc_4A52E4: calll *0xA8(%eax);");
    asm("loc_4A52EA: mov -0x14(%esi),%ecx;");
    asm("loc_4A52ED: mov (%ecx),%edx;");
    asm("loc_4A52EF: push $0;");
    asm("loc_4A52F1: push $0;");
    asm("loc_4A52F3: push $2;");
    asm("loc_4A52F5: calll *0xA8(%edx);");
    asm("loc_4A52FB: mov (%esi),%ecx;");
    asm("loc_4A52FD: mov (%ecx),%eax;");
    asm("loc_4A52FF: push $0;");
    asm("loc_4A5301: push $0;");
    asm("loc_4A5303: push $2;");
    asm("loc_4A5305: calll *0xA8(%eax);");
    asm("loc_4A530B: mov -0x3C(%esi),%ecx;");
    asm("loc_4A530E: mov (%ecx),%edx;");
    asm("loc_4A5310: push $0;");
    asm("loc_4A5312: push $0;");
    asm("loc_4A5314: push $1;");
    asm("loc_4A5316: calll *0xA8(%edx);");
    asm("loc_4A531C: mov -0x28(%esi),%ecx;");
    asm("loc_4A531F: mov (%ecx),%eax;");
    asm("loc_4A5321: push $0;");
    asm("loc_4A5323: push $0;");
    asm("loc_4A5325: push $1;");
    asm("loc_4A5327: calll *0xA8(%eax);");
    asm("loc_4A532D: mov -0x14(%esi),%ecx;");
    asm("loc_4A5330: mov (%ecx),%edx;");
    asm("loc_4A5332: push $0;");
    asm("loc_4A5334: push $0;");
    asm("loc_4A5336: push $1;");
    asm("loc_4A5338: calll *0xA8(%edx);");
    asm("loc_4A533E: mov (%esi),%ecx;");
    asm("loc_4A5340: mov (%ecx),%eax;");
    asm("loc_4A5342: push $0;");
    asm("loc_4A5344: push $0;");
    asm("loc_4A5346: push $1;");
    asm("loc_4A5348: calll *0xA8(%eax);");
    asm("loc_4A534E: mov 0xC(%edi),%eax;");
    asm("loc_4A5351: cmp 0x590(%ebx),%eax;");
    asm("loc_4A5357: mov 0x58C(%ebx),%ecx;");
    asm("loc_4A535D: mov (%ecx),%edx;");
    asm("loc_4A535F: mov $0x42B,%ebp;");
    asm("loc_4A5364: jae loc_4A5370;");
    asm("loc_4A5366: mov (%ecx,%eax,4),%edx;");
    asm("loc_4A5369: mov 0x594(%ebx,%eax,4),%ebp;");
    asm("loc_4A5370: mov -0x3C(%esi),%ecx;");
    asm("loc_4A5373: mov (%ecx),%eax;");
    asm("loc_4A5375: push $0;");
    asm("loc_4A5377: push %edx;");
    asm("loc_4A5378: push $4;");
    asm("loc_4A537A: calll *0xA8(%eax);");
    asm("loc_4A5380: mov -0x28(%esi),%ecx;");
    asm("loc_4A5383: mov (%ecx),%edx;");
    asm("loc_4A5385: push $0;");
    asm("loc_4A5387: push %ebp;");
    asm("loc_4A5388: push $3;");
    asm("loc_4A538A: calll *0xA8(%edx);");
    asm("loc_4A5390: push $0x400;");
    asm("loc_4A5395: lea 0x3C(%esp),%eax;");
    asm("loc_4A5399: push %eax;");
    asm("loc_4A539A: lea 0x28(%edi),%ecx;");
    asm("loc_4A539D: call _sub_41C970;");
    asm("loc_4A53A2: mov (%esi),%ecx;");
    asm("loc_4A53A4: mov (%ecx),%edx;");
    asm("loc_4A53A6: push $0;");
    asm("loc_4A53A8: lea 0x3C(%esp),%eax;");
    asm("loc_4A53AC: push %eax;");
    asm("loc_4A53AD: push $0x1D;");
    asm("loc_4A53AF: calll *0xA8(%edx);");
    asm("loc_4A53B5: mov (%esi),%ecx;");
    asm("loc_4A53B7: call _sub_58A5D0;");
    asm("loc_4A53BC: mov %eax,%ecx;");
    asm("loc_4A53BE: call _sub_4145A0;");
    asm("loc_4A53C3: mov 0x10(%esp),%ecx;");
    asm("loc_4A53C7: mov (%ecx),%edx;");
    asm("loc_4A53C9: cmp $2,%eax;");
    asm("loc_4A53CC: mov 4(%ecx),%eax;");
    asm("loc_4A53CF: mov 8(%ecx),%ecx;");
    asm("loc_4A53D2: push $0;");
    asm("loc_4A53D4: jb loc_4A53E8;");
    asm("loc_4A53D6: mov %eax,0x34(%esp);");
    asm("loc_4A53DA: mov %edx,0x30(%esp);");
    asm("loc_4A53DE: mov %ecx,0x38(%esp);");
    asm("loc_4A53E2: lea 0x30(%esp),%eax;");
    asm("loc_4A53E6: jmp loc_4A5406;");
    asm("loc_4A53E8: mov %eax,0x28(%esp);");
    asm("loc_4A53EC: flds 0x28(%esp);");
    asm("loc_4A53F0: fsubl _data_5D4310;");
    asm("loc_4A53F6: mov %edx,0x24(%esp);");
    asm("loc_4A53FA: mov %ecx,0x2C(%esp);");
    asm("loc_4A53FE: lea 0x24(%esp),%eax;");
    asm("loc_4A5402: fstps 0x28(%esp);");
    asm("loc_4A5406: mov (%esi),%ecx;");
    asm("loc_4A5408: mov (%ecx),%edx;");
    asm("loc_4A540A: push %eax;");
    asm("loc_4A540B: push $6;");
    asm("loc_4A540D: calll *0xA8(%edx);");
    asm("loc_4A5413: mov 0x1C(%esp),%edi;");
    asm("loc_4A5417: cmp 0x580(%ebx),%edi;");
    asm("loc_4A541D: mov -0x28(%esi),%ecx;");
    asm("loc_4A5420: mov (%ecx),%edx;");
    asm("loc_4A5422: push $0;");
    asm("loc_4A5424: jne loc_4A5436;");
    asm("loc_4A5426: push $1;");
    asm("loc_4A5428: push $0xC;");
    asm("loc_4A542A: calll *0xA8(%edx);");
    asm("loc_4A5430: push $0;");
    asm("loc_4A5432: push $1;");
    asm("loc_4A5434: jmp loc_4A5444;");
    asm("loc_4A5436: push $0;");
    asm("loc_4A5438: push $0xC;");
    asm("loc_4A543A: calll *0xA8(%edx);");
    asm("loc_4A5440: push $0;");
    asm("loc_4A5442: push $0;");
    asm("loc_4A5444: mov -0x14(%esi),%ecx;");
    asm("loc_4A5447: mov (%ecx),%eax;");
    asm("loc_4A5449: push $0xC;");
    asm("loc_4A544B: calll *0xA8(%eax);");
    asm("loc_4A5451: mov 0x18(%esp),%eax;");
    asm("loc_4A5455: mov 0x10(%esp),%ebp;");
    asm("loc_4A5459: inc %eax;");
    asm("loc_4A545A: add $0xC,%ebp;");
    asm("loc_4A545D: add $4,%esi;");
    asm("loc_4A5460: cmp $5,%eax;");
    asm("loc_4A5463: mov %eax,0x18(%esp);");
    asm("loc_4A5467: mov %ebp,0x10(%esp);");
    asm("loc_4A546B: jge loc_4A556A;");
    asm("loc_4A5471: mov 0x14(%esp),%ecx;");
    asm("loc_4A5475: mov 0x588(%ebx),%eax;");
    asm("loc_4A547B: inc %edi;");
    asm("loc_4A547C: add $0x60,%ecx;");
    asm("loc_4A547F: cmp %eax,%edi;");
    asm("loc_4A5481: mov %edi,0x1C(%esp);");
    asm("loc_4A5485: mov %ecx,0x14(%esp);");
    asm("loc_4A5489: jl loc_4A52B6;");
    asm("loc_4A548F: mov 0x18(%esp),%ecx;");
    asm("loc_4A5493: mov $5,%edi;");
    asm("loc_4A5498: lea 0x5BC(%ebx,%ecx,4),%esi;");
    asm("loc_4A549F: sub %ecx,%edi;");
    asm("loc_4A54A1: mov (%esi),%ecx;");
    asm("loc_4A54A3: mov (%ecx),%edx;");
    asm("loc_4A54A5: push $0;");
    asm("loc_4A54A7: push $1;");
    asm("loc_4A54A9: push $2;");
    asm("loc_4A54AB: calll *0xA8(%edx);");
    asm("loc_4A54B1: mov 0x14(%esi),%ecx;");
    asm("loc_4A54B4: mov (%ecx),%eax;");
    asm("loc_4A54B6: push $0;");
    asm("loc_4A54B8: push $1;");
    asm("loc_4A54BA: push $2;");
    asm("loc_4A54BC: calll *0xA8(%eax);");
    asm("loc_4A54C2: mov 0x28(%esi),%ecx;");
    asm("loc_4A54C5: mov (%ecx),%edx;");
    asm("loc_4A54C7: push $0;");
    asm("loc_4A54C9: push $1;");
    asm("loc_4A54CB: push $2;");
    asm("loc_4A54CD: calll *0xA8(%edx);");
    asm("loc_4A54D3: mov 0x3C(%esi),%ecx;");
    asm("loc_4A54D6: mov (%ecx),%eax;");
    asm("loc_4A54D8: push $0;");
    asm("loc_4A54DA: push $1;");
    asm("loc_4A54DC: push $2;");
    asm("loc_4A54DE: calll *0xA8(%eax);");
    asm("loc_4A54E4: mov (%esi),%ecx;");
    asm("loc_4A54E6: mov (%ecx),%edx;");
    asm("loc_4A54E8: push $0;");
    asm("loc_4A54EA: push $1;");
    asm("loc_4A54EC: push $1;");
    asm("loc_4A54EE: calll *0xA8(%edx);");
    asm("loc_4A54F4: mov 0x14(%esi),%ecx;");
    asm("loc_4A54F7: mov (%ecx),%eax;");
    asm("loc_4A54F9: push $0;");
    asm("loc_4A54FB: push $1;");
    asm("loc_4A54FD: push $1;");
    asm("loc_4A54FF: calll *0xA8(%eax);");
    asm("loc_4A5505: mov 0x28(%esi),%ecx;");
    asm("loc_4A5508: mov (%ecx),%edx;");
    asm("loc_4A550A: push $0;");
    asm("loc_4A550C: push $1;");
    asm("loc_4A550E: push $1;");
    asm("loc_4A5510: calll *0xA8(%edx);");
    asm("loc_4A5516: mov 0x3C(%esi),%ecx;");
    asm("loc_4A5519: mov (%ecx),%eax;");
    asm("loc_4A551B: push $0;");
    asm("loc_4A551D: push $1;");
    asm("loc_4A551F: push $1;");
    asm("loc_4A5521: calll *0xA8(%eax);");
    asm("loc_4A5527: mov 0x58C(%ebx),%eax;");
    asm("loc_4A552D: mov (%eax),%eax;");
    asm("loc_4A552F: mov (%esi),%ecx;");
    asm("loc_4A5531: mov (%ecx),%edx;");
    asm("loc_4A5533: push $0;");
    asm("loc_4A5535: push %eax;");
    asm("loc_4A5536: push $4;");
    asm("loc_4A5538: calll *0xA8(%edx);");
    asm("loc_4A553E: mov 0x28(%esi),%ecx;");
    asm("loc_4A5541: mov (%ecx),%edx;");
    asm("loc_4A5543: push $0;");
    asm("loc_4A5545: push $0;");
    asm("loc_4A5547: push $0x1E;");
    asm("loc_4A5549: calll *0xA8(%edx);");
    asm("loc_4A554F: mov 0x3C(%esi),%ecx;");
    asm("loc_4A5552: mov (%ecx),%eax;");
    asm("loc_4A5554: push $0;");
    asm("loc_4A5556: push $0;");
    asm("loc_4A5558: push $0x1E;");
    asm("loc_4A555A: calll *0xA8(%eax);");
    asm("loc_4A5560: add $4,%esi;");
    asm("loc_4A5563: dec %edi;");
    asm("loc_4A5564: jne loc_4A54A1;");
    asm("loc_4A556A: pop %edi;");
    asm("loc_4A556B: pop %esi;");
    asm("loc_4A556C: pop %ebp;");
    asm("loc_4A556D: pop %ebx;");
    asm("loc_4A556E: add $0x828,%esp;");
    asm("loc_4A5574: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A5580() // _sub_4A5580
{
    __DEBUG_ASM(4A5580);
    // chunk 0x4A5580 _sub_4A5580
    asm("loc_4A5580: mov %fs:0,%eax;");
    asm("loc_4A5586: push $0xFFFFFFFF;");
    asm("loc_4A5588: push $_sub_5BCC23;");
    asm("loc_4A558D: push %eax;");
    asm("loc_4A558E: mov $0x2020,%eax;");
    asm("loc_4A5593: mov %esp,%fs:0;");
    asm("loc_4A559A: call _sub_5B7E90;");
    asm("loc_4A559F: push %esi;");
    asm("loc_4A55A0: mov %ecx,%esi;");
    asm("loc_4A55A2: mov 0x580(%esi),%eax;");
    asm("loc_4A55A8: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4A55AB: je loc_4A5877;");
    asm("loc_4A55B1: push %ebx;");
    asm("loc_4A55B2: mov 0x584(%esi),%ebx;");
    asm("loc_4A55B8: push %ebp;");
    asm("loc_4A55B9: push %edi;");
    asm("loc_4A55BA: lea (%eax,%eax,2),%edi;");
    asm("loc_4A55BD: shl $5,%edi;");
    asm("loc_4A55C0: push $0x1000;");
    asm("loc_4A55C5: lea 0x34(%esp),%eax;");
    asm("loc_4A55C9: add %ebx,%edi;");
    asm("loc_4A55CB: push %eax;");
    asm("loc_4A55CC: lea 0x28(%edi),%ecx;");
    asm("loc_4A55CF: call _sub_41C970;");
    asm("loc_4A55D4: mov 0x64C(%esi),%ecx;");
    asm("loc_4A55DA: mov (%ecx),%edx;");
    asm("loc_4A55DC: xor %ebx,%ebx;");
    asm("loc_4A55DE: push %ebx;");
    asm("loc_4A55DF: lea 0x34(%esp),%eax;");
    asm("loc_4A55E3: push %eax;");
    asm("loc_4A55E4: push $0x1D;");
    asm("loc_4A55E6: calll *0xA8(%edx);");
    asm("loc_4A55EC: push $0x1000;");
    asm("loc_4A55F1: lea 0x34(%esp),%ecx;");
    asm("loc_4A55F5: push %ecx;");
    asm("loc_4A55F6: lea 0x40(%edi),%ecx;");
    asm("loc_4A55F9: call _sub_41C970;");
    asm("loc_4A55FE: mov 0x17(%esp),%dl;");
    asm("loc_4A5602: push $0xC;");
    asm("loc_4A5604: mov %dl,0x1C(%esp);");
    asm("loc_4A5608: call _sub_5B7E84;");
    asm("loc_4A560D: mov %eax,(%eax);");
    asm("loc_4A560F: mov %eax,4(%eax);");
    asm("loc_4A5612: add $4,%esp;");
    asm("loc_4A5615: mov %eax,0x1C(%esp);");
    asm("loc_4A5619: mov %ebx,0x20(%esp);");
    asm("loc_4A561D: push $0x9CA4;");
    asm("loc_4A5622: lea 0x28(%esp),%ecx;");
    asm("loc_4A5626: mov %ebx,0x203C(%esp);");
    asm("loc_4A562D: calll *_import_5C62B8;");
    asm("loc_4A5633: mov (%eax),%edx;");
    asm("loc_4A5635: mov $1,%ebx;");
    asm("loc_4A563A: mov %eax,%ecx;");
    asm("loc_4A563C: mov %bl,0x2038(%esp);");
    asm("loc_4A5643: calll *0x1C(%edx);");
    asm("loc_4A5646: mov %eax,0x10(%esp);");
    asm("loc_4A564A: mov 0x1C(%esp),%eax;");
    asm("loc_4A564E: mov 4(%eax),%ecx;");
    asm("loc_4A5651: lea 4(%eax),%ebp;");
    asm("loc_4A5654: push %ecx;");
    asm("loc_4A5655: push %eax;");
    asm("loc_4A5656: lea 0x20(%esp),%ecx;");
    asm("loc_4A565A: movb $2,0x2040(%esp);");
    asm("loc_4A5662: call _sub_42A7E0;");
    asm("loc_4A5667: mov %eax,(%ebp);");
    asm("loc_4A566A: mov 4(%eax),%ecx;");
    asm("loc_4A566D: lea 0x10(%esp),%edx;");
    asm("loc_4A5671: mov %eax,(%ecx);");
    asm("loc_4A5673: push %edx;");
    asm("loc_4A5674: add $8,%eax;");
    asm("loc_4A5677: push %eax;");
    asm("loc_4A5678: call _sub_46EA00;");
    asm("loc_4A567D: mov 0x28(%esp),%ecx;");
    asm("loc_4A5681: add $8,%esp;");
    asm("loc_4A5684: inc %ecx;");
    asm("loc_4A5685: mov %ecx,0x20(%esp);");
    asm("loc_4A5689: mov 0x10(%esp),%ecx;");
    asm("loc_4A568D: test %ecx,%ecx;");
    asm("loc_4A568F: mov %bl,0x2038(%esp);");
    asm("loc_4A5696: je loc_4A56A5;");
    asm("loc_4A5698: mov (%ecx),%eax;");
    asm("loc_4A569A: push %ebx;");
    asm("loc_4A569B: calll *(%eax);");
    asm("loc_4A569D: movl $0,0x10(%esp);");
    asm("loc_4A56A5: lea 0x24(%esp),%ecx;");
    asm("loc_4A56A9: movb $0,0x2038(%esp);");
    asm("loc_4A56B1: calll *_import_5C62B4;");
    asm("loc_4A56B7: push $0;");
    asm("loc_4A56B9: lea 0x1C(%esp),%ecx;");
    asm("loc_4A56BD: push %ecx;");
    asm("loc_4A56BE: lea 0x38(%esp),%edx;");
    asm("loc_4A56C2: push %edx;");
    asm("loc_4A56C3: calll *_import_5C71C8;");
    asm("loc_4A56C9: add $4,%esp;");
    asm("loc_4A56CC: push %eax;");
    asm("loc_4A56CD: lea 0x3C(%esp),%eax;");
    asm("loc_4A56D1: push %eax;");
    asm("loc_4A56D2: call _sub_57E2C0;");
    asm("loc_4A56D7: mov 0x650(%esi),%ebp;");
    asm("loc_4A56DD: add $0x10,%esp;");
    asm("loc_4A56E0: push $0;");
    asm("loc_4A56E2: push $0;");
    asm("loc_4A56E4: mov %ebp,%ecx;");
    asm("loc_4A56E6: call _sub_5798B0;");
    asm("loc_4A56EB: mov %ebp,%ecx;");
    asm("loc_4A56ED: call _sub_57B370;");
    asm("loc_4A56F2: lea 0x18(%esp),%ecx;");
    asm("loc_4A56F6: push %ecx;");
    asm("loc_4A56F7: mov %ebp,%ecx;");
    asm("loc_4A56F9: call _sub_57B3E0;");
    asm("loc_4A56FE: mov 0x580(%esi),%ecx;");
    asm("loc_4A5704: mov 0x584(%esi),%edx;");
    asm("loc_4A570A: lea (%ecx,%ecx,2),%ecx;");
    asm("loc_4A570D: shl $5,%ecx;");
    asm("loc_4A5710: add %edx,%ecx;");
    asm("loc_4A5712: calll *_import_5C63F0;");
    asm("loc_4A5718: mov 0x560(%esi),%ebp;");
    asm("loc_4A571E: test %ebp,%ebp;");
    asm("loc_4A5720: mov %eax,0x10(%esp);");
    asm("loc_4A5724: je loc_4A575C;");
    asm("loc_4A5726: mov (%eax),%dl;");
    asm("loc_4A5728: mov (%ebp),%bl;");
    asm("loc_4A572B: mov %dl,%cl;");
    asm("loc_4A572D: cmp %bl,%dl;");
    asm("loc_4A572F: jne loc_4A574F;");
    asm("loc_4A5731: test %cl,%cl;");
    asm("loc_4A5733: je loc_4A574B;");
    asm("loc_4A5735: mov 1(%eax),%dl;");
    asm("loc_4A5738: mov 1(%ebp),%bl;");
    asm("loc_4A573B: mov %dl,%cl;");
    asm("loc_4A573D: cmp %bl,%dl;");
    asm("loc_4A573F: jne loc_4A574F;");
    asm("loc_4A5741: add $2,%eax;");
    asm("loc_4A5744: add $2,%ebp;");
    asm("loc_4A5747: test %cl,%cl;");
    asm("loc_4A5749: jne loc_4A5726;");
    asm("loc_4A574B: xor %eax,%eax;");
    asm("loc_4A574D: jmp loc_4A5754;");
    asm("loc_4A574F: sbb %eax,%eax;");
    asm("loc_4A5751: sbb $0xFFFFFFFF,%eax;");
    asm("loc_4A5754: test %eax,%eax;");
    asm("loc_4A5756: je loc_4A57DD;");
    asm("loc_4A575C: lea 0x560(%esi),%ebx;");
    asm("loc_4A5762: push %ebx;");
    asm("loc_4A5763: calll *_import_5C60C8;");
    asm("loc_4A5769: lea 0x564(%esi),%ebp;");
    asm("loc_4A576F: add $4,%esp;");
    asm("loc_4A5772: mov %ebp,%ecx;");
    asm("loc_4A5774: call _sub_42CC50;");
    asm("loc_4A5779: mov %ebp,%ecx;");
    asm("loc_4A577B: movl $0,(%ebx);");
    asm("loc_4A5781: call _sub_42CC30;");
    asm("loc_4A5786: mov 0x10(%esp),%eax;");
    asm("loc_4A578A: push %eax;");
    asm("loc_4A578B: push %ebx;");
    asm("loc_4A578C: calll *_import_5C60CC;");
    asm("loc_4A5792: add $8,%esp;");
    asm("loc_4A5795: push $_data_5D2D7C;");
    asm("loc_4A579A: mov %ebp,%ecx;");
    asm("loc_4A579C: call _sub_42D4C0;");
    asm("loc_4A57A1: test %al,%al;");
    asm("loc_4A57A3: jne loc_4A57CA;");
    asm("loc_4A57A5: mov _import_5C6D18,%ecx;");
    asm("loc_4A57AB: push $_data_5D2D7C;");
    asm("loc_4A57B0: push $0x426;");
    asm("loc_4A57B5: push $_data_5D4384;");
    asm("loc_4A57BA: mov $0x100001,%eax;");
    asm("loc_4A57BF: push $_data_5D4348;");
    asm("loc_4A57C4: push %eax;");
    asm("loc_4A57C5: calll *(%ecx);");
    asm("loc_4A57C7: add $0x14,%esp;");
    asm("loc_4A57CA: mov 0x560(%esi),%edx;");
    asm("loc_4A57D0: push $_data_5D4318;");
    asm("loc_4A57D5: push %edx;");
    asm("loc_4A57D6: mov %ebp,%ecx;");
    asm("loc_4A57D8: call _sub_42D4F0;");
    asm("loc_4A57DD: mov 0xC(%edi),%edi;");
    asm("loc_4A57E0: cmp 0x590(%esi),%edi;");
    asm("loc_4A57E6: mov 0x58C(%esi),%ecx;");
    asm("loc_4A57EC: mov (%ecx),%eax;");
    asm("loc_4A57EE: mov $0x42B,%ebp;");
    asm("loc_4A57F3: jae loc_4A57FF;");
    asm("loc_4A57F5: mov (%ecx,%edi,4),%eax;");
    asm("loc_4A57F8: mov 0x594(%esi,%edi,4),%ebp;");
    asm("loc_4A57FF: mov 0x658(%esi),%ecx;");
    asm("loc_4A5805: mov (%ecx),%edx;");
    asm("loc_4A5807: push $0;");
    asm("loc_4A5809: push %eax;");
    asm("loc_4A580A: push $4;");
    asm("loc_4A580C: calll *0xA8(%edx);");
    asm("loc_4A5812: mov 0x658(%esi),%ecx;");
    asm("loc_4A5818: mov (%ecx),%eax;");
    asm("loc_4A581A: push $0;");
    asm("loc_4A581C: push %ebp;");
    asm("loc_4A581D: push $3;");
    asm("loc_4A581F: calll *0xA8(%eax);");
    asm("loc_4A5825: mov 0x1C(%esp),%eax;");
    asm("loc_4A5829: mov (%eax),%ecx;");
    asm("loc_4A582B: cmp %eax,%ecx;");
    asm("loc_4A582D: pop %edi;");
    asm("loc_4A582E: pop %ebp;");
    asm("loc_4A582F: movl $0xFFFFFFFF,0x2030(%esp);");
    asm("loc_4A583A: mov %eax,%esi;");
    asm("loc_4A583C: mov %ecx,8(%esp);");
    asm("loc_4A5840: pop %ebx;");
    asm("loc_4A5841: je loc_4A586E;");
    asm("loc_4A5843: push $0;");
    asm("loc_4A5845: lea 0x24(%esp),%ecx;");
    asm("loc_4A5849: push %ecx;");
    asm("loc_4A584A: lea 0xC(%esp),%ecx;");
    asm("loc_4A584E: call _sub_53AB20;");
    asm("loc_4A5853: mov (%eax),%edx;");
    asm("loc_4A5855: push %edx;");
    asm("loc_4A5856: lea 0x1C(%esp),%eax;");
    asm("loc_4A585A: push %eax;");
    asm("loc_4A585B: lea 0x14(%esp),%ecx;");
    asm("loc_4A585F: call _sub_46D680;");
    asm("loc_4A5864: cmp %esi,4(%esp);");
    asm("loc_4A5868: jne loc_4A5843;");
    asm("loc_4A586A: mov 0x10(%esp),%eax;");
    asm("loc_4A586E: push %eax;");
    asm("loc_4A586F: call _sub_5B7E1D;");
    asm("loc_4A5874: add $4,%esp;");
    asm("loc_4A5877: mov 0x2024(%esp),%ecx;");
    asm("loc_4A587E: pop %esi;");
    asm("loc_4A587F: mov %ecx,%fs:0;");
    asm("loc_4A5886: add $0x202C,%esp;");
    asm("loc_4A588C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A5890() // _sub_4A5890
{
    __DEBUG_ASM(4A5890);
    // chunk 0x4A5890 _sub_4A5890
    asm("loc_4A5890: push %ebp;");
    asm("loc_4A5891: mov %esp,%ebp;");
    asm("loc_4A5893: and $0xFFFFFFF8,%esp;");
    asm("loc_4A5896: push $0xFFFFFFFF;");
    asm("loc_4A5898: push $_sub_5BCC3B;");
    asm("loc_4A589D: mov %fs:0,%eax;");
    asm("loc_4A58A3: push %eax;");
    asm("loc_4A58A4: mov %esp,%fs:0;");
    asm("loc_4A58AB: push %ecx;");
    asm("loc_4A58AC: mov $0x1020,%eax;");
    asm("loc_4A58B1: call _sub_5B7E90;");
    asm("loc_4A58B6: mov _data_66873C,%eax;");
    asm("loc_4A58BB: push %ebx;");
    asm("loc_4A58BC: push %ebp;");
    asm("loc_4A58BD: push %esi;");
    asm("loc_4A58BE: push %edi;");
    asm("loc_4A58BF: mov %ecx,0x18(%esp);");
    asm("loc_4A58C3: xor %ebp,%ebp;");
    asm("loc_4A58C5: push %eax;");
    asm("loc_4A58C6: mov $_data_668708,%ecx;");
    asm("loc_4A58CB: xor %ebx,%ebx;");
    asm("loc_4A58CD: mov %bp,0x834(%esp);");
    asm("loc_4A58D5: call _sub_43A510;");
    asm("loc_4A58DA: mov %eax,%esi;");
    asm("loc_4A58DC: mov 0x2B(%esp),%al;");
    asm("loc_4A58E0: push $0xC;");
    asm("loc_4A58E2: mov %esi,0x30(%esp);");
    asm("loc_4A58E6: mov %al,0x20(%esp);");
    asm("loc_4A58EA: call _sub_5B7E84;");
    asm("loc_4A58EF: mov %eax,(%eax);");
    asm("loc_4A58F1: mov %eax,4(%eax);");
    asm("loc_4A58F4: add $4,%esp;");
    asm("loc_4A58F7: mov %eax,0x20(%esp);");
    asm("loc_4A58FB: mov %ebp,0x24(%esp);");
    asm("loc_4A58FF: push %ebp;");
    asm("loc_4A5900: lea 0x20(%esp),%ecx;");
    asm("loc_4A5904: push %ecx;");
    asm("loc_4A5905: mov %esi,%ecx;");
    asm("loc_4A5907: mov %ebp,0x1044(%esp);");
    asm("loc_4A590E: call _sub_437F70;");
    asm("loc_4A5913: mov _import_5C71C8,%edi;");
    asm("loc_4A5919: jmp loc_4A5920;");
    asm("loc_4A591B: xor %ebp,%ebp;");
    asm("loc_4A591D: lea (%ecx),%ecx;");
    asm("loc_4A5920: mov 0x18(%esp),%edx;");
    asm("loc_4A5924: cmp %ebp,0x588(%edx);");
    asm("loc_4A592A: mov %ebp,0x14(%esp);");
    asm("loc_4A592E: jle loc_4A59D9;");
    asm("loc_4A5934: mov 0x18(%esp),%eax;");
    asm("loc_4A5938: mov 0x584(%eax),%eax;");
    asm("loc_4A593E: mov 8(%eax,%ebp),%cl;");
    asm("loc_4A5942: add %ebp,%eax;");
    asm("loc_4A5944: test %cl,%cl;");
    asm("loc_4A5946: je loc_4A59BB;");
    asm("loc_4A5948: push $0x100;");
    asm("loc_4A594D: lea 0x34(%esp),%ecx;");
    asm("loc_4A5951: push %ecx;");
    asm("loc_4A5952: lea 0x28(%eax),%ecx;");
    asm("loc_4A5955: call _sub_41C970;");
    asm("loc_4A595A: lea 0x230(%esp),%edx;");
    asm("loc_4A5961: push $_data_5D4400;");
    asm("loc_4A5966: push %edx;");
    asm("loc_4A5967: calll *_import_5C70B4;");
    asm("loc_4A596D: lea 0x238(%esp),%eax;");
    asm("loc_4A5974: push %eax;");
    asm("loc_4A5975: call *%edi;");
    asm("loc_4A5977: lea 0x3C(%esp),%ecx;");
    asm("loc_4A597B: push %ecx;");
    asm("loc_4A597C: mov %eax,%esi;");
    asm("loc_4A597E: call *%edi;");
    asm("loc_4A5980: add %eax,%esi;");
    asm("loc_4A5982: add %ebx,%esi;");
    asm("loc_4A5984: add $0x10,%esp;");
    asm("loc_4A5987: cmp $0x400,%esi;");
    asm("loc_4A598D: jge loc_4A59BB;");
    asm("loc_4A598F: mov _import_5C70AC,%ebx;");
    asm("loc_4A5995: lea 0x30(%esp),%edx;");
    asm("loc_4A5999: push %edx;");
    asm("loc_4A599A: lea 0x834(%esp),%eax;");
    asm("loc_4A59A1: push %eax;");
    asm("loc_4A59A2: call *%ebx;");
    asm("loc_4A59A4: lea 0x238(%esp),%ecx;");
    asm("loc_4A59AB: push %ecx;");
    asm("loc_4A59AC: lea 0x83C(%esp),%edx;");
    asm("loc_4A59B3: push %edx;");
    asm("loc_4A59B4: call *%ebx;");
    asm("loc_4A59B6: add $0x10,%esp;");
    asm("loc_4A59B9: mov %esi,%ebx;");
    asm("loc_4A59BB: mov 0x14(%esp),%eax;");
    asm("loc_4A59BF: mov 0x18(%esp),%ecx;");
    asm("loc_4A59C3: mov 0x588(%ecx),%edx;");
    asm("loc_4A59C9: inc %eax;");
    asm("loc_4A59CA: add $0x60,%ebp;");
    asm("loc_4A59CD: cmp %edx,%eax;");
    asm("loc_4A59CF: mov %eax,0x14(%esp);");
    asm("loc_4A59D3: jl loc_4A5934;");
    asm("loc_4A59D9: mov 0x20(%esp),%ebp;");
    asm("loc_4A59DD: mov (%ebp),%eax;");
    asm("loc_4A59E0: cmp %ebp,%eax;");
    asm("loc_4A59E2: mov %eax,0x14(%esp);");
    asm("loc_4A59E6: je loc_4A5B9E;");
    asm("loc_4A59EC: lea (%esp),%esp;");
    asm("loc_4A59F0: mov 0x14(%esp),%edx;");
    asm("loc_4A59F4: mov 8(%edx),%eax;");
    asm("loc_4A59F7: mov 0x10(%eax),%ecx;");
    asm("loc_4A59FA: cmp $2,%ecx;");
    asm("loc_4A59FD: je loc_4A5A07;");
    asm("loc_4A59FF: test %ecx,%ecx;");
    asm("loc_4A5A01: jne loc_4A5B88;");
    asm("loc_4A5A07: mov (%eax),%esi;");
    asm("loc_4A5A09: mov 0x2C(%esp),%ecx;");
    asm("loc_4A5A0D: push %esi;");
    asm("loc_4A5A0E: call _sub_438060;");
    asm("loc_4A5A13: sub $8,%esp;");
    asm("loc_4A5A16: fstpl (%esp);");
    asm("loc_4A5A19: calll *_import_5C71C4;");
    asm("loc_4A5A1F: call _sub_5B7EC0;");
    asm("loc_4A5A24: push %esi;");
    asm("loc_4A5A25: mov %eax,%ebp;");
    asm("loc_4A5A27: calll *_import_5C6088;");
    asm("loc_4A5A2D: add $0xC,%esp;");
    asm("loc_4A5A30: test %ebp,%ebp;");
    asm("loc_4A5A32: mov %eax,%esi;");
    asm("loc_4A5A34: jle loc_4A5B88;");
    asm("loc_4A5A3A: mov 0x88(%esi),%eax;");
    asm("loc_4A5A40: test %eax,%eax;");
    asm("loc_4A5A42: je loc_4A5B88;");
    asm("loc_4A5A48: mov _data_67ECA8,%edx;");
    asm("loc_4A5A4E: push $0x100;");
    asm("loc_4A5A53: lea 0x34(%esp),%ecx;");
    asm("loc_4A5A57: push %ecx;");
    asm("loc_4A5A58: push %eax;");
    asm("loc_4A5A59: push %edx;");
    asm("loc_4A5A5A: call _sub_4347E0;");
    asm("loc_4A5A5F: add $0x10,%esp;");
    asm("loc_4A5A62: test %eax,%eax;");
    asm("loc_4A5A64: jne loc_4A5A97;");
    asm("loc_4A5A66: lea 0x48(%esi),%ecx;");
    asm("loc_4A5A69: calll *_import_5C6044;");
    asm("loc_4A5A6F: push %eax;");
    asm("loc_4A5A70: mov 0x88(%esi),%eax;");
    asm("loc_4A5A76: push %eax;");
    asm("loc_4A5A77: push $0x35F;");
    asm("loc_4A5A7C: push $_data_5D4384;");
    asm("loc_4A5A81: mov $0x100002,%ecx;");
    asm("loc_4A5A86: push $_data_5D43B8;");
    asm("loc_4A5A8B: push %ecx;");
    asm("loc_4A5A8C: mov _import_5C6D18,%ecx;");
    asm("loc_4A5A92: calll *(%ecx);");
    asm("loc_4A5A94: add $0x18,%esp;");
    asm("loc_4A5A97: lea 0x30(%esp),%edx;");
    asm("loc_4A5A9B: push %edx;");
    asm("loc_4A5A9C: xor %esi,%esi;");
    asm("loc_4A5A9E: call *%edi;");
    asm("loc_4A5AA0: add $4,%esp;");
    asm("loc_4A5AA3: test %eax,%eax;");
    asm("loc_4A5AA5: jbe loc_4A5AC9;");
    asm("loc_4A5AA7: xor %eax,%eax;");
    asm("loc_4A5AA9: mov 0x30(%esp,%esi,2),%ax;");
    asm("loc_4A5AAE: push %eax;");
    asm("loc_4A5AAF: calll *_import_5C7114;");
    asm("loc_4A5AB5: lea 0x34(%esp),%ecx;");
    asm("loc_4A5AB9: mov %ax,0x34(%esp,%esi,2);");
    asm("loc_4A5ABE: push %ecx;");
    asm("loc_4A5ABF: inc %esi;");
    asm("loc_4A5AC0: call *%edi;");
    asm("loc_4A5AC2: add $8,%esp;");
    asm("loc_4A5AC5: cmp %eax,%esi;");
    asm("loc_4A5AC7: jb loc_4A5AA7;");
    asm("loc_4A5AC9: mov _import_5C70B4,%esi;");
    asm("loc_4A5ACF: lea 0x230(%esp),%edx;");
    asm("loc_4A5AD6: push $_data_5CEF90;");
    asm("loc_4A5ADB: push %edx;");
    asm("loc_4A5ADC: call *%esi;");
    asm("loc_4A5ADE: push $0xA;");
    asm("loc_4A5AE0: lea 0x63C(%esp),%eax;");
    asm("loc_4A5AE7: push %eax;");
    asm("loc_4A5AE8: push %ebp;");
    asm("loc_4A5AE9: calll *_import_5C7110;");
    asm("loc_4A5AEF: lea 0x444(%esp),%ecx;");
    asm("loc_4A5AF6: push $_data_5D4400;");
    asm("loc_4A5AFB: push %ecx;");
    asm("loc_4A5AFC: call *%esi;");
    asm("loc_4A5AFE: lea 0x44C(%esp),%edx;");
    asm("loc_4A5B05: push %edx;");
    asm("loc_4A5B06: call *%edi;");
    asm("loc_4A5B08: mov %eax,%esi;");
    asm("loc_4A5B0A: lea 0x650(%esp),%eax;");
    asm("loc_4A5B11: push %eax;");
    asm("loc_4A5B12: call *%edi;");
    asm("loc_4A5B14: lea 0x254(%esp),%ecx;");
    asm("loc_4A5B1B: push %ecx;");
    asm("loc_4A5B1C: add %eax,%esi;");
    asm("loc_4A5B1E: call *%edi;");
    asm("loc_4A5B20: lea 0x58(%esp),%edx;");
    asm("loc_4A5B24: push %edx;");
    asm("loc_4A5B25: add %eax,%esi;");
    asm("loc_4A5B27: call *%edi;");
    asm("loc_4A5B29: add %eax,%esi;");
    asm("loc_4A5B2B: add %ebx,%esi;");
    asm("loc_4A5B2D: add $0x2C,%esp;");
    asm("loc_4A5B30: cmp $0x400,%esi;");
    asm("loc_4A5B36: jge loc_4A5B88;");
    asm("loc_4A5B38: mov _import_5C70AC,%ebx;");
    asm("loc_4A5B3E: lea 0x30(%esp),%eax;");
    asm("loc_4A5B42: push %eax;");
    asm("loc_4A5B43: lea 0x834(%esp),%ecx;");
    asm("loc_4A5B4A: push %ecx;");
    asm("loc_4A5B4B: call *%ebx;");
    asm("loc_4A5B4D: lea 0x238(%esp),%edx;");
    asm("loc_4A5B54: push %edx;");
    asm("loc_4A5B55: lea 0x83C(%esp),%eax;");
    asm("loc_4A5B5C: push %eax;");
    asm("loc_4A5B5D: call *%ebx;");
    asm("loc_4A5B5F: lea 0x640(%esp),%ecx;");
    asm("loc_4A5B66: push %ecx;");
    asm("loc_4A5B67: lea 0x844(%esp),%edx;");
    asm("loc_4A5B6E: push %edx;");
    asm("loc_4A5B6F: call *%ebx;");
    asm("loc_4A5B71: lea 0x448(%esp),%eax;");
    asm("loc_4A5B78: push %eax;");
    asm("loc_4A5B79: lea 0x84C(%esp),%ecx;");
    asm("loc_4A5B80: push %ecx;");
    asm("loc_4A5B81: call *%ebx;");
    asm("loc_4A5B83: add $0x20,%esp;");
    asm("loc_4A5B86: mov %esi,%ebx;");
    asm("loc_4A5B88: mov 0x14(%esp),%edx;");
    asm("loc_4A5B8C: mov (%edx),%eax;");
    asm("loc_4A5B8E: mov 0x20(%esp),%ebp;");
    asm("loc_4A5B92: cmp %ebp,%eax;");
    asm("loc_4A5B94: mov %eax,0x14(%esp);");
    asm("loc_4A5B98: jne loc_4A59F0;");
    asm("loc_4A5B9E: test %ebx,%ebx;");
    asm("loc_4A5BA0: je loc_4A5BAE;");
    asm("loc_4A5BA2: cmp $0x80,%ebx;");
    asm("loc_4A5BA8: jl loc_4A591B;");
    asm("loc_4A5BAE: mov (%ebp),%esi;");
    asm("loc_4A5BB1: cmp %ebp,%esi;");
    asm("loc_4A5BB3: je loc_4A5BDE;");
    asm("loc_4A5BB5: mov %esi,%eax;");
    asm("loc_4A5BB7: mov 4(%eax),%ecx;");
    asm("loc_4A5BBA: mov (%eax),%edx;");
    asm("loc_4A5BBC: mov (%esi),%esi;");
    asm("loc_4A5BBE: mov %edx,(%ecx);");
    asm("loc_4A5BC0: mov (%eax),%ecx;");
    asm("loc_4A5BC2: mov 4(%eax),%edx;");
    asm("loc_4A5BC5: push %eax;");
    asm("loc_4A5BC6: mov %edx,4(%ecx);");
    asm("loc_4A5BC9: call _sub_5B7E1D;");
    asm("loc_4A5BCE: mov 0x28(%esp),%ecx;");
    asm("loc_4A5BD2: add $4,%esp;");
    asm("loc_4A5BD5: dec %ecx;");
    asm("loc_4A5BD6: cmp %ebp,%esi;");
    asm("loc_4A5BD8: mov %ecx,0x24(%esp);");
    asm("loc_4A5BDC: jne loc_4A5BB5;");
    asm("loc_4A5BDE: lea 0x830(%esp),%eax;");
    asm("loc_4A5BE5: push %eax;");
    asm("loc_4A5BE6: calll *_import_5C710C;");
    asm("loc_4A5BEC: mov 0x1C(%esp),%esi;");
    asm("loc_4A5BF0: push %eax;");
    asm("loc_4A5BF1: mov %eax,0x344(%esi);");
    asm("loc_4A5BF7: call *%edi;");
    asm("loc_4A5BF9: lea (,%eax,4),%ecx;");
    asm("loc_4A5C00: push %ecx;");
    asm("loc_4A5C01: mov %eax,0x34C(%esi);");
    asm("loc_4A5C07: call _sub_5B7E84;");
    asm("loc_4A5C0C: mov %eax,0x348(%esi);");
    asm("loc_4A5C12: mov _off_611D0C,%edx;");
    asm("loc_4A5C18: push %edx;");
    asm("loc_4A5C19: call _sub_4177B0;");
    asm("loc_4A5C1E: mov 0x348(%esi),%ecx;");
    asm("loc_4A5C24: mov (%eax),%edx;");
    asm("loc_4A5C26: add $0x10,%esp;");
    asm("loc_4A5C29: push %ecx;");
    asm("loc_4A5C2A: mov 0x344(%esi),%ecx;");
    asm("loc_4A5C30: push $0xFFFFFFFF;");
    asm("loc_4A5C32: push %ecx;");
    asm("loc_4A5C33: mov %eax,%ecx;");
    asm("loc_4A5C35: calll *0x28(%edx);");
    asm("loc_4A5C38: push $0;");
    asm("loc_4A5C3A: push $0;");
    asm("loc_4A5C3C: mov %esi,%ecx;");
    asm("loc_4A5C3E: call _sub_4A5CA0;");
    asm("loc_4A5C43: mov 0x20(%esp),%eax;");
    asm("loc_4A5C47: mov (%eax),%esi;");
    asm("loc_4A5C49: cmp %eax,%esi;");
    asm("loc_4A5C4B: mov %eax,%edi;");
    asm("loc_4A5C4D: je loc_4A5C7D;");
    asm("loc_4A5C4F: nop;");
    asm("loc_4A5C50: mov %esi,%eax;");
    asm("loc_4A5C52: mov 4(%eax),%edx;");
    asm("loc_4A5C55: mov (%eax),%ecx;");
    asm("loc_4A5C57: mov (%esi),%esi;");
    asm("loc_4A5C59: mov %ecx,(%edx);");
    asm("loc_4A5C5B: mov (%eax),%edx;");
    asm("loc_4A5C5D: mov 4(%eax),%ecx;");
    asm("loc_4A5C60: push %eax;");
    asm("loc_4A5C61: mov %ecx,4(%edx);");
    asm("loc_4A5C64: call _sub_5B7E1D;");
    asm("loc_4A5C69: mov 0x28(%esp),%ecx;");
    asm("loc_4A5C6D: add $4,%esp;");
    asm("loc_4A5C70: dec %ecx;");
    asm("loc_4A5C71: cmp %edi,%esi;");
    asm("loc_4A5C73: mov %ecx,0x24(%esp);");
    asm("loc_4A5C77: jne loc_4A5C50;");
    asm("loc_4A5C79: mov 0x20(%esp),%eax;");
    asm("loc_4A5C7D: push %eax;");
    asm("loc_4A5C7E: call _sub_5B7E1D;");
    asm("loc_4A5C83: mov 0x1038(%esp),%ecx;");
    asm("loc_4A5C8A: add $4,%esp;");
    asm("loc_4A5C8D: pop %edi;");
    asm("loc_4A5C8E: mov %ecx,%fs:0;");
    asm("loc_4A5C95: pop %esi;");
    asm("loc_4A5C96: pop %ebp;");
    asm("loc_4A5C97: pop %ebx;");
    asm("loc_4A5C98: mov %ebp,%esp;");
    asm("loc_4A5C9A: pop %ebp;");
    asm("loc_4A5C9B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A5CA0() // _sub_4A5CA0
{
    __DEBUG_ASM(4A5CA0);
    // chunk 0x4A5CA0 _sub_4A5CA0
    asm("loc_4A5CA0: push %esi;");
    asm("loc_4A5CA1: mov %ecx,%esi;");
    asm("loc_4A5CA3: push %edi;");
    asm("loc_4A5CA4: mov 0x34C(%esi),%edi;");
    asm("loc_4A5CAA: test %edi,%edi;");
    asm("loc_4A5CAC: je loc_4A5D72;");
    asm("loc_4A5CB2: flds 0x10(%esp);");
    asm("loc_4A5CB6: xor %ecx,%ecx;");
    asm("loc_4A5CB8: test %edi,%edi;");
    asm("loc_4A5CBA: fchs;");
    asm("loc_4A5CBC: fildl _data_610850;");
    asm("loc_4A5CC2: fmuls _data_5D3FB4;");
    asm("loc_4A5CC8: jle loc_4A5D17;");
    asm("loc_4A5CCA: push %ebx;");
    asm("loc_4A5CCB: push %ebp;");
    asm("loc_4A5CCC: mov 0x14(%esp),%ebp;");
    asm("loc_4A5CD0: lea 0x358(%esi),%ebx;");
    asm("loc_4A5CD6: lea (%ecx,%ebp),%eax;");
    asm("loc_4A5CD9: cltd;");
    asm("loc_4A5CDA: idiv %edi;");
    asm("loc_4A5CDC: cmp $0x100,%ecx;");
    asm("loc_4A5CE2: jge loc_4A5D15;");
    asm("loc_4A5CE4: fld %st(1);");
    asm("loc_4A5CE6: fcomp;");
    asm("loc_4A5CE8: fnstsw %ax;");
    asm("loc_4A5CEA: test $5,%ah;");
    asm("loc_4A5CED: jp loc_4A5D15;");
    asm("loc_4A5CEF: mov 0x344(%esi),%eax;");
    asm("loc_4A5CF5: mov (%eax,%edx,2),%ax;");
    asm("loc_4A5CF9: mov %ax,(%ebx);");
    asm("loc_4A5CFC: mov 0x348(%esi),%eax;");
    asm("loc_4A5D02: fildl (%eax,%edx,4);");
    asm("loc_4A5D05: mov 0x34C(%esi),%edi;");
    asm("loc_4A5D0B: inc %ecx;");
    asm("loc_4A5D0C: add $2,%ebx;");
    asm("loc_4A5D0F: cmp %edi,%ecx;");
    asm("loc_4A5D11: faddp %st,%st(2);");
    asm("loc_4A5D13: jl loc_4A5CD6;");
    asm("loc_4A5D15: pop %ebp;");
    asm("loc_4A5D16: pop %ebx;");
    asm("loc_4A5D17: fxch;");
    asm("loc_4A5D19: push $0;");
    asm("loc_4A5D1B: fsub %st(1),%st;");
    asm("loc_4A5D1D: movw $0,0x358(%esi,%ecx,2);");
    asm("loc_4A5D27: mov 0x5B8(%esi),%ecx;");
    asm("loc_4A5D2D: mov (%ecx),%edx;");
    asm("loc_4A5D2F: lea 0x358(%esi),%eax;");
    asm("loc_4A5D35: fstps 0x10(%esp);");
    asm("loc_4A5D39: push %eax;");
    asm("loc_4A5D3A: push $0x1D;");
    asm("loc_4A5D3C: fstp %st(0);");
    asm("loc_4A5D3E: calll *0xA8(%edx);");
    asm("loc_4A5D44: mov 0x5B8(%esi),%ecx;");
    asm("loc_4A5D4A: mov (%ecx),%edx;");
    asm("loc_4A5D4C: push $1;");
    asm("loc_4A5D4E: push $0;");
    asm("loc_4A5D50: push $0x22;");
    asm("loc_4A5D52: calll *0xA8(%edx);");
    asm("loc_4A5D58: mov 0xC(%esp),%edx;");
    asm("loc_4A5D5C: mov 0x5B8(%esi),%ecx;");
    asm("loc_4A5D62: mov (%ecx),%eax;");
    asm("loc_4A5D64: push %edx;");
    asm("loc_4A5D65: mov 0x14(%esp),%edx;");
    asm("loc_4A5D69: push %edx;");
    asm("loc_4A5D6A: push $0x23;");
    asm("loc_4A5D6C: calll *0xA8(%eax);");
    asm("loc_4A5D72: pop %edi;");
    asm("loc_4A5D73: pop %esi;");
    asm("loc_4A5D74: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A5D80() // _sub_4A5D80
{
    __DEBUG_ASM(4A5D80);
    // chunk 0x4A5D80 _sub_4A5D80
    asm("loc_4A5D80: push %ebx;");
    asm("loc_4A5D81: push %ebp;");
    asm("loc_4A5D82: push %esi;");
    asm("loc_4A5D83: mov %ecx,%esi;");
    asm("loc_4A5D85: mov 0x578(%esi),%eax;");
    asm("loc_4A5D8B: mov 0x580(%esi),%ebx;");
    asm("loc_4A5D91: mov 0x660(%esi),%ebp;");
    asm("loc_4A5D97: push %edi;");
    asm("loc_4A5D98: mov 0xC(%esi),%edi;");
    asm("loc_4A5D9B: sub %eax,%ebx;");
    asm("loc_4A5D9D: sub %eax,%ebp;");
    asm("loc_4A5D9F: test %edi,%edi;");
    asm("loc_4A5DA1: je loc_4A5E05;");
    asm("loc_4A5DA3: movl $0x64,0x70(%edi);");
    asm("loc_4A5DAA: mov 0x660(%esi),%eax;");
    asm("loc_4A5DB0: test %eax,%eax;");
    asm("loc_4A5DB2: jl loc_4A5DD4;");
    asm("loc_4A5DB4: mov (%edi),%eax;");
    asm("loc_4A5DB6: mov %edi,%ecx;");
    asm("loc_4A5DB8: calll *8(%eax);");
    asm("loc_4A5DBB: cmp 0x5D0(%esi,%ebp,4),%eax;");
    asm("loc_4A5DC2: je loc_4A5DCD;");
    asm("loc_4A5DC4: cmp 0x5E4(%esi,%ebp,4),%eax;");
    asm("loc_4A5DCB: jne loc_4A5DD4;");
    asm("loc_4A5DCD: movl $0x65,0x70(%edi);");
    asm("loc_4A5DD4: mov 0x664(%esi),%eax;");
    asm("loc_4A5DDA: test %eax,%eax;");
    asm("loc_4A5DDC: jl loc_4A5DFE;");
    asm("loc_4A5DDE: mov (%edi),%edx;");
    asm("loc_4A5DE0: mov %edi,%ecx;");
    asm("loc_4A5DE2: calll *8(%edx);");
    asm("loc_4A5DE5: cmp 0x5D0(%esi,%ebx,4),%eax;");
    asm("loc_4A5DEC: je loc_4A5DF7;");
    asm("loc_4A5DEE: cmp 0x5E4(%esi,%ebx,4),%eax;");
    asm("loc_4A5DF5: jne loc_4A5DFE;");
    asm("loc_4A5DF7: movl $0x66,0x70(%edi);");
    asm("loc_4A5DFE: mov 8(%edi),%edi;");
    asm("loc_4A5E01: test %edi,%edi;");
    asm("loc_4A5E03: jne loc_4A5DA3;");
    asm("loc_4A5E05: lea 0x5E4(%esi),%eax;");
    asm("loc_4A5E0B: push $5;");
    asm("loc_4A5E0D: push %eax;");
    asm("loc_4A5E0E: call _sub_5A4B50;");
    asm("loc_4A5E13: mov 0x670(%esi),%ecx;");
    asm("loc_4A5E19: movl $0x63,0x70(%ecx);");
    asm("loc_4A5E20: mov 0x650(%esi),%edx;");
    asm("loc_4A5E26: add $8,%esp;");
    asm("loc_4A5E29: mov %esi,%ecx;");
    asm("loc_4A5E2B: movl $0x67,0x70(%edx);");
    asm("loc_4A5E32: call _sub_5A0760;");
    asm("loc_4A5E37: call _sub_559C20;");
    asm("loc_4A5E3C: pop %edi;");
    asm("loc_4A5E3D: pop %esi;");
    asm("loc_4A5E3E: pop %ebp;");
    asm("loc_4A5E3F: pop %ebx;");
    asm("loc_4A5E40: jmp _sub_559C10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A5E50() // _sub_4A5E50
{
    __DEBUG_ASM(4A5E50);
    // chunk 0x4A5E50 _sub_4A5E50
    asm("loc_4A5E50: push %ecx;");
    asm("loc_4A5E51: push %esi;");
    asm("loc_4A5E52: mov %ecx,%esi;");
    asm("loc_4A5E54: call _sub_42D680;");
    asm("loc_4A5E59: mov 0x34C(%esi),%edx;");
    asm("loc_4A5E5F: test %edx,%edx;");
    asm("loc_4A5E61: je loc_4A5F2A;");
    asm("loc_4A5E67: fmuls _data_5D440C;");
    asm("loc_4A5E6D: mov 0x354(%esi),%ecx;");
    asm("loc_4A5E73: push %edi;");
    asm("loc_4A5E74: mov 0x348(%esi),%edi;");
    asm("loc_4A5E7A: fadds 0x350(%esi);");
    asm("loc_4A5E80: fsts 8(%esp);");
    asm("loc_4A5E84: fstps 0x350(%esi);");
    asm("loc_4A5E8A: fildl (%edi,%ecx,4);");
    asm("loc_4A5E8D: flds 8(%esp);");
    asm("loc_4A5E91: fcomp;");
    asm("loc_4A5E93: fnstsw %ax;");
    asm("loc_4A5E95: test $1,%ah;");
    asm("loc_4A5E98: jne loc_4A5EDD;");
    asm("loc_4A5E9A: lea (%ebx),%ebx;");
    asm("loc_4A5EA0: flds 0x350(%esi);");
    asm("loc_4A5EA6: lea 1(%ecx),%eax;");
    asm("loc_4A5EA9: cmp %edx,%eax;");
    asm("loc_4A5EAB: fsub %st(1),%st;");
    asm("loc_4A5EAD: mov %eax,0x354(%esi);");
    asm("loc_4A5EB3: fstps 0x350(%esi);");
    asm("loc_4A5EB9: fstp %st(0);");
    asm("loc_4A5EBB: jl loc_4A5EC7;");
    asm("loc_4A5EBD: movl $0,0x354(%esi);");
    asm("loc_4A5EC7: mov 0x354(%esi),%ecx;");
    asm("loc_4A5ECD: fildl (%edi,%ecx,4);");
    asm("loc_4A5ED0: fcoms 0x350(%esi);");
    asm("loc_4A5ED6: fnstsw %ax;");
    asm("loc_4A5ED8: test $0x41,%ah;");
    asm("loc_4A5EDB: jnp loc_4A5EA0;");
    asm("loc_4A5EDD: fstp %st(0);");
    asm("loc_4A5EDF: sub $8,%esp;");
    asm("loc_4A5EE2: flds 0x350(%esi);");
    asm("loc_4A5EE8: faddl _data_5C75E8;");
    asm("loc_4A5EEE: fstpl (%esp);");
    asm("loc_4A5EF1: calll *_import_5C71C4;");
    asm("loc_4A5EF7: add $8,%esp;");
    asm("loc_4A5EFA: call _sub_5B7EC0;");
    asm("loc_4A5EFF: mov 0x354(%esi),%ecx;");
    asm("loc_4A5F05: mov %eax,8(%esp);");
    asm("loc_4A5F09: fildl 8(%esp);");
    asm("loc_4A5F0D: fstps 8(%esp);");
    asm("loc_4A5F11: mov 8(%esp),%eax;");
    asm("loc_4A5F15: push %eax;");
    asm("loc_4A5F16: push %ecx;");
    asm("loc_4A5F17: mov %esi,%ecx;");
    asm("loc_4A5F19: call _sub_4A5CA0;");
    asm("loc_4A5F1E: pop %edi;");
    asm("loc_4A5F1F: mov %esi,%ecx;");
    asm("loc_4A5F21: pop %esi;");
    asm("loc_4A5F22: add $4,%esp;");
    asm("loc_4A5F25: jmp _sub_5A17B0;");
    asm("loc_4A5F2A: mov %esi,%ecx;");
    asm("loc_4A5F2C: fstp %st(0);");
    asm("loc_4A5F2E: pop %esi;");
    asm("loc_4A5F2F: add $4,%esp;");
    asm("loc_4A5F32: jmp _sub_5A17B0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A5F40() // _sub_4A5F40
{
    __DEBUG_ASM(4A5F40);
    // chunk 0x4A5F40 _sub_4A5F40
    asm("loc_4A5F40: cmpl $0x10,4(%esp);");
    asm("loc_4A5F45: push %esi;");
    asm("loc_4A5F46: mov %ecx,%esi;");
    asm("loc_4A5F48: jne loc_4A5F9E;");
    asm("loc_4A5F4A: mov 0x10(%esi),%eax;");
    asm("loc_4A5F4D: test %eax,%eax;");
    asm("loc_4A5F4F: je loc_4A5F5A;");
    asm("loc_4A5F51: mov 0x14(%esi),%ecx;");
    asm("loc_4A5F54: push %ecx;");
    asm("loc_4A5F55: call *%eax;");
    asm("loc_4A5F57: add $4,%esp;");
    asm("loc_4A5F5A: push %edi;");
    asm("loc_4A5F5B: push $0;");
    asm("loc_4A5F5D: lea -0x32C(%esi),%edi;");
    asm("loc_4A5F63: call _sub_4424F0;");
    asm("loc_4A5F68: add $4,%esp;");
    asm("loc_4A5F6B: test %edi,%edi;");
    asm("loc_4A5F6D: je loc_4A5F97;");
    asm("loc_4A5F6F: mov 0xC(%edi),%eax;");
    asm("loc_4A5F72: test %eax,%eax;");
    asm("loc_4A5F74: je loc_4A5F88;");
    asm("loc_4A5F76: mov 8(%eax),%esi;");
    asm("loc_4A5F79: push %eax;");
    asm("loc_4A5F7A: call _sub_43D2A0;");
    asm("loc_4A5F7F: add $4,%esp;");
    asm("loc_4A5F82: test %esi,%esi;");
    asm("loc_4A5F84: mov %esi,%eax;");
    asm("loc_4A5F86: jne loc_4A5F76;");
    asm("loc_4A5F88: mov (%edi),%edx;");
    asm("loc_4A5F8A: mov %edi,%ecx;");
    asm("loc_4A5F8C: calll *0x28(%edx);");
    asm("loc_4A5F8F: mov (%edi),%eax;");
    asm("loc_4A5F91: push $1;");
    asm("loc_4A5F93: mov %edi,%ecx;");
    asm("loc_4A5F95: calll *(%eax);");
    asm("loc_4A5F97: pop %edi;");
    asm("loc_4A5F98: mov $1,%al;");
    asm("loc_4A5F9A: pop %esi;");
    asm("loc_4A5F9B: ret $4;");
    asm("loc_4A5F9E: xor %al,%al;");
    asm("loc_4A5FA0: pop %esi;");
    asm("loc_4A5FA1: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A5FB0() // _sub_4A5FB0
{
    __DEBUG_ASM(4A5FB0);
    // chunk 0x4A5FB0 _sub_4A5FB0
    asm("loc_4A5FB0: push %ebx;");
    asm("loc_4A5FB1: mov %ecx,%ebx;");
    asm("loc_4A5FB3: xor %eax,%eax;");
    asm("loc_4A5FB5: push %esi;");
    asm("loc_4A5FB6: mov 0xC(%esp),%esi;");
    asm("loc_4A5FBA: cmp %eax,%esi;");
    asm("loc_4A5FBC: mov %eax,8(%ebx);");
    asm("loc_4A5FBF: mov %al,0xC(%ebx);");
    asm("loc_4A5FC2: movl $_off_5CB554,(%ebx);");
    asm("loc_4A5FC8: mov %eax,4(%ebx);");
    asm("loc_4A5FCB: jne loc_4A5FD2;");
    asm("loc_4A5FCD: mov %al,0xC(%ebx);");
    asm("loc_4A5FD0: jmp loc_4A6007;");
    asm("loc_4A5FD2: push %ebp;");
    asm("loc_4A5FD3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A5FD6: xor %eax,%eax;");
    asm("loc_4A5FD8: push %edi;");
    asm("loc_4A5FD9: mov %esi,%edi;");
    asm("loc_4A5FDB: repne scas (%edi),%al;");
    asm("loc_4A5FDD: not %ecx;");
    asm("loc_4A5FDF: dec %ecx;");
    asm("loc_4A5FE0: mov %ecx,%eax;");
    asm("loc_4A5FE2: cmp $0x20,%eax;");
    asm("loc_4A5FE5: lea 0xC(%ebx),%ebp;");
    asm("loc_4A5FE8: jb loc_4A5FEF;");
    asm("loc_4A5FEA: mov $0x1F,%eax;");
    asm("loc_4A5FEF: mov %eax,%ecx;");
    asm("loc_4A5FF1: mov %ecx,%edx;");
    asm("loc_4A5FF3: shr $2,%ecx;");
    asm("loc_4A5FF6: mov %ebp,%edi;");
    asm("loc_4A5FF8: rep movsl (%esi),(%edi);");
    asm("loc_4A5FFA: mov %edx,%ecx;");
    asm("loc_4A5FFC: and $3,%ecx;");
    asm("loc_4A5FFF: rep movsb (%esi),(%edi);");
    asm("loc_4A6001: pop %edi;");
    asm("loc_4A6002: movb $0,(%eax,%ebp);");
    asm("loc_4A6006: pop %ebp;");
    asm("loc_4A6007: push %ebx;");
    asm("loc_4A6008: mov %eax,8(%ebx);");
    asm("loc_4A600B: call _sub_59DAB0;");
    asm("loc_4A6010: add $4,%esp;");
    asm("loc_4A6013: pop %esi;");
    asm("loc_4A6014: movl $_off_5D4414,(%ebx);");
    asm("loc_4A601A: mov %ebx,%eax;");
    asm("loc_4A601C: pop %ebx;");
    asm("loc_4A601D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6020() // _sub_4A6020
{
    __DEBUG_ASM(4A6020);
    // chunk 0x4A6020 _sub_4A6020
    asm("loc_4A6020: push $0xFFFFFFFF;");
    asm("loc_4A6022: push $_sub_5BCBEB;");
    asm("loc_4A6027: mov %fs:0,%eax;");
    asm("loc_4A602D: push %eax;");
    asm("loc_4A602E: mov %esp,%fs:0;");
    asm("loc_4A6035: push %ecx;");
    asm("loc_4A6036: push %esi;");
    asm("loc_4A6037: push %edi;");
    asm("loc_4A6038: push $0x674;");
    asm("loc_4A603D: mov %ecx,%edi;");
    asm("loc_4A603F: call _sub_5B7E84;");
    asm("loc_4A6044: add $4,%esp;");
    asm("loc_4A6047: mov %eax,8(%esp);");
    asm("loc_4A604B: test %eax,%eax;");
    asm("loc_4A604D: movl $0,0x14(%esp);");
    asm("loc_4A6055: je loc_4A6062;");
    asm("loc_4A6057: mov %eax,%ecx;");
    asm("loc_4A6059: call _sub_4A3FF0;");
    asm("loc_4A605E: mov %eax,%esi;");
    asm("loc_4A6060: jmp loc_4A6064;");
    asm("loc_4A6062: xor %esi,%esi;");
    asm("loc_4A6064: mov 0x20(%esp),%ecx;");
    asm("loc_4A6068: mov 0x1C(%esp),%edx;");
    asm("loc_4A606C: mov (%esi),%eax;");
    asm("loc_4A606E: push %ecx;");
    asm("loc_4A606F: add $0xC,%edi;");
    asm("loc_4A6072: push %edx;");
    asm("loc_4A6073: mov %esi,%ecx;");
    asm("loc_4A6075: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4A607D: mov %edi,0x10(%esi);");
    asm("loc_4A6080: calll *0x24(%eax);");
    asm("loc_4A6083: test %al,%al;");
    asm("loc_4A6085: jne loc_4A60A4;");
    asm("loc_4A6087: mov (%esi),%eax;");
    asm("loc_4A6089: push $1;");
    asm("loc_4A608B: mov %esi,%ecx;");
    asm("loc_4A608D: calll *(%eax);");
    asm("loc_4A608F: pop %edi;");
    asm("loc_4A6090: xor %eax,%eax;");
    asm("loc_4A6092: pop %esi;");
    asm("loc_4A6093: mov 4(%esp),%ecx;");
    asm("loc_4A6097: mov %ecx,%fs:0;");
    asm("loc_4A609E: add $0x10,%esp;");
    asm("loc_4A60A1: ret $8;");
    asm("loc_4A60A4: mov 0xC(%esp),%ecx;");
    asm("loc_4A60A8: pop %edi;");
    asm("loc_4A60A9: mov %esi,%eax;");
    asm("loc_4A60AB: pop %esi;");
    asm("loc_4A60AC: mov %ecx,%fs:0;");
    asm("loc_4A60B3: add $0x10,%esp;");
    asm("loc_4A60B6: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A60C0() // _sub_4A60C0
{
    __DEBUG_ASM(4A60C0);
    // chunk 0x4A60C0 _sub_4A60C0
    asm("loc_4A60C0: mov _data_5D4418,%eax;");
    asm("loc_4A60C5: mov %eax,_data_67213C;");
    asm("loc_4A60CA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A60D0() // _sub_4A60D0
{
    __DEBUG_ASM(4A60D0);
    // chunk 0x4A60D0 _sub_4A60D0
    asm("loc_4A60D0: mov _data_5D4418,%eax;");
    asm("loc_4A60D5: mov %eax,_data_672138;");
    asm("loc_4A60DA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A60E0() // _sub_4A60E0
{
    __DEBUG_ASM(4A60E0);
    // chunk 0x4A60E0 _sub_4A60E0
    asm("loc_4A60E0: mov _data_5D441C,%eax;");
    asm("loc_4A60E5: mov %eax,_data_672134;");
    asm("loc_4A60EA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A60F0() // _sub_4A60F0
{
    __DEBUG_ASM(4A60F0);
    // chunk 0x4A60F0 _sub_4A60F0
    asm("loc_4A60F0: push $_data_5CE080;");
    asm("loc_4A60F5: mov $_data_672108,%ecx;");
    asm("loc_4A60FA: call _sub_4A6960;");
    asm("loc_4A60FF: push $_sub_4A6110;");
    asm("loc_4A6104: call _sub_5B7E6C;");
    asm("loc_4A6109: pop %ecx;");
    asm("loc_4A610A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6110() // _unknown_libname_30
{
    __DEBUG_ASM(4A6110);
    // chunk 0x4A6110 _sub_4A6110
    asm("loc_4A6110: mov $_data_672108,%ecx;");
    asm("loc_4A6115: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6120() // _sub_4A6120
{
    __DEBUG_ASM(4A6120);
    // chunk 0x4A6120 _sub_4A6120
    asm("loc_4A6120: push %esi;");
    asm("loc_4A6121: mov %ecx,%esi;");
    asm("loc_4A6123: call _sub_4A6140;");
    asm("loc_4A6128: testb $1,8(%esp);");
    asm("loc_4A612D: je loc_4A6138;");
    asm("loc_4A612F: push %esi;");
    asm("loc_4A6130: call _sub_5B7E1D;");
    asm("loc_4A6135: add $4,%esp;");
    asm("loc_4A6138: mov %esi,%eax;");
    asm("loc_4A613A: pop %esi;");
    asm("loc_4A613B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6140() // _sub_4A6140
{
    __DEBUG_ASM(4A6140);
    // chunk 0x4A6140 _sub_4A6140
    asm("loc_4A6140: push $0xFFFFFFFF;");
    asm("loc_4A6142: push $_sub_5BCC58;");
    asm("loc_4A6147: mov %fs:0,%eax;");
    asm("loc_4A614D: push %eax;");
    asm("loc_4A614E: mov %esp,%fs:0;");
    asm("loc_4A6155: push %ecx;");
    asm("loc_4A6156: push %esi;");
    asm("loc_4A6157: mov %ecx,%esi;");
    asm("loc_4A6159: lea 0x32C(%esi),%ecx;");
    asm("loc_4A615F: mov %esi,4(%esp);");
    asm("loc_4A6163: movl $_off_5D443C,(%esi);");
    asm("loc_4A6169: movl $_off_5D442C,0x7C(%esi);");
    asm("loc_4A6170: movl $_off_5D4424,(%ecx);");
    asm("loc_4A6176: xor %eax,%eax;");
    asm("loc_4A6178: mov %eax,0x10(%esp);");
    asm("loc_4A617C: mov %al,_data_67DCC8;");
    asm("loc_4A6181: call _sub_576010;");
    asm("loc_4A6186: mov %esi,%ecx;");
    asm("loc_4A6188: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4A6190: call _sub_59FA50;");
    asm("loc_4A6195: mov 8(%esp),%ecx;");
    asm("loc_4A6199: pop %esi;");
    asm("loc_4A619A: mov %ecx,%fs:0;");
    asm("loc_4A61A1: add $0x10,%esp;");
    asm("loc_4A61A4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A61B0() // _sub_4A61B0
{
    __DEBUG_ASM(4A61B0);
    // chunk 0x4A61B0 _sub_4A61B0
    asm("loc_4A61B0: sub $0x30,%esp;");
    asm("loc_4A61B3: push %esi;");
    asm("loc_4A61B4: lea 4(%esp),%eax;");
    asm("loc_4A61B8: push %eax;");
    asm("loc_4A61B9: push $0;");
    asm("loc_4A61BB: push $0;");
    asm("loc_4A61BD: push $0;");
    asm("loc_4A61BF: push $1;");
    asm("loc_4A61C1: push $0;");
    asm("loc_4A61C3: push $0;");
    asm("loc_4A61C5: push $1;");
    asm("loc_4A61C7: push $0;");
    asm("loc_4A61C9: push $0;");
    asm("loc_4A61CB: push $0;");
    asm("loc_4A61CD: mov %ecx,%esi;");
    asm("loc_4A61CF: lea 0x3C(%esp),%ecx;");
    asm("loc_4A61D3: push %ecx;");
    asm("loc_4A61D4: push $0;");
    asm("loc_4A61D6: lea 0x50(%esp),%edx;");
    asm("loc_4A61DA: push %edx;");
    asm("loc_4A61DB: push $_data_5CE994;");
    asm("loc_4A61E0: push $_data_5D45E4;");
    asm("loc_4A61E5: mov %esi,%ecx;");
    asm("loc_4A61E7: movl $0,0x44(%esp);");
    asm("loc_4A61EF: movl $0,0x48(%esp);");
    asm("loc_4A61F7: movl $0,0x4C(%esp);");
    asm("loc_4A61FF: movl $0,0x50(%esp);");
    asm("loc_4A6207: movl $0,0x54(%esp);");
    asm("loc_4A620F: movl $0,0x58(%esp);");
    asm("loc_4A6217: movl $0,0x5C(%esp);");
    asm("loc_4A621F: movl $0,0x60(%esp);");
    asm("loc_4A6227: movl $0,0x64(%esp);");
    asm("loc_4A622F: call _sub_5A0DB0;");
    asm("loc_4A6234: push $1;");
    asm("loc_4A6236: push $0;");
    asm("loc_4A6238: push $1;");
    asm("loc_4A623A: push $0x3E8;");
    asm("loc_4A623F: push $0x3F99999A;");
    asm("loc_4A6244: push $0x3D75C28F;");
    asm("loc_4A6249: push $0x3F56C8B4;");
    asm("loc_4A624E: push $0;");
    asm("loc_4A6250: lea 0x3C(%esp),%eax;");
    asm("loc_4A6254: push %eax;");
    asm("loc_4A6255: push $_data_5CE91C;");
    asm("loc_4A625A: push $_data_5D45D0;");
    asm("loc_4A625F: mov %esi,%ecx;");
    asm("loc_4A6261: movl $0xBED60419,0x48(%esp);");
    asm("loc_4A6269: movl $0x3E818937,0x4C(%esp);");
    asm("loc_4A6271: movl $0,0x50(%esp);");
    asm("loc_4A6279: call _sub_5A0E30;");
    asm("loc_4A627E: push $1;");
    asm("loc_4A6280: lea 0x20(%esp),%ecx;");
    asm("loc_4A6284: push %ecx;");
    asm("loc_4A6285: push $0x3EAE147B;");
    asm("loc_4A628A: push $0x3F48F5C3;");
    asm("loc_4A628F: push $_data_5D45B8;");
    asm("loc_4A6294: mov %esi,%ecx;");
    asm("loc_4A6296: mov %eax,0x348(%esi);");
    asm("loc_4A629C: movl $0xBECCCCCD,0x30(%esp);");
    asm("loc_4A62A4: movl $0x3E395810,0x34(%esp);");
    asm("loc_4A62AC: movl $0,0x38(%esp);");
    asm("loc_4A62B4: call _sub_5A10E0;");
    asm("loc_4A62B9: push $0;");
    asm("loc_4A62BB: push $0;");
    asm("loc_4A62BD: push $0x332;");
    asm("loc_4A62C2: push $0;");
    asm("loc_4A62C4: push $0;");
    asm("loc_4A62C6: lea 0x30(%esp),%edx;");
    asm("loc_4A62CA: push %edx;");
    asm("loc_4A62CB: mov %eax,0x34C(%esi);");
    asm("loc_4A62D1: lea 0x28(%esp),%eax;");
    asm("loc_4A62D5: push %eax;");
    asm("loc_4A62D6: push $_data_5CED30;");
    asm("loc_4A62DB: push $_data_5D45A0;");
    asm("loc_4A62E0: mov %esi,%ecx;");
    asm("loc_4A62E2: movl $0x3DB851EC,0x40(%esp);");
    asm("loc_4A62EA: movl $0x3CD4FDF4,0x44(%esp);");
    asm("loc_4A62F2: movl $0,0x48(%esp);");
    asm("loc_4A62FA: movl $0xBE116873,0x34(%esp);");
    asm("loc_4A6302: movl $0xBE570A3D,0x38(%esp);");
    asm("loc_4A630A: movl $0,0x3C(%esp);");
    asm("loc_4A6312: call _sub_5A0D00;");
    asm("loc_4A6317: push $0;");
    asm("loc_4A6319: push $0;");
    asm("loc_4A631B: push $0x409;");
    asm("loc_4A6320: push $0;");
    asm("loc_4A6322: push $0;");
    asm("loc_4A6324: push $0;");
    asm("loc_4A6326: push $0;");
    asm("loc_4A6328: lea 0x38(%esp),%ecx;");
    asm("loc_4A632C: push %ecx;");
    asm("loc_4A632D: push $0;");
    asm("loc_4A632F: lea 0x34(%esp),%edx;");
    asm("loc_4A6333: push %edx;");
    asm("loc_4A6334: push $0;");
    asm("loc_4A6336: push $_data_5CED30;");
    asm("loc_4A633B: push $0;");
    asm("loc_4A633D: push $_data_5D4584;");
    asm("loc_4A6342: push $_data_5D456C;");
    asm("loc_4A6347: mov %esi,%ecx;");
    asm("loc_4A6349: mov %eax,0x33C(%esi);");
    asm("loc_4A634F: movl $0x3C9374BC,0x58(%esp);");
    asm("loc_4A6357: movl $0x3C9374BC,0x5C(%esp);");
    asm("loc_4A635F: movl $0,0x60(%esp);");
    asm("loc_4A6367: movl $0x3ECB4396,0x4C(%esp);");
    asm("loc_4A636F: movl $0x3E6C8B44,0x50(%esp);");
    asm("loc_4A6377: movl $0,0x54(%esp);");
    asm("loc_4A637F: call _sub_5A0C90;");
    asm("loc_4A6384: push $0;");
    asm("loc_4A6386: push $0;");
    asm("loc_4A6388: push $0x333;");
    asm("loc_4A638D: push $0;");
    asm("loc_4A638F: push $0;");
    asm("loc_4A6391: mov %eax,0x344(%esi);");
    asm("loc_4A6397: lea 0x30(%esp),%eax;");
    asm("loc_4A639B: push %eax;");
    asm("loc_4A639C: lea 0x28(%esp),%ecx;");
    asm("loc_4A63A0: push %ecx;");
    asm("loc_4A63A1: push $_data_5CED30;");
    asm("loc_4A63A6: push $_data_5D4550;");
    asm("loc_4A63AB: mov %esi,%ecx;");
    asm("loc_4A63AD: movl $0x3DB851EC,0x40(%esp);");
    asm("loc_4A63B5: movl $0x3CD4FDF4,0x44(%esp);");
    asm("loc_4A63BD: movl $0,0x48(%esp);");
    asm("loc_4A63C5: movl $0x3E051EB8,0x34(%esp);");
    asm("loc_4A63CD: movl $0xBE570A3D,0x38(%esp);");
    asm("loc_4A63D5: movl $0,0x3C(%esp);");
    asm("loc_4A63DD: call _sub_5A0D00;");
    asm("loc_4A63E2: push $1;");
    asm("loc_4A63E4: push $0;");
    asm("loc_4A63E6: push $1;");
    asm("loc_4A63E8: push $0x4AD;");
    asm("loc_4A63ED: push $0x3FC00000;");
    asm("loc_4A63F2: push $0x3D75C28F;");
    asm("loc_4A63F7: push $0x3E3020C5;");
    asm("loc_4A63FC: push $0;");
    asm("loc_4A63FE: lea 0x3C(%esp),%edx;");
    asm("loc_4A6402: push %edx;");
    asm("loc_4A6403: push $_data_5D0410;");
    asm("loc_4A6408: push $_data_5D4538;");
    asm("loc_4A640D: mov %esi,%ecx;");
    asm("loc_4A640F: mov %eax,0x354(%esi);");
    asm("loc_4A6415: movl $0xBE6B851F,0x48(%esp);");
    asm("loc_4A641D: movl $0xBE408312,0x4C(%esp);");
    asm("loc_4A6425: movl $0,0x50(%esp);");
    asm("loc_4A642D: call _sub_5A0E30;");
    asm("loc_4A6432: push $1;");
    asm("loc_4A6434: push $0;");
    asm("loc_4A6436: push $1;");
    asm("loc_4A6438: push $0x548;");
    asm("loc_4A643D: push $0x3FC00000;");
    asm("loc_4A6442: push $0x3D75C28F;");
    asm("loc_4A6447: push $0x3E353F7D;");
    asm("loc_4A644C: push $0;");
    asm("loc_4A644E: mov %eax,0x340(%esi);");
    asm("loc_4A6454: lea 0x3C(%esp),%eax;");
    asm("loc_4A6458: push %eax;");
    asm("loc_4A6459: push $_data_5D0410;");
    asm("loc_4A645E: movl $0x3D27EF9E,0x44(%esp);");
    asm("loc_4A6466: movl $0xBE408312,0x48(%esp);");
    asm("loc_4A646E: movl $0,0x4C(%esp);");
    asm("loc_4A6476: push $_data_5D4520;");
    asm("loc_4A647B: mov %esi,%ecx;");
    asm("loc_4A647D: call _sub_5A0E30;");
    asm("loc_4A6482: push $0;");
    asm("loc_4A6484: push $0;");
    asm("loc_4A6486: push $0x334;");
    asm("loc_4A648B: push $0;");
    asm("loc_4A648D: push $0;");
    asm("loc_4A648F: lea 0x30(%esp),%ecx;");
    asm("loc_4A6493: push %ecx;");
    asm("loc_4A6494: lea 0x28(%esp),%edx;");
    asm("loc_4A6498: push %edx;");
    asm("loc_4A6499: push $_data_5CED30;");
    asm("loc_4A649E: push $_data_5D4508;");
    asm("loc_4A64A3: mov %esi,%ecx;");
    asm("loc_4A64A5: mov %eax,0x358(%esi);");
    asm("loc_4A64AB: movl $0x3DB851EC,0x40(%esp);");
    asm("loc_4A64B3: movl $0x3CD4FDF4,0x44(%esp);");
    asm("loc_4A64BB: movl $0,0x48(%esp);");
    asm("loc_4A64C3: movl $0,0x34(%esp);");
    asm("loc_4A64CB: movl $0xBE570A3D,0x38(%esp);");
    asm("loc_4A64D3: movl $0,0x3C(%esp);");
    asm("loc_4A64DB: call _sub_5A0D00;");
    asm("loc_4A64E0: push $1;");
    asm("loc_4A64E2: push $0;");
    asm("loc_4A64E4: push $1;");
    asm("loc_4A64E6: push $0x3A1;");
    asm("loc_4A64EB: push $0x3FC00000;");
    asm("loc_4A64F0: push $0x3D75C28F;");
    asm("loc_4A64F5: push $0x3E374BC7;");
    asm("loc_4A64FA: push $0;");
    asm("loc_4A64FC: mov %eax,0x35C(%esi);");
    asm("loc_4A6502: lea 0x3C(%esp),%eax;");
    asm("loc_4A6506: push %eax;");
    asm("loc_4A6507: push $_data_5D0410;");
    asm("loc_4A650C: push $_data_5D44F0;");
    asm("loc_4A6511: mov %esi,%ecx;");
    asm("loc_4A6513: movl $0xBDB851EC,0x48(%esp);");
    asm("loc_4A651B: movl $0xBE428F5C,0x4C(%esp);");
    asm("loc_4A6523: movl $0,0x50(%esp);");
    asm("loc_4A652B: call _sub_5A0E30;");
    asm("loc_4A6530: mov (%esi),%edx;");
    asm("loc_4A6532: mov %eax,0x360(%esi);");
    asm("loc_4A6538: lea 0x28(%esp),%eax;");
    asm("loc_4A653C: push %eax;");
    asm("loc_4A653D: mov %esi,%ecx;");
    asm("loc_4A653F: movl $0,0x2C(%esp);");
    asm("loc_4A6547: movl $0,0x30(%esp);");
    asm("loc_4A654F: movl $0xBFA4DD2F,0x34(%esp);");
    asm("loc_4A6557: calll *0x14(%edx);");
    asm("loc_4A655A: push $0xF;");
    asm("loc_4A655C: lea 0x32C(%esi),%ecx;");
    asm("loc_4A6562: call _sub_5760D0;");
    asm("loc_4A6567: mov 0x3C(%esp),%ecx;");
    asm("loc_4A656B: mov 4(%esi),%edx;");
    asm("loc_4A656E: push %ecx;");
    asm("loc_4A656F: push %edx;");
    asm("loc_4A6570: mov %esi,%ecx;");
    asm("loc_4A6572: call _sub_4B5060;");
    asm("loc_4A6577: test %al,%al;");
    asm("loc_4A6579: setne %al;");
    asm("loc_4A657C: pop %esi;");
    asm("loc_4A657D: add $0x30,%esp;");
    asm("loc_4A6580: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6590() // _sub_4A6590
{
    __DEBUG_ASM(4A6590);
    // chunk 0x4A6590 _sub_4A6590
    asm("loc_4A6590: cmpl $0x26,4(%esp);");
    asm("loc_4A6595: jne loc_4A65DB;");
    asm("loc_4A6597: mov 8(%esp),%eax;");
    asm("loc_4A659B: cmp 0x344(%ecx),%eax;");
    asm("loc_4A65A1: je loc_4A65E0;");
    asm("loc_4A65A3: cmp 0x354(%ecx),%eax;");
    asm("loc_4A65A9: je loc_4A65E0;");
    asm("loc_4A65AB: cmp 0x35C(%ecx),%eax;");
    asm("loc_4A65B1: je loc_4A65E0;");
    asm("loc_4A65B3: cmp 0x33C(%ecx),%eax;");
    asm("loc_4A65B9: jne loc_4A65DB;");
    asm("loc_4A65BB: mov 0x330(%ecx),%eax;");
    asm("loc_4A65C1: test %eax,%eax;");
    asm("loc_4A65C3: je loc_4A65F8;");
    asm("loc_4A65C5: mov 0x334(%ecx),%ecx;");
    asm("loc_4A65CB: push $0;");
    asm("loc_4A65CD: push %ecx;");
    asm("loc_4A65CE: call *%eax;");
    asm("loc_4A65D0: add $8,%esp;");
    asm("loc_4A65D3: mov $1,%eax;");
    asm("loc_4A65D8: ret $0xC;");
    asm("loc_4A65DB: xor %eax,%eax;");
    asm("loc_4A65DD: ret $0xC;");
    asm("loc_4A65E0: mov 0x330(%ecx),%eax;");
    asm("loc_4A65E6: test %eax,%eax;");
    asm("loc_4A65E8: je loc_4A65F8;");
    asm("loc_4A65EA: mov 0x334(%ecx),%edx;");
    asm("loc_4A65F0: push $1;");
    asm("loc_4A65F2: push %edx;");
    asm("loc_4A65F3: call *%eax;");
    asm("loc_4A65F5: add $8,%esp;");
    asm("loc_4A65F8: mov $1,%eax;");
    asm("loc_4A65FD: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6600() // _sub_4A6600
{
    __DEBUG_ASM(4A6600);
    // chunk 0x4A6600 _sub_4A6600
    asm("loc_4A6600: cmpl $0xF,4(%esp);");
    asm("loc_4A6605: jne loc_4A6625;");
    asm("loc_4A6607: mov 0xC(%ecx),%al;");
    asm("loc_4A660A: test %al,%al;");
    asm("loc_4A660C: jne loc_4A6625;");
    asm("loc_4A660E: mov 4(%ecx),%eax;");
    asm("loc_4A6611: test %eax,%eax;");
    asm("loc_4A6613: je loc_4A6620;");
    asm("loc_4A6615: mov 8(%ecx),%ecx;");
    asm("loc_4A6618: push $1;");
    asm("loc_4A661A: push %ecx;");
    asm("loc_4A661B: call *%eax;");
    asm("loc_4A661D: add $8,%esp;");
    asm("loc_4A6620: mov $1,%al;");
    asm("loc_4A6622: ret $4;");
    asm("loc_4A6625: xor %al,%al;");
    asm("loc_4A6627: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6630() // _sub_4A6630
{
    __DEBUG_ASM(4A6630);
    // chunk 0x4A6630 _sub_4A6630
    asm("loc_4A6630: mov %fs:0,%eax;");
    asm("loc_4A6636: push $0xFFFFFFFF;");
    asm("loc_4A6638: push $_sub_5BCC8A;");
    asm("loc_4A663D: push %eax;");
    asm("loc_4A663E: mov %esp,%fs:0;");
    asm("loc_4A6645: sub $0x44,%esp;");
    asm("loc_4A6648: push %ebx;");
    asm("loc_4A6649: push %ebp;");
    asm("loc_4A664A: mov 0x5C(%esp),%ebp;");
    asm("loc_4A664E: push %esi;");
    asm("loc_4A664F: mov $1,%ebx;");
    asm("loc_4A6654: cmp %ebx,%ebp;");
    asm("loc_4A6656: push %edi;");
    asm("loc_4A6657: mov 0x68(%esp),%edi;");
    asm("loc_4A665B: mov %ecx,%esi;");
    asm("loc_4A665D: je loc_4A6668;");
    asm("loc_4A665F: push %edi;");
    asm("loc_4A6660: call _sub_459950;");
    asm("loc_4A6665: add $4,%esp;");
    asm("loc_4A6668: mov 0x70(%esp),%eax;");
    asm("loc_4A666C: mov 0x74(%esp),%ecx;");
    asm("loc_4A6670: mov %ecx,0x334(%esi);");
    asm("loc_4A6676: mov %eax,0x330(%esi);");
    asm("loc_4A667C: mov _data_6119F8,%edx;");
    asm("loc_4A6682: push %edx;");
    asm("loc_4A6683: push $_data_66FC60;");
    asm("loc_4A6688: mov %edi,%ecx;");
    asm("loc_4A668A: call _sub_41C970;");
    asm("loc_4A668F: lea 0x64(%esp),%eax;");
    asm("loc_4A6693: push %eax;");
    asm("loc_4A6694: lea 0x20(%esp),%ecx;");
    asm("loc_4A6698: call _sub_46BA60;");
    asm("loc_4A669D: push $0x9CA4;");
    asm("loc_4A66A2: lea 0x14(%esp),%ecx;");
    asm("loc_4A66A6: movl $0,0x60(%esp);");
    asm("loc_4A66AE: calll *_import_5C62B8;");
    asm("loc_4A66B4: mov (%eax),%edx;");
    asm("loc_4A66B6: mov %eax,%ecx;");
    asm("loc_4A66B8: mov %bl,0x5C(%esp);");
    asm("loc_4A66BC: calll *0x1C(%edx);");
    asm("loc_4A66BF: mov %eax,0x68(%esp);");
    asm("loc_4A66C3: mov 0x20(%esp),%ecx;");
    asm("loc_4A66C7: lea 0x68(%esp),%eax;");
    asm("loc_4A66CB: push %eax;");
    asm("loc_4A66CC: push %ecx;");
    asm("loc_4A66CD: lea 0x78(%esp),%edx;");
    asm("loc_4A66D1: push %edx;");
    asm("loc_4A66D2: lea 0x28(%esp),%ecx;");
    asm("loc_4A66D6: movb $2,0x68(%esp);");
    asm("loc_4A66DB: call _sub_46C800;");
    asm("loc_4A66E0: lea 0x68(%esp),%ecx;");
    asm("loc_4A66E4: mov %bl,0x5C(%esp);");
    asm("loc_4A66E8: call _sub_45EEB0;");
    asm("loc_4A66ED: lea 0x10(%esp),%ecx;");
    asm("loc_4A66F1: movb $0,0x5C(%esp);");
    asm("loc_4A66F6: calll *_import_5C62B4;");
    asm("loc_4A66FC: push $0;");
    asm("loc_4A66FE: lea 0x20(%esp),%eax;");
    asm("loc_4A6702: push %eax;");
    asm("loc_4A6703: push $_data_66FC60;");
    asm("loc_4A6708: calll *_import_5C71C8;");
    asm("loc_4A670E: add $4,%esp;");
    asm("loc_4A6711: push %eax;");
    asm("loc_4A6712: push $_data_66FC60;");
    asm("loc_4A6717: call _sub_57E2C0;");
    asm("loc_4A671C: mov 0x34C(%esi),%edi;");
    asm("loc_4A6722: add $0x10,%esp;");
    asm("loc_4A6725: push $0;");
    asm("loc_4A6727: push $0;");
    asm("loc_4A6729: mov %edi,%ecx;");
    asm("loc_4A672B: call _sub_5798B0;");
    asm("loc_4A6730: mov %edi,%ecx;");
    asm("loc_4A6732: call _sub_57B370;");
    asm("loc_4A6737: lea 0x1C(%esp),%ecx;");
    asm("loc_4A673B: push %ecx;");
    asm("loc_4A673C: mov %edi,%ecx;");
    asm("loc_4A673E: call _sub_57B3E0;");
    asm("loc_4A6743: mov 0x348(%esi),%ecx;");
    asm("loc_4A6749: mov (%ecx),%edx;");
    asm("loc_4A674B: mov $0x651,%eax;");
    asm("loc_4A6750: mov %eax,0x4C(%esp);");
    asm("loc_4A6754: mov %eax,0x50(%esp);");
    asm("loc_4A6758: push $0;");
    asm("loc_4A675A: movl $0x546,0x44(%esp);");
    asm("loc_4A6762: movl $0x650,0x48(%esp);");
    asm("loc_4A676A: movl $0x547,0x4C(%esp);");
    asm("loc_4A6772: mov 0x44(%esp,%ebp,4),%eax;");
    asm("loc_4A6776: push %eax;");
    asm("loc_4A6777: push $0x1E;");
    asm("loc_4A6779: calll *0xA8(%edx);");
    asm("loc_4A677F: test %ebp,%ebp;");
    asm("loc_4A6781: mov $0xFC,%al;");
    asm("loc_4A6783: mov $3,%edx;");
    asm("loc_4A6788: je loc_4A67D1;");
    asm("loc_4A678A: cmp %edx,%ebp;");
    asm("loc_4A678C: je loc_4A67D1;");
    asm("loc_4A678E: cmp %ebx,%ebp;");
    asm("loc_4A6790: je loc_4A67D1;");
    asm("loc_4A6792: cmp $2,%ebp;");
    asm("loc_4A6795: je loc_4A679C;");
    asm("loc_4A6797: cmp $4,%ebp;");
    asm("loc_4A679A: jne loc_4A6807;");
    asm("loc_4A679C: mov 0x33C(%esi),%ecx;");
    asm("loc_4A67A2: and %al,0x6C(%ecx);");
    asm("loc_4A67A5: mov 0x340(%esi),%ecx;");
    asm("loc_4A67AB: and %al,0x6C(%ecx);");
    asm("loc_4A67AE: mov 0x354(%esi),%ecx;");
    asm("loc_4A67B4: and %al,0x6C(%ecx);");
    asm("loc_4A67B7: mov 0x358(%esi),%ecx;");
    asm("loc_4A67BD: and %al,0x6C(%ecx);");
    asm("loc_4A67C0: mov 0x35C(%esi),%ecx;");
    asm("loc_4A67C6: or %dl,0x6C(%ecx);");
    asm("loc_4A67C9: mov 0x360(%esi),%ecx;");
    asm("loc_4A67CF: jmp loc_4A6804;");
    asm("loc_4A67D1: mov 0x35C(%esi),%ecx;");
    asm("loc_4A67D7: and %al,0x6C(%ecx);");
    asm("loc_4A67DA: mov 0x360(%esi),%ecx;");
    asm("loc_4A67E0: and %al,0x6C(%ecx);");
    asm("loc_4A67E3: mov 0x33C(%esi),%ecx;");
    asm("loc_4A67E9: or %dl,0x6C(%ecx);");
    asm("loc_4A67EC: mov 0x340(%esi),%ecx;");
    asm("loc_4A67F2: or %dl,0x6C(%ecx);");
    asm("loc_4A67F5: mov 0x354(%esi),%ecx;");
    asm("loc_4A67FB: or %dl,0x6C(%ecx);");
    asm("loc_4A67FE: mov 0x358(%esi),%ecx;");
    asm("loc_4A6804: or %dl,0x6C(%ecx);");
    asm("loc_4A6807: mov 0x6C(%esp),%cl;");
    asm("loc_4A680B: test %cl,%cl;");
    asm("loc_4A680D: je loc_4A68F0;");
    asm("loc_4A6813: mov 0x354(%esi),%ecx;");
    asm("loc_4A6819: and %al,0x6C(%ecx);");
    asm("loc_4A681C: mov 0x358(%esi),%ecx;");
    asm("loc_4A6822: and %al,0x6C(%ecx);");
    asm("loc_4A6825: mov 0x344(%esi),%ecx;");
    asm("loc_4A682B: and %al,0x6C(%ecx);");
    asm("loc_4A682E: mov 0x33C(%esi),%ecx;");
    asm("loc_4A6834: push $0;");
    asm("loc_4A6836: lea 0x2C(%esp),%eax;");
    asm("loc_4A683A: push %eax;");
    asm("loc_4A683B: mov %bl,0x338(%esi);");
    asm("loc_4A6841: mov (%ecx),%edx;");
    asm("loc_4A6843: push $7;");
    asm("loc_4A6845: calll *0xA8(%edx);");
    asm("loc_4A684B: mov 0x33C(%esi),%ecx;");
    asm("loc_4A6851: push $0;");
    asm("loc_4A6853: lea 0x14(%esp),%eax;");
    asm("loc_4A6857: push %eax;");
    asm("loc_4A6858: movl $0,0x18(%esp);");
    asm("loc_4A6860: movl $0xBE570A3D,0x1C(%esp);");
    asm("loc_4A6868: movl $0,0x20(%esp);");
    asm("loc_4A6870: mov (%ecx),%edx;");
    asm("loc_4A6872: push $6;");
    asm("loc_4A6874: calll *0xA8(%edx);");
    asm("loc_4A687A: flds 0x18(%esp);");
    asm("loc_4A687E: fsubs 0x30(%esp);");
    asm("loc_4A6882: mov 0x340(%esi),%ecx;");
    asm("loc_4A6888: mov (%ecx),%edx;");
    asm("loc_4A688A: push $0;");
    asm("loc_4A688C: fstps 0x70(%esp);");
    asm("loc_4A6890: lea 0x38(%esp),%eax;");
    asm("loc_4A6894: flds 0x18(%esp);");
    asm("loc_4A6898: push %eax;");
    asm("loc_4A6899: fsubs 0x34(%esp);");
    asm("loc_4A689D: push $7;");
    asm("loc_4A689F: fstps 0x74(%esp);");
    asm("loc_4A68A3: flds 0x1C(%esp);");
    asm("loc_4A68A7: fsubs 0x34(%esp);");
    asm("loc_4A68AB: fstps 0x7C(%esp);");
    asm("loc_4A68AF: calll *0xA8(%edx);");
    asm("loc_4A68B5: flds 0x3C(%esp);");
    asm("loc_4A68B9: mov 0x340(%esi),%ecx;");
    asm("loc_4A68BF: fadds 0x6C(%esp);");
    asm("loc_4A68C3: push $0;");
    asm("loc_4A68C5: flds 0x3C(%esp);");
    asm("loc_4A68C9: lea 0x44(%esp),%eax;");
    asm("loc_4A68CD: fadds 0x6C(%esp);");
    asm("loc_4A68D1: push %eax;");
    asm("loc_4A68D2: flds 0x78(%esp);");
    asm("loc_4A68D6: push $6;");
    asm("loc_4A68D8: fadds 0x40(%esp);");
    asm("loc_4A68DC: fstps 0x4C(%esp);");
    asm("loc_4A68E0: fstps 0x50(%esp);");
    asm("loc_4A68E4: fstps 0x54(%esp);");
    asm("loc_4A68E8: mov (%ecx),%edx;");
    asm("loc_4A68EA: calll *0xA8(%edx);");
    asm("loc_4A68F0: mov 0x20(%esp),%ebx;");
    asm("loc_4A68F4: mov (%ebx),%edi;");
    asm("loc_4A68F6: cmp %ebx,%edi;");
    asm("loc_4A68F8: movl $0xFFFFFFFF,0x5C(%esp);");
    asm("loc_4A6900: je loc_4A6937;");
    asm("loc_4A6902: mov %edi,%esi;");
    asm("loc_4A6904: mov 4(%esi),%ecx;");
    asm("loc_4A6907: mov (%esi),%edx;");
    asm("loc_4A6909: mov (%edi),%edi;");
    asm("loc_4A690B: mov %edx,(%ecx);");
    asm("loc_4A690D: mov 4(%esi),%ecx;");
    asm("loc_4A6910: mov (%esi),%eax;");
    asm("loc_4A6912: mov %ecx,4(%eax);");
    asm("loc_4A6915: lea 8(%esi),%ecx;");
    asm("loc_4A6918: call _sub_45EEB0;");
    asm("loc_4A691D: push %esi;");
    asm("loc_4A691E: call _sub_5B7E1D;");
    asm("loc_4A6923: mov 0x28(%esp),%ecx;");
    asm("loc_4A6927: add $4,%esp;");
    asm("loc_4A692A: dec %ecx;");
    asm("loc_4A692B: cmp %ebx,%edi;");
    asm("loc_4A692D: mov %ecx,0x24(%esp);");
    asm("loc_4A6931: jne loc_4A6902;");
    asm("loc_4A6933: mov 0x20(%esp),%ebx;");
    asm("loc_4A6937: push %ebx;");
    asm("loc_4A6938: call _sub_5B7E1D;");
    asm("loc_4A693D: mov 0x58(%esp),%ecx;");
    asm("loc_4A6941: add $4,%esp;");
    asm("loc_4A6944: pop %edi;");
    asm("loc_4A6945: pop %esi;");
    asm("loc_4A6946: pop %ebp;");
    asm("loc_4A6947: pop %ebx;");
    asm("loc_4A6948: mov %ecx,%fs:0;");
    asm("loc_4A694F: add $0x50,%esp;");
    asm("loc_4A6952: ret $0x14;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6960() // _sub_4A6960
{
    __DEBUG_ASM(4A6960);
    // chunk 0x4A6960 _sub_4A6960
    asm("loc_4A6960: push %ebx;");
    asm("loc_4A6961: mov %ecx,%ebx;");
    asm("loc_4A6963: xor %eax,%eax;");
    asm("loc_4A6965: push %esi;");
    asm("loc_4A6966: mov 0xC(%esp),%esi;");
    asm("loc_4A696A: cmp %eax,%esi;");
    asm("loc_4A696C: mov %eax,8(%ebx);");
    asm("loc_4A696F: mov %al,0xC(%ebx);");
    asm("loc_4A6972: movl $_off_5CB554,(%ebx);");
    asm("loc_4A6978: mov %eax,4(%ebx);");
    asm("loc_4A697B: jne loc_4A6982;");
    asm("loc_4A697D: mov %al,0xC(%ebx);");
    asm("loc_4A6980: jmp loc_4A69B7;");
    asm("loc_4A6982: push %ebp;");
    asm("loc_4A6983: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A6986: xor %eax,%eax;");
    asm("loc_4A6988: push %edi;");
    asm("loc_4A6989: mov %esi,%edi;");
    asm("loc_4A698B: repne scas (%edi),%al;");
    asm("loc_4A698D: not %ecx;");
    asm("loc_4A698F: dec %ecx;");
    asm("loc_4A6990: mov %ecx,%eax;");
    asm("loc_4A6992: cmp $0x20,%eax;");
    asm("loc_4A6995: lea 0xC(%ebx),%ebp;");
    asm("loc_4A6998: jb loc_4A699F;");
    asm("loc_4A699A: mov $0x1F,%eax;");
    asm("loc_4A699F: mov %eax,%ecx;");
    asm("loc_4A69A1: mov %ecx,%edx;");
    asm("loc_4A69A3: shr $2,%ecx;");
    asm("loc_4A69A6: mov %ebp,%edi;");
    asm("loc_4A69A8: rep movsl (%esi),(%edi);");
    asm("loc_4A69AA: mov %edx,%ecx;");
    asm("loc_4A69AC: and $3,%ecx;");
    asm("loc_4A69AF: rep movsb (%esi),(%edi);");
    asm("loc_4A69B1: pop %edi;");
    asm("loc_4A69B2: movb $0,(%eax,%ebp);");
    asm("loc_4A69B6: pop %ebp;");
    asm("loc_4A69B7: push %ebx;");
    asm("loc_4A69B8: mov %eax,8(%ebx);");
    asm("loc_4A69BB: call _sub_59DAB0;");
    asm("loc_4A69C0: add $4,%esp;");
    asm("loc_4A69C3: pop %esi;");
    asm("loc_4A69C4: movl $_off_5D4600,(%ebx);");
    asm("loc_4A69CA: mov %ebx,%eax;");
    asm("loc_4A69CC: pop %ebx;");
    asm("loc_4A69CD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A69D0() // _sub_4A69D0
{
    __DEBUG_ASM(4A69D0);
    // chunk 0x4A69D0 _sub_4A69D0
    asm("loc_4A69D0: push $0xFFFFFFFF;");
    asm("loc_4A69D2: push $_sub_5BCCAB;");
    asm("loc_4A69D7: mov %fs:0,%eax;");
    asm("loc_4A69DD: push %eax;");
    asm("loc_4A69DE: mov %esp,%fs:0;");
    asm("loc_4A69E5: push %ecx;");
    asm("loc_4A69E6: push %esi;");
    asm("loc_4A69E7: push %edi;");
    asm("loc_4A69E8: push $0x364;");
    asm("loc_4A69ED: mov %ecx,%edi;");
    asm("loc_4A69EF: call _sub_5B7E84;");
    asm("loc_4A69F4: mov %eax,%esi;");
    asm("loc_4A69F6: add $4,%esp;");
    asm("loc_4A69F9: mov %esi,8(%esp);");
    asm("loc_4A69FD: test %esi,%esi;");
    asm("loc_4A69FF: movl $0,0x14(%esp);");
    asm("loc_4A6A07: je loc_4A6A41;");
    asm("loc_4A6A09: mov %esi,%ecx;");
    asm("loc_4A6A0B: call _sub_59F860;");
    asm("loc_4A6A10: movl $_off_5CBED8,0x32C(%esi);");
    asm("loc_4A6A1A: movl $_off_5D443C,(%esi);");
    asm("loc_4A6A20: movl $_off_5D442C,0x7C(%esi);");
    asm("loc_4A6A27: movl $_off_5D4424,0x32C(%esi);");
    asm("loc_4A6A31: movb $1,_data_67DCC8;");
    asm("loc_4A6A38: movb $0,0x338(%esi);");
    asm("loc_4A6A3F: jmp loc_4A6A43;");
    asm("loc_4A6A41: xor %esi,%esi;");
    asm("loc_4A6A43: mov 0x20(%esp),%ecx;");
    asm("loc_4A6A47: mov 0x1C(%esp),%edx;");
    asm("loc_4A6A4B: mov (%esi),%eax;");
    asm("loc_4A6A4D: push %ecx;");
    asm("loc_4A6A4E: add $0xC,%edi;");
    asm("loc_4A6A51: push %edx;");
    asm("loc_4A6A52: mov %esi,%ecx;");
    asm("loc_4A6A54: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4A6A5C: mov %edi,0x10(%esi);");
    asm("loc_4A6A5F: calll *0x24(%eax);");
    asm("loc_4A6A62: test %al,%al;");
    asm("loc_4A6A64: jne loc_4A6A83;");
    asm("loc_4A6A66: mov (%esi),%eax;");
    asm("loc_4A6A68: push $1;");
    asm("loc_4A6A6A: mov %esi,%ecx;");
    asm("loc_4A6A6C: calll *(%eax);");
    asm("loc_4A6A6E: pop %edi;");
    asm("loc_4A6A6F: xor %eax,%eax;");
    asm("loc_4A6A71: pop %esi;");
    asm("loc_4A6A72: mov 4(%esp),%ecx;");
    asm("loc_4A6A76: mov %ecx,%fs:0;");
    asm("loc_4A6A7D: add $0x10,%esp;");
    asm("loc_4A6A80: ret $8;");
    asm("loc_4A6A83: mov 0xC(%esp),%ecx;");
    asm("loc_4A6A87: pop %edi;");
    asm("loc_4A6A88: mov %esi,%eax;");
    asm("loc_4A6A8A: pop %esi;");
    asm("loc_4A6A8B: mov %ecx,%fs:0;");
    asm("loc_4A6A92: add $0x10,%esp;");
    asm("loc_4A6A95: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6AA0() // _sub_4A6AA0
{
    __DEBUG_ASM(4A6AA0);
    // chunk 0x4A6AA0 _sub_4A6AA0
    asm("loc_4A6AA0: mov _data_5D4604,%eax;");
    asm("loc_4A6AA5: mov %eax,_data_672178;");
    asm("loc_4A6AAA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6AB0() // _sub_4A6AB0
{
    __DEBUG_ASM(4A6AB0);
    // chunk 0x4A6AB0 _sub_4A6AB0
    asm("loc_4A6AB0: mov _data_5D4604,%eax;");
    asm("loc_4A6AB5: mov %eax,_data_672174;");
    asm("loc_4A6ABA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6AC0() // _sub_4A6AC0
{
    __DEBUG_ASM(4A6AC0);
    // chunk 0x4A6AC0 _sub_4A6AC0
    asm("loc_4A6AC0: mov _data_5D4608,%eax;");
    asm("loc_4A6AC5: mov %eax,_data_672170;");
    asm("loc_4A6ACA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6AD0() // _sub_4A6AD0
{
    __DEBUG_ASM(4A6AD0);
    // chunk 0x4A6AD0 _sub_4A6AD0
    asm("loc_4A6AD0: push $_data_5D04D4;");
    asm("loc_4A6AD5: mov $_data_672144,%ecx;");
    asm("loc_4A6ADA: call _sub_4A76B0;");
    asm("loc_4A6ADF: push $_sub_4A6AF0;");
    asm("loc_4A6AE4: call _sub_5B7E6C;");
    asm("loc_4A6AE9: pop %ecx;");
    asm("loc_4A6AEA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6AF0() // _sub_4A6AF0
{
    __DEBUG_ASM(4A6AF0);
    // chunk 0x4A6AF0 _sub_4A6AF0
    asm("loc_4A6AF0: mov $_data_672144,%ecx;");
    asm("loc_4A6AF5: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6B00() // _sub_4A6B00
{
    __DEBUG_ASM(4A6B00);
    // chunk 0x4A6B00 _sub_4A6B00
    asm("loc_4A6B00: push %esi;");
    asm("loc_4A6B01: mov %ecx,%esi;");
    asm("loc_4A6B03: call _sub_4A6B20;");
    asm("loc_4A6B08: testb $1,8(%esp);");
    asm("loc_4A6B0D: je loc_4A6B18;");
    asm("loc_4A6B0F: push %esi;");
    asm("loc_4A6B10: call _sub_5B7E1D;");
    asm("loc_4A6B15: add $4,%esp;");
    asm("loc_4A6B18: mov %esi,%eax;");
    asm("loc_4A6B1A: pop %esi;");
    asm("loc_4A6B1B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6B20() // _sub_4A6B20
{
    __DEBUG_ASM(4A6B20);
    // chunk 0x4A6B20 _sub_4A6B20
    asm("loc_4A6B20: push $0xFFFFFFFF;");
    asm("loc_4A6B22: push $_sub_5BCCF1;");
    asm("loc_4A6B27: mov %fs:0,%eax;");
    asm("loc_4A6B2D: push %eax;");
    asm("loc_4A6B2E: mov %esp,%fs:0;");
    asm("loc_4A6B35: sub $8,%esp;");
    asm("loc_4A6B38: push %esi;");
    asm("loc_4A6B39: mov %ecx,%esi;");
    asm("loc_4A6B3B: push %edi;");
    asm("loc_4A6B3C: lea 0x32C(%esi),%edi;");
    asm("loc_4A6B42: mov %esi,0xC(%esp);");
    asm("loc_4A6B46: movl $_off_5D462C,(%esi);");
    asm("loc_4A6B4C: movl $_off_5D461C,0x7C(%esi);");
    asm("loc_4A6B53: movl $_off_5D4614,(%edi);");
    asm("loc_4A6B59: push %edi;");
    asm("loc_4A6B5A: movl $1,0x1C(%esp);");
    asm("loc_4A6B62: call _sub_577C30;");
    asm("loc_4A6B67: add $4,%esp;");
    asm("loc_4A6B6A: mov %edi,%ecx;");
    asm("loc_4A6B6C: movb $0,0x18(%esp);");
    asm("loc_4A6B71: call _sub_576010;");
    asm("loc_4A6B76: mov %esi,%ecx;");
    asm("loc_4A6B78: movl $0xFFFFFFFF,0x18(%esp);");
    asm("loc_4A6B80: call _sub_59FA50;");
    asm("loc_4A6B85: mov 0x10(%esp),%ecx;");
    asm("loc_4A6B89: pop %edi;");
    asm("loc_4A6B8A: pop %esi;");
    asm("loc_4A6B8B: mov %ecx,%fs:0;");
    asm("loc_4A6B92: add $0x14,%esp;");
    asm("loc_4A6B95: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A6BA0() // _sub_4A6BA0
{
    __DEBUG_ASM(4A6BA0);
    // chunk 0x4A6BA0 _sub_4A6BA0
    asm("loc_4A6BA0: sub $0x144,%esp;");
    asm("loc_4A6BA6: push %ebx;");
    asm("loc_4A6BA7: push %ebp;");
    asm("loc_4A6BA8: push %esi;");
    asm("loc_4A6BA9: push %edi;");
    asm("loc_4A6BAA: mov %ecx,%edi;");
    asm("loc_4A6BAC: call _sub_45A460;");
    asm("loc_4A6BB1: push $1;");
    asm("loc_4A6BB3: call _sub_4424F0;");
    asm("loc_4A6BB8: call _sub_4B65A0;");
    asm("loc_4A6BBD: xor %ebp,%ebp;");
    asm("loc_4A6BBF: push %ebp;");
    asm("loc_4A6BC0: push $_data_5CB128;");
    asm("loc_4A6BC5: call _sub_41DDE0;");
    asm("loc_4A6BCA: add $0xC,%esp;");
    asm("loc_4A6BCD: lea 0x28(%esp),%eax;");
    asm("loc_4A6BD1: push %eax;");
    asm("loc_4A6BD2: push %ebp;");
    asm("loc_4A6BD3: push %ebp;");
    asm("loc_4A6BD4: push %ebp;");
    asm("loc_4A6BD5: push $1;");
    asm("loc_4A6BD7: push %ebp;");
    asm("loc_4A6BD8: push $1;");
    asm("loc_4A6BDA: push $1;");
    asm("loc_4A6BDC: push %ebp;");
    asm("loc_4A6BDD: push %ebp;");
    asm("loc_4A6BDE: push %ebp;");
    asm("loc_4A6BDF: lea 0x48(%esp),%ecx;");
    asm("loc_4A6BE3: push %ecx;");
    asm("loc_4A6BE4: push %ebp;");
    asm("loc_4A6BE5: lea 0x44(%esp),%edx;");
    asm("loc_4A6BE9: push %edx;");
    asm("loc_4A6BEA: push $_data_5D21B0;");
    asm("loc_4A6BEF: push $_data_5D4750;");
    asm("loc_4A6BF4: mov %edi,%ecx;");
    asm("loc_4A6BF6: mov %ebp,0x68(%esp);");
    asm("loc_4A6BFA: mov %ebp,0x6C(%esp);");
    asm("loc_4A6BFE: mov %ebp,0x70(%esp);");
    asm("loc_4A6C02: mov %ebp,0x5C(%esp);");
    asm("loc_4A6C06: mov %ebp,0x60(%esp);");
    asm("loc_4A6C0A: mov %ebp,0x64(%esp);");
    asm("loc_4A6C0E: mov %ebp,0x50(%esp);");
    asm("loc_4A6C12: mov %ebp,0x54(%esp);");
    asm("loc_4A6C16: movl $0xBF800000,0x58(%esp);");
    asm("loc_4A6C1E: call _sub_5A0DB0;");
    asm("loc_4A6C23: lea 0x10(%esp),%eax;");
    asm("loc_4A6C27: push %eax;");
    asm("loc_4A6C28: push %ebp;");
    asm("loc_4A6C29: push %ebp;");
    asm("loc_4A6C2A: push %ebp;");
    asm("loc_4A6C2B: push $1;");
    asm("loc_4A6C2D: push %ebp;");
    asm("loc_4A6C2E: push $1;");
    asm("loc_4A6C30: push $1;");
    asm("loc_4A6C32: push %ebp;");
    asm("loc_4A6C33: push %ebp;");
    asm("loc_4A6C34: push %ebp;");
    asm("loc_4A6C35: lea 0x48(%esp),%ecx;");
    asm("loc_4A6C39: push %ecx;");
    asm("loc_4A6C3A: push %ebp;");
    asm("loc_4A6C3B: lea 0x5C(%esp),%edx;");
    asm("loc_4A6C3F: push %edx;");
    asm("loc_4A6C40: push $_data_5D4720;");
    asm("loc_4A6C45: push $_data_5D4714;");
    asm("loc_4A6C4A: mov %edi,%ecx;");
    asm("loc_4A6C4C: mov %ebp,0x50(%esp);");
    asm("loc_4A6C50: mov %ebp,0x54(%esp);");
    asm("loc_4A6C54: mov %ebp,0x58(%esp);");
    asm("loc_4A6C58: mov %ebp,0x5C(%esp);");
    asm("loc_4A6C5C: mov %ebp,0x60(%esp);");
    asm("loc_4A6C60: mov %ebp,0x64(%esp);");
    asm("loc_4A6C64: mov %ebp,0x68(%esp);");
    asm("loc_4A6C68: movl $0x3C1374C0,0x6C(%esp);");
    asm("loc_4A6C70: movl $0xBF800000,0x70(%esp);");
    asm("loc_4A6C78: call _sub_5A0DB0;");
    asm("loc_4A6C7D: push %ebp;");
    asm("loc_4A6C7E: push %ebp;");
    asm("loc_4A6C7F: push $1;");
    asm("loc_4A6C81: movl $0xB2800000,0x1C(%esp);");
    asm("loc_4A6C89: movl $0x3E6147AF,0x20(%esp);");
    asm("loc_4A6C91: movl $0xBF800000,0x24(%esp);");
    asm("loc_4A6C99: push %ebp;");
    asm("loc_4A6C9A: push $0x402CCCCD;");
    asm("loc_4A6C9F: push $0x3CF5C28F;");
    asm("loc_4A6CA4: push $0x3EB33333;");
    asm("loc_4A6CA9: push %ebp;");
    asm("loc_4A6CAA: lea 0x30(%esp),%eax;");
    asm("loc_4A6CAE: push %eax;");
    asm("loc_4A6CAF: push $_data_5CE91C;");
    asm("loc_4A6CB4: push $_data_5D4708;");
    asm("loc_4A6CB9: mov %edi,%ecx;");
    asm("loc_4A6CBB: call _sub_5A0E30;");
    asm("loc_4A6CC0: mov %eax,0x334(%edi);");
    asm("loc_4A6CC6: calll *_import_5C60D0;");
    asm("loc_4A6CCC: test %al,%al;");
    asm("loc_4A6CCE: je loc_4A6D26;");
    asm("loc_4A6CD0: mov _data_66873C,%eax;");
    asm("loc_4A6CD5: xor %bl,%bl;");
    asm("loc_4A6CD7: cmp %ebp,%eax;");
    asm("loc_4A6CD9: je loc_4A6CDD;");
    asm("loc_4A6CDB: mov $1,%bl;");
    asm("loc_4A6CDD: mov $_data_66D2D0,%ecx;");
    asm("loc_4A6CE2: call _sub_4568A0;");
    asm("loc_4A6CE7: test %al,%al;");
    asm("loc_4A6CE9: je loc_4A6D05;");
    asm("loc_4A6CEB: test %bl,%bl;");
    asm("loc_4A6CED: je loc_4A6D05;");
    asm("loc_4A6CEF: movl $2,0x364(%edi);");
    asm("loc_4A6CF9: movl $3,0x368(%edi);");
    asm("loc_4A6D03: jmp loc_4A6D3A;");
    asm("loc_4A6D05: mov $4,%ebx;");
    asm("loc_4A6D0A: movl $3,0x364(%edi);");
    asm("loc_4A6D14: mov %ebx,0x368(%edi);");
    asm("loc_4A6D1A: movl $5,0x36C(%edi);");
    asm("loc_4A6D24: jmp loc_4A6D4F;");
    asm("loc_4A6D26: movl $6,0x364(%edi);");
    asm("loc_4A6D30: movl $7,0x368(%edi);");
    asm("loc_4A6D3A: mov $5,%ebx;");
    asm("loc_4A6D3F: movl $4,0x36C(%edi);");
    asm("loc_4A6D49: mov %ebx,0x370(%edi);");
    asm("loc_4A6D4F: cmp $4,%ebx;");
    asm("loc_4A6D52: movl $1,0x360(%edi);");
    asm("loc_4A6D5C: movl $0x3E189375,0x40(%esp);");
    asm("loc_4A6D64: movl $0x3DA8F5C3,0x38(%esp);");
    asm("loc_4A6D6C: jne loc_4A6D7E;");
    asm("loc_4A6D6E: movl $0x3E0374BD,0x40(%esp);");
    asm("loc_4A6D76: movl $0x3DC51EB9,0x38(%esp);");
    asm("loc_4A6D7E: xor %esi,%esi;");
    asm("loc_4A6D80: cmp %ebp,%ebx;");
    asm("loc_4A6D82: mov %esi,0x34(%esp);");
    asm("loc_4A6D86: jle loc_4A6E93;");
    asm("loc_4A6D8C: lea 0x34C(%edi),%ebp;");
    asm("loc_4A6D92: fildl 0x34(%esp);");
    asm("loc_4A6D96: push %esi;");
    asm("loc_4A6D97: lea 0x58(%esp),%ecx;");
    asm("loc_4A6D9B: push $_data_5D46F4;");
    asm("loc_4A6DA0: fmuls 0x40(%esp);");
    asm("loc_4A6DA4: push %ecx;");
    asm("loc_4A6DA5: flds 0x4C(%esp);");
    asm("loc_4A6DA9: fsub %st(1),%st;");
    asm("loc_4A6DAB: fstps 0x58(%esp);");
    asm("loc_4A6DAF: fstp %st(0);");
    asm("loc_4A6DB1: calll *_import_5C71EC;");
    asm("loc_4A6DB7: flds 0x58(%esp);");
    asm("loc_4A6DBB: add $0xC,%esp;");
    asm("loc_4A6DBE: push $0;");
    asm("loc_4A6DC0: push $0;");
    asm("loc_4A6DC2: push $0;");
    asm("loc_4A6DC4: push $0;");
    asm("loc_4A6DC6: push $0;");
    asm("loc_4A6DC8: lea 0x24(%esp),%edx;");
    asm("loc_4A6DCC: push %edx;");
    asm("loc_4A6DCD: lea 0x34(%esp),%eax;");
    asm("loc_4A6DD1: push %eax;");
    asm("loc_4A6DD2: push $0;");
    asm("loc_4A6DD4: lea 0x74(%esp),%ecx;");
    asm("loc_4A6DD8: push %ecx;");
    asm("loc_4A6DD9: fstps 0x44(%esp);");
    asm("loc_4A6DDD: mov %edi,%ecx;");
    asm("loc_4A6DDF: movl $0x3E333333,0x34(%esp);");
    asm("loc_4A6DE7: movl $0x3CE56042,0x38(%esp);");
    asm("loc_4A6DEF: movl $0,0x3C(%esp);");
    asm("loc_4A6DF7: movl $0,0x40(%esp);");
    asm("loc_4A6DFF: movl $0xBF800000,0x48(%esp);");
    asm("loc_4A6E07: call _sub_5A0D00;");
    asm("loc_4A6E0C: lea -1(%ebx),%ecx;");
    asm("loc_4A6E0F: cmp %ecx,%esi;");
    asm("loc_4A6E11: mov %eax,-0x14(%ebp);");
    asm("loc_4A6E14: jne loc_4A6E1D;");
    asm("loc_4A6E16: orb $1,0x35D(%eax);");
    asm("loc_4A6E1D: push %esi;");
    asm("loc_4A6E1E: lea 0x58(%esp),%edx;");
    asm("loc_4A6E22: push $_data_5D46E0;");
    asm("loc_4A6E27: push %edx;");
    asm("loc_4A6E28: calll *_import_5C71EC;");
    asm("loc_4A6E2E: flds 0x58(%esp);");
    asm("loc_4A6E32: fadds _data_5D3E44;");
    asm("loc_4A6E38: add $0xC,%esp;");
    asm("loc_4A6E3B: push $0;");
    asm("loc_4A6E3D: push $0;");
    asm("loc_4A6E3F: push $1;");
    asm("loc_4A6E41: push $0;");
    asm("loc_4A6E43: push $0x3FC00000;");
    asm("loc_4A6E48: push $0x3CF5C28F;");
    asm("loc_4A6E4D: push $0x3E8A3D71;");
    asm("loc_4A6E52: push $0;");
    asm("loc_4A6E54: lea 0x48(%esp),%eax;");
    asm("loc_4A6E58: push %eax;");
    asm("loc_4A6E59: push $_data_5D0410;");
    asm("loc_4A6E5E: lea 0x7C(%esp),%ecx;");
    asm("loc_4A6E62: push %ecx;");
    asm("loc_4A6E63: fstps 0x58(%esp);");
    asm("loc_4A6E67: mov %edi,%ecx;");
    asm("loc_4A6E69: movl $0x32300000,0x54(%esp);");
    asm("loc_4A6E71: movl $0xBF800000,0x5C(%esp);");
    asm("loc_4A6E79: call _sub_5A0E30;");
    asm("loc_4A6E7E: inc %esi;");
    asm("loc_4A6E7F: mov %eax,(%ebp);");
    asm("loc_4A6E82: add $4,%ebp;");
    asm("loc_4A6E85: cmp %ebx,%esi;");
    asm("loc_4A6E87: mov %esi,0x34(%esp);");
    asm("loc_4A6E8B: jl loc_4A6D92;");
    asm("loc_4A6E91: xor %ebp,%ebp;");
    asm("loc_4A6E93: cmp $5,%ebx;");
    asm("loc_4A6E96: jge loc_4A6EB4;");
    asm("loc_4A6E98: mov $5,%ecx;");
    asm("loc_4A6E9D: lea 0x34C(%edi,%ebx,4),%eax;");
    asm("loc_4A6EA4: sub %ebx,%ecx;");
    asm("loc_4A6EA6: mov %ebp,-0x14(%eax);");
    asm("loc_4A6EA9: mov %ebp,(%eax);");
    asm("loc_4A6EAB: mov %ebp,0x14(%eax);");
    asm("loc_4A6EAE: add $4,%eax;");
    asm("loc_4A6EB1: dec %ecx;");
    asm("loc_4A6EB2: jne loc_4A6EA6;");
    asm("loc_4A6EB4: calll *_import_5C60D0;");
    asm("loc_4A6EBA: test %al,%al;");
    asm("loc_4A6EBC: mov 0x334(%edi),%ecx;");
    asm("loc_4A6EC2: push %ebp;");
    asm("loc_4A6EC3: je loc_4A6ED6;");
    asm("loc_4A6EC5: mov (%ecx),%edx;");
    asm("loc_4A6EC7: push $0x71C;");
    asm("loc_4A6ECC: push $0x1E;");
    asm("loc_4A6ECE: calll *0xA8(%edx);");
    asm("loc_4A6ED4: jmp loc_4A6EE5;");
    asm("loc_4A6ED6: mov (%ecx),%eax;");
    asm("loc_4A6ED8: push $0x724;");
    asm("loc_4A6EDD: push $0x1E;");
    asm("loc_4A6EDF: calll *0xA8(%eax);");
    asm("loc_4A6EE5: cmp %ebp,%ebx;");
    asm("loc_4A6EE7: jle loc_4A6FED;");
    asm("loc_4A6EED: lea 0x34C(%edi),%esi;");
    asm("loc_4A6EF3: mov 0x14(%esi),%eax;");
    asm("loc_4A6EF6: cmp $1,%eax;");
    asm("loc_4A6EF9: jne loc_4A6F18;");
    asm("loc_4A6EFB: mov (%esi),%ecx;");
    asm("loc_4A6EFD: mov (%ecx),%edx;");
    asm("loc_4A6EFF: push %ebp;");
    asm("loc_4A6F00: push $0x71D;");
    asm("loc_4A6F05: push $0x1E;");
    asm("loc_4A6F07: calll *0xA8(%edx);");
    asm("loc_4A6F0D: push %ebp;");
    asm("loc_4A6F0E: push $0x33A;");
    asm("loc_4A6F13: jmp loc_4A6FD6;");
    asm("loc_4A6F18: cmp $2,%eax;");
    asm("loc_4A6F1B: jne loc_4A6F3A;");
    asm("loc_4A6F1D: mov (%esi),%ecx;");
    asm("loc_4A6F1F: mov (%ecx),%edx;");
    asm("loc_4A6F21: push %ebp;");
    asm("loc_4A6F22: push $0x71E;");
    asm("loc_4A6F27: push $0x1E;");
    asm("loc_4A6F29: calll *0xA8(%edx);");
    asm("loc_4A6F2F: push %ebp;");
    asm("loc_4A6F30: push $0x33B;");
    asm("loc_4A6F35: jmp loc_4A6FD6;");
    asm("loc_4A6F3A: cmp $3,%eax;");
    asm("loc_4A6F3D: jne loc_4A6F5C;");
    asm("loc_4A6F3F: mov (%esi),%ecx;");
    asm("loc_4A6F41: mov (%ecx),%edx;");
    asm("loc_4A6F43: push %ebp;");
    asm("loc_4A6F44: push $0x71F;");
    asm("loc_4A6F49: push $0x1E;");
    asm("loc_4A6F4B: calll *0xA8(%edx);");
    asm("loc_4A6F51: push %ebp;");
    asm("loc_4A6F52: push $0x33C;");
    asm("loc_4A6F57: jmp loc_4A6FD6;");
    asm("loc_4A6F5C: cmp $4,%eax;");
    asm("loc_4A6F5F: jne loc_4A6F7B;");
    asm("loc_4A6F61: mov (%esi),%ecx;");
    asm("loc_4A6F63: mov (%ecx),%edx;");
    asm("loc_4A6F65: push %ebp;");
    asm("loc_4A6F66: push $0x720;");
    asm("loc_4A6F6B: push $0x1E;");
    asm("loc_4A6F6D: calll *0xA8(%edx);");
    asm("loc_4A6F73: push %ebp;");
    asm("loc_4A6F74: push $0x33D;");
    asm("loc_4A6F79: jmp loc_4A6FD6;");
    asm("loc_4A6F7B: cmp $5,%eax;");
    asm("loc_4A6F7E: jne loc_4A6F9A;");
    asm("loc_4A6F80: mov (%esi),%ecx;");
    asm("loc_4A6F82: mov (%ecx),%edx;");
    asm("loc_4A6F84: push %ebp;");
    asm("loc_4A6F85: push $0x721;");
    asm("loc_4A6F8A: push $0x1E;");
    asm("loc_4A6F8C: calll *0xA8(%edx);");
    asm("loc_4A6F92: push %ebp;");
    asm("loc_4A6F93: push $0x33E;");
    asm("loc_4A6F98: jmp loc_4A6FD6;");
    asm("loc_4A6F9A: cmp $6,%eax;");
    asm("loc_4A6F9D: jne loc_4A6FB9;");
    asm("loc_4A6F9F: mov (%esi),%ecx;");
    asm("loc_4A6FA1: mov (%ecx),%edx;");
    asm("loc_4A6FA3: push %ebp;");
    asm("loc_4A6FA4: push $0x752;");
    asm("loc_4A6FA9: push $0x1E;");
    asm("loc_4A6FAB: calll *0xA8(%edx);");
    asm("loc_4A6FB1: push %ebp;");
    asm("loc_4A6FB2: push $0x33F;");
    asm("loc_4A6FB7: jmp loc_4A6FD6;");
    asm("loc_4A6FB9: cmp $7,%eax;");
    asm("loc_4A6FBC: jne loc_4A6FE3;");
    asm("loc_4A6FBE: mov (%esi),%ecx;");
    asm("loc_4A6FC0: mov (%ecx),%edx;");
    asm("loc_4A6FC2: push %ebp;");
    asm("loc_4A6FC3: push $0x725;");
    asm("loc_4A6FC8: push $0x1E;");
    asm("loc_4A6FCA: calll *0xA8(%edx);");
    asm("loc_4A6FD0: push %ebp;");
    asm("loc_4A6FD1: push $0x340;");
    asm("loc_4A6FD6: mov -0x14(%esi),%ecx;");
    asm("loc_4A6FD9: mov (%ecx),%eax;");
    asm("loc_4A6FDB: push $3;");
    asm("loc_4A6FDD: calll *0xA8(%eax);");
    asm("loc_4A6FE3: add $4,%esi;");
    asm("loc_4A6FE6: dec %ebx;");
    asm("loc_4A6FE7: jne loc_4A6EF3;");
    asm("loc_4A6FED: push $1;");
    asm("loc_4A6FEF: movl $0x64,0x70(%edi);");
    asm("loc_4A6FF6: movl $6,0x78(%edi);");
    asm("loc_4A6FFD: call _sub_42D6F0;");
    asm("loc_4A7002: call _sub_41DD90;");
    asm("loc_4A7007: push $1;");
    asm("loc_4A7009: mov %al,%bl;");
    asm("loc_4A700B: call _sub_41DDA0;");
    asm("loc_4A7010: lea 0x32C(%edi),%esi;");
    asm("loc_4A7016: push %esi;");
    asm("loc_4A7017: mov %bl,0x330(%edi);");
    asm("loc_4A701D: call _sub_577B40;");
    asm("loc_4A7022: add $0xC,%esp;");
    asm("loc_4A7025: push $0x11;");
    asm("loc_4A7027: mov %esi,%ecx;");
    asm("loc_4A7029: call _sub_5760D0;");
    asm("loc_4A702E: push $0xF;");
    asm("loc_4A7030: mov %esi,%ecx;");
    asm("loc_4A7032: call _sub_5760D0;");
    asm("loc_4A7037: push $0x14;");
    asm("loc_4A7039: mov %esi,%ecx;");
    asm("loc_4A703B: call _sub_5760D0;");
    asm("loc_4A7040: mov 0x15C(%esp),%ecx;");
    asm("loc_4A7047: mov 0x158(%esp),%edx;");
    asm("loc_4A704E: push %ecx;");
    asm("loc_4A704F: push %edx;");
    asm("loc_4A7050: mov %edi,%ecx;");
    asm("loc_4A7052: call _sub_4B5060;");
    asm("loc_4A7057: pop %edi;");
    asm("loc_4A7058: pop %esi;");
    asm("loc_4A7059: test %al,%al;");
    asm("loc_4A705B: pop %ebp;");
    asm("loc_4A705C: setne %al;");
    asm("loc_4A705F: pop %ebx;");
    asm("loc_4A7060: add $0x144,%esp;");
    asm("loc_4A7066: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7070() // _sub_4A7070
{
    __DEBUG_ASM(4A7070);
    // chunk 0x4A7070 _sub_4A7070
    asm("loc_4A7070: mov 4(%esp),%eax;");
    asm("loc_4A7074: sub $0xF,%eax;");
    asm("loc_4A7077: je loc_4A7088;");
    asm("loc_4A7079: sub $2,%eax;");
    asm("loc_4A707C: je loc_4A7088;");
    asm("loc_4A707E: sub $3,%eax;");
    asm("loc_4A7081: je loc_4A7088;");
    asm("loc_4A7083: xor %al,%al;");
    asm("loc_4A7085: ret $4;");
    asm("loc_4A7088: push $1;");
    asm("loc_4A708A: add $0xFFFFFCD4,%ecx;");
    asm("loc_4A7090: call _sub_4A7210;");
    asm("loc_4A7095: mov $1,%al;");
    asm("loc_4A7097: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A70A0() // _sub_4A70A0
{
    __DEBUG_ASM(4A70A0);
    // chunk 0x4A70A0 _sub_4A70A0
    asm("loc_4A70A0: cmpl $0x3006,4(%esp);");
    asm("loc_4A70A8: jne loc_4A70C1;");
    asm("loc_4A70AA: mov 0xC(%esp),%edx;");
    asm("loc_4A70AE: mov (%ecx),%eax;");
    asm("loc_4A70B0: push %edx;");
    asm("loc_4A70B1: mov 0xC(%esp),%edx;");
    asm("loc_4A70B5: push %edx;");
    asm("loc_4A70B6: push $0x3006;");
    asm("loc_4A70BB: calll *0xA8(%eax);");
    asm("loc_4A70C1: xor %al,%al;");
    asm("loc_4A70C3: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A70D0() // _sub_4A70D0
{
    __DEBUG_ASM(4A70D0);
    // chunk 0x4A70D0 _sub_4A70D0
    asm("loc_4A70D0: push %edi;");
    asm("loc_4A70D1: mov %ecx,%edi;");
    asm("loc_4A70D3: call _sub_5A17B0;");
    asm("loc_4A70D8: call _sub_41DD90;");
    asm("loc_4A70DD: test %al,%al;");
    asm("loc_4A70DF: jne loc_4A70EB;");
    asm("loc_4A70E1: push $1;");
    asm("loc_4A70E3: call _sub_41DDA0;");
    asm("loc_4A70E8: add $4,%esp;");
    asm("loc_4A70EB: mov 0x331(%edi),%al;");
    asm("loc_4A70F1: test %al,%al;");
    asm("loc_4A70F3: je loc_4A7122;");
    asm("loc_4A70F5: mov 0xC(%edi),%eax;");
    asm("loc_4A70F8: test %eax,%eax;");
    asm("loc_4A70FA: je loc_4A7113;");
    asm("loc_4A70FC: push %esi;");
    asm("loc_4A70FD: lea (%ecx),%ecx;");
    asm("loc_4A7100: mov 8(%eax),%esi;");
    asm("loc_4A7103: push %eax;");
    asm("loc_4A7104: call _sub_43D2A0;");
    asm("loc_4A7109: add $4,%esp;");
    asm("loc_4A710C: test %esi,%esi;");
    asm("loc_4A710E: mov %esi,%eax;");
    asm("loc_4A7110: jne loc_4A7100;");
    asm("loc_4A7112: pop %esi;");
    asm("loc_4A7113: mov (%edi),%eax;");
    asm("loc_4A7115: mov %edi,%ecx;");
    asm("loc_4A7117: calll *0x28(%eax);");
    asm("loc_4A711A: mov (%edi),%edx;");
    asm("loc_4A711C: push $1;");
    asm("loc_4A711E: mov %edi,%ecx;");
    asm("loc_4A7120: calll *(%edx);");
    asm("loc_4A7122: pop %edi;");
    asm("loc_4A7123: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7130() // _sub_4A7130
{
    __DEBUG_ASM(4A7130);
    // chunk 0x4A7130 _sub_4A7130
    asm("loc_4A7130: mov 4(%esp),%eax;");
    asm("loc_4A7134: cmp $0x26,%eax;");
    asm("loc_4A7137: push %esi;");
    asm("loc_4A7138: push %edi;");
    asm("loc_4A7139: mov %ecx,%esi;");
    asm("loc_4A713B: je loc_4A71D0;");
    asm("loc_4A7141: cmp $0x42,%eax;");
    asm("loc_4A7144: je loc_4A719E;");
    asm("loc_4A7146: cmp $0x3006,%eax;");
    asm("loc_4A714B: jne loc_4A7208;");
    asm("loc_4A7151: cmpl $1,0x10(%esp);");
    asm("loc_4A7156: jne loc_4A7208;");
    asm("loc_4A715C: push $0;");
    asm("loc_4A715E: push $0xC5;");
    asm("loc_4A7163: call _sub_5763B0;");
    asm("loc_4A7168: mov 0x330(%esi),%al;");
    asm("loc_4A716E: push $0;");
    asm("loc_4A7170: mov %al,0x1C(%esp);");
    asm("loc_4A7174: call _sub_42D6F0;");
    asm("loc_4A7179: mov 0x1C(%esp),%ecx;");
    asm("loc_4A717D: push %ecx;");
    asm("loc_4A717E: call _sub_41DDA0;");
    asm("loc_4A7183: mov (%esi),%edx;");
    asm("loc_4A7185: add $0x10,%esp;");
    asm("loc_4A7188: mov %esi,%ecx;");
    asm("loc_4A718A: calll *0x84(%edx);");
    asm("loc_4A7190: movb $1,0x331(%esi);");
    asm("loc_4A7197: xor %eax,%eax;");
    asm("loc_4A7199: pop %edi;");
    asm("loc_4A719A: pop %esi;");
    asm("loc_4A719B: ret $0xC;");
    asm("loc_4A719E: mov 0x10(%esp),%ecx;");
    asm("loc_4A71A2: mov (%ecx),%edi;");
    asm("loc_4A71A4: mov (%esi),%eax;");
    asm("loc_4A71A6: sub $0xC,%esp;");
    asm("loc_4A71A9: mov %esp,%edx;");
    asm("loc_4A71AB: mov %edi,(%edx);");
    asm("loc_4A71AD: mov 4(%ecx),%edi;");
    asm("loc_4A71B0: mov 8(%ecx),%ecx;");
    asm("loc_4A71B3: mov %edi,4(%edx);");
    asm("loc_4A71B6: mov %ecx,8(%edx);");
    asm("loc_4A71B9: mov %esi,%ecx;");
    asm("loc_4A71BB: calll *0x7C(%eax);");
    asm("loc_4A71BE: mov (%esi),%edx;");
    asm("loc_4A71C0: lea 0x60(%esi),%eax;");
    asm("loc_4A71C3: push %eax;");
    asm("loc_4A71C4: mov %esi,%ecx;");
    asm("loc_4A71C6: calll *0x14(%edx);");
    asm("loc_4A71C9: xor %eax,%eax;");
    asm("loc_4A71CB: pop %edi;");
    asm("loc_4A71CC: pop %esi;");
    asm("loc_4A71CD: ret $0xC;");
    asm("loc_4A71D0: mov 0x10(%esp),%edx;");
    asm("loc_4A71D4: xor %eax,%eax;");
    asm("loc_4A71D6: lea 0x338(%esi),%ecx;");
    asm("loc_4A71DC: lea (%esp),%esp;");
    asm("loc_4A71E0: cmp (%ecx),%edx;");
    asm("loc_4A71E2: je loc_4A71F4;");
    asm("loc_4A71E4: inc %eax;");
    asm("loc_4A71E5: add $4,%ecx;");
    asm("loc_4A71E8: cmp $5,%eax;");
    asm("loc_4A71EB: jl loc_4A71E0;");
    asm("loc_4A71ED: xor %eax,%eax;");
    asm("loc_4A71EF: pop %edi;");
    asm("loc_4A71F0: pop %esi;");
    asm("loc_4A71F1: ret $0xC;");
    asm("loc_4A71F4: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4A71F7: je loc_4A7208;");
    asm("loc_4A71F9: mov 0x360(%esi,%eax,4),%ecx;");
    asm("loc_4A7200: push %ecx;");
    asm("loc_4A7201: mov %esi,%ecx;");
    asm("loc_4A7203: call _sub_4A7210;");
    asm("loc_4A7208: pop %edi;");
    asm("loc_4A7209: xor %eax,%eax;");
    asm("loc_4A720B: pop %esi;");
    asm("loc_4A720C: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7210() // _sub_4A7210
{
    __DEBUG_ASM(4A7210);
    // chunk 0x4A7210 _sub_4A7210
    asm("loc_4A7210: mov 4(%esp),%eax;");
    asm("loc_4A7214: sub $0x804,%esp;");
    asm("loc_4A721A: test %eax,%eax;");
    asm("loc_4A721C: push %esi;");
    asm("loc_4A721D: push %edi;");
    asm("loc_4A721E: mov %ecx,%esi;");
    asm("loc_4A7220: jne loc_4A727D;");
    asm("loc_4A7222: mov 0x330(%esi),%al;");
    asm("loc_4A7228: push $0;");
    asm("loc_4A722A: mov %al,0xC(%esp);");
    asm("loc_4A722E: call _sub_42D6F0;");
    asm("loc_4A7233: mov 0xC(%esp),%ecx;");
    asm("loc_4A7237: push %ecx;");
    asm("loc_4A7238: call _sub_41DDA0;");
    asm("loc_4A723D: mov (%esi),%edx;");
    asm("loc_4A723F: add $8,%esp;");
    asm("loc_4A7242: mov %esi,%ecx;");
    asm("loc_4A7244: calll *0x84(%edx);");
    asm("loc_4A724A: mov 0xC(%esi),%eax;");
    asm("loc_4A724D: test %eax,%eax;");
    asm("loc_4A724F: je loc_4A7263;");
    asm("loc_4A7251: mov 8(%eax),%edi;");
    asm("loc_4A7254: push %eax;");
    asm("loc_4A7255: call _sub_43D2A0;");
    asm("loc_4A725A: add $4,%esp;");
    asm("loc_4A725D: test %edi,%edi;");
    asm("loc_4A725F: mov %edi,%eax;");
    asm("loc_4A7261: jne loc_4A7251;");
    asm("loc_4A7263: mov (%esi),%eax;");
    asm("loc_4A7265: mov %esi,%ecx;");
    asm("loc_4A7267: calll *0x28(%eax);");
    asm("loc_4A726A: mov (%esi),%edx;");
    asm("loc_4A726C: push $1;");
    asm("loc_4A726E: mov %esi,%ecx;");
    asm("loc_4A7270: calll *(%edx);");
    asm("loc_4A7272: pop %edi;");
    asm("loc_4A7273: pop %esi;");
    asm("loc_4A7274: add $0x804,%esp;");
    asm("loc_4A727A: ret $4;");
    asm("loc_4A727D: cmp $1,%eax;");
    asm("loc_4A7280: jne loc_4A72DD;");
    asm("loc_4A7282: mov 0x330(%esi),%al;");
    asm("loc_4A7288: push $0;");
    asm("loc_4A728A: mov %al,0xC(%esp);");
    asm("loc_4A728E: call _sub_42D6F0;");
    asm("loc_4A7293: mov 0xC(%esp),%ecx;");
    asm("loc_4A7297: push %ecx;");
    asm("loc_4A7298: call _sub_41DDA0;");
    asm("loc_4A729D: mov (%esi),%edx;");
    asm("loc_4A729F: add $8,%esp;");
    asm("loc_4A72A2: mov %esi,%ecx;");
    asm("loc_4A72A4: calll *0x84(%edx);");
    asm("loc_4A72AA: mov 0xC(%esi),%eax;");
    asm("loc_4A72AD: test %eax,%eax;");
    asm("loc_4A72AF: je loc_4A72C3;");
    asm("loc_4A72B1: mov 8(%eax),%edi;");
    asm("loc_4A72B4: push %eax;");
    asm("loc_4A72B5: call _sub_43D2A0;");
    asm("loc_4A72BA: add $4,%esp;");
    asm("loc_4A72BD: test %edi,%edi;");
    asm("loc_4A72BF: mov %edi,%eax;");
    asm("loc_4A72C1: jne loc_4A72B1;");
    asm("loc_4A72C3: mov (%esi),%eax;");
    asm("loc_4A72C5: mov %esi,%ecx;");
    asm("loc_4A72C7: calll *0x28(%eax);");
    asm("loc_4A72CA: mov (%esi),%edx;");
    asm("loc_4A72CC: push $1;");
    asm("loc_4A72CE: mov %esi,%ecx;");
    asm("loc_4A72D0: calll *(%edx);");
    asm("loc_4A72D2: pop %edi;");
    asm("loc_4A72D3: pop %esi;");
    asm("loc_4A72D4: add $0x804,%esp;");
    asm("loc_4A72DA: ret $4;");
    asm("loc_4A72DD: cmp $2,%eax;");
    asm("loc_4A72E0: jne loc_4A7355;");
    asm("loc_4A72E2: push $1;");
    asm("loc_4A72E4: call _sub_42D6F0;");
    asm("loc_4A72E9: mov 0x330(%esi),%al;");
    asm("loc_4A72EF: push $0;");
    asm("loc_4A72F1: mov %al,0x10(%esp);");
    asm("loc_4A72F5: call _sub_42D6F0;");
    asm("loc_4A72FA: mov 0x10(%esp),%ecx;");
    asm("loc_4A72FE: push %ecx;");
    asm("loc_4A72FF: call _sub_41DDA0;");
    asm("loc_4A7304: mov (%esi),%edx;");
    asm("loc_4A7306: add $0xC,%esp;");
    asm("loc_4A7309: mov %esi,%ecx;");
    asm("loc_4A730B: calll *0x84(%edx);");
    asm("loc_4A7311: mov 0xC(%esi),%eax;");
    asm("loc_4A7314: test %eax,%eax;");
    asm("loc_4A7316: je loc_4A732A;");
    asm("loc_4A7318: mov 8(%eax),%edi;");
    asm("loc_4A731B: push %eax;");
    asm("loc_4A731C: call _sub_43D2A0;");
    asm("loc_4A7321: add $4,%esp;");
    asm("loc_4A7324: test %edi,%edi;");
    asm("loc_4A7326: mov %edi,%eax;");
    asm("loc_4A7328: jne loc_4A7318;");
    asm("loc_4A732A: mov (%esi),%eax;");
    asm("loc_4A732C: mov %esi,%ecx;");
    asm("loc_4A732E: calll *0x28(%eax);");
    asm("loc_4A7331: mov (%esi),%edx;");
    asm("loc_4A7333: push $1;");
    asm("loc_4A7335: mov %esi,%ecx;");
    asm("loc_4A7337: calll *(%edx);");
    asm("loc_4A7339: push $2;");
    asm("loc_4A733B: call _sub_488970;");
    asm("loc_4A7340: push $0;");
    asm("loc_4A7342: call _sub_42D6F0;");
    asm("loc_4A7347: add $8,%esp;");
    asm("loc_4A734A: pop %edi;");
    asm("loc_4A734B: pop %esi;");
    asm("loc_4A734C: add $0x804,%esp;");
    asm("loc_4A7352: ret $4;");
    asm("loc_4A7355: cmp $3,%eax;");
    asm("loc_4A7358: jne loc_4A73CD;");
    asm("loc_4A735A: push $1;");
    asm("loc_4A735C: call _sub_42D6F0;");
    asm("loc_4A7361: mov 0x330(%esi),%al;");
    asm("loc_4A7367: push $0;");
    asm("loc_4A7369: mov %al,0x10(%esp);");
    asm("loc_4A736D: call _sub_42D6F0;");
    asm("loc_4A7372: mov 0x10(%esp),%ecx;");
    asm("loc_4A7376: push %ecx;");
    asm("loc_4A7377: call _sub_41DDA0;");
    asm("loc_4A737C: mov (%esi),%edx;");
    asm("loc_4A737E: add $0xC,%esp;");
    asm("loc_4A7381: mov %esi,%ecx;");
    asm("loc_4A7383: calll *0x84(%edx);");
    asm("loc_4A7389: mov 0xC(%esi),%eax;");
    asm("loc_4A738C: test %eax,%eax;");
    asm("loc_4A738E: je loc_4A73A2;");
    asm("loc_4A7390: mov 8(%eax),%edi;");
    asm("loc_4A7393: push %eax;");
    asm("loc_4A7394: call _sub_43D2A0;");
    asm("loc_4A7399: add $4,%esp;");
    asm("loc_4A739C: test %edi,%edi;");
    asm("loc_4A739E: mov %edi,%eax;");
    asm("loc_4A73A0: jne loc_4A7390;");
    asm("loc_4A73A2: mov (%esi),%eax;");
    asm("loc_4A73A4: mov %esi,%ecx;");
    asm("loc_4A73A6: calll *0x28(%eax);");
    asm("loc_4A73A9: mov (%esi),%edx;");
    asm("loc_4A73AB: push $1;");
    asm("loc_4A73AD: mov %esi,%ecx;");
    asm("loc_4A73AF: calll *(%edx);");
    asm("loc_4A73B1: push $1;");
    asm("loc_4A73B3: call _sub_488970;");
    asm("loc_4A73B8: push $0;");
    asm("loc_4A73BA: call _sub_42D6F0;");
    asm("loc_4A73BF: add $8,%esp;");
    asm("loc_4A73C2: pop %edi;");
    asm("loc_4A73C3: pop %esi;");
    asm("loc_4A73C4: add $0x804,%esp;");
    asm("loc_4A73CA: ret $4;");
    asm("loc_4A73CD: cmp $4,%eax;");
    asm("loc_4A73D0: jne loc_4A746A;");
    asm("loc_4A73D6: push $1;");
    asm("loc_4A73D8: call _sub_42D6F0;");
    asm("loc_4A73DD: mov 0x330(%esi),%al;");
    asm("loc_4A73E3: push $0;");
    asm("loc_4A73E5: mov %al,0x10(%esp);");
    asm("loc_4A73E9: call _sub_42D6F0;");
    asm("loc_4A73EE: mov 0x10(%esp),%ecx;");
    asm("loc_4A73F2: push %ecx;");
    asm("loc_4A73F3: call _sub_41DDA0;");
    asm("loc_4A73F8: mov (%esi),%edx;");
    asm("loc_4A73FA: add $0xC,%esp;");
    asm("loc_4A73FD: mov %esi,%ecx;");
    asm("loc_4A73FF: calll *0x84(%edx);");
    asm("loc_4A7405: mov 0xC(%esi),%eax;");
    asm("loc_4A7408: test %eax,%eax;");
    asm("loc_4A740A: je loc_4A7422;");
    asm("loc_4A740C: lea (%esp),%esp;");
    asm("loc_4A7410: mov 8(%eax),%edi;");
    asm("loc_4A7413: push %eax;");
    asm("loc_4A7414: call _sub_43D2A0;");
    asm("loc_4A7419: add $4,%esp;");
    asm("loc_4A741C: test %edi,%edi;");
    asm("loc_4A741E: mov %edi,%eax;");
    asm("loc_4A7420: jne loc_4A7410;");
    asm("loc_4A7422: mov (%esi),%eax;");
    asm("loc_4A7424: mov %esi,%ecx;");
    asm("loc_4A7426: calll *0x28(%eax);");
    asm("loc_4A7429: mov (%esi),%edx;");
    asm("loc_4A742B: push $1;");
    asm("loc_4A742D: mov %esi,%ecx;");
    asm("loc_4A742F: calll *(%edx);");
    asm("loc_4A7431: push $0;");
    asm("loc_4A7433: push $0;");
    asm("loc_4A7435: push $_data_5D4764;");
    asm("loc_4A743A: push $_data_5D4764;");
    asm("loc_4A743F: call _sub_59DB20;");
    asm("loc_4A7444: add $0x10,%esp;");
    asm("loc_4A7447: test %eax,%eax;");
    asm("loc_4A7449: je loc_4A7455;");
    asm("loc_4A744B: mov (%eax),%edx;");
    asm("loc_4A744D: mov %eax,%ecx;");
    asm("loc_4A744F: calll *0x80(%edx);");
    asm("loc_4A7455: push $0;");
    asm("loc_4A7457: call _sub_42D6F0;");
    asm("loc_4A745C: add $4,%esp;");
    asm("loc_4A745F: pop %edi;");
    asm("loc_4A7460: pop %esi;");
    asm("loc_4A7461: add $0x804,%esp;");
    asm("loc_4A7467: ret $4;");
    asm("loc_4A746A: cmp $5,%eax;");
    asm("loc_4A746D: jne loc_4A74A5;");
    asm("loc_4A746F: mov _data_67ECA8,%ecx;");
    asm("loc_4A7475: push $0x400;");
    asm("loc_4A747A: lea 0x10(%esp),%eax;");
    asm("loc_4A747E: push %eax;");
    asm("loc_4A747F: push $0x75B;");
    asm("loc_4A7484: push %ecx;");
    asm("loc_4A7485: call _sub_4347E0;");
    asm("loc_4A748A: push $0;");
    asm("loc_4A748C: lea 0x20(%esp),%edx;");
    asm("loc_4A7490: push %edx;");
    asm("loc_4A7491: push %esi;");
    asm("loc_4A7492: call _sub_4889E0;");
    asm("loc_4A7497: add $0x1C,%esp;");
    asm("loc_4A749A: pop %edi;");
    asm("loc_4A749B: pop %esi;");
    asm("loc_4A749C: add $0x804,%esp;");
    asm("loc_4A74A2: ret $4;");
    asm("loc_4A74A5: cmp $6,%eax;");
    asm("loc_4A74A8: jne loc_4A751C;");
    asm("loc_4A74AA: push $2;");
    asm("loc_4A74AC: call _sub_564B10;");
    asm("loc_4A74B1: push $0;");
    asm("loc_4A74B3: push $0xC5;");
    asm("loc_4A74B8: call _sub_5763B0;");
    asm("loc_4A74BD: mov 0x330(%esi),%al;");
    asm("loc_4A74C3: push $0;");
    asm("loc_4A74C5: mov %al,0x18(%esp);");
    asm("loc_4A74C9: call _sub_42D6F0;");
    asm("loc_4A74CE: mov 0x18(%esp),%ecx;");
    asm("loc_4A74D2: push %ecx;");
    asm("loc_4A74D3: call _sub_41DDA0;");
    asm("loc_4A74D8: mov (%esi),%edx;");
    asm("loc_4A74DA: add $0x14,%esp;");
    asm("loc_4A74DD: mov %esi,%ecx;");
    asm("loc_4A74DF: calll *0x84(%edx);");
    asm("loc_4A74E5: mov 0xC(%esi),%eax;");
    asm("loc_4A74E8: test %eax,%eax;");
    asm("loc_4A74EA: je loc_4A7502;");
    asm("loc_4A74EC: lea (%esp),%esp;");
    asm("loc_4A74F0: mov 8(%eax),%edi;");
    asm("loc_4A74F3: push %eax;");
    asm("loc_4A74F4: call _sub_43D2A0;");
    asm("loc_4A74F9: add $4,%esp;");
    asm("loc_4A74FC: test %edi,%edi;");
    asm("loc_4A74FE: mov %edi,%eax;");
    asm("loc_4A7500: jne loc_4A74F0;");
    asm("loc_4A7502: mov (%esi),%eax;");
    asm("loc_4A7504: mov %esi,%ecx;");
    asm("loc_4A7506: calll *0x28(%eax);");
    asm("loc_4A7509: mov (%esi),%edx;");
    asm("loc_4A750B: push $1;");
    asm("loc_4A750D: mov %esi,%ecx;");
    asm("loc_4A750F: calll *(%edx);");
    asm("loc_4A7511: pop %edi;");
    asm("loc_4A7512: pop %esi;");
    asm("loc_4A7513: add $0x804,%esp;");
    asm("loc_4A7519: ret $4;");
    asm("loc_4A751C: cmp $7,%eax;");
    asm("loc_4A751F: jne loc_4A7553;");
    asm("loc_4A7521: push $3;");
    asm("loc_4A7523: call _sub_564B10;");
    asm("loc_4A7528: mov _data_67ECA8,%ecx;");
    asm("loc_4A752E: push $0x400;");
    asm("loc_4A7533: lea 0x14(%esp),%eax;");
    asm("loc_4A7537: push %eax;");
    asm("loc_4A7538: push $0x76B;");
    asm("loc_4A753D: push %ecx;");
    asm("loc_4A753E: call _sub_4347E0;");
    asm("loc_4A7543: push $0;");
    asm("loc_4A7545: lea 0x24(%esp),%edx;");
    asm("loc_4A7549: push %edx;");
    asm("loc_4A754A: push %esi;");
    asm("loc_4A754B: call _sub_4889E0;");
    asm("loc_4A7550: add $0x20,%esp;");
    asm("loc_4A7553: pop %edi;");
    asm("loc_4A7554: pop %esi;");
    asm("loc_4A7555: add $0x804,%esp;");
    asm("loc_4A755B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7560() // _sub_4A7560
{
    __DEBUG_ASM(4A7560);
    // chunk 0x4A7560 _sub_4A7560
    asm("loc_4A7560: push %ecx;");
    asm("loc_4A7561: push %edi;");
    asm("loc_4A7562: mov %ecx,%edi;");
    asm("loc_4A7564: mov 0x330(%edi),%al;");
    asm("loc_4A756A: push $0;");
    asm("loc_4A756C: mov %al,8(%esp);");
    asm("loc_4A7570: call _sub_42D6F0;");
    asm("loc_4A7575: mov 8(%esp),%ecx;");
    asm("loc_4A7579: push %ecx;");
    asm("loc_4A757A: call _sub_41DDA0;");
    asm("loc_4A757F: mov (%edi),%edx;");
    asm("loc_4A7581: add $8,%esp;");
    asm("loc_4A7584: mov %edi,%ecx;");
    asm("loc_4A7586: calll *0x84(%edx);");
    asm("loc_4A758C: mov 0xC(%edi),%eax;");
    asm("loc_4A758F: test %eax,%eax;");
    asm("loc_4A7591: je loc_4A75A7;");
    asm("loc_4A7593: push %esi;");
    asm("loc_4A7594: mov 8(%eax),%esi;");
    asm("loc_4A7597: push %eax;");
    asm("loc_4A7598: call _sub_43D2A0;");
    asm("loc_4A759D: add $4,%esp;");
    asm("loc_4A75A0: test %esi,%esi;");
    asm("loc_4A75A2: mov %esi,%eax;");
    asm("loc_4A75A4: jne loc_4A7594;");
    asm("loc_4A75A6: pop %esi;");
    asm("loc_4A75A7: mov (%edi),%eax;");
    asm("loc_4A75A9: mov %edi,%ecx;");
    asm("loc_4A75AB: calll *0x28(%eax);");
    asm("loc_4A75AE: mov (%edi),%edx;");
    asm("loc_4A75B0: push $1;");
    asm("loc_4A75B2: mov %edi,%ecx;");
    asm("loc_4A75B4: calll *(%edx);");
    asm("loc_4A75B6: pop %edi;");
    asm("loc_4A75B7: pop %ecx;");
    asm("loc_4A75B8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A75C0() // _sub_4A75C0
{
    __DEBUG_ASM(4A75C0);
    // chunk 0x4A75C0 _sub_4A75C0
    asm("loc_4A75C0: mov _data_67DCC8,%al;");
    asm("loc_4A75C5: sub $0xC,%esp;");
    asm("loc_4A75C8: test %al,%al;");
    asm("loc_4A75CA: push %esi;");
    asm("loc_4A75CB: jne loc_4A7662;");
    asm("loc_4A75D1: call _sub_42D730;");
    asm("loc_4A75D6: test %al,%al;");
    asm("loc_4A75D8: jne loc_4A7662;");
    asm("loc_4A75DE: mov _data_668761,%al;");
    asm("loc_4A75E3: test %al,%al;");
    asm("loc_4A75E5: jne loc_4A7662;");
    asm("loc_4A75E7: call _sub_41DD90;");
    asm("loc_4A75EC: test %al,%al;");
    asm("loc_4A75EE: je loc_4A7602;");
    asm("loc_4A75F0: call _sub_4C4810;");
    asm("loc_4A75F5: test %al,%al;");
    asm("loc_4A75F7: jne loc_4A7602;");
    asm("loc_4A75F9: call _sub_54BAF0;");
    asm("loc_4A75FE: test %eax,%eax;");
    asm("loc_4A7600: je loc_4A7662;");
    asm("loc_4A7602: push $_data_5D04D4;");
    asm("loc_4A7607: call _sub_59D9C0;");
    asm("loc_4A760C: add $4,%esp;");
    asm("loc_4A760F: test %eax,%eax;");
    asm("loc_4A7611: jne loc_4A7662;");
    asm("loc_4A7613: push %eax;");
    asm("loc_4A7614: push %eax;");
    asm("loc_4A7615: push $_data_5D04D4;");
    asm("loc_4A761A: push $_data_5D04D4;");
    asm("loc_4A761F: call _sub_59DB20;");
    asm("loc_4A7624: mov %eax,%esi;");
    asm("loc_4A7626: add $0x10,%esp;");
    asm("loc_4A7629: test %esi,%esi;");
    asm("loc_4A762B: je loc_4A7662;");
    asm("loc_4A762D: mov (%esi),%eax;");
    asm("loc_4A762F: push $0;");
    asm("loc_4A7631: lea 8(%esp),%ecx;");
    asm("loc_4A7635: push %ecx;");
    asm("loc_4A7636: push $0x42;");
    asm("loc_4A7638: mov %esi,%ecx;");
    asm("loc_4A763A: movl $0,0x10(%esp);");
    asm("loc_4A7642: movl $0,0x14(%esp);");
    asm("loc_4A764A: movl $0,0x18(%esp);");
    asm("loc_4A7652: calll *0xA8(%eax);");
    asm("loc_4A7658: mov (%esi),%edx;");
    asm("loc_4A765A: mov %esi,%ecx;");
    asm("loc_4A765C: calll *0x80(%edx);");
    asm("loc_4A7662: pop %esi;");
    asm("loc_4A7663: add $0xC,%esp;");
    asm("loc_4A7666: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7670() // _sub_4A7670
{
    __DEBUG_ASM(4A7670);
    // chunk 0x4A7670 _sub_4A7670
    asm("loc_4A7670: push %ebx;");
    asm("loc_4A7671: push $1;");
    asm("loc_4A7673: call _sub_42D6F0;");
    asm("loc_4A7678: call _sub_41DD90;");
    asm("loc_4A767D: push $1;");
    asm("loc_4A767F: mov %al,%bl;");
    asm("loc_4A7681: call _sub_41DDA0;");
    asm("loc_4A7686: add $8,%esp;");
    asm("loc_4A7689: mov %bl,%al;");
    asm("loc_4A768B: pop %ebx;");
    asm("loc_4A768C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7690() // _sub_4A7690
{
    __DEBUG_ASM(4A7690);
    // chunk 0x4A7690 _sub_4A7690
    asm("loc_4A7690: push $0;");
    asm("loc_4A7692: call _sub_42D6F0;");
    asm("loc_4A7697: mov 8(%esp),%eax;");
    asm("loc_4A769B: add $4,%esp;");
    asm("loc_4A769E: mov %eax,4(%esp);");
    asm("loc_4A76A2: jmp _sub_41DDA0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A76B0() // _sub_4A76B0
{
    __DEBUG_ASM(4A76B0);
    // chunk 0x4A76B0 _sub_4A76B0
    asm("loc_4A76B0: push %ebx;");
    asm("loc_4A76B1: mov %ecx,%ebx;");
    asm("loc_4A76B3: xor %eax,%eax;");
    asm("loc_4A76B5: push %esi;");
    asm("loc_4A76B6: mov 0xC(%esp),%esi;");
    asm("loc_4A76BA: cmp %eax,%esi;");
    asm("loc_4A76BC: mov %eax,8(%ebx);");
    asm("loc_4A76BF: mov %al,0xC(%ebx);");
    asm("loc_4A76C2: movl $_off_5CB554,(%ebx);");
    asm("loc_4A76C8: mov %eax,4(%ebx);");
    asm("loc_4A76CB: jne loc_4A76D2;");
    asm("loc_4A76CD: mov %al,0xC(%ebx);");
    asm("loc_4A76D0: jmp loc_4A7707;");
    asm("loc_4A76D2: push %ebp;");
    asm("loc_4A76D3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A76D6: xor %eax,%eax;");
    asm("loc_4A76D8: push %edi;");
    asm("loc_4A76D9: mov %esi,%edi;");
    asm("loc_4A76DB: repne scas (%edi),%al;");
    asm("loc_4A76DD: not %ecx;");
    asm("loc_4A76DF: dec %ecx;");
    asm("loc_4A76E0: mov %ecx,%eax;");
    asm("loc_4A76E2: cmp $0x20,%eax;");
    asm("loc_4A76E5: lea 0xC(%ebx),%ebp;");
    asm("loc_4A76E8: jb loc_4A76EF;");
    asm("loc_4A76EA: mov $0x1F,%eax;");
    asm("loc_4A76EF: mov %eax,%ecx;");
    asm("loc_4A76F1: mov %ecx,%edx;");
    asm("loc_4A76F3: shr $2,%ecx;");
    asm("loc_4A76F6: mov %ebp,%edi;");
    asm("loc_4A76F8: rep movsl (%esi),(%edi);");
    asm("loc_4A76FA: mov %edx,%ecx;");
    asm("loc_4A76FC: and $3,%ecx;");
    asm("loc_4A76FF: rep movsb (%esi),(%edi);");
    asm("loc_4A7701: pop %edi;");
    asm("loc_4A7702: movb $0,(%eax,%ebp);");
    asm("loc_4A7706: pop %ebp;");
    asm("loc_4A7707: push %ebx;");
    asm("loc_4A7708: mov %eax,8(%ebx);");
    asm("loc_4A770B: call _sub_59DAB0;");
    asm("loc_4A7710: add $4,%esp;");
    asm("loc_4A7713: pop %esi;");
    asm("loc_4A7714: movl $_off_5D4778,(%ebx);");
    asm("loc_4A771A: mov %ebx,%eax;");
    asm("loc_4A771C: pop %ebx;");
    asm("loc_4A771D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7720() // _sub_4A7720
{
    __DEBUG_ASM(4A7720);
    // chunk 0x4A7720 _sub_4A7720
    asm("loc_4A7720: push $0xFFFFFFFF;");
    asm("loc_4A7722: push $_sub_5BCD0B;");
    asm("loc_4A7727: mov %fs:0,%eax;");
    asm("loc_4A772D: push %eax;");
    asm("loc_4A772E: mov %esp,%fs:0;");
    asm("loc_4A7735: push %ecx;");
    asm("loc_4A7736: push %esi;");
    asm("loc_4A7737: push %edi;");
    asm("loc_4A7738: push $0x374;");
    asm("loc_4A773D: mov %ecx,%edi;");
    asm("loc_4A773F: call _sub_5B7E84;");
    asm("loc_4A7744: mov %eax,%esi;");
    asm("loc_4A7746: add $4,%esp;");
    asm("loc_4A7749: mov %esi,8(%esp);");
    asm("loc_4A774D: test %esi,%esi;");
    asm("loc_4A774F: movl $0,0x14(%esp);");
    asm("loc_4A7757: je loc_4A778A;");
    asm("loc_4A7759: mov %esi,%ecx;");
    asm("loc_4A775B: call _sub_59F860;");
    asm("loc_4A7760: movl $_off_5CBED8,0x32C(%esi);");
    asm("loc_4A776A: movl $_off_5D462C,(%esi);");
    asm("loc_4A7770: movl $_off_5D461C,0x7C(%esi);");
    asm("loc_4A7777: movl $_off_5D4614,0x32C(%esi);");
    asm("loc_4A7781: movb $0,0x331(%esi);");
    asm("loc_4A7788: jmp loc_4A778C;");
    asm("loc_4A778A: xor %esi,%esi;");
    asm("loc_4A778C: mov 0x20(%esp),%ecx;");
    asm("loc_4A7790: mov 0x1C(%esp),%edx;");
    asm("loc_4A7794: mov (%esi),%eax;");
    asm("loc_4A7796: push %ecx;");
    asm("loc_4A7797: add $0xC,%edi;");
    asm("loc_4A779A: push %edx;");
    asm("loc_4A779B: mov %esi,%ecx;");
    asm("loc_4A779D: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4A77A5: mov %edi,0x10(%esi);");
    asm("loc_4A77A8: calll *0x24(%eax);");
    asm("loc_4A77AB: test %al,%al;");
    asm("loc_4A77AD: jne loc_4A77CC;");
    asm("loc_4A77AF: mov (%esi),%eax;");
    asm("loc_4A77B1: push $1;");
    asm("loc_4A77B3: mov %esi,%ecx;");
    asm("loc_4A77B5: calll *(%eax);");
    asm("loc_4A77B7: pop %edi;");
    asm("loc_4A77B8: xor %eax,%eax;");
    asm("loc_4A77BA: pop %esi;");
    asm("loc_4A77BB: mov 4(%esp),%ecx;");
    asm("loc_4A77BF: mov %ecx,%fs:0;");
    asm("loc_4A77C6: add $0x10,%esp;");
    asm("loc_4A77C9: ret $8;");
    asm("loc_4A77CC: mov 0xC(%esp),%ecx;");
    asm("loc_4A77D0: pop %edi;");
    asm("loc_4A77D1: mov %esi,%eax;");
    asm("loc_4A77D3: pop %esi;");
    asm("loc_4A77D4: mov %ecx,%fs:0;");
    asm("loc_4A77DB: add $0x10,%esp;");
    asm("loc_4A77DE: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A77F0() // _sub_4A77F0
{
    __DEBUG_ASM(4A77F0);
    // chunk 0x4A77F0 _sub_4A77F0
    asm("loc_4A77F0: mov _data_5D477C,%eax;");
    asm("loc_4A77F5: mov %eax,_data_6721B4;");
    asm("loc_4A77FA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7800() // _sub_4A7800
{
    __DEBUG_ASM(4A7800);
    // chunk 0x4A7800 _sub_4A7800
    asm("loc_4A7800: mov _data_5D477C,%eax;");
    asm("loc_4A7805: mov %eax,_data_6721B0;");
    asm("loc_4A780A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7810() // _sub_4A7810
{
    __DEBUG_ASM(4A7810);
    // chunk 0x4A7810 _sub_4A7810
    asm("loc_4A7810: mov _data_5D4780,%eax;");
    asm("loc_4A7815: mov %eax,_data_6721AC;");
    asm("loc_4A781A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7820() // _sub_4A7820
{
    __DEBUG_ASM(4A7820);
    // chunk 0x4A7820 _sub_4A7820
    asm("loc_4A7820: push $_data_5CEDB4;");
    asm("loc_4A7825: mov $_data_672180,%ecx;");
    asm("loc_4A782A: call _sub_4A9090;");
    asm("loc_4A782F: push $_sub_4A7840;");
    asm("loc_4A7834: call _sub_5B7E6C;");
    asm("loc_4A7839: pop %ecx;");
    asm("loc_4A783A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7840() // _sub_4A7840
{
    __DEBUG_ASM(4A7840);
    // chunk 0x4A7840 _sub_4A7840
    asm("loc_4A7840: mov $_data_672180,%ecx;");
    asm("loc_4A7845: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7850() // _sub_4A7850
{
    __DEBUG_ASM(4A7850);
    // chunk 0x4A7850 _sub_4A7850
    asm("loc_4A7850: push %esi;");
    asm("loc_4A7851: mov %ecx,%esi;");
    asm("loc_4A7853: call _sub_4A7870;");
    asm("loc_4A7858: testb $1,8(%esp);");
    asm("loc_4A785D: je loc_4A7868;");
    asm("loc_4A785F: push %esi;");
    asm("loc_4A7860: call _sub_5B7E1D;");
    asm("loc_4A7865: add $4,%esp;");
    asm("loc_4A7868: mov %esi,%eax;");
    asm("loc_4A786A: pop %esi;");
    asm("loc_4A786B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A7870() // _sub_4A7870
{
    __DEBUG_ASM(4A7870);
    // chunk 0x4A7870 _sub_4A7870
    asm("loc_4A7870: push %esi;");
    asm("loc_4A7871: mov %ecx,%esi;");
    asm("loc_4A7873: push %edi;");
    asm("loc_4A7874: movl $_off_5D4794,(%esi);");
    asm("loc_4A787A: movl $_off_5D4788,0x7C(%esi);");
    asm("loc_4A7881: xor %edi,%edi;");
    asm("loc_4A7883: mov %edi,_data_6721BC;");
    asm("loc_4A7889: mov 0x410(%esi),%eax;");
    asm("loc_4A788F: push %eax;");
    asm("loc_4A7890: call _sub_5B7E1D;");
    asm("loc_4A7895: add $4,%esp;");
    asm("loc_4A7898: mov %edi,0x410(%esi);");
    asm("loc_4A789E: mov %edi,0x414(%esi);");
    asm("loc_4A78A4: mov %edi,0x418(%esi);");
    asm("loc_4A78AA: pop %edi;");
    asm("loc_4A78AB: mov %esi,%ecx;");
    asm("loc_4A78AD: pop %esi;");
    asm("loc_4A78AE: jmp _sub_59FA50;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A78C0() // _sub_4A78C0
{
    __DEBUG_ASM(4A78C0);
    // chunk 0x4A78C0 _sub_4A78C0
    asm("loc_4A78C0: sub $0x1C0,%esp;");
    asm("loc_4A78C6: push %ebx;");
    asm("loc_4A78C7: push %ebp;");
    asm("loc_4A78C8: push %esi;");
    asm("loc_4A78C9: push %edi;");
    asm("loc_4A78CA: mov %ecx,%esi;");
    asm("loc_4A78CC: mov (%esi),%eax;");
    asm("loc_4A78CE: push $0;");
    asm("loc_4A78D0: push $_data_5CE994;");
    asm("loc_4A78D5: calll *0x98(%eax);");
    asm("loc_4A78DB: lea 0x80(%esi),%ecx;");
    asm("loc_4A78E1: push %ecx;");
    asm("loc_4A78E2: lea 0xB4(%esi),%ecx;");
    asm("loc_4A78E8: call _sub_5A1340;");
    asm("loc_4A78ED: push $0;");
    asm("loc_4A78EF: push $0;");
    asm("loc_4A78F1: push $0x409;");
    asm("loc_4A78F6: push $0;");
    asm("loc_4A78F8: push $0;");
    asm("loc_4A78FA: push $0;");
    asm("loc_4A78FC: push $0;");
    asm("loc_4A78FE: lea 0x44(%esp),%edx;");
    asm("loc_4A7902: push %edx;");
    asm("loc_4A7903: push $0;");
    asm("loc_4A7905: lea 0x38(%esp),%eax;");
    asm("loc_4A7909: push %eax;");
    asm("loc_4A790A: push $0;");
    asm("loc_4A790C: push $_data_5CED30;");
    asm("loc_4A7911: push $0;");
    asm("loc_4A7913: push $_data_5D01D0;");
    asm("loc_4A7918: push $_data_5D0A30;");
    asm("loc_4A791D: mov %esi,%ecx;");
    asm("loc_4A791F: movl $0x3C9374BC,0x64(%esp);");
    asm("loc_4A7927: movl $0x3C9374BC,0x68(%esp);");
    asm("loc_4A792F: movl $0,0x6C(%esp);");
    asm("loc_4A7937: movl $0x3ECF5C29,0x50(%esp);");
    asm("loc_4A793F: movl $0x3E74BC6A,0x54(%esp);");
    asm("loc_4A7947: movl $0,0x58(%esp);");
    asm("loc_4A794F: call _sub_5A0C90;");
    asm("loc_4A7954: push $1;");
    asm("loc_4A7956: push $0;");
    asm("loc_4A7958: push $1;");
    asm("loc_4A795A: push $0x3A3;");
    asm("loc_4A795F: push $0x3FD33333;");
    asm("loc_4A7964: push $0x3CF5C28F;");
    asm("loc_4A7969: push $0x3F56C8B4;");
    asm("loc_4A796E: push $0;");
    asm("loc_4A7970: lea 0x34(%esp),%ecx;");
    asm("loc_4A7974: push %ecx;");
    asm("loc_4A7975: push $_data_5CE91C;");
    asm("loc_4A797A: push $_data_5D499C;");
    asm("loc_4A797F: mov %esi,%ecx;");
    asm("loc_4A7981: mov %eax,0x32C(%esi);");
    asm("loc_4A7987: movl $0xBED60419,0x40(%esp);");
    asm("loc_4A798F: movl $0x3E839581,0x44(%esp);");
    asm("loc_4A7997: movl $0,0x48(%esp);");
    asm("loc_4A799F: call _sub_5A0E30;");
    asm("loc_4A79A4: push $1;");
    asm("loc_4A79A6: push $0;");
    asm("loc_4A79A8: push $1;");
    asm("loc_4A79AA: push $0x632;");
    asm("loc_4A79AF: push $0x3FD33333;");
    asm("loc_4A79B4: push $0x3CF5C28F;");
    asm("loc_4A79B9: push $0x3EB33333;");
    asm("loc_4A79BE: push $0;");
    asm("loc_4A79C0: lea 0x34(%esp),%edx;");
    asm("loc_4A79C4: push %edx;");
    asm("loc_4A79C5: push $_data_5D01A8;");
    asm("loc_4A79CA: push $_data_5D0A20;");
    asm("loc_4A79CF: mov %esi,%ecx;");
    asm("loc_4A79D1: movl $0xBECF5C29,0x40(%esp);");
    asm("loc_4A79D9: movl $0x3E570A3D,0x44(%esp);");
    asm("loc_4A79E1: movl $0,0x48(%esp);");
    asm("loc_4A79E9: call _sub_5A0E30;");
    asm("loc_4A79EE: push $1;");
    asm("loc_4A79F0: push $0;");
    asm("loc_4A79F2: push $1;");
    asm("loc_4A79F4: push $0x640;");
    asm("loc_4A79F9: movl $0x3C1374BC,0x24(%esp);");
    asm("loc_4A7A01: movl $0x3E570A3D,0x28(%esp);");
    asm("loc_4A7A09: movl $0,0x2C(%esp);");
    asm("loc_4A7A11: push $0x3FD33333;");
    asm("loc_4A7A16: push $0x3CF5C28F;");
    asm("loc_4A7A1B: push $0x3EB5C28F;");
    asm("loc_4A7A20: push $0;");
    asm("loc_4A7A22: lea 0x34(%esp),%eax;");
    asm("loc_4A7A26: push %eax;");
    asm("loc_4A7A27: push $_data_5D01A8;");
    asm("loc_4A7A2C: push $_data_5D4988;");
    asm("loc_4A7A31: mov %esi,%ecx;");
    asm("loc_4A7A33: call _sub_5A0E30;");
    asm("loc_4A7A38: push $1;");
    asm("loc_4A7A3A: lea 0x18(%esp),%ecx;");
    asm("loc_4A7A3E: push %ecx;");
    asm("loc_4A7A3F: push $0x3EAE147B;");
    asm("loc_4A7A44: push $0x3EC49BA6;");
    asm("loc_4A7A49: push $_data_5D4978;");
    asm("loc_4A7A4E: mov %esi,%ecx;");
    asm("loc_4A7A50: mov %eax,0x330(%esi);");
    asm("loc_4A7A56: movl $0x3C23D70A,0x28(%esp);");
    asm("loc_4A7A5E: movl $0x3E3020C5,0x2C(%esp);");
    asm("loc_4A7A66: movl $0,0x30(%esp);");
    asm("loc_4A7A6E: call _sub_5A10E0;");
    asm("loc_4A7A73: push $0;");
    asm("loc_4A7A75: push $0;");
    asm("loc_4A7A77: push $0x32B;");
    asm("loc_4A7A7C: mov %eax,0x400(%esi);");
    asm("loc_4A7A82: mov 0x6C(%eax),%cl;");
    asm("loc_4A7A85: push $0;");
    asm("loc_4A7A87: push $0;");
    asm("loc_4A7A89: and $0xFD,%cl;");
    asm("loc_4A7A8C: mov %cl,0x6C(%eax);");
    asm("loc_4A7A8F: lea 0x28(%esp),%edx;");
    asm("loc_4A7A93: push %edx;");
    asm("loc_4A7A94: lea 0x40(%esp),%eax;");
    asm("loc_4A7A98: push %eax;");
    asm("loc_4A7A99: push $_data_5CED30;");
    asm("loc_4A7A9E: push $_data_5D30C0;");
    asm("loc_4A7AA3: mov %esi,%ecx;");
    asm("loc_4A7AA5: movl $0x3E083127,0x38(%esp);");
    asm("loc_4A7AAD: movl $0x3CD4FDF4,0x3C(%esp);");
    asm("loc_4A7AB5: movl $0,0x40(%esp);");
    asm("loc_4A7ABD: movl $0x3E4CCCCD,0x4C(%esp);");
    asm("loc_4A7AC5: movl $0xBE570A3D,0x50(%esp);");
    asm("loc_4A7ACD: movl $0,0x54(%esp);");
    asm("loc_4A7AD5: call _sub_5A0D00;");
    asm("loc_4A7ADA: push $1;");
    asm("loc_4A7ADC: push $0;");
    asm("loc_4A7ADE: push $1;");
    asm("loc_4A7AE0: push $0x3A1;");
    asm("loc_4A7AE5: push $0x3FF33333;");
    asm("loc_4A7AEA: push $0x3CF5C28F;");
    asm("loc_4A7AEF: push $0x3E8624DD;");
    asm("loc_4A7AF4: push $0;");
    asm("loc_4A7AF6: lea 0x34(%esp),%ecx;");
    asm("loc_4A7AFA: push %ecx;");
    asm("loc_4A7AFB: push $_data_5D0410;");
    asm("loc_4A7B00: push $_data_5D30A8;");
    asm("loc_4A7B05: mov %esi,%ecx;");
    asm("loc_4A7B07: mov %eax,0x404(%esi);");
    asm("loc_4A7B0D: movl $0x3D8F5C29,0x40(%esp);");
    asm("loc_4A7B15: movl $0xBE428F5C,0x44(%esp);");
    asm("loc_4A7B1D: movl $0,0x48(%esp);");
    asm("loc_4A7B25: call _sub_5A0E30;");
    asm("loc_4A7B2A: mov _import_5C71EC,%ebx;");
    asm("loc_4A7B30: mov %eax,0x408(%esi);");
    asm("loc_4A7B36: mov 0x404(%esi),%eax;");
    asm("loc_4A7B3C: andb $0xFC,0x6C(%eax);");
    asm("loc_4A7B40: mov 0x408(%esi),%eax;");
    asm("loc_4A7B46: mov 0x6C(%eax),%cl;");
    asm("loc_4A7B49: and $0xFC,%cl;");
    asm("loc_4A7B4C: xor %edi,%edi;");
    asm("loc_4A7B4E: mov %cl,0x6C(%eax);");
    asm("loc_4A7B51: mov %edi,0x20(%esp);");
    asm("loc_4A7B55: lea 0x34C(%esi),%ebp;");
    asm("loc_4A7B5B: nop;");
    asm("loc_4A7B5C: lea (%esp),%esp;");
    asm("loc_4A7B60: push %edi;");
    asm("loc_4A7B61: lea 0xD4(%esp),%edx;");
    asm("loc_4A7B68: push $_data_5D495C;");
    asm("loc_4A7B6D: push %edx;");
    asm("loc_4A7B6E: call *%ebx;");
    asm("loc_4A7B70: fildl 0x2C(%esp);");
    asm("loc_4A7B74: add $0xC,%esp;");
    asm("loc_4A7B77: push $0;");
    asm("loc_4A7B79: fmuls _data_5D4958;");
    asm("loc_4A7B7F: push $0;");
    asm("loc_4A7B81: push $0;");
    asm("loc_4A7B83: push $0;");
    asm("loc_4A7B85: fsubrs _data_5D4954;");
    asm("loc_4A7B8B: push $0;");
    asm("loc_4A7B8D: lea 0x28(%esp),%eax;");
    asm("loc_4A7B91: push %eax;");
    asm("loc_4A7B92: lea 0x40(%esp),%ecx;");
    asm("loc_4A7B96: fsts 0x3C(%esp);");
    asm("loc_4A7B9A: fadds _data_5D2C10;");
    asm("loc_4A7BA0: push %ecx;");
    asm("loc_4A7BA1: push $_data_5D1528;");
    asm("loc_4A7BA6: lea 0xF0(%esp),%edx;");
    asm("loc_4A7BAD: push %edx;");
    asm("loc_4A7BAE: fstps 0x50(%esp);");
    asm("loc_4A7BB2: mov %esi,%ecx;");
    asm("loc_4A7BB4: movl $0x3E3126E9,0x38(%esp);");
    asm("loc_4A7BBC: movl $0x3D0B4396,0x3C(%esp);");
    asm("loc_4A7BC4: movl $0,0x40(%esp);");
    asm("loc_4A7BCC: movl $0xBE6C8B44,0x4C(%esp);");
    asm("loc_4A7BD4: movl $0,0x54(%esp);");
    asm("loc_4A7BDC: call _sub_5A0D00;");
    asm("loc_4A7BE1: push %edi;");
    asm("loc_4A7BE2: mov %eax,-0x18(%ebp);");
    asm("loc_4A7BE5: lea 0xD4(%esp),%eax;");
    asm("loc_4A7BEC: push $_data_5D493C;");
    asm("loc_4A7BF1: push %eax;");
    asm("loc_4A7BF2: call *%ebx;");
    asm("loc_4A7BF4: flds 0x30(%esp);");
    asm("loc_4A7BF8: fadds _data_5D4938;");
    asm("loc_4A7BFE: add $0xC,%esp;");
    asm("loc_4A7C01: push $0;");
    asm("loc_4A7C03: push $0;");
    asm("loc_4A7C05: push $1;");
    asm("loc_4A7C07: fstps 0x64(%esp);");
    asm("loc_4A7C0B: push $0;");
    asm("loc_4A7C0D: push $0x3FC00000;");
    asm("loc_4A7C12: push $0x3D23D70A;");
    asm("loc_4A7C17: push $0x3EB74BC7;");
    asm("loc_4A7C1C: push $0;");
    asm("loc_4A7C1E: lea 0x74(%esp),%ecx;");
    asm("loc_4A7C22: push %ecx;");
    asm("loc_4A7C23: push $_data_5D010C;");
    asm("loc_4A7C28: lea 0xF8(%esp),%edx;");
    asm("loc_4A7C2F: push %edx;");
    asm("loc_4A7C30: mov %esi,%ecx;");
    asm("loc_4A7C32: movl $0xBE666667,0x80(%esp);");
    asm("loc_4A7C3D: movl $0,0x88(%esp);");
    asm("loc_4A7C48: call _sub_5A0E30;");
    asm("loc_4A7C4D: push %edi;");
    asm("loc_4A7C4E: mov %eax,(%ebp);");
    asm("loc_4A7C51: lea 0xD4(%esp),%eax;");
    asm("loc_4A7C58: push $_data_5D491C;");
    asm("loc_4A7C5D: push %eax;");
    asm("loc_4A7C5E: call *%ebx;");
    asm("loc_4A7C60: flds 0x30(%esp);");
    asm("loc_4A7C64: fadds _data_5D4918;");
    asm("loc_4A7C6A: add $0xC,%esp;");
    asm("loc_4A7C6D: lea 0x60(%esp),%ecx;");
    asm("loc_4A7C71: push %ecx;");
    asm("loc_4A7C72: push $0;");
    asm("loc_4A7C74: fsts 0x28(%esp);");
    asm("loc_4A7C78: fstps 0x90(%esp);");
    asm("loc_4A7C7F: movl $0,0x68(%esp);");
    asm("loc_4A7C87: movl $0,0x6C(%esp);");
    asm("loc_4A7C8F: movl $0,0x70(%esp);");
    asm("loc_4A7C97: movl $0x3D79DB23,0x74(%esp);");
    asm("loc_4A7C9F: movl $0x3C656042,0x78(%esp);");
    asm("loc_4A7CA7: movl $0,0x7C(%esp);");
    asm("loc_4A7CAF: movl $0xBE958106,0x8C(%esp);");
    asm("loc_4A7CBA: movl $0,0x94(%esp);");
    asm("loc_4A7CC5: push $0;");
    asm("loc_4A7CC7: push $0;");
    asm("loc_4A7CC9: push $1;");
    asm("loc_4A7CCB: push $0;");
    asm("loc_4A7CCD: push $0;");
    asm("loc_4A7CCF: push $0;");
    asm("loc_4A7CD1: push $1;");
    asm("loc_4A7CD3: push $0;");
    asm("loc_4A7CD5: push $0;");
    asm("loc_4A7CD7: lea 0x98(%esp),%edx;");
    asm("loc_4A7CDE: push %edx;");
    asm("loc_4A7CDF: push $0;");
    asm("loc_4A7CE1: lea 0xB8(%esp),%eax;");
    asm("loc_4A7CE8: push %eax;");
    asm("loc_4A7CE9: push $_data_5D48E0;");
    asm("loc_4A7CEE: lea 0x10C(%esp),%ecx;");
    asm("loc_4A7CF5: push %ecx;");
    asm("loc_4A7CF6: mov %esi,%ecx;");
    asm("loc_4A7CF8: call _sub_5A0DB0;");
    asm("loc_4A7CFD: mov %eax,%ecx;");
    asm("loc_4A7CFF: mov %ecx,0x18(%ebp);");
    asm("loc_4A7D02: mov _data_679BB4,%edx;");
    asm("loc_4A7D08: mov %edx,0x10(%esp);");
    asm("loc_4A7D0C: movzbl 0x13(%esp),%edx;");
    asm("loc_4A7D11: mov $0x55555556,%eax;");
    asm("loc_4A7D16: imul %edx;");
    asm("loc_4A7D18: mov %edx,%eax;");
    asm("loc_4A7D1A: shr $0x1F,%eax;");
    asm("loc_4A7D1D: add %eax,%edx;");
    asm("loc_4A7D1F: lea 0x10(%esp),%eax;");
    asm("loc_4A7D23: push %eax;");
    asm("loc_4A7D24: lea 0x14(%esp),%eax;");
    asm("loc_4A7D28: push %eax;");
    asm("loc_4A7D29: mov %dl,0x1B(%esp);");
    asm("loc_4A7D2D: mov (%ecx),%edx;");
    asm("loc_4A7D2F: push $0x18;");
    asm("loc_4A7D31: calll *0xA8(%edx);");
    asm("loc_4A7D37: push %edi;");
    asm("loc_4A7D38: lea 0xD4(%esp),%ecx;");
    asm("loc_4A7D3F: push $_data_5D48C8;");
    asm("loc_4A7D44: push %ecx;");
    asm("loc_4A7D45: call *%ebx;");
    asm("loc_4A7D47: add $0xC,%esp;");
    asm("loc_4A7D4A: mov 0x20(%esp),%edx;");
    asm("loc_4A7D4E: lea 0x78(%esp),%eax;");
    asm("loc_4A7D52: push %eax;");
    asm("loc_4A7D53: push $0;");
    asm("loc_4A7D55: push $0;");
    asm("loc_4A7D57: push $0;");
    asm("loc_4A7D59: push $1;");
    asm("loc_4A7D5B: push $0;");
    asm("loc_4A7D5D: push $0;");
    asm("loc_4A7D5F: push $0;");
    asm("loc_4A7D61: push $1;");
    asm("loc_4A7D63: push $0;");
    asm("loc_4A7D65: push $0;");
    asm("loc_4A7D67: lea 0x70(%esp),%ecx;");
    asm("loc_4A7D6B: push %ecx;");
    asm("loc_4A7D6C: push $0;");
    asm("loc_4A7D6E: mov %edx,0x6C(%esp);");
    asm("loc_4A7D72: lea 0x68(%esp),%edx;");
    asm("loc_4A7D76: push %edx;");
    asm("loc_4A7D77: push $_data_5D4890;");
    asm("loc_4A7D7C: lea 0x10C(%esp),%eax;");
    asm("loc_4A7D83: push %eax;");
    asm("loc_4A7D84: mov %esi,%ecx;");
    asm("loc_4A7D86: movl $0,0xB8(%esp);");
    asm("loc_4A7D91: movl $0,0xBC(%esp);");
    asm("loc_4A7D9C: movl $0,0xC0(%esp);");
    asm("loc_4A7DA7: movl $0x3D79DB23,0x84(%esp);");
    asm("loc_4A7DB2: movl $0x3C656042,0x88(%esp);");
    asm("loc_4A7DBD: movl $0,0x8C(%esp);");
    asm("loc_4A7DC8: movl $0xBE2E7D57,0x74(%esp);");
    asm("loc_4A7DD0: movl $0,0x7C(%esp);");
    asm("loc_4A7DD8: call _sub_5A0DB0;");
    asm("loc_4A7DDD: lea 0x10(%esp),%ecx;");
    asm("loc_4A7DE1: push %ecx;");
    asm("loc_4A7DE2: lea 0x14(%esp),%ecx;");
    asm("loc_4A7DE6: push %ecx;");
    asm("loc_4A7DE7: mov %eax,0x30(%ebp);");
    asm("loc_4A7DEA: mov (%eax),%edx;");
    asm("loc_4A7DEC: push $0x18;");
    asm("loc_4A7DEE: mov %eax,%ecx;");
    asm("loc_4A7DF0: calll *0xA8(%edx);");
    asm("loc_4A7DF6: inc %edi;");
    asm("loc_4A7DF7: add $4,%ebp;");
    asm("loc_4A7DFA: cmp $6,%edi;");
    asm("loc_4A7DFD: mov %edi,0x20(%esp);");
    asm("loc_4A7E01: jl loc_4A7B60;");
    asm("loc_4A7E07: xor %ebp,%ebp;");
    asm("loc_4A7E09: push %ebp;");
    asm("loc_4A7E0A: push $6;");
    asm("loc_4A7E0C: push $5;");
    asm("loc_4A7E0E: push %ebp;");
    asm("loc_4A7E0F: push $0x3ED2F1AA;");
    asm("loc_4A7E14: push $0x3C9BA5E3;");
    asm("loc_4A7E19: lea 0x4C(%esp),%edx;");
    asm("loc_4A7E1D: push %edx;");
    asm("loc_4A7E1E: push $_data_5D487C;");
    asm("loc_4A7E23: mov %esi,%ecx;");
    asm("loc_4A7E25: movl $0xBD3851EC,0x54(%esp);");
    asm("loc_4A7E2D: movl $0x3E343958,0x58(%esp);");
    asm("loc_4A7E35: movl $0,0x5C(%esp);");
    asm("loc_4A7E3D: call _sub_5A17E0;");
    asm("loc_4A7E42: mov %eax,0x394(%esi);");
    asm("loc_4A7E48: mov $1,%eax;");
    asm("loc_4A7E4D: mov %ebp,0xCC(%esp);");
    asm("loc_4A7E54: xor %ecx,%ecx;");
    asm("loc_4A7E56: mov %ebp,0x24(%esp);");
    asm("loc_4A7E5A: mov $0x61D,%edi;");
    asm("loc_4A7E5F: lea 0x398(%esi),%ebp;");
    asm("loc_4A7E65: mov %edi,0x90(%esp);");
    asm("loc_4A7E6C: movl $0x61E,0x94(%esp);");
    asm("loc_4A7E77: movl $0x61F,0x98(%esp);");
    asm("loc_4A7E82: mov %eax,0x9C(%esp);");
    asm("loc_4A7E89: movl $0x64B,0xA0(%esp);");
    asm("loc_4A7E94: movl $0x641,0xA4(%esp);");
    asm("loc_4A7E9F: movl $0x646,0xA8(%esp);");
    asm("loc_4A7EAA: movl $0x647,0xAC(%esp);");
    asm("loc_4A7EB5: movl $0x648,0xB0(%esp);");
    asm("loc_4A7EC0: movl $0x649,0xB4(%esp);");
    asm("loc_4A7ECB: mov %eax,0xB8(%esp);");
    asm("loc_4A7ED2: movl $0x64A,0xBC(%esp);");
    asm("loc_4A7EDD: movl $0x64C,0xC0(%esp);");
    asm("loc_4A7EE8: movl $0x64D,0xC4(%esp);");
    asm("loc_4A7EF3: movl $0x64E,0xC8(%esp);");
    asm("loc_4A7EFE: mov %ecx,0x20(%esp);");
    asm("loc_4A7F02: mov %ecx,0x10(%esp);");
    asm("loc_4A7F06: mov %ebp,0x40(%esp);");
    asm("loc_4A7F0A: lea (%ebx),%ebx;");
    asm("loc_4A7F10: cmp $1,%edi;");
    asm("loc_4A7F13: je loc_4A8043;");
    asm("loc_4A7F19: mov 0x24(%esp),%eax;");
    asm("loc_4A7F1D: push %eax;");
    asm("loc_4A7F1E: lea 0xD4(%esp),%ecx;");
    asm("loc_4A7F25: push $_data_5D4868;");
    asm("loc_4A7F2A: push %ecx;");
    asm("loc_4A7F2B: call *%ebx;");
    asm("loc_4A7F2D: flds _data_5D4248;");
    asm("loc_4A7F33: fsubs 0x1C(%esp);");
    asm("loc_4A7F37: add $0xC,%esp;");
    asm("loc_4A7F3A: push $0;");
    asm("loc_4A7F3C: push $0;");
    asm("loc_4A7F3E: fsubs _data_5D011C;");
    asm("loc_4A7F44: push $0;");
    asm("loc_4A7F46: push %edi;");
    asm("loc_4A7F47: push $0x3FC00000;");
    asm("loc_4A7F4C: push $0x3D23D70A;");
    asm("loc_4A7F51: fsts 0x68(%esp);");
    asm("loc_4A7F55: push $0x3EB74BC7;");
    asm("loc_4A7F5A: fstps 0x54(%esp);");
    asm("loc_4A7F5E: push $0;");
    asm("loc_4A7F60: lea 0x54(%esp),%edx;");
    asm("loc_4A7F64: push %edx;");
    asm("loc_4A7F65: push $_data_5D010C;");
    asm("loc_4A7F6A: lea 0xF8(%esp),%eax;");
    asm("loc_4A7F71: push %eax;");
    asm("loc_4A7F72: mov %esi,%ecx;");
    asm("loc_4A7F74: movl $0x3E428F5C,0x60(%esp);");
    asm("loc_4A7F7C: movl $0,0x68(%esp);");
    asm("loc_4A7F84: call _sub_5A0E30;");
    asm("loc_4A7F89: mov 0x24(%esp),%ecx;");
    asm("loc_4A7F8D: push %ecx;");
    asm("loc_4A7F8E: lea 0xD4(%esp),%edx;");
    asm("loc_4A7F95: mov %eax,%edi;");
    asm("loc_4A7F97: push $_data_5D4854;");
    asm("loc_4A7F9C: push %edx;");
    asm("loc_4A7F9D: mov %edi,0x34(%ebp);");
    asm("loc_4A7FA0: call *%ebx;");
    asm("loc_4A7FA2: mov 0x5C(%esp),%eax;");
    asm("loc_4A7FA6: add $0xC,%esp;");
    asm("loc_4A7FA9: push $0;");
    asm("loc_4A7FAB: push $0;");
    asm("loc_4A7FAD: push $0;");
    asm("loc_4A7FAF: push $0;");
    asm("loc_4A7FB1: push $0x3FC00000;");
    asm("loc_4A7FB6: push $0x3D23D70A;");
    asm("loc_4A7FBB: push $0x3E408312;");
    asm("loc_4A7FC0: push $0;");
    asm("loc_4A7FC2: lea 0x64(%esp),%ecx;");
    asm("loc_4A7FC6: push %ecx;");
    asm("loc_4A7FC7: push $_data_5D010C;");
    asm("loc_4A7FCC: lea 0xF8(%esp),%edx;");
    asm("loc_4A7FD3: push %edx;");
    asm("loc_4A7FD4: mov %esi,%ecx;");
    asm("loc_4A7FD6: movl $0x3EC28F5C,0x70(%esp);");
    asm("loc_4A7FDE: mov %eax,0x74(%esp);");
    asm("loc_4A7FE2: movl $0,0x78(%esp);");
    asm("loc_4A7FEA: call _sub_5A0E30;");
    asm("loc_4A7FEF: mov %eax,(%ebp);");
    asm("loc_4A7FF2: calll *_import_5C60D0;");
    asm("loc_4A7FF8: test %al,%al;");
    asm("loc_4A7FFA: mov 0x20(%esp),%ecx;");
    asm("loc_4A7FFE: jne loc_4A801F;");
    asm("loc_4A8000: cmp $1,%ecx;");
    asm("loc_4A8003: je loc_4A800A;");
    asm("loc_4A8005: cmp $2,%ecx;");
    asm("loc_4A8008: jne loc_4A801F;");
    asm("loc_4A800A: mov 0x6C(%edi),%al;");
    asm("loc_4A800D: mov 0x40(%esp),%ebp;");
    asm("loc_4A8011: and $0xFC,%al;");
    asm("loc_4A8013: mov %al,0x6C(%edi);");
    asm("loc_4A8016: mov (%ebp),%eax;");
    asm("loc_4A8019: andb $0xFC,0x6C(%eax);");
    asm("loc_4A801D: jmp loc_4A8031;");
    asm("loc_4A801F: flds 0x10(%esp);");
    asm("loc_4A8023: mov 0x40(%esp),%ebp;");
    asm("loc_4A8027: fadds _data_5D011C;");
    asm("loc_4A802D: fstps 0x10(%esp);");
    asm("loc_4A8031: mov 0x24(%esp),%edx;");
    asm("loc_4A8035: inc %edx;");
    asm("loc_4A8036: add $4,%ebp;");
    asm("loc_4A8039: mov %edx,0x24(%esp);");
    asm("loc_4A803D: mov %ebp,0x40(%esp);");
    asm("loc_4A8041: jmp loc_4A8051;");
    asm("loc_4A8043: flds 0x10(%esp);");
    asm("loc_4A8047: fadds _data_5D1F04;");
    asm("loc_4A804D: fstps 0x10(%esp);");
    asm("loc_4A8051: mov 0x94(%esp,%ecx,4),%edi;");
    asm("loc_4A8058: inc %ecx;");
    asm("loc_4A8059: test %edi,%edi;");
    asm("loc_4A805B: mov %ecx,0x20(%esp);");
    asm("loc_4A805F: jne loc_4A7F10;");
    asm("loc_4A8065: mov 0x394(%esi),%ecx;");
    asm("loc_4A806B: push $0xFFFFFFFF;");
    asm("loc_4A806D: push %edi;");
    asm("loc_4A806E: mov %edi,0x41C(%esi);");
    asm("loc_4A8074: mov (%ecx),%eax;");
    asm("loc_4A8076: push $0x37;");
    asm("loc_4A8078: calll *0xA8(%eax);");
    asm("loc_4A807E: mov (%esi),%edx;");
    asm("loc_4A8080: sub $0xC,%esp;");
    asm("loc_4A8083: mov %edi,%ecx;");
    asm("loc_4A8085: mov %esp,%eax;");
    asm("loc_4A8087: mov %ecx,(%eax);");
    asm("loc_4A8089: mov %ecx,4(%eax);");
    asm("loc_4A808C: mov %ecx,8(%eax);");
    asm("loc_4A808F: mov %esi,%ecx;");
    asm("loc_4A8091: mov %edi,0x34(%esp);");
    asm("loc_4A8095: mov %edi,0x38(%esp);");
    asm("loc_4A8099: mov %edi,0x3C(%esp);");
    asm("loc_4A809D: calll *0x7C(%edx);");
    asm("loc_4A80A0: mov (%esi),%edx;");
    asm("loc_4A80A2: lea 0x60(%esi),%eax;");
    asm("loc_4A80A5: push %eax;");
    asm("loc_4A80A6: mov %esi,%ecx;");
    asm("loc_4A80A8: calll *0x14(%edx);");
    asm("loc_4A80AB: mov 0x1D8(%esp),%ecx;");
    asm("loc_4A80B2: mov 0x1D4(%esp),%edx;");
    asm("loc_4A80B9: push %ecx;");
    asm("loc_4A80BA: push %edx;");
    asm("loc_4A80BB: mov %esi,%ecx;");
    asm("loc_4A80BD: movl $0x3F800000,0x424(%esi);");
    asm("loc_4A80C7: call _sub_4B5060;");
    asm("loc_4A80CC: pop %edi;");
    asm("loc_4A80CD: pop %esi;");
    asm("loc_4A80CE: test %al,%al;");
    asm("loc_4A80D0: pop %ebp;");
    asm("loc_4A80D1: setne %al;");
    asm("loc_4A80D4: pop %ebx;");
    asm("loc_4A80D5: add $0x1C0,%esp;");
    asm("loc_4A80DB: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A80E0() // _sub_4A80E0
{
    __DEBUG_ASM(4A80E0);
    // chunk 0x4A80E0 _sub_4A80E0
    asm("loc_4A80E0: mov 4(%esp),%eax;");
    asm("loc_4A80E4: cmp $0x26,%eax;");
    asm("loc_4A80E7: push %esi;");
    asm("loc_4A80E8: push %edi;");
    asm("loc_4A80E9: mov %ecx,%esi;");
    asm("loc_4A80EB: je loc_4A811A;");
    asm("loc_4A80ED: cmp $0x3E,%eax;");
    asm("loc_4A80F0: jne loc_4A81DD;");
    asm("loc_4A80F6: mov 0x10(%esp),%eax;");
    asm("loc_4A80FA: cmp 0x394(%esi),%eax;");
    asm("loc_4A8100: jne loc_4A81DD;");
    asm("loc_4A8106: mov 0x14(%esp),%ecx;");
    asm("loc_4A810A: pop %edi;");
    asm("loc_4A810B: mov %ecx,0x420(%esi);");
    asm("loc_4A8111: mov $1,%eax;");
    asm("loc_4A8116: pop %esi;");
    asm("loc_4A8117: ret $0xC;");
    asm("loc_4A811A: mov 0x10(%esp),%edx;");
    asm("loc_4A811E: cmp 0x32C(%esi),%edx;");
    asm("loc_4A8124: jne loc_4A8135;");
    asm("loc_4A8126: call _sub_45A460;");
    asm("loc_4A812B: pop %edi;");
    asm("loc_4A812C: mov $1,%eax;");
    asm("loc_4A8131: pop %esi;");
    asm("loc_4A8132: ret $0xC;");
    asm("loc_4A8135: cmp 0x404(%esi),%edx;");
    asm("loc_4A813B: jne loc_4A81C6;");
    asm("loc_4A8141: mov 0x400(%esi),%eax;");
    asm("loc_4A8147: andb $0xFD,0x6C(%eax);");
    asm("loc_4A814B: mov 0x404(%esi),%eax;");
    asm("loc_4A8151: mov 0x6C(%eax),%dl;");
    asm("loc_4A8154: mov $0xFC,%cl;");
    asm("loc_4A8156: and %cl,%dl;");
    asm("loc_4A8158: mov %dl,0x6C(%eax);");
    asm("loc_4A815B: mov 0x408(%esi),%eax;");
    asm("loc_4A8161: mov 0x6C(%eax),%dl;");
    asm("loc_4A8164: and %cl,%dl;");
    asm("loc_4A8166: push %ebp;");
    asm("loc_4A8167: mov %dl,0x6C(%eax);");
    asm("loc_4A816A: xor %edi,%edi;");
    asm("loc_4A816C: lea 0x3CC(%esi),%ebp;");
    asm("loc_4A8172: calll *_import_5C60D0;");
    asm("loc_4A8178: test %al,%al;");
    asm("loc_4A817A: jne loc_4A8186;");
    asm("loc_4A817C: cmp $1,%edi;");
    asm("loc_4A817F: je loc_4A8199;");
    asm("loc_4A8181: cmp $2,%edi;");
    asm("loc_4A8184: je loc_4A8199;");
    asm("loc_4A8186: mov -0x34(%ebp),%eax;");
    asm("loc_4A8189: mov 0x6C(%eax),%dl;");
    asm("loc_4A818C: mov $3,%cl;");
    asm("loc_4A818E: or %cl,%dl;");
    asm("loc_4A8190: mov %dl,0x6C(%eax);");
    asm("loc_4A8193: mov (%ebp),%eax;");
    asm("loc_4A8196: or %cl,0x6C(%eax);");
    asm("loc_4A8199: inc %edi;");
    asm("loc_4A819A: add $4,%ebp;");
    asm("loc_4A819D: cmp $0xD,%edi;");
    asm("loc_4A81A0: jl loc_4A8172;");
    asm("loc_4A81A2: mov 0x330(%esi),%esi;");
    asm("loc_4A81A8: mov (%esi),%edx;");
    asm("loc_4A81AA: push $0;");
    asm("loc_4A81AC: push $0x640;");
    asm("loc_4A81B1: push $0x1E;");
    asm("loc_4A81B3: mov %esi,%ecx;");
    asm("loc_4A81B5: calll *0xA8(%edx);");
    asm("loc_4A81BB: pop %ebp;");
    asm("loc_4A81BC: pop %edi;");
    asm("loc_4A81BD: mov $1,%eax;");
    asm("loc_4A81C2: pop %esi;");
    asm("loc_4A81C3: ret $0xC;");
    asm("loc_4A81C6: xor %eax,%eax;");
    asm("loc_4A81C8: lea 0x334(%esi),%ecx;");
    asm("loc_4A81CE: mov %edi,%edi;");
    asm("loc_4A81D0: cmp (%ecx),%edx;");
    asm("loc_4A81D2: je loc_4A81E4;");
    asm("loc_4A81D4: inc %eax;");
    asm("loc_4A81D5: add $4,%ecx;");
    asm("loc_4A81D8: cmp $6,%eax;");
    asm("loc_4A81DB: jl loc_4A81D0;");
    asm("loc_4A81DD: pop %edi;");
    asm("loc_4A81DE: xor %eax,%eax;");
    asm("loc_4A81E0: pop %esi;");
    asm("loc_4A81E1: ret $0xC;");
    asm("loc_4A81E4: mov 0x420(%esi),%ecx;");
    asm("loc_4A81EA: add %eax,%ecx;");
    asm("loc_4A81EC: push %ecx;");
    asm("loc_4A81ED: mov %esi,%ecx;");
    asm("loc_4A81EF: call _sub_4A8E80;");
    asm("loc_4A81F4: pop %edi;");
    asm("loc_4A81F5: mov $1,%eax;");
    asm("loc_4A81FA: pop %esi;");
    asm("loc_4A81FB: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A8200() // _sub_4A8200
{
    __DEBUG_ASM(4A8200);
    // chunk 0x4A8200 _sub_4A8200
    asm("loc_4A8200: sub $0xA4,%esp;");
    asm("loc_4A8206: push %ebp;");
    asm("loc_4A8207: mov %ecx,%ebp;");
    asm("loc_4A8209: push $0xA;");
    asm("loc_4A820B: mov %ebp,0x18(%esp);");
    asm("loc_4A820F: call _sub_5792B0;");
    asm("loc_4A8214: add $4,%esp;");
    asm("loc_4A8217: test %eax,%eax;");
    asm("loc_4A8219: je loc_4A8742;");
    asm("loc_4A821F: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4A8227: calll *_import_5C60D0;");
    asm("loc_4A822D: test %al,%al;");
    asm("loc_4A822F: jne loc_4A824F;");
    asm("loc_4A8231: call _sub_4C4670;");
    asm("loc_4A8236: mov %eax,8(%esp);");
    asm("loc_4A823A: push $0;");
    asm("loc_4A823C: lea 0x14(%esp),%eax;");
    asm("loc_4A8240: push %eax;");
    asm("loc_4A8241: lea 0x10(%esp),%ecx;");
    asm("loc_4A8245: push %ecx;");
    asm("loc_4A8246: calll *_import_5C6320;");
    asm("loc_4A824C: add $0xC,%esp;");
    asm("loc_4A824F: push %ebx;");
    asm("loc_4A8250: push %esi;");
    asm("loc_4A8251: xor %ecx,%ecx;");
    asm("loc_4A8253: push %edi;");
    asm("loc_4A8254: mov %ecx,0x18(%esp);");
    asm("loc_4A8258: lea 0x34C(%ebp),%esi;");
    asm("loc_4A825E: mov $3,%ebx;");
    asm("loc_4A8263: mov $0xFC,%dl;");
    asm("loc_4A8265: mov 0x420(%ebp),%eax;");
    asm("loc_4A826B: mov 0x41C(%ebp),%edi;");
    asm("loc_4A8271: add %ecx,%eax;");
    asm("loc_4A8273: cmp %edi,%eax;");
    asm("loc_4A8275: mov (%esi),%eax;");
    asm("loc_4A8277: jge loc_4A8348;");
    asm("loc_4A827D: or %bl,0x6C(%eax);");
    asm("loc_4A8280: mov -0x18(%esi),%eax;");
    asm("loc_4A8283: or %bl,0x6C(%eax);");
    asm("loc_4A8286: mov 0x18(%esi),%eax;");
    asm("loc_4A8289: or %bl,0x6C(%eax);");
    asm("loc_4A828C: mov 0x30(%esi),%eax;");
    asm("loc_4A828F: or %bl,0x6C(%eax);");
    asm("loc_4A8292: mov 0x420(%ebp),%edx;");
    asm("loc_4A8298: mov 0x410(%ebp),%eax;");
    asm("loc_4A829E: add %ecx,%edx;");
    asm("loc_4A82A0: mov (%esi),%ecx;");
    asm("loc_4A82A2: mov (%ecx),%ebx;");
    asm("loc_4A82A4: lea (%eax,%edx,8),%edi;");
    asm("loc_4A82A7: mov (%edi),%edx;");
    asm("loc_4A82A9: push $0;");
    asm("loc_4A82AB: push %edx;");
    asm("loc_4A82AC: calll *_import_5C608C;");
    asm("loc_4A82B2: mov (%esi),%ecx;");
    asm("loc_4A82B4: add $4,%esp;");
    asm("loc_4A82B7: push %eax;");
    asm("loc_4A82B8: push $0x1E;");
    asm("loc_4A82BA: calll *0xA8(%ebx);");
    asm("loc_4A82C0: mov 4(%edi),%eax;");
    asm("loc_4A82C3: push %eax;");
    asm("loc_4A82C4: lea 0x18(%esp),%ecx;");
    asm("loc_4A82C8: push %ecx;");
    asm("loc_4A82C9: call _sub_45A650;");
    asm("loc_4A82CE: mov 0x24(%esp),%edx;");
    asm("loc_4A82D2: mov (%edi),%eax;");
    asm("loc_4A82D4: add $8,%esp;");
    asm("loc_4A82D7: cmp %eax,%edx;");
    asm("loc_4A82D9: jne loc_4A82F3;");
    asm("loc_4A82DB: mov 0x14(%esp),%eax;");
    asm("loc_4A82DF: push %eax;");
    asm("loc_4A82E0: lea 0x14(%esp),%ecx;");
    asm("loc_4A82E4: push %ecx;");
    asm("loc_4A82E5: call _sub_561F20;");
    asm("loc_4A82EA: mov (%eax),%edx;");
    asm("loc_4A82EC: add $8,%esp;");
    asm("loc_4A82EF: mov %edx,0x14(%esp);");
    asm("loc_4A82F3: mov (%esi),%ecx;");
    asm("loc_4A82F5: mov (%ecx),%eax;");
    asm("loc_4A82F7: push $1;");
    asm("loc_4A82F9: lea 0x18(%esp),%edx;");
    asm("loc_4A82FD: push %edx;");
    asm("loc_4A82FE: push $0x33;");
    asm("loc_4A8300: calll *0xA8(%eax);");
    asm("loc_4A8306: mov 4(%edi),%eax;");
    asm("loc_4A8309: push %eax;");
    asm("loc_4A830A: call _sub_45A6E0;");
    asm("loc_4A830F: add $4,%esp;");
    asm("loc_4A8312: cmp $4,%eax;");
    asm("loc_4A8315: mov $0x635,%edx;");
    asm("loc_4A831A: jne loc_4A8323;");
    asm("loc_4A831C: mov $0x634,%edx;");
    asm("loc_4A8321: jmp loc_4A832C;");
    asm("loc_4A8323: test %eax,%eax;");
    asm("loc_4A8325: jne loc_4A832C;");
    asm("loc_4A8327: mov $0x636,%edx;");
    asm("loc_4A832C: mov -0x18(%esi),%ecx;");
    asm("loc_4A832F: mov (%ecx),%eax;");
    asm("loc_4A8331: push $0;");
    asm("loc_4A8333: push %edx;");
    asm("loc_4A8334: mov $3,%ebx;");
    asm("loc_4A8339: push %ebx;");
    asm("loc_4A833A: calll *0xA8(%eax);");
    asm("loc_4A8340: mov 0x18(%esp),%ecx;");
    asm("loc_4A8344: mov $0xFC,%dl;");
    asm("loc_4A8346: jmp loc_4A835D;");
    asm("loc_4A8348: and %dl,0x6C(%eax);");
    asm("loc_4A834B: mov -0x18(%esi),%eax;");
    asm("loc_4A834E: and %dl,0x6C(%eax);");
    asm("loc_4A8351: mov 0x18(%esi),%eax;");
    asm("loc_4A8354: and %dl,0x6C(%eax);");
    asm("loc_4A8357: mov 0x30(%esi),%eax;");
    asm("loc_4A835A: and %dl,0x6C(%eax);");
    asm("loc_4A835D: inc %ecx;");
    asm("loc_4A835E: add $4,%esi;");
    asm("loc_4A8361: cmp $6,%ecx;");
    asm("loc_4A8364: mov %ecx,0x18(%esp);");
    asm("loc_4A8368: jl loc_4A8265;");
    asm("loc_4A836E: lea 0x334(%ebp),%ecx;");
    asm("loc_4A8374: push $6;");
    asm("loc_4A8376: push %ecx;");
    asm("loc_4A8377: call _sub_5A4B50;");
    asm("loc_4A837C: add $8,%esp;");
    asm("loc_4A837F: mov %ebp,%ecx;");
    asm("loc_4A8381: call _sub_5A0760;");
    asm("loc_4A8386: xor %eax,%eax;");
    asm("loc_4A8388: lea 0x37C(%ebp),%edx;");
    asm("loc_4A838E: mov %eax,0x18(%esp);");
    asm("loc_4A8392: mov %edx,0x14(%esp);");
    asm("loc_4A8396: mov 0x420(%ebp),%ecx;");
    asm("loc_4A839C: add %ecx,%eax;");
    asm("loc_4A839E: cmp 0x41C(%ebp),%eax;");
    asm("loc_4A83A4: jge loc_4A86CA;");
    asm("loc_4A83AA: mov 0x410(%ebp),%ecx;");
    asm("loc_4A83B0: flds 4(%ecx,%eax,8);");
    asm("loc_4A83B4: lea (%ecx,%eax,8),%ecx;");
    asm("loc_4A83B7: fcomps _data_5C7474;");
    asm("loc_4A83BD: push $1;");
    asm("loc_4A83BF: push $7;");
    asm("loc_4A83C1: fnstsw %ax;");
    asm("loc_4A83C3: test $5,%ah;");
    asm("loc_4A83C6: jp loc_4A852D;");
    asm("loc_4A83CC: mov -0x18(%edx),%ebx;");
    asm("loc_4A83CF: lea 0xB4(%ebx),%edx;");
    asm("loc_4A83D5: mov (%edx),%eax;");
    asm("loc_4A83D7: mov 4(%edx),%ebp;");
    asm("loc_4A83DA: mov 8(%edx),%edx;");
    asm("loc_4A83DD: mov %eax,0x38(%esp);");
    asm("loc_4A83E1: flds 0x38(%esp);");
    asm("loc_4A83E5: mov _import_5C6DE0,%eax;");
    asm("loc_4A83EA: fadd %st,%st(0);");
    asm("loc_4A83EC: mov (%eax),%eax;");
    asm("loc_4A83EE: push %eax;");
    asm("loc_4A83EF: fmuls 4(%ecx);");
    asm("loc_4A83F2: mov (%eax),%ecx;");
    asm("loc_4A83F4: mov %ebp,0x40(%esp);");
    asm("loc_4A83F8: fchs;");
    asm("loc_4A83FA: mov %edx,0x44(%esp);");
    asm("loc_4A83FE: fsubrs 0x3C(%esp);");
    asm("loc_4A8402: fstps 0x1C(%esp);");
    asm("loc_4A8406: calll *0xF0(%ecx);");
    asm("loc_4A840C: mov _import_5C6DE0,%edx;");
    asm("loc_4A8412: mov (%edx),%eax;");
    asm("loc_4A8414: mov (%eax),%ecx;");
    asm("loc_4A8416: push $8;");
    asm("loc_4A8418: push $0x17;");
    asm("loc_4A841A: push %eax;");
    asm("loc_4A841B: calll *0xF0(%ecx);");
    asm("loc_4A8421: mov _import_5C6DE0,%edx;");
    asm("loc_4A8427: mov (%edx),%eax;");
    asm("loc_4A8429: mov (%eax),%ecx;");
    asm("loc_4A842B: push $1;");
    asm("loc_4A842D: push $0xE;");
    asm("loc_4A842F: push %eax;");
    asm("loc_4A8430: calll *0xF0(%ecx);");
    asm("loc_4A8436: flds 0xA8(%ebx);");
    asm("loc_4A843C: fadds 0x60(%ebx);");
    asm("loc_4A843F: lea 0x3C(%ebx),%esi;");
    asm("loc_4A8442: mov $9,%ecx;");
    asm("loc_4A8447: lea 0x54(%esp),%edi;");
    asm("loc_4A844B: fstps 0x48(%esp);");
    asm("loc_4A844F: flds 0xAC(%ebx);");
    asm("loc_4A8455: mov 0x48(%esp),%edx;");
    asm("loc_4A8459: fadds 0x64(%ebx);");
    asm("loc_4A845C: fstps 0x4C(%esp);");
    asm("loc_4A8460: flds 0xB0(%ebx);");
    asm("loc_4A8466: mov 0x4C(%esp),%eax;");
    asm("loc_4A846A: fadds 0x68(%ebx);");
    asm("loc_4A846D: rep movsl (%esi),(%edi);");
    asm("loc_4A846F: mov %edx,0x78(%esp);");
    asm("loc_4A8473: lea 0x54(%esp),%edx;");
    asm("loc_4A8477: push %edx;");
    asm("loc_4A8478: fstps 0x54(%esp);");
    asm("loc_4A847C: mov 0x54(%esp),%ecx;");
    asm("loc_4A8480: push $0;");
    asm("loc_4A8482: mov %eax,0x84(%esp);");
    asm("loc_4A8489: mov %ecx,0x88(%esp);");
    asm("loc_4A8490: call _sub_422690;");
    asm("loc_4A8495: push $0xDE1;");
    asm("loc_4A849A: call _sub_421ED0;");
    asm("loc_4A849F: push $0xBE2;");
    asm("loc_4A84A4: call _sub_421DD0;");
    asm("loc_4A84A9: push $4;");
    asm("loc_4A84AB: push $2;");
    asm("loc_4A84AD: call _sub_4220C0;");
    asm("loc_4A84B2: push $0xA;");
    asm("loc_4A84B4: push $0;");
    asm("loc_4A84B6: push $0;");
    asm("loc_4A84B8: push $0;");
    asm("loc_4A84BA: call _sub_421B70;");
    asm("loc_4A84BF: push $8;");
    asm("loc_4A84C1: call _sub_421670;");
    asm("loc_4A84C6: mov 0x3C(%esp),%esi;");
    asm("loc_4A84CA: push $0x3A83126F;");
    asm("loc_4A84CF: push %ebp;");
    asm("loc_4A84D0: push %esi;");
    asm("loc_4A84D1: call _sub_421CC0;");
    asm("loc_4A84D6: flds 0x6C(%esp);");
    asm("loc_4A84DA: fchs;");
    asm("loc_4A84DC: push $0x3A83126F;");
    asm("loc_4A84E1: fstps 0x4C(%esp);");
    asm("loc_4A84E5: mov 0x4C(%esp),%edi;");
    asm("loc_4A84E9: push %edi;");
    asm("loc_4A84EA: push %esi;");
    asm("loc_4A84EB: call _sub_421CC0;");
    asm("loc_4A84F0: flds 0x74(%esp);");
    asm("loc_4A84F4: add $0x44,%esp;");
    asm("loc_4A84F7: fchs;");
    asm("loc_4A84F9: push $0x3A83126F;");
    asm("loc_4A84FE: fstps 0x14(%esp);");
    asm("loc_4A8502: mov 0x14(%esp),%esi;");
    asm("loc_4A8506: push %edi;");
    asm("loc_4A8507: push %esi;");
    asm("loc_4A8508: call _sub_421CC0;");
    asm("loc_4A850D: push $0x3A83126F;");
    asm("loc_4A8512: push %ebp;");
    asm("loc_4A8513: push %esi;");
    asm("loc_4A8514: call _sub_421CC0;");
    asm("loc_4A8519: add $0x18,%esp;");
    asm("loc_4A851C: call _sub_421690;");
    asm("loc_4A8521: mov _import_5C6DE0,%eax;");
    asm("loc_4A8526: mov (%eax),%eax;");
    asm("loc_4A8528: jmp loc_4A8694;");
    asm("loc_4A852D: mov (%edx),%ebx;");
    asm("loc_4A852F: lea 0xB4(%ebx),%eax;");
    asm("loc_4A8535: mov (%eax),%ebp;");
    asm("loc_4A8537: mov 4(%eax),%edx;");
    asm("loc_4A853A: mov 8(%eax),%eax;");
    asm("loc_4A853D: mov %ebp,0x2C(%esp);");
    asm("loc_4A8541: flds 0x2C(%esp);");
    asm("loc_4A8545: fadd %st,%st(0);");
    asm("loc_4A8547: mov %eax,0x34(%esp);");
    asm("loc_4A854B: mov %edx,0x30(%esp);");
    asm("loc_4A854F: fmuls 4(%ecx);");
    asm("loc_4A8552: mov _import_5C6DE0,%ecx;");
    asm("loc_4A8558: mov (%ecx),%eax;");
    asm("loc_4A855A: mov (%eax),%edx;");
    asm("loc_4A855C: fsubrs 0x2C(%esp);");
    asm("loc_4A8560: push %eax;");
    asm("loc_4A8561: fstps 0x1C(%esp);");
    asm("loc_4A8565: calll *0xF0(%edx);");
    asm("loc_4A856B: mov _import_5C6DE0,%eax;");
    asm("loc_4A8570: mov (%eax),%eax;");
    asm("loc_4A8572: mov (%eax),%ecx;");
    asm("loc_4A8574: push $8;");
    asm("loc_4A8576: push $0x17;");
    asm("loc_4A8578: push %eax;");
    asm("loc_4A8579: calll *0xF0(%ecx);");
    asm("loc_4A857F: mov _import_5C6DE0,%edx;");
    asm("loc_4A8585: mov (%edx),%eax;");
    asm("loc_4A8587: mov (%eax),%ecx;");
    asm("loc_4A8589: push $1;");
    asm("loc_4A858B: push $0xE;");
    asm("loc_4A858D: push %eax;");
    asm("loc_4A858E: calll *0xF0(%ecx);");
    asm("loc_4A8594: flds 0x60(%ebx);");
    asm("loc_4A8597: fadds 0xA8(%ebx);");
    asm("loc_4A859D: lea 0x3C(%ebx),%esi;");
    asm("loc_4A85A0: mov $9,%ecx;");
    asm("loc_4A85A5: lea 0x84(%esp),%edi;");
    asm("loc_4A85AC: fstps 0x3C(%esp);");
    asm("loc_4A85B0: flds 0x64(%ebx);");
    asm("loc_4A85B3: mov 0x3C(%esp),%edx;");
    asm("loc_4A85B7: fadds 0xAC(%ebx);");
    asm("loc_4A85BD: fstps 0x40(%esp);");
    asm("loc_4A85C1: flds 0x68(%ebx);");
    asm("loc_4A85C4: mov 0x40(%esp),%eax;");
    asm("loc_4A85C8: fadds 0xB0(%ebx);");
    asm("loc_4A85CE: rep movsl (%esi),(%edi);");
    asm("loc_4A85D0: mov %edx,0xA8(%esp);");
    asm("loc_4A85D7: lea 0x84(%esp),%edx;");
    asm("loc_4A85DE: push %edx;");
    asm("loc_4A85DF: fstps 0x48(%esp);");
    asm("loc_4A85E3: mov 0x48(%esp),%ecx;");
    asm("loc_4A85E7: push $0;");
    asm("loc_4A85E9: mov %eax,0xB4(%esp);");
    asm("loc_4A85F0: mov %ecx,0xB8(%esp);");
    asm("loc_4A85F7: call _sub_422690;");
    asm("loc_4A85FC: push $0xDE1;");
    asm("loc_4A8601: call _sub_421ED0;");
    asm("loc_4A8606: push $0xBE2;");
    asm("loc_4A860B: call _sub_421DD0;");
    asm("loc_4A8610: push $4;");
    asm("loc_4A8612: push $2;");
    asm("loc_4A8614: call _sub_4220C0;");
    asm("loc_4A8619: push $0xA;");
    asm("loc_4A861B: push $0;");
    asm("loc_4A861D: push $0;");
    asm("loc_4A861F: push $0;");
    asm("loc_4A8621: call _sub_421B70;");
    asm("loc_4A8626: push $8;");
    asm("loc_4A8628: call _sub_421670;");
    asm("loc_4A862D: flds 0x3C(%esp);");
    asm("loc_4A8631: mov 0x54(%esp),%eax;");
    asm("loc_4A8635: fchs;");
    asm("loc_4A8637: push $0x3A83126F;");
    asm("loc_4A863C: fstps 0x40(%esp);");
    asm("loc_4A8640: mov 0x40(%esp),%esi;");
    asm("loc_4A8644: push %eax;");
    asm("loc_4A8645: push %esi;");
    asm("loc_4A8646: call _sub_421CC0;");
    asm("loc_4A864B: flds 0x60(%esp);");
    asm("loc_4A864F: fchs;");
    asm("loc_4A8651: push $0x3A83126F;");
    asm("loc_4A8656: fstps 0x4C(%esp);");
    asm("loc_4A865A: mov 0x4C(%esp),%edi;");
    asm("loc_4A865E: push %edi;");
    asm("loc_4A865F: push %esi;");
    asm("loc_4A8660: call _sub_421CC0;");
    asm("loc_4A8665: add $0x44,%esp;");
    asm("loc_4A8668: push $0x3A83126F;");
    asm("loc_4A866D: push %edi;");
    asm("loc_4A866E: push %ebp;");
    asm("loc_4A866F: call _sub_421CC0;");
    asm("loc_4A8674: mov 0x34(%esp),%ecx;");
    asm("loc_4A8678: push $0x3A83126F;");
    asm("loc_4A867D: push %ecx;");
    asm("loc_4A867E: push %ebp;");
    asm("loc_4A867F: call _sub_421CC0;");
    asm("loc_4A8684: add $0x18,%esp;");
    asm("loc_4A8687: call _sub_421690;");
    asm("loc_4A868C: mov _import_5C6DE0,%edx;");
    asm("loc_4A8692: mov (%edx),%eax;");
    asm("loc_4A8694: mov (%eax),%ecx;");
    asm("loc_4A8696: push $4;");
    asm("loc_4A8698: push $0x17;");
    asm("loc_4A869A: push %eax;");
    asm("loc_4A869B: calll *0xF0(%ecx);");
    asm("loc_4A86A1: mov _import_5C6DF0,%edx;");
    asm("loc_4A86A7: mov (%edx),%eax;");
    asm("loc_4A86A9: mov 0x84(%ebx),%edx;");
    asm("loc_4A86AF: mov (%eax),%ecx;");
    asm("loc_4A86B1: push $0;");
    asm("loc_4A86B3: push $0;");
    asm("loc_4A86B5: push $0;");
    asm("loc_4A86B7: push $0x3F800000;");
    asm("loc_4A86BC: push %edx;");
    asm("loc_4A86BD: push $_data_67DBF8;");
    asm("loc_4A86C2: push %eax;");
    asm("loc_4A86C3: calll *0x1C(%ecx);");
    asm("loc_4A86C6: mov 0x20(%esp),%ebp;");
    asm("loc_4A86CA: mov 0x18(%esp),%eax;");
    asm("loc_4A86CE: mov 0x14(%esp),%edx;");
    asm("loc_4A86D2: inc %eax;");
    asm("loc_4A86D3: add $4,%edx;");
    asm("loc_4A86D6: cmp $6,%eax;");
    asm("loc_4A86D9: mov %eax,0x18(%esp);");
    asm("loc_4A86DD: mov %edx,0x14(%esp);");
    asm("loc_4A86E1: jl loc_4A8396;");
    asm("loc_4A86E7: call _sub_42D680;");
    asm("loc_4A86EC: fadds 0x424(%ebp);");
    asm("loc_4A86F2: pop %edi;");
    asm("loc_4A86F3: pop %esi;");
    asm("loc_4A86F4: fcoms _data_5C75DC;");
    asm("loc_4A86FA: pop %ebx;");
    asm("loc_4A86FB: fsts 0x424(%ebp);");
    asm("loc_4A8701: fnstsw %ax;");
    asm("loc_4A8703: test $0x41,%ah;");
    asm("loc_4A8706: jne loc_4A8740;");
    asm("loc_4A8708: fsubs _data_5C75DC;");
    asm("loc_4A870E: push $4;");
    asm("loc_4A8710: lea 8(%esp),%edx;");
    asm("loc_4A8714: push %edx;");
    asm("loc_4A8715: fstps 0x424(%ebp);");
    asm("loc_4A871B: mov _data_67ECD0,%ecx;");
    asm("loc_4A8721: mov _data_673344,%edx;");
    asm("loc_4A8727: movl $0,0xC(%esp);");
    asm("loc_4A872F: mov (%ecx),%eax;");
    asm("loc_4A8731: push %edx;");
    asm("loc_4A8732: calll *0x124(%eax);");
    asm("loc_4A8738: pop %ebp;");
    asm("loc_4A8739: add $0xA4,%esp;");
    asm("loc_4A873F: ret;");
    asm("loc_4A8740: fstp %st(0);");
    asm("loc_4A8742: pop %ebp;");
    asm("loc_4A8743: add $0xA4,%esp;");
    asm("loc_4A8749: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A8750() // _sub_4A8750
{
    __DEBUG_ASM(4A8750);
    // chunk 0x4A8750 _sub_4A8750
    asm("loc_4A8750: sub $8,%esp;");
    asm("loc_4A8753: push %ebx;");
    asm("loc_4A8754: push %esi;");
    asm("loc_4A8755: push %edi;");
    asm("loc_4A8756: mov %ecx,%edi;");
    asm("loc_4A8758: movl $0xFFFFFFFF,0xC(%esp);");
    asm("loc_4A8760: calll *_import_5C60D0;");
    asm("loc_4A8766: test %al,%al;");
    asm("loc_4A8768: jne loc_4A8788;");
    asm("loc_4A876A: call _sub_4C4670;");
    asm("loc_4A876F: mov %eax,0x10(%esp);");
    asm("loc_4A8773: push $0;");
    asm("loc_4A8775: lea 0x10(%esp),%eax;");
    asm("loc_4A8779: push %eax;");
    asm("loc_4A877A: lea 0x18(%esp),%ecx;");
    asm("loc_4A877E: push %ecx;");
    asm("loc_4A877F: calll *_import_5C6320;");
    asm("loc_4A8785: add $0xC,%esp;");
    asm("loc_4A8788: mov 0xC(%esp),%esi;");
    asm("loc_4A878C: lea (%esp),%esp;");
    asm("loc_4A8790: mov 0x41C(%edi),%eax;");
    asm("loc_4A8796: xor %edx,%edx;");
    asm("loc_4A8798: dec %eax;");
    asm("loc_4A8799: test %eax,%eax;");
    asm("loc_4A879B: mov $1,%bl;");
    asm("loc_4A879D: jle loc_4A8816;");
    asm("loc_4A879F: nop;");
    asm("loc_4A87A0: mov 0x410(%edi),%ecx;");
    asm("loc_4A87A6: mov (%ecx,%edx,8),%eax;");
    asm("loc_4A87A9: flds 4(%ecx,%edx,8);");
    asm("loc_4A87AD: cmp %esi,%eax;");
    asm("loc_4A87AF: flds 0xC(%ecx,%edx,8);");
    asm("loc_4A87B3: jne loc_4A87BF;");
    asm("loc_4A87B5: fxch;");
    asm("loc_4A87B7: fadds _data_5D49B0;");
    asm("loc_4A87BD: fxch;");
    asm("loc_4A87BF: cmp %esi,8(%ecx,%edx,8);");
    asm("loc_4A87C3: jne loc_4A87CB;");
    asm("loc_4A87C5: fadds _data_5D49B0;");
    asm("loc_4A87CB: fxch;");
    asm("loc_4A87CD: fcomp;");
    asm("loc_4A87CF: fnstsw %ax;");
    asm("loc_4A87D1: fstp %st(0);");
    asm("loc_4A87D3: test $0x41,%ah;");
    asm("loc_4A87D6: jne loc_4A8802;");
    asm("loc_4A87D8: mov 8(%ecx,%edx,8),%ebx;");
    asm("loc_4A87DC: mov 4(%ecx,%edx,8),%esi;");
    asm("loc_4A87E0: mov (%ecx,%edx,8),%eax;");
    asm("loc_4A87E3: mov %ebx,(%ecx,%edx,8);");
    asm("loc_4A87E6: mov 0xC(%ecx,%edx,8),%ebx;");
    asm("loc_4A87EA: mov %ebx,4(%ecx,%edx,8);");
    asm("loc_4A87EE: mov 0x410(%edi),%ecx;");
    asm("loc_4A87F4: mov %eax,8(%ecx,%edx,8);");
    asm("loc_4A87F8: mov %esi,0xC(%ecx,%edx,8);");
    asm("loc_4A87FC: mov 0xC(%esp),%esi;");
    asm("loc_4A8800: xor %bl,%bl;");
    asm("loc_4A8802: mov 0x41C(%edi),%eax;");
    asm("loc_4A8808: inc %edx;");
    asm("loc_4A8809: dec %eax;");
    asm("loc_4A880A: cmp %eax,%edx;");
    asm("loc_4A880C: jl loc_4A87A0;");
    asm("loc_4A880E: test %bl,%bl;");
    asm("loc_4A8810: je loc_4A8790;");
    asm("loc_4A8816: pop %edi;");
    asm("loc_4A8817: pop %esi;");
    asm("loc_4A8818: pop %ebx;");
    asm("loc_4A8819: add $8,%esp;");
    asm("loc_4A881C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A8820() // _sub_4A8820
{
    __DEBUG_ASM(4A8820);
    // chunk 0x4A8820 _sub_4A8820
    asm("loc_4A8820: sub $0x10,%esp;");
    asm("loc_4A8823: push %ebx;");
    asm("loc_4A8824: mov 0x18(%esp),%ebx;");
    asm("loc_4A8828: mov 0x14(%ebx),%eax;");
    asm("loc_4A882B: push %ebp;");
    asm("loc_4A882C: push %esi;");
    asm("loc_4A882D: push %edi;");
    asm("loc_4A882E: mov _import_5C70EC,%edi;");
    asm("loc_4A8834: push %eax;");
    asm("loc_4A8835: push $_data_5D0EC4;");
    asm("loc_4A883A: push $_data_66FC60;");
    asm("loc_4A883F: mov %ecx,%esi;");
    asm("loc_4A8841: call *%edi;");
    asm("loc_4A8843: mov 0x3B0(%esi),%ecx;");
    asm("loc_4A8849: mov (%ecx),%edx;");
    asm("loc_4A884B: add $0xC,%esp;");
    asm("loc_4A884E: push $0;");
    asm("loc_4A8850: push $_data_66FC60;");
    asm("loc_4A8855: push $0x1D;");
    asm("loc_4A8857: calll *0xA8(%edx);");
    asm("loc_4A885D: mov 0x18(%ebx),%eax;");
    asm("loc_4A8860: push %eax;");
    asm("loc_4A8861: push $_data_5D0EC4;");
    asm("loc_4A8866: push $_data_66FC60;");
    asm("loc_4A886B: call *%edi;");
    asm("loc_4A886D: mov 0x3B4(%esi),%ecx;");
    asm("loc_4A8873: mov (%ecx),%edx;");
    asm("loc_4A8875: add $0xC,%esp;");
    asm("loc_4A8878: push $0;");
    asm("loc_4A887A: push $_data_66FC60;");
    asm("loc_4A887F: push $0x1D;");
    asm("loc_4A8881: calll *0xA8(%edx);");
    asm("loc_4A8887: mov 0x1C(%ebx),%eax;");
    asm("loc_4A888A: push %eax;");
    asm("loc_4A888B: push $_data_5D0EC4;");
    asm("loc_4A8890: push $_data_66FC60;");
    asm("loc_4A8895: call *%edi;");
    asm("loc_4A8897: mov 0x3B8(%esi),%ecx;");
    asm("loc_4A889D: mov (%ecx),%edx;");
    asm("loc_4A889F: add $0xC,%esp;");
    asm("loc_4A88A2: push $0;");
    asm("loc_4A88A4: push $_data_66FC60;");
    asm("loc_4A88A9: push $0x1D;");
    asm("loc_4A88AB: calll *0xA8(%edx);");
    asm("loc_4A88B1: flds 0x10(%ebx);");
    asm("loc_4A88B4: call _sub_5B7EC0;");
    asm("loc_4A88B9: cltd;");
    asm("loc_4A88BA: mov $0x3C,%ecx;");
    asm("loc_4A88BF: idiv %ecx;");
    asm("loc_4A88C1: mov $0x3C,%ebp;");
    asm("loc_4A88C6: mov %edx,%ecx;");
    asm("loc_4A88C8: cltd;");
    asm("loc_4A88C9: idiv %ebp;");
    asm("loc_4A88CB: push %ecx;");
    asm("loc_4A88CC: push %edx;");
    asm("loc_4A88CD: push %eax;");
    asm("loc_4A88CE: push $_data_5D49B4;");
    asm("loc_4A88D3: push $_data_66FC60;");
    asm("loc_4A88D8: call *%edi;");
    asm("loc_4A88DA: mov 0x3AC(%esi),%ecx;");
    asm("loc_4A88E0: mov (%ecx),%edx;");
    asm("loc_4A88E2: add $0x14,%esp;");
    asm("loc_4A88E5: push $0;");
    asm("loc_4A88E7: push $_data_66FC60;");
    asm("loc_4A88EC: push $0x1D;");
    asm("loc_4A88EE: calll *0xA8(%edx);");
    asm("loc_4A88F4: mov 0x20(%ebx),%eax;");
    asm("loc_4A88F7: xor %ecx,%ecx;");
    asm("loc_4A88F9: xor %ebp,%ebp;");
    asm("loc_4A88FB: cmp %ecx,%eax;");
    asm("loc_4A88FD: mov %ecx,0x18(%esp);");
    asm("loc_4A8901: mov %ecx,0x10(%esp);");
    asm("loc_4A8905: mov %ecx,0x24(%esp);");
    asm("loc_4A8909: jle loc_4A898F;");
    asm("loc_4A890F: mov %eax,0x1C(%esp);");
    asm("loc_4A8913: mov 0x28(%esp),%eax;");
    asm("loc_4A8917: mov (%eax),%ecx;");
    asm("loc_4A8919: push %ecx;");
    asm("loc_4A891A: calll *_import_5C61FC;");
    asm("loc_4A8920: add $4,%esp;");
    asm("loc_4A8923: test %eax,%eax;");
    asm("loc_4A8925: je loc_4A8979;");
    asm("loc_4A8927: mov 0x10(%eax),%eax;");
    asm("loc_4A892A: test $0x20000,%eax;");
    asm("loc_4A892F: je loc_4A8944;");
    asm("loc_4A8931: mov 0x28(%esp),%edx;");
    asm("loc_4A8935: mov 0x18(%esp),%ecx;");
    asm("loc_4A8939: mov 4(%edx),%eax;");
    asm("loc_4A893C: add %eax,%ecx;");
    asm("loc_4A893E: mov %ecx,0x18(%esp);");
    asm("loc_4A8942: jmp loc_4A8979;");
    asm("loc_4A8944: test $0x100000,%eax;");
    asm("loc_4A8949: je loc_4A895E;");
    asm("loc_4A894B: mov 0x28(%esp),%ecx;");
    asm("loc_4A894F: mov 0x10(%esp),%eax;");
    asm("loc_4A8953: mov 4(%ecx),%edx;");
    asm("loc_4A8956: add %edx,%eax;");
    asm("loc_4A8958: mov %eax,0x10(%esp);");
    asm("loc_4A895C: jmp loc_4A8979;");
    asm("loc_4A895E: test $0x280000,%eax;");
    asm("loc_4A8963: je loc_4A8972;");
    asm("loc_4A8965: mov 0x28(%esp),%eax;");
    asm("loc_4A8969: mov 4(%eax),%ecx;");
    asm("loc_4A896C: add %ecx,0x24(%esp);");
    asm("loc_4A8970: jmp loc_4A8979;");
    asm("loc_4A8972: mov 0x28(%esp),%edx;");
    asm("loc_4A8976: add 4(%edx),%ebp;");
    asm("loc_4A8979: mov 0x28(%esp),%ecx;");
    asm("loc_4A897D: mov 0x1C(%esp),%eax;");
    asm("loc_4A8981: add $8,%ecx;");
    asm("loc_4A8984: dec %eax;");
    asm("loc_4A8985: mov %ecx,0x28(%esp);");
    asm("loc_4A8989: mov %eax,0x1C(%esp);");
    asm("loc_4A898D: jne loc_4A8913;");
    asm("loc_4A898F: push %ebp;");
    asm("loc_4A8990: push $_data_5D0EC4;");
    asm("loc_4A8995: push $_data_66FC60;");
    asm("loc_4A899A: call *%edi;");
    asm("loc_4A899C: mov 0x3BC(%esi),%ecx;");
    asm("loc_4A89A2: mov (%ecx),%eax;");
    asm("loc_4A89A4: add $0xC,%esp;");
    asm("loc_4A89A7: push $0;");
    asm("loc_4A89A9: push $_data_66FC60;");
    asm("loc_4A89AE: push $0x1D;");
    asm("loc_4A89B0: calll *0xA8(%eax);");
    asm("loc_4A89B6: mov 0x18(%esp),%ecx;");
    asm("loc_4A89BA: push %ecx;");
    asm("loc_4A89BB: push $_data_5D0EC4;");
    asm("loc_4A89C0: push $_data_66FC60;");
    asm("loc_4A89C5: call *%edi;");
    asm("loc_4A89C7: mov 0x3C0(%esi),%ecx;");
    asm("loc_4A89CD: mov (%ecx),%edx;");
    asm("loc_4A89CF: add $0xC,%esp;");
    asm("loc_4A89D2: push $0;");
    asm("loc_4A89D4: push $_data_66FC60;");
    asm("loc_4A89D9: push $0x1D;");
    asm("loc_4A89DB: calll *0xA8(%edx);");
    asm("loc_4A89E1: mov 0x10(%esp),%eax;");
    asm("loc_4A89E5: push %eax;");
    asm("loc_4A89E6: push $_data_5D0EC4;");
    asm("loc_4A89EB: push $_data_66FC60;");
    asm("loc_4A89F0: call *%edi;");
    asm("loc_4A89F2: mov 0x3C4(%esi),%ecx;");
    asm("loc_4A89F8: mov (%ecx),%edx;");
    asm("loc_4A89FA: add $0xC,%esp;");
    asm("loc_4A89FD: push $0;");
    asm("loc_4A89FF: push $_data_66FC60;");
    asm("loc_4A8A04: push $0x1D;");
    asm("loc_4A8A06: calll *0xA8(%edx);");
    asm("loc_4A8A0C: mov 0x24(%esp),%eax;");
    asm("loc_4A8A10: push %eax;");
    asm("loc_4A8A11: push $_data_5D0EC4;");
    asm("loc_4A8A16: push $_data_66FC60;");
    asm("loc_4A8A1B: call *%edi;");
    asm("loc_4A8A1D: mov 0x3C8(%esi),%ecx;");
    asm("loc_4A8A23: mov (%ecx),%edx;");
    asm("loc_4A8A25: add $0xC,%esp;");
    asm("loc_4A8A28: push $0;");
    asm("loc_4A8A2A: push $_data_66FC60;");
    asm("loc_4A8A2F: push $0x1D;");
    asm("loc_4A8A31: calll *0xA8(%edx);");
    asm("loc_4A8A37: mov 0x10(%esp),%ecx;");
    asm("loc_4A8A3B: mov 0x24(%esp),%eax;");
    asm("loc_4A8A3F: mov 0x18(%esp),%edx;");
    asm("loc_4A8A43: add %ecx,%eax;");
    asm("loc_4A8A45: add %edx,%eax;");
    asm("loc_4A8A47: add %ebp,%eax;");
    asm("loc_4A8A49: push %eax;");
    asm("loc_4A8A4A: push $_data_5D0EC4;");
    asm("loc_4A8A4F: push $_data_66FC60;");
    asm("loc_4A8A54: call *%edi;");
    asm("loc_4A8A56: mov 0x3A8(%esi),%ecx;");
    asm("loc_4A8A5C: mov (%ecx),%edx;");
    asm("loc_4A8A5E: add $0xC,%esp;");
    asm("loc_4A8A61: push $0;");
    asm("loc_4A8A63: push $_data_66FC60;");
    asm("loc_4A8A68: push $0x1D;");
    asm("loc_4A8A6A: calll *0xA8(%edx);");
    asm("loc_4A8A70: mov (%ebx),%eax;");
    asm("loc_4A8A72: push %eax;");
    asm("loc_4A8A73: push $_data_5D0EC4;");
    asm("loc_4A8A78: push $_data_66FC60;");
    asm("loc_4A8A7D: call *%edi;");
    asm("loc_4A8A7F: mov 0x3A4(%esi),%ecx;");
    asm("loc_4A8A85: mov (%ecx),%edx;");
    asm("loc_4A8A87: add $0xC,%esp;");
    asm("loc_4A8A8A: push $0;");
    asm("loc_4A8A8C: push $_data_66FC60;");
    asm("loc_4A8A91: push $0x1D;");
    asm("loc_4A8A93: calll *0xA8(%edx);");
    asm("loc_4A8A99: mov 0x24(%ebx),%eax;");
    asm("loc_4A8A9C: push %eax;");
    asm("loc_4A8A9D: push $_data_5D0EC4;");
    asm("loc_4A8AA2: push $_data_66FC60;");
    asm("loc_4A8AA7: call *%edi;");
    asm("loc_4A8AA9: mov 0x398(%esi),%ecx;");
    asm("loc_4A8AAF: mov (%ecx),%edx;");
    asm("loc_4A8AB1: add $0xC,%esp;");
    asm("loc_4A8AB4: push $0;");
    asm("loc_4A8AB6: push $_data_66FC60;");
    asm("loc_4A8ABB: push $0x1D;");
    asm("loc_4A8ABD: calll *0xA8(%edx);");
    asm("loc_4A8AC3: mov 0x28(%ebx),%eax;");
    asm("loc_4A8AC6: push $0xFFFFFFFF;");
    asm("loc_4A8AC8: push %eax;");
    asm("loc_4A8AC9: push $_data_66FC60;");
    asm("loc_4A8ACE: call _sub_4779A0;");
    asm("loc_4A8AD3: mov 0x39C(%esi),%ecx;");
    asm("loc_4A8AD9: mov (%ecx),%edx;");
    asm("loc_4A8ADB: add $0xC,%esp;");
    asm("loc_4A8ADE: push $0;");
    asm("loc_4A8AE0: push $_data_66FC60;");
    asm("loc_4A8AE5: push $0x1D;");
    asm("loc_4A8AE7: calll *0xA8(%edx);");
    asm("loc_4A8AED: mov 0x2C(%ebx),%eax;");
    asm("loc_4A8AF0: cmp $0x7FFFFFFF,%eax;");
    asm("loc_4A8AF5: jne loc_4A8B10;");
    asm("loc_4A8AF7: mov _data_6119F8,%eax;");
    asm("loc_4A8AFC: mov _data_67ECA8,%ecx;");
    asm("loc_4A8B02: push %eax;");
    asm("loc_4A8B03: push $_data_66FC60;");
    asm("loc_4A8B08: push $0x3E4;");
    asm("loc_4A8B0D: push %ecx;");
    asm("loc_4A8B0E: jmp loc_4A8B3D;");
    asm("loc_4A8B10: test %eax,%eax;");
    asm("loc_4A8B12: jle loc_4A8B26;");
    asm("loc_4A8B14: push $0xFFFFFFFF;");
    asm("loc_4A8B16: push %eax;");
    asm("loc_4A8B17: push $_data_66FC60;");
    asm("loc_4A8B1C: call _sub_4779A0;");
    asm("loc_4A8B21: add $0xC,%esp;");
    asm("loc_4A8B24: jmp loc_4A8B45;");
    asm("loc_4A8B26: mov _data_6119F8,%edx;");
    asm("loc_4A8B2C: mov _data_67ECA8,%eax;");
    asm("loc_4A8B31: push %edx;");
    asm("loc_4A8B32: push $_data_66FC60;");
    asm("loc_4A8B37: push $0x620;");
    asm("loc_4A8B3C: push %eax;");
    asm("loc_4A8B3D: call _sub_4347E0;");
    asm("loc_4A8B42: add $0x10,%esp;");
    asm("loc_4A8B45: mov 0x3A0(%esi),%ecx;");
    asm("loc_4A8B4B: mov (%ecx),%edx;");
    asm("loc_4A8B4D: push $0;");
    asm("loc_4A8B4F: push $_data_66FC60;");
    asm("loc_4A8B54: push $0x1D;");
    asm("loc_4A8B56: calll *0xA8(%edx);");
    asm("loc_4A8B5C: mov 0x414(%esi),%edx;");
    asm("loc_4A8B62: mov 0x410(%esi),%ecx;");
    asm("loc_4A8B68: mov %edx,%eax;");
    asm("loc_4A8B6A: cmp %edx,%eax;");
    asm("loc_4A8B6C: je loc_4A8B84;");
    asm("loc_4A8B6E: mov %edi,%edi;");
    asm("loc_4A8B70: mov (%eax),%edi;");
    asm("loc_4A8B72: mov %edi,(%ecx);");
    asm("loc_4A8B74: mov 4(%eax),%edi;");
    asm("loc_4A8B77: mov %edi,4(%ecx);");
    asm("loc_4A8B7A: add $8,%eax;");
    asm("loc_4A8B7D: add $8,%ecx;");
    asm("loc_4A8B80: cmp %edx,%eax;");
    asm("loc_4A8B82: jne loc_4A8B70;");
    asm("loc_4A8B84: mov %ecx,0x414(%esi);");
    asm("loc_4A8B8A: mov 0x30(%ebx),%ebx;");
    asm("loc_4A8B8D: test %ebx,%ebx;");
    asm("loc_4A8B8F: movl $0,0x41C(%esi);");
    asm("loc_4A8B99: jle loc_4A8E13;");
    asm("loc_4A8B9F: mov %ebx,0x1C(%esp);");
    asm("loc_4A8BA3: mov 0x2C(%esp),%edi;");
    asm("loc_4A8BA7: mov (%edi),%ecx;");
    asm("loc_4A8BA9: push $1;");
    asm("loc_4A8BAB: push $0;");
    asm("loc_4A8BAD: lea 0x30(%esp),%eax;");
    asm("loc_4A8BB1: push %eax;");
    asm("loc_4A8BB2: push %ecx;");
    asm("loc_4A8BB3: call _sub_4C4DA0;");
    asm("loc_4A8BB8: add $0x10,%esp;");
    asm("loc_4A8BBB: test %al,%al;");
    asm("loc_4A8BBD: je loc_4A8DFD;");
    asm("loc_4A8BC3: testb $1,0x28(%esp);");
    asm("loc_4A8BC8: je loc_4A8DFD;");
    asm("loc_4A8BCE: mov (%edi),%edx;");
    asm("loc_4A8BD0: push %edx;");
    asm("loc_4A8BD1: calll *_import_5C63F4;");
    asm("loc_4A8BD7: add $4,%esp;");
    asm("loc_4A8BDA: test %al,%al;");
    asm("loc_4A8BDC: jne loc_4A8DFD;");
    asm("loc_4A8BE2: mov (%edi),%eax;");
    asm("loc_4A8BE4: flds 4(%edi);");
    asm("loc_4A8BE7: mov 0x414(%esi),%edi;");
    asm("loc_4A8BED: mov 0x418(%esi),%ecx;");
    asm("loc_4A8BF3: sub %edi,%ecx;");
    asm("loc_4A8BF5: sar $3,%ecx;");
    asm("loc_4A8BF8: cmp $1,%ecx;");
    asm("loc_4A8BFB: fstps 0x14(%esp);");
    asm("loc_4A8BFF: mov %eax,0x10(%esp);");
    asm("loc_4A8C03: mov %edi,%ebx;");
    asm("loc_4A8C05: jae loc_4A8CFA;");
    asm("loc_4A8C0B: mov 0x410(%esi),%ecx;");
    asm("loc_4A8C11: test %ecx,%ecx;");
    asm("loc_4A8C13: je loc_4A8C21;");
    asm("loc_4A8C15: mov %edi,%eax;");
    asm("loc_4A8C17: sub %ecx,%eax;");
    asm("loc_4A8C19: sar $3,%eax;");
    asm("loc_4A8C1C: cmp $1,%eax;");
    asm("loc_4A8C1F: ja loc_4A8C26;");
    asm("loc_4A8C21: mov $1,%eax;");
    asm("loc_4A8C26: test %ecx,%ecx;");
    asm("loc_4A8C28: jne loc_4A8C2E;");
    asm("loc_4A8C2A: xor %edi,%edi;");
    asm("loc_4A8C2C: jmp loc_4A8C33;");
    asm("loc_4A8C2E: sub %ecx,%edi;");
    asm("loc_4A8C30: sar $3,%edi;");
    asm("loc_4A8C33: add %edi,%eax;");
    asm("loc_4A8C35: test %eax,%eax;");
    asm("loc_4A8C37: mov %eax,0x18(%esp);");
    asm("loc_4A8C3B: jge loc_4A8C3F;");
    asm("loc_4A8C3D: xor %eax,%eax;");
    asm("loc_4A8C3F: lea (,%eax,8),%edx;");
    asm("loc_4A8C46: push %edx;");
    asm("loc_4A8C47: call _sub_5B7E84;");
    asm("loc_4A8C4C: mov 0x410(%esi),%ebp;");
    asm("loc_4A8C52: add $4,%esp;");
    asm("loc_4A8C55: cmp %ebx,%ebp;");
    asm("loc_4A8C57: mov %eax,0x24(%esp);");
    asm("loc_4A8C5B: mov %eax,%edi;");
    asm("loc_4A8C5D: je loc_4A8C74;");
    asm("loc_4A8C5F: nop;");
    asm("loc_4A8C60: push %ebp;");
    asm("loc_4A8C61: push %edi;");
    asm("loc_4A8C62: call _sub_4E5FC0;");
    asm("loc_4A8C67: add $8,%ebp;");
    asm("loc_4A8C6A: add $8,%esp;");
    asm("loc_4A8C6D: add $8,%edi;");
    asm("loc_4A8C70: cmp %ebx,%ebp;");
    asm("loc_4A8C72: jne loc_4A8C60;");
    asm("loc_4A8C74: lea 0x10(%esp),%eax;");
    asm("loc_4A8C78: push %eax;");
    asm("loc_4A8C79: push %edi;");
    asm("loc_4A8C7A: call _sub_4E5FC0;");
    asm("loc_4A8C7F: mov 0x414(%esi),%ebp;");
    asm("loc_4A8C85: add $8,%esp;");
    asm("loc_4A8C88: cmp %ebp,%ebx;");
    asm("loc_4A8C8A: je loc_4A8CA5;");
    asm("loc_4A8C8C: sub %ebx,%edi;");
    asm("loc_4A8C8E: add $8,%edi;");
    asm("loc_4A8C91: lea (%ebx,%edi),%ecx;");
    asm("loc_4A8C94: push %ebx;");
    asm("loc_4A8C95: push %ecx;");
    asm("loc_4A8C96: call _sub_4E5FC0;");
    asm("loc_4A8C9B: add $8,%ebx;");
    asm("loc_4A8C9E: add $8,%esp;");
    asm("loc_4A8CA1: cmp %ebp,%ebx;");
    asm("loc_4A8CA3: jne loc_4A8C91;");
    asm("loc_4A8CA5: mov 0x410(%esi),%edx;");
    asm("loc_4A8CAB: push %edx;");
    asm("loc_4A8CAC: call _sub_5B7E1D;");
    asm("loc_4A8CB1: mov 0x28(%esp),%ecx;");
    asm("loc_4A8CB5: mov 0x1C(%esp),%eax;");
    asm("loc_4A8CB9: lea (%ecx,%eax,8),%edx;");
    asm("loc_4A8CBC: mov %edx,0x418(%esi);");
    asm("loc_4A8CC2: mov 0x410(%esi),%edx;");
    asm("loc_4A8CC8: add $4,%esp;");
    asm("loc_4A8CCB: test %edx,%edx;");
    asm("loc_4A8CCD: jne loc_4A8CE0;");
    asm("loc_4A8CCF: xor %eax,%eax;");
    asm("loc_4A8CD1: lea 8(%ecx,%eax,8),%eax;");
    asm("loc_4A8CD5: mov %ecx,0x410(%esi);");
    asm("loc_4A8CDB: jmp loc_4A8DED;");
    asm("loc_4A8CE0: mov 0x414(%esi),%eax;");
    asm("loc_4A8CE6: sub %edx,%eax;");
    asm("loc_4A8CE8: sar $3,%eax;");
    asm("loc_4A8CEB: lea 8(%ecx,%eax,8),%eax;");
    asm("loc_4A8CEF: mov %ecx,0x410(%esi);");
    asm("loc_4A8CF5: jmp loc_4A8DED;");
    asm("loc_4A8CFA: mov %edi,%ecx;");
    asm("loc_4A8CFC: sub %ebx,%ecx;");
    asm("loc_4A8CFE: sar $3,%ecx;");
    asm("loc_4A8D01: cmp $1,%ecx;");
    asm("loc_4A8D04: jae loc_4A8D78;");
    asm("loc_4A8D06: cmp %edi,%ebx;");
    asm("loc_4A8D08: mov %ebx,%eax;");
    asm("loc_4A8D0A: je loc_4A8D23;");
    asm("loc_4A8D0C: lea (%esp),%esp;");
    asm("loc_4A8D10: lea 8(%eax),%ebp;");
    asm("loc_4A8D13: push %eax;");
    asm("loc_4A8D14: push %ebp;");
    asm("loc_4A8D15: call _sub_4E5FC0;");
    asm("loc_4A8D1A: mov %ebp,%eax;");
    asm("loc_4A8D1C: add $8,%esp;");
    asm("loc_4A8D1F: cmp %edi,%eax;");
    asm("loc_4A8D21: jne loc_4A8D10;");
    asm("loc_4A8D23: mov 0x414(%esi),%ecx;");
    asm("loc_4A8D29: mov %ecx,%edx;");
    asm("loc_4A8D2B: sub %ebx,%edx;");
    asm("loc_4A8D2D: sar $3,%edx;");
    asm("loc_4A8D30: mov $1,%eax;");
    asm("loc_4A8D35: sub %edx,%eax;");
    asm("loc_4A8D37: mov %ecx,%edi;");
    asm("loc_4A8D39: je loc_4A8D54;");
    asm("loc_4A8D3B: mov %eax,%ebp;");
    asm("loc_4A8D3D: lea (%ecx),%ecx;");
    asm("loc_4A8D40: lea 0x10(%esp),%eax;");
    asm("loc_4A8D44: push %eax;");
    asm("loc_4A8D45: push %edi;");
    asm("loc_4A8D46: call _sub_4E5FC0;");
    asm("loc_4A8D4B: add $8,%esp;");
    asm("loc_4A8D4E: add $8,%edi;");
    asm("loc_4A8D51: dec %ebp;");
    asm("loc_4A8D52: jne loc_4A8D40;");
    asm("loc_4A8D54: mov 0x414(%esi),%eax;");
    asm("loc_4A8D5A: cmp %eax,%ebx;");
    asm("loc_4A8D5C: je loc_4A8DE4;");
    asm("loc_4A8D62: mov 0x10(%esp),%ecx;");
    asm("loc_4A8D66: mov %ecx,(%ebx);");
    asm("loc_4A8D68: mov 0x14(%esp),%edx;");
    asm("loc_4A8D6C: mov %edx,4(%ebx);");
    asm("loc_4A8D6F: add $8,%ebx;");
    asm("loc_4A8D72: cmp %eax,%ebx;");
    asm("loc_4A8D74: jne loc_4A8D62;");
    asm("loc_4A8D76: jmp loc_4A8DE4;");
    asm("loc_4A8D78: lea -8(%edi),%ebp;");
    asm("loc_4A8D7B: cmp %edi,%ebp;");
    asm("loc_4A8D7D: mov %edi,0x24(%esp);");
    asm("loc_4A8D81: je loc_4A8DA3;");
    asm("loc_4A8D83: mov 0x24(%esp),%eax;");
    asm("loc_4A8D87: push %ebp;");
    asm("loc_4A8D88: push %eax;");
    asm("loc_4A8D89: call _sub_4E5FC0;");
    asm("loc_4A8D8E: mov 0x2C(%esp),%edx;");
    asm("loc_4A8D92: add $8,%edx;");
    asm("loc_4A8D95: add $8,%ebp;");
    asm("loc_4A8D98: add $8,%esp;");
    asm("loc_4A8D9B: cmp %edi,%ebp;");
    asm("loc_4A8D9D: mov %edx,0x24(%esp);");
    asm("loc_4A8DA1: jne loc_4A8D83;");
    asm("loc_4A8DA3: mov 0x414(%esi),%ecx;");
    asm("loc_4A8DA9: lea -8(%ecx),%eax;");
    asm("loc_4A8DAC: cmp %eax,%ebx;");
    asm("loc_4A8DAE: je loc_4A8DC5;");
    asm("loc_4A8DB0: mov -8(%eax),%edx;");
    asm("loc_4A8DB3: sub $8,%eax;");
    asm("loc_4A8DB6: sub $8,%ecx;");
    asm("loc_4A8DB9: cmp %ebx,%eax;");
    asm("loc_4A8DBB: mov %edx,(%ecx);");
    asm("loc_4A8DBD: mov 4(%eax),%edx;");
    asm("loc_4A8DC0: mov %edx,4(%ecx);");
    asm("loc_4A8DC3: jne loc_4A8DB0;");
    asm("loc_4A8DC5: lea 8(%ebx),%eax;");
    asm("loc_4A8DC8: cmp %eax,%ebx;");
    asm("loc_4A8DCA: je loc_4A8DE4;");
    asm("loc_4A8DCC: lea (%esp),%esp;");
    asm("loc_4A8DD0: mov 0x10(%esp),%ecx;");
    asm("loc_4A8DD4: mov %ecx,(%ebx);");
    asm("loc_4A8DD6: mov 0x14(%esp),%edx;");
    asm("loc_4A8DDA: mov %edx,4(%ebx);");
    asm("loc_4A8DDD: add $8,%ebx;");
    asm("loc_4A8DE0: cmp %eax,%ebx;");
    asm("loc_4A8DE2: jne loc_4A8DD0;");
    asm("loc_4A8DE4: mov 0x414(%esi),%eax;");
    asm("loc_4A8DEA: add $8,%eax;");
    asm("loc_4A8DED: mov 0x2C(%esp),%edi;");
    asm("loc_4A8DF1: mov %eax,0x414(%esi);");
    asm("loc_4A8DF7: incl 0x41C(%esi);");
    asm("loc_4A8DFD: mov 0x1C(%esp),%eax;");
    asm("loc_4A8E01: add $8,%edi;");
    asm("loc_4A8E04: dec %eax;");
    asm("loc_4A8E05: mov %edi,0x2C(%esp);");
    asm("loc_4A8E09: mov %eax,0x1C(%esp);");
    asm("loc_4A8E0D: jne loc_4A8BA3;");
    asm("loc_4A8E13: mov %esi,%ecx;");
    asm("loc_4A8E15: call _sub_4A8750;");
    asm("loc_4A8E1A: mov 0x41C(%esi),%edx;");
    asm("loc_4A8E20: mov 0x394(%esi),%ecx;");
    asm("loc_4A8E26: mov (%ecx),%eax;");
    asm("loc_4A8E28: dec %edx;");
    asm("loc_4A8E29: push %edx;");
    asm("loc_4A8E2A: push $0;");
    asm("loc_4A8E2C: push $0x37;");
    asm("loc_4A8E2E: calll *0xA8(%eax);");
    asm("loc_4A8E34: pop %edi;");
    asm("loc_4A8E35: pop %esi;");
    asm("loc_4A8E36: pop %ebp;");
    asm("loc_4A8E37: pop %ebx;");
    asm("loc_4A8E38: add $0x10,%esp;");
    asm("loc_4A8E3B: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A8E40() // _sub_4A8E40
{
    __DEBUG_ASM(4A8E40);
    // chunk 0x4A8E40 _sub_4A8E40
    asm("loc_4A8E40: mov _data_6721BC,%ecx;");
    asm("loc_4A8E46: test %ecx,%ecx;");
    asm("loc_4A8E48: je loc_4A8E5F;");
    asm("loc_4A8E4A: mov 0xC(%esp),%eax;");
    asm("loc_4A8E4E: mov 8(%esp),%edx;");
    asm("loc_4A8E52: push %eax;");
    asm("loc_4A8E53: mov 8(%esp),%eax;");
    asm("loc_4A8E57: push %edx;");
    asm("loc_4A8E58: push %eax;");
    asm("loc_4A8E59: call _sub_4A8820;");
    asm("loc_4A8E5E: ret;");
    asm("loc_4A8E5F: mov 0xC(%esp),%ecx;");
    asm("loc_4A8E63: mov 4(%esp),%edx;");
    asm("loc_4A8E67: mov 0x30(%edx),%eax;");
    asm("loc_4A8E6A: push %ecx;");
    asm("loc_4A8E6B: push %eax;");
    asm("loc_4A8E6C: call _sub_483F30;");
    asm("loc_4A8E71: add $8,%esp;");
    asm("loc_4A8E74: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A8E80() // _sub_4A8E80
{
    __DEBUG_ASM(4A8E80);
    // chunk 0x4A8E80 _sub_4A8E80
    asm("loc_4A8E80: mov %fs:0,%eax;");
    asm("loc_4A8E86: push $0xFFFFFFFF;");
    asm("loc_4A8E88: push $_sub_5BCD3A;");
    asm("loc_4A8E8D: push %eax;");
    asm("loc_4A8E8E: mov %esp,%fs:0;");
    asm("loc_4A8E95: sub $0x18,%esp;");
    asm("loc_4A8E98: push %ebx;");
    asm("loc_4A8E99: push %ebp;");
    asm("loc_4A8E9A: push %esi;");
    asm("loc_4A8E9B: mov %ecx,%esi;");
    asm("loc_4A8E9D: mov 0x410(%esi),%ecx;");
    asm("loc_4A8EA3: xor %ebp,%ebp;");
    asm("loc_4A8EA5: cmp %ebp,%ecx;");
    asm("loc_4A8EA7: push %edi;");
    asm("loc_4A8EA8: je loc_4A907A;");
    asm("loc_4A8EAE: mov 0x414(%esi),%eax;");
    asm("loc_4A8EB4: sub %ecx,%eax;");
    asm("loc_4A8EB6: sar $3,%eax;");
    asm("loc_4A8EB9: cmp %ebp,%eax;");
    asm("loc_4A8EBB: je loc_4A907A;");
    asm("loc_4A8EC1: mov 0x38(%esp),%ebx;");
    asm("loc_4A8EC5: mov %ecx,%edi;");
    asm("loc_4A8EC7: mov (%edi,%ebx,8),%eax;");
    asm("loc_4A8ECA: push %eax;");
    asm("loc_4A8ECB: calll *_import_5C6350;");
    asm("loc_4A8ED1: add $4,%esp;");
    asm("loc_4A8ED4: cmp %ebp,%eax;");
    asm("loc_4A8ED6: mov %eax,0x10(%esp);");
    asm("loc_4A8EDA: je loc_4A907A;");
    asm("loc_4A8EE0: mov 0x330(%esi),%ecx;");
    asm("loc_4A8EE6: mov (%edi,%ebx,8),%edx;");
    asm("loc_4A8EE9: mov (%ecx),%eax;");
    asm("loc_4A8EEB: push %ebp;");
    asm("loc_4A8EEC: push %edx;");
    asm("loc_4A8EED: mov %eax,0x40(%esp);");
    asm("loc_4A8EF1: calll *_import_5C608C;");
    asm("loc_4A8EF7: mov 0x330(%esi),%ecx;");
    asm("loc_4A8EFD: add $4,%esp;");
    asm("loc_4A8F00: push %eax;");
    asm("loc_4A8F01: mov 0x40(%esp),%eax;");
    asm("loc_4A8F05: push $0x1E;");
    asm("loc_4A8F07: calll *0xA8(%eax);");
    asm("loc_4A8F0D: lea 0x3CC(%esi),%eax;");
    asm("loc_4A8F13: mov $0xD,%edx;");
    asm("loc_4A8F18: mov $0xFC,%bl;");
    asm("loc_4A8F1A: lea (%ebx),%ebx;");
    asm("loc_4A8F20: mov -0x34(%eax),%ecx;");
    asm("loc_4A8F23: and %bl,0x6C(%ecx);");
    asm("loc_4A8F26: mov (%eax),%ecx;");
    asm("loc_4A8F28: and %bl,0x6C(%ecx);");
    asm("loc_4A8F2B: add $4,%eax;");
    asm("loc_4A8F2E: dec %edx;");
    asm("loc_4A8F2F: jne loc_4A8F20;");
    asm("loc_4A8F31: mov 0x400(%esi),%eax;");
    asm("loc_4A8F37: mov 0x6C(%eax),%cl;");
    asm("loc_4A8F3A: mov $2,%bl;");
    asm("loc_4A8F3C: or %bl,%cl;");
    asm("loc_4A8F3E: mov %cl,0x6C(%eax);");
    asm("loc_4A8F41: mov 0x404(%esi),%eax;");
    asm("loc_4A8F47: mov 0x6C(%eax),%dl;");
    asm("loc_4A8F4A: mov $3,%cl;");
    asm("loc_4A8F4C: or %cl,%dl;");
    asm("loc_4A8F4E: mov %dl,0x6C(%eax);");
    asm("loc_4A8F51: mov 0x408(%esi),%eax;");
    asm("loc_4A8F57: or %cl,0x6C(%eax);");
    asm("loc_4A8F5A: mov 0x38(%esp),%al;");
    asm("loc_4A8F5E: push $0xC;");
    asm("loc_4A8F60: mov %al,0x20(%esp);");
    asm("loc_4A8F64: call _sub_5B7E84;");
    asm("loc_4A8F69: mov %eax,(%eax);");
    asm("loc_4A8F6B: mov %eax,4(%eax);");
    asm("loc_4A8F6E: add $4,%esp;");
    asm("loc_4A8F71: mov %eax,0x20(%esp);");
    asm("loc_4A8F75: mov %ebp,0x24(%esp);");
    asm("loc_4A8F79: push $0x9CA4;");
    asm("loc_4A8F7E: lea 0x18(%esp),%ecx;");
    asm("loc_4A8F82: mov %ebp,0x34(%esp);");
    asm("loc_4A8F86: calll *_import_5C62B8;");
    asm("loc_4A8F8C: mov (%eax),%edx;");
    asm("loc_4A8F8E: mov %eax,%ecx;");
    asm("loc_4A8F90: movb $1,0x30(%esp);");
    asm("loc_4A8F95: calll *0x1C(%edx);");
    asm("loc_4A8F98: mov %eax,0x38(%esp);");
    asm("loc_4A8F9C: mov 0x20(%esp),%eax;");
    asm("loc_4A8FA0: mov 4(%eax),%ebp;");
    asm("loc_4A8FA3: lea 4(%eax),%edi;");
    asm("loc_4A8FA6: mov %bl,0x30(%esp);");
    asm("loc_4A8FAA: push $0xC;");
    asm("loc_4A8FAC: mov %eax,%ebx;");
    asm("loc_4A8FAE: call _sub_5B7E84;");
    asm("loc_4A8FB3: add $4,%esp;");
    asm("loc_4A8FB6: test %ebp,%ebp;");
    asm("loc_4A8FB8: mov %ebx,(%eax);");
    asm("loc_4A8FBA: jne loc_4A8FBE;");
    asm("loc_4A8FBC: mov %eax,%ebp;");
    asm("loc_4A8FBE: mov %ebp,4(%eax);");
    asm("loc_4A8FC1: mov %eax,(%edi);");
    asm("loc_4A8FC3: mov 4(%eax),%ecx;");
    asm("loc_4A8FC6: mov %eax,(%ecx);");
    asm("loc_4A8FC8: lea 0x38(%esp),%ecx;");
    asm("loc_4A8FCC: push %ecx;");
    asm("loc_4A8FCD: add $8,%eax;");
    asm("loc_4A8FD0: push %eax;");
    asm("loc_4A8FD1: call _sub_46EA00;");
    asm("loc_4A8FD6: mov 0x2C(%esp),%ecx;");
    asm("loc_4A8FDA: add $8,%esp;");
    asm("loc_4A8FDD: inc %ecx;");
    asm("loc_4A8FDE: mov %ecx,0x24(%esp);");
    asm("loc_4A8FE2: mov 0x38(%esp),%ecx;");
    asm("loc_4A8FE6: test %ecx,%ecx;");
    asm("loc_4A8FE8: movb $1,0x30(%esp);");
    asm("loc_4A8FED: je loc_4A8FFD;");
    asm("loc_4A8FEF: mov (%ecx),%edx;");
    asm("loc_4A8FF1: push $1;");
    asm("loc_4A8FF3: calll *(%edx);");
    asm("loc_4A8FF5: movl $0,0x38(%esp);");
    asm("loc_4A8FFD: lea 0x14(%esp),%ecx;");
    asm("loc_4A9001: movb $0,0x30(%esp);");
    asm("loc_4A9006: calll *_import_5C62B4;");
    asm("loc_4A900C: mov 0x10(%esp),%ecx;");
    asm("loc_4A9010: lea 0x1C(%esp),%eax;");
    asm("loc_4A9014: push %eax;");
    asm("loc_4A9015: push %ecx;");
    asm("loc_4A9016: call _sub_57DA40;");
    asm("loc_4A901B: mov 0x400(%esi),%esi;");
    asm("loc_4A9021: add $8,%esp;");
    asm("loc_4A9024: mov %esi,%ecx;");
    asm("loc_4A9026: call _sub_57B370;");
    asm("loc_4A902B: lea 0x1C(%esp),%edx;");
    asm("loc_4A902F: push %edx;");
    asm("loc_4A9030: mov %esi,%ecx;");
    asm("loc_4A9032: call _sub_57B3E0;");
    asm("loc_4A9037: push $0;");
    asm("loc_4A9039: push $0;");
    asm("loc_4A903B: mov %esi,%ecx;");
    asm("loc_4A903D: call _sub_5798B0;");
    asm("loc_4A9042: mov 0x20(%esp),%eax;");
    asm("loc_4A9046: mov (%eax),%esi;");
    asm("loc_4A9048: cmp %eax,%esi;");
    asm("loc_4A904A: movl $0xFFFFFFFF,0x30(%esp);");
    asm("loc_4A9052: mov %eax,%edi;");
    asm("loc_4A9054: je loc_4A9071;");
    asm("loc_4A9056: mov %esi,%eax;");
    asm("loc_4A9058: mov (%esi),%esi;");
    asm("loc_4A905A: push %eax;");
    asm("loc_4A905B: lea 0x14(%esp),%eax;");
    asm("loc_4A905F: push %eax;");
    asm("loc_4A9060: lea 0x24(%esp),%ecx;");
    asm("loc_4A9064: call _sub_46D680;");
    asm("loc_4A9069: cmp %edi,%esi;");
    asm("loc_4A906B: jne loc_4A9056;");
    asm("loc_4A906D: mov 0x20(%esp),%eax;");
    asm("loc_4A9071: push %eax;");
    asm("loc_4A9072: call _sub_5B7E1D;");
    asm("loc_4A9077: add $4,%esp;");
    asm("loc_4A907A: mov 0x28(%esp),%ecx;");
    asm("loc_4A907E: pop %edi;");
    asm("loc_4A907F: pop %esi;");
    asm("loc_4A9080: pop %ebp;");
    asm("loc_4A9081: pop %ebx;");
    asm("loc_4A9082: mov %ecx,%fs:0;");
    asm("loc_4A9089: add $0x24,%esp;");
    asm("loc_4A908C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9090() // _sub_4A9090
{
    __DEBUG_ASM(4A9090);
    // chunk 0x4A9090 _sub_4A9090
    asm("loc_4A9090: push %ebx;");
    asm("loc_4A9091: mov %ecx,%ebx;");
    asm("loc_4A9093: xor %eax,%eax;");
    asm("loc_4A9095: push %esi;");
    asm("loc_4A9096: mov 0xC(%esp),%esi;");
    asm("loc_4A909A: cmp %eax,%esi;");
    asm("loc_4A909C: mov %eax,8(%ebx);");
    asm("loc_4A909F: mov %al,0xC(%ebx);");
    asm("loc_4A90A2: movl $_off_5CB554,(%ebx);");
    asm("loc_4A90A8: mov %eax,4(%ebx);");
    asm("loc_4A90AB: jne loc_4A90B2;");
    asm("loc_4A90AD: mov %al,0xC(%ebx);");
    asm("loc_4A90B0: jmp loc_4A90E7;");
    asm("loc_4A90B2: push %ebp;");
    asm("loc_4A90B3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A90B6: xor %eax,%eax;");
    asm("loc_4A90B8: push %edi;");
    asm("loc_4A90B9: mov %esi,%edi;");
    asm("loc_4A90BB: repne scas (%edi),%al;");
    asm("loc_4A90BD: not %ecx;");
    asm("loc_4A90BF: dec %ecx;");
    asm("loc_4A90C0: mov %ecx,%eax;");
    asm("loc_4A90C2: cmp $0x20,%eax;");
    asm("loc_4A90C5: lea 0xC(%ebx),%ebp;");
    asm("loc_4A90C8: jb loc_4A90CF;");
    asm("loc_4A90CA: mov $0x1F,%eax;");
    asm("loc_4A90CF: mov %eax,%ecx;");
    asm("loc_4A90D1: mov %ecx,%edx;");
    asm("loc_4A90D3: shr $2,%ecx;");
    asm("loc_4A90D6: mov %ebp,%edi;");
    asm("loc_4A90D8: rep movsl (%esi),(%edi);");
    asm("loc_4A90DA: mov %edx,%ecx;");
    asm("loc_4A90DC: and $3,%ecx;");
    asm("loc_4A90DF: rep movsb (%esi),(%edi);");
    asm("loc_4A90E1: pop %edi;");
    asm("loc_4A90E2: movb $0,(%eax,%ebp);");
    asm("loc_4A90E6: pop %ebp;");
    asm("loc_4A90E7: push %ebx;");
    asm("loc_4A90E8: mov %eax,8(%ebx);");
    asm("loc_4A90EB: call _sub_59DAB0;");
    asm("loc_4A90F0: add $4,%esp;");
    asm("loc_4A90F3: pop %esi;");
    asm("loc_4A90F4: movl $_off_5D49DC,(%ebx);");
    asm("loc_4A90FA: mov %ebx,%eax;");
    asm("loc_4A90FC: pop %ebx;");
    asm("loc_4A90FD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9100() // _sub_4A9100
{
    __DEBUG_ASM(4A9100);
    // chunk 0x4A9100 _sub_4A9100
    asm("loc_4A9100: push $0xFFFFFFFF;");
    asm("loc_4A9102: push $_sub_5BCD71;");
    asm("loc_4A9107: mov %fs:0,%eax;");
    asm("loc_4A910D: push %eax;");
    asm("loc_4A910E: mov %esp,%fs:0;");
    asm("loc_4A9115: sub $0x1C,%esp;");
    asm("loc_4A9118: push %ebx;");
    asm("loc_4A9119: push %ebp;");
    asm("loc_4A911A: push $0x428;");
    asm("loc_4A911F: mov %ecx,0xC(%esp);");
    asm("loc_4A9123: call _sub_5B7E84;");
    asm("loc_4A9128: mov %eax,%ebp;");
    asm("loc_4A912A: add $4,%esp;");
    asm("loc_4A912D: mov %ebp,0xC(%esp);");
    asm("loc_4A9131: xor %ebx,%ebx;");
    asm("loc_4A9133: cmp %ebx,%ebp;");
    asm("loc_4A9135: mov %ebx,0x2C(%esp);");
    asm("loc_4A9139: je loc_4A91DF;");
    asm("loc_4A913F: push %esi;");
    asm("loc_4A9140: push %edi;");
    asm("loc_4A9141: mov %ebp,%ecx;");
    asm("loc_4A9143: call _sub_59F860;");
    asm("loc_4A9148: mov 0x40(%esp),%al;");
    asm("loc_4A914C: mov %al,0x40C(%ebp);");
    asm("loc_4A9152: mov %ebx,0x410(%ebp);");
    asm("loc_4A9158: mov %ebx,0x414(%ebp);");
    asm("loc_4A915E: mov %ebx,0x418(%ebp);");
    asm("loc_4A9164: or $0xFFFFFFFF,%ecx;");
    asm("loc_4A9167: xor %eax,%eax;");
    asm("loc_4A9169: mov $_data_5D4848,%edi;");
    asm("loc_4A916E: movl $_off_5D4794,(%ebp);");
    asm("loc_4A9175: movl $_off_5D4788,0x7C(%ebp);");
    asm("loc_4A917C: mov %ebx,0x420(%ebp);");
    asm("loc_4A9182: repne scas (%edi),%al;");
    asm("loc_4A9184: not %ecx;");
    asm("loc_4A9186: dec %ecx;");
    asm("loc_4A9187: mov %ecx,%eax;");
    asm("loc_4A9189: cmp $0x10,%eax;");
    asm("loc_4A918C: movb $2,0x34(%esp);");
    asm("loc_4A9191: mov %bl,0x1C(%esp);");
    asm("loc_4A9195: jb loc_4A919C;");
    asm("loc_4A9197: mov $0xF,%eax;");
    asm("loc_4A919C: mov %eax,%ecx;");
    asm("loc_4A919E: mov %ecx,%edx;");
    asm("loc_4A91A0: shr $2,%ecx;");
    asm("loc_4A91A3: mov $_data_5D4848,%esi;");
    asm("loc_4A91A8: lea 0x1C(%esp),%edi;");
    asm("loc_4A91AC: rep movsl (%esi),(%edi);");
    asm("loc_4A91AE: mov %edx,%ecx;");
    asm("loc_4A91B0: and $3,%ecx;");
    asm("loc_4A91B3: rep movsb (%esi),(%edi);");
    asm("loc_4A91B5: mov %bl,0x1C(%esp,%eax);");
    asm("loc_4A91B9: mov %eax,0x18(%esp);");
    asm("loc_4A91BD: lea 0x18(%esp),%eax;");
    asm("loc_4A91C1: push %eax;");
    asm("loc_4A91C2: calll *_import_5C62A0;");
    asm("loc_4A91C8: push $1;");
    asm("loc_4A91CA: push $0x41;");
    asm("loc_4A91CC: push %eax;");
    asm("loc_4A91CD: call _sub_4C4E00;");
    asm("loc_4A91D2: add $0x10,%esp;");
    asm("loc_4A91D5: pop %edi;");
    asm("loc_4A91D6: mov %ebp,_data_6721BC;");
    asm("loc_4A91DC: pop %esi;");
    asm("loc_4A91DD: jmp loc_4A91E1;");
    asm("loc_4A91DF: xor %ebp,%ebp;");
    asm("loc_4A91E1: mov 8(%esp),%ecx;");
    asm("loc_4A91E5: mov 0x38(%esp),%eax;");
    asm("loc_4A91E9: mov (%ebp),%edx;");
    asm("loc_4A91EC: add $0xC,%ecx;");
    asm("loc_4A91EF: mov %ecx,0x10(%ebp);");
    asm("loc_4A91F2: mov 0x34(%esp),%ecx;");
    asm("loc_4A91F6: push %eax;");
    asm("loc_4A91F7: push %ecx;");
    asm("loc_4A91F8: mov %ebp,%ecx;");
    asm("loc_4A91FA: movl $0xFFFFFFFF,0x34(%esp);");
    asm("loc_4A9202: calll *0x24(%edx);");
    asm("loc_4A9205: test %al,%al;");
    asm("loc_4A9207: jne loc_4A9227;");
    asm("loc_4A9209: mov (%ebp),%edx;");
    asm("loc_4A920C: push $1;");
    asm("loc_4A920E: mov %ebp,%ecx;");
    asm("loc_4A9210: calll *(%edx);");
    asm("loc_4A9212: pop %ebp;");
    asm("loc_4A9213: mov %ebx,%eax;");
    asm("loc_4A9215: pop %ebx;");
    asm("loc_4A9216: mov 0x1C(%esp),%ecx;");
    asm("loc_4A921A: mov %ecx,%fs:0;");
    asm("loc_4A9221: add $0x28,%esp;");
    asm("loc_4A9224: ret $8;");
    asm("loc_4A9227: mov 0x24(%esp),%ecx;");
    asm("loc_4A922B: mov %ebp,%eax;");
    asm("loc_4A922D: pop %ebp;");
    asm("loc_4A922E: pop %ebx;");
    asm("loc_4A922F: mov %ecx,%fs:0;");
    asm("loc_4A9236: add $0x28,%esp;");
    asm("loc_4A9239: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9240() // _sub_4A9240
{
    __DEBUG_ASM(4A9240);
    // chunk 0x4A9240 _sub_4A9240
    asm("loc_4A9240: mov _data_5D49E0,%eax;");
    asm("loc_4A9245: mov %eax,_data_672204;");
    asm("loc_4A924A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9250() // _sub_4A9250
{
    __DEBUG_ASM(4A9250);
    // chunk 0x4A9250 _sub_4A9250
    asm("loc_4A9250: mov _data_5D49E0,%eax;");
    asm("loc_4A9255: mov %eax,_data_672200;");
    asm("loc_4A925A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9260() // _sub_4A9260
{
    __DEBUG_ASM(4A9260);
    // chunk 0x4A9260 _sub_4A9260
    asm("loc_4A9260: mov _data_5D49E4,%eax;");
    asm("loc_4A9265: mov %eax,_data_6721FC;");
    asm("loc_4A926A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9270() // _sub_4A9270
{
    __DEBUG_ASM(4A9270);
    // chunk 0x4A9270 _sub_4A9270
    asm("loc_4A9270: push $_data_5D4764;");
    asm("loc_4A9275: mov $_data_6721D0,%ecx;");
    asm("loc_4A927A: call _sub_4B28E0;");
    asm("loc_4A927F: push $_sub_4A9290;");
    asm("loc_4A9284: call _sub_5B7E6C;");
    asm("loc_4A9289: pop %ecx;");
    asm("loc_4A928A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9290() // _unknown_libname_33
{
    __DEBUG_ASM(4A9290);
    // chunk 0x4A9290 _sub_4A9290
    asm("loc_4A9290: mov $_data_6721D0,%ecx;");
    asm("loc_4A9295: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A92A0() // _sub_4A92A0
{
    __DEBUG_ASM(4A92A0);
    // chunk 0x4A92A0 _sub_4A92A0
    asm("loc_4A92A0: sub $0xC,%esp;");
    asm("loc_4A92A3: mov _import_5C6DE0,%eax;");
    asm("loc_4A92A8: lea 4(%esp),%edx;");
    asm("loc_4A92AC: push %edx;");
    asm("loc_4A92AD: movl $0,8(%esp);");
    asm("loc_4A92B5: mov (%eax),%eax;");
    asm("loc_4A92B7: mov (%eax),%ecx;");
    asm("loc_4A92B9: push $4;");
    asm("loc_4A92BB: push %eax;");
    asm("loc_4A92BC: movl $0x3F800000,0xC(%esp);");
    asm("loc_4A92C4: calll *0x20(%ecx);");
    asm("loc_4A92C7: test %eax,%eax;");
    asm("loc_4A92C9: jl loc_4A9313;");
    asm("loc_4A92CB: mov 4(%esp),%eax;");
    asm("loc_4A92CF: test %eax,%eax;");
    asm("loc_4A92D1: jne loc_4A9313;");
    asm("loc_4A92D3: mov _import_5C6DE0,%eax;");
    asm("loc_4A92D8: lea 8(%esp),%edx;");
    asm("loc_4A92DC: push %edx;");
    asm("loc_4A92DD: movl $0,0xC(%esp);");
    asm("loc_4A92E5: mov (%eax),%eax;");
    asm("loc_4A92E7: mov (%eax),%ecx;");
    asm("loc_4A92E9: push $3;");
    asm("loc_4A92EB: push %eax;");
    asm("loc_4A92EC: movl $0x3F400000,0xC(%esp);");
    asm("loc_4A92F4: calll *0x20(%ecx);");
    asm("loc_4A92F7: test %eax,%eax;");
    asm("loc_4A92F9: jl loc_4A9313;");
    asm("loc_4A92FB: mov 8(%esp),%eax;");
    asm("loc_4A92FF: and $0xFFF00000,%eax;");
    asm("loc_4A9304: cmp $0x1100000,%eax;");
    asm("loc_4A9309: jae loc_4A9313;");
    asm("loc_4A930B: movl $0x3F000000,(%esp);");
    asm("loc_4A9313: movl $0x3F800000,8(%esp);");
    asm("loc_4A931B: calll *_import_5C63F8;");
    asm("loc_4A9321: cmp $0x3E8,%eax;");
    asm("loc_4A9326: jg loc_4A935E;");
    asm("loc_4A9328: mov 4(%esp),%ecx;");
    asm("loc_4A932C: test %ecx,%ecx;");
    asm("loc_4A932E: jne loc_4A9338;");
    asm("loc_4A9330: flds _data_5D2C9C;");
    asm("loc_4A9336: jmp loc_4A933E;");
    asm("loc_4A9338: flds _data_5C8930;");
    asm("loc_4A933E: cmp $0x320,%eax;");
    asm("loc_4A9343: jge loc_4A9362;");
    asm("loc_4A9345: cmp $0x2BC,%eax;");
    asm("loc_4A934A: fstp %st(0);");
    asm("loc_4A934C: flds _data_5D2C9C;");
    asm("loc_4A9352: jge loc_4A9362;");
    asm("loc_4A9354: fstp %st(0);");
    asm("loc_4A9356: flds _data_5C94F8;");
    asm("loc_4A935C: jmp loc_4A9362;");
    asm("loc_4A935E: flds 8(%esp);");
    asm("loc_4A9362: flds (%esp);");
    asm("loc_4A9366: fcomp;");
    asm("loc_4A9368: fnstsw %ax;");
    asm("loc_4A936A: test $5,%ah;");
    asm("loc_4A936D: jp loc_4A9375;");
    asm("loc_4A936F: fstp %st(0);");
    asm("loc_4A9371: flds (%esp);");
    asm("loc_4A9375: add $0xC,%esp;");
    asm("loc_4A9378: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9380() // _sub_4A9380
{
    __DEBUG_ASM(4A9380);
    // chunk 0x4A9380 _sub_4A9380
    asm("loc_4A9380: push $0xFFFFFFFF;");
    asm("loc_4A9382: push $_sub_5BCE03;");
    asm("loc_4A9387: mov %fs:0,%eax;");
    asm("loc_4A938D: push %eax;");
    asm("loc_4A938E: mov %esp,%fs:0;");
    asm("loc_4A9395: sub $0x10,%esp;");
    asm("loc_4A9398: push %ebp;");
    asm("loc_4A9399: push %esi;");
    asm("loc_4A939A: push $0x980;");
    asm("loc_4A939F: call _sub_5B7E84;");
    asm("loc_4A93A4: mov %eax,%esi;");
    asm("loc_4A93A6: add $4,%esp;");
    asm("loc_4A93A9: mov %esi,0x14(%esp);");
    asm("loc_4A93AD: xor %ebp,%ebp;");
    asm("loc_4A93AF: cmp %ebp,%esi;");
    asm("loc_4A93B1: mov %ebp,0x20(%esp);");
    asm("loc_4A93B5: je loc_4A9495;");
    asm("loc_4A93BB: mov %esi,%ecx;");
    asm("loc_4A93BD: call _sub_59F860;");
    asm("loc_4A93C2: mov 8(%esp),%al;");
    asm("loc_4A93C6: mov %al,0x504(%esi);");
    asm("loc_4A93CC: mov %ebp,0x508(%esi);");
    asm("loc_4A93D2: mov %ebp,0x50C(%esi);");
    asm("loc_4A93D8: mov %ebp,0x510(%esi);");
    asm("loc_4A93DE: lea 8(%esp),%ecx;");
    asm("loc_4A93E2: push %ecx;");
    asm("loc_4A93E3: lea 0x514(%esi),%ecx;");
    asm("loc_4A93E9: movb $2,0x24(%esp);");
    asm("loc_4A93EE: call _sub_5A6900;");
    asm("loc_4A93F3: lea 9(%esp),%edx;");
    asm("loc_4A93F7: push %edx;");
    asm("loc_4A93F8: lea 0x524(%esi),%ecx;");
    asm("loc_4A93FE: movb $3,0x24(%esp);");
    asm("loc_4A9403: call _sub_5A6900;");
    asm("loc_4A9408: lea 0xA(%esp),%eax;");
    asm("loc_4A940C: push %eax;");
    asm("loc_4A940D: lea 0x534(%esi),%ecx;");
    asm("loc_4A9413: movb $4,0x24(%esp);");
    asm("loc_4A9418: call _sub_5A6900;");
    asm("loc_4A941D: lea 0xB(%esp),%ecx;");
    asm("loc_4A9421: push %ecx;");
    asm("loc_4A9422: lea 0x544(%esi),%ecx;");
    asm("loc_4A9428: movb $5,0x24(%esp);");
    asm("loc_4A942D: call _sub_5A6900;");
    asm("loc_4A9432: lea 0xC(%esp),%edx;");
    asm("loc_4A9436: push %edx;");
    asm("loc_4A9437: lea 0x554(%esi),%ecx;");
    asm("loc_4A943D: movb $6,0x24(%esp);");
    asm("loc_4A9442: call _sub_5A6900;");
    asm("loc_4A9447: lea 0xD(%esp),%eax;");
    asm("loc_4A944B: push %eax;");
    asm("loc_4A944C: lea 0x7FC(%esi),%ecx;");
    asm("loc_4A9452: movb $7,0x24(%esp);");
    asm("loc_4A9457: call _sub_5A6900;");
    asm("loc_4A945C: lea 0xE(%esp),%ecx;");
    asm("loc_4A9460: push %ecx;");
    asm("loc_4A9461: lea 0x80C(%esi),%ecx;");
    asm("loc_4A9467: movb $8,0x24(%esp);");
    asm("loc_4A946C: call _sub_5A6900;");
    asm("loc_4A9471: lea 0xF(%esp),%edx;");
    asm("loc_4A9475: push %edx;");
    asm("loc_4A9476: lea 0x81C(%esi),%ecx;");
    asm("loc_4A947C: movb $9,0x24(%esp);");
    asm("loc_4A9481: call _sub_5A6900;");
    asm("loc_4A9486: movl $_off_5D4A5C,(%esi);");
    asm("loc_4A948C: movl $_off_5D4A4C,0x7C(%esi);");
    asm("loc_4A9493: jmp loc_4A9497;");
    asm("loc_4A9495: xor %esi,%esi;");
    asm("loc_4A9497: push $_data_5D4A28;");
    asm("loc_4A949C: mov %esi,%ecx;");
    asm("loc_4A949E: movl $0xFFFFFFFF,0x24(%esp);");
    asm("loc_4A94A6: movb $1,0x32E(%esi);");
    asm("loc_4A94AD: call _sub_4AFE30;");
    asm("loc_4A94B2: call _sub_4A92A0;");
    asm("loc_4A94B7: fsts 0x10(%esp);");
    asm("loc_4A94BB: fcomps _data_5C7474;");
    asm("loc_4A94C1: fnstsw %ax;");
    asm("loc_4A94C3: test $5,%ah;");
    asm("loc_4A94C6: jp loc_4A94DB;");
    asm("loc_4A94C8: pop %esi;");
    asm("loc_4A94C9: xor %al,%al;");
    asm("loc_4A94CB: pop %ebp;");
    asm("loc_4A94CC: mov 0x10(%esp),%ecx;");
    asm("loc_4A94D0: mov %ecx,%fs:0;");
    asm("loc_4A94D7: add $0x1C,%esp;");
    asm("loc_4A94DA: ret;");
    asm("loc_4A94DB: push %ebx;");
    asm("loc_4A94DC: push %edi;");
    asm("loc_4A94DD: push $_data_5D4A14;");
    asm("loc_4A94E2: call _sub_5B36B0;");
    asm("loc_4A94E7: mov 0x1C(%esp),%ebx;");
    asm("loc_4A94EB: mov %eax,%edi;");
    asm("loc_4A94ED: add $4,%esp;");
    asm("loc_4A94F0: cmp %ebp,%edi;");
    asm("loc_4A94F2: je loc_4A9523;");
    asm("loc_4A94F4: mov (%edi),%edx;");
    asm("loc_4A94F6: mov %ebx,%eax;");
    asm("loc_4A94F8: push %ebx;");
    asm("loc_4A94F9: mov %edi,%ecx;");
    asm("loc_4A94FB: mov %eax,0x10(%edi);");
    asm("loc_4A94FE: calll *(%edx);");
    asm("loc_4A9500: flds 0x14(%edi);");
    asm("loc_4A9503: fcomps 0x10(%edi);");
    asm("loc_4A9506: fnstsw %ax;");
    asm("loc_4A9508: test $0x44,%ah;");
    asm("loc_4A950B: jnp loc_4A9523;");
    asm("loc_4A950D: flds 0x10(%edi);");
    asm("loc_4A9510: mov (%edi),%eax;");
    asm("loc_4A9512: fsts 0x1C(%esp);");
    asm("loc_4A9516: mov 0x1C(%esp),%ecx;");
    asm("loc_4A951A: push %ecx;");
    asm("loc_4A951B: fstps 0x14(%edi);");
    asm("loc_4A951E: mov %edi,%ecx;");
    asm("loc_4A9520: calll *4(%eax);");
    asm("loc_4A9523: push $_data_5D4A00;");
    asm("loc_4A9528: call _sub_5B36B0;");
    asm("loc_4A952D: mov %eax,%edi;");
    asm("loc_4A952F: add $4,%esp;");
    asm("loc_4A9532: cmp %ebp,%edi;");
    asm("loc_4A9534: je loc_4A9567;");
    asm("loc_4A9536: mov 0x18(%esp),%edx;");
    asm("loc_4A953A: mov (%edi),%eax;");
    asm("loc_4A953C: push %ebx;");
    asm("loc_4A953D: mov %edi,%ecx;");
    asm("loc_4A953F: mov %edx,0x10(%edi);");
    asm("loc_4A9542: calll *(%eax);");
    asm("loc_4A9544: flds 0x14(%edi);");
    asm("loc_4A9547: fcomps 0x10(%edi);");
    asm("loc_4A954A: fnstsw %ax;");
    asm("loc_4A954C: test $0x44,%ah;");
    asm("loc_4A954F: jnp loc_4A9567;");
    asm("loc_4A9551: flds 0x10(%edi);");
    asm("loc_4A9554: mov (%edi),%edx;");
    asm("loc_4A9556: fsts 0x1C(%esp);");
    asm("loc_4A955A: mov 0x1C(%esp),%eax;");
    asm("loc_4A955E: push %eax;");
    asm("loc_4A955F: fstps 0x14(%edi);");
    asm("loc_4A9562: mov %edi,%ecx;");
    asm("loc_4A9564: calll *4(%edx);");
    asm("loc_4A9567: push $_data_5D49EC;");
    asm("loc_4A956C: call _sub_5B36B0;");
    asm("loc_4A9571: mov %eax,%edi;");
    asm("loc_4A9573: add $4,%esp;");
    asm("loc_4A9576: cmp %ebp,%edi;");
    asm("loc_4A9578: je loc_4A95A7;");
    asm("loc_4A957A: mov (%edi),%edx;");
    asm("loc_4A957C: push %ebp;");
    asm("loc_4A957D: mov %edi,%ecx;");
    asm("loc_4A957F: mov %ebp,0x10(%edi);");
    asm("loc_4A9582: calll *(%edx);");
    asm("loc_4A9584: flds 0x14(%edi);");
    asm("loc_4A9587: fcomps 0x10(%edi);");
    asm("loc_4A958A: fnstsw %ax;");
    asm("loc_4A958C: test $0x44,%ah;");
    asm("loc_4A958F: jnp loc_4A95A7;");
    asm("loc_4A9591: flds 0x10(%edi);");
    asm("loc_4A9594: mov (%edi),%eax;");
    asm("loc_4A9596: fsts 0x1C(%esp);");
    asm("loc_4A959A: mov 0x1C(%esp),%ecx;");
    asm("loc_4A959E: push %ecx;");
    asm("loc_4A959F: fstps 0x14(%edi);");
    asm("loc_4A95A2: mov %edi,%ecx;");
    asm("loc_4A95A4: calll *4(%eax);");
    asm("loc_4A95A7: flds 0x18(%esp);");
    asm("loc_4A95AB: fmuls _data_5CA230;");
    asm("loc_4A95B1: call _sub_5B7EC0;");
    asm("loc_4A95B6: push %eax;");
    asm("loc_4A95B7: mov %esi,%ecx;");
    asm("loc_4A95B9: call _sub_4B0370;");
    asm("loc_4A95BE: mov (%esi),%edx;");
    asm("loc_4A95C0: push $1;");
    asm("loc_4A95C2: mov %esi,%ecx;");
    asm("loc_4A95C4: calll *(%edx);");
    asm("loc_4A95C6: mov 0x20(%esp),%ecx;");
    asm("loc_4A95CA: pop %edi;");
    asm("loc_4A95CB: pop %ebx;");
    asm("loc_4A95CC: pop %esi;");
    asm("loc_4A95CD: mov $1,%al;");
    asm("loc_4A95CF: pop %ebp;");
    asm("loc_4A95D0: mov %ecx,%fs:0;");
    asm("loc_4A95D7: add $0x1C,%esp;");
    asm("loc_4A95DA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A95E0() // _sub_4A95E0
{
    __DEBUG_ASM(4A95E0);
    // chunk 0x4A95E0 _sub_4A95E0
    asm("loc_4A95E0: push %esi;");
    asm("loc_4A95E1: mov %ecx,%esi;");
    asm("loc_4A95E3: call _sub_4A9600;");
    asm("loc_4A95E8: testb $1,8(%esp);");
    asm("loc_4A95ED: je loc_4A95F8;");
    asm("loc_4A95EF: push %esi;");
    asm("loc_4A95F0: call _sub_5B7E1D;");
    asm("loc_4A95F5: add $4,%esp;");
    asm("loc_4A95F8: mov %esi,%eax;");
    asm("loc_4A95FA: pop %esi;");
    asm("loc_4A95FB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9600() // _sub_4A9600
{
    __DEBUG_ASM(4A9600);
    // chunk 0x4A9600 _sub_4A9600
    asm("loc_4A9600: push $0xFFFFFFFF;");
    asm("loc_4A9602: push $_sub_5BCE42;");
    asm("loc_4A9607: mov %fs:0,%eax;");
    asm("loc_4A960D: push %eax;");
    asm("loc_4A960E: mov %esp,%fs:0;");
    asm("loc_4A9615: push %ecx;");
    asm("loc_4A9616: push %ebx;");
    asm("loc_4A9617: push %esi;");
    asm("loc_4A9618: mov %ecx,%esi;");
    asm("loc_4A961A: push %edi;");
    asm("loc_4A961B: mov %esi,0xC(%esp);");
    asm("loc_4A961F: mov 0x820(%esi),%eax;");
    asm("loc_4A9625: push %eax;");
    asm("loc_4A9626: movl $3,0x1C(%esp);");
    asm("loc_4A962E: call _sub_5B7E1D;");
    asm("loc_4A9633: xor %ebx,%ebx;");
    asm("loc_4A9635: mov %ebx,0x820(%esi);");
    asm("loc_4A963B: mov %ebx,0x824(%esi);");
    asm("loc_4A9641: mov %ebx,0x828(%esi);");
    asm("loc_4A9647: mov 0x810(%esi),%eax;");
    asm("loc_4A964D: push %eax;");
    asm("loc_4A964E: call _sub_5B7E1D;");
    asm("loc_4A9653: mov %ebx,0x810(%esi);");
    asm("loc_4A9659: mov %ebx,0x814(%esi);");
    asm("loc_4A965F: mov %ebx,0x818(%esi);");
    asm("loc_4A9665: mov 0x800(%esi),%eax;");
    asm("loc_4A966B: push %eax;");
    asm("loc_4A966C: call _sub_5B7E1D;");
    asm("loc_4A9671: mov %ebx,0x800(%esi);");
    asm("loc_4A9677: mov %ebx,0x804(%esi);");
    asm("loc_4A967D: mov %ebx,0x808(%esi);");
    asm("loc_4A9683: mov 0x558(%esi),%eax;");
    asm("loc_4A9689: push %eax;");
    asm("loc_4A968A: call _sub_5B7E1D;");
    asm("loc_4A968F: mov %ebx,0x558(%esi);");
    asm("loc_4A9695: mov %ebx,0x55C(%esi);");
    asm("loc_4A969B: mov %ebx,0x560(%esi);");
    asm("loc_4A96A1: mov 0x548(%esi),%eax;");
    asm("loc_4A96A7: push %eax;");
    asm("loc_4A96A8: call _sub_5B7E1D;");
    asm("loc_4A96AD: lea 0x534(%esi),%edi;");
    asm("loc_4A96B3: mov %ebx,0x548(%esi);");
    asm("loc_4A96B9: mov %ebx,0x54C(%esi);");
    asm("loc_4A96BF: mov %ebx,0x550(%esi);");
    asm("loc_4A96C5: mov 8(%edi),%eax;");
    asm("loc_4A96C8: mov 4(%edi),%ecx;");
    asm("loc_4A96CB: add $0x14,%esp;");
    asm("loc_4A96CE: push %eax;");
    asm("loc_4A96CF: push %ecx;");
    asm("loc_4A96D0: mov %edi,%ecx;");
    asm("loc_4A96D2: call _sub_53AAA0;");
    asm("loc_4A96D7: mov 4(%edi),%eax;");
    asm("loc_4A96DA: push %eax;");
    asm("loc_4A96DB: call _sub_5B7E1D;");
    asm("loc_4A96E0: mov %ebx,4(%edi);");
    asm("loc_4A96E3: mov %ebx,8(%edi);");
    asm("loc_4A96E6: mov %ebx,0xC(%edi);");
    asm("loc_4A96E9: mov 0x52C(%esi),%edx;");
    asm("loc_4A96EF: mov 0x528(%esi),%eax;");
    asm("loc_4A96F5: lea 0x524(%esi),%edi;");
    asm("loc_4A96FB: add $4,%esp;");
    asm("loc_4A96FE: push %edx;");
    asm("loc_4A96FF: push %eax;");
    asm("loc_4A9700: mov %edi,%ecx;");
    asm("loc_4A9702: movb $2,0x20(%esp);");
    asm("loc_4A9707: call _sub_53AAA0;");
    asm("loc_4A970C: mov 4(%edi),%eax;");
    asm("loc_4A970F: push %eax;");
    asm("loc_4A9710: call _sub_5B7E1D;");
    asm("loc_4A9715: mov %ebx,4(%edi);");
    asm("loc_4A9718: mov %ebx,8(%edi);");
    asm("loc_4A971B: mov %ebx,0xC(%edi);");
    asm("loc_4A971E: mov 0x51C(%esi),%ecx;");
    asm("loc_4A9724: mov 0x518(%esi),%edx;");
    asm("loc_4A972A: lea 0x514(%esi),%edi;");
    asm("loc_4A9730: add $4,%esp;");
    asm("loc_4A9733: push %ecx;");
    asm("loc_4A9734: push %edx;");
    asm("loc_4A9735: mov %edi,%ecx;");
    asm("loc_4A9737: movb $1,0x20(%esp);");
    asm("loc_4A973C: call _sub_53AAA0;");
    asm("loc_4A9741: mov 4(%edi),%eax;");
    asm("loc_4A9744: push %eax;");
    asm("loc_4A9745: call _sub_5B7E1D;");
    asm("loc_4A974A: add $4,%esp;");
    asm("loc_4A974D: lea 0x504(%esi),%ecx;");
    asm("loc_4A9753: mov %ebx,4(%edi);");
    asm("loc_4A9756: mov %ebx,8(%edi);");
    asm("loc_4A9759: mov %ebx,0xC(%edi);");
    asm("loc_4A975C: mov %bl,0x18(%esp);");
    asm("loc_4A9760: call _sub_4DE730;");
    asm("loc_4A9765: mov %esi,%ecx;");
    asm("loc_4A9767: movl $0xFFFFFFFF,0x18(%esp);");
    asm("loc_4A976F: call _sub_59FA50;");
    asm("loc_4A9774: mov 0x10(%esp),%ecx;");
    asm("loc_4A9778: pop %edi;");
    asm("loc_4A9779: pop %esi;");
    asm("loc_4A977A: pop %ebx;");
    asm("loc_4A977B: mov %ecx,%fs:0;");
    asm("loc_4A9782: add $0x10,%esp;");
    asm("loc_4A9785: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4A9790() // _sub_4A9790
{
    __DEBUG_ASM(4A9790);
    // chunk 0x4A9790 _sub_4A9790
    asm("loc_4A9790: mov %fs:0,%eax;");
    asm("loc_4A9796: push $0xFFFFFFFF;");
    asm("loc_4A9798: push $_sub_5BCE68;");
    asm("loc_4A979D: push %eax;");
    asm("loc_4A979E: mov %esp,%fs:0;");
    asm("loc_4A97A5: sub $0x260,%esp;");
    asm("loc_4A97AB: push %ebx;");
    asm("loc_4A97AC: xor %ebx,%ebx;");
    asm("loc_4A97AE: push %ebp;");
    asm("loc_4A97AF: mov %ecx,%ebp;");
    asm("loc_4A97B1: push %esi;");
    asm("loc_4A97B2: push %edi;");
    asm("loc_4A97B3: movb $1,0x849(%ebp);");
    asm("loc_4A97BA: movb $0,0x32E(%ebp);");
    asm("loc_4A97C1: mov %ebx,0x890(%ebp);");
    asm("loc_4A97C7: mov %ebx,0x894(%ebp);");
    asm("loc_4A97CD: mov %ebx,0x898(%ebp);");
    asm("loc_4A97D3: movl $0x40768000,0x89C(%ebp);");
    asm("loc_4A97DD: mov %bl,0x8A0(%ebp);");
    asm("loc_4A97E3: mov %bl,0x8A1(%ebp);");
    asm("loc_4A97E9: mov %bl,0x8A2(%ebp);");
    asm("loc_4A97EF: mov %ebx,0x840(%ebp);");
    asm("loc_4A97F5: movl $0xC0000000,0x844(%ebp);");
    asm("loc_4A97FF: mov %bl,0x97C(%ebp);");
    asm("loc_4A9805: mov %bl,0x84C(%ebp);");
    asm("loc_4A980B: mov %bl,0x84D(%ebp);");
    asm("loc_4A9811: mov %bl,0x32C(%ebp);");
    asm("loc_4A9817: mov %bl,0x8C8(%ebp);");
    asm("loc_4A981D: mov %bl,0x848(%ebp);");
    asm("loc_4A9823: mov %bl,0x87E(%ebp);");
    asm("loc_4A9829: mov %bl,0x84A(%ebp);");
    asm("loc_4A982F: movl $0x320,0x8CC(%ebp);");
    asm("loc_4A9839: movl $0x400,0x8D8(%ebp);");
    asm("loc_4A9843: movl $0x480,0x8E4(%ebp);");
    asm("loc_4A984D: movl $0x500,0x8F0(%ebp);");
    asm("loc_4A9857: movl $0x640,0x8FC(%ebp);");
    asm("loc_4A9861: movl $0x258,0x8D0(%ebp);");
    asm("loc_4A986B: movl $0x300,0x8DC(%ebp);");
    asm("loc_4A9875: movl $0x360,0x8E8(%ebp);");
    asm("loc_4A987F: movl $0x3C0,0x8F4(%ebp);");
    asm("loc_4A9889: movl $0x4B0,0x900(%ebp);");
    asm("loc_4A9893: lea 0x908(%ebp),%eax;");
    asm("loc_4A9899: mov $5,%ecx;");
    asm("loc_4A989E: mov $0x10,%edx;");
    asm("loc_4A98A3: mov -0x3C(%eax),%esi;");
    asm("loc_4A98A6: mov %esi,(%eax);");
    asm("loc_4A98A8: mov -0x38(%eax),%esi;");
    asm("loc_4A98AB: mov %esi,4(%eax);");
    asm("loc_4A98AE: mov %edx,-0x34(%eax);");
    asm("loc_4A98B1: movl $0x20,8(%eax);");
    asm("loc_4A98B8: add $0xC,%eax;");
    asm("loc_4A98BB: dec %ecx;");
    asm("loc_4A98BC: jne loc_4A98A3;");
    asm("loc_4A98BE: xor %eax,%eax;");
    asm("loc_4A98C0: lea 0x954(%ebp),%ecx;");
    asm("loc_4A98C6: movb $0,0x944(%eax,%ebp);");
    asm("loc_4A98CE: movl $0xFFFFFFFF,(%ecx);");
    asm("loc_4A98D4: inc %eax;");
    asm("loc_4A98D5: add $4,%ecx;");
    asm("loc_4A98D8: cmp $0xA,%eax;");
    asm("loc_4A98DB: jl loc_4A98C6;");
    asm("loc_4A98DD: push $0xFFFFFFFF;");
    asm("loc_4A98DF: mov %ebp,%ecx;");
    asm("loc_4A98E1: mov %ebx,0x950(%ebp);");
    asm("loc_4A98E7: call _sub_4B2440;");
    asm("loc_4A98EC: cmp %ebx,0x284(%esp);");
    asm("loc_4A98F3: sete %al;");
    asm("loc_4A98F6: test %al,%al;");
    asm("loc_4A98F8: mov %ebx,0x838(%ebp);");
    asm("loc_4A98FE: movb $1,_data_67DCC8;");
    asm("loc_4A9905: mov %al,0x32D(%ebp);");
    asm("loc_4A990B: je loc_4A9918;");
    asm("loc_4A990D: call _sub_4A7670;");
    asm("loc_4A9912: mov %al,0x84B(%ebp);");
    asm("loc_4A9918: mov 0x32D(%ebp),%al;");
    asm("loc_4A991E: test %al,%al;");
    asm("loc_4A9920: mov %ebx,0x7F4(%ebp);");
    asm("loc_4A9926: lea 0x40(%esp),%ecx;");
    asm("loc_4A992A: movl $0,0x20(%esp);");
    asm("loc_4A9932: movl $0,0x1C(%esp);");
    asm("loc_4A993A: movl $0,0x48(%esp);");
    asm("loc_4A9942: movl $0,0x44(%esp);");
    asm("loc_4A994A: movl $0,0x40(%esp);");
    asm("loc_4A9952: je loc_4A9A38;");
    asm("loc_4A9958: lea 0x54(%esp),%eax;");
    asm("loc_4A995C: push %eax;");
    asm("loc_4A995D: push %ebx;");
    asm("loc_4A995E: push %ebx;");
    asm("loc_4A995F: push %ebx;");
    asm("loc_4A9960: push $1;");
    asm("loc_4A9962: push %ebx;");
    asm("loc_4A9963: push $1;");
    asm("loc_4A9965: push $1;");
    asm("loc_4A9967: push %ebx;");
    asm("loc_4A9968: push %ebx;");
    asm("loc_4A9969: push %ebx;");
    asm("loc_4A996A: push %ecx;");
    asm("loc_4A996B: push %ebx;");
    asm("loc_4A996C: lea 0x50(%esp),%edx;");
    asm("loc_4A9970: push %edx;");
    asm("loc_4A9971: push $_data_5D21B0;");
    asm("loc_4A9976: push $_data_5D5034;");
    asm("loc_4A997B: mov %ebp,%ecx;");
    asm("loc_4A997D: movl $0,0x94(%esp);");
    asm("loc_4A9988: movl $0,0x98(%esp);");
    asm("loc_4A9993: movl $0,0x9C(%esp);");
    asm("loc_4A999E: movl $0xBF800000,0x64(%esp);");
    asm("loc_4A99A6: call _sub_5A0DB0;");
    asm("loc_4A99AB: lea 0x1C(%esp),%eax;");
    asm("loc_4A99AF: push %eax;");
    asm("loc_4A99B0: push %ebx;");
    asm("loc_4A99B1: push %ebx;");
    asm("loc_4A99B2: push %ebx;");
    asm("loc_4A99B3: push $1;");
    asm("loc_4A99B5: push %ebx;");
    asm("loc_4A99B6: push $1;");
    asm("loc_4A99B8: push $1;");
    asm("loc_4A99BA: push %ebx;");
    asm("loc_4A99BB: push %ebx;");
    asm("loc_4A99BC: push %ebx;");
    asm("loc_4A99BD: lea 0x6C(%esp),%ecx;");
    asm("loc_4A99C1: push %ecx;");
    asm("loc_4A99C2: push %ebx;");
    asm("loc_4A99C3: lea 0x88(%esp),%edx;");
    asm("loc_4A99CA: push %edx;");
    asm("loc_4A99CB: push $_data_5D5000;");
    asm("loc_4A99D0: push $_data_5D4FF4;");
    asm("loc_4A99D5: mov %ebp,%ecx;");
    asm("loc_4A99D7: movl $0,0x5C(%esp);");
    asm("loc_4A99DF: movl $0,0x60(%esp);");
    asm("loc_4A99E7: movl $0,0x64(%esp);");
    asm("loc_4A99EF: movl $0,0x80(%esp);");
    asm("loc_4A99FA: movl $0,0x84(%esp);");
    asm("loc_4A9A05: movl $0,0x88(%esp);");
    asm("loc_4A9A10: movl $0,0x94(%esp);");
    asm("loc_4A9A1B: movl $0xBD99999A,0x98(%esp);");
    asm("loc_4A9A26: movl $0xBF800000,0x9C(%esp);");
    asm("loc_4A9A31: call _sub_5A0DB0;");
    asm("loc_4A9A36: jmp loc_4A9A94;");
    asm("loc_4A9A38: lea 0x1C(%esp),%eax;");
    asm("loc_4A9A3C: push %eax;");
    asm("loc_4A9A3D: push %ebx;");
    asm("loc_4A9A3E: push %ebx;");
    asm("loc_4A9A3F: push %ebx;");
    asm("loc_4A9A40: push $1;");
    asm("loc_4A9A42: push %ebx;");
    asm("loc_4A9A43: push $1;");
    asm("loc_4A9A45: push $1;");
    asm("loc_4A9A47: push %ebx;");
    asm("loc_4A9A48: push %ebx;");
    asm("loc_4A9A49: push %ebx;");
    asm("loc_4A9A4A: push %ecx;");
    asm("loc_4A9A4B: push %ebx;");
    asm("loc_4A9A4C: lea 0x88(%esp),%edx;");
    asm("loc_4A9A53: push %edx;");
    asm("loc_4A9A54: push $_data_5D4FB8;");
    asm("loc_4A9A59: push $_data_5D4FB0;");
    asm("loc_4A9A5E: mov %ebp,%ecx;");
    asm("loc_4A9A60: movl $0,0x64(%esp);");
    asm("loc_4A9A68: movl $0x3E19999A,0x94(%esp);");
    asm("loc_4A9A73: movl $0xBD50E560,0x98(%esp);");
    asm("loc_4A9A7E: movl $0xBF800000,0x9C(%esp);");
    asm("loc_4A9A89: call _sub_5A0DB0;");
    asm("loc_4A9A8E: mov %eax,0x338(%ebp);");
    asm("loc_4A9A94: mov $0xA,%ecx;");
    asm("loc_4A9A99: mov $_data_679BC0,%esi;");
    asm("loc_4A9A9E: lea 0x1C8(%esp),%edi;");
    asm("loc_4A9AA5: mov %ebx,0x330(%ebp);");
    asm("loc_4A9AAB: mov %ebx,0x8B8(%ebp);");
    asm("loc_4A9AB1: rep movsl (%esi),(%edi);");
    asm("loc_4A9AB3: cmpl $0x20,0x1D8(%esp);");
    asm("loc_4A9ABB: jne loc_4A9AC6;");
    asm("loc_4A9ABD: movb $1,0x8BC(%ebp);");
    asm("loc_4A9AC4: jmp loc_4A9ACD;");
    asm("loc_4A9AC6: movb $0,0x8BC(%ebp);");
    asm("loc_4A9ACD: mov 0x97C(%ebp),%cl;");
    asm("loc_4A9AD3: test %cl,%cl;");
    asm("loc_4A9AD5: mov 0x8BC(%ebp),%al;");
    asm("loc_4A9ADB: mov %al,0x334(%ebp);");
    asm("loc_4A9AE1: jne loc_4A9AF5;");
    asm("loc_4A9AE3: cmp $1,%al;");
    asm("loc_4A9AE5: jne loc_4A9AF5;");
    asm("loc_4A9AE7: movb $0,0x8BC(%ebp);");
    asm("loc_4A9AEE: movb $0,0x334(%ebp);");
    asm("loc_4A9AF5: mov 0x32D(%ebp),%al;");
    asm("loc_4A9AFB: test %al,%al;");
    asm("loc_4A9AFD: movl $0,0x24(%esp);");
    asm("loc_4A9B05: je loc_4A9B7B;");
    asm("loc_4A9B07: push %ebx;");
    asm("loc_4A9B08: push %ebx;");
    asm("loc_4A9B09: push $0x409;");
    asm("loc_4A9B0E: push %ebx;");
    asm("loc_4A9B0F: push %ebx;");
    asm("loc_4A9B10: push %ebx;");
    asm("loc_4A9B11: push %ebx;");
    asm("loc_4A9B12: lea 0x38(%esp),%eax;");
    asm("loc_4A9B16: push %eax;");
    asm("loc_4A9B17: push %ebx;");
    asm("loc_4A9B18: lea 0x64(%esp),%ecx;");
    asm("loc_4A9B1C: push %ecx;");
    asm("loc_4A9B1D: push %ebx;");
    asm("loc_4A9B1E: push $_data_5CED30;");
    asm("loc_4A9B23: push %ebx;");
    asm("loc_4A9B24: push $_data_5CF1F4;");
    asm("loc_4A9B29: push $_data_5D4F98;");
    asm("loc_4A9B2E: mov %ebp,%ecx;");
    asm("loc_4A9B30: movl $0x3CA3D70A,0x58(%esp);");
    asm("loc_4A9B38: movl $0x3CA3D70A,0x5C(%esp);");
    asm("loc_4A9B40: movl $0x3EDC28F6,0x7C(%esp);");
    asm("loc_4A9B48: movl $0x3E6C8B44,0x80(%esp);");
    asm("loc_4A9B53: movl $0,0x84(%esp);");
    asm("loc_4A9B5E: call _sub_5A0C90;");
    asm("loc_4A9B63: mov %eax,0x348(%ebp);");
    asm("loc_4A9B69: movl $0x3E7CED91,0x20(%esp);");
    asm("loc_4A9B71: movl $0,0x24(%esp);");
    asm("loc_4A9B79: jmp loc_4A9B83;");
    asm("loc_4A9B7B: movl $0x3E8ED917,0x20(%esp);");
    asm("loc_4A9B83: push $1;");
    asm("loc_4A9B85: push %ebx;");
    asm("loc_4A9B86: push $1;");
    asm("loc_4A9B88: push $0x4F8;");
    asm("loc_4A9B8D: push $0x3FE00000;");
    asm("loc_4A9B92: push $0x3D75C28F;");
    asm("loc_4A9B97: push $0x3EF645A2;");
    asm("loc_4A9B9C: push %ebx;");
    asm("loc_4A9B9D: lea 0x3C(%esp),%edx;");
    asm("loc_4A9BA1: push %edx;");
    asm("loc_4A9BA2: push $_data_5CE91C;");
    asm("loc_4A9BA7: mov %ebp,%ecx;");
    asm("loc_4A9BA9: push $_data_5D4F88;");
    asm("loc_4A9BAE: movl $0xBDB851EC,0x48(%esp);");
    asm("loc_4A9BB6: call _sub_5A0E30;");
    asm("loc_4A9BBB: mov %eax,0x344(%ebp);");
    asm("loc_4A9BC1: mov _data_679BB0,%ecx;");
    asm("loc_4A9BC7: mov %ecx,0x348(%eax);");
    asm("loc_4A9BCD: mov 0x32D(%ebp),%al;");
    asm("loc_4A9BD3: test %al,%al;");
    asm("loc_4A9BD5: movl $0xBE99999A,0x30(%esp);");
    asm("loc_4A9BDD: movl $0x3E51EB85,0x50(%esp);");
    asm("loc_4A9BE5: movl $0x3D9DB22D,0x2C(%esp);");
    asm("loc_4A9BED: jne loc_4A9C07;");
    asm("loc_4A9BEF: movl $0xBEA8F5C3,0x30(%esp);");
    asm("loc_4A9BF7: movl $0x3E570A3D,0x50(%esp);");
    asm("loc_4A9BFF: movl $0x3DAE147B,0x2C(%esp);");
    asm("loc_4A9C07: mov 0x30(%esp),%edx;");
    asm("loc_4A9C0B: push %ebx;");
    asm("loc_4A9C0C: push %ebx;");
    asm("loc_4A9C0D: push %ebx;");
    asm("loc_4A9C0E: mov 0x5C(%esp),%eax;");
    asm("loc_4A9C12: push %ebx;");
    asm("loc_4A9C13: push %ebx;");
    asm("loc_4A9C14: push %ebx;");
    asm("loc_4A9C15: push %ebx;");
    asm("loc_4A9C16: lea 0x38(%esp),%ecx;");
    asm("loc_4A9C1A: push %ecx;");
    asm("loc_4A9C1B: push %ebx;");
    asm("loc_4A9C1C: mov %edx,0x64(%esp);");
    asm("loc_4A9C20: lea 0x64(%esp),%edx;");
    asm("loc_4A9C24: push %edx;");
    asm("loc_4A9C25: push %ebx;");
    asm("loc_4A9C26: push $_data_5CED30;");
    asm("loc_4A9C2B: push %ebx;");
    asm("loc_4A9C2C: push $_data_5D4F58;");
    asm("loc_4A9C31: push $_data_5D4F48;");
    asm("loc_4A9C36: mov %ebp,%ecx;");
    asm("loc_4A9C38: movl $0x3E051EB8,0x58(%esp);");
    asm("loc_4A9C40: movl $0x3CD4FDF4,0x5C(%esp);");
    asm("loc_4A9C48: movl $0,0x60(%esp);");
    asm("loc_4A9C50: mov %eax,0x80(%esp);");
    asm("loc_4A9C57: movl $0,0x84(%esp);");
    asm("loc_4A9C62: call _sub_5A0C90;");
    asm("loc_4A9C67: push $1;");
    asm("loc_4A9C69: mov %eax,%ecx;");
    asm("loc_4A9C6B: mov %eax,0x350(%ebp);");
    asm("loc_4A9C71: call _sub_55BFC0;");
    asm("loc_4A9C76: flds 0x50(%esp);");
    asm("loc_4A9C7A: push %ebx;");
    asm("loc_4A9C7B: fsubs 0x30(%esp);");
    asm("loc_4A9C7F: push %ebx;");
    asm("loc_4A9C80: push %ebx;");
    asm("loc_4A9C81: mov 0x3C(%esp),%eax;");
    asm("loc_4A9C85: fstps 0x50(%esp);");
    asm("loc_4A9C89: push %ebx;");
    asm("loc_4A9C8A: push %ebx;");
    asm("loc_4A9C8B: push %ebx;");
    asm("loc_4A9C8C: push %ebx;");
    asm("loc_4A9C8D: lea 0x38(%esp),%ecx;");
    asm("loc_4A9C91: push %ecx;");
    asm("loc_4A9C92: push %ebx;");
    asm("loc_4A9C93: lea 0x64(%esp),%edx;");
    asm("loc_4A9C97: push %edx;");
    asm("loc_4A9C98: push %ebx;");
    asm("loc_4A9C99: push $_data_5CED30;");
    asm("loc_4A9C9E: push %ebx;");
    asm("loc_4A9C9F: push $_data_5D4F58;");
    asm("loc_4A9CA4: push $_data_5D4F38;");
    asm("loc_4A9CA9: mov %ebp,%ecx;");
    asm("loc_4A9CAB: movl $0x3E051EB8,0x58(%esp);");
    asm("loc_4A9CB3: movl $0x3CCCCCCD,0x5C(%esp);");
    asm("loc_4A9CBB: movl $0,0x60(%esp);");
    asm("loc_4A9CC3: mov %eax,0x7C(%esp);");
    asm("loc_4A9CC7: movl $0,0x84(%esp);");
    asm("loc_4A9CD2: call _sub_5A0C90;");
    asm("loc_4A9CD7: push $1;");
    asm("loc_4A9CD9: mov %eax,%ecx;");
    asm("loc_4A9CDB: mov %eax,0x34C(%ebp);");
    asm("loc_4A9CE1: call _sub_55BFC0;");
    asm("loc_4A9CE6: flds 0x2C(%esp);");
    asm("loc_4A9CEA: mov 0x30(%esp),%eax;");
    asm("loc_4A9CEE: fadd %st,%st(0);");
    asm("loc_4A9CF0: push %ebx;");
    asm("loc_4A9CF1: push %ebx;");
    asm("loc_4A9CF2: fstps 0x74(%esp);");
    asm("loc_4A9CF6: push %ebx;");
    asm("loc_4A9CF7: flds 0x5C(%esp);");
    asm("loc_4A9CFB: push %ebx;");
    asm("loc_4A9CFC: fsubs 0x7C(%esp);");
    asm("loc_4A9D00: push %ebx;");
    asm("loc_4A9D01: movl $0x3E051EB8,0x30(%esp);");
    asm("loc_4A9D09: movl $0x3CD4FDF4,0x34(%esp);");
    asm("loc_4A9D11: fstps 0x58(%esp);");
    asm("loc_4A9D15: movl $0,0x38(%esp);");
    asm("loc_4A9D1D: mov %eax,0x54(%esp);");
    asm("loc_4A9D21: movl $0,0x5C(%esp);");
    asm("loc_4A9D29: push %ebx;");
    asm("loc_4A9D2A: push %ebx;");
    asm("loc_4A9D2B: lea 0x38(%esp),%ecx;");
    asm("loc_4A9D2F: push %ecx;");
    asm("loc_4A9D30: push %ebx;");
    asm("loc_4A9D31: lea 0x64(%esp),%edx;");
    asm("loc_4A9D35: push %edx;");
    asm("loc_4A9D36: push %ebx;");
    asm("loc_4A9D37: push $_data_5CED30;");
    asm("loc_4A9D3C: push %ebx;");
    asm("loc_4A9D3D: push $_data_5D4F58;");
    asm("loc_4A9D42: push $_data_5D4F2C;");
    asm("loc_4A9D47: mov %ebp,%ecx;");
    asm("loc_4A9D49: call _sub_5A0C90;");
    asm("loc_4A9D4E: push $1;");
    asm("loc_4A9D50: mov %eax,%ecx;");
    asm("loc_4A9D52: mov %eax,0x354(%ebp);");
    asm("loc_4A9D58: call _sub_55BFC0;");
    asm("loc_4A9D5D: flds 0x2C(%esp);");
    asm("loc_4A9D61: fmuls _data_5D4F28;");
    asm("loc_4A9D67: push %ebx;");
    asm("loc_4A9D68: push %ebx;");
    asm("loc_4A9D69: push %ebx;");
    asm("loc_4A9D6A: mov 0x3C(%esp),%eax;");
    asm("loc_4A9D6E: fstps 0x34(%esp);");
    asm("loc_4A9D72: flds 0x5C(%esp);");
    asm("loc_4A9D76: push %ebx;");
    asm("loc_4A9D77: fsubs 0x38(%esp);");
    asm("loc_4A9D7B: push %ebx;");
    asm("loc_4A9D7C: push %ebx;");
    asm("loc_4A9D7D: push %ebx;");
    asm("loc_4A9D7E: lea 0x38(%esp),%ecx;");
    asm("loc_4A9D82: fstps 0x60(%esp);");
    asm("loc_4A9D86: push %ecx;");
    asm("loc_4A9D87: push %ebx;");
    asm("loc_4A9D88: lea 0x64(%esp),%edx;");
    asm("loc_4A9D8C: push %edx;");
    asm("loc_4A9D8D: push %ebx;");
    asm("loc_4A9D8E: push $_data_5CED30;");
    asm("loc_4A9D93: push %ebx;");
    asm("loc_4A9D94: push $_data_5D4F58;");
    asm("loc_4A9D99: push $_data_5D4F1C;");
    asm("loc_4A9D9E: mov %ebp,%ecx;");
    asm("loc_4A9DA0: movl $0x3E051EB8,0x58(%esp);");
    asm("loc_4A9DA8: movl $0x3CD4FDF4,0x5C(%esp);");
    asm("loc_4A9DB0: movl $0,0x60(%esp);");
    asm("loc_4A9DB8: mov %eax,0x7C(%esp);");
    asm("loc_4A9DBC: movl $0,0x84(%esp);");
    asm("loc_4A9DC7: call _sub_5A0C90;");
    asm("loc_4A9DCC: push $1;");
    asm("loc_4A9DCE: mov %eax,%ecx;");
    asm("loc_4A9DD0: mov %eax,0x358(%ebp);");
    asm("loc_4A9DD6: call _sub_55BFC0;");
    asm("loc_4A9DDB: flds 0x2C(%esp);");
    asm("loc_4A9DDF: mov 0x32D(%ebp),%al;");
    asm("loc_4A9DE5: push %ebx;");
    asm("loc_4A9DE6: push %ebx;");
    asm("loc_4A9DE7: push %ebx;");
    asm("loc_4A9DE8: push %ebx;");
    asm("loc_4A9DE9: push %ebx;");
    asm("loc_4A9DEA: push %ebx;");
    asm("loc_4A9DEB: push %ebx;");
    asm("loc_4A9DEC: lea 0x38(%esp),%ecx;");
    asm("loc_4A9DF0: push %ecx;");
    asm("loc_4A9DF1: push %ebx;");
    asm("loc_4A9DF2: lea 0x64(%esp),%edx;");
    asm("loc_4A9DF6: push %edx;");
    asm("loc_4A9DF7: push %ebx;");
    asm("loc_4A9DF8: push $_data_5CED30;");
    asm("loc_4A9DFD: test %al,%al;");
    asm("loc_4A9DFF: mov 0x60(%esp),%eax;");
    asm("loc_4A9E03: push %ebx;");
    asm("loc_4A9E04: movl $0,0x7C(%esp);");
    asm("loc_4A9E0C: movl $0,0x58(%esp);");
    asm("loc_4A9E14: movl $0x3CD4FDF4,0x54(%esp);");
    asm("loc_4A9E1C: movl $0x3E051EB8,0x50(%esp);");
    asm("loc_4A9E24: mov %ebp,%ecx;");
    asm("loc_4A9E26: push $_data_5D4F58;");
    asm("loc_4A9E2B: mov %eax,0x78(%esp);");
    asm("loc_4A9E2F: jne loc_4A9EA1;");
    asm("loc_4A9E31: fmuls _data_5CFC9C;");
    asm("loc_4A9E37: push $_data_5D4F0C;");
    asm("loc_4A9E3C: fsubrs 0x8C(%esp);");
    asm("loc_4A9E43: fstps 0x80(%esp);");
    asm("loc_4A9E4A: call _sub_5A0C90;");
    asm("loc_4A9E4F: push %ebx;");
    asm("loc_4A9E50: flds 0x30(%esp);");
    asm("loc_4A9E54: push %ebx;");
    asm("loc_4A9E55: push %ebx;");
    asm("loc_4A9E56: push %ebx;");
    asm("loc_4A9E57: push %ebx;");
    asm("loc_4A9E58: push %ebx;");
    asm("loc_4A9E59: push %ebx;");
    asm("loc_4A9E5A: lea 0x38(%esp),%ecx;");
    asm("loc_4A9E5E: push %ecx;");
    asm("loc_4A9E5F: push %ebx;");
    asm("loc_4A9E60: lea 0x64(%esp),%edx;");
    asm("loc_4A9E64: push %edx;");
    asm("loc_4A9E65: push %ebx;");
    asm("loc_4A9E66: push $_data_5CED30;");
    asm("loc_4A9E6B: mov %eax,0x35C(%ebp);");
    asm("loc_4A9E71: mov 0x60(%esp),%eax;");
    asm("loc_4A9E75: push %ebx;");
    asm("loc_4A9E76: movl $0x3E051EB8,0x50(%esp);");
    asm("loc_4A9E7E: movl $0x3CD4FDF4,0x54(%esp);");
    asm("loc_4A9E86: movl $0,0x58(%esp);");
    asm("loc_4A9E8E: mov %eax,0x74(%esp);");
    asm("loc_4A9E92: movl $0,0x7C(%esp);");
    asm("loc_4A9E9A: push $_data_5D4F58;");
    asm("loc_4A9E9F: mov %ebp,%ecx;");
    asm("loc_4A9EA1: fmuls _data_5D4F08;");
    asm("loc_4A9EA7: push $_data_5D4EF8;");
    asm("loc_4A9EAC: fstps 0x88(%esp);");
    asm("loc_4A9EB3: flds 0x8C(%esp);");
    asm("loc_4A9EBA: fsubs 0x88(%esp);");
    asm("loc_4A9EC1: fstps 0x80(%esp);");
    asm("loc_4A9EC8: call _sub_5A0C90;");
    asm("loc_4A9ECD: mov %eax,%ecx;");
    asm("loc_4A9ECF: push $1;");
    asm("loc_4A9ED1: mov %eax,0x360(%ebp);");
    asm("loc_4A9ED7: call _sub_55BFC0;");
    asm("loc_4A9EDC: flds 0x30(%esp);");
    asm("loc_4A9EE0: fsubl _data_5D4EF0;");
    asm("loc_4A9EE6: push $1;");
    asm("loc_4A9EE8: push %ebx;");
    asm("loc_4A9EE9: push $1;");
    asm("loc_4A9EEB: push $0x52E;");
    asm("loc_4A9EF0: fsts 0x40(%esp);");
    asm("loc_4A9EF4: push $0x3FA00000;");
    asm("loc_4A9EF9: fstps 0x30(%esp);");
    asm("loc_4A9EFD: flds 0x64(%esp);");
    asm("loc_4A9F01: push $0x3CF5C28F;");
    asm("loc_4A9F06: faddl _data_5D4EE8;");
    asm("loc_4A9F0C: push $0x3E841893;");
    asm("loc_4A9F11: push %ebx;");
    asm("loc_4A9F12: lea 0x3C(%esp),%eax;");
    asm("loc_4A9F16: push %eax;");
    asm("loc_4A9F17: fstl 0x78(%esp);");
    asm("loc_4A9F1B: push $_data_5D0410;");
    asm("loc_4A9F20: fstps 0x48(%esp);");
    asm("loc_4A9F24: push $_data_5D4ED4;");
    asm("loc_4A9F29: mov %ebp,%ecx;");
    asm("loc_4A9F2B: movl $0,0x50(%esp);");
    asm("loc_4A9F33: call _sub_5A0E30;");
    asm("loc_4A9F38: push %ebx;");
    asm("loc_4A9F39: push $1;");
    asm("loc_4A9F3B: mov %eax,0x368(%ebp);");
    asm("loc_4A9F41: mov (%eax),%edx;");
    asm("loc_4A9F43: push $0x24;");
    asm("loc_4A9F45: mov %eax,%ecx;");
    asm("loc_4A9F47: calll *0xA8(%edx);");
    asm("loc_4A9F4D: flds 0x2C(%esp);");
    asm("loc_4A9F51: fsubrl 0x54(%esp);");
    asm("loc_4A9F55: mov 0x30(%esp),%eax;");
    asm("loc_4A9F59: push $1;");
    asm("loc_4A9F5B: push %ebx;");
    asm("loc_4A9F5C: push $1;");
    asm("loc_4A9F5E: fstps 0x2C(%esp);");
    asm("loc_4A9F62: push $0x52F;");
    asm("loc_4A9F67: push $0x3FA00000;");
    asm("loc_4A9F6C: push $0x3CF5C28F;");
    asm("loc_4A9F71: push $0x3E841893;");
    asm("loc_4A9F76: push %ebx;");
    asm("loc_4A9F77: lea 0x3C(%esp),%ecx;");
    asm("loc_4A9F7B: push %ecx;");
    asm("loc_4A9F7C: push $_data_5D0410;");
    asm("loc_4A9F81: push $_data_5D4EC8;");
    asm("loc_4A9F86: mov %ebp,%ecx;");
    asm("loc_4A9F88: mov %eax,0x48(%esp);");
    asm("loc_4A9F8C: movl $0,0x50(%esp);");
    asm("loc_4A9F94: call _sub_5A0E30;");
    asm("loc_4A9F99: push %ebx;");
    asm("loc_4A9F9A: push $1;");
    asm("loc_4A9F9C: mov %eax,0x364(%ebp);");
    asm("loc_4A9FA2: mov (%eax),%edx;");
    asm("loc_4A9FA4: push $0x24;");
    asm("loc_4A9FA6: mov %eax,%ecx;");
    asm("loc_4A9FA8: calll *0xA8(%edx);");
    asm("loc_4A9FAE: flds 0x6C(%esp);");
    asm("loc_4A9FB2: fsubrl 0x54(%esp);");
    asm("loc_4A9FB6: mov 0x30(%esp),%eax;");
    asm("loc_4A9FBA: push $1;");
    asm("loc_4A9FBC: push %ebx;");
    asm("loc_4A9FBD: push $1;");
    asm("loc_4A9FBF: fstps 0x2C(%esp);");
    asm("loc_4A9FC3: push $0x5E2;");
    asm("loc_4A9FC8: push $0x3FA00000;");
    asm("loc_4A9FCD: push $0x3CF5C28F;");
    asm("loc_4A9FD2: mov %eax,0x34(%esp);");
    asm("loc_4A9FD6: movl $0,0x3C(%esp);");
    asm("loc_4A9FDE: push $0x3E841893;");
    asm("loc_4A9FE3: push %ebx;");
    asm("loc_4A9FE4: lea 0x3C(%esp),%ecx;");
    asm("loc_4A9FE8: push %ecx;");
    asm("loc_4A9FE9: push $_data_5D0410;");
    asm("loc_4A9FEE: push $_data_5D4EBC;");
    asm("loc_4A9FF3: mov %ebp,%ecx;");
    asm("loc_4A9FF5: call _sub_5A0E30;");
    asm("loc_4A9FFA: push %ebx;");
    asm("loc_4A9FFB: push $1;");
    asm("loc_4A9FFD: mov %eax,0x36C(%ebp);");
    asm("loc_4AA003: mov (%eax),%edx;");
    asm("loc_4AA005: push $0x24;");
    asm("loc_4AA007: mov %eax,%ecx;");
    asm("loc_4AA009: calll *0xA8(%edx);");
    asm("loc_4AA00F: flds 0x28(%esp);");
    asm("loc_4AA013: fsubrl 0x54(%esp);");
    asm("loc_4AA017: mov 0x30(%esp),%eax;");
    asm("loc_4AA01B: push $1;");
    asm("loc_4AA01D: push %ebx;");
    asm("loc_4AA01E: push $1;");
    asm("loc_4AA020: fstps 0x2C(%esp);");
    asm("loc_4AA024: push $0x5E3;");
    asm("loc_4AA029: push $0x3FA00000;");
    asm("loc_4AA02E: push $0x3CF5C28F;");
    asm("loc_4AA033: push $0x3E841893;");
    asm("loc_4AA038: push %ebx;");
    asm("loc_4AA039: lea 0x3C(%esp),%ecx;");
    asm("loc_4AA03D: push %ecx;");
    asm("loc_4AA03E: push $_data_5D0410;");
    asm("loc_4AA043: push $_data_5D4EB0;");
    asm("loc_4AA048: mov %ebp,%ecx;");
    asm("loc_4AA04A: mov %eax,0x48(%esp);");
    asm("loc_4AA04E: movl $0,0x50(%esp);");
    asm("loc_4AA056: call _sub_5A0E30;");
    asm("loc_4AA05B: push %ebx;");
    asm("loc_4AA05C: push $1;");
    asm("loc_4AA05E: mov %eax,0x370(%ebp);");
    asm("loc_4AA064: mov (%eax),%edx;");
    asm("loc_4AA066: push $0x24;");
    asm("loc_4AA068: mov %eax,%ecx;");
    asm("loc_4AA06A: calll *0xA8(%edx);");
    asm("loc_4AA070: mov 0x32D(%ebp),%al;");
    asm("loc_4AA076: test %al,%al;");
    asm("loc_4AA078: push $1;");
    asm("loc_4AA07A: push %ebx;");
    asm("loc_4AA07B: movl $0,0x2C(%esp);");
    asm("loc_4AA083: push $1;");
    asm("loc_4AA085: jne loc_4AA116;");
    asm("loc_4AA08B: flds 0x38(%esp);");
    asm("loc_4AA08F: mov 0x3C(%esp),%eax;");
    asm("loc_4AA093: fmuls _data_5CFC9C;");
    asm("loc_4AA099: push $0x532;");
    asm("loc_4AA09E: push $0x3FA00000;");
    asm("loc_4AA0A3: push $0x3CF5C28F;");
    asm("loc_4AA0A8: fsubrl 0x6C(%esp);");
    asm("loc_4AA0AC: push $0x3E841893;");
    asm("loc_4AA0B1: push %ebx;");
    asm("loc_4AA0B2: lea 0x3C(%esp),%ecx;");
    asm("loc_4AA0B6: push %ecx;");
    asm("loc_4AA0B7: fstps 0x44(%esp);");
    asm("loc_4AA0BB: push $_data_5D0410;");
    asm("loc_4AA0C0: push $_data_5D4EA4;");
    asm("loc_4AA0C5: mov %ebp,%ecx;");
    asm("loc_4AA0C7: mov %eax,0x48(%esp);");
    asm("loc_4AA0CB: call _sub_5A0E30;");
    asm("loc_4AA0D0: push %ebx;");
    asm("loc_4AA0D1: push $1;");
    asm("loc_4AA0D3: mov %eax,0x374(%ebp);");
    asm("loc_4AA0D9: mov (%eax),%edx;");
    asm("loc_4AA0DB: push $0x24;");
    asm("loc_4AA0DD: mov %eax,%ecx;");
    asm("loc_4AA0DF: calll *0xA8(%edx);");
    asm("loc_4AA0E5: mov 0x30(%esp),%eax;");
    asm("loc_4AA0E9: push $1;");
    asm("loc_4AA0EB: push %ebx;");
    asm("loc_4AA0EC: push $1;");
    asm("loc_4AA0EE: push $0x533;");
    asm("loc_4AA0F3: push $0x3FA00000;");
    asm("loc_4AA0F8: push $0x3CF5C28F;");
    asm("loc_4AA0FD: push $0x3E841893;");
    asm("loc_4AA102: push %ebx;");
    asm("loc_4AA103: lea 0x3C(%esp),%ecx;");
    asm("loc_4AA107: mov %eax,0x3C(%esp);");
    asm("loc_4AA10B: movl $0,0x44(%esp);");
    asm("loc_4AA113: push %ecx;");
    asm("loc_4AA114: jmp loc_4AA138;");
    asm("loc_4AA116: mov 0x3C(%esp),%edx;");
    asm("loc_4AA11A: push $0x58B;");
    asm("loc_4AA11F: push $0x3FA00000;");
    asm("loc_4AA124: push $0x3CF5C28F;");
    asm("loc_4AA129: push $0x3E841893;");
    asm("loc_4AA12E: push %ebx;");
    asm("loc_4AA12F: lea 0x3C(%esp),%eax;");
    asm("loc_4AA133: mov %edx,0x3C(%esp);");
    asm("loc_4AA137: push %eax;");
    asm("loc_4AA138: flds 0x70(%esp);");
    asm("loc_4AA13C: push $_data_5D0410;");
    asm("loc_4AA141: fsubrl 0x7C(%esp);");
    asm("loc_4AA145: mov %ebp,%ecx;");
    asm("loc_4AA147: push $_data_5D4E94;");
    asm("loc_4AA14C: fstps 0x4C(%esp);");
    asm("loc_4AA150: call _sub_5A0E30;");
    asm("loc_4AA155: push %ebx;");
    asm("loc_4AA156: mov %eax,%ecx;");
    asm("loc_4AA158: push $1;");
    asm("loc_4AA15A: mov %eax,0x378(%ebp);");
    asm("loc_4AA160: mov (%ecx),%edx;");
    asm("loc_4AA162: push $0x24;");
    asm("loc_4AA164: calll *0xA8(%edx);");
    asm("loc_4AA16A: mov 0x378(%ebp),%eax;");
    asm("loc_4AA170: mov _data_679BB0,%ecx;");
    asm("loc_4AA176: mov %ecx,0x348(%eax);");
    asm("loc_4AA17C: mov 0x32D(%ebp),%al;");
    asm("loc_4AA182: test %al,%al;");
    asm("loc_4AA184: movl $0x3E47AE14,0x50(%esp);");
    asm("loc_4AA18C: jne loc_4AA196;");
    asm("loc_4AA18E: movl $0x3E51EB85,0x50(%esp);");
    asm("loc_4AA196: push $_data_5D4A28;");
    asm("loc_4AA19B: mov %ebp,%ecx;");
    asm("loc_4AA19D: call _sub_4AFE30;");
    asm("loc_4AA1A2: flds 0x50(%esp);");
    asm("loc_4AA1A6: fadds _data_5D4E90;");
    asm("loc_4AA1AC: mov _import_5C71EC,%edi;");
    asm("loc_4AA1B2: mov %ebx,0x28(%esp);");
    asm("loc_4AA1B6: lea 0x5AC(%ebp),%esi;");
    asm("loc_4AA1BC: fstps 0x6C(%esp);");
    asm("loc_4AA1C0: push %ebx;");
    asm("loc_4AA1C1: lea 0xCC(%esp),%edx;");
    asm("loc_4AA1C8: push $_data_5D4E7C;");
    asm("loc_4AA1CD: push %edx;");
    asm("loc_4AA1CE: call *%edi;");
    asm("loc_4AA1D0: fildl 0x34(%esp);");
    asm("loc_4AA1D4: add $0xC,%esp;");
    asm("loc_4AA1D7: push $0;");
    asm("loc_4AA1D9: fmuls _data_5D4E78;");
    asm("loc_4AA1DF: push $0;");
    asm("loc_4AA1E1: push $0;");
    asm("loc_4AA1E3: push $0;");
    asm("loc_4AA1E5: push $0x3FB70A3D;");
    asm("loc_4AA1EA: fstps 0x3C(%esp);");
    asm("loc_4AA1EE: flds 0x64(%esp);");
    asm("loc_4AA1F2: push $0x3CF5C28F;");
    asm("loc_4AA1F7: fsubs 0x40(%esp);");
    asm("loc_4AA1FB: push $0x3E5C28F6;");
    asm("loc_4AA200: push $0;");
    asm("loc_4AA202: lea 0x3C(%esp),%eax;");
    asm("loc_4AA206: push %eax;");
    asm("loc_4AA207: fsts 0x50(%esp);");
    asm("loc_4AA20B: push $_data_5CE91C;");
    asm("loc_4AA210: fstps 0x48(%esp);");
    asm("loc_4AA214: lea 0xF0(%esp),%ecx;");
    asm("loc_4AA21B: push %ecx;");
    asm("loc_4AA21C: mov %ebp,%ecx;");
    asm("loc_4AA21E: movl $0xBCF5C28F,0x48(%esp);");
    asm("loc_4AA226: movl $0,0x50(%esp);");
    asm("loc_4AA22E: call _sub_5A0E30;");
    asm("loc_4AA233: push %ebx;");
    asm("loc_4AA234: lea 0xCC(%esp),%edx;");
    asm("loc_4AA23B: push $_data_5D4E6C;");
    asm("loc_4AA240: push %edx;");
    asm("loc_4AA241: mov %eax,-0x38(%esi);");
    asm("loc_4AA244: call *%edi;");
    asm("loc_4AA246: mov 0x38(%esp),%eax;");
    asm("loc_4AA24A: add $0xC,%esp;");
    asm("loc_4AA24D: push $0;");
    asm("loc_4AA24F: push $0;");
    asm("loc_4AA251: push $0;");
    asm("loc_4AA253: push $0;");
    asm("loc_4AA255: push $0x3F800000;");
    asm("loc_4AA25A: push $0x3CF5C28F;");
    asm("loc_4AA25F: push $0x3E5C28F6;");
    asm("loc_4AA264: push $0;");
    asm("loc_4AA266: lea 0x60(%esp),%ecx;");
    asm("loc_4AA26A: push %ecx;");
    asm("loc_4AA26B: push $_data_5D01A8;");
    asm("loc_4AA270: lea 0xF0(%esp),%edx;");
    asm("loc_4AA277: push %edx;");
    asm("loc_4AA278: mov %ebp,%ecx;");
    asm("loc_4AA27A: movl $0,0x6C(%esp);");
    asm("loc_4AA282: mov %eax,0x70(%esp);");
    asm("loc_4AA286: movl $0,0x74(%esp);");
    asm("loc_4AA28E: call _sub_5A0E30;");
    asm("loc_4AA293: push $0;");
    asm("loc_4AA295: push $1;");
    asm("loc_4AA297: mov %eax,(%esi);");
    asm("loc_4AA299: mov (%eax),%edx;");
    asm("loc_4AA29B: push $0x24;");
    asm("loc_4AA29D: mov %eax,%ecx;");
    asm("loc_4AA29F: calll *0xA8(%edx);");
    asm("loc_4AA2A5: mov (%esi),%eax;");
    asm("loc_4AA2A7: push %ebx;");
    asm("loc_4AA2A8: lea 0xCC(%esp),%ecx;");
    asm("loc_4AA2AF: push $_data_5D4E5C;");
    asm("loc_4AA2B4: push %ecx;");
    asm("loc_4AA2B5: movb $0,0x380(%eax);");
    asm("loc_4AA2BC: call *%edi;");
    asm("loc_4AA2BE: mov 0x38(%esp),%edx;");
    asm("loc_4AA2C2: add $0xC,%esp;");
    asm("loc_4AA2C5: push $0x67A;");
    asm("loc_4AA2CA: push $0x65F;");
    asm("loc_4AA2CF: movl $0x3C75C28F,0x5C(%esp);");
    asm("loc_4AA2D7: movl $0x3C75C28F,0x60(%esp);");
    asm("loc_4AA2DF: movl $0,0x64(%esp);");
    asm("loc_4AA2E7: movl $0x3ED47AE1,0xB8(%esp);");
    asm("loc_4AA2F2: mov %edx,0xBC(%esp);");
    asm("loc_4AA2F9: movl $0,0xC0(%esp);");
    asm("loc_4AA304: push $0;");
    asm("loc_4AA306: push $0;");
    asm("loc_4AA308: push $0;");
    asm("loc_4AA30A: push $0;");
    asm("loc_4AA30C: lea 0x6C(%esp),%eax;");
    asm("loc_4AA310: push %eax;");
    asm("loc_4AA311: push $0;");
    asm("loc_4AA313: lea 0xD0(%esp),%ecx;");
    asm("loc_4AA31A: push %ecx;");
    asm("loc_4AA31B: push $0;");
    asm("loc_4AA31D: push $_data_5D4E48;");
    asm("loc_4AA322: push $_data_5CB0D0;");
    asm("loc_4AA327: push $_data_5D4E20;");
    asm("loc_4AA32C: lea 0xFC(%esp),%edx;");
    asm("loc_4AA333: push %edx;");
    asm("loc_4AA334: mov %ebp,%ecx;");
    asm("loc_4AA336: call _sub_5A0FB0;");
    asm("loc_4AA33B: push $0;");
    asm("loc_4AA33D: push $1;");
    asm("loc_4AA33F: mov %eax,0x38(%esi);");
    asm("loc_4AA342: mov (%eax),%edx;");
    asm("loc_4AA344: push $0x35;");
    asm("loc_4AA346: mov %eax,%ecx;");
    asm("loc_4AA348: calll *0xA8(%edx);");
    asm("loc_4AA34E: mov 0x38(%esi),%eax;");
    asm("loc_4AA351: mov _data_679B94,%ecx;");
    asm("loc_4AA357: push %ebx;");
    asm("loc_4AA358: lea 0xCC(%esp),%edx;");
    asm("loc_4AA35F: push $_data_5D4E0C;");
    asm("loc_4AA364: push %edx;");
    asm("loc_4AA365: mov %ecx,0x370(%eax);");
    asm("loc_4AA36B: call *%edi;");
    asm("loc_4AA36D: flds 0x38(%esp);");
    asm("loc_4AA371: fsubs _data_5D3E90;");
    asm("loc_4AA377: add $0xC,%esp;");
    asm("loc_4AA37A: push $0;");
    asm("loc_4AA37C: push $0;");
    asm("loc_4AA37E: push $2;");
    asm("loc_4AA380: fsts 0x58(%esp);");
    asm("loc_4AA384: push $0;");
    asm("loc_4AA386: fstps 0xD0(%esp);");
    asm("loc_4AA38D: push $0x3F666666;");
    asm("loc_4AA392: push $0x3CF5C28F;");
    asm("loc_4AA397: push $0x3E6147AE;");
    asm("loc_4AA39C: push $0;");
    asm("loc_4AA39E: lea 0xDC(%esp),%eax;");
    asm("loc_4AA3A5: push %eax;");
    asm("loc_4AA3A6: push $_data_5D01A8;");
    asm("loc_4AA3AB: lea 0xF0(%esp),%ecx;");
    asm("loc_4AA3B2: push %ecx;");
    asm("loc_4AA3B3: mov %ebp,%ecx;");
    asm("loc_4AA3B5: movl $0x3E8F5C29,0xE8(%esp);");
    asm("loc_4AA3C0: movl $0,0xF0(%esp);");
    asm("loc_4AA3CB: call _sub_5A0E30;");
    asm("loc_4AA3D0: push %ebx;");
    asm("loc_4AA3D1: lea 0xCC(%esp),%edx;");
    asm("loc_4AA3D8: push $_data_5D4DFC;");
    asm("loc_4AA3DD: push %edx;");
    asm("loc_4AA3DE: mov %eax,0x70(%esi);");
    asm("loc_4AA3E1: call *%edi;");
    asm("loc_4AA3E3: flds 0x78(%esp);");
    asm("loc_4AA3E7: fsubs 0x34(%esp);");
    asm("loc_4AA3EB: add $0xC,%esp;");
    asm("loc_4AA3EE: push $1;");
    asm("loc_4AA3F0: push $1;");
    asm("loc_4AA3F2: push $0x64;");
    asm("loc_4AA3F4: fstps 0xB4(%esp);");
    asm("loc_4AA3FB: push $0;");
    asm("loc_4AA3FD: push $0x3C656042;");
    asm("loc_4AA402: push $0x3E75C28F;");
    asm("loc_4AA407: lea 0xBC(%esp),%eax;");
    asm("loc_4AA40E: push %eax;");
    asm("loc_4AA40F: lea 0xE4(%esp),%ecx;");
    asm("loc_4AA416: push %ecx;");
    asm("loc_4AA417: mov %ebp,%ecx;");
    asm("loc_4AA419: movl $0x3E428F5C,0xC4(%esp);");
    asm("loc_4AA424: movl $0xBF800000,0xCC(%esp);");
    asm("loc_4AA42F: call _sub_5A17E0;");
    asm("loc_4AA434: push $0x64;");
    asm("loc_4AA436: mov %eax,0xA8(%esi);");
    asm("loc_4AA43C: mov (%eax),%edx;");
    asm("loc_4AA43E: push $0;");
    asm("loc_4AA440: push $0x37;");
    asm("loc_4AA442: mov %eax,%ecx;");
    asm("loc_4AA444: calll *0xA8(%edx);");
    asm("loc_4AA44A: mov 0xA8(%esi),%eax;");
    asm("loc_4AA450: push %ebx;");
    asm("loc_4AA451: movb $1,0x3B4(%eax);");
    asm("loc_4AA458: movl $0x3F800000,0x3CC(%eax);");
    asm("loc_4AA462: lea 0xCC(%esp),%eax;");
    asm("loc_4AA469: push $_data_5D4DE8;");
    asm("loc_4AA46E: push %eax;");
    asm("loc_4AA46F: call *%edi;");
    asm("loc_4AA471: mov 0x38(%esp),%ecx;");
    asm("loc_4AA475: add $0xC,%esp;");
    asm("loc_4AA478: push $0;");
    asm("loc_4AA47A: push $0;");
    asm("loc_4AA47C: push $2;");
    asm("loc_4AA47E: push $0;");
    asm("loc_4AA480: push $0x3F4CCCCD;");
    asm("loc_4AA485: push $0x3CA3D70A;");
    asm("loc_4AA48A: push $0x3DE147AE;");
    asm("loc_4AA48F: push $0;");
    asm("loc_4AA491: lea 0xAC(%esp),%edx;");
    asm("loc_4AA498: push %edx;");
    asm("loc_4AA499: push $_data_5D4DDC;");
    asm("loc_4AA49E: lea 0xF0(%esp),%eax;");
    asm("loc_4AA4A5: mov %ecx,0xB8(%esp);");
    asm("loc_4AA4AC: push %eax;");
    asm("loc_4AA4AD: mov %ebp,%ecx;");
    asm("loc_4AA4AF: movl $0x3E083127,0xB8(%esp);");
    asm("loc_4AA4BA: movl $0,0xC0(%esp);");
    asm("loc_4AA4C5: call _sub_5A0E30;");
    asm("loc_4AA4CA: push %ebx;");
    asm("loc_4AA4CB: lea 0xCC(%esp),%ecx;");
    asm("loc_4AA4D2: push $_data_5D4DC4;");
    asm("loc_4AA4D7: push %ecx;");
    asm("loc_4AA4D8: mov %eax,0x150(%esi);");
    asm("loc_4AA4DE: call *%edi;");
    asm("loc_4AA4E0: flds 0x38(%esp);");
    asm("loc_4AA4E4: fadds _data_5D2A08;");
    asm("loc_4AA4EA: add $0xC,%esp;");
    asm("loc_4AA4ED: push $0;");
    asm("loc_4AA4EF: push $0;");
    asm("loc_4AA4F1: push $0;");
    asm("loc_4AA4F3: fsts 0x34(%esp);");
    asm("loc_4AA4F7: push $0;");
    asm("loc_4AA4F9: fstps 0x94(%esp);");
    asm("loc_4AA500: push $0x3F4CCCCD;");
    asm("loc_4AA505: push $0x3CA3D70A;");
    asm("loc_4AA50A: push $0x3DE147AE;");
    asm("loc_4AA50F: push $0;");
    asm("loc_4AA511: lea 0xA0(%esp),%edx;");
    asm("loc_4AA518: push %edx;");
    asm("loc_4AA519: push $_data_5D4DBC;");
    asm("loc_4AA51E: lea 0xF0(%esp),%eax;");
    asm("loc_4AA525: push %eax;");
    asm("loc_4AA526: mov %ebp,%ecx;");
    asm("loc_4AA528: movl $0x3E851EB8,0xAC(%esp);");
    asm("loc_4AA533: movl $0,0xB4(%esp);");
    asm("loc_4AA53E: call _sub_5A0E30;");
    asm("loc_4AA543: push %ebx;");
    asm("loc_4AA544: lea 0xCC(%esp),%ecx;");
    asm("loc_4AA54B: push $_data_5D4DA4;");
    asm("loc_4AA550: push %ecx;");
    asm("loc_4AA551: mov %eax,0xE0(%esi);");
    asm("loc_4AA557: call *%edi;");
    asm("loc_4AA559: mov 0x34(%esp),%edx;");
    asm("loc_4AA55D: add $0xC,%esp;");
    asm("loc_4AA560: push $0;");
    asm("loc_4AA562: push $0;");
    asm("loc_4AA564: push $2;");
    asm("loc_4AA566: push $0;");
    asm("loc_4AA568: push $0x3F4CCCCD;");
    asm("loc_4AA56D: push $0x3CA3D70A;");
    asm("loc_4AA572: push $0x3DE147AE;");
    asm("loc_4AA577: push $0;");
    asm("loc_4AA579: lea 0xB8(%esp),%eax;");
    asm("loc_4AA580: push %eax;");
    asm("loc_4AA581: movl $0x3EB7CED9,0xBC(%esp);");
    asm("loc_4AA58C: mov %edx,0xC0(%esp);");
    asm("loc_4AA593: movl $0,0xC4(%esp);");
    asm("loc_4AA59E: push $_data_5D4DBC;");
    asm("loc_4AA5A3: lea 0xF0(%esp),%ecx;");
    asm("loc_4AA5AA: push %ecx;");
    asm("loc_4AA5AB: mov %ebp,%ecx;");
    asm("loc_4AA5AD: call _sub_5A0E30;");
    asm("loc_4AA5B2: push %ebx;");
    asm("loc_4AA5B3: lea 0xCC(%esp),%edx;");
    asm("loc_4AA5BA: push $_data_5D4D94;");
    asm("loc_4AA5BF: push %edx;");
    asm("loc_4AA5C0: mov %eax,0x118(%esi);");
    asm("loc_4AA5C6: call *%edi;");
    asm("loc_4AA5C8: mov 0x38(%esp),%eax;");
    asm("loc_4AA5CC: add $0xC,%esp;");
    asm("loc_4AA5CF: push $0;");
    asm("loc_4AA5D1: push $0;");
    asm("loc_4AA5D3: push $0;");
    asm("loc_4AA5D5: push $0;");
    asm("loc_4AA5D7: push $0;");
    asm("loc_4AA5D9: lea 0x88(%esp),%ecx;");
    asm("loc_4AA5E0: push %ecx;");
    asm("loc_4AA5E1: lea 0x4C(%esp),%edx;");
    asm("loc_4AA5E5: push %edx;");
    asm("loc_4AA5E6: mov %eax,0x54(%esp);");
    asm("loc_4AA5EA: push $_data_5CED30;");
    asm("loc_4AA5EF: lea 0xE8(%esp),%eax;");
    asm("loc_4AA5F6: push %eax;");
    asm("loc_4AA5F7: mov %ebp,%ecx;");
    asm("loc_4AA5F9: movl $0x3DB851EC,0x98(%esp);");
    asm("loc_4AA604: movl $0x3C343958,0x9C(%esp);");
    asm("loc_4AA60F: movl $0,0xA0(%esp);");
    asm("loc_4AA61A: movl $0x3EA3D70A,0x58(%esp);");
    asm("loc_4AA622: movl $0,0x60(%esp);");
    asm("loc_4AA62A: call _sub_5A0D00;");
    asm("loc_4AA62F: mov %eax,0x188(%esi);");
    asm("loc_4AA635: mov _data_679B94,%ecx;");
    asm("loc_4AA63B: mov %ecx,0x378(%eax);");
    asm("loc_4AA641: mov 0x188(%esi),%eax;");
    asm("loc_4AA647: mov 0x35D(%eax),%cl;");
    asm("loc_4AA64D: push %ebx;");
    asm("loc_4AA64E: lea 0xCC(%esp),%edx;");
    asm("loc_4AA655: or $1,%cl;");
    asm("loc_4AA658: push $_data_5D4D80;");
    asm("loc_4AA65D: push %edx;");
    asm("loc_4AA65E: mov %cl,0x35D(%eax);");
    asm("loc_4AA664: call *%edi;");
    asm("loc_4AA666: mov 0x58(%esp),%eax;");
    asm("loc_4AA66A: add $0xC,%esp;");
    asm("loc_4AA66D: push $0;");
    asm("loc_4AA66F: push $0;");
    asm("loc_4AA671: push $1;");
    asm("loc_4AA673: push $0;");
    asm("loc_4AA675: push $0x3F666666;");
    asm("loc_4AA67A: push $0x3CF5C28F;");
    asm("loc_4AA67F: push $0x3E3851EC;");
    asm("loc_4AA684: push $0;");
    asm("loc_4AA686: lea 0x30(%esp),%ecx;");
    asm("loc_4AA68A: push %ecx;");
    asm("loc_4AA68B: push $_data_5D010C;");
    asm("loc_4AA690: lea 0xF0(%esp),%edx;");
    asm("loc_4AA697: push %edx;");
    asm("loc_4AA698: mov %ebp,%ecx;");
    asm("loc_4AA69A: movl $0x3EA3D70A,0x3C(%esp);");
    asm("loc_4AA6A2: mov %eax,0x40(%esp);");
    asm("loc_4AA6A6: movl $0,0x44(%esp);");
    asm("loc_4AA6AE: call _sub_5A0E30;");
    asm("loc_4AA6B3: inc %ebx;");
    asm("loc_4AA6B4: mov %eax,0x1C0(%esi);");
    asm("loc_4AA6BA: add $4,%esi;");
    asm("loc_4AA6BD: cmp $0xE,%ebx;");
    asm("loc_4AA6C0: mov %ebx,0x28(%esp);");
    asm("loc_4AA6C4: jl loc_4AA1C0;");
    asm("loc_4AA6CA: push $1;");
    asm("loc_4AA6CC: push $0;");
    asm("loc_4AA6CE: push $0;");
    asm("loc_4AA6D0: push $0;");
    asm("loc_4AA6D2: lea 0x20(%esp),%eax;");
    asm("loc_4AA6D6: push %eax;");
    asm("loc_4AA6D7: lea 0x48(%esp),%ecx;");
    asm("loc_4AA6DB: push %ecx;");
    asm("loc_4AA6DC: push $_data_5D4D70;");
    asm("loc_4AA6E1: mov %ebp,%ecx;");
    asm("loc_4AA6E3: movl $0x3F07AE14,0x2C(%esp);");
    asm("loc_4AA6EB: movl $0x3CF1A9FC,0x30(%esp);");
    asm("loc_4AA6F3: movl $0,0x34(%esp);");
    asm("loc_4AA6FB: movl $0x3E9EB852,0x50(%esp);");
    asm("loc_4AA703: movl $0x3E9EB852,0x54(%esp);");
    asm("loc_4AA70B: movl $0xBF800000,0x58(%esp);");
    asm("loc_4AA713: call _sub_5A0D60;");
    asm("loc_4AA718: push $0;");
    asm("loc_4AA71A: push $0;");
    asm("loc_4AA71C: push $0;");
    asm("loc_4AA71E: push $0;");
    asm("loc_4AA720: push $0;");
    asm("loc_4AA722: lea 0x24(%esp),%edx;");
    asm("loc_4AA726: push %edx;");
    asm("loc_4AA727: mov %eax,0x7A4(%ebp);");
    asm("loc_4AA72D: lea 0x4C(%esp),%eax;");
    asm("loc_4AA731: push %eax;");
    asm("loc_4AA732: push $_data_5CED30;");
    asm("loc_4AA737: push $_data_5D4D60;");
    asm("loc_4AA73C: mov %ebp,%ecx;");
    asm("loc_4AA73E: movl $0x3D8F5C29,0x34(%esp);");
    asm("loc_4AA746: movl $0x3C75C28F,0x38(%esp);");
    asm("loc_4AA74E: movl $0,0x3C(%esp);");
    asm("loc_4AA756: movl $0x3E9A1CAC,0x58(%esp);");
    asm("loc_4AA75E: movl $0xBE970A3D,0x5C(%esp);");
    asm("loc_4AA766: movl $0,0x60(%esp);");
    asm("loc_4AA76E: call _sub_5A0D00;");
    asm("loc_4AA773: push $0;");
    asm("loc_4AA775: push $0;");
    asm("loc_4AA777: push $0;");
    asm("loc_4AA779: push $0;");
    asm("loc_4AA77B: push $0;");
    asm("loc_4AA77D: lea 0x24(%esp),%ecx;");
    asm("loc_4AA781: push %ecx;");
    asm("loc_4AA782: lea 0x4C(%esp),%edx;");
    asm("loc_4AA786: push %edx;");
    asm("loc_4AA787: push $_data_5CED30;");
    asm("loc_4AA78C: push $_data_5D4D48;");
    asm("loc_4AA791: mov %ebp,%ecx;");
    asm("loc_4AA793: mov %eax,0x7A8(%ebp);");
    asm("loc_4AA799: movl $0x3D8F5C29,0x34(%esp);");
    asm("loc_4AA7A1: movl $0x3C75C28F,0x38(%esp);");
    asm("loc_4AA7A9: movl $0,0x3C(%esp);");
    asm("loc_4AA7B1: movl $0xBC75C28F,0x58(%esp);");
    asm("loc_4AA7B9: movl $0xBE970A3D,0x5C(%esp);");
    asm("loc_4AA7C1: movl $0,0x60(%esp);");
    asm("loc_4AA7C9: call _sub_5A0D00;");
    asm("loc_4AA7CE: push $0;");
    asm("loc_4AA7D0: push $0;");
    asm("loc_4AA7D2: push $1;");
    asm("loc_4AA7D4: push $0x2148;");
    asm("loc_4AA7D9: push $0x3F800000;");
    asm("loc_4AA7DE: mov %eax,0x7B0(%ebp);");
    asm("loc_4AA7E4: mov 0x7A8(%ebp),%eax;");
    asm("loc_4AA7EA: mov _data_679B94,%ecx;");
    asm("loc_4AA7F0: push $0x3CF5C28F;");
    asm("loc_4AA7F5: mov %ecx,0x378(%eax);");
    asm("loc_4AA7FB: mov 0x7B0(%ebp),%edx;");
    asm("loc_4AA801: mov _data_679B94,%eax;");
    asm("loc_4AA806: push $0x3E8A3D71;");
    asm("loc_4AA80B: push $0;");
    asm("loc_4AA80D: lea 0x30(%esp),%ecx;");
    asm("loc_4AA811: push %ecx;");
    asm("loc_4AA812: push $_data_5D010C;");
    asm("loc_4AA817: push $_data_5D4D38;");
    asm("loc_4AA81C: mov %ebp,%ecx;");
    asm("loc_4AA81E: mov %eax,0x378(%edx);");
    asm("loc_4AA824: movl $0x3E9A1CAC,0x3C(%esp);");
    asm("loc_4AA82C: movl $0xBE981062,0x40(%esp);");
    asm("loc_4AA834: movl $0,0x44(%esp);");
    asm("loc_4AA83C: call _sub_5A0E30;");
    asm("loc_4AA841: push $0;");
    asm("loc_4AA843: push $0;");
    asm("loc_4AA845: push $1;");
    asm("loc_4AA847: push $0x5E4;");
    asm("loc_4AA84C: push $0x3F800000;");
    asm("loc_4AA851: push $0x3CF5C28F;");
    asm("loc_4AA856: push $0x3E8A3D71;");
    asm("loc_4AA85B: push $0;");
    asm("loc_4AA85D: lea 0x30(%esp),%edx;");
    asm("loc_4AA861: push %edx;");
    asm("loc_4AA862: push $_data_5D010C;");
    asm("loc_4AA867: push $_data_5D4D20;");
    asm("loc_4AA86C: mov %ebp,%ecx;");
    asm("loc_4AA86E: mov %eax,0x7AC(%ebp);");
    asm("loc_4AA874: movl $0xBC75C28F,0x3C(%esp);");
    asm("loc_4AA87C: movl $0xBE981062,0x40(%esp);");
    asm("loc_4AA884: movl $0,0x44(%esp);");
    asm("loc_4AA88C: call _sub_5A0E30;");
    asm("loc_4AA891: push $0;");
    asm("loc_4AA893: push $0;");
    asm("loc_4AA895: push $0;");
    asm("loc_4AA897: push $0;");
    asm("loc_4AA899: push $0x3CCCCCCD;");
    asm("loc_4AA89E: mov %eax,0x7B4(%ebp);");
    asm("loc_4AA8A4: push $0x3C449BA6;");
    asm("loc_4AA8A9: lea 0x28(%esp),%eax;");
    asm("loc_4AA8AD: push %eax;");
    asm("loc_4AA8AE: push $_data_5D4D0C;");
    asm("loc_4AA8B3: mov %ebp,%ecx;");
    asm("loc_4AA8B5: movl $0x3ED47AE1,0x30(%esp);");
    asm("loc_4AA8BD: movl $0x3E604189,0x34(%esp);");
    asm("loc_4AA8C5: movl $0xBF800000,0x38(%esp);");
    asm("loc_4AA8CD: call _sub_5A1870;");
    asm("loc_4AA8D2: push $0xF;");
    asm("loc_4AA8D4: push $0;");
    asm("loc_4AA8D6: push $0;");
    asm("loc_4AA8D8: push $0;");
    asm("loc_4AA8DA: lea 0x20(%esp),%ecx;");
    asm("loc_4AA8DE: push %ecx;");
    asm("loc_4AA8DF: lea 0x48(%esp),%edx;");
    asm("loc_4AA8E3: push %edx;");
    asm("loc_4AA8E4: push $_data_5D4CFC;");
    asm("loc_4AA8E9: mov %ebp,%ecx;");
    asm("loc_4AA8EB: mov %eax,0x564(%ebp);");
    asm("loc_4AA8F1: movl $0x3E6147AE,0x2C(%esp);");
    asm("loc_4AA8F9: movl $0x3CCCCCCD,0x30(%esp);");
    asm("loc_4AA901: movl $0,0x34(%esp);");
    asm("loc_4AA909: movl $0x3F1A9FBE,0x50(%esp);");
    asm("loc_4AA911: movl $0x3ED2F1AA,0x54(%esp);");
    asm("loc_4AA919: movl $0xBF800000,0x58(%esp);");
    asm("loc_4AA921: call _sub_5A0D60;");
    asm("loc_4AA926: push $0xF;");
    asm("loc_4AA928: push $0;");
    asm("loc_4AA92A: push $0;");
    asm("loc_4AA92C: push $0;");
    asm("loc_4AA92E: mov %eax,0x568(%ebp);");
    asm("loc_4AA934: lea 0x20(%esp),%eax;");
    asm("loc_4AA938: push %eax;");
    asm("loc_4AA939: lea 0x48(%esp),%ecx;");
    asm("loc_4AA93D: push %ecx;");
    asm("loc_4AA93E: push $_data_5D4CEC;");
    asm("loc_4AA943: mov %ebp,%ecx;");
    asm("loc_4AA945: movl $0x3C54FDF4,0x2C(%esp);");
    asm("loc_4AA94D: movl $0x3CCCCCCD,0x30(%esp);");
    asm("loc_4AA955: movl $0,0x34(%esp);");
    asm("loc_4AA95D: movl $0x3F578D50,0x50(%esp);");
    asm("loc_4AA965: movl $0x3ED2F1AA,0x54(%esp);");
    asm("loc_4AA96D: movl $0xBF800000,0x58(%esp);");
    asm("loc_4AA975: call _sub_5A0D60;");
    asm("loc_4AA97A: push $0;");
    asm("loc_4AA97C: push $0;");
    asm("loc_4AA97E: push $1;");
    asm("loc_4AA980: push $0;");
    asm("loc_4AA982: push $0x3F666666;");
    asm("loc_4AA987: push $0x3CF5C28F;");
    asm("loc_4AA98C: push $0x3E604189;");
    asm("loc_4AA991: mov %eax,0x56C(%ebp);");
    asm("loc_4AA997: movl $0x3E9A1CAC,0x2C(%esp);");
    asm("loc_4AA99F: movl $0x3E4ED917,0x30(%esp);");
    asm("loc_4AA9A7: movl $0,0x34(%esp);");
    asm("loc_4AA9AF: push $0;");
    asm("loc_4AA9B1: lea 0x30(%esp),%edx;");
    asm("loc_4AA9B5: push %edx;");
    asm("loc_4AA9B6: push $_data_5D010C;");
    asm("loc_4AA9BB: push $_data_5D4CDC;");
    asm("loc_4AA9C0: mov %ebp,%ecx;");
    asm("loc_4AA9C2: call _sub_5A0E30;");
    asm("loc_4AA9C7: mov %eax,0x570(%ebp);");
    asm("loc_4AA9CD: mov 0x564(%ebp),%eax;");
    asm("loc_4AA9D3: push $0;");
    asm("loc_4AA9D5: movb $1,0x3B4(%eax);");
    asm("loc_4AA9DC: movl $0x3F800000,0x3CC(%eax);");
    asm("loc_4AA9E6: mov 0x570(%ebp),%ecx;");
    asm("loc_4AA9EC: mov (%ecx),%eax;");
    asm("loc_4AA9EE: push $1;");
    asm("loc_4AA9F0: push $0x24;");
    asm("loc_4AA9F2: calll *0xA8(%eax);");
    asm("loc_4AA9F8: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4AA9FE: movb $0,0x848(%ebp);");
    asm("loc_4AAA05: mov _data_679B94,%eax;");
    asm("loc_4AAA0A: mov %eax,0x348(%ecx);");
    asm("loc_4AAA10: mov 0x7A8(%ebp),%edx;");
    asm("loc_4AAA16: movb $1,0x37C(%edx);");
    asm("loc_4AAA1D: mov 0x7A8(%ebp),%eax;");
    asm("loc_4AAA23: mov 0x388(%eax),%bl;");
    asm("loc_4AAA29: and $0xFB,%bl;");
    asm("loc_4AAA2C: mov %ebp,%ecx;");
    asm("loc_4AAA2E: mov %bl,0x388(%eax);");
    asm("loc_4AAA34: call _sub_4AED70;");
    asm("loc_4AAA39: mov %ebp,%ecx;");
    asm("loc_4AAA3B: call _sub_4AECA0;");
    asm("loc_4AAA40: push $_data_5D4CBC;");
    asm("loc_4AAA45: mov %ebp,%ecx;");
    asm("loc_4AAA47: call _sub_4AF230;");
    asm("loc_4AAA4C: mov 0x800(%ebp),%eax;");
    asm("loc_4AAA52: test %eax,%eax;");
    asm("loc_4AAA54: jne loc_4AAA5A;");
    asm("loc_4AAA56: xor %edx,%edx;");
    asm("loc_4AAA58: jmp loc_4AAA73;");
    asm("loc_4AAA5A: mov 0x804(%ebp),%ecx;");
    asm("loc_4AAA60: sub %eax,%ecx;");
    asm("loc_4AAA62: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AAA67: imul %ecx;");
    asm("loc_4AAA69: sar $3,%edx;");
    asm("loc_4AAA6C: mov %edx,%eax;");
    asm("loc_4AAA6E: shr $0x1F,%eax;");
    asm("loc_4AAA71: add %eax,%edx;");
    asm("loc_4AAA73: push $0;");
    asm("loc_4AAA75: push $0xD;");
    asm("loc_4AAA77: push %edx;");
    asm("loc_4AAA78: push $0;");
    asm("loc_4AAA7A: push $0x3EC7AE14;");
    asm("loc_4AAA7F: push $0x3C75C28F;");
    asm("loc_4AAA84: lea 0x28(%esp),%ecx;");
    asm("loc_4AAA88: push %ecx;");
    asm("loc_4AAA89: push $_data_5D4CAC;");
    asm("loc_4AAA8E: mov %ebp,%ecx;");
    asm("loc_4AAA90: movl $0x3ED47AE1,0x30(%esp);");
    asm("loc_4AAA98: movl $0x3E0A3D71,0x34(%esp);");
    asm("loc_4AAAA0: movl $0xBF800000,0x38(%esp);");
    asm("loc_4AAAA8: call _sub_5A17E0;");
    asm("loc_4AAAAD: xor %esi,%esi;");
    asm("loc_4AAAAF: mov %eax,0x4B8(%ebp);");
    asm("loc_4AAAB5: mov %esi,0x4C(%esp);");
    asm("loc_4AAAB9: lea 0x4C4(%ebp),%ebx;");
    asm("loc_4AAABF: nop;");
    asm("loc_4AAAC0: push %esi;");
    asm("loc_4AAAC1: lea 0xCC(%esp),%edx;");
    asm("loc_4AAAC8: push $_data_5D4C98;");
    asm("loc_4AAACD: push %edx;");
    asm("loc_4AAACE: call *%edi;");
    asm("loc_4AAAD0: fildl 0x58(%esp);");
    asm("loc_4AAAD4: add $0xC,%esp;");
    asm("loc_4AAAD7: push $0xF;");
    asm("loc_4AAAD9: fmull _data_5D4C90;");
    asm("loc_4AAADF: push $0;");
    asm("loc_4AAAE1: push $0;");
    asm("loc_4AAAE3: push $0;");
    asm("loc_4AAAE5: fsubl _data_5D4C88;");
    asm("loc_4AAAEB: push $0;");
    asm("loc_4AAAED: lea 0x24(%esp),%eax;");
    asm("loc_4AAAF1: push %eax;");
    asm("loc_4AAAF2: lea 0x4C(%esp),%ecx;");
    asm("loc_4AAAF6: fstps 0x4C(%esp);");
    asm("loc_4AAAFA: push %ecx;");
    asm("loc_4AAAFB: push $_data_5CED30;");
    asm("loc_4AAB00: lea 0xE8(%esp),%edx;");
    asm("loc_4AAB07: push %edx;");
    asm("loc_4AAB08: mov %ebp,%ecx;");
    asm("loc_4AAB0A: movl $0x3D8F5C29,0x34(%esp);");
    asm("loc_4AAB12: movl $0x3C75C28F,0x38(%esp);");
    asm("loc_4AAB1A: movl $0,0x3C(%esp);");
    asm("loc_4AAB22: movl $0x3E428F5C,0x5C(%esp);");
    asm("loc_4AAB2A: movl $0,0x60(%esp);");
    asm("loc_4AAB32: call _sub_5A0D00;");
    asm("loc_4AAB37: mov %eax,(%ebx);");
    asm("loc_4AAB39: mov 0x35C(%eax),%cl;");
    asm("loc_4AAB3F: and $0xBF,%cl;");
    asm("loc_4AAB42: inc %esi;");
    asm("loc_4AAB43: add $4,%ebx;");
    asm("loc_4AAB46: cmp $3,%esi;");
    asm("loc_4AAB49: mov %cl,0x35C(%eax);");
    asm("loc_4AAB4F: mov %esi,0x4C(%esp);");
    asm("loc_4AAB53: jl loc_4AAAC0;");
    asm("loc_4AAB59: push $0;");
    asm("loc_4AAB5B: push $0;");
    asm("loc_4AAB5D: push $1;");
    asm("loc_4AAB5F: push $0x76E;");
    asm("loc_4AAB64: push $0x3F666666;");
    asm("loc_4AAB69: push $0x3CF1A9FC;");
    asm("loc_4AAB6E: push $0x3E000000;");
    asm("loc_4AAB73: push $0;");
    asm("loc_4AAB75: lea 0x30(%esp),%eax;");
    asm("loc_4AAB79: push %eax;");
    asm("loc_4AAB7A: push $_data_5D010C;");
    asm("loc_4AAB7F: push $_data_5D4C74;");
    asm("loc_4AAB84: mov %ebp,%ecx;");
    asm("loc_4AAB86: movl $0xBCE56042,0x3C(%esp);");
    asm("loc_4AAB8E: movl $0x3E400000,0x40(%esp);");
    asm("loc_4AAB96: movl $0,0x44(%esp);");
    asm("loc_4AAB9E: lea 0x4D4(%ebp),%esi;");
    asm("loc_4AABA4: call _sub_5A0E30;");
    asm("loc_4AABA9: push $0;");
    asm("loc_4AABAB: push $0;");
    asm("loc_4AABAD: push $1;");
    asm("loc_4AABAF: push $0x76F;");
    asm("loc_4AABB4: push $0x3F666666;");
    asm("loc_4AABB9: push $0x3CF1A9FC;");
    asm("loc_4AABBE: push $0x3E000000;");
    asm("loc_4AABC3: push $0;");
    asm("loc_4AABC5: lea 0x30(%esp),%ecx;");
    asm("loc_4AABC9: push %ecx;");
    asm("loc_4AABCA: push $_data_5D010C;");
    asm("loc_4AABCF: push $_data_5D4C64;");
    asm("loc_4AABD4: mov %ebp,%ecx;");
    asm("loc_4AABD6: mov %eax,(%esi);");
    asm("loc_4AABD8: movl $0x3E178D50,0x3C(%esp);");
    asm("loc_4AABE0: movl $0x3E400000,0x40(%esp);");
    asm("loc_4AABE8: movl $0,0x44(%esp);");
    asm("loc_4AABF0: call _sub_5A0E30;");
    asm("loc_4AABF5: push $0;");
    asm("loc_4AABF7: push $0;");
    asm("loc_4AABF9: push $1;");
    asm("loc_4AABFB: push $0x770;");
    asm("loc_4AAC00: push $0x3F666666;");
    asm("loc_4AAC05: push $0x3CF1A9FC;");
    asm("loc_4AAC0A: push $0x3E000000;");
    asm("loc_4AAC0F: push $0;");
    asm("loc_4AAC11: lea 0x30(%esp),%edx;");
    asm("loc_4AAC15: push %edx;");
    asm("loc_4AAC16: push $_data_5D010C;");
    asm("loc_4AAC1B: push $_data_5D4C54;");
    asm("loc_4AAC20: mov %ebp,%ecx;");
    asm("loc_4AAC22: mov %eax,0x4D8(%ebp);");
    asm("loc_4AAC28: movl $0x3EA5E354,0x3C(%esp);");
    asm("loc_4AAC30: movl $0x3E400000,0x40(%esp);");
    asm("loc_4AAC38: movl $0,0x44(%esp);");
    asm("loc_4AAC40: call _sub_5A0E30;");
    asm("loc_4AAC45: mov %eax,0x4DC(%ebp);");
    asm("loc_4AAC4B: mov $3,%ebx;");
    asm("loc_4AAC50: mov (%esi),%ecx;");
    asm("loc_4AAC52: mov (%ecx),%eax;");
    asm("loc_4AAC54: push $0;");
    asm("loc_4AAC56: push $1;");
    asm("loc_4AAC58: push $0x24;");
    asm("loc_4AAC5A: calll *0xA8(%eax);");
    asm("loc_4AAC60: add $4,%esi;");
    asm("loc_4AAC63: dec %ebx;");
    asm("loc_4AAC64: jne loc_4AAC50;");
    asm("loc_4AAC66: xor %ebx,%ebx;");
    asm("loc_4AAC68: mov %ebx,0x4C(%esp);");
    asm("loc_4AAC6C: lea 0x37C(%ebp),%esi;");
    asm("loc_4AAC72: push %ebx;");
    asm("loc_4AAC73: lea 0xCC(%esp),%ecx;");
    asm("loc_4AAC7A: push $_data_5D4C48;");
    asm("loc_4AAC7F: push %ecx;");
    asm("loc_4AAC80: call *%edi;");
    asm("loc_4AAC82: add $0xC,%esp;");
    asm("loc_4AAC85: push $0xA;");
    asm("loc_4AAC87: push $0;");
    asm("loc_4AAC89: push $0;");
    asm("loc_4AAC8B: lea -1(%ebx),%edx;");
    asm("loc_4AAC8E: mov %edx,0x34(%esp);");
    asm("loc_4AAC92: fildl 0x34(%esp);");
    asm("loc_4AAC96: push $0;");
    asm("loc_4AAC98: push $0;");
    asm("loc_4AAC9A: fmull _data_5D4C40;");
    asm("loc_4AACA0: lea 0x24(%esp),%eax;");
    asm("loc_4AACA4: push %eax;");
    asm("loc_4AACA5: lea 0x4C(%esp),%ecx;");
    asm("loc_4AACA9: push %ecx;");
    asm("loc_4AACAA: fsubrl _data_5D4C38;");
    asm("loc_4AACB0: push $_data_5CED30;");
    asm("loc_4AACB5: lea 0xE8(%esp),%edx;");
    asm("loc_4AACBC: fsts 0x48(%esp);");
    asm("loc_4AACC0: push %edx;");
    asm("loc_4AACC1: mov %ebp,%ecx;");
    asm("loc_4AACC3: fstps 0x5C(%esp);");
    asm("loc_4AACC7: movl $0x3E19999A,0x34(%esp);");
    asm("loc_4AACCF: movl $0x3CF1A9FC,0x38(%esp);");
    asm("loc_4AACD7: movl $0,0x3C(%esp);");
    asm("loc_4AACDF: movl $0x3EAE147B,0x58(%esp);");
    asm("loc_4AACE7: movl $0xBF800000,0x60(%esp);");
    asm("loc_4AACEF: call _sub_5A0D00;");
    asm("loc_4AACF4: mov %eax,0xD4(%esi);");
    asm("loc_4AACFA: mov 0x35C(%eax),%cl;");
    asm("loc_4AAD00: and $0xBF,%cl;");
    asm("loc_4AAD03: push %ebx;");
    asm("loc_4AAD04: mov %cl,0x35C(%eax);");
    asm("loc_4AAD0A: lea 0xCC(%esp),%eax;");
    asm("loc_4AAD11: push $_data_5D4C28;");
    asm("loc_4AAD16: push %eax;");
    asm("loc_4AAD17: call *%edi;");
    asm("loc_4AAD19: mov 0x34(%esp),%ecx;");
    asm("loc_4AAD1D: add $0xC,%esp;");
    asm("loc_4AAD20: push $0;");
    asm("loc_4AAD22: push $0;");
    asm("loc_4AAD24: push $0;");
    asm("loc_4AAD26: push $0;");
    asm("loc_4AAD28: push $0;");
    asm("loc_4AAD2A: lea 0x88(%esp),%edx;");
    asm("loc_4AAD31: push %edx;");
    asm("loc_4AAD32: lea 0xB0(%esp),%eax;");
    asm("loc_4AAD39: push %eax;");
    asm("loc_4AAD3A: mov %ecx,0xB8(%esp);");
    asm("loc_4AAD41: push $_data_5CED30;");
    asm("loc_4AAD46: lea 0xE8(%esp),%ecx;");
    asm("loc_4AAD4D: push %ecx;");
    asm("loc_4AAD4E: mov %ebp,%ecx;");
    asm("loc_4AAD50: movl $0x3E19999A,0x98(%esp);");
    asm("loc_4AAD5B: movl $0x3CF1A9FC,0x9C(%esp);");
    asm("loc_4AAD66: movl $0,0xA0(%esp);");
    asm("loc_4AAD71: movl $0x3F23D70A,0xBC(%esp);");
    asm("loc_4AAD7C: movl $0xBF800000,0xC4(%esp);");
    asm("loc_4AAD87: call _sub_5A0D00;");
    asm("loc_4AAD8C: push %ebx;");
    asm("loc_4AAD8D: lea 0xCC(%esp),%edx;");
    asm("loc_4AAD94: push $_data_5D4C18;");
    asm("loc_4AAD99: mov %eax,0x108(%esi);");
    asm("loc_4AAD9F: push %edx;");
    asm("loc_4AADA0: movl $0,0x384(%eax);");
    asm("loc_4AADAA: call *%edi;");
    asm("loc_4AADAC: fildl 0x58(%esp);");
    asm("loc_4AADB0: add $0xC,%esp;");
    asm("loc_4AADB3: movl $0xBC656042,0x80(%esp);");
    asm("loc_4AADBE: faddl _data_5C75E8;");
    asm("loc_4AADC4: fmull _data_5D4C10;");
    asm("loc_4AADCA: fstpl 0x54(%esp);");
    asm("loc_4AADCE: fldl _data_5D4C08;");
    asm("loc_4AADD4: fsubl 0x54(%esp);");
    asm("loc_4AADD8: fstps 0x84(%esp);");
    asm("loc_4AADDF: push $0;");
    asm("loc_4AADE1: push $0;");
    asm("loc_4AADE3: push $0;");
    asm("loc_4AADE5: push $0;");
    asm("loc_4AADE7: push $0x3F8CCCCD;");
    asm("loc_4AADEC: push $0x3CF5C28F;");
    asm("loc_4AADF1: push $0x3E48B439;");
    asm("loc_4AADF6: push $0;");
    asm("loc_4AADF8: lea 0xA0(%esp),%eax;");
    asm("loc_4AADFF: push %eax;");
    asm("loc_4AAE00: push $_data_5D010C;");
    asm("loc_4AAE05: lea 0xF0(%esp),%ecx;");
    asm("loc_4AAE0C: push %ecx;");
    asm("loc_4AAE0D: mov %ebp,%ecx;");
    asm("loc_4AAE0F: movl $0,0xB4(%esp);");
    asm("loc_4AAE1A: call _sub_5A0E30;");
    asm("loc_4AAE1F: push $0;");
    asm("loc_4AAE21: push $1;");
    asm("loc_4AAE23: mov %eax,(%esi);");
    asm("loc_4AAE25: mov (%eax),%edx;");
    asm("loc_4AAE27: push $0x24;");
    asm("loc_4AAE29: mov %eax,%ecx;");
    asm("loc_4AAE2B: calll *0xA8(%edx);");
    asm("loc_4AAE31: mov (%esi),%eax;");
    asm("loc_4AAE33: push %ebx;");
    asm("loc_4AAE34: lea 0xCC(%esp),%ecx;");
    asm("loc_4AAE3B: push $_data_5D4BF8;");
    asm("loc_4AAE40: push %ecx;");
    asm("loc_4AAE41: movb $0,0x380(%eax);");
    asm("loc_4AAE48: call *%edi;");
    asm("loc_4AAE4A: fldl _data_5D4BF0;");
    asm("loc_4AAE50: fsubl 0x60(%esp);");
    asm("loc_4AAE54: add $0xC,%esp;");
    asm("loc_4AAE57: push $0;");
    asm("loc_4AAE59: push $0;");
    asm("loc_4AAE5B: push $1;");
    asm("loc_4AAE5D: fsts 0x34(%esp);");
    asm("loc_4AAE61: push $0;");
    asm("loc_4AAE63: fstps 0xA0(%esp);");
    asm("loc_4AAE6A: push $0x3F8CCCCD;");
    asm("loc_4AAE6F: push $0x3C8B4396;");
    asm("loc_4AAE74: push $0x3E147AE1;");
    asm("loc_4AAE79: push $0;");
    asm("loc_4AAE7B: lea 0xAC(%esp),%edx;");
    asm("loc_4AAE82: push %edx;");
    asm("loc_4AAE83: push $_data_5D010C;");
    asm("loc_4AAE88: lea 0xF0(%esp),%eax;");
    asm("loc_4AAE8F: push %eax;");
    asm("loc_4AAE90: mov %ebp,%ecx;");
    asm("loc_4AAE92: movl $0x3E2E147B,0xB8(%esp);");
    asm("loc_4AAE9D: movl $0,0xC0(%esp);");
    asm("loc_4AAEA8: call _sub_5A0E30;");
    asm("loc_4AAEAD: push %ebx;");
    asm("loc_4AAEAE: lea 0xCC(%esp),%ecx;");
    asm("loc_4AAEB5: push $_data_5D4BE0;");
    asm("loc_4AAEBA: push %ecx;");
    asm("loc_4AAEBB: mov %eax,0x34(%esi);");
    asm("loc_4AAEBE: call *%edi;");
    asm("loc_4AAEC0: add $0xC,%esp;");
    asm("loc_4AAEC3: mov 0x28(%esp),%edx;");
    asm("loc_4AAEC7: push $0;");
    asm("loc_4AAEC9: push $0;");
    asm("loc_4AAECB: push $1;");
    asm("loc_4AAECD: push $0;");
    asm("loc_4AAECF: push $0x3F8CCCCD;");
    asm("loc_4AAED4: push $0x3C8B4396;");
    asm("loc_4AAED9: push $0x3E147AE1;");
    asm("loc_4AAEDE: push $0;");
    asm("loc_4AAEE0: lea 0xC4(%esp),%eax;");
    asm("loc_4AAEE7: push %eax;");
    asm("loc_4AAEE8: push $_data_5D010C;");
    asm("loc_4AAEED: lea 0xF0(%esp),%ecx;");
    asm("loc_4AAEF4: push %ecx;");
    asm("loc_4AAEF5: mov %ebp,%ecx;");
    asm("loc_4AAEF7: movl $0x3EA1CAC1,0xD0(%esp);");
    asm("loc_4AAF02: mov %edx,0xD4(%esp);");
    asm("loc_4AAF09: movl $0,0xD8(%esp);");
    asm("loc_4AAF14: call _sub_5A0E30;");
    asm("loc_4AAF19: mov 0x34(%esi),%ecx;");
    asm("loc_4AAF1C: mov %eax,0x68(%esi);");
    asm("loc_4AAF1F: mov (%ecx),%edx;");
    asm("loc_4AAF21: push $0;");
    asm("loc_4AAF23: push $1;");
    asm("loc_4AAF25: push $0x24;");
    asm("loc_4AAF27: calll *0xA8(%edx);");
    asm("loc_4AAF2D: mov 0x68(%esi),%ecx;");
    asm("loc_4AAF30: mov (%ecx),%eax;");
    asm("loc_4AAF32: push $0;");
    asm("loc_4AAF34: push $1;");
    asm("loc_4AAF36: push $0x24;");
    asm("loc_4AAF38: calll *0xA8(%eax);");
    asm("loc_4AAF3E: inc %ebx;");
    asm("loc_4AAF3F: add $4,%esi;");
    asm("loc_4AAF42: cmp $0xD,%ebx;");
    asm("loc_4AAF45: mov %ebx,0x4C(%esp);");
    asm("loc_4AAF49: jl loc_4AAC72;");
    asm("loc_4AAF4F: push $0;");
    asm("loc_4AAF51: push $0;");
    asm("loc_4AAF53: push $1;");
    asm("loc_4AAF55: push $0x763;");
    asm("loc_4AAF5A: push $0x3F8CCCCD;");
    asm("loc_4AAF5F: push $0x3C8B4396;");
    asm("loc_4AAF64: push $0x3E147AE1;");
    asm("loc_4AAF69: push $0;");
    asm("loc_4AAF6B: lea 0x30(%esp),%ecx;");
    asm("loc_4AAF6F: push %ecx;");
    asm("loc_4AAF70: push $_data_5D010C;");
    asm("loc_4AAF75: push $_data_5D4BD4;");
    asm("loc_4AAF7A: mov %ebp,%ecx;");
    asm("loc_4AAF7C: movl $0x3E2E147B,0x3C(%esp);");
    asm("loc_4AAF84: movl $0x3E1CAC08,0x40(%esp);");
    asm("loc_4AAF8C: movl $0,0x44(%esp);");
    asm("loc_4AAF94: call _sub_5A0E30;");
    asm("loc_4AAF99: push $0;");
    asm("loc_4AAF9B: push $0;");
    asm("loc_4AAF9D: push $1;");
    asm("loc_4AAF9F: push $0x764;");
    asm("loc_4AAFA4: push $0x3F8CCCCD;");
    asm("loc_4AAFA9: push $0x3C8B4396;");
    asm("loc_4AAFAE: push $0x3E147AE1;");
    asm("loc_4AAFB3: push $0;");
    asm("loc_4AAFB5: lea 0x30(%esp),%edx;");
    asm("loc_4AAFB9: push %edx;");
    asm("loc_4AAFBA: push $_data_5D010C;");
    asm("loc_4AAFBF: push $_data_5D4BC8;");
    asm("loc_4AAFC4: mov %ebp,%ecx;");
    asm("loc_4AAFC6: mov %eax,0x4BC(%ebp);");
    asm("loc_4AAFCC: movl $0x3EA1CAC1,0x3C(%esp);");
    asm("loc_4AAFD4: movl $0x3E1CAC08,0x40(%esp);");
    asm("loc_4AAFDC: movl $0,0x44(%esp);");
    asm("loc_4AAFE4: call _sub_5A0E30;");
    asm("loc_4AAFE9: mov %eax,0x4C0(%ebp);");
    asm("loc_4AAFEF: xor %ebx,%ebx;");
    asm("loc_4AAFF1: lea 0x418(%ebp),%esi;");
    asm("loc_4AAFF7: push %ebx;");
    asm("loc_4AAFF8: lea 0xCC(%esp),%eax;");
    asm("loc_4AAFFF: push $_data_5D4BB8;");
    asm("loc_4AB004: push %eax;");
    asm("loc_4AB005: call *%edi;");
    asm("loc_4AB007: add $0xC,%esp;");
    asm("loc_4AB00A: push $1;");
    asm("loc_4AB00C: lea -1(%ebx),%ecx;");
    asm("loc_4AB00F: mov %ecx,0x2C(%esp);");
    asm("loc_4AB013: fildl 0x2C(%esp);");
    asm("loc_4AB017: push $0;");
    asm("loc_4AB019: push $0;");
    asm("loc_4AB01B: fmull _data_5D4C40;");
    asm("loc_4AB021: push $0;");
    asm("loc_4AB023: lea 0x20(%esp),%edx;");
    asm("loc_4AB027: push %edx;");
    asm("loc_4AB028: lea 0x48(%esp),%eax;");
    asm("loc_4AB02C: fsubrl _data_5D4C38;");
    asm("loc_4AB032: push %eax;");
    asm("loc_4AB033: lea 0xE0(%esp),%ecx;");
    asm("loc_4AB03A: push %ecx;");
    asm("loc_4AB03B: fstps 0x54(%esp);");
    asm("loc_4AB03F: mov %ebp,%ecx;");
    asm("loc_4AB041: movl $0x3F07AE14,0x2C(%esp);");
    asm("loc_4AB049: movl $0x3CF1A9FC,0x30(%esp);");
    asm("loc_4AB051: movl $0,0x34(%esp);");
    asm("loc_4AB059: movl $0x3E92F1AA,0x50(%esp);");
    asm("loc_4AB061: movl $0xBF800000,0x58(%esp);");
    asm("loc_4AB069: call _sub_5A0D60;");
    asm("loc_4AB06E: mov %eax,(%esi);");
    asm("loc_4AB070: inc %ebx;");
    asm("loc_4AB071: add $4,%esi;");
    asm("loc_4AB074: cmp $0xE,%ebx;");
    asm("loc_4AB077: jl loc_4AAFF7;");
    asm("loc_4AB07D: mov 0x44C(%ebp),%eax;");
    asm("loc_4AB083: mov 0x35D(%eax),%bl;");
    asm("loc_4AB089: xor %edi,%edi;");
    asm("loc_4AB08B: or $1,%bl;");
    asm("loc_4AB08E: push %edi;");
    asm("loc_4AB08F: mov %ebp,%ecx;");
    asm("loc_4AB091: mov %bl,0x35D(%eax);");
    asm("loc_4AB097: call _sub_4AF900;");
    asm("loc_4AB09C: mov %ebp,%ecx;");
    asm("loc_4AB09E: call _sub_4AEAB0;");
    asm("loc_4AB0A3: push %edi;");
    asm("loc_4AB0A4: lea 0x14(%esp),%edx;");
    asm("loc_4AB0A8: push %edx;");
    asm("loc_4AB0A9: push $0x3EE147AE;");
    asm("loc_4AB0AE: push $0x3F000000;");
    asm("loc_4AB0B3: push $_data_5D4BA4;");
    asm("loc_4AB0B8: mov %ebp,%ecx;");
    asm("loc_4AB0BA: movl $0xBDE76C8B,0x24(%esp);");
    asm("loc_4AB0C2: movl $0x3E54FDF4,0x28(%esp);");
    asm("loc_4AB0CA: movl $0xBF800000,0x2C(%esp);");
    asm("loc_4AB0D2: call _sub_5A10E0;");
    asm("loc_4AB0D7: mov %eax,%esi;");
    asm("loc_4AB0D9: mov %esi,%ecx;");
    asm("loc_4AB0DB: mov %esi,0x7F0(%ebp);");
    asm("loc_4AB0E1: call _sub_57B370;");
    asm("loc_4AB0E6: mov 0x73(%esp),%al;");
    asm("loc_4AB0EA: push $0xC;");
    asm("loc_4AB0EC: mov %edi,0x8B0(%ebp);");
    asm("loc_4AB0F2: movl $0x40340000,0x8B4(%ebp);");
    asm("loc_4AB0FC: mov %al,0x64(%esp);");
    asm("loc_4AB100: call _sub_5B7E84;");
    asm("loc_4AB105: mov %eax,(%eax);");
    asm("loc_4AB107: mov %eax,4(%eax);");
    asm("loc_4AB10A: add $4,%esp;");
    asm("loc_4AB10D: mov %eax,0x64(%esp);");
    asm("loc_4AB111: mov %edi,0x68(%esp);");
    asm("loc_4AB115: mov %edi,0x278(%esp);");
    asm("loc_4AB11C: mov $0x14,%ebx;");
    asm("loc_4AB121: mov _import_5C62D8,%ecx;");
    asm("loc_4AB127: mov %ecx,0x28(%esp);");
    asm("loc_4AB12B: lea 0x28(%esp),%edx;");
    asm("loc_4AB12F: push %edx;");
    asm("loc_4AB130: mov %esi,%ecx;");
    asm("loc_4AB132: movb $1,0x27C(%esp);");
    asm("loc_4AB13A: call _sub_57B470;");
    asm("loc_4AB13F: dec %ebx;");
    asm("loc_4AB140: movb $0,0x278(%esp);");
    asm("loc_4AB148: jne loc_4AB121;");
    asm("loc_4AB14A: lea 0x60(%esp),%eax;");
    asm("loc_4AB14E: push %eax;");
    asm("loc_4AB14F: push $0x6003F;");
    asm("loc_4AB154: call _sub_57DA40;");
    asm("loc_4AB159: lea 0x68(%esp),%ecx;");
    asm("loc_4AB15D: push %ecx;");
    asm("loc_4AB15E: push $0x60040;");
    asm("loc_4AB163: call _sub_57DA40;");
    asm("loc_4AB168: lea 0x70(%esp),%edx;");
    asm("loc_4AB16C: push %edx;");
    asm("loc_4AB16D: push $0x60041;");
    asm("loc_4AB172: call _sub_57DA40;");
    asm("loc_4AB177: lea 0x78(%esp),%eax;");
    asm("loc_4AB17B: push %eax;");
    asm("loc_4AB17C: push $0x60042;");
    asm("loc_4AB181: call _sub_57DA40;");
    asm("loc_4AB186: lea 0x80(%esp),%ecx;");
    asm("loc_4AB18D: push %ecx;");
    asm("loc_4AB18E: push $0x60043;");
    asm("loc_4AB193: call _sub_57DA40;");
    asm("loc_4AB198: lea 0x88(%esp),%edx;");
    asm("loc_4AB19F: push %edx;");
    asm("loc_4AB1A0: push $0x60044;");
    asm("loc_4AB1A5: call _sub_57DA40;");
    asm("loc_4AB1AA: lea 0x90(%esp),%eax;");
    asm("loc_4AB1B1: push %eax;");
    asm("loc_4AB1B2: push $0x60045;");
    asm("loc_4AB1B7: call _sub_57DA40;");
    asm("loc_4AB1BC: lea 0x98(%esp),%ecx;");
    asm("loc_4AB1C3: push %ecx;");
    asm("loc_4AB1C4: push $0x60046;");
    asm("loc_4AB1C9: call _sub_57DA40;");
    asm("loc_4AB1CE: add $0x40,%esp;");
    asm("loc_4AB1D1: lea 0x60(%esp),%edx;");
    asm("loc_4AB1D5: push %edx;");
    asm("loc_4AB1D6: push $0x60047;");
    asm("loc_4AB1DB: call _sub_57DA40;");
    asm("loc_4AB1E0: lea 0x68(%esp),%eax;");
    asm("loc_4AB1E4: push %eax;");
    asm("loc_4AB1E5: push $0x60048;");
    asm("loc_4AB1EA: call _sub_57DA40;");
    asm("loc_4AB1EF: add $0x10,%esp;");
    asm("loc_4AB1F2: lea 0x60(%esp),%ecx;");
    asm("loc_4AB1F6: push %ecx;");
    asm("loc_4AB1F7: mov %esi,%ecx;");
    asm("loc_4AB1F9: call _sub_57B3E0;");
    asm("loc_4AB1FE: mov 0x32D(%ebp),%al;");
    asm("loc_4AB204: test %al,%al;");
    asm("loc_4AB206: mov $0xFC,%bl;");
    asm("loc_4AB208: jne loc_4AB276;");
    asm("loc_4AB20A: mov 0x7F0(%ebp),%eax;");
    asm("loc_4AB210: and %bl,0x6C(%eax);");
    asm("loc_4AB213: mov 0x374(%ebp),%edx;");
    asm("loc_4AB219: mov _data_679BB0,%eax;");
    asm("loc_4AB21E: push $0x40;");
    asm("loc_4AB220: lea 0x1F4(%esp),%ecx;");
    asm("loc_4AB227: push %ecx;");
    asm("loc_4AB228: mov %eax,0x348(%edx);");
    asm("loc_4AB22E: mov _data_67ECA8,%edx;");
    asm("loc_4AB234: push $0x5E4;");
    asm("loc_4AB239: push %edx;");
    asm("loc_4AB23A: call _sub_4347E0;");
    asm("loc_4AB23F: mov 0x7B4(%ebp),%ecx;");
    asm("loc_4AB245: mov (%ecx),%eax;");
    asm("loc_4AB247: add $0x10,%esp;");
    asm("loc_4AB24A: push %edi;");
    asm("loc_4AB24B: lea 0x1F4(%esp),%edx;");
    asm("loc_4AB252: push %edx;");
    asm("loc_4AB253: push $0x1D;");
    asm("loc_4AB255: calll *0xA8(%eax);");
    asm("loc_4AB25B: mov 0x7B0(%ebp),%eax;");
    asm("loc_4AB261: and %bl,0x6C(%eax);");
    asm("loc_4AB264: mov 0x7B4(%ebp),%eax;");
    asm("loc_4AB26A: and %bl,0x6C(%eax);");
    asm("loc_4AB26D: mov 0x344(%ebp),%eax;");
    asm("loc_4AB273: and %bl,0x6C(%eax);");
    asm("loc_4AB276: lea 0x10(%esp),%eax;");
    asm("loc_4AB27A: push %eax;");
    asm("loc_4AB27B: push %edi;");
    asm("loc_4AB27C: push %edi;");
    asm("loc_4AB27D: push %edi;");
    asm("loc_4AB27E: push $1;");
    asm("loc_4AB280: push %edi;");
    asm("loc_4AB281: push $1;");
    asm("loc_4AB283: push $1;");
    asm("loc_4AB285: push %edi;");
    asm("loc_4AB286: push %edi;");
    asm("loc_4AB287: push %edi;");
    asm("loc_4AB288: lea 0x60(%esp),%ecx;");
    asm("loc_4AB28C: push %ecx;");
    asm("loc_4AB28D: push %edi;");
    asm("loc_4AB28E: lea 0xA8(%esp),%edx;");
    asm("loc_4AB295: push %edx;");
    asm("loc_4AB296: push $_data_5D04A8;");
    asm("loc_4AB29B: push $_data_5D4B98;");
    asm("loc_4AB2A0: mov %ebp,%ecx;");
    asm("loc_4AB2A2: movl $0,0x50(%esp);");
    asm("loc_4AB2AA: movl $0,0x54(%esp);");
    asm("loc_4AB2B2: movl $0,0x58(%esp);");
    asm("loc_4AB2BA: movl $0,0x74(%esp);");
    asm("loc_4AB2C2: movl $0,0x78(%esp);");
    asm("loc_4AB2CA: movl $0,0x7C(%esp);");
    asm("loc_4AB2D2: movl $0,0xB4(%esp);");
    asm("loc_4AB2DD: movl $0,0xB8(%esp);");
    asm("loc_4AB2E8: movl $0xBF800000,0xBC(%esp);");
    asm("loc_4AB2F3: call _sub_5A0DB0;");
    asm("loc_4AB2F8: push %edi;");
    asm("loc_4AB2F9: push %edi;");
    asm("loc_4AB2FA: push $1;");
    asm("loc_4AB2FC: push $0x5E6;");
    asm("loc_4AB301: push $0x3FC00000;");
    asm("loc_4AB306: push $0x3CF5C28F;");
    asm("loc_4AB30B: push $0x3E8A3D71;");
    asm("loc_4AB310: push %edi;");
    asm("loc_4AB311: mov %eax,0x4E4(%ebp);");
    asm("loc_4AB317: lea 0x30(%esp),%eax;");
    asm("loc_4AB31B: push %eax;");
    asm("loc_4AB31C: push $_data_5D2254;");
    asm("loc_4AB321: push $_data_5D4B84;");
    asm("loc_4AB326: mov %ebp,%ecx;");
    asm("loc_4AB328: movl $0xBC343958,0x3C(%esp);");
    asm("loc_4AB330: movl $0x3DA3D70A,0x40(%esp);");
    asm("loc_4AB338: movl $0,0x44(%esp);");
    asm("loc_4AB340: call _sub_5A0E30;");
    asm("loc_4AB345: push %edi;");
    asm("loc_4AB346: push %edi;");
    asm("loc_4AB347: push $1;");
    asm("loc_4AB349: push %edi;");
    asm("loc_4AB34A: push $0x3FC00000;");
    asm("loc_4AB34F: push $0x3CF5C28F;");
    asm("loc_4AB354: push $0x3E8A3D71;");
    asm("loc_4AB359: push %edi;");
    asm("loc_4AB35A: lea 0x30(%esp),%ecx;");
    asm("loc_4AB35E: push %ecx;");
    asm("loc_4AB35F: push $_data_5D2254;");
    asm("loc_4AB364: push $_data_5D4B70;");
    asm("loc_4AB369: mov %ebp,%ecx;");
    asm("loc_4AB36B: mov %eax,0x4E8(%ebp);");
    asm("loc_4AB371: movl $0xBC343958,0x3C(%esp);");
    asm("loc_4AB379: movl $0x3D23D70A,0x40(%esp);");
    asm("loc_4AB381: movl $0,0x44(%esp);");
    asm("loc_4AB389: call _sub_5A0E30;");
    asm("loc_4AB38E: push %edi;");
    asm("loc_4AB38F: push %edi;");
    asm("loc_4AB390: push $1;");
    asm("loc_4AB392: push %edi;");
    asm("loc_4AB393: push $0x3FC00000;");
    asm("loc_4AB398: push $0x3CF5C28F;");
    asm("loc_4AB39D: push $0x3E8A3D71;");
    asm("loc_4AB3A2: push %edi;");
    asm("loc_4AB3A3: lea 0x30(%esp),%edx;");
    asm("loc_4AB3A7: push %edx;");
    asm("loc_4AB3A8: mov %eax,0x4EC(%ebp);");
    asm("loc_4AB3AE: movl $0xBC343958,0x34(%esp);");
    asm("loc_4AB3B6: movl $0xBBC49BA6,0x38(%esp);");
    asm("loc_4AB3BE: movl $0,0x3C(%esp);");
    asm("loc_4AB3C6: push $_data_5D2254;");
    asm("loc_4AB3CB: push $_data_5D4B5C;");
    asm("loc_4AB3D0: mov %ebp,%ecx;");
    asm("loc_4AB3D2: call _sub_5A0E30;");
    asm("loc_4AB3D7: push %edi;");
    asm("loc_4AB3D8: push %edi;");
    asm("loc_4AB3D9: push %edi;");
    asm("loc_4AB3DA: push %edi;");
    asm("loc_4AB3DB: push %edi;");
    asm("loc_4AB3DC: mov %eax,0x4F0(%ebp);");
    asm("loc_4AB3E2: lea 0x24(%esp),%eax;");
    asm("loc_4AB3E6: push %eax;");
    asm("loc_4AB3E7: lea 0x4C(%esp),%ecx;");
    asm("loc_4AB3EB: push %ecx;");
    asm("loc_4AB3EC: push $_data_5CED30;");
    asm("loc_4AB3F1: push $_data_5D4B48;");
    asm("loc_4AB3F6: mov %ebp,%ecx;");
    asm("loc_4AB3F8: movl $0x3DCCCCCD,0x34(%esp);");
    asm("loc_4AB400: movl $0x3CAC0831,0x38(%esp);");
    asm("loc_4AB408: movl $0,0x3C(%esp);");
    asm("loc_4AB410: movl $0xBDE56042,0x58(%esp);");
    asm("loc_4AB418: movl $0xBD8F5C29,0x5C(%esp);");
    asm("loc_4AB420: movl $0,0x60(%esp);");
    asm("loc_4AB428: call _sub_5A0D00;");
    asm("loc_4AB42D: push %edi;");
    asm("loc_4AB42E: push %edi;");
    asm("loc_4AB42F: push %edi;");
    asm("loc_4AB430: push %edi;");
    asm("loc_4AB431: push %edi;");
    asm("loc_4AB432: lea 0x24(%esp),%edx;");
    asm("loc_4AB436: push %edx;");
    asm("loc_4AB437: mov %eax,0x4F4(%ebp);");
    asm("loc_4AB43D: lea 0x4C(%esp),%eax;");
    asm("loc_4AB441: push %eax;");
    asm("loc_4AB442: push $_data_5CED30;");
    asm("loc_4AB447: push $_data_5D4B38;");
    asm("loc_4AB44C: mov %ebp,%ecx;");
    asm("loc_4AB44E: movl $0x3DCCCCCD,0x34(%esp);");
    asm("loc_4AB456: movl $0x3CAC0831,0x38(%esp);");
    asm("loc_4AB45E: movl $0,0x3C(%esp);");
    asm("loc_4AB466: movl $0x3DE56042,0x58(%esp);");
    asm("loc_4AB46E: movl $0xBD8F5C29,0x5C(%esp);");
    asm("loc_4AB476: movl $0,0x60(%esp);");
    asm("loc_4AB47E: call _sub_5A0D00;");
    asm("loc_4AB483: push %edi;");
    asm("loc_4AB484: push %edi;");
    asm("loc_4AB485: push $1;");
    asm("loc_4AB487: push $0x5E8;");
    asm("loc_4AB48C: push $0x3FC00000;");
    asm("loc_4AB491: push $0x3CF5C28F;");
    asm("loc_4AB496: mov %eax,0x4F8(%ebp);");
    asm("loc_4AB49C: mov 0x35D(%eax),%cl;");
    asm("loc_4AB4A2: or $1,%cl;");
    asm("loc_4AB4A5: push $0x3E8A3D71;");
    asm("loc_4AB4AA: mov %cl,0x35D(%eax);");
    asm("loc_4AB4B0: push %edi;");
    asm("loc_4AB4B1: lea 0x30(%esp),%ecx;");
    asm("loc_4AB4B5: push %ecx;");
    asm("loc_4AB4B6: push $_data_5D0410;");
    asm("loc_4AB4BB: push $_data_5D4B24;");
    asm("loc_4AB4C0: mov %ebp,%ecx;");
    asm("loc_4AB4C2: movl $0xBDE56042,0x3C(%esp);");
    asm("loc_4AB4CA: movl $0xBD8F5C29,0x40(%esp);");
    asm("loc_4AB4D2: movl $0,0x44(%esp);");
    asm("loc_4AB4DA: call _sub_5A0E30;");
    asm("loc_4AB4DF: push %edi;");
    asm("loc_4AB4E0: push %edi;");
    asm("loc_4AB4E1: push $1;");
    asm("loc_4AB4E3: push $0x2148;");
    asm("loc_4AB4E8: push $0x3FC00000;");
    asm("loc_4AB4ED: push $0x3CF5C28F;");
    asm("loc_4AB4F2: push $0x3E8A3D71;");
    asm("loc_4AB4F7: push %edi;");
    asm("loc_4AB4F8: lea 0x30(%esp),%edx;");
    asm("loc_4AB4FC: push %edx;");
    asm("loc_4AB4FD: push $_data_5D0410;");
    asm("loc_4AB502: mov %eax,0x4FC(%ebp);");
    asm("loc_4AB508: movl $0x3DE56042,0x38(%esp);");
    asm("loc_4AB510: movl $0xBD8F5C29,0x3C(%esp);");
    asm("loc_4AB518: movl $0,0x40(%esp);");
    asm("loc_4AB520: push $_data_5D4B10;");
    asm("loc_4AB525: mov %ebp,%ecx;");
    asm("loc_4AB527: call _sub_5A0E30;");
    asm("loc_4AB52C: mov %eax,0x500(%ebp);");
    asm("loc_4AB532: mov 0x4E8(%ebp),%eax;");
    asm("loc_4AB538: and %bl,0x6C(%eax);");
    asm("loc_4AB53B: mov 0x4EC(%ebp),%eax;");
    asm("loc_4AB541: and %bl,0x6C(%eax);");
    asm("loc_4AB544: mov 0x4F0(%ebp),%eax;");
    asm("loc_4AB54A: and %bl,0x6C(%eax);");
    asm("loc_4AB54D: mov 0x4FC(%ebp),%eax;");
    asm("loc_4AB553: and %bl,0x6C(%eax);");
    asm("loc_4AB556: mov 0x500(%ebp),%eax;");
    asm("loc_4AB55C: and %bl,0x6C(%eax);");
    asm("loc_4AB55F: mov 0x4F4(%ebp),%eax;");
    asm("loc_4AB565: and %bl,0x6C(%eax);");
    asm("loc_4AB568: mov 0x4F8(%ebp),%eax;");
    asm("loc_4AB56E: and %bl,0x6C(%eax);");
    asm("loc_4AB571: mov 0x4E4(%ebp),%eax;");
    asm("loc_4AB577: and %bl,0x6C(%eax);");
    asm("loc_4AB57A: push %edi;");
    asm("loc_4AB57B: mov %ebp,%ecx;");
    asm("loc_4AB57D: call _sub_4ABDF0;");
    asm("loc_4AB582: push $1;");
    asm("loc_4AB584: mov %ebp,%ecx;");
    asm("loc_4AB586: call _sub_4ABDF0;");
    asm("loc_4AB58B: mov %ebp,%ecx;");
    asm("loc_4AB58D: call _sub_4AEBB0;");
    asm("loc_4AB592: mov 0x32D(%ebp),%al;");
    asm("loc_4AB598: test %al,%al;");
    asm("loc_4AB59A: je loc_4AB5A3;");
    asm("loc_4AB59C: mov %ebp,%ecx;");
    asm("loc_4AB59E: call _sub_4AE650;");
    asm("loc_4AB5A3: mov (%ebp),%eax;");
    asm("loc_4AB5A6: sub $0xC,%esp;");
    asm("loc_4AB5A9: movl $0,0x60(%esp);");
    asm("loc_4AB5B1: mov 0x60(%esp),%edx;");
    asm("loc_4AB5B5: mov %esp,%ecx;");
    asm("loc_4AB5B7: mov %edx,(%ecx);");
    asm("loc_4AB5B9: movl $0,0x64(%esp);");
    asm("loc_4AB5C1: mov 0x64(%esp),%edx;");
    asm("loc_4AB5C5: mov %edx,4(%ecx);");
    asm("loc_4AB5C8: movl $0xBF800000,0x68(%esp);");
    asm("loc_4AB5D0: mov 0x68(%esp),%edx;");
    asm("loc_4AB5D4: mov %edx,8(%ecx);");
    asm("loc_4AB5D7: mov %ebp,%ecx;");
    asm("loc_4AB5D9: calll *0x7C(%eax);");
    asm("loc_4AB5DC: mov (%ebp),%eax;");
    asm("loc_4AB5DF: lea 0x60(%ebp),%ecx;");
    asm("loc_4AB5E2: push %ecx;");
    asm("loc_4AB5E3: mov %ebp,%ecx;");
    asm("loc_4AB5E5: calll *0x14(%eax);");
    asm("loc_4AB5E8: mov 0x284(%esp),%edx;");
    asm("loc_4AB5EF: mov 0x280(%esp),%eax;");
    asm("loc_4AB5F6: push %edx;");
    asm("loc_4AB5F7: push %eax;");
    asm("loc_4AB5F8: mov %ebp,%ecx;");
    asm("loc_4AB5FA: movl $0x64,0x70(%ebp);");
    asm("loc_4AB601: movl $6,0x78(%ebp);");
    asm("loc_4AB608: movb $0,0x849(%ebp);");
    asm("loc_4AB60F: call _sub_4B5060;");
    asm("loc_4AB614: test %al,%al;");
    asm("loc_4AB616: mov 0x64(%esp),%eax;");
    asm("loc_4AB61A: movl $0xFFFFFFFF,0x278(%esp);");
    asm("loc_4AB625: mov %eax,%ebx;");
    asm("loc_4AB627: jne loc_4AB678;");
    asm("loc_4AB629: movb $1,0x32C(%ebp);");
    asm("loc_4AB630: mov (%eax),%edi;");
    asm("loc_4AB632: cmp %eax,%edi;");
    asm("loc_4AB634: je loc_4AB66B;");
    asm("loc_4AB636: mov %edi,%esi;");
    asm("loc_4AB638: mov 4(%esi),%ecx;");
    asm("loc_4AB63B: mov (%esi),%edx;");
    asm("loc_4AB63D: mov (%edi),%edi;");
    asm("loc_4AB63F: mov %edx,(%ecx);");
    asm("loc_4AB641: mov 4(%esi),%ecx;");
    asm("loc_4AB644: mov (%esi),%eax;");
    asm("loc_4AB646: mov %ecx,4(%eax);");
    asm("loc_4AB649: lea 8(%esi),%ecx;");
    asm("loc_4AB64C: call _sub_45EEB0;");
    asm("loc_4AB651: push %esi;");
    asm("loc_4AB652: call _sub_5B7E1D;");
    asm("loc_4AB657: mov 0x6C(%esp),%ecx;");
    asm("loc_4AB65B: add $4,%esp;");
    asm("loc_4AB65E: dec %ecx;");
    asm("loc_4AB65F: cmp %ebx,%edi;");
    asm("loc_4AB661: mov %ecx,0x68(%esp);");
    asm("loc_4AB665: jne loc_4AB636;");
    asm("loc_4AB667: mov 0x64(%esp),%eax;");
    asm("loc_4AB66B: push %eax;");
    asm("loc_4AB66C: call _sub_5B7E1D;");
    asm("loc_4AB671: add $4,%esp;");
    asm("loc_4AB674: xor %al,%al;");
    asm("loc_4AB676: jmp loc_4AB6C0;");
    asm("loc_4AB678: mov (%eax),%edi;");
    asm("loc_4AB67A: cmp %eax,%edi;");
    asm("loc_4AB67C: je loc_4AB6B5;");
    asm("loc_4AB67E: mov %edi,%edi;");
    asm("loc_4AB680: mov %edi,%esi;");
    asm("loc_4AB682: mov 4(%esi),%edx;");
    asm("loc_4AB685: mov (%esi),%eax;");
    asm("loc_4AB687: mov (%edi),%edi;");
    asm("loc_4AB689: mov %eax,(%edx);");
    asm("loc_4AB68B: mov (%esi),%ecx;");
    asm("loc_4AB68D: mov 4(%esi),%edx;");
    asm("loc_4AB690: mov %edx,4(%ecx);");
    asm("loc_4AB693: lea 8(%esi),%ecx;");
    asm("loc_4AB696: call _sub_45EEB0;");
    asm("loc_4AB69B: push %esi;");
    asm("loc_4AB69C: call _sub_5B7E1D;");
    asm("loc_4AB6A1: mov 0x6C(%esp),%ecx;");
    asm("loc_4AB6A5: add $4,%esp;");
    asm("loc_4AB6A8: dec %ecx;");
    asm("loc_4AB6A9: cmp %ebx,%edi;");
    asm("loc_4AB6AB: mov %ecx,0x68(%esp);");
    asm("loc_4AB6AF: jne loc_4AB680;");
    asm("loc_4AB6B1: mov 0x64(%esp),%eax;");
    asm("loc_4AB6B5: push %eax;");
    asm("loc_4AB6B6: call _sub_5B7E1D;");
    asm("loc_4AB6BB: add $4,%esp;");
    asm("loc_4AB6BE: mov $1,%al;");
    asm("loc_4AB6C0: mov 0x270(%esp),%ecx;");
    asm("loc_4AB6C7: pop %edi;");
    asm("loc_4AB6C8: pop %esi;");
    asm("loc_4AB6C9: pop %ebp;");
    asm("loc_4AB6CA: mov %ecx,%fs:0;");
    asm("loc_4AB6D1: pop %ebx;");
    asm("loc_4AB6D2: add $0x26C,%esp;");
    asm("loc_4AB6D8: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AB6E0() // _sub_4AB6E0
{
    asm("jmp dgb_4AB6E0;"); // jumptable skip
    asm(".long _jmp_4ABD84;"); // jumptable address
    __DEBUG_ASM(4AB6E0);
    // chunk 0x4AB6E0 _sub_4AB6E0
    asm("loc_4AB6E0: push %ebp;");
    asm("loc_4AB6E1: mov %esp,%ebp;");
    asm("loc_4AB6E3: and $0xFFFFFFF8,%esp;");
    asm("loc_4AB6E6: sub $0xA0,%esp;");
    asm("loc_4AB6EC: push %ebx;");
    asm("loc_4AB6ED: push %ebp;");
    asm("loc_4AB6EE: push %esi;");
    asm("loc_4AB6EF: push %edi;");
    asm("loc_4AB6F0: mov %ecx,%esi;");
    asm("loc_4AB6F2: call _sub_5A17B0;");
    asm("loc_4AB6F7: call _sub_42D680;");
    asm("loc_4AB6FC: fstpl 0x10(%esp);");
    asm("loc_4AB700: mov 0x34C(%esi),%ecx;");
    asm("loc_4AB706: mov 0x350(%esi),%eax;");
    asm("loc_4AB70C: mov 0x354(%esi),%edx;");
    asm("loc_4AB712: mov %ecx,0x5C(%esp);");
    asm("loc_4AB716: mov 0x32D(%esi),%cl;");
    asm("loc_4AB71C: mov %eax,0x58(%esp);");
    asm("loc_4AB720: mov 0x358(%esi),%eax;");
    asm("loc_4AB726: xor %ebx,%ebx;");
    asm("loc_4AB728: cmp %bl,%cl;");
    asm("loc_4AB72A: mov %edx,0x60(%esp);");
    asm("loc_4AB72E: mov %eax,0x64(%esp);");
    asm("loc_4AB732: jne loc_4AB74A;");
    asm("loc_4AB734: mov 0x35C(%esi),%edx;");
    asm("loc_4AB73A: mov 0x360(%esi),%eax;");
    asm("loc_4AB740: mov %edx,0x68(%esp);");
    asm("loc_4AB744: mov %eax,0x6C(%esp);");
    asm("loc_4AB748: jmp loc_4AB754;");
    asm("loc_4AB74A: mov 0x360(%esi),%edx;");
    asm("loc_4AB750: mov %edx,0x6C(%esp);");
    asm("loc_4AB754: cmp %bl,%cl;");
    asm("loc_4AB756: mov 0x368(%esi),%eax;");
    asm("loc_4AB75C: mov 0x364(%esi),%edx;");
    asm("loc_4AB762: mov %eax,0x70(%esp);");
    asm("loc_4AB766: mov 0x36C(%esi),%eax;");
    asm("loc_4AB76C: mov %edx,0x74(%esp);");
    asm("loc_4AB770: mov 0x370(%esi),%edx;");
    asm("loc_4AB776: mov %eax,0x78(%esp);");
    asm("loc_4AB77A: mov %edx,0x7C(%esp);");
    asm("loc_4AB77E: jne loc_4AB79C;");
    asm("loc_4AB780: mov 0x374(%esi),%eax;");
    asm("loc_4AB786: mov 0x378(%esi),%edx;");
    asm("loc_4AB78C: mov %eax,0x80(%esp);");
    asm("loc_4AB793: mov %edx,0x84(%esp);");
    asm("loc_4AB79A: jmp loc_4AB7A9;");
    asm("loc_4AB79C: mov 0x378(%esi),%eax;");
    asm("loc_4AB7A2: mov %eax,0x84(%esp);");
    asm("loc_4AB7A9: fldl 0x10(%esp);");
    asm("loc_4AB7AD: fcompl _data_5CF100;");
    asm("loc_4AB7B3: fnstsw %ax;");
    asm("loc_4AB7B5: test $0x41,%ah;");
    asm("loc_4AB7B8: jne loc_4AB7CA;");
    asm("loc_4AB7BA: movl $0x9999999A,0x10(%esp);");
    asm("loc_4AB7C2: movl $0x3FC99999,0x14(%esp);");
    asm("loc_4AB7CA: fldl 0x840(%esi);");
    asm("loc_4AB7D0: fcompl _data_5C89B8;");
    asm("loc_4AB7D6: fnstsw %ax;");
    asm("loc_4AB7D8: test $5,%ah;");
    asm("loc_4AB7DB: jp loc_4AB9A5;");
    asm("loc_4AB7E1: cmp %bl,%cl;");
    asm("loc_4AB7E3: jne loc_4AB9A5;");
    asm("loc_4AB7E9: cmp %bl,0x8A2(%esi);");
    asm("loc_4AB7EF: jne loc_4AB9B1;");
    asm("loc_4AB7F5: fldl 0x10(%esp);");
    asm("loc_4AB7F9: mov $6,%ebp;");
    asm("loc_4AB7FE: fmull _data_5D3C48;");
    asm("loc_4AB804: mov %ebp,0x28(%esp);");
    asm("loc_4AB808: xor %edi,%edi;");
    asm("loc_4AB80A: faddl 0x840(%esi);");
    asm("loc_4AB810: fstpl 0x840(%esi);");
    asm("loc_4AB816: fildl 0x28(%esp);");
    asm("loc_4AB81A: mov 0x58(%esp,%edi),%ecx;");
    asm("loc_4AB81E: fmull _data_5C7720;");
    asm("loc_4AB824: fstl 0x28(%esp);");
    asm("loc_4AB828: faddl 0x840(%esi);");
    asm("loc_4AB82E: fcoml _data_5C8BA8;");
    asm("loc_4AB834: fnstsw %ax;");
    asm("loc_4AB836: test $0x41,%ah;");
    asm("loc_4AB839: jne loc_4AB87D;");
    asm("loc_4AB83B: lea 0x40(%esp),%eax;");
    asm("loc_4AB83F: fstp %st(0);");
    asm("loc_4AB841: movl $0,0x40(%esp);");
    asm("loc_4AB849: movl $0,0x44(%esp);");
    asm("loc_4AB851: movl $0,0x48(%esp);");
    asm("loc_4AB859: mov (%ecx),%edx;");
    asm("loc_4AB85B: push %eax;");
    asm("loc_4AB85C: calll *0x14(%edx);");
    asm("loc_4AB85F: movl $0,0x34(%esp);");
    asm("loc_4AB867: movl $0,0x38(%esp);");
    asm("loc_4AB86F: movl $0,0x3C(%esp);");
    asm("loc_4AB877: lea 0x34(%esp),%eax;");
    asm("loc_4AB87B: jmp loc_4AB8BD;");
    asm("loc_4AB87D: lea 0x4C(%esp),%eax;");
    asm("loc_4AB881: fstps 0x4C(%esp);");
    asm("loc_4AB885: movl $0,0x50(%esp);");
    asm("loc_4AB88D: movl $0,0x54(%esp);");
    asm("loc_4AB895: mov (%ecx),%edx;");
    asm("loc_4AB897: push %eax;");
    asm("loc_4AB898: calll *0x14(%edx);");
    asm("loc_4AB89B: fldl 0x28(%esp);");
    asm("loc_4AB89F: faddl 0x840(%esi);");
    asm("loc_4AB8A5: movl $0,0x20(%esp);");
    asm("loc_4AB8AD: movl $0,0x24(%esp);");
    asm("loc_4AB8B5: lea 0x1C(%esp),%eax;");
    asm("loc_4AB8B9: fstps 0x1C(%esp);");
    asm("loc_4AB8BD: mov 0x70(%esp,%edi),%ecx;");
    asm("loc_4AB8C1: mov (%ecx),%edx;");
    asm("loc_4AB8C3: push %eax;");
    asm("loc_4AB8C4: calll *0x14(%edx);");
    asm("loc_4AB8C7: dec %ebp;");
    asm("loc_4AB8C8: add $4,%edi;");
    asm("loc_4AB8CB: cmp %ebx,%ebp;");
    asm("loc_4AB8CD: mov %ebp,0x28(%esp);");
    asm("loc_4AB8D1: jg loc_4AB816;");
    asm("loc_4AB8D7: fldl 0x840(%esi);");
    asm("loc_4AB8DD: fcompl _data_5C8BA8;");
    asm("loc_4AB8E3: fnstsw %ax;");
    asm("loc_4AB8E5: test $0x41,%ah;");
    asm("loc_4AB8E8: jne loc_4AB938;");
    asm("loc_4AB8EA: mov %esi,%ecx;");
    asm("loc_4AB8EC: call _sub_4AE650;");
    asm("loc_4AB8F1: mov %esi,%ecx;");
    asm("loc_4AB8F3: call _sub_4AE650;");
    asm("loc_4AB8F8: mov 0x338(%esi),%ecx;");
    asm("loc_4AB8FE: lea 0x1C(%esp),%eax;");
    asm("loc_4AB902: mov %bl,0x8A0(%esi);");
    asm("loc_4AB908: movl $0,0x1C(%esp);");
    asm("loc_4AB910: movl $0,0x20(%esp);");
    asm("loc_4AB918: movl $0,0x24(%esp);");
    asm("loc_4AB920: mov (%ecx),%edx;");
    asm("loc_4AB922: push %eax;");
    asm("loc_4AB923: calll *0x14(%edx);");
    asm("loc_4AB926: mov %ebx,0x840(%esi);");
    asm("loc_4AB92C: movl $0x3FF00000,0x844(%esi);");
    asm("loc_4AB936: jmp loc_4AB968;");
    asm("loc_4AB938: fldl 0x840(%esi);");
    asm("loc_4AB93E: mov 0x338(%esi),%ecx;");
    asm("loc_4AB944: fmull _data_5D5080;");
    asm("loc_4AB94A: lea 0x1C(%esp),%eax;");
    asm("loc_4AB94E: movl $0,0x20(%esp);");
    asm("loc_4AB956: movl $0,0x24(%esp);");
    asm("loc_4AB95E: fstps 0x1C(%esp);");
    asm("loc_4AB962: mov (%ecx),%edx;");
    asm("loc_4AB964: push %eax;");
    asm("loc_4AB965: calll *0x14(%edx);");
    asm("loc_4AB968: fldl 0x840(%esi);");
    asm("loc_4AB96E: fcompl _data_5D5078;");
    asm("loc_4AB974: fnstsw %ax;");
    asm("loc_4AB976: test $0x41,%ah;");
    asm("loc_4AB979: jne loc_4ABB5B;");
    asm("loc_4AB97F: fldl 0x840(%esi);");
    asm("loc_4AB985: fcompl _data_5D5070;");
    asm("loc_4AB98B: fnstsw %ax;");
    asm("loc_4AB98D: test $5,%ah;");
    asm("loc_4AB990: jp loc_4ABB5B;");
    asm("loc_4AB996: push $0x1B;");
    asm("loc_4AB998: call _sub_564570;");
    asm("loc_4AB99D: add $4,%esp;");
    asm("loc_4AB9A0: jmp loc_4ABB5B;");
    asm("loc_4AB9A5: cmp %bl,0x8A2(%esi);");
    asm("loc_4AB9AB: je loc_4ABB5B;");
    asm("loc_4AB9B1: cmp %bl,%cl;");
    asm("loc_4AB9B3: jne loc_4ABB5B;");
    asm("loc_4AB9B9: fldl 0x10(%esp);");
    asm("loc_4AB9BD: fcompl _data_5D4C88;");
    asm("loc_4AB9C3: fnstsw %ax;");
    asm("loc_4AB9C5: test $0x41,%ah;");
    asm("loc_4AB9C8: jne loc_4AB9DA;");
    asm("loc_4AB9CA: movl $0xEB851EB8,0x10(%esp);");
    asm("loc_4AB9D2: movl $0x3F9EB851,0x14(%esp);");
    asm("loc_4AB9DA: fldl 0x10(%esp);");
    asm("loc_4AB9DE: mov $6,%ebp;");
    asm("loc_4AB9E3: fmull _data_5D3C48;");
    asm("loc_4AB9E9: mov %ebp,0x28(%esp);");
    asm("loc_4AB9ED: xor %edi,%edi;");
    asm("loc_4AB9EF: fsubrl 0x840(%esi);");
    asm("loc_4AB9F5: fstpl 0x840(%esi);");
    asm("loc_4AB9FB: nop;");
    asm("loc_4AB9FC: lea (%esp),%esp;");
    asm("loc_4ABA00: fildl 0x28(%esp);");
    asm("loc_4ABA04: mov 0x58(%esp,%edi),%ecx;");
    asm("loc_4ABA08: fmull _data_5C7720;");
    asm("loc_4ABA0E: fstl 0x28(%esp);");
    asm("loc_4ABA12: faddl 0x840(%esi);");
    asm("loc_4ABA18: fcoml _data_5C8BA8;");
    asm("loc_4ABA1E: fnstsw %ax;");
    asm("loc_4ABA20: test $0x41,%ah;");
    asm("loc_4ABA23: jne loc_4ABA67;");
    asm("loc_4ABA25: lea 0x1C(%esp),%eax;");
    asm("loc_4ABA29: fstp %st(0);");
    asm("loc_4ABA2B: movl $0,0x1C(%esp);");
    asm("loc_4ABA33: movl $0,0x20(%esp);");
    asm("loc_4ABA3B: movl $0,0x24(%esp);");
    asm("loc_4ABA43: mov (%ecx),%edx;");
    asm("loc_4ABA45: push %eax;");
    asm("loc_4ABA46: calll *0x14(%edx);");
    asm("loc_4ABA49: movl $0,0x4C(%esp);");
    asm("loc_4ABA51: movl $0,0x50(%esp);");
    asm("loc_4ABA59: movl $0,0x54(%esp);");
    asm("loc_4ABA61: lea 0x4C(%esp),%eax;");
    asm("loc_4ABA65: jmp loc_4ABAA7;");
    asm("loc_4ABA67: lea 0x34(%esp),%eax;");
    asm("loc_4ABA6B: fstps 0x34(%esp);");
    asm("loc_4ABA6F: movl $0,0x38(%esp);");
    asm("loc_4ABA77: movl $0,0x3C(%esp);");
    asm("loc_4ABA7F: mov (%ecx),%edx;");
    asm("loc_4ABA81: push %eax;");
    asm("loc_4ABA82: calll *0x14(%edx);");
    asm("loc_4ABA85: fldl 0x28(%esp);");
    asm("loc_4ABA89: faddl 0x840(%esi);");
    asm("loc_4ABA8F: movl $0,0x44(%esp);");
    asm("loc_4ABA97: movl $0,0x48(%esp);");
    asm("loc_4ABA9F: lea 0x40(%esp),%eax;");
    asm("loc_4ABAA3: fstps 0x40(%esp);");
    asm("loc_4ABAA7: mov 0x70(%esp,%edi),%ecx;");
    asm("loc_4ABAAB: mov (%ecx),%edx;");
    asm("loc_4ABAAD: push %eax;");
    asm("loc_4ABAAE: calll *0x14(%edx);");
    asm("loc_4ABAB1: dec %ebp;");
    asm("loc_4ABAB2: add $4,%edi;");
    asm("loc_4ABAB5: cmp %ebx,%ebp;");
    asm("loc_4ABAB7: mov %ebp,0x28(%esp);");
    asm("loc_4ABABB: jg loc_4ABA00;");
    asm("loc_4ABAC1: fldl 0x840(%esi);");
    asm("loc_4ABAC7: faddl _data_5D5068;");
    asm("loc_4ABACD: fcompl _data_5C8BA8;");
    asm("loc_4ABAD3: fnstsw %ax;");
    asm("loc_4ABAD5: test $0x41,%ah;");
    asm("loc_4ABAD8: jne loc_4ABAE4;");
    asm("loc_4ABADA: push $0x1B;");
    asm("loc_4ABADC: call _sub_564570;");
    asm("loc_4ABAE1: add $4,%esp;");
    asm("loc_4ABAE4: fldl 0x840(%esi);");
    asm("loc_4ABAEA: fcompl _data_5D5060;");
    asm("loc_4ABAF0: fnstsw %ax;");
    asm("loc_4ABAF2: test $5,%ah;");
    asm("loc_4ABAF5: jp loc_4ABB2B;");
    asm("loc_4ABAF7: xor %eax,%eax;");
    asm("loc_4ABAF9: mov $0xFC,%dl;");
    asm("loc_4ABAFB: nop;");
    asm("loc_4ABAFC: lea (%esp),%esp;");
    asm("loc_4ABB00: mov 0x58(%esp,%eax),%ecx;");
    asm("loc_4ABB04: and %dl,0x6C(%ecx);");
    asm("loc_4ABB07: mov 0x70(%esp,%eax),%ecx;");
    asm("loc_4ABB0B: and %dl,0x6C(%ecx);");
    asm("loc_4ABB0E: add $4,%eax;");
    asm("loc_4ABB11: cmp $0x18,%eax;");
    asm("loc_4ABB14: jl loc_4ABB00;");
    asm("loc_4ABB16: movb $1,0x32C(%esi);");
    asm("loc_4ABB1D: mov %bl,_data_67DCC8;");
    asm("loc_4ABB23: pop %edi;");
    asm("loc_4ABB24: pop %esi;");
    asm("loc_4ABB25: pop %ebp;");
    asm("loc_4ABB26: pop %ebx;");
    asm("loc_4ABB27: mov %ebp,%esp;");
    asm("loc_4ABB29: pop %ebp;");
    asm("loc_4ABB2A: ret;");
    asm("loc_4ABB2B: fldl 0x840(%esi);");
    asm("loc_4ABB31: mov 0x338(%esi),%ecx;");
    asm("loc_4ABB37: fmull _data_5D5080;");
    asm("loc_4ABB3D: lea 0x1C(%esp),%eax;");
    asm("loc_4ABB41: movl $0,0x20(%esp);");
    asm("loc_4ABB49: movl $0,0x24(%esp);");
    asm("loc_4ABB51: fstps 0x1C(%esp);");
    asm("loc_4ABB55: mov (%ecx),%edx;");
    asm("loc_4ABB57: push %eax;");
    asm("loc_4ABB58: calll *0x14(%edx);");
    asm("loc_4ABB5B: cmp %bl,0x32D(%esi);");
    asm("loc_4ABB61: jne loc_4ABC94;");
    asm("loc_4ABB67: cmp %bl,0x8A0(%esi);");
    asm("loc_4ABB6D: je loc_4ABCD7;");
    asm("loc_4ABB73: fldl 0x10(%esp);");
    asm("loc_4ABB77: fcompl _data_5D4C88;");
    asm("loc_4ABB7D: fnstsw %ax;");
    asm("loc_4ABB7F: test $0x41,%ah;");
    asm("loc_4ABB82: jne loc_4ABB94;");
    asm("loc_4ABB84: movl $0xEB851EB8,0x10(%esp);");
    asm("loc_4ABB8C: movl $0x3F9EB851,0x14(%esp);");
    asm("loc_4ABB94: fldl 0x10(%esp);");
    asm("loc_4ABB98: fmull 0x898(%esi);");
    asm("loc_4ABB9E: faddl 0x890(%esi);");
    asm("loc_4ABBA4: fstl 0x890(%esi);");
    asm("loc_4ABBAA: fcompl _data_5D5058;");
    asm("loc_4ABBB0: fnstsw %ax;");
    asm("loc_4ABBB2: test $1,%ah;");
    asm("loc_4ABBB5: jne loc_4ABC15;");
    asm("loc_4ABBB7: mov 0x7F4(%esi),%eax;");
    asm("loc_4ABBBD: cmp $4,%eax;");
    asm("loc_4ABBC0: mov %ebx,0x890(%esi);");
    asm("loc_4ABBC6: mov %ebx,0x894(%esi);");
    asm("loc_4ABBCC: ja loc_4ABC00;");
    asm("loc_4ABBCE: jmpl *_jmp_4ABD84(,%eax,4);");
    asm("loc_4ABBD5: mov %esi,%ecx;");
    asm("loc_4ABBD7: call _sub_4AE4B0;");
    asm("loc_4ABBDC: jmp loc_4ABC00;");
    asm("loc_4ABBDE: mov %esi,%ecx;");
    asm("loc_4ABBE0: call _sub_4AE650;");
    asm("loc_4ABBE5: jmp loc_4ABC00;");
    asm("loc_4ABBE7: mov %esi,%ecx;");
    asm("loc_4ABBE9: call _sub_4AE770;");
    asm("loc_4ABBEE: jmp loc_4ABC00;");
    asm("loc_4ABBF0: mov %esi,%ecx;");
    asm("loc_4ABBF2: call _sub_4AE890;");
    asm("loc_4ABBF7: jmp loc_4ABC00;");
    asm("loc_4ABBF9: mov %esi,%ecx;");
    asm("loc_4ABBFB: call _sub_4AE9A0;");
    asm("loc_4ABC00: cmp %bl,0x8A1(%esi);");
    asm("loc_4ABC06: sete %cl;");
    asm("loc_4ABC09: mov %cl,0x8A1(%esi);");
    asm("loc_4ABC0F: mov %bl,0x8A0(%esi);");
    asm("loc_4ABC15: mov 0x8A1(%esi),%al;");
    asm("loc_4ABC1B: fldl 0x890(%esi);");
    asm("loc_4ABC21: cmp %bl,%al;");
    asm("loc_4ABC23: je loc_4ABC2B;");
    asm("loc_4ABC25: faddl _data_5D5058;");
    asm("loc_4ABC2B: lea 0x1C(%esp),%edx;");
    asm("loc_4ABC2F: fstps 0x1C(%esp);");
    asm("loc_4ABC33: push %edx;");
    asm("loc_4ABC34: lea 0x74(%esp),%eax;");
    asm("loc_4ABC38: push %eax;");
    asm("loc_4ABC39: movl $0,0x28(%esp);");
    asm("loc_4ABC41: movl $0,0x2C(%esp);");
    asm("loc_4ABC49: calll *_import_5C63FC;");
    asm("loc_4ABC4F: mov _import_5C6D90,%ecx;");
    asm("loc_4ABC55: mov (%ecx),%eax;");
    asm("loc_4ABC57: mov (%eax),%edx;");
    asm("loc_4ABC59: add $8,%esp;");
    asm("loc_4ABC5C: lea 0x70(%esp),%ecx;");
    asm("loc_4ABC60: push %ecx;");
    asm("loc_4ABC61: mov 0x338(%esi),%ecx;");
    asm("loc_4ABC67: mov 0x84(%ecx),%ecx;");
    asm("loc_4ABC6D: push %ecx;");
    asm("loc_4ABC6E: push %eax;");
    asm("loc_4ABC6F: calll *0x94(%edx);");
    asm("loc_4ABC75: mov _import_5C6D90,%edx;");
    asm("loc_4ABC7B: mov (%edx),%eax;");
    asm("loc_4ABC7D: mov 0x338(%esi),%edx;");
    asm("loc_4ABC83: mov 0x84(%edx),%edx;");
    asm("loc_4ABC89: mov (%eax),%ecx;");
    asm("loc_4ABC8B: push %ebx;");
    asm("loc_4ABC8C: push %ebx;");
    asm("loc_4ABC8D: push %edx;");
    asm("loc_4ABC8E: push %eax;");
    asm("loc_4ABC8F: calll *0x6C(%ecx);");
    asm("loc_4ABC92: jmp loc_4ABCD7;");
    asm("loc_4ABC94: mov 0x7F4(%esi),%eax;");
    asm("loc_4ABC9A: cmp $4,%eax;");
    asm("loc_4ABC9D: ja loc_4ABCD1;");
    asm("loc_4ABC9F: jmpl *_jmp_4ABD98(,%eax,4);");
    asm("loc_4ABCA6: mov %esi,%ecx;");
    asm("loc_4ABCA8: call _sub_4AE4B0;");
    asm("loc_4ABCAD: jmp loc_4ABCD1;");
    asm("loc_4ABCAF: mov %esi,%ecx;");
    asm("loc_4ABCB1: call _sub_4AE650;");
    asm("loc_4ABCB6: jmp loc_4ABCD1;");
    asm("loc_4ABCB8: mov %esi,%ecx;");
    asm("loc_4ABCBA: call _sub_4AE770;");
    asm("loc_4ABCBF: jmp loc_4ABCD1;");
    asm("loc_4ABCC1: mov %esi,%ecx;");
    asm("loc_4ABCC3: call _sub_4AE890;");
    asm("loc_4ABCC8: jmp loc_4ABCD1;");
    asm("loc_4ABCCA: mov %esi,%ecx;");
    asm("loc_4ABCCC: call _sub_4AE9A0;");
    asm("loc_4ABCD1: mov %bl,0x8A0(%esi);");
    asm("loc_4ABCD7: cmpl $4,0x7F4(%esi);");
    asm("loc_4ABCDE: jne loc_4ABD10;");
    asm("loc_4ABCE0: cmp %bl,0x8A0(%esi);");
    asm("loc_4ABCE6: jne loc_4ABD10;");
    asm("loc_4ABCE8: fldl 0x10(%esp);");
    asm("loc_4ABCEC: fmull 0x8B0(%esi);");
    asm("loc_4ABCF2: faddl 0x8A8(%esi);");
    asm("loc_4ABCF8: fstl 0x8A8(%esi);");
    asm("loc_4ABCFE: call _sub_5B7EC0;");
    asm("loc_4ABD03: mov 0x7F0(%esi),%ecx;");
    asm("loc_4ABD09: push %eax;");
    asm("loc_4ABD0A: push %ebx;");
    asm("loc_4ABD0B: call _sub_5798B0;");
    asm("loc_4ABD10: cmp %bl,0x84D(%esi);");
    asm("loc_4ABD16: je loc_4ABD7B;");
    asm("loc_4ABD18: fldl 0x8C0(%esi);");
    asm("loc_4ABD1E: fsubl 0x10(%esp);");
    asm("loc_4ABD22: fstl 0x10(%esp);");
    asm("loc_4ABD26: fstl 0x8C0(%esi);");
    asm("loc_4ABD2C: fcompl _data_5C8BA8;");
    asm("loc_4ABD32: fnstsw %ax;");
    asm("loc_4ABD34: test $0x41,%ah;");
    asm("loc_4ABD37: jp loc_4ABD48;");
    asm("loc_4ABD39: mov %esi,%ecx;");
    asm("loc_4ABD3B: call _sub_4B2700;");
    asm("loc_4ABD40: pop %edi;");
    asm("loc_4ABD41: pop %esi;");
    asm("loc_4ABD42: pop %ebp;");
    asm("loc_4ABD43: pop %ebx;");
    asm("loc_4ABD44: mov %ebp,%esp;");
    asm("loc_4ABD46: pop %ebp;");
    asm("loc_4ABD47: ret;");
    asm("loc_4ABD48: mov 0x14(%esp),%eax;");
    asm("loc_4ABD4C: mov 0x10(%esp),%ecx;");
    asm("loc_4ABD50: push %eax;");
    asm("loc_4ABD51: push %ecx;");
    asm("loc_4ABD52: lea 0x78(%esp),%edx;");
    asm("loc_4ABD56: push $_data_5D5048;");
    asm("loc_4ABD5B: push %edx;");
    asm("loc_4ABD5C: calll *_import_5C70EC;");
    asm("loc_4ABD62: mov 0x4F0(%esi),%ecx;");
    asm("loc_4ABD68: mov (%ecx),%eax;");
    asm("loc_4ABD6A: add $0x10,%esp;");
    asm("loc_4ABD6D: push %ebx;");
    asm("loc_4ABD6E: lea 0x74(%esp),%edx;");
    asm("loc_4ABD72: push %edx;");
    asm("loc_4ABD73: push $0x1D;");
    asm("loc_4ABD75: calll *0xA8(%eax);");
    asm("loc_4ABD7B: pop %edi;");
    asm("loc_4ABD7C: pop %esi;");
    asm("loc_4ABD7D: pop %ebp;");
    asm("loc_4ABD7E: pop %ebx;");
    asm("loc_4ABD7F: mov %ebp,%esp;");
    asm("loc_4ABD81: pop %ebp;");
    asm("loc_4ABD82: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_4ABD84: .long loc_4ABBD5;");
    asm(".long loc_4ABBDE;");
    asm(".long loc_4ABBE7;");
    asm(".long loc_4ABBF0;");
    asm(".long loc_4ABBF9;");
    asm("_jmp_4ABD98: .long loc_4ABCA6;");
    asm(".long loc_4ABCAF;");
    asm(".long loc_4ABCB8;");
    asm(".long loc_4ABCC1;");
    asm(".long loc_4ABCCA;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4AB6E0);
_naked _weak void _sub_4ABDB0() // _sub_4ABDB0
{
    __DEBUG_ASM(4ABDB0);
    // chunk 0x4ABDB0 _sub_4ABDB0
    asm("loc_4ABDB0: push %esi;");
    asm("loc_4ABDB1: push %edi;");
    asm("loc_4ABDB2: mov %ecx,%edi;");
    asm("loc_4ABDB4: call _sub_45A9F0;");
    asm("loc_4ABDB9: mov 0xC(%edi),%esi;");
    asm("loc_4ABDBC: test %esi,%esi;");
    asm("loc_4ABDBE: je loc_4ABDE8;");
    asm("loc_4ABDC0: testb $2,0x6C(%esi);");
    asm("loc_4ABDC4: je loc_4ABDE1;");
    asm("loc_4ABDC6: mov (%esi),%eax;");
    asm("loc_4ABDC8: mov %esi,%ecx;");
    asm("loc_4ABDCA: calll *8(%eax);");
    asm("loc_4ABDCD: cmp 0x4E4(%edi),%eax;");
    asm("loc_4ABDD3: jne loc_4ABDDA;");
    asm("loc_4ABDD5: call _sub_45A9F0;");
    asm("loc_4ABDDA: mov (%esi),%edx;");
    asm("loc_4ABDDC: mov %esi,%ecx;");
    asm("loc_4ABDDE: calll *0x34(%edx);");
    asm("loc_4ABDE1: mov 8(%esi),%esi;");
    asm("loc_4ABDE4: test %esi,%esi;");
    asm("loc_4ABDE6: jne loc_4ABDC0;");
    asm("loc_4ABDE8: pop %edi;");
    asm("loc_4ABDE9: pop %esi;");
    asm("loc_4ABDEA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4ABDF0() // _sub_4ABDF0
{
    __DEBUG_ASM(4ABDF0);
    // chunk 0x4ABDF0 _sub_4ABDF0
    asm("loc_4ABDF0: push %ebx;");
    asm("loc_4ABDF1: push %ebp;");
    asm("loc_4ABDF2: mov %ecx,%ebp;");
    asm("loc_4ABDF4: mov 0x7F4(%ebp),%eax;");
    asm("loc_4ABDFA: test %eax,%eax;");
    asm("loc_4ABDFC: push %esi;");
    asm("loc_4ABDFD: push %edi;");
    asm("loc_4ABDFE: mov $0xFC,%bl;");
    asm("loc_4ABE00: jne loc_4ABF28;");
    asm("loc_4ABE06: lea 0x484(%ebp),%esi;");
    asm("loc_4ABE0C: mov $0xD,%edi;");
    asm("loc_4ABE11: mov 0x14(%esp),%al;");
    asm("loc_4ABE15: test %al,%al;");
    asm("loc_4ABE17: mov -0x34(%esi),%eax;");
    asm("loc_4ABE1A: mov 0x6C(%eax),%dl;");
    asm("loc_4ABE1D: push $0;");
    asm("loc_4ABE1F: je loc_4ABE74;");
    asm("loc_4ABE21: and %bl,%dl;");
    asm("loc_4ABE23: mov %dl,0x6C(%eax);");
    asm("loc_4ABE26: mov (%esi),%eax;");
    asm("loc_4ABE28: and %bl,0x6C(%eax);");
    asm("loc_4ABE2B: mov -0xD4(%esi),%ecx;");
    asm("loc_4ABE31: mov (%ecx),%eax;");
    asm("loc_4ABE33: push $0;");
    asm("loc_4ABE35: push $0x24;");
    asm("loc_4ABE37: calll *0xA8(%eax);");
    asm("loc_4ABE3D: mov -0xA0(%esi),%ecx;");
    asm("loc_4ABE43: mov (%ecx),%edx;");
    asm("loc_4ABE45: push $0;");
    asm("loc_4ABE47: push $0;");
    asm("loc_4ABE49: push $0x24;");
    asm("loc_4ABE4B: calll *0xA8(%edx);");
    asm("loc_4ABE51: mov -0x108(%esi),%eax;");
    asm("loc_4ABE57: and %bl,0x6C(%eax);");
    asm("loc_4ABE5A: mov -0xD4(%esi),%eax;");
    asm("loc_4ABE60: and %bl,0x6C(%eax);");
    asm("loc_4ABE63: mov -0xA0(%esi),%eax;");
    asm("loc_4ABE69: and %bl,0x6C(%eax);");
    asm("loc_4ABE6C: mov -0x6C(%esi),%eax;");
    asm("loc_4ABE6F: and %bl,0x6C(%eax);");
    asm("loc_4ABE72: jmp loc_4ABECB;");
    asm("loc_4ABE74: or $3,%dl;");
    asm("loc_4ABE77: mov %dl,0x6C(%eax);");
    asm("loc_4ABE7A: mov (%esi),%eax;");
    asm("loc_4ABE7C: orb $3,0x6C(%eax);");
    asm("loc_4ABE80: mov -0x108(%esi),%eax;");
    asm("loc_4ABE86: orb $3,0x6C(%eax);");
    asm("loc_4ABE8A: mov -0xD4(%esi),%eax;");
    asm("loc_4ABE90: orb $3,0x6C(%eax);");
    asm("loc_4ABE94: mov -0xA0(%esi),%eax;");
    asm("loc_4ABE9A: orb $3,0x6C(%eax);");
    asm("loc_4ABE9E: mov -0x6C(%esi),%eax;");
    asm("loc_4ABEA1: orb $3,0x6C(%eax);");
    asm("loc_4ABEA5: mov -0xD4(%esi),%ecx;");
    asm("loc_4ABEAB: mov (%ecx),%eax;");
    asm("loc_4ABEAD: push $1;");
    asm("loc_4ABEAF: push $0x24;");
    asm("loc_4ABEB1: calll *0xA8(%eax);");
    asm("loc_4ABEB7: mov -0xA0(%esi),%ecx;");
    asm("loc_4ABEBD: mov (%ecx),%edx;");
    asm("loc_4ABEBF: push $0;");
    asm("loc_4ABEC1: push $1;");
    asm("loc_4ABEC3: push $0x24;");
    asm("loc_4ABEC5: calll *0xA8(%edx);");
    asm("loc_4ABECB: add $4,%esi;");
    asm("loc_4ABECE: dec %edi;");
    asm("loc_4ABECF: jne loc_4ABE11;");
    asm("loc_4ABED5: mov 0x14(%esp),%al;");
    asm("loc_4ABED9: test %al,%al;");
    asm("loc_4ABEDB: mov 0x4B8(%ebp),%eax;");
    asm("loc_4ABEE1: mov 0x6C(%eax),%dl;");
    asm("loc_4ABEE4: je loc_4ABF0C;");
    asm("loc_4ABEE6: and %bl,%dl;");
    asm("loc_4ABEE8: mov %dl,0x6C(%eax);");
    asm("loc_4ABEEB: mov 0x44C(%ebp),%eax;");
    asm("loc_4ABEF1: and %bl,0x6C(%eax);");
    asm("loc_4ABEF4: mov 0x14(%esp),%al;");
    asm("loc_4ABEF8: test %al,%al;");
    asm("loc_4ABEFA: je loc_4ABF05;");
    asm("loc_4ABEFC: mov 0x7F0(%ebp),%eax;");
    asm("loc_4ABF02: and %bl,0x6C(%eax);");
    asm("loc_4ABF05: pop %edi;");
    asm("loc_4ABF06: pop %esi;");
    asm("loc_4ABF07: pop %ebp;");
    asm("loc_4ABF08: pop %ebx;");
    asm("loc_4ABF09: ret $4;");
    asm("loc_4ABF0C: or $3,%dl;");
    asm("loc_4ABF0F: mov %dl,0x6C(%eax);");
    asm("loc_4ABF12: mov 0x44C(%ebp),%eax;");
    asm("loc_4ABF18: mov 0x6C(%eax),%cl;");
    asm("loc_4ABF1B: pop %edi;");
    asm("loc_4ABF1C: pop %esi;");
    asm("loc_4ABF1D: or $3,%cl;");
    asm("loc_4ABF20: pop %ebp;");
    asm("loc_4ABF21: mov %cl,0x6C(%eax);");
    asm("loc_4ABF24: pop %ebx;");
    asm("loc_4ABF25: ret $4;");
    asm("loc_4ABF28: cmp $1,%eax;");
    asm("loc_4ABF2B: je loc_4ABF37;");
    asm("loc_4ABF2D: cmp $3,%eax;");
    asm("loc_4ABF30: je loc_4ABF37;");
    asm("loc_4ABF32: cmp $2,%eax;");
    asm("loc_4ABF35: jne loc_4ABEF4;");
    asm("loc_4ABF37: lea 0x5AC(%ebp),%esi;");
    asm("loc_4ABF3D: mov $0xE,%edi;");
    asm("loc_4ABF42: mov $0xFC,%bl;");
    asm("loc_4ABF44: mov 0x14(%esp),%al;");
    asm("loc_4ABF48: test %al,%al;");
    asm("loc_4ABF4A: push $0;");
    asm("loc_4ABF4C: je loc_4ABF7F;");
    asm("loc_4ABF4E: mov 0x38(%esi),%eax;");
    asm("loc_4ABF51: and %bl,0x6C(%eax);");
    asm("loc_4ABF54: mov 0xA8(%esi),%eax;");
    asm("loc_4ABF5A: and %bl,0x6C(%eax);");
    asm("loc_4ABF5D: mov 0x188(%esi),%eax;");
    asm("loc_4ABF63: and %bl,0x6C(%eax);");
    asm("loc_4ABF66: mov 0x1C0(%esi),%eax;");
    asm("loc_4ABF6C: and %bl,0x6C(%eax);");
    asm("loc_4ABF6F: mov (%esi),%ecx;");
    asm("loc_4ABF71: mov (%ecx),%eax;");
    asm("loc_4ABF73: push $0;");
    asm("loc_4ABF75: push $0x24;");
    asm("loc_4ABF77: calll *0xA8(%eax);");
    asm("loc_4ABF7D: jmp loc_4ABF8D;");
    asm("loc_4ABF7F: mov (%esi),%ecx;");
    asm("loc_4ABF81: mov (%ecx),%edx;");
    asm("loc_4ABF83: push $1;");
    asm("loc_4ABF85: push $0x24;");
    asm("loc_4ABF87: calll *0xA8(%edx);");
    asm("loc_4ABF8D: add $4,%esi;");
    asm("loc_4ABF90: dec %edi;");
    asm("loc_4ABF91: jne loc_4ABF44;");
    asm("loc_4ABF93: mov 0x14(%esp),%al;");
    asm("loc_4ABF97: test %al,%al;");
    asm("loc_4ABF99: jne loc_4ABEFC;");
    asm("loc_4ABF9F: push $0xFFFFFFFF;");
    asm("loc_4ABFA1: mov %ebp,%ecx;");
    asm("loc_4ABFA3: call _sub_4B0920;");
    asm("loc_4ABFA8: pop %edi;");
    asm("loc_4ABFA9: pop %esi;");
    asm("loc_4ABFAA: pop %ebp;");
    asm("loc_4ABFAB: pop %ebx;");
    asm("loc_4ABFAC: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4ABFB0() // _sub_4ABFB0
{
    __DEBUG_ASM(4ABFB0);
    // chunk 0x4ABFB0 _sub_4ABFB0
    asm("loc_4ABFB0: sub $0x80,%esp;");
    asm("loc_4ABFB6: push %ebx;");
    asm("loc_4ABFB7: push %esi;");
    asm("loc_4ABFB8: push $0x40;");
    asm("loc_4ABFBA: lea 0xC(%esp),%eax;");
    asm("loc_4ABFBE: push %eax;");
    asm("loc_4ABFBF: mov %ecx,%esi;");
    asm("loc_4ABFC1: mov _data_67ECA8,%ecx;");
    asm("loc_4ABFC7: push $0x5E8;");
    asm("loc_4ABFCC: push %ecx;");
    asm("loc_4ABFCD: call _sub_4347E0;");
    asm("loc_4ABFD2: mov 0x4FC(%esi),%ecx;");
    asm("loc_4ABFD8: mov (%ecx),%edx;");
    asm("loc_4ABFDA: add $0x10,%esp;");
    asm("loc_4ABFDD: push $0;");
    asm("loc_4ABFDF: lea 0xC(%esp),%eax;");
    asm("loc_4ABFE3: push %eax;");
    asm("loc_4ABFE4: push $0x1D;");
    asm("loc_4ABFE6: calll *0xA8(%edx);");
    asm("loc_4ABFEC: mov _data_67ECA8,%edx;");
    asm("loc_4ABFF2: push $0x40;");
    asm("loc_4ABFF4: lea 0xC(%esp),%ecx;");
    asm("loc_4ABFF8: push %ecx;");
    asm("loc_4ABFF9: push $0x2148;");
    asm("loc_4ABFFE: push %edx;");
    asm("loc_4ABFFF: call _sub_4347E0;");
    asm("loc_4AC004: mov 0x500(%esi),%ecx;");
    asm("loc_4AC00A: mov (%ecx),%eax;");
    asm("loc_4AC00C: add $0x10,%esp;");
    asm("loc_4AC00F: push $0;");
    asm("loc_4AC011: lea 0xC(%esp),%edx;");
    asm("loc_4AC015: push %edx;");
    asm("loc_4AC016: push $0x1D;");
    asm("loc_4AC018: calll *0xA8(%eax);");
    asm("loc_4AC01E: mov 0x4E4(%esi),%eax;");
    asm("loc_4AC024: mov 0x6C(%eax),%cl;");
    asm("loc_4AC027: mov $3,%bl;");
    asm("loc_4AC029: or %bl,%cl;");
    asm("loc_4AC02B: mov %cl,0x6C(%eax);");
    asm("loc_4AC02E: push $1;");
    asm("loc_4AC030: mov %esi,%ecx;");
    asm("loc_4AC032: call _sub_4ABDF0;");
    asm("loc_4AC037: mov 0x4F4(%esi),%eax;");
    asm("loc_4AC03D: or %bl,0x6C(%eax);");
    asm("loc_4AC040: mov 0x4F8(%esi),%eax;");
    asm("loc_4AC046: or %bl,0x6C(%eax);");
    asm("loc_4AC049: mov 0x4FC(%esi),%eax;");
    asm("loc_4AC04F: or %bl,0x6C(%eax);");
    asm("loc_4AC052: mov 0x500(%esi),%eax;");
    asm("loc_4AC058: or %bl,0x6C(%eax);");
    asm("loc_4AC05B: mov 0x4E8(%esi),%eax;");
    asm("loc_4AC061: or %bl,0x6C(%eax);");
    asm("loc_4AC064: mov 0x84D(%esi),%al;");
    asm("loc_4AC06A: test %al,%al;");
    asm("loc_4AC06C: jne loc_4AC078;");
    asm("loc_4AC06E: mov 0x84C(%esi),%al;");
    asm("loc_4AC074: test %al,%al;");
    asm("loc_4AC076: je loc_4AC08A;");
    asm("loc_4AC078: mov 0x4EC(%esi),%eax;");
    asm("loc_4AC07E: or %bl,0x6C(%eax);");
    asm("loc_4AC081: mov 0x4F0(%esi),%esi;");
    asm("loc_4AC087: or %bl,0x6C(%esi);");
    asm("loc_4AC08A: pop %esi;");
    asm("loc_4AC08B: pop %ebx;");
    asm("loc_4AC08C: add $0x80,%esp;");
    asm("loc_4AC092: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AC0A0() // _sub_4AC0A0
{
    asm("jmp dgb_4AC0A0;"); // jumptable skip
    asm(".long _jmp_4AD544;"); // jumptable address
    __DEBUG_ASM(4AC0A0);
    // chunk 0x4AC0A0 _sub_4AC0A0
    asm("loc_4AC0A0: mov %fs:0,%eax;");
    asm("loc_4AC0A6: push $0xFFFFFFFF;");
    asm("loc_4AC0A8: push $_sub_5BCE96;");
    asm("loc_4AC0AD: push %eax;");
    asm("loc_4AC0AE: mov %esp,%fs:0;");
    asm("loc_4AC0B5: sub $0x134,%esp;");
    asm("loc_4AC0BB: push %ebx;");
    asm("loc_4AC0BC: push %ebp;");
    asm("loc_4AC0BD: push %esi;");
    asm("loc_4AC0BE: push %edi;");
    asm("loc_4AC0BF: mov 0x154(%esp),%edi;");
    asm("loc_4AC0C6: xor %ebx,%ebx;");
    asm("loc_4AC0C8: cmp $0x46,%edi;");
    asm("loc_4AC0CB: mov %ecx,%ebp;");
    asm("loc_4AC0CD: mov 0x158(%esp),%ecx;");
    asm("loc_4AC0D4: je loc_4AC0DF;");
    asm("loc_4AC0D6: cmp $0x25,%edi;");
    asm("loc_4AC0D9: jne loc_4AC1CE;");
    asm("loc_4AC0DF: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AC0E5: cmp %ebx,%eax;");
    asm("loc_4AC0E7: je loc_4AC185;");
    asm("loc_4AC0ED: cmp $1,%eax;");
    asm("loc_4AC0F0: jne loc_4AC133;");
    asm("loc_4AC0F2: cmp 0x564(%ebp),%ecx;");
    asm("loc_4AC0F8: je loc_4AC102;");
    asm("loc_4AC0FA: cmp 0x570(%ebp),%ecx;");
    asm("loc_4AC100: jne loc_4AC133;");
    asm("loc_4AC102: xor %esi,%esi;");
    asm("loc_4AC104: mov 0x508(%ebp),%eax;");
    asm("loc_4AC10A: cmpl $0x536,(%eax,%esi);");
    asm("loc_4AC111: jne loc_4AC122;");
    asm("loc_4AC113: push %ebx;");
    asm("loc_4AC114: mov %ebp,%ecx;");
    asm("loc_4AC116: call _sub_4B2130;");
    asm("loc_4AC11B: mov 0x158(%esp),%ecx;");
    asm("loc_4AC122: add $0x18,%esi;");
    asm("loc_4AC125: inc %ebx;");
    asm("loc_4AC126: cmp $0x150,%esi;");
    asm("loc_4AC12C: jl loc_4AC104;");
    asm("loc_4AC12E: jmp loc_4AC1CC;");
    asm("loc_4AC133: lea 0x5E4(%ebp),%esi;");
    asm("loc_4AC139: lea (%esp),%esp;");
    asm("loc_4AC140: cmp -0x38(%esi),%ecx;");
    asm("loc_4AC143: je loc_4AC16B;");
    asm("loc_4AC145: cmp (%esi),%ecx;");
    asm("loc_4AC147: je loc_4AC16B;");
    asm("loc_4AC149: cmp 0x38(%esi),%ecx;");
    asm("loc_4AC14C: je loc_4AC16B;");
    asm("loc_4AC14E: cmp 0x70(%esi),%ecx;");
    asm("loc_4AC151: je loc_4AC16B;");
    asm("loc_4AC153: cmp 0x118(%esi),%ecx;");
    asm("loc_4AC159: je loc_4AC16B;");
    asm("loc_4AC15B: cmp 0x150(%esi),%ecx;");
    asm("loc_4AC161: je loc_4AC16B;");
    asm("loc_4AC163: cmp 0x188(%esi),%ecx;");
    asm("loc_4AC169: jne loc_4AC17A;");
    asm("loc_4AC16B: push %ebx;");
    asm("loc_4AC16C: mov %ebp,%ecx;");
    asm("loc_4AC16E: call _sub_4B2130;");
    asm("loc_4AC173: mov 0x158(%esp),%ecx;");
    asm("loc_4AC17A: inc %ebx;");
    asm("loc_4AC17B: add $4,%esi;");
    asm("loc_4AC17E: cmp $0xE,%ebx;");
    asm("loc_4AC181: jl loc_4AC140;");
    asm("loc_4AC183: jmp loc_4AC1CC;");
    asm("loc_4AC185: lea 0x3E4(%ebp),%esi;");
    asm("loc_4AC18B: nop;");
    asm("loc_4AC18C: lea (%esp),%esp;");
    asm("loc_4AC190: cmp -0x34(%esi),%ecx;");
    asm("loc_4AC193: je loc_4AC1A8;");
    asm("loc_4AC195: cmp (%esi),%ecx;");
    asm("loc_4AC197: je loc_4AC1A8;");
    asm("loc_4AC199: cmp -0x68(%esi),%ecx;");
    asm("loc_4AC19C: jne loc_4AC1C3;");
    asm("loc_4AC19E: push %ebx;");
    asm("loc_4AC19F: mov %ebp,%ecx;");
    asm("loc_4AC1A1: call _sub_4B2130;");
    asm("loc_4AC1A6: jmp loc_4AC1BC;");
    asm("loc_4AC1A8: push $0x3E4CCCCD;");
    asm("loc_4AC1AD: push $0;");
    asm("loc_4AC1AF: push $0x68C;");
    asm("loc_4AC1B4: call _sub_4B6440;");
    asm("loc_4AC1B9: add $0xC,%esp;");
    asm("loc_4AC1BC: mov 0x158(%esp),%ecx;");
    asm("loc_4AC1C3: inc %ebx;");
    asm("loc_4AC1C4: add $4,%esi;");
    asm("loc_4AC1C7: cmp $0xD,%ebx;");
    asm("loc_4AC1CA: jl loc_4AC190;");
    asm("loc_4AC1CC: xor %ebx,%ebx;");
    asm("loc_4AC1CE: cmp $0x4F,%edi;");
    asm("loc_4AC1D1: jne loc_4AC1EA;");
    asm("loc_4AC1D3: fldl 0x840(%ebp);");
    asm("loc_4AC1D9: fcompl _data_5C8BA8;");
    asm("loc_4AC1DF: fnstsw %ax;");
    asm("loc_4AC1E1: test $5,%ah;");
    asm("loc_4AC1E4: jnp loc_4AC9B1;");
    asm("loc_4AC1EA: mov 0x8A0(%ebp),%al;");
    asm("loc_4AC1F0: test %al,%al;");
    asm("loc_4AC1F2: jne loc_4AD525;");
    asm("loc_4AC1F8: mov 0x84A(%ebp),%al;");
    asm("loc_4AC1FE: test %al,%al;");
    asm("loc_4AC200: je loc_4AC3AD;");
    asm("loc_4AC206: cmp $0x26,%edi;");
    asm("loc_4AC209: jne loc_4AD525;");
    asm("loc_4AC20F: cmp 0x4F4(%ebp),%ecx;");
    asm("loc_4AC215: jne loc_4AC390;");
    asm("loc_4AC21B: cmp %ebx,0x7F4(%ebp);");
    asm("loc_4AC221: jne loc_4AC23A;");
    asm("loc_4AC223: call _sub_575D70;");
    asm("loc_4AC228: mov %eax,%esi;");
    asm("loc_4AC22A: call _sub_575D60;");
    asm("loc_4AC22F: push %esi;");
    asm("loc_4AC230: call _sub_5772D0;");
    asm("loc_4AC235: add $4,%esp;");
    asm("loc_4AC238: jmp loc_4AC276;");
    asm("loc_4AC23A: mov 0x84D(%ebp),%al;");
    asm("loc_4AC240: test %al,%al;");
    asm("loc_4AC242: je loc_4AC26F;");
    asm("loc_4AC244: mov 0x334(%ebp),%cl;");
    asm("loc_4AC24A: mov 0x330(%ebp),%eax;");
    asm("loc_4AC250: mov %cl,0x8BC(%ebp);");
    asm("loc_4AC256: push $0x536;");
    asm("loc_4AC25B: mov %ebp,%ecx;");
    asm("loc_4AC25D: movb $0,0x84D(%ebp);");
    asm("loc_4AC264: mov %eax,0x8B8(%ebp);");
    asm("loc_4AC26A: call _sub_4B0920;");
    asm("loc_4AC26F: mov %ebp,%ecx;");
    asm("loc_4AC271: call _sub_4B0530;");
    asm("loc_4AC276: mov 0x7AC(%ebp),%edx;");
    asm("loc_4AC27C: movb $0,0x848(%ebp);");
    asm("loc_4AC283: mov _data_679B94,%eax;");
    asm("loc_4AC288: mov %eax,0x348(%edx);");
    asm("loc_4AC28E: mov 0x7A8(%ebp),%eax;");
    asm("loc_4AC294: movb $1,0x37C(%eax);");
    asm("loc_4AC29B: mov 0x7A8(%ebp),%eax;");
    asm("loc_4AC2A1: mov 0x388(%eax),%bl;");
    asm("loc_4AC2A7: and $0xFB,%bl;");
    asm("loc_4AC2AA: push $0;");
    asm("loc_4AC2AC: mov %ebp,%ecx;");
    asm("loc_4AC2AE: mov %bl,0x388(%eax);");
    asm("loc_4AC2B4: call _sub_4B2540;");
    asm("loc_4AC2B9: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AC2BF: cmp $4,%eax;");
    asm("loc_4AC2C2: ja loc_4AC368;");
    asm("loc_4AC2C8: jmpl *_jmp_4AD544(,%eax,4);");
    asm("loc_4AC2CF: mov %ebp,%ecx;");
    asm("loc_4AC2D1: call _sub_4AEAB0;");
    asm("loc_4AC2D6: jmp loc_4AC368;");
    asm("loc_4AC2DB: mov %ebp,%ecx;");
    asm("loc_4AC2DD: call _sub_4AEBB0;");
    asm("loc_4AC2E2: jmp loc_4AC368;");
    asm("loc_4AC2E7: mov %ebp,%ecx;");
    asm("loc_4AC2E9: call _sub_4AECA0;");
    asm("loc_4AC2EE: jmp loc_4AC368;");
    asm("loc_4AC2F0: mov %ebp,%ecx;");
    asm("loc_4AC2F2: call _sub_4AED70;");
    asm("loc_4AC2F7: jmp loc_4AC368;");
    asm("loc_4AC2F9: mov 0x7F0(%ebp),%eax;");
    asm("loc_4AC2FF: mov 0x6C(%eax),%cl;");
    asm("loc_4AC302: mov $0xFC,%bl;");
    asm("loc_4AC304: and %bl,%cl;");
    asm("loc_4AC306: mov %cl,0x6C(%eax);");
    asm("loc_4AC309: mov 0x374(%ebp),%ecx;");
    asm("loc_4AC30F: mov _data_679BB0,%edx;");
    asm("loc_4AC315: push $0x40;");
    asm("loc_4AC317: lea 0x48(%esp),%eax;");
    asm("loc_4AC31B: push %eax;");
    asm("loc_4AC31C: mov %edx,0x348(%ecx);");
    asm("loc_4AC322: mov _data_67ECA8,%ecx;");
    asm("loc_4AC328: push $0x5E4;");
    asm("loc_4AC32D: push %ecx;");
    asm("loc_4AC32E: call _sub_4347E0;");
    asm("loc_4AC333: mov 0x7B4(%ebp),%ecx;");
    asm("loc_4AC339: mov (%ecx),%edx;");
    asm("loc_4AC33B: add $0x10,%esp;");
    asm("loc_4AC33E: push $0;");
    asm("loc_4AC340: lea 0x48(%esp),%eax;");
    asm("loc_4AC344: push %eax;");
    asm("loc_4AC345: push $0x1D;");
    asm("loc_4AC347: calll *0xA8(%edx);");
    asm("loc_4AC34D: mov 0x7B0(%ebp),%eax;");
    asm("loc_4AC353: and %bl,0x6C(%eax);");
    asm("loc_4AC356: mov 0x7B4(%ebp),%eax;");
    asm("loc_4AC35C: and %bl,0x6C(%eax);");
    asm("loc_4AC35F: mov 0x344(%ebp),%eax;");
    asm("loc_4AC365: and %bl,0x6C(%eax);");
    asm("loc_4AC368: mov 0x848(%ebp),%al;");
    asm("loc_4AC36E: test %al,%al;");
    asm("loc_4AC370: jne loc_4AC379;");
    asm("loc_4AC372: mov %ebp,%ecx;");
    asm("loc_4AC374: call _sub_4AEE30;");
    asm("loc_4AC379: push $_data_5D5088;");
    asm("loc_4AC37E: call _sub_5B3EC0;");
    asm("loc_4AC383: add $4,%esp;");
    asm("loc_4AC386: mov $1,%eax;");
    asm("loc_4AC38B: jmp loc_4AD527;");
    asm("loc_4AC390: cmp 0x4F8(%ebp),%ecx;");
    asm("loc_4AC396: jne loc_4AD525;");
    asm("loc_4AC39C: mov %ebp,%ecx;");
    asm("loc_4AC39E: call _sub_4B2700;");
    asm("loc_4AC3A3: mov $1,%eax;");
    asm("loc_4AC3A8: jmp loc_4AD527;");
    asm("loc_4AC3AD: mov 0x84D(%ebp),%al;");
    asm("loc_4AC3B3: test %al,%al;");
    asm("loc_4AC3B5: je loc_4AC553;");
    asm("loc_4AC3BB: cmp $0x26,%edi;");
    asm("loc_4AC3BE: jne loc_4AD525;");
    asm("loc_4AC3C4: cmp 0x4F4(%ebp),%ecx;");
    asm("loc_4AC3CA: jne loc_4AC492;");
    asm("loc_4AC3D0: mov 0x4E8(%ebp),%eax;");
    asm("loc_4AC3D6: movb $0,0x84D(%ebp);");
    asm("loc_4AC3DD: mov 0x6C(%eax),%dl;");
    asm("loc_4AC3E0: mov $0xFC,%bl;");
    asm("loc_4AC3E2: and %bl,%dl;");
    asm("loc_4AC3E4: mov %dl,0x6C(%eax);");
    asm("loc_4AC3E7: mov 0x4EC(%ebp),%eax;");
    asm("loc_4AC3ED: and %bl,0x6C(%eax);");
    asm("loc_4AC3F0: mov 0x4F0(%ebp),%eax;");
    asm("loc_4AC3F6: and %bl,0x6C(%eax);");
    asm("loc_4AC3F9: mov 0x4FC(%ebp),%eax;");
    asm("loc_4AC3FF: and %bl,0x6C(%eax);");
    asm("loc_4AC402: mov 0x500(%ebp),%eax;");
    asm("loc_4AC408: and %bl,0x6C(%eax);");
    asm("loc_4AC40B: mov 0x4F4(%ebp),%eax;");
    asm("loc_4AC411: and %bl,0x6C(%eax);");
    asm("loc_4AC414: mov 0x4F8(%ebp),%eax;");
    asm("loc_4AC41A: and %bl,0x6C(%eax);");
    asm("loc_4AC41D: mov 0x4E4(%ebp),%eax;");
    asm("loc_4AC423: and %bl,0x6C(%eax);");
    asm("loc_4AC426: push $0;");
    asm("loc_4AC428: mov %ebp,%ecx;");
    asm("loc_4AC42A: call _sub_4ABDF0;");
    asm("loc_4AC42F: lea 0x5AC(%ebp),%esi;");
    asm("loc_4AC435: mov $0xE,%ebx;");
    asm("loc_4AC43A: lea (%ebx),%ebx;");
    asm("loc_4AC440: mov (%esi),%ecx;");
    asm("loc_4AC442: mov (%ecx),%edx;");
    asm("loc_4AC444: push $0;");
    asm("loc_4AC446: push $1;");
    asm("loc_4AC448: push $0x24;");
    asm("loc_4AC44A: calll *0xA8(%edx);");
    asm("loc_4AC450: add $4,%esi;");
    asm("loc_4AC453: dec %ebx;");
    asm("loc_4AC454: jne loc_4AC440;");
    asm("loc_4AC456: mov 0x330(%ebp),%eax;");
    asm("loc_4AC45C: mov 0x334(%ebp),%cl;");
    asm("loc_4AC462: mov %eax,0x8B8(%ebp);");
    asm("loc_4AC468: mov %cl,0x8BC(%ebp);");
    asm("loc_4AC46E: push $0x536;");
    asm("loc_4AC473: mov %ebp,%ecx;");
    asm("loc_4AC475: call _sub_4B0920;");
    asm("loc_4AC47A: push $0xBF800000;");
    asm("loc_4AC47F: push $0xFFFFFFFF;");
    asm("loc_4AC481: mov %ebp,%ecx;");
    asm("loc_4AC483: call _sub_4B1F30;");
    asm("loc_4AC488: mov $1,%eax;");
    asm("loc_4AC48D: jmp loc_4AD527;");
    asm("loc_4AC492: cmp 0x4F8(%ebp),%ecx;");
    asm("loc_4AC498: jne loc_4AD525;");
    asm("loc_4AC49E: mov 0x8B8(%ebp),%eax;");
    asm("loc_4AC4A4: xor %edx,%edx;");
    asm("loc_4AC4A6: mov 0x8BC(%ebp),%dl;");
    asm("loc_4AC4AC: mov %ebp,%ecx;");
    asm("loc_4AC4AE: push %edx;");
    asm("loc_4AC4AF: push %eax;");
    asm("loc_4AC4B0: call _sub_4B1C00;");
    asm("loc_4AC4B5: mov 0x4E8(%ebp),%eax;");
    asm("loc_4AC4BB: movb $0,0x84D(%ebp);");
    asm("loc_4AC4C2: mov 0x6C(%eax),%dl;");
    asm("loc_4AC4C5: mov $0xFC,%bl;");
    asm("loc_4AC4C7: and %bl,%dl;");
    asm("loc_4AC4C9: mov %dl,0x6C(%eax);");
    asm("loc_4AC4CC: mov 0x4EC(%ebp),%eax;");
    asm("loc_4AC4D2: and %bl,0x6C(%eax);");
    asm("loc_4AC4D5: mov 0x4F0(%ebp),%eax;");
    asm("loc_4AC4DB: and %bl,0x6C(%eax);");
    asm("loc_4AC4DE: mov 0x4FC(%ebp),%eax;");
    asm("loc_4AC4E4: and %bl,0x6C(%eax);");
    asm("loc_4AC4E7: mov 0x500(%ebp),%eax;");
    asm("loc_4AC4ED: and %bl,0x6C(%eax);");
    asm("loc_4AC4F0: mov 0x4F4(%ebp),%eax;");
    asm("loc_4AC4F6: and %bl,0x6C(%eax);");
    asm("loc_4AC4F9: mov 0x4F8(%ebp),%eax;");
    asm("loc_4AC4FF: and %bl,0x6C(%eax);");
    asm("loc_4AC502: mov 0x4E4(%ebp),%eax;");
    asm("loc_4AC508: and %bl,0x6C(%eax);");
    asm("loc_4AC50B: push $0;");
    asm("loc_4AC50D: mov %ebp,%ecx;");
    asm("loc_4AC50F: call _sub_4ABDF0;");
    asm("loc_4AC514: lea 0x5AC(%ebp),%esi;");
    asm("loc_4AC51A: mov $0xE,%ebx;");
    asm("loc_4AC51F: nop;");
    asm("loc_4AC520: mov (%esi),%ecx;");
    asm("loc_4AC522: mov (%ecx),%edx;");
    asm("loc_4AC524: push $0;");
    asm("loc_4AC526: push $1;");
    asm("loc_4AC528: push $0x24;");
    asm("loc_4AC52A: calll *0xA8(%edx);");
    asm("loc_4AC530: add $4,%esi;");
    asm("loc_4AC533: dec %ebx;");
    asm("loc_4AC534: jne loc_4AC520;");
    asm("loc_4AC536: mov 0x8B8(%ebp),%eax;");
    asm("loc_4AC53C: mov 0x8BC(%ebp),%cl;");
    asm("loc_4AC542: mov %eax,0x330(%ebp);");
    asm("loc_4AC548: mov %cl,0x334(%ebp);");
    asm("loc_4AC54E: jmp loc_4AC46E;");
    asm("loc_4AC553: mov 0x84C(%ebp),%al;");
    asm("loc_4AC559: test %al,%al;");
    asm("loc_4AC55B: je loc_4AC9BB;");
    asm("loc_4AC561: cmp $0x26,%edi;");
    asm("loc_4AC564: jne loc_4AD525;");
    asm("loc_4AC56A: cmp 0x4F4(%ebp),%ecx;");
    asm("loc_4AC570: jne loc_4AC904;");
    asm("loc_4AC576: mov 0x87E(%ebp),%al;");
    asm("loc_4AC57C: test %al,%al;");
    asm("loc_4AC57E: je loc_4AC7CA;");
    asm("loc_4AC584: lea 0x1C(%esp),%edx;");
    asm("loc_4AC588: push %edx;");
    asm("loc_4AC589: mov %ebp,%ecx;");
    asm("loc_4AC58B: call _sub_4AE030;");
    asm("loc_4AC590: mov 0x884(%ebp),%eax;");
    asm("loc_4AC596: push %eax;");
    asm("loc_4AC597: lea 0x38(%esp),%ecx;");
    asm("loc_4AC59B: push %ecx;");
    asm("loc_4AC59C: xor %esi,%esi;");
    asm("loc_4AC59E: mov %ebp,%ecx;");
    asm("loc_4AC5A0: mov %esi,0x154(%esp);");
    asm("loc_4AC5A7: call _sub_4ADE00;");
    asm("loc_4AC5AC: mov 0x87C(%ebp),%al;");
    asm("loc_4AC5B2: test %al,%al;");
    asm("loc_4AC5B4: mov 0x87D(%ebp),%al;");
    asm("loc_4AC5BA: movb $1,0x14C(%esp);");
    asm("loc_4AC5C2: je loc_4AC775;");
    asm("loc_4AC5C8: test %al,%al;");
    asm("loc_4AC5CA: je loc_4AC5EC;");
    asm("loc_4AC5CC: mov 0x880(%ebp),%edx;");
    asm("loc_4AC5D2: mov 0x38(%esp),%eax;");
    asm("loc_4AC5D6: imul $0x2C,%edx;");
    asm("loc_4AC5D9: mov 0x864(%ebp),%ecx;");
    asm("loc_4AC5DF: add %edx,%eax;");
    asm("loc_4AC5E1: mov 0x860(%ebp),%edx;");
    asm("loc_4AC5E7: jmp loc_4AC799;");
    asm("loc_4AC5EC: mov 0x880(%ebp),%ecx;");
    asm("loc_4AC5F2: mov 0x38(%esp),%edx;");
    asm("loc_4AC5F6: imul $0x2C,%ecx;");
    asm("loc_4AC5F9: lea (%ecx,%edx),%eax;");
    asm("loc_4AC5FC: mov 0x864(%ebp),%ecx;");
    asm("loc_4AC602: mov 0x860(%ebp),%edx;");
    asm("loc_4AC608: push %ecx;");
    asm("loc_4AC609: mov 8(%eax),%ecx;");
    asm("loc_4AC60C: push %edx;");
    asm("loc_4AC60D: mov 4(%eax),%edx;");
    asm("loc_4AC610: mov 0x870(%ebp),%eax;");
    asm("loc_4AC616: push %ecx;");
    asm("loc_4AC617: push %edx;");
    asm("loc_4AC618: push %eax;");
    asm("loc_4AC619: call _sub_578220;");
    asm("loc_4AC61E: mov 0x880(%ebp),%ecx;");
    asm("loc_4AC624: mov 0x4C(%esp),%edx;");
    asm("loc_4AC628: imul $0x2C,%ecx;");
    asm("loc_4AC62B: lea (%ecx,%edx),%eax;");
    asm("loc_4AC62E: mov 8(%eax),%ecx;");
    asm("loc_4AC631: mov 4(%eax),%edx;");
    asm("loc_4AC634: mov 0x888(%ebp),%eax;");
    asm("loc_4AC63A: push %ecx;");
    asm("loc_4AC63B: push %edx;");
    asm("loc_4AC63C: push %esi;");
    asm("loc_4AC63D: push %esi;");
    asm("loc_4AC63E: push %eax;");
    asm("loc_4AC63F: call _sub_578220;");
    asm("loc_4AC644: add $0x28,%esp;");
    asm("loc_4AC647: push %ebp;");
    asm("loc_4AC648: movb $0,0x84C(%ebp);");
    asm("loc_4AC64F: call _sub_59D960;");
    asm("loc_4AC654: mov 0x4E8(%ebp),%eax;");
    asm("loc_4AC65A: mov 0x6C(%eax),%dl;");
    asm("loc_4AC65D: mov $0xFC,%bl;");
    asm("loc_4AC65F: and %bl,%dl;");
    asm("loc_4AC661: mov %dl,0x6C(%eax);");
    asm("loc_4AC664: mov 0x4EC(%ebp),%eax;");
    asm("loc_4AC66A: and %bl,0x6C(%eax);");
    asm("loc_4AC66D: mov 0x4F0(%ebp),%eax;");
    asm("loc_4AC673: and %bl,0x6C(%eax);");
    asm("loc_4AC676: mov 0x4FC(%ebp),%eax;");
    asm("loc_4AC67C: and %bl,0x6C(%eax);");
    asm("loc_4AC67F: mov 0x500(%ebp),%eax;");
    asm("loc_4AC685: and %bl,0x6C(%eax);");
    asm("loc_4AC688: mov 0x4F4(%ebp),%eax;");
    asm("loc_4AC68E: and %bl,0x6C(%eax);");
    asm("loc_4AC691: mov 0x4F8(%ebp),%eax;");
    asm("loc_4AC697: and %bl,0x6C(%eax);");
    asm("loc_4AC69A: mov 0x4E4(%ebp),%eax;");
    asm("loc_4AC6A0: mov 0x6C(%eax),%cl;");
    asm("loc_4AC6A3: and %bl,%cl;");
    asm("loc_4AC6A5: add $4,%esp;");
    asm("loc_4AC6A8: mov %cl,0x6C(%eax);");
    asm("loc_4AC6AB: push %esi;");
    asm("loc_4AC6AC: mov %ebp,%ecx;");
    asm("loc_4AC6AE: call _sub_4ABDF0;");
    asm("loc_4AC6B3: lea 0x484(%ebp),%eax;");
    asm("loc_4AC6B9: mov $0xD,%edx;");
    asm("loc_4AC6BE: mov %edi,%edi;");
    asm("loc_4AC6C0: mov -0x34(%eax),%ecx;");
    asm("loc_4AC6C3: orb $3,0x6C(%ecx);");
    asm("loc_4AC6C7: mov (%eax),%ecx;");
    asm("loc_4AC6C9: orb $3,0x6C(%ecx);");
    asm("loc_4AC6CD: mov -0x6C(%eax),%ecx;");
    asm("loc_4AC6D0: mov 0x6C(%ecx),%bl;");
    asm("loc_4AC6D3: or $3,%bl;");
    asm("loc_4AC6D6: add $4,%eax;");
    asm("loc_4AC6D9: dec %edx;");
    asm("loc_4AC6DA: mov %bl,0x6C(%ecx);");
    asm("loc_4AC6DD: jne loc_4AC6C0;");
    asm("loc_4AC6DF: mov 0x450(%ebp),%eax;");
    asm("loc_4AC6E5: orb $3,0x6C(%eax);");
    asm("loc_4AC6E9: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4AC6EF: movb $1,0x848(%ebp);");
    asm("loc_4AC6F6: mov _data_679BB0,%eax;");
    asm("loc_4AC6FB: mov %eax,0x348(%ecx);");
    asm("loc_4AC701: mov 0x7A8(%ebp),%edx;");
    asm("loc_4AC707: movb $0,0x37C(%edx);");
    asm("loc_4AC70E: mov 0x7A8(%ebp),%eax;");
    asm("loc_4AC714: orb $4,0x388(%eax);");
    asm("loc_4AC71B: push $_data_5D4CBC;");
    asm("loc_4AC720: mov %ebp,%ecx;");
    asm("loc_4AC722: call _sub_4AF230;");
    asm("loc_4AC727: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4AC72D: mov (%ecx),%eax;");
    asm("loc_4AC72F: push %esi;");
    asm("loc_4AC730: push %esi;");
    asm("loc_4AC731: push $0x3B;");
    asm("loc_4AC733: calll *0xA8(%eax);");
    asm("loc_4AC739: push %eax;");
    asm("loc_4AC73A: mov %ebp,%ecx;");
    asm("loc_4AC73C: call _sub_4AF900;");
    asm("loc_4AC741: mov 0x38(%esp),%ecx;");
    asm("loc_4AC745: push %ecx;");
    asm("loc_4AC746: movb $0,0x87E(%ebp);");
    asm("loc_4AC74D: call _sub_5B7E1D;");
    asm("loc_4AC752: mov 0x24(%esp),%edx;");
    asm("loc_4AC756: push %edx;");
    asm("loc_4AC757: mov %esi,0x40(%esp);");
    asm("loc_4AC75B: mov %esi,0x44(%esp);");
    asm("loc_4AC75F: mov %esi,0x48(%esp);");
    asm("loc_4AC763: call _sub_5B7E1D;");
    asm("loc_4AC768: add $8,%esp;");
    asm("loc_4AC76B: mov $1,%eax;");
    asm("loc_4AC770: jmp loc_4AD527;");
    asm("loc_4AC775: mov 0x880(%ebp),%ecx;");
    asm("loc_4AC77B: mov 0x38(%esp),%edx;");
    asm("loc_4AC77F: imul $0x2C,%ecx;");
    asm("loc_4AC782: test %al,%al;");
    asm("loc_4AC784: lea (%ecx,%edx),%eax;");
    asm("loc_4AC787: mov 0x854(%ebp),%edx;");
    asm("loc_4AC78D: mov 0x858(%ebp),%ecx;");
    asm("loc_4AC793: je loc_4AC608;");
    asm("loc_4AC799: push %ecx;");
    asm("loc_4AC79A: mov 0x14(%eax),%ecx;");
    asm("loc_4AC79D: push %edx;");
    asm("loc_4AC79E: mov 0x10(%eax),%edx;");
    asm("loc_4AC7A1: mov 0x870(%ebp),%eax;");
    asm("loc_4AC7A7: push %ecx;");
    asm("loc_4AC7A8: push %edx;");
    asm("loc_4AC7A9: push %eax;");
    asm("loc_4AC7AA: call _sub_578220;");
    asm("loc_4AC7AF: mov 0x880(%ebp),%ecx;");
    asm("loc_4AC7B5: mov 0x4C(%esp),%edx;");
    asm("loc_4AC7B9: imul $0x2C,%ecx;");
    asm("loc_4AC7BC: lea (%ecx,%edx),%eax;");
    asm("loc_4AC7BF: mov 0x14(%eax),%ecx;");
    asm("loc_4AC7C2: mov 0x10(%eax),%edx;");
    asm("loc_4AC7C5: jmp loc_4AC634;");
    asm("loc_4AC7CA: mov 0x87C(%ebp),%al;");
    asm("loc_4AC7D0: test %al,%al;");
    asm("loc_4AC7D2: mov 0x870(%ebp),%edx;");
    asm("loc_4AC7D8: je loc_4AC7E8;");
    asm("loc_4AC7DA: mov 0x864(%ebp),%eax;");
    asm("loc_4AC7E0: mov 0x860(%ebp),%ecx;");
    asm("loc_4AC7E6: jmp loc_4AC7F4;");
    asm("loc_4AC7E8: mov 0x858(%ebp),%eax;");
    asm("loc_4AC7EE: mov 0x854(%ebp),%ecx;");
    asm("loc_4AC7F4: push %eax;");
    asm("loc_4AC7F5: push %ecx;");
    asm("loc_4AC7F6: push $0;");
    asm("loc_4AC7F8: push $0;");
    asm("loc_4AC7FA: push %edx;");
    asm("loc_4AC7FB: call _sub_578220;");
    asm("loc_4AC800: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4AC806: movb $1,0x848(%ebp);");
    asm("loc_4AC80D: mov _data_679BB0,%eax;");
    asm("loc_4AC812: mov %eax,0x348(%ecx);");
    asm("loc_4AC818: mov 0x7A8(%ebp),%edx;");
    asm("loc_4AC81E: movb $0,0x37C(%edx);");
    asm("loc_4AC825: mov 0x7A8(%ebp),%eax;");
    asm("loc_4AC82B: mov 0x388(%eax),%cl;");
    asm("loc_4AC831: or $4,%cl;");
    asm("loc_4AC834: add $0x14,%esp;");
    asm("loc_4AC837: mov %cl,0x388(%eax);");
    asm("loc_4AC83D: push $_data_5D4CBC;");
    asm("loc_4AC842: mov %ebp,%ecx;");
    asm("loc_4AC844: call _sub_4AF230;");
    asm("loc_4AC849: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4AC84F: mov (%ecx),%eax;");
    asm("loc_4AC851: push $0;");
    asm("loc_4AC853: push $0;");
    asm("loc_4AC855: push $0x3B;");
    asm("loc_4AC857: calll *0xA8(%eax);");
    asm("loc_4AC85D: push %eax;");
    asm("loc_4AC85E: mov %ebp,%ecx;");
    asm("loc_4AC860: call _sub_4AF900;");
    asm("loc_4AC865: push %ebp;");
    asm("loc_4AC866: movb $0,0x84C(%ebp);");
    asm("loc_4AC86D: call _sub_59D960;");
    asm("loc_4AC872: mov 0x4E8(%ebp),%eax;");
    asm("loc_4AC878: mov 0x6C(%eax),%dl;");
    asm("loc_4AC87B: mov $0xFC,%bl;");
    asm("loc_4AC87D: and %bl,%dl;");
    asm("loc_4AC87F: mov %dl,0x6C(%eax);");
    asm("loc_4AC882: mov 0x4EC(%ebp),%eax;");
    asm("loc_4AC888: and %bl,0x6C(%eax);");
    asm("loc_4AC88B: mov 0x4F0(%ebp),%eax;");
    asm("loc_4AC891: and %bl,0x6C(%eax);");
    asm("loc_4AC894: mov 0x4FC(%ebp),%eax;");
    asm("loc_4AC89A: and %bl,0x6C(%eax);");
    asm("loc_4AC89D: mov 0x500(%ebp),%eax;");
    asm("loc_4AC8A3: and %bl,0x6C(%eax);");
    asm("loc_4AC8A6: mov 0x4F4(%ebp),%eax;");
    asm("loc_4AC8AC: and %bl,0x6C(%eax);");
    asm("loc_4AC8AF: mov 0x4F8(%ebp),%eax;");
    asm("loc_4AC8B5: and %bl,0x6C(%eax);");
    asm("loc_4AC8B8: mov 0x4E4(%ebp),%eax;");
    asm("loc_4AC8BE: mov 0x6C(%eax),%cl;");
    asm("loc_4AC8C1: and %bl,%cl;");
    asm("loc_4AC8C3: add $4,%esp;");
    asm("loc_4AC8C6: mov %cl,0x6C(%eax);");
    asm("loc_4AC8C9: push $0;");
    asm("loc_4AC8CB: mov %ebp,%ecx;");
    asm("loc_4AC8CD: call _sub_4ABDF0;");
    asm("loc_4AC8D2: lea 0x484(%ebp),%eax;");
    asm("loc_4AC8D8: mov $0xD,%edx;");
    asm("loc_4AC8DD: lea (%ecx),%ecx;");
    asm("loc_4AC8E0: mov -0x34(%eax),%ecx;");
    asm("loc_4AC8E3: orb $3,0x6C(%ecx);");
    asm("loc_4AC8E7: mov (%eax),%ecx;");
    asm("loc_4AC8E9: orb $3,0x6C(%ecx);");
    asm("loc_4AC8ED: mov -0x6C(%eax),%ecx;");
    asm("loc_4AC8F0: mov 0x6C(%ecx),%bl;");
    asm("loc_4AC8F3: or $3,%bl;");
    asm("loc_4AC8F6: add $4,%eax;");
    asm("loc_4AC8F9: dec %edx;");
    asm("loc_4AC8FA: mov %bl,0x6C(%ecx);");
    asm("loc_4AC8FD: jne loc_4AC8E0;");
    asm("loc_4AC8FF: jmp loc_4AC9A7;");
    asm("loc_4AC904: cmp 0x4F8(%ebp),%ecx;");
    asm("loc_4AC90A: jne loc_4AD525;");
    asm("loc_4AC910: push %ebp;");
    asm("loc_4AC911: movb $0,0x84C(%ebp);");
    asm("loc_4AC918: call _sub_59D960;");
    asm("loc_4AC91D: mov 0x4E8(%ebp),%eax;");
    asm("loc_4AC923: mov 0x6C(%eax),%dl;");
    asm("loc_4AC926: mov $0xFC,%bl;");
    asm("loc_4AC928: and %bl,%dl;");
    asm("loc_4AC92A: mov %dl,0x6C(%eax);");
    asm("loc_4AC92D: mov 0x4EC(%ebp),%eax;");
    asm("loc_4AC933: and %bl,0x6C(%eax);");
    asm("loc_4AC936: mov 0x4F0(%ebp),%eax;");
    asm("loc_4AC93C: and %bl,0x6C(%eax);");
    asm("loc_4AC93F: mov 0x4FC(%ebp),%eax;");
    asm("loc_4AC945: and %bl,0x6C(%eax);");
    asm("loc_4AC948: mov 0x500(%ebp),%eax;");
    asm("loc_4AC94E: and %bl,0x6C(%eax);");
    asm("loc_4AC951: mov 0x4F4(%ebp),%eax;");
    asm("loc_4AC957: and %bl,0x6C(%eax);");
    asm("loc_4AC95A: mov 0x4F8(%ebp),%eax;");
    asm("loc_4AC960: and %bl,0x6C(%eax);");
    asm("loc_4AC963: mov 0x4E4(%ebp),%eax;");
    asm("loc_4AC969: mov 0x6C(%eax),%cl;");
    asm("loc_4AC96C: and %bl,%cl;");
    asm("loc_4AC96E: add $4,%esp;");
    asm("loc_4AC971: mov %cl,0x6C(%eax);");
    asm("loc_4AC974: push $0;");
    asm("loc_4AC976: mov %ebp,%ecx;");
    asm("loc_4AC978: call _sub_4ABDF0;");
    asm("loc_4AC97D: lea 0x484(%ebp),%eax;");
    asm("loc_4AC983: mov $0xD,%edx;");
    asm("loc_4AC988: mov -0x34(%eax),%ecx;");
    asm("loc_4AC98B: orb $3,0x6C(%ecx);");
    asm("loc_4AC98F: mov (%eax),%ecx;");
    asm("loc_4AC991: orb $3,0x6C(%ecx);");
    asm("loc_4AC995: mov -0x6C(%eax),%ecx;");
    asm("loc_4AC998: mov 0x6C(%ecx),%bl;");
    asm("loc_4AC99B: or $3,%bl;");
    asm("loc_4AC99E: add $4,%eax;");
    asm("loc_4AC9A1: dec %edx;");
    asm("loc_4AC9A2: mov %bl,0x6C(%ecx);");
    asm("loc_4AC9A5: jne loc_4AC988;");
    asm("loc_4AC9A7: mov 0x450(%ebp),%ebp;");
    asm("loc_4AC9AD: orb $3,0x6C(%ebp);");
    asm("loc_4AC9B1: mov $1,%eax;");
    asm("loc_4AC9B6: jmp loc_4AD527;");
    asm("loc_4AC9BB: cmp $0x26,%edi;");
    asm("loc_4AC9BE: je loc_4ACBB8;");
    asm("loc_4AC9C4: cmp $0x29,%edi;");
    asm("loc_4AC9C7: je loc_4ACB2C;");
    asm("loc_4AC9CD: cmp $0x3E,%edi;");
    asm("loc_4AC9D0: jne loc_4AD525;");
    asm("loc_4AC9D6: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AC9DC: cmp $3,%eax;");
    asm("loc_4AC9DF: ja loc_4AD525;");
    asm("loc_4AC9E5: jmpl *_jmp_4AD558(,%eax,4);");
    asm("loc_4AC9EC: cmp 0x4B8(%ebp),%ecx;");
    asm("loc_4AC9F2: jne loc_4AD525;");
    asm("loc_4AC9F8: mov 0x15C(%esp),%ecx;");
    asm("loc_4AC9FF: push %ecx;");
    asm("loc_4ACA00: mov %ebp,%ecx;");
    asm("loc_4ACA02: call _sub_4AF900;");
    asm("loc_4ACA07: jmp loc_4AD525;");
    asm("loc_4ACA0C: xor %ebx,%ebx;");
    asm("loc_4ACA0E: xor %esi,%esi;");
    asm("loc_4ACA10: lea 0x654(%ebp),%edi;");
    asm("loc_4ACA16: mov 0x158(%esp),%edx;");
    asm("loc_4ACA1D: cmp (%edi),%edx;");
    asm("loc_4ACA1F: jne loc_4ACA3B;");
    asm("loc_4ACA21: mov 0x508(%ebp),%ecx;");
    asm("loc_4ACA27: mov 0x15C(%esp),%eax;");
    asm("loc_4ACA2E: mov (%ecx,%esi),%edx;");
    asm("loc_4ACA31: push %ebx;");
    asm("loc_4ACA32: push %eax;");
    asm("loc_4ACA33: push %edx;");
    asm("loc_4ACA34: mov %ebp,%ecx;");
    asm("loc_4ACA36: call _sub_4B1450;");
    asm("loc_4ACA3B: add $0x18,%esi;");
    asm("loc_4ACA3E: inc %ebx;");
    asm("loc_4ACA3F: add $4,%edi;");
    asm("loc_4ACA42: cmp $0x150,%esi;");
    asm("loc_4ACA48: jl loc_4ACA16;");
    asm("loc_4ACA4A: mov 0x158(%esp),%eax;");
    asm("loc_4ACA51: cmp 0x564(%ebp),%eax;");
    asm("loc_4ACA57: jne loc_4AD525;");
    asm("loc_4ACA5D: or $0xFFFFFFFF,%edx;");
    asm("loc_4ACA60: xor %ecx,%ecx;");
    asm("loc_4ACA62: xor %eax,%eax;");
    asm("loc_4ACA64: cmp $0xFFFFFFFF,%edx;");
    asm("loc_4ACA67: jne loc_4ACA85;");
    asm("loc_4ACA69: mov 0x508(%ebp),%esi;");
    asm("loc_4ACA6F: cmpl $0x536,(%eax,%esi);");
    asm("loc_4ACA76: jne loc_4ACA7A;");
    asm("loc_4ACA78: mov %ecx,%edx;");
    asm("loc_4ACA7A: add $0x18,%eax;");
    asm("loc_4ACA7D: inc %ecx;");
    asm("loc_4ACA7E: cmp $0x150,%eax;");
    asm("loc_4ACA83: jl loc_4ACA64;");
    asm("loc_4ACA85: mov 0x15C(%esp),%ecx;");
    asm("loc_4ACA8C: push %edx;");
    asm("loc_4ACA8D: push %ecx;");
    asm("loc_4ACA8E: push $0x536;");
    asm("loc_4ACA93: mov %ebp,%ecx;");
    asm("loc_4ACA95: call _sub_4B1450;");
    asm("loc_4ACA9A: jmp loc_4AD525;");
    asm("loc_4ACA9F: xor %ebx,%ebx;");
    asm("loc_4ACAA1: xor %esi,%esi;");
    asm("loc_4ACAA3: lea 0x654(%ebp),%edi;");
    asm("loc_4ACAA9: lea (%esp),%esp;");
    asm("loc_4ACAB0: mov 0x158(%esp),%edx;");
    asm("loc_4ACAB7: cmp (%edi),%edx;");
    asm("loc_4ACAB9: jne loc_4ACAD5;");
    asm("loc_4ACABB: mov 0x528(%ebp),%ecx;");
    asm("loc_4ACAC1: mov 0x15C(%esp),%eax;");
    asm("loc_4ACAC8: mov (%ecx,%esi),%edx;");
    asm("loc_4ACACB: push %ebx;");
    asm("loc_4ACACC: push %eax;");
    asm("loc_4ACACD: push %edx;");
    asm("loc_4ACACE: mov %ebp,%ecx;");
    asm("loc_4ACAD0: call _sub_4B1450;");
    asm("loc_4ACAD5: add $0x18,%esi;");
    asm("loc_4ACAD8: inc %ebx;");
    asm("loc_4ACAD9: add $4,%edi;");
    asm("loc_4ACADC: cmp $0x150,%esi;");
    asm("loc_4ACAE2: jl loc_4ACAB0;");
    asm("loc_4ACAE4: jmp loc_4AD525;");
    asm("loc_4ACAE9: xor %ebx,%ebx;");
    asm("loc_4ACAEB: xor %esi,%esi;");
    asm("loc_4ACAED: lea 0x654(%ebp),%edi;");
    asm("loc_4ACAF3: mov 0x158(%esp),%eax;");
    asm("loc_4ACAFA: cmp (%edi),%eax;");
    asm("loc_4ACAFC: jne loc_4ACB18;");
    asm("loc_4ACAFE: mov 0x15C(%esp),%ecx;");
    asm("loc_4ACB05: mov 0x548(%ebp),%edx;");
    asm("loc_4ACB0B: mov (%edx,%esi),%eax;");
    asm("loc_4ACB0E: push %ebx;");
    asm("loc_4ACB0F: push %ecx;");
    asm("loc_4ACB10: push %eax;");
    asm("loc_4ACB11: mov %ebp,%ecx;");
    asm("loc_4ACB13: call _sub_4B1450;");
    asm("loc_4ACB18: add $0x18,%esi;");
    asm("loc_4ACB1B: inc %ebx;");
    asm("loc_4ACB1C: add $4,%edi;");
    asm("loc_4ACB1F: cmp $0x150,%esi;");
    asm("loc_4ACB25: jl loc_4ACAF3;");
    asm("loc_4ACB27: jmp loc_4AD525;");
    asm("loc_4ACB2C: cmpl $3,0x7F4(%ebp);");
    asm("loc_4ACB33: jne loc_4AD525;");
    asm("loc_4ACB39: xor %esi,%esi;");
    asm("loc_4ACB3B: lea 0x654(%ebp),%ebx;");
    asm("loc_4ACB41: cmp (%ebx),%ecx;");
    asm("loc_4ACB43: jne loc_4ACBA5;");
    asm("loc_4ACB45: mov 0x528(%ebp),%edx;");
    asm("loc_4ACB4B: cmpl $0x581,(%esi,%edx);");
    asm("loc_4ACB52: jne loc_4ACB65;");
    asm("loc_4ACB54: push $0x1E;");
    asm("loc_4ACB56: call _sub_5646E0;");
    asm("loc_4ACB5B: mov 0x15C(%esp),%ecx;");
    asm("loc_4ACB62: add $4,%esp;");
    asm("loc_4ACB65: mov 0x528(%ebp),%eax;");
    asm("loc_4ACB6B: cmpl $0x538,(%esi,%eax);");
    asm("loc_4ACB72: jne loc_4ACB85;");
    asm("loc_4ACB74: push $0x1F;");
    asm("loc_4ACB76: call _sub_5646E0;");
    asm("loc_4ACB7B: mov 0x15C(%esp),%ecx;");
    asm("loc_4ACB82: add $4,%esp;");
    asm("loc_4ACB85: mov 0x528(%ebp),%edx;");
    asm("loc_4ACB8B: cmpl $0x539,(%esi,%edx);");
    asm("loc_4ACB92: jne loc_4ACBA5;");
    asm("loc_4ACB94: push $0x20;");
    asm("loc_4ACB96: call _sub_5646E0;");
    asm("loc_4ACB9B: mov 0x15C(%esp),%ecx;");
    asm("loc_4ACBA2: add $4,%esp;");
    asm("loc_4ACBA5: add $0x18,%esi;");
    asm("loc_4ACBA8: add $4,%ebx;");
    asm("loc_4ACBAB: cmp $0x150,%esi;");
    asm("loc_4ACBB1: jl loc_4ACB41;");
    asm("loc_4ACBB3: jmp loc_4AD525;");
    asm("loc_4ACBB8: mov 0x7F4(%ebp),%eax;");
    asm("loc_4ACBBE: cmp $4,%eax;");
    asm("loc_4ACBC1: ja loc_4AD2A1;");
    asm("loc_4ACBC7: jmpl *_jmp_4AD568(,%eax,4);");
    asm("loc_4ACBCE: xor %esi,%esi;");
    asm("loc_4ACBD0: lea 0x4C4(%ebp),%ebx;");
    asm("loc_4ACBD6: cmp (%ebx),%ecx;");
    asm("loc_4ACBD8: jne loc_4ACBE9;");
    asm("loc_4ACBDA: push %esi;");
    asm("loc_4ACBDB: mov %ebp,%ecx;");
    asm("loc_4ACBDD: call _sub_4AE260;");
    asm("loc_4ACBE2: mov 0x158(%esp),%ecx;");
    asm("loc_4ACBE9: inc %esi;");
    asm("loc_4ACBEA: add $4,%ebx;");
    asm("loc_4ACBED: cmp $3,%esi;");
    asm("loc_4ACBF0: jl loc_4ACBD6;");
    asm("loc_4ACBF2: call _sub_575D70;");
    asm("loc_4ACBF7: mov %eax,%ebx;");
    asm("loc_4ACBF9: call _sub_575D60;");
    asm("loc_4ACBFE: mov 0x158(%esp),%edi;");
    asm("loc_4ACC05: mov %eax,%esi;");
    asm("loc_4ACC07: cmp 0x7B0(%ebp),%edi;");
    asm("loc_4ACC0D: jne loc_4ACC86;");
    asm("loc_4ACC0F: push %esi;");
    asm("loc_4ACC10: call _sub_576F40;");
    asm("loc_4ACC15: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4ACC1B: movb $1,0x848(%ebp);");
    asm("loc_4ACC22: mov _data_679BB0,%eax;");
    asm("loc_4ACC27: mov %eax,0x348(%ecx);");
    asm("loc_4ACC2D: mov 0x7A8(%ebp),%edx;");
    asm("loc_4ACC33: movb $0,0x37C(%edx);");
    asm("loc_4ACC3A: mov 0x7A8(%ebp),%eax;");
    asm("loc_4ACC40: mov 0x388(%eax),%cl;");
    asm("loc_4ACC46: add $4,%esp;");
    asm("loc_4ACC49: or $4,%cl;");
    asm("loc_4ACC4C: mov %cl,0x388(%eax);");
    asm("loc_4ACC52: push $_data_5D4CBC;");
    asm("loc_4ACC57: mov %ebp,%ecx;");
    asm("loc_4ACC59: call _sub_4AF230;");
    asm("loc_4ACC5E: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4ACC64: mov (%ecx),%eax;");
    asm("loc_4ACC66: push $0;");
    asm("loc_4ACC68: push $0;");
    asm("loc_4ACC6A: push $0x3B;");
    asm("loc_4ACC6C: calll *0xA8(%eax);");
    asm("loc_4ACC72: push %eax;");
    asm("loc_4ACC73: mov %ebp,%ecx;");
    asm("loc_4ACC75: call _sub_4AF900;");
    asm("loc_4ACC7A: mov 0x158(%esp),%ecx;");
    asm("loc_4ACC81: jmp loc_4AD2A1;");
    asm("loc_4ACC86: cmp 0x7A8(%ebp),%edi;");
    asm("loc_4ACC8C: jne loc_4ACCDE;");
    asm("loc_4ACC8E: push %ebx;");
    asm("loc_4ACC8F: call _sub_576F40;");
    asm("loc_4ACC94: add $4,%esp;");
    asm("loc_4ACC97: cmp $1,%eax;");
    asm("loc_4ACC9A: jae loc_4ACCA5;");
    asm("loc_4ACC9C: push %esi;");
    asm("loc_4ACC9D: call _sub_576F40;");
    asm("loc_4ACCA2: add $4,%esp;");
    asm("loc_4ACCA5: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4ACCAB: movb $0,0x848(%ebp);");
    asm("loc_4ACCB2: mov _data_679B94,%eax;");
    asm("loc_4ACCB7: mov %eax,0x348(%ecx);");
    asm("loc_4ACCBD: mov 0x7A8(%ebp),%edx;");
    asm("loc_4ACCC3: movb $1,0x37C(%edx);");
    asm("loc_4ACCCA: mov 0x7A8(%ebp),%eax;");
    asm("loc_4ACCD0: mov 0x388(%eax),%cl;");
    asm("loc_4ACCD6: and $0xFB,%cl;");
    asm("loc_4ACCD9: jmp loc_4ACC4C;");
    asm("loc_4ACCDE: xor %esi,%esi;");
    asm("loc_4ACCE0: lea 0x484(%ebp),%ebx;");
    asm("loc_4ACCE6: cmp -0x34(%ebx),%edi;");
    asm("loc_4ACCE9: jne loc_4ACD03;");
    asm("loc_4ACCEB: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4ACCF1: mov (%ecx),%edx;");
    asm("loc_4ACCF3: push $0;");
    asm("loc_4ACCF5: push $0;");
    asm("loc_4ACCF7: push $0x3B;");
    asm("loc_4ACCF9: calll *0xA8(%edx);");
    asm("loc_4ACCFF: push $0;");
    asm("loc_4ACD01: jmp loc_4ACD1D;");
    asm("loc_4ACD03: cmp (%ebx),%edi;");
    asm("loc_4ACD05: jne loc_4ACD27;");
    asm("loc_4ACD07: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4ACD0D: mov (%ecx),%eax;");
    asm("loc_4ACD0F: push $0;");
    asm("loc_4ACD11: push $0;");
    asm("loc_4ACD13: push $0x3B;");
    asm("loc_4ACD15: calll *0xA8(%eax);");
    asm("loc_4ACD1B: push $1;");
    asm("loc_4ACD1D: add %esi,%eax;");
    asm("loc_4ACD1F: mov %ebp,%ecx;");
    asm("loc_4ACD21: push %eax;");
    asm("loc_4ACD22: call _sub_4AFB80;");
    asm("loc_4ACD27: inc %esi;");
    asm("loc_4ACD28: add $4,%ebx;");
    asm("loc_4ACD2B: cmp $0xD,%esi;");
    asm("loc_4ACD2E: jl loc_4ACCE6;");
    asm("loc_4ACD30: mov 0x158(%esp),%ecx;");
    asm("loc_4ACD37: jmp loc_4AD2A1;");
    asm("loc_4ACD3C: cmp 0x7A8(%ebp),%ecx;");
    asm("loc_4ACD42: jne loc_4ACD8B;");
    asm("loc_4ACD44: push $1;");
    asm("loc_4ACD46: mov %ebp,%ecx;");
    asm("loc_4ACD48: call _sub_4B06A0;");
    asm("loc_4ACD4D: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4ACD53: movb $0,0x848(%ebp);");
    asm("loc_4ACD5A: mov _data_679B94,%eax;");
    asm("loc_4ACD5F: mov %eax,0x348(%ecx);");
    asm("loc_4ACD65: mov 0x7A8(%ebp),%edx;");
    asm("loc_4ACD6B: movb $1,0x37C(%edx);");
    asm("loc_4ACD72: mov 0x7A8(%ebp),%eax;");
    asm("loc_4ACD78: andb $0xFB,0x388(%eax);");
    asm("loc_4ACD7F: mov 0x158(%esp),%ecx;");
    asm("loc_4ACD86: jmp loc_4AD2A1;");
    asm("loc_4ACD8B: cmp 0x7B0(%ebp),%ecx;");
    asm("loc_4ACD91: jne loc_4ACF77;");
    asm("loc_4ACD97: mov %ebx,0x10(%esp);");
    asm("loc_4ACD9B: nop;");
    asm("loc_4ACD9C: lea (%esp),%esp;");
    asm("loc_4ACDA0: mov 0x508(%ebp),%eax;");
    asm("loc_4ACDA6: test %eax,%eax;");
    asm("loc_4ACDA8: je loc_4ACE35;");
    asm("loc_4ACDAE: mov 0x50C(%ebp),%ecx;");
    asm("loc_4ACDB4: sub %eax,%ecx;");
    asm("loc_4ACDB6: mov $0x2AAAAAAB,%eax;");
    asm("loc_4ACDBB: imul %ecx;");
    asm("loc_4ACDBD: sar $2,%edx;");
    asm("loc_4ACDC0: mov %edx,%eax;");
    asm("loc_4ACDC2: shr $0x1F,%eax;");
    asm("loc_4ACDC5: add %eax,%edx;");
    asm("loc_4ACDC7: cmp %edx,%ebx;");
    asm("loc_4ACDC9: jae loc_4ACE35;");
    asm("loc_4ACDCB: mov 0x10(%esp),%ecx;");
    asm("loc_4ACDCF: mov 0x508(%ebp),%esi;");
    asm("loc_4ACDD5: add %ecx,%esi;");
    asm("loc_4ACDD7: mov $6,%ecx;");
    asm("loc_4ACDDC: lea 0x1C(%esp),%edi;");
    asm("loc_4ACDE0: rep movsl (%esi),(%edi);");
    asm("loc_4ACDE2: mov 0x32(%esp),%al;");
    asm("loc_4ACDE6: test %al,%al;");
    asm("loc_4ACDE8: jne loc_4ACE24;");
    asm("loc_4ACDEA: mov 0x24(%esp),%eax;");
    asm("loc_4ACDEE: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4ACDF1: je loc_4ACE24;");
    asm("loc_4ACDF3: mov 0x30(%esp),%cl;");
    asm("loc_4ACDF7: test %cl,%cl;");
    asm("loc_4ACDF9: push $0xFFFFFFFF;");
    asm("loc_4ACDFB: push %eax;");
    asm("loc_4ACDFC: je loc_4ACE18;");
    asm("loc_4ACDFE: mov 0x24(%esp),%ecx;");
    asm("loc_4ACE02: push %ecx;");
    asm("loc_4ACE03: mov %ebp,%ecx;");
    asm("loc_4ACE05: call _sub_4B1450;");
    asm("loc_4ACE0A: mov 0x10(%esp),%eax;");
    asm("loc_4ACE0E: inc %ebx;");
    asm("loc_4ACE0F: add $0x18,%eax;");
    asm("loc_4ACE12: mov %eax,0x10(%esp);");
    asm("loc_4ACE16: jmp loc_4ACDA0;");
    asm("loc_4ACE18: mov 0x24(%esp),%edx;");
    asm("loc_4ACE1C: push %edx;");
    asm("loc_4ACE1D: mov %ebp,%ecx;");
    asm("loc_4ACE1F: call _sub_4B1D20;");
    asm("loc_4ACE24: mov 0x10(%esp),%eax;");
    asm("loc_4ACE28: inc %ebx;");
    asm("loc_4ACE29: add $0x18,%eax;");
    asm("loc_4ACE2C: mov %eax,0x10(%esp);");
    asm("loc_4ACE30: jmp loc_4ACDA0;");
    asm("loc_4ACE35: push $_data_5D4A14;");
    asm("loc_4ACE3A: call _sub_5B36B0;");
    asm("loc_4ACE3F: flds 0x14(%eax);");
    asm("loc_4ACE42: fmuls _data_5CA230;");
    asm("loc_4ACE48: add $4,%esp;");
    asm("loc_4ACE4B: push $0xFFFFFFFF;");
    asm("loc_4ACE4D: call _sub_5B7EC0;");
    asm("loc_4ACE52: push %eax;");
    asm("loc_4ACE53: push $0x767;");
    asm("loc_4ACE58: mov %ebp,%ecx;");
    asm("loc_4ACE5A: call _sub_4B1450;");
    asm("loc_4ACE5F: mov _import_5C6DE0,%eax;");
    asm("loc_4ACE64: lea 0x14(%esp),%edx;");
    asm("loc_4ACE68: push %edx;");
    asm("loc_4ACE69: xor %edi,%edi;");
    asm("loc_4ACE6B: mov %edi,0x18(%esp);");
    asm("loc_4ACE6F: mov (%eax),%eax;");
    asm("loc_4ACE71: mov (%eax),%ecx;");
    asm("loc_4ACE73: push $4;");
    asm("loc_4ACE75: push %eax;");
    asm("loc_4ACE76: calll *0x20(%ecx);");
    asm("loc_4ACE79: mov _import_5C6DE0,%eax;");
    asm("loc_4ACE7E: lea 0x18(%esp),%edx;");
    asm("loc_4ACE82: push %edx;");
    asm("loc_4ACE83: mov %edi,0x1C(%esp);");
    asm("loc_4ACE87: mov (%eax),%eax;");
    asm("loc_4ACE89: mov (%eax),%ecx;");
    asm("loc_4ACE8B: push $3;");
    asm("loc_4ACE8D: push %eax;");
    asm("loc_4ACE8E: calll *0x20(%ecx);");
    asm("loc_4ACE91: mov 0x18(%esp),%edx;");
    asm("loc_4ACE95: shr $0x14,%edx;");
    asm("loc_4ACE98: push $0xFFFFFFFF;");
    asm("loc_4ACE9A: mov %ebp,%ecx;");
    asm("loc_4ACE9C: mov %edx,0x1C(%esp);");
    asm("loc_4ACEA0: call _sub_4B0920;");
    asm("loc_4ACEA5: cmp %edi,0x14(%esp);");
    asm("loc_4ACEA9: je loc_4ACEB2;");
    asm("loc_4ACEAB: mov $0x400,%edx;");
    asm("loc_4ACEB0: jmp loc_4ACEC4;");
    asm("loc_4ACEB2: mov 0x18(%esp),%eax;");
    asm("loc_4ACEB6: mov $0x10,%esi;");
    asm("loc_4ACEBB: cmp %esi,%eax;");
    asm("loc_4ACEBD: mov $0x320,%edx;");
    asm("loc_4ACEC2: jbe loc_4ACEC9;");
    asm("loc_4ACEC4: mov $0x20,%esi;");
    asm("loc_4ACEC9: mov %edx,0x330(%ebp);");
    asm("loc_4ACECF: xor %eax,%eax;");
    asm("loc_4ACED1: lea 0x8D4(%ebp),%ecx;");
    asm("loc_4ACED7: mov 0x944(%eax,%ebp),%bl;");
    asm("loc_4ACEDE: test %bl,%bl;");
    asm("loc_4ACEE0: je loc_4ACEEB;");
    asm("loc_4ACEE2: cmp %edx,-8(%ecx);");
    asm("loc_4ACEE5: jne loc_4ACEEB;");
    asm("loc_4ACEE7: cmp %esi,(%ecx);");
    asm("loc_4ACEE9: je loc_4ACEF6;");
    asm("loc_4ACEEB: inc %eax;");
    asm("loc_4ACEEC: add $0xC,%ecx;");
    asm("loc_4ACEEF: cmp $0xA,%eax;");
    asm("loc_4ACEF2: jl loc_4ACED7;");
    asm("loc_4ACEF4: jmp loc_4ACF02;");
    asm("loc_4ACEF6: mov 0x954(%ebp,%eax,4),%ebx;");
    asm("loc_4ACEFD: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_4ACF00: jne loc_4ACF04;");
    asm("loc_4ACF02: xor %ebx,%ebx;");
    asm("loc_4ACF04: or $0xFFFFFFFF,%esi;");
    asm("loc_4ACF07: xor %ecx,%ecx;");
    asm("loc_4ACF09: xor %eax,%eax;");
    asm("loc_4ACF0B: nop;");
    asm("loc_4ACF0C: lea (%esp),%esp;");
    asm("loc_4ACF10: cmp $0xFFFFFFFF,%esi;");
    asm("loc_4ACF13: jne loc_4ACF31;");
    asm("loc_4ACF15: mov 0x508(%ebp),%edx;");
    asm("loc_4ACF1B: cmpl $0x536,(%eax,%edx);");
    asm("loc_4ACF22: jne loc_4ACF26;");
    asm("loc_4ACF24: mov %ecx,%esi;");
    asm("loc_4ACF26: add $0x18,%eax;");
    asm("loc_4ACF29: inc %ecx;");
    asm("loc_4ACF2A: cmp $0x150,%eax;");
    asm("loc_4ACF2F: jl loc_4ACF10;");
    asm("loc_4ACF31: cmp %edi,%esi;");
    asm("loc_4ACF33: jl loc_4AD21E;");
    asm("loc_4ACF39: mov 0x950(%ebp),%edx;");
    asm("loc_4ACF3F: mov 0x564(%ebp),%ecx;");
    asm("loc_4ACF45: mov (%ecx),%eax;");
    asm("loc_4ACF47: dec %edx;");
    asm("loc_4ACF48: push %edx;");
    asm("loc_4ACF49: push %edi;");
    asm("loc_4ACF4A: push $0x37;");
    asm("loc_4ACF4C: calll *0xA8(%eax);");
    asm("loc_4ACF52: mov 0x564(%ebp),%ecx;");
    asm("loc_4ACF58: mov (%ecx),%eax;");
    asm("loc_4ACF5A: push %edi;");
    asm("loc_4ACF5B: push %ebx;");
    asm("loc_4ACF5C: push $0x38;");
    asm("loc_4ACF5E: calll *0xA8(%eax);");
    asm("loc_4ACF64: push %esi;");
    asm("loc_4ACF65: push %ebx;");
    asm("loc_4ACF66: push $0x536;");
    asm("loc_4ACF6B: mov %ebp,%ecx;");
    asm("loc_4ACF6D: call _sub_4B1450;");
    asm("loc_4ACF72: jmp loc_4AD21E;");
    asm("loc_4ACF77: xor %ebx,%ebx;");
    asm("loc_4ACF79: xor %esi,%esi;");
    asm("loc_4ACF7B: lea 0x734(%ebp),%edi;");
    asm("loc_4ACF81: mov 0x158(%esp),%eax;");
    asm("loc_4ACF88: cmp -0x150(%edi),%eax;");
    asm("loc_4ACF8E: jne loc_4ACFB5;");
    asm("loc_4ACF90: mov %eax,%ecx;");
    asm("loc_4ACF92: mov (%ecx),%edx;");
    asm("loc_4ACF94: push $0;");
    asm("loc_4ACF96: lea 0x18(%esp),%eax;");
    asm("loc_4ACF9A: push %eax;");
    asm("loc_4ACF9B: push $0x2F;");
    asm("loc_4ACF9D: calll *0xA8(%edx);");
    asm("loc_4ACFA3: mov 0x14(%esp),%ecx;");
    asm("loc_4ACFA7: mov 0x508(%ebp),%edx;");
    asm("loc_4ACFAD: mov (%edx,%esi),%eax;");
    asm("loc_4ACFB0: push %ebx;");
    asm("loc_4ACFB1: push %ecx;");
    asm("loc_4ACFB2: push %eax;");
    asm("loc_4ACFB3: jmp loc_4ACFC6;");
    asm("loc_4ACFB5: cmp (%edi),%eax;");
    asm("loc_4ACFB7: jne loc_4ACFCD;");
    asm("loc_4ACFB9: mov 0x508(%ebp),%ecx;");
    asm("loc_4ACFBF: mov (%ecx,%esi),%edx;");
    asm("loc_4ACFC2: push %ebx;");
    asm("loc_4ACFC3: push $0;");
    asm("loc_4ACFC5: push %edx;");
    asm("loc_4ACFC6: mov %ebp,%ecx;");
    asm("loc_4ACFC8: call _sub_4B1D20;");
    asm("loc_4ACFCD: add $0x18,%esi;");
    asm("loc_4ACFD0: inc %ebx;");
    asm("loc_4ACFD1: add $4,%edi;");
    asm("loc_4ACFD4: cmp $0x150,%esi;");
    asm("loc_4ACFDA: jl loc_4ACF81;");
    asm("loc_4ACFDC: mov 0x158(%esp),%ecx;");
    asm("loc_4ACFE3: jmp loc_4AD2A1;");
    asm("loc_4ACFE8: cmp 0x7A8(%ebp),%ecx;");
    asm("loc_4ACFEE: je loc_4AD0FF;");
    asm("loc_4ACFF4: cmp 0x7B0(%ebp),%ecx;");
    asm("loc_4ACFFA: jne loc_4AD09D;");
    asm("loc_4AD000: mov %ebx,0x10(%esp);");
    asm("loc_4AD004: mov 0x528(%ebp),%eax;");
    asm("loc_4AD00A: test %eax,%eax;");
    asm("loc_4AD00C: je loc_4AD1EB;");
    asm("loc_4AD012: mov 0x52C(%ebp),%ecx;");
    asm("loc_4AD018: sub %eax,%ecx;");
    asm("loc_4AD01A: mov $0x2AAAAAAB,%eax;");
    asm("loc_4AD01F: imul %ecx;");
    asm("loc_4AD021: sar $2,%edx;");
    asm("loc_4AD024: mov %edx,%eax;");
    asm("loc_4AD026: shr $0x1F,%eax;");
    asm("loc_4AD029: add %eax,%edx;");
    asm("loc_4AD02B: cmp %edx,%ebx;");
    asm("loc_4AD02D: jae loc_4AD1EB;");
    asm("loc_4AD033: mov 0x10(%esp),%ecx;");
    asm("loc_4AD037: mov 0x528(%ebp),%esi;");
    asm("loc_4AD03D: add %ecx,%esi;");
    asm("loc_4AD03F: mov $6,%ecx;");
    asm("loc_4AD044: lea 0x1C(%esp),%edi;");
    asm("loc_4AD048: rep movsl (%esi),(%edi);");
    asm("loc_4AD04A: mov 0x32(%esp),%al;");
    asm("loc_4AD04E: test %al,%al;");
    asm("loc_4AD050: jne loc_4AD08C;");
    asm("loc_4AD052: mov 0x24(%esp),%eax;");
    asm("loc_4AD056: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4AD059: je loc_4AD08C;");
    asm("loc_4AD05B: mov 0x30(%esp),%cl;");
    asm("loc_4AD05F: test %cl,%cl;");
    asm("loc_4AD061: push $0xFFFFFFFF;");
    asm("loc_4AD063: push %eax;");
    asm("loc_4AD064: je loc_4AD080;");
    asm("loc_4AD066: mov 0x24(%esp),%ecx;");
    asm("loc_4AD06A: push %ecx;");
    asm("loc_4AD06B: mov %ebp,%ecx;");
    asm("loc_4AD06D: call _sub_4B1450;");
    asm("loc_4AD072: mov 0x10(%esp),%eax;");
    asm("loc_4AD076: inc %ebx;");
    asm("loc_4AD077: add $0x18,%eax;");
    asm("loc_4AD07A: mov %eax,0x10(%esp);");
    asm("loc_4AD07E: jmp loc_4AD004;");
    asm("loc_4AD080: mov 0x24(%esp),%edx;");
    asm("loc_4AD084: push %edx;");
    asm("loc_4AD085: mov %ebp,%ecx;");
    asm("loc_4AD087: call _sub_4B1D20;");
    asm("loc_4AD08C: mov 0x10(%esp),%eax;");
    asm("loc_4AD090: inc %ebx;");
    asm("loc_4AD091: add $0x18,%eax;");
    asm("loc_4AD094: mov %eax,0x10(%esp);");
    asm("loc_4AD098: jmp loc_4AD004;");
    asm("loc_4AD09D: xor %ebx,%ebx;");
    asm("loc_4AD09F: xor %esi,%esi;");
    asm("loc_4AD0A1: lea 0x5E4(%ebp),%edi;");
    asm("loc_4AD0A7: mov 0x158(%esp),%eax;");
    asm("loc_4AD0AE: cmp (%edi),%eax;");
    asm("loc_4AD0B0: jne loc_4AD0DC;");
    asm("loc_4AD0B2: mov %eax,%ecx;");
    asm("loc_4AD0B4: mov (%ecx),%edx;");
    asm("loc_4AD0B6: push $0;");
    asm("loc_4AD0B8: lea 0x18(%esp),%eax;");
    asm("loc_4AD0BC: push %eax;");
    asm("loc_4AD0BD: push $0x2F;");
    asm("loc_4AD0BF: calll *0xA8(%edx);");
    asm("loc_4AD0C5: mov 0x14(%esp),%ecx;");
    asm("loc_4AD0C9: mov 0x528(%ebp),%edx;");
    asm("loc_4AD0CF: mov (%edx,%esi),%eax;");
    asm("loc_4AD0D2: push %ebx;");
    asm("loc_4AD0D3: push %ecx;");
    asm("loc_4AD0D4: push %eax;");
    asm("loc_4AD0D5: mov %ebp,%ecx;");
    asm("loc_4AD0D7: call _sub_4B1D20;");
    asm("loc_4AD0DC: add $0x18,%esi;");
    asm("loc_4AD0DF: inc %ebx;");
    asm("loc_4AD0E0: add $4,%edi;");
    asm("loc_4AD0E3: cmp $0x150,%esi;");
    asm("loc_4AD0E9: jl loc_4AD0A7;");
    asm("loc_4AD0EB: mov 0x158(%esp),%ecx;");
    asm("loc_4AD0F2: jmp loc_4AD2A1;");
    asm("loc_4AD0F7: cmp 0x7A8(%ebp),%ecx;");
    asm("loc_4AD0FD: jne loc_4AD146;");
    asm("loc_4AD0FF: push $1;");
    asm("loc_4AD101: mov %ebp,%ecx;");
    asm("loc_4AD103: call _sub_4B06A0;");
    asm("loc_4AD108: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4AD10E: movb $0,0x848(%ebp);");
    asm("loc_4AD115: mov _data_679B94,%eax;");
    asm("loc_4AD11A: mov %eax,0x348(%ecx);");
    asm("loc_4AD120: mov 0x7A8(%ebp),%edx;");
    asm("loc_4AD126: movb $1,0x37C(%edx);");
    asm("loc_4AD12D: mov 0x7A8(%ebp),%eax;");
    asm("loc_4AD133: andb $0xFB,0x388(%eax);");
    asm("loc_4AD13A: mov 0x158(%esp),%ecx;");
    asm("loc_4AD141: jmp loc_4AD2A1;");
    asm("loc_4AD146: cmp 0x7B0(%ebp),%ecx;");
    asm("loc_4AD14C: jne loc_4AD235;");
    asm("loc_4AD152: mov %ebx,0x10(%esp);");
    asm("loc_4AD156: mov 0x548(%ebp),%eax;");
    asm("loc_4AD15C: test %eax,%eax;");
    asm("loc_4AD15E: je loc_4AD1EB;");
    asm("loc_4AD164: mov 0x54C(%ebp),%ecx;");
    asm("loc_4AD16A: sub %eax,%ecx;");
    asm("loc_4AD16C: mov $0x2AAAAAAB,%eax;");
    asm("loc_4AD171: imul %ecx;");
    asm("loc_4AD173: sar $2,%edx;");
    asm("loc_4AD176: mov %edx,%eax;");
    asm("loc_4AD178: shr $0x1F,%eax;");
    asm("loc_4AD17B: add %eax,%edx;");
    asm("loc_4AD17D: cmp %edx,%ebx;");
    asm("loc_4AD17F: jae loc_4AD1EB;");
    asm("loc_4AD181: mov 0x10(%esp),%ecx;");
    asm("loc_4AD185: mov 0x548(%ebp),%esi;");
    asm("loc_4AD18B: add %ecx,%esi;");
    asm("loc_4AD18D: mov $6,%ecx;");
    asm("loc_4AD192: lea 0x1C(%esp),%edi;");
    asm("loc_4AD196: rep movsl (%esi),(%edi);");
    asm("loc_4AD198: mov 0x32(%esp),%al;");
    asm("loc_4AD19C: test %al,%al;");
    asm("loc_4AD19E: jne loc_4AD1DA;");
    asm("loc_4AD1A0: mov 0x24(%esp),%eax;");
    asm("loc_4AD1A4: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4AD1A7: je loc_4AD1DA;");
    asm("loc_4AD1A9: mov 0x30(%esp),%cl;");
    asm("loc_4AD1AD: test %cl,%cl;");
    asm("loc_4AD1AF: push $0xFFFFFFFF;");
    asm("loc_4AD1B1: push %eax;");
    asm("loc_4AD1B2: je loc_4AD1CE;");
    asm("loc_4AD1B4: mov 0x24(%esp),%ecx;");
    asm("loc_4AD1B8: push %ecx;");
    asm("loc_4AD1B9: mov %ebp,%ecx;");
    asm("loc_4AD1BB: call _sub_4B1450;");
    asm("loc_4AD1C0: mov 0x10(%esp),%eax;");
    asm("loc_4AD1C4: inc %ebx;");
    asm("loc_4AD1C5: add $0x18,%eax;");
    asm("loc_4AD1C8: mov %eax,0x10(%esp);");
    asm("loc_4AD1CC: jmp loc_4AD156;");
    asm("loc_4AD1CE: mov 0x24(%esp),%edx;");
    asm("loc_4AD1D2: push %edx;");
    asm("loc_4AD1D3: mov %ebp,%ecx;");
    asm("loc_4AD1D5: call _sub_4B1D20;");
    asm("loc_4AD1DA: mov 0x10(%esp),%eax;");
    asm("loc_4AD1DE: inc %ebx;");
    asm("loc_4AD1DF: add $0x18,%eax;");
    asm("loc_4AD1E2: mov %eax,0x10(%esp);");
    asm("loc_4AD1E6: jmp loc_4AD156;");
    asm("loc_4AD1EB: push $_data_5D4A14;");
    asm("loc_4AD1F0: call _sub_5B36B0;");
    asm("loc_4AD1F5: flds 0x14(%eax);");
    asm("loc_4AD1F8: fmuls _data_5CA230;");
    asm("loc_4AD1FE: add $4,%esp;");
    asm("loc_4AD201: push $0xFFFFFFFF;");
    asm("loc_4AD203: call _sub_5B7EC0;");
    asm("loc_4AD208: push %eax;");
    asm("loc_4AD209: push $0x767;");
    asm("loc_4AD20E: mov %ebp,%ecx;");
    asm("loc_4AD210: call _sub_4B1450;");
    asm("loc_4AD215: push $0xFFFFFFFF;");
    asm("loc_4AD217: mov %ebp,%ecx;");
    asm("loc_4AD219: call _sub_4B0920;");
    asm("loc_4AD21E: push $0xBF800000;");
    asm("loc_4AD223: push $0xFFFFFFFF;");
    asm("loc_4AD225: mov %ebp,%ecx;");
    asm("loc_4AD227: call _sub_4B1F30;");
    asm("loc_4AD22C: mov 0x158(%esp),%ecx;");
    asm("loc_4AD233: jmp loc_4AD2A1;");
    asm("loc_4AD235: xor %ebx,%ebx;");
    asm("loc_4AD237: xor %esi,%esi;");
    asm("loc_4AD239: lea 0x5E4(%ebp),%edi;");
    asm("loc_4AD23F: nop;");
    asm("loc_4AD240: mov 0x158(%esp),%eax;");
    asm("loc_4AD247: cmp (%edi),%eax;");
    asm("loc_4AD249: jne loc_4AD275;");
    asm("loc_4AD24B: mov %eax,%ecx;");
    asm("loc_4AD24D: mov (%ecx),%edx;");
    asm("loc_4AD24F: push $0;");
    asm("loc_4AD251: lea 0x18(%esp),%eax;");
    asm("loc_4AD255: push %eax;");
    asm("loc_4AD256: push $0x2F;");
    asm("loc_4AD258: calll *0xA8(%edx);");
    asm("loc_4AD25E: mov 0x14(%esp),%ecx;");
    asm("loc_4AD262: mov 0x548(%ebp),%edx;");
    asm("loc_4AD268: mov (%edx,%esi),%eax;");
    asm("loc_4AD26B: push %ebx;");
    asm("loc_4AD26C: push %ecx;");
    asm("loc_4AD26D: push %eax;");
    asm("loc_4AD26E: mov %ebp,%ecx;");
    asm("loc_4AD270: call _sub_4B1D20;");
    asm("loc_4AD275: add $0x18,%esi;");
    asm("loc_4AD278: inc %ebx;");
    asm("loc_4AD279: add $4,%edi;");
    asm("loc_4AD27C: cmp $0x150,%esi;");
    asm("loc_4AD282: jl loc_4AD240;");
    asm("loc_4AD284: mov 0x158(%esp),%ecx;");
    asm("loc_4AD28B: jmp loc_4AD2A1;");
    asm("loc_4AD28D: cmp 0x7B0(%ebp),%ecx;");
    asm("loc_4AD293: jne loc_4AD2A1;");
    asm("loc_4AD295: mov %ebx,0x8A8(%ebp);");
    asm("loc_4AD29B: mov %ebx,0x8AC(%ebp);");
    asm("loc_4AD2A1: cmp 0x34C(%ebp),%ecx;");
    asm("loc_4AD2A7: mov $0xFC,%bl;");
    asm("loc_4AD2A9: jne loc_4AD2D3;");
    asm("loc_4AD2AB: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AD2B1: test %eax,%eax;");
    asm("loc_4AD2B3: je loc_4AD438;");
    asm("loc_4AD2B9: cmp $4,%eax;");
    asm("loc_4AD2BC: movl $0,0x7F8(%ebp);");
    asm("loc_4AD2C6: ja loc_4AD427;");
    asm("loc_4AD2CC: jmpl *_jmp_4AD57C(,%eax,4);");
    asm("loc_4AD2D3: cmp 0x350(%ebp),%ecx;");
    asm("loc_4AD2D9: jne loc_4AD304;");
    asm("loc_4AD2DB: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AD2E1: cmp $1,%eax;");
    asm("loc_4AD2E4: je loc_4AD438;");
    asm("loc_4AD2EA: cmp $4,%eax;");
    asm("loc_4AD2ED: movl $1,0x7F8(%ebp);");
    asm("loc_4AD2F7: ja loc_4AD427;");
    asm("loc_4AD2FD: jmpl *_jmp_4AD590(,%eax,4);");
    asm("loc_4AD304: cmp 0x358(%ebp),%ecx;");
    asm("loc_4AD30A: jne loc_4AD335;");
    asm("loc_4AD30C: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AD312: cmp $3,%eax;");
    asm("loc_4AD315: je loc_4AD438;");
    asm("loc_4AD31B: cmp $4,%eax;");
    asm("loc_4AD31E: movl $3,0x7F8(%ebp);");
    asm("loc_4AD328: ja loc_4AD427;");
    asm("loc_4AD32E: jmpl *_jmp_4AD5A4(,%eax,4);");
    asm("loc_4AD335: cmp 0x354(%ebp),%ecx;");
    asm("loc_4AD33B: jne loc_4AD366;");
    asm("loc_4AD33D: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AD343: cmp $2,%eax;");
    asm("loc_4AD346: je loc_4AD438;");
    asm("loc_4AD34C: cmp $4,%eax;");
    asm("loc_4AD34F: movl $2,0x7F8(%ebp);");
    asm("loc_4AD359: ja loc_4AD427;");
    asm("loc_4AD35F: jmpl *_jmp_4AD5B8(,%eax,4);");
    asm("loc_4AD366: cmp 0x35C(%ebp),%ecx;");
    asm("loc_4AD36C: jne loc_4AD438;");
    asm("loc_4AD372: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AD378: cmp $4,%eax;");
    asm("loc_4AD37B: je loc_4AD438;");
    asm("loc_4AD381: movl $4,0x7F8(%ebp);");
    asm("loc_4AD38B: ja loc_4AD427;");
    asm("loc_4AD391: jmpl *_jmp_4AD5CC(,%eax,4);");
    asm("loc_4AD398: mov %ebp,%ecx;");
    asm("loc_4AD39A: call _sub_4AEAB0;");
    asm("loc_4AD39F: jmp loc_4AD427;");
    asm("loc_4AD3A4: mov %ebp,%ecx;");
    asm("loc_4AD3A6: call _sub_4AEBB0;");
    asm("loc_4AD3AB: jmp loc_4AD427;");
    asm("loc_4AD3AD: mov %ebp,%ecx;");
    asm("loc_4AD3AF: call _sub_4AECA0;");
    asm("loc_4AD3B4: jmp loc_4AD427;");
    asm("loc_4AD3B6: mov %ebp,%ecx;");
    asm("loc_4AD3B8: call _sub_4AED70;");
    asm("loc_4AD3BD: jmp loc_4AD427;");
    asm("loc_4AD3BF: mov 0x7F0(%ebp),%eax;");
    asm("loc_4AD3C5: and %bl,0x6C(%eax);");
    asm("loc_4AD3C8: mov 0x374(%ebp),%ecx;");
    asm("loc_4AD3CE: mov _data_679BB0,%edx;");
    asm("loc_4AD3D4: push $0x40;");
    asm("loc_4AD3D6: lea 0x48(%esp),%eax;");
    asm("loc_4AD3DA: push %eax;");
    asm("loc_4AD3DB: mov %edx,0x348(%ecx);");
    asm("loc_4AD3E1: mov _data_67ECA8,%ecx;");
    asm("loc_4AD3E7: push $0x5E4;");
    asm("loc_4AD3EC: push %ecx;");
    asm("loc_4AD3ED: call _sub_4347E0;");
    asm("loc_4AD3F2: mov 0x7B4(%ebp),%ecx;");
    asm("loc_4AD3F8: mov (%ecx),%edx;");
    asm("loc_4AD3FA: add $0x10,%esp;");
    asm("loc_4AD3FD: push $0;");
    asm("loc_4AD3FF: lea 0x48(%esp),%eax;");
    asm("loc_4AD403: push %eax;");
    asm("loc_4AD404: push $0x1D;");
    asm("loc_4AD406: calll *0xA8(%edx);");
    asm("loc_4AD40C: mov 0x7B0(%ebp),%eax;");
    asm("loc_4AD412: and %bl,0x6C(%eax);");
    asm("loc_4AD415: mov 0x7B4(%ebp),%eax;");
    asm("loc_4AD41B: and %bl,0x6C(%eax);");
    asm("loc_4AD41E: mov 0x344(%ebp),%eax;");
    asm("loc_4AD424: and %bl,0x6C(%eax);");
    asm("loc_4AD427: mov 0x848(%ebp),%al;");
    asm("loc_4AD42D: test %al,%al;");
    asm("loc_4AD42F: jne loc_4AD438;");
    asm("loc_4AD431: mov %ebp,%ecx;");
    asm("loc_4AD433: call _sub_4AEE30;");
    asm("loc_4AD438: mov 0x158(%esp),%eax;");
    asm("loc_4AD43F: cmp 0x348(%ebp),%eax;");
    asm("loc_4AD445: je loc_4AD453;");
    asm("loc_4AD447: cmp 0x360(%ebp),%eax;");
    asm("loc_4AD44D: jne loc_4AD525;");
    asm("loc_4AD453: mov 0x7F4(%ebp),%eax;");
    asm("loc_4AD459: cmp $5,%eax;");
    asm("loc_4AD45C: je loc_4AD525;");
    asm("loc_4AD462: cmp $4,%eax;");
    asm("loc_4AD465: movl $5,0x7F8(%ebp);");
    asm("loc_4AD46F: ja loc_4AD514;");
    asm("loc_4AD475: jmpl *_jmp_4AD5E0(,%eax,4);");
    asm("loc_4AD47C: mov %ebp,%ecx;");
    asm("loc_4AD47E: call _sub_4AEAB0;");
    asm("loc_4AD483: jmp loc_4AD514;");
    asm("loc_4AD488: mov %ebp,%ecx;");
    asm("loc_4AD48A: call _sub_4AEBB0;");
    asm("loc_4AD48F: jmp loc_4AD514;");
    asm("loc_4AD494: mov %ebp,%ecx;");
    asm("loc_4AD496: call _sub_4AECA0;");
    asm("loc_4AD49B: jmp loc_4AD514;");
    asm("loc_4AD49D: mov %ebp,%ecx;");
    asm("loc_4AD49F: call _sub_4AED70;");
    asm("loc_4AD4A4: jmp loc_4AD514;");
    asm("loc_4AD4A6: mov 0x7F0(%ebp),%eax;");
    asm("loc_4AD4AC: and %bl,0x6C(%eax);");
    asm("loc_4AD4AF: mov 0x374(%ebp),%ecx;");
    asm("loc_4AD4B5: mov _data_679BB0,%edx;");
    asm("loc_4AD4BB: push $0x40;");
    asm("loc_4AD4BD: lea 0xC8(%esp),%eax;");
    asm("loc_4AD4C4: push %eax;");
    asm("loc_4AD4C5: mov %edx,0x348(%ecx);");
    asm("loc_4AD4CB: mov _data_67ECA8,%ecx;");
    asm("loc_4AD4D1: push $0x5E4;");
    asm("loc_4AD4D6: push %ecx;");
    asm("loc_4AD4D7: call _sub_4347E0;");
    asm("loc_4AD4DC: mov 0x7B4(%ebp),%ecx;");
    asm("loc_4AD4E2: mov (%ecx),%edx;");
    asm("loc_4AD4E4: add $0x10,%esp;");
    asm("loc_4AD4E7: push $0;");
    asm("loc_4AD4E9: lea 0xC8(%esp),%eax;");
    asm("loc_4AD4F0: push %eax;");
    asm("loc_4AD4F1: push $0x1D;");
    asm("loc_4AD4F3: calll *0xA8(%edx);");
    asm("loc_4AD4F9: mov 0x7B0(%ebp),%eax;");
    asm("loc_4AD4FF: and %bl,0x6C(%eax);");
    asm("loc_4AD502: mov 0x7B4(%ebp),%eax;");
    asm("loc_4AD508: and %bl,0x6C(%eax);");
    asm("loc_4AD50B: mov 0x344(%ebp),%eax;");
    asm("loc_4AD511: and %bl,0x6C(%eax);");
    asm("loc_4AD514: mov 0x848(%ebp),%al;");
    asm("loc_4AD51A: test %al,%al;");
    asm("loc_4AD51C: jne loc_4AD525;");
    asm("loc_4AD51E: mov %ebp,%ecx;");
    asm("loc_4AD520: call _sub_4AEE30;");
    asm("loc_4AD525: xor %eax,%eax;");
    asm("loc_4AD527: mov 0x144(%esp),%ecx;");
    asm("loc_4AD52E: pop %edi;");
    asm("loc_4AD52F: pop %esi;");
    asm("loc_4AD530: pop %ebp;");
    asm("loc_4AD531: pop %ebx;");
    asm("loc_4AD532: mov %ecx,%fs:0;");
    asm("loc_4AD539: add $0x140,%esp;");
    asm("loc_4AD53F: ret $0xC;");
    asm("int3;"); // unreachable
    asm("_jmp_4AD544: .long loc_4AC2CF;");
    asm(".long loc_4AC2DB;");
    asm(".long loc_4AC2E7;");
    asm(".long loc_4AC2F0;");
    asm(".long loc_4AC2F9;");
    asm("_jmp_4AD558: .long loc_4AC9EC;");
    asm(".long loc_4ACA0C;");
    asm(".long loc_4ACAE9;");
    asm(".long loc_4ACA9F;");
    asm("_jmp_4AD568: .long loc_4ACBCE;");
    asm(".long loc_4ACD3C;");
    asm(".long loc_4AD0F7;");
    asm(".long loc_4ACFE8;");
    asm(".long loc_4AD28D;");
    asm("_jmp_4AD57C: .long loc_4AD398;");
    asm(".long loc_4AD3A4;");
    asm(".long loc_4AD3AD;");
    asm(".long loc_4AD3B6;");
    asm(".long loc_4AD3BF;");
    asm("_jmp_4AD590: .long loc_4AD398;");
    asm(".long loc_4AD3A4;");
    asm(".long loc_4AD3AD;");
    asm(".long loc_4AD3B6;");
    asm(".long loc_4AD3BF;");
    asm("_jmp_4AD5A4: .long loc_4AD398;");
    asm(".long loc_4AD3A4;");
    asm(".long loc_4AD3AD;");
    asm(".long loc_4AD3B6;");
    asm(".long loc_4AD3BF;");
    asm("_jmp_4AD5B8: .long loc_4AD398;");
    asm(".long loc_4AD3A4;");
    asm(".long loc_4AD3AD;");
    asm(".long loc_4AD3B6;");
    asm(".long loc_4AD3BF;");
    asm("_jmp_4AD5CC: .long loc_4AD398;");
    asm(".long loc_4AD3A4;");
    asm(".long loc_4AD3AD;");
    asm(".long loc_4AD3B6;");
    asm(".long loc_4AD3BF;");
    asm("_jmp_4AD5E0: .long loc_4AD47C;");
    asm(".long loc_4AD488;");
    asm(".long loc_4AD494;");
    asm(".long loc_4AD49D;");
    asm(".long loc_4AD4A6;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4AC0A0);
_naked _weak void _sub_4AD600() // _sub_4AD600
{
    __DEBUG_ASM(4AD600);
    // chunk 0x4AD600 _sub_4AD600
    asm("loc_4AD600: sub $0x2BC,%esp;");
    asm("loc_4AD606: push %ebx;");
    asm("loc_4AD607: push %ebp;");
    asm("loc_4AD608: push %esi;");
    asm("loc_4AD609: push %edi;");
    asm("loc_4AD60A: mov %ecx,%ebp;");
    asm("loc_4AD60C: xor %eax,%eax;");
    asm("loc_4AD60E: mov %edi,%edi;");
    asm("loc_4AD610: mov 0x2D0(%esp),%ecx;");
    asm("loc_4AD617: cmp _data_611E28(%eax),%ecx;");
    asm("loc_4AD61D: je loc_4AD6CE;");
    asm("loc_4AD623: add $4,%eax;");
    asm("loc_4AD626: cmp $0x20,%eax;");
    asm("loc_4AD629: jb loc_4AD610;");
    asm("loc_4AD62B: movl $0xFFFFFFFF,0x880(%ebp);");
    asm("loc_4AD635: movb $0,0x87D(%ebp);");
    asm("loc_4AD63C: xor %ebx,%ebx;");
    asm("loc_4AD63E: mov %edi,%edi;");
    asm("loc_4AD640: push %ebx;");
    asm("loc_4AD641: lea 0x14(%esp),%edx;");
    asm("loc_4AD645: push %edx;");
    asm("loc_4AD646: mov %ebp,%ecx;");
    asm("loc_4AD648: call _sub_4ADE00;");
    asm("loc_4AD64D: mov 0x14(%esp),%eax;");
    asm("loc_4AD651: xor %edi,%edi;");
    asm("loc_4AD653: lea 8(%eax),%esi;");
    asm("loc_4AD656: test %eax,%eax;");
    asm("loc_4AD658: je loc_4AD722;");
    asm("loc_4AD65E: mov 0x18(%esp),%ecx;");
    asm("loc_4AD662: sub %eax,%ecx;");
    asm("loc_4AD664: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AD669: imul %ecx;");
    asm("loc_4AD66B: sar $3,%edx;");
    asm("loc_4AD66E: mov %edx,%eax;");
    asm("loc_4AD670: shr $0x1F,%eax;");
    asm("loc_4AD673: add %eax,%edx;");
    asm("loc_4AD675: cmp %edx,%edi;");
    asm("loc_4AD677: jae loc_4AD71E;");
    asm("loc_4AD67D: cmpl $0xFFFFFFFF,0x880(%ebp);");
    asm("loc_4AD684: jne loc_4AD711;");
    asm("loc_4AD68A: mov 0x2D0(%esp),%eax;");
    asm("loc_4AD691: cmp -4(%esi),%eax;");
    asm("loc_4AD694: jne loc_4AD6DD;");
    asm("loc_4AD696: mov (%esi),%ecx;");
    asm("loc_4AD698: cmp 0x2D4(%esp),%ecx;");
    asm("loc_4AD69F: jne loc_4AD6DD;");
    asm("loc_4AD6A1: mov 0x14(%esp),%eax;");
    asm("loc_4AD6A5: mov %edi,0x880(%ebp);");
    asm("loc_4AD6AB: mov %ebx,0x884(%ebp);");
    asm("loc_4AD6B1: mov 0x18(%esi),%edx;");
    asm("loc_4AD6B4: inc %edi;");
    asm("loc_4AD6B5: mov %edx,0x888(%ebp);");
    asm("loc_4AD6BB: movb $0,0x87D(%ebp);");
    asm("loc_4AD6C2: movb $1,0x87E(%ebp);");
    asm("loc_4AD6C9: add $0x2C,%esi;");
    asm("loc_4AD6CC: jmp loc_4AD656;");
    asm("loc_4AD6CE: pop %edi;");
    asm("loc_4AD6CF: pop %esi;");
    asm("loc_4AD6D0: pop %ebp;");
    asm("loc_4AD6D1: xor %al,%al;");
    asm("loc_4AD6D3: pop %ebx;");
    asm("loc_4AD6D4: add $0x2BC,%esp;");
    asm("loc_4AD6DA: ret $8;");
    asm("loc_4AD6DD: cmp 8(%esi),%eax;");
    asm("loc_4AD6E0: jne loc_4AD711;");
    asm("loc_4AD6E2: mov 0x2D4(%esp),%eax;");
    asm("loc_4AD6E9: cmp %eax,0xC(%esi);");
    asm("loc_4AD6EC: jne loc_4AD711;");
    asm("loc_4AD6EE: mov %edi,0x880(%ebp);");
    asm("loc_4AD6F4: mov %ebx,0x884(%ebp);");
    asm("loc_4AD6FA: mov 0x18(%esi),%ecx;");
    asm("loc_4AD6FD: mov %ecx,0x888(%ebp);");
    asm("loc_4AD703: movb $1,0x87D(%ebp);");
    asm("loc_4AD70A: movb $1,0x87E(%ebp);");
    asm("loc_4AD711: mov 0x14(%esp),%eax;");
    asm("loc_4AD715: inc %edi;");
    asm("loc_4AD716: add $0x2C,%esi;");
    asm("loc_4AD719: jmp loc_4AD656;");
    asm("loc_4AD71E: mov 0x14(%esp),%eax;");
    asm("loc_4AD722: push %eax;");
    asm("loc_4AD723: call _sub_5B7E1D;");
    asm("loc_4AD728: xor %eax,%eax;");
    asm("loc_4AD72A: add $4,%esp;");
    asm("loc_4AD72D: inc %ebx;");
    asm("loc_4AD72E: cmp $4,%ebx;");
    asm("loc_4AD731: mov %eax,0x14(%esp);");
    asm("loc_4AD735: mov %eax,0x18(%esp);");
    asm("loc_4AD739: mov %eax,0x1C(%esp);");
    asm("loc_4AD73D: jl loc_4AD640;");
    asm("loc_4AD743: mov 0x880(%ebp),%eax;");
    asm("loc_4AD749: test %eax,%eax;");
    asm("loc_4AD74B: jge loc_4AD8C4;");
    asm("loc_4AD751: mov 0x87C(%ebp),%al;");
    asm("loc_4AD757: test %al,%al;");
    asm("loc_4AD759: je loc_4AD782;");
    asm("loc_4AD75B: mov 0x864(%ebp),%edx;");
    asm("loc_4AD761: mov 0x860(%ebp),%eax;");
    asm("loc_4AD767: mov 0x2D4(%esp),%ecx;");
    asm("loc_4AD76E: push %edx;");
    asm("loc_4AD76F: mov 0x2D4(%esp),%edx;");
    asm("loc_4AD776: push %eax;");
    asm("loc_4AD777: mov 0x870(%ebp),%eax;");
    asm("loc_4AD77D: push %ecx;");
    asm("loc_4AD77E: push %edx;");
    asm("loc_4AD77F: push %eax;");
    asm("loc_4AD780: jmp loc_4AD7A7;");
    asm("loc_4AD782: mov 0x858(%ebp),%ecx;");
    asm("loc_4AD788: mov 0x854(%ebp),%edx;");
    asm("loc_4AD78E: mov 0x2D4(%esp),%eax;");
    asm("loc_4AD795: push %ecx;");
    asm("loc_4AD796: mov 0x2D4(%esp),%ecx;");
    asm("loc_4AD79D: push %edx;");
    asm("loc_4AD79E: mov 0x870(%ebp),%edx;");
    asm("loc_4AD7A4: push %eax;");
    asm("loc_4AD7A5: push %ecx;");
    asm("loc_4AD7A6: push %edx;");
    asm("loc_4AD7A7: call _sub_578220;");
    asm("loc_4AD7AC: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4AD7B2: movb $1,0x848(%ebp);");
    asm("loc_4AD7B9: mov _data_679BB0,%eax;");
    asm("loc_4AD7BE: mov %eax,0x348(%ecx);");
    asm("loc_4AD7C4: mov 0x7A8(%ebp),%edx;");
    asm("loc_4AD7CA: movb $0,0x37C(%edx);");
    asm("loc_4AD7D1: mov 0x7A8(%ebp),%eax;");
    asm("loc_4AD7D7: mov 0x388(%eax),%cl;");
    asm("loc_4AD7DD: or $4,%cl;");
    asm("loc_4AD7E0: add $0x14,%esp;");
    asm("loc_4AD7E3: mov %cl,0x388(%eax);");
    asm("loc_4AD7E9: push $_data_5D4CBC;");
    asm("loc_4AD7EE: mov %ebp,%ecx;");
    asm("loc_4AD7F0: call _sub_4AF230;");
    asm("loc_4AD7F5: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4AD7FB: mov (%ecx),%eax;");
    asm("loc_4AD7FD: push $0;");
    asm("loc_4AD7FF: push $0;");
    asm("loc_4AD801: push $0x3B;");
    asm("loc_4AD803: calll *0xA8(%eax);");
    asm("loc_4AD809: push %eax;");
    asm("loc_4AD80A: mov %ebp,%ecx;");
    asm("loc_4AD80C: call _sub_4AF900;");
    asm("loc_4AD811: push %ebp;");
    asm("loc_4AD812: movb $0,0x84C(%ebp);");
    asm("loc_4AD819: call _sub_59D960;");
    asm("loc_4AD81E: mov 0x4E8(%ebp),%ecx;");
    asm("loc_4AD824: mov 0x6C(%ecx),%bl;");
    asm("loc_4AD827: mov $0xFC,%al;");
    asm("loc_4AD829: and %al,%bl;");
    asm("loc_4AD82B: mov %bl,0x6C(%ecx);");
    asm("loc_4AD82E: mov 0x4EC(%ebp),%ecx;");
    asm("loc_4AD834: and %al,0x6C(%ecx);");
    asm("loc_4AD837: mov 0x4F0(%ebp),%ecx;");
    asm("loc_4AD83D: and %al,0x6C(%ecx);");
    asm("loc_4AD840: mov 0x4FC(%ebp),%ecx;");
    asm("loc_4AD846: and %al,0x6C(%ecx);");
    asm("loc_4AD849: mov 0x500(%ebp),%ecx;");
    asm("loc_4AD84F: and %al,0x6C(%ecx);");
    asm("loc_4AD852: mov 0x4F4(%ebp),%ecx;");
    asm("loc_4AD858: and %al,0x6C(%ecx);");
    asm("loc_4AD85B: mov 0x4F8(%ebp),%ecx;");
    asm("loc_4AD861: and %al,0x6C(%ecx);");
    asm("loc_4AD864: mov 0x4E4(%ebp),%ecx;");
    asm("loc_4AD86A: mov 0x6C(%ecx),%dl;");
    asm("loc_4AD86D: and %al,%dl;");
    asm("loc_4AD86F: add $4,%esp;");
    asm("loc_4AD872: mov %dl,0x6C(%ecx);");
    asm("loc_4AD875: push $0;");
    asm("loc_4AD877: mov %ebp,%ecx;");
    asm("loc_4AD879: call _sub_4ABDF0;");
    asm("loc_4AD87E: lea 0x484(%ebp),%eax;");
    asm("loc_4AD884: mov $0xD,%edx;");
    asm("loc_4AD889: mov $3,%bl;");
    asm("loc_4AD88B: nop;");
    asm("loc_4AD88C: lea (%esp),%esp;");
    asm("loc_4AD890: mov -0x34(%eax),%ecx;");
    asm("loc_4AD893: or %bl,0x6C(%ecx);");
    asm("loc_4AD896: mov (%eax),%ecx;");
    asm("loc_4AD898: or %bl,0x6C(%ecx);");
    asm("loc_4AD89B: mov -0x6C(%eax),%ecx;");
    asm("loc_4AD89E: or %bl,0x6C(%ecx);");
    asm("loc_4AD8A1: add $4,%eax;");
    asm("loc_4AD8A4: dec %edx;");
    asm("loc_4AD8A5: jne loc_4AD890;");
    asm("loc_4AD8A7: mov 0x450(%ebp),%ebp;");
    asm("loc_4AD8AD: mov 0x6C(%ebp),%al;");
    asm("loc_4AD8B0: pop %edi;");
    asm("loc_4AD8B1: or %bl,%al;");
    asm("loc_4AD8B3: pop %esi;");
    asm("loc_4AD8B4: mov %al,0x6C(%ebp);");
    asm("loc_4AD8B7: pop %ebp;");
    asm("loc_4AD8B8: mov $1,%al;");
    asm("loc_4AD8BA: pop %ebx;");
    asm("loc_4AD8BB: add $0x2BC,%esp;");
    asm("loc_4AD8C1: ret $8;");
    asm("loc_4AD8C4: lea 0x484(%ebp),%ecx;");
    asm("loc_4AD8CA: mov $0xD,%esi;");
    asm("loc_4AD8CF: mov $0xFC,%al;");
    asm("loc_4AD8D1: mov -0x34(%ecx),%edx;");
    asm("loc_4AD8D4: and %al,0x6C(%edx);");
    asm("loc_4AD8D7: mov (%ecx),%edx;");
    asm("loc_4AD8D9: and %al,0x6C(%edx);");
    asm("loc_4AD8DC: mov -0x6C(%ecx),%edx;");
    asm("loc_4AD8DF: mov 0x6C(%edx),%bl;");
    asm("loc_4AD8E2: and %al,%bl;");
    asm("loc_4AD8E4: add $4,%ecx;");
    asm("loc_4AD8E7: dec %esi;");
    asm("loc_4AD8E8: mov %bl,0x6C(%edx);");
    asm("loc_4AD8EB: jne loc_4AD8D1;");
    asm("loc_4AD8ED: mov 0x450(%ebp),%ecx;");
    asm("loc_4AD8F3: and %al,0x6C(%ecx);");
    asm("loc_4AD8F6: mov 0x884(%ebp),%ecx;");
    asm("loc_4AD8FC: mov 0x880(%ebp),%esi;");
    asm("loc_4AD902: push %ecx;");
    asm("loc_4AD903: lea 0x14(%esp),%edx;");
    asm("loc_4AD907: push %edx;");
    asm("loc_4AD908: mov %ebp,%ecx;");
    asm("loc_4AD90A: movw $0,0xD4(%esp);");
    asm("loc_4AD914: call _sub_4ADE00;");
    asm("loc_4AD919: imul $0x2C,%esi;");
    asm("loc_4AD91C: mov 4(%eax),%edi;");
    asm("loc_4AD91F: mov 0x14(%esp),%eax;");
    asm("loc_4AD923: add %edi,%esi;");
    asm("loc_4AD925: mov $0xB,%ecx;");
    asm("loc_4AD92A: lea 0x20(%esp),%edi;");
    asm("loc_4AD92E: push %eax;");
    asm("loc_4AD92F: rep movsl (%esi),(%edi);");
    asm("loc_4AD931: call _sub_5B7E1D;");
    asm("loc_4AD936: mov 0x87D(%ebp),%al;");
    asm("loc_4AD93C: add $4,%esp;");
    asm("loc_4AD93F: test %al,%al;");
    asm("loc_4AD941: push $0x100;");
    asm("loc_4AD946: je loc_4AD957;");
    asm("loc_4AD948: lea 0xD0(%esp),%ecx;");
    asm("loc_4AD94F: push %ecx;");
    asm("loc_4AD950: lea 0x34(%esp),%edx;");
    asm("loc_4AD954: push %edx;");
    asm("loc_4AD955: jmp loc_4AD964;");
    asm("loc_4AD957: lea 0xD0(%esp),%eax;");
    asm("loc_4AD95E: push %eax;");
    asm("loc_4AD95F: lea 0x28(%esp),%ecx;");
    asm("loc_4AD963: push %ecx;");
    asm("loc_4AD964: call _sub_577F50;");
    asm("loc_4AD969: mov 0x4E8(%ebp),%ecx;");
    asm("loc_4AD96F: add $0xC,%esp;");
    asm("loc_4AD972: lea 0xCC(%esp),%edx;");
    asm("loc_4AD979: push %edx;");
    asm("loc_4AD97A: call _sub_58A530;");
    asm("loc_4AD97F: mov _data_67ECA8,%ecx;");
    asm("loc_4AD985: push $0x40;");
    asm("loc_4AD987: lea 0x50(%esp),%eax;");
    asm("loc_4AD98B: push %eax;");
    asm("loc_4AD98C: push $0x5EB;");
    asm("loc_4AD991: push %ecx;");
    asm("loc_4AD992: call _sub_4347E0;");
    asm("loc_4AD997: mov 0x4EC(%ebp),%ecx;");
    asm("loc_4AD99D: mov (%ecx),%edx;");
    asm("loc_4AD99F: add $0x10,%esp;");
    asm("loc_4AD9A2: push $0;");
    asm("loc_4AD9A4: lea 0x50(%esp),%eax;");
    asm("loc_4AD9A8: push %eax;");
    asm("loc_4AD9A9: push $0x1D;");
    asm("loc_4AD9AB: calll *0xA8(%edx);");
    asm("loc_4AD9B1: mov 0x38(%esp),%edx;");
    asm("loc_4AD9B5: mov _data_67ECA8,%eax;");
    asm("loc_4AD9BA: push $0x40;");
    asm("loc_4AD9BC: lea 0x50(%esp),%ecx;");
    asm("loc_4AD9C0: push %ecx;");
    asm("loc_4AD9C1: push %edx;");
    asm("loc_4AD9C2: push %eax;");
    asm("loc_4AD9C3: call _sub_4347E0;");
    asm("loc_4AD9C8: mov 0x4F0(%ebp),%ecx;");
    asm("loc_4AD9CE: mov (%ecx),%edx;");
    asm("loc_4AD9D0: add $0x10,%esp;");
    asm("loc_4AD9D3: push $0;");
    asm("loc_4AD9D5: lea 0x50(%esp),%eax;");
    asm("loc_4AD9D9: push %eax;");
    asm("loc_4AD9DA: push $0x1D;");
    asm("loc_4AD9DC: calll *0xA8(%edx);");
    asm("loc_4AD9E2: mov _data_67ECA8,%edx;");
    asm("loc_4AD9E8: push $0x40;");
    asm("loc_4AD9EA: lea 0x50(%esp),%ecx;");
    asm("loc_4AD9EE: push %ecx;");
    asm("loc_4AD9EF: push $0x5E8;");
    asm("loc_4AD9F4: push %edx;");
    asm("loc_4AD9F5: call _sub_4347E0;");
    asm("loc_4AD9FA: mov 0x4FC(%ebp),%ecx;");
    asm("loc_4ADA00: mov (%ecx),%eax;");
    asm("loc_4ADA02: add $0x10,%esp;");
    asm("loc_4ADA05: push $0;");
    asm("loc_4ADA07: lea 0x50(%esp),%edx;");
    asm("loc_4ADA0B: push %edx;");
    asm("loc_4ADA0C: push $0x1D;");
    asm("loc_4ADA0E: calll *0xA8(%eax);");
    asm("loc_4ADA14: mov %ebp,%ecx;");
    asm("loc_4ADA16: call _sub_4ABFB0;");
    asm("loc_4ADA1B: pop %edi;");
    asm("loc_4ADA1C: pop %esi;");
    asm("loc_4ADA1D: pop %ebp;");
    asm("loc_4ADA1E: mov $1,%al;");
    asm("loc_4ADA20: pop %ebx;");
    asm("loc_4ADA21: add $0x2BC,%esp;");
    asm("loc_4ADA27: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4ADA30() // _sub_4ADA30
{
    __DEBUG_ASM(4ADA30);
    // chunk 0x4ADA30 _sub_4ADA30
    asm("loc_4ADA30: push $_data_5D5098;");
    asm("loc_4ADA35: calll *_import_5C6F74;");
    asm("loc_4ADA3B: xor %al,%al;");
    asm("loc_4ADA3D: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4ADA40() // _sub_4ADA40
{
    __DEBUG_ASM(4ADA40);
    // chunk 0x4ADA40 _sub_4ADA40
    asm("loc_4ADA40: sub $0x100,%esp;");
    asm("loc_4ADA46: push %esi;");
    asm("loc_4ADA47: push %edi;");
    asm("loc_4ADA48: mov 0x10C(%esp),%edi;");
    asm("loc_4ADA4F: mov (%edi),%eax;");
    asm("loc_4ADA51: push %eax;");
    asm("loc_4ADA52: mov %ecx,%esi;");
    asm("loc_4ADA54: lea 0xC(%esp),%ecx;");
    asm("loc_4ADA58: push $_data_5D50A4;");
    asm("loc_4ADA5D: push %ecx;");
    asm("loc_4ADA5E: calll *_import_5C71EC;");
    asm("loc_4ADA64: add $0xC,%esp;");
    asm("loc_4ADA67: lea 8(%esp),%edx;");
    asm("loc_4ADA6B: push %edx;");
    asm("loc_4ADA6C: calll *_import_5C6F74;");
    asm("loc_4ADA72: mov 0x84C(%esi),%al;");
    asm("loc_4ADA78: test %al,%al;");
    asm("loc_4ADA7A: je loc_4ADAB1;");
    asm("loc_4ADA7C: mov (%edi),%eax;");
    asm("loc_4ADA7E: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4ADA81: jne loc_4ADA90;");
    asm("loc_4ADA83: pop %edi;");
    asm("loc_4ADA84: mov $1,%al;");
    asm("loc_4ADA86: pop %esi;");
    asm("loc_4ADA87: add $0x100,%esp;");
    asm("loc_4ADA8D: ret $4;");
    asm("loc_4ADA90: cmpl $2,4(%edi);");
    asm("loc_4ADA94: jne loc_4ADAA4;");
    asm("loc_4ADA96: push $0;");
    asm("loc_4ADA98: push %eax;");
    asm("loc_4ADA99: mov %esi,%ecx;");
    asm("loc_4ADA9B: call _sub_4AD600;");
    asm("loc_4ADAA0: test %al,%al;");
    asm("loc_4ADAA2: je loc_4ADAB1;");
    asm("loc_4ADAA4: pop %edi;");
    asm("loc_4ADAA5: mov $1,%al;");
    asm("loc_4ADAA7: pop %esi;");
    asm("loc_4ADAA8: add $0x100,%esp;");
    asm("loc_4ADAAE: ret $4;");
    asm("loc_4ADAB1: pop %edi;");
    asm("loc_4ADAB2: xor %al,%al;");
    asm("loc_4ADAB4: pop %esi;");
    asm("loc_4ADAB5: add $0x100,%esp;");
    asm("loc_4ADABB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4ADAC0() // _sub_4ADAC0
{
    asm("jmp dgb_4ADAC0;"); // jumptable skip
    asm(".long _jmp_4ADD98;"); // jumptable address
    __DEBUG_ASM(4ADAC0);
    // chunk 0x4ADAC0 _sub_4ADAC0
    asm("loc_4ADAC0: sub $0x180,%esp;");
    asm("loc_4ADAC6: push %ebx;");
    asm("loc_4ADAC7: push %ebp;");
    asm("loc_4ADAC8: mov 0x18C(%esp),%ebp;");
    asm("loc_4ADACF: push %esi;");
    asm("loc_4ADAD0: push %ebp;");
    asm("loc_4ADAD1: lea 0x90(%esp),%eax;");
    asm("loc_4ADAD8: push $_data_5D50B4;");
    asm("loc_4ADADD: push %eax;");
    asm("loc_4ADADE: mov %ecx,%esi;");
    asm("loc_4ADAE0: calll *_import_5C71EC;");
    asm("loc_4ADAE6: add $0xC,%esp;");
    asm("loc_4ADAE9: lea 0x8C(%esp),%ecx;");
    asm("loc_4ADAF0: push %ecx;");
    asm("loc_4ADAF1: calll *_import_5C6F74;");
    asm("loc_4ADAF7: mov 0x84C(%esi),%al;");
    asm("loc_4ADAFD: test %al,%al;");
    asm("loc_4ADAFF: je loc_4ADC66;");
    asm("loc_4ADB05: mov 0x194(%esp),%edx;");
    asm("loc_4ADB0C: testb $2,(%edx);");
    asm("loc_4ADB0F: je loc_4ADB24;");
    asm("loc_4ADB11: call _sub_575DC0;");
    asm("loc_4ADB16: cmp $0x73,%ebp;");
    asm("loc_4ADB19: jne loc_4ADB32;");
    asm("loc_4ADB1B: cmp $0x10,%eax;");
    asm("loc_4ADB1E: jne loc_4ADBEE;");
    asm("loc_4ADB24: pop %esi;");
    asm("loc_4ADB25: pop %ebp;");
    asm("loc_4ADB26: xor %al,%al;");
    asm("loc_4ADB28: pop %ebx;");
    asm("loc_4ADB29: add $0x180,%esp;");
    asm("loc_4ADB2F: ret $8;");
    asm("loc_4ADB32: cmp $0x2A,%ebp;");
    asm("loc_4ADB35: je loc_4ADB24;");
    asm("loc_4ADB37: cmp $0x1B,%ebp;");
    asm("loc_4ADB3A: jne loc_4ADBEE;");
    asm("loc_4ADB40: push %esi;");
    asm("loc_4ADB41: movb $0,0x84C(%esi);");
    asm("loc_4ADB48: call _sub_59D960;");
    asm("loc_4ADB4D: mov 0x4E8(%esi),%eax;");
    asm("loc_4ADB53: mov 0x6C(%eax),%dl;");
    asm("loc_4ADB56: mov $0xFC,%bl;");
    asm("loc_4ADB58: and %bl,%dl;");
    asm("loc_4ADB5A: mov %dl,0x6C(%eax);");
    asm("loc_4ADB5D: mov 0x4EC(%esi),%eax;");
    asm("loc_4ADB63: and %bl,0x6C(%eax);");
    asm("loc_4ADB66: mov 0x4F0(%esi),%eax;");
    asm("loc_4ADB6C: and %bl,0x6C(%eax);");
    asm("loc_4ADB6F: mov 0x4FC(%esi),%eax;");
    asm("loc_4ADB75: and %bl,0x6C(%eax);");
    asm("loc_4ADB78: mov 0x500(%esi),%eax;");
    asm("loc_4ADB7E: and %bl,0x6C(%eax);");
    asm("loc_4ADB81: mov 0x4F4(%esi),%eax;");
    asm("loc_4ADB87: and %bl,0x6C(%eax);");
    asm("loc_4ADB8A: mov 0x4F8(%esi),%eax;");
    asm("loc_4ADB90: and %bl,0x6C(%eax);");
    asm("loc_4ADB93: mov 0x4E4(%esi),%eax;");
    asm("loc_4ADB99: mov 0x6C(%eax),%cl;");
    asm("loc_4ADB9C: and %bl,%cl;");
    asm("loc_4ADB9E: add $4,%esp;");
    asm("loc_4ADBA1: mov %cl,0x6C(%eax);");
    asm("loc_4ADBA4: push $0;");
    asm("loc_4ADBA6: mov %esi,%ecx;");
    asm("loc_4ADBA8: call _sub_4ABDF0;");
    asm("loc_4ADBAD: lea 0x484(%esi),%eax;");
    asm("loc_4ADBB3: mov $0xD,%edx;");
    asm("loc_4ADBB8: mov $3,%bl;");
    asm("loc_4ADBBA: lea (%ebx),%ebx;");
    asm("loc_4ADBC0: mov -0x34(%eax),%ecx;");
    asm("loc_4ADBC3: or %bl,0x6C(%ecx);");
    asm("loc_4ADBC6: mov (%eax),%ecx;");
    asm("loc_4ADBC8: or %bl,0x6C(%ecx);");
    asm("loc_4ADBCB: mov -0x6C(%eax),%ecx;");
    asm("loc_4ADBCE: or %bl,0x6C(%ecx);");
    asm("loc_4ADBD1: add $4,%eax;");
    asm("loc_4ADBD4: dec %edx;");
    asm("loc_4ADBD5: jne loc_4ADBC0;");
    asm("loc_4ADBD7: mov 0x450(%esi),%esi;");
    asm("loc_4ADBDD: or %bl,0x6C(%esi);");
    asm("loc_4ADBE0: pop %esi;");
    asm("loc_4ADBE1: pop %ebp;");
    asm("loc_4ADBE2: mov $1,%al;");
    asm("loc_4ADBE4: pop %ebx;");
    asm("loc_4ADBE5: add $0x180,%esp;");
    asm("loc_4ADBEB: ret $8;");
    asm("loc_4ADBEE: mov _import_5C7280,%ebx;");
    asm("loc_4ADBF4: push %edi;");
    asm("loc_4ADBF5: push $0x10;");
    asm("loc_4ADBF7: xor %edi,%edi;");
    asm("loc_4ADBF9: call *%ebx;");
    asm("loc_4ADBFB: test %ah,%ah;");
    asm("loc_4ADBFD: jns loc_4ADC1C;");
    asm("loc_4ADBFF: mov $1,%edi;");
    asm("loc_4ADC04: push %edi;");
    asm("loc_4ADC05: push %ebp;");
    asm("loc_4ADC06: mov %esi,%ecx;");
    asm("loc_4ADC08: call _sub_4AD600;");
    asm("loc_4ADC0D: pop %edi;");
    asm("loc_4ADC0E: pop %esi;");
    asm("loc_4ADC0F: pop %ebp;");
    asm("loc_4ADC10: mov $1,%al;");
    asm("loc_4ADC12: pop %ebx;");
    asm("loc_4ADC13: add $0x180,%esp;");
    asm("loc_4ADC19: ret $8;");
    asm("loc_4ADC1C: push $0x11;");
    asm("loc_4ADC1E: call *%ebx;");
    asm("loc_4ADC20: test %ah,%ah;");
    asm("loc_4ADC22: jns loc_4ADC41;");
    asm("loc_4ADC24: mov $4,%edi;");
    asm("loc_4ADC29: push %edi;");
    asm("loc_4ADC2A: push %ebp;");
    asm("loc_4ADC2B: mov %esi,%ecx;");
    asm("loc_4ADC2D: call _sub_4AD600;");
    asm("loc_4ADC32: pop %edi;");
    asm("loc_4ADC33: pop %esi;");
    asm("loc_4ADC34: pop %ebp;");
    asm("loc_4ADC35: mov $1,%al;");
    asm("loc_4ADC37: pop %ebx;");
    asm("loc_4ADC38: add $0x180,%esp;");
    asm("loc_4ADC3E: ret $8;");
    asm("loc_4ADC41: push $0x12;");
    asm("loc_4ADC43: call *%ebx;");
    asm("loc_4ADC45: test %ah,%ah;");
    asm("loc_4ADC47: jns loc_4ADC4E;");
    asm("loc_4ADC49: mov $0x10,%edi;");
    asm("loc_4ADC4E: push %edi;");
    asm("loc_4ADC4F: push %ebp;");
    asm("loc_4ADC50: mov %esi,%ecx;");
    asm("loc_4ADC52: call _sub_4AD600;");
    asm("loc_4ADC57: pop %edi;");
    asm("loc_4ADC58: pop %esi;");
    asm("loc_4ADC59: pop %ebp;");
    asm("loc_4ADC5A: mov $1,%al;");
    asm("loc_4ADC5C: pop %ebx;");
    asm("loc_4ADC5D: add $0x180,%esp;");
    asm("loc_4ADC63: ret $8;");
    asm("loc_4ADC66: mov 0x194(%esp),%eax;");
    asm("loc_4ADC6D: testb $2,(%eax);");
    asm("loc_4ADC70: je loc_4ADB24;");
    asm("loc_4ADC76: cmp $0x1B,%ebp;");
    asm("loc_4ADC79: jne loc_4ADB24;");
    asm("loc_4ADC7F: mov 0x84A(%esi),%al;");
    asm("loc_4ADC85: test %al,%al;");
    asm("loc_4ADC87: je loc_4ADC9E;");
    asm("loc_4ADC89: mov %esi,%ecx;");
    asm("loc_4ADC8B: call _sub_4B2700;");
    asm("loc_4ADC90: pop %esi;");
    asm("loc_4ADC91: pop %ebp;");
    asm("loc_4ADC92: mov $1,%al;");
    asm("loc_4ADC94: pop %ebx;");
    asm("loc_4ADC95: add $0x180,%esp;");
    asm("loc_4ADC9B: ret $8;");
    asm("loc_4ADC9E: mov 0x7F4(%esi),%eax;");
    asm("loc_4ADCA4: cmp $6,%eax;");
    asm("loc_4ADCA7: je loc_4ADD71;");
    asm("loc_4ADCAD: cmp $4,%eax;");
    asm("loc_4ADCB0: movl $6,0x7F8(%esi);");
    asm("loc_4ADCBA: ja loc_4ADD60;");
    asm("loc_4ADCC0: jmpl *_jmp_4ADD98(,%eax,4);");
    asm("loc_4ADCC7: mov %esi,%ecx;");
    asm("loc_4ADCC9: call _sub_4AEAB0;");
    asm("loc_4ADCCE: jmp loc_4ADD60;");
    asm("loc_4ADCD3: mov %esi,%ecx;");
    asm("loc_4ADCD5: call _sub_4AEBB0;");
    asm("loc_4ADCDA: jmp loc_4ADD60;");
    asm("loc_4ADCDF: mov %esi,%ecx;");
    asm("loc_4ADCE1: call _sub_4AECA0;");
    asm("loc_4ADCE6: jmp loc_4ADD60;");
    asm("loc_4ADCE8: mov %esi,%ecx;");
    asm("loc_4ADCEA: call _sub_4AED70;");
    asm("loc_4ADCEF: jmp loc_4ADD60;");
    asm("loc_4ADCF1: mov 0x7F0(%esi),%eax;");
    asm("loc_4ADCF7: mov 0x6C(%eax),%cl;");
    asm("loc_4ADCFA: mov $0xFC,%bl;");
    asm("loc_4ADCFC: and %bl,%cl;");
    asm("loc_4ADCFE: mov %cl,0x6C(%eax);");
    asm("loc_4ADD01: mov 0x374(%esi),%ecx;");
    asm("loc_4ADD07: mov _data_679BB0,%edx;");
    asm("loc_4ADD0D: push $0x40;");
    asm("loc_4ADD0F: lea 0x10(%esp),%eax;");
    asm("loc_4ADD13: push %eax;");
    asm("loc_4ADD14: mov %edx,0x348(%ecx);");
    asm("loc_4ADD1A: mov _data_67ECA8,%ecx;");
    asm("loc_4ADD20: push $0x5E4;");
    asm("loc_4ADD25: push %ecx;");
    asm("loc_4ADD26: call _sub_4347E0;");
    asm("loc_4ADD2B: mov 0x7B4(%esi),%ecx;");
    asm("loc_4ADD31: mov (%ecx),%edx;");
    asm("loc_4ADD33: add $0x10,%esp;");
    asm("loc_4ADD36: push $0;");
    asm("loc_4ADD38: lea 0x10(%esp),%eax;");
    asm("loc_4ADD3C: push %eax;");
    asm("loc_4ADD3D: push $0x1D;");
    asm("loc_4ADD3F: calll *0xA8(%edx);");
    asm("loc_4ADD45: mov 0x7B0(%esi),%eax;");
    asm("loc_4ADD4B: and %bl,0x6C(%eax);");
    asm("loc_4ADD4E: mov 0x7B4(%esi),%eax;");
    asm("loc_4ADD54: and %bl,0x6C(%eax);");
    asm("loc_4ADD57: mov 0x344(%esi),%eax;");
    asm("loc_4ADD5D: and %bl,0x6C(%eax);");
    asm("loc_4ADD60: mov 0x848(%esi),%al;");
    asm("loc_4ADD66: test %al,%al;");
    asm("loc_4ADD68: jne loc_4ADD71;");
    asm("loc_4ADD6A: mov %esi,%ecx;");
    asm("loc_4ADD6C: call _sub_4AEE30;");
    asm("loc_4ADD71: push $0x1E;");
    asm("loc_4ADD73: call _sub_5646E0;");
    asm("loc_4ADD78: push $0x1F;");
    asm("loc_4ADD7A: call _sub_5646E0;");
    asm("loc_4ADD7F: push $0x20;");
    asm("loc_4ADD81: call _sub_5646E0;");
    asm("loc_4ADD86: add $0xC,%esp;");
    asm("loc_4ADD89: pop %esi;");
    asm("loc_4ADD8A: pop %ebp;");
    asm("loc_4ADD8B: mov $1,%al;");
    asm("loc_4ADD8D: pop %ebx;");
    asm("loc_4ADD8E: add $0x180,%esp;");
    asm("loc_4ADD94: ret $8;");
    asm("int3;"); // unreachable
    asm("_jmp_4ADD98: .long loc_4ADCC7;");
    asm(".long loc_4ADCD3;");
    asm(".long loc_4ADCDF;");
    asm(".long loc_4ADCE8;");
    asm(".long loc_4ADCF1;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4ADAC0);
_naked _weak void _sub_4ADDB0() // _sub_4ADDB0
{
    __DEBUG_ASM(4ADDB0);
    // chunk 0x4ADDB0 _sub_4ADDB0
    asm("loc_4ADDB0: push %ecx;");
    asm("loc_4ADDB1: mov 3(%esp),%al;");
    asm("loc_4ADDB5: mov %al,_data_6721C0;");
    asm("loc_4ADDBA: xor %eax,%eax;");
    asm("loc_4ADDBC: push $_sub_4ADDE0;");
    asm("loc_4ADDC1: mov %eax,_data_6721C4;");
    asm("loc_4ADDC6: mov %eax,_data_6721C8;");
    asm("loc_4ADDCB: mov %eax,_data_6721CC;");
    asm("loc_4ADDD0: call _sub_5B7E6C;");
    asm("loc_4ADDD5: add $8,%esp;");
    asm("loc_4ADDD8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4ADDE0() // _sub_4ADDE0
{
    __DEBUG_ASM(4ADDE0);
    // chunk 0x4ADDE0 _sub_4ADDE0
    asm("loc_4ADDE0: mov _data_6721C4,%eax;");
    asm("loc_4ADDE5: push %eax;");
    asm("loc_4ADDE6: call _sub_5B7E1D;");
    asm("loc_4ADDEB: xor %eax,%eax;");
    asm("loc_4ADDED: add $4,%esp;");
    asm("loc_4ADDF0: mov %eax,_data_6721C4;");
    asm("loc_4ADDF5: mov %eax,_data_6721C8;");
    asm("loc_4ADDFA: mov %eax,_data_6721CC;");
    asm("loc_4ADDFF: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4ADE00() // _sub_4ADE00
{
    __DEBUG_ASM(4ADE00);
    // chunk 0x4ADE00 _sub_4ADE00
    asm("loc_4ADE00: push %ecx;");
    asm("loc_4ADE01: mov 0xC(%esp),%eax;");
    asm("loc_4ADE05: sub $0,%eax;");
    asm("loc_4ADE08: push %ebx;");
    asm("loc_4ADE09: push %ebp;");
    asm("loc_4ADE0A: mov 0x10(%esp),%ebp;");
    asm("loc_4ADE0E: push %esi;");
    asm("loc_4ADE0F: push %edi;");
    asm("loc_4ADE10: mov %ecx,%esi;");
    asm("loc_4ADE12: movl $0,0x10(%esp);");
    asm("loc_4ADE1A: je loc_4ADFAB;");
    asm("loc_4ADE20: dec %eax;");
    asm("loc_4ADE21: je loc_4ADF29;");
    asm("loc_4ADE27: dec %eax;");
    asm("loc_4ADE28: je loc_4ADEA4;");
    asm("loc_4ADE2A: mov _data_6721C0,%al;");
    asm("loc_4ADE2F: mov %al,(%ebp);");
    asm("loc_4ADE32: mov _data_6721C4,%eax;");
    asm("loc_4ADE37: test %eax,%eax;");
    asm("loc_4ADE39: je loc_4ADE56;");
    asm("loc_4ADE3B: mov _data_6721C8,%ecx;");
    asm("loc_4ADE41: sub %eax,%ecx;");
    asm("loc_4ADE43: mov $0x2E8BA2E9,%eax;");
    asm("loc_4ADE48: imul %ecx;");
    asm("loc_4ADE4A: sar $3,%edx;");
    asm("loc_4ADE4D: mov %edx,%ecx;");
    asm("loc_4ADE4F: shr $0x1F,%ecx;");
    asm("loc_4ADE52: add %ecx,%edx;");
    asm("loc_4ADE54: mov %edx,%eax;");
    asm("loc_4ADE56: test %eax,%eax;");
    asm("loc_4ADE58: jge loc_4ADE5C;");
    asm("loc_4ADE5A: xor %eax,%eax;");
    asm("loc_4ADE5C: imul $0x2C,%eax;");
    asm("loc_4ADE5F: push %eax;");
    asm("loc_4ADE60: call _sub_5B7E84;");
    asm("loc_4ADE65: mov %eax,4(%ebp);");
    asm("loc_4ADE68: mov _data_6721C8,%ecx;");
    asm("loc_4ADE6E: mov _data_6721C4,%esi;");
    asm("loc_4ADE74: add $4,%esp;");
    asm("loc_4ADE77: cmp %ecx,%esi;");
    asm("loc_4ADE79: mov %ecx,%ebx;");
    asm("loc_4ADE7B: mov %eax,%edi;");
    asm("loc_4ADE7D: je loc_4ADE94;");
    asm("loc_4ADE7F: nop;");
    asm("loc_4ADE80: push %esi;");
    asm("loc_4ADE81: push %edi;");
    asm("loc_4ADE82: call _sub_4B2B50;");
    asm("loc_4ADE87: add $0x2C,%esi;");
    asm("loc_4ADE8A: add $8,%esp;");
    asm("loc_4ADE8D: add $0x2C,%edi;");
    asm("loc_4ADE90: cmp %ebx,%esi;");
    asm("loc_4ADE92: jne loc_4ADE80;");
    asm("loc_4ADE94: mov %edi,8(%ebp);");
    asm("loc_4ADE97: mov %edi,0xC(%ebp);");
    asm("loc_4ADE9A: pop %edi;");
    asm("loc_4ADE9B: pop %esi;");
    asm("loc_4ADE9C: mov %ebp,%eax;");
    asm("loc_4ADE9E: pop %ebp;");
    asm("loc_4ADE9F: pop %ebx;");
    asm("loc_4ADEA0: pop %ecx;");
    asm("loc_4ADEA1: ret $8;");
    asm("loc_4ADEA4: mov 0x81C(%esi),%dl;");
    asm("loc_4ADEAA: mov %dl,(%ebp);");
    asm("loc_4ADEAD: mov 0x820(%esi),%eax;");
    asm("loc_4ADEB3: test %eax,%eax;");
    asm("loc_4ADEB5: je loc_4ADED2;");
    asm("loc_4ADEB7: mov 0x824(%esi),%ecx;");
    asm("loc_4ADEBD: sub %eax,%ecx;");
    asm("loc_4ADEBF: mov $0x2E8BA2E9,%eax;");
    asm("loc_4ADEC4: imul %ecx;");
    asm("loc_4ADEC6: sar $3,%edx;");
    asm("loc_4ADEC9: mov %edx,%eax;");
    asm("loc_4ADECB: shr $0x1F,%eax;");
    asm("loc_4ADECE: add %eax,%edx;");
    asm("loc_4ADED0: mov %edx,%eax;");
    asm("loc_4ADED2: test %eax,%eax;");
    asm("loc_4ADED4: jge loc_4ADED8;");
    asm("loc_4ADED6: xor %eax,%eax;");
    asm("loc_4ADED8: imul $0x2C,%eax;");
    asm("loc_4ADEDB: push %eax;");
    asm("loc_4ADEDC: call _sub_5B7E84;");
    asm("loc_4ADEE1: mov %eax,4(%ebp);");
    asm("loc_4ADEE4: mov 0x824(%esi),%ebx;");
    asm("loc_4ADEEA: mov %eax,%edx;");
    asm("loc_4ADEEC: mov 0x820(%esi),%eax;");
    asm("loc_4ADEF2: add $4,%esp;");
    asm("loc_4ADEF5: cmp %ebx,%eax;");
    asm("loc_4ADEF7: je loc_4AE019;");
    asm("loc_4ADEFD: lea (%ecx),%ecx;");
    asm("loc_4ADF00: test %edx,%edx;");
    asm("loc_4ADF02: je loc_4ADF0F;");
    asm("loc_4ADF04: mov $0xB,%ecx;");
    asm("loc_4ADF09: mov %eax,%esi;");
    asm("loc_4ADF0B: mov %edx,%edi;");
    asm("loc_4ADF0D: rep movsl (%esi),(%edi);");
    asm("loc_4ADF0F: add $0x2C,%eax;");
    asm("loc_4ADF12: add $0x2C,%edx;");
    asm("loc_4ADF15: cmp %ebx,%eax;");
    asm("loc_4ADF17: jne loc_4ADF00;");
    asm("loc_4ADF19: pop %edi;");
    asm("loc_4ADF1A: pop %esi;");
    asm("loc_4ADF1B: mov %edx,8(%ebp);");
    asm("loc_4ADF1E: mov %edx,0xC(%ebp);");
    asm("loc_4ADF21: mov %ebp,%eax;");
    asm("loc_4ADF23: pop %ebp;");
    asm("loc_4ADF24: pop %ebx;");
    asm("loc_4ADF25: pop %ecx;");
    asm("loc_4ADF26: ret $8;");
    asm("loc_4ADF29: mov 0x80C(%esi),%cl;");
    asm("loc_4ADF2F: mov %cl,(%ebp);");
    asm("loc_4ADF32: mov 0x810(%esi),%eax;");
    asm("loc_4ADF38: test %eax,%eax;");
    asm("loc_4ADF3A: je loc_4ADF57;");
    asm("loc_4ADF3C: mov 0x814(%esi),%ecx;");
    asm("loc_4ADF42: sub %eax,%ecx;");
    asm("loc_4ADF44: mov $0x2E8BA2E9,%eax;");
    asm("loc_4ADF49: imul %ecx;");
    asm("loc_4ADF4B: sar $3,%edx;");
    asm("loc_4ADF4E: mov %edx,%eax;");
    asm("loc_4ADF50: shr $0x1F,%eax;");
    asm("loc_4ADF53: add %eax,%edx;");
    asm("loc_4ADF55: mov %edx,%eax;");
    asm("loc_4ADF57: test %eax,%eax;");
    asm("loc_4ADF59: jge loc_4ADF5D;");
    asm("loc_4ADF5B: xor %eax,%eax;");
    asm("loc_4ADF5D: imul $0x2C,%eax;");
    asm("loc_4ADF60: push %eax;");
    asm("loc_4ADF61: call _sub_5B7E84;");
    asm("loc_4ADF66: mov %eax,4(%ebp);");
    asm("loc_4ADF69: mov 0x814(%esi),%ebx;");
    asm("loc_4ADF6F: mov %eax,%edx;");
    asm("loc_4ADF71: mov 0x810(%esi),%eax;");
    asm("loc_4ADF77: add $4,%esp;");
    asm("loc_4ADF7A: cmp %ebx,%eax;");
    asm("loc_4ADF7C: je loc_4AE019;");
    asm("loc_4ADF82: test %edx,%edx;");
    asm("loc_4ADF84: je loc_4ADF91;");
    asm("loc_4ADF86: mov $0xB,%ecx;");
    asm("loc_4ADF8B: mov %eax,%esi;");
    asm("loc_4ADF8D: mov %edx,%edi;");
    asm("loc_4ADF8F: rep movsl (%esi),(%edi);");
    asm("loc_4ADF91: add $0x2C,%eax;");
    asm("loc_4ADF94: add $0x2C,%edx;");
    asm("loc_4ADF97: cmp %ebx,%eax;");
    asm("loc_4ADF99: jne loc_4ADF82;");
    asm("loc_4ADF9B: pop %edi;");
    asm("loc_4ADF9C: pop %esi;");
    asm("loc_4ADF9D: mov %edx,8(%ebp);");
    asm("loc_4ADFA0: mov %edx,0xC(%ebp);");
    asm("loc_4ADFA3: mov %ebp,%eax;");
    asm("loc_4ADFA5: pop %ebp;");
    asm("loc_4ADFA6: pop %ebx;");
    asm("loc_4ADFA7: pop %ecx;");
    asm("loc_4ADFA8: ret $8;");
    asm("loc_4ADFAB: mov 0x7FC(%esi),%cl;");
    asm("loc_4ADFB1: mov %cl,(%ebp);");
    asm("loc_4ADFB4: mov 0x800(%esi),%eax;");
    asm("loc_4ADFBA: test %eax,%eax;");
    asm("loc_4ADFBC: je loc_4ADFD9;");
    asm("loc_4ADFBE: mov 0x804(%esi),%ecx;");
    asm("loc_4ADFC4: sub %eax,%ecx;");
    asm("loc_4ADFC6: mov $0x2E8BA2E9,%eax;");
    asm("loc_4ADFCB: imul %ecx;");
    asm("loc_4ADFCD: sar $3,%edx;");
    asm("loc_4ADFD0: mov %edx,%eax;");
    asm("loc_4ADFD2: shr $0x1F,%eax;");
    asm("loc_4ADFD5: add %eax,%edx;");
    asm("loc_4ADFD7: mov %edx,%eax;");
    asm("loc_4ADFD9: test %eax,%eax;");
    asm("loc_4ADFDB: jge loc_4ADFDF;");
    asm("loc_4ADFDD: xor %eax,%eax;");
    asm("loc_4ADFDF: imul $0x2C,%eax;");
    asm("loc_4ADFE2: push %eax;");
    asm("loc_4ADFE3: call _sub_5B7E84;");
    asm("loc_4ADFE8: mov %eax,4(%ebp);");
    asm("loc_4ADFEB: mov 0x804(%esi),%ebx;");
    asm("loc_4ADFF1: mov %eax,%edx;");
    asm("loc_4ADFF3: mov 0x800(%esi),%eax;");
    asm("loc_4ADFF9: add $4,%esp;");
    asm("loc_4ADFFC: cmp %ebx,%eax;");
    asm("loc_4ADFFE: je loc_4AE019;");
    asm("loc_4AE000: test %edx,%edx;");
    asm("loc_4AE002: je loc_4AE00F;");
    asm("loc_4AE004: mov $0xB,%ecx;");
    asm("loc_4AE009: mov %eax,%esi;");
    asm("loc_4AE00B: mov %edx,%edi;");
    asm("loc_4AE00D: rep movsl (%esi),(%edi);");
    asm("loc_4AE00F: add $0x2C,%eax;");
    asm("loc_4AE012: add $0x2C,%edx;");
    asm("loc_4AE015: cmp %ebx,%eax;");
    asm("loc_4AE017: jne loc_4AE000;");
    asm("loc_4AE019: pop %edi;");
    asm("loc_4AE01A: pop %esi;");
    asm("loc_4AE01B: mov %edx,8(%ebp);");
    asm("loc_4AE01E: mov %edx,0xC(%ebp);");
    asm("loc_4AE021: mov %ebp,%eax;");
    asm("loc_4AE023: pop %ebp;");
    asm("loc_4AE024: pop %ebx;");
    asm("loc_4AE025: pop %ecx;");
    asm("loc_4AE026: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AE030() // _sub_4AE030
{
    __DEBUG_ASM(4AE030);
    // chunk 0x4AE030 _sub_4AE030
    asm("loc_4AE030: push %ecx;");
    asm("loc_4AE031: push %ebx;");
    asm("loc_4AE032: push %ebp;");
    asm("loc_4AE033: mov 0x10(%esp),%ebp;");
    asm("loc_4AE037: push %esi;");
    asm("loc_4AE038: mov %ecx,%esi;");
    asm("loc_4AE03A: mov 0x838(%esi),%eax;");
    asm("loc_4AE040: sub $0,%eax;");
    asm("loc_4AE043: push %edi;");
    asm("loc_4AE044: movl $0,0x10(%esp);");
    asm("loc_4AE04C: je loc_4AE1DD;");
    asm("loc_4AE052: dec %eax;");
    asm("loc_4AE053: je loc_4AE15B;");
    asm("loc_4AE059: dec %eax;");
    asm("loc_4AE05A: je loc_4AE0D9;");
    asm("loc_4AE060: mov _data_6721C0,%al;");
    asm("loc_4AE065: mov %al,(%ebp);");
    asm("loc_4AE068: mov _data_6721C4,%eax;");
    asm("loc_4AE06D: test %eax,%eax;");
    asm("loc_4AE06F: je loc_4AE08C;");
    asm("loc_4AE071: mov _data_6721C8,%ecx;");
    asm("loc_4AE077: sub %eax,%ecx;");
    asm("loc_4AE079: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AE07E: imul %ecx;");
    asm("loc_4AE080: sar $3,%edx;");
    asm("loc_4AE083: mov %edx,%ecx;");
    asm("loc_4AE085: shr $0x1F,%ecx;");
    asm("loc_4AE088: add %ecx,%edx;");
    asm("loc_4AE08A: mov %edx,%eax;");
    asm("loc_4AE08C: test %eax,%eax;");
    asm("loc_4AE08E: jge loc_4AE092;");
    asm("loc_4AE090: xor %eax,%eax;");
    asm("loc_4AE092: imul $0x2C,%eax;");
    asm("loc_4AE095: push %eax;");
    asm("loc_4AE096: call _sub_5B7E84;");
    asm("loc_4AE09B: mov %eax,4(%ebp);");
    asm("loc_4AE09E: mov _data_6721C8,%ecx;");
    asm("loc_4AE0A4: mov _data_6721C4,%esi;");
    asm("loc_4AE0AA: add $4,%esp;");
    asm("loc_4AE0AD: cmp %ecx,%esi;");
    asm("loc_4AE0AF: mov %ecx,%ebx;");
    asm("loc_4AE0B1: mov %eax,%edi;");
    asm("loc_4AE0B3: je loc_4AE0C9;");
    asm("loc_4AE0B5: push %esi;");
    asm("loc_4AE0B6: push %edi;");
    asm("loc_4AE0B7: call _sub_4B2B50;");
    asm("loc_4AE0BC: add $0x2C,%esi;");
    asm("loc_4AE0BF: add $8,%esp;");
    asm("loc_4AE0C2: add $0x2C,%edi;");
    asm("loc_4AE0C5: cmp %ebx,%esi;");
    asm("loc_4AE0C7: jne loc_4AE0B5;");
    asm("loc_4AE0C9: mov %edi,8(%ebp);");
    asm("loc_4AE0CC: mov %edi,0xC(%ebp);");
    asm("loc_4AE0CF: pop %edi;");
    asm("loc_4AE0D0: pop %esi;");
    asm("loc_4AE0D1: mov %ebp,%eax;");
    asm("loc_4AE0D3: pop %ebp;");
    asm("loc_4AE0D4: pop %ebx;");
    asm("loc_4AE0D5: pop %ecx;");
    asm("loc_4AE0D6: ret $4;");
    asm("loc_4AE0D9: mov 0x81C(%esi),%dl;");
    asm("loc_4AE0DF: mov %dl,(%ebp);");
    asm("loc_4AE0E2: mov 0x820(%esi),%eax;");
    asm("loc_4AE0E8: test %eax,%eax;");
    asm("loc_4AE0EA: je loc_4AE107;");
    asm("loc_4AE0EC: mov 0x824(%esi),%ecx;");
    asm("loc_4AE0F2: sub %eax,%ecx;");
    asm("loc_4AE0F4: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AE0F9: imul %ecx;");
    asm("loc_4AE0FB: sar $3,%edx;");
    asm("loc_4AE0FE: mov %edx,%eax;");
    asm("loc_4AE100: shr $0x1F,%eax;");
    asm("loc_4AE103: add %eax,%edx;");
    asm("loc_4AE105: mov %edx,%eax;");
    asm("loc_4AE107: test %eax,%eax;");
    asm("loc_4AE109: jge loc_4AE10D;");
    asm("loc_4AE10B: xor %eax,%eax;");
    asm("loc_4AE10D: imul $0x2C,%eax;");
    asm("loc_4AE110: push %eax;");
    asm("loc_4AE111: call _sub_5B7E84;");
    asm("loc_4AE116: mov %eax,4(%ebp);");
    asm("loc_4AE119: mov 0x824(%esi),%ebx;");
    asm("loc_4AE11F: mov %eax,%edx;");
    asm("loc_4AE121: mov 0x820(%esi),%eax;");
    asm("loc_4AE127: add $4,%esp;");
    asm("loc_4AE12A: cmp %ebx,%eax;");
    asm("loc_4AE12C: je loc_4AE24B;");
    asm("loc_4AE132: test %edx,%edx;");
    asm("loc_4AE134: je loc_4AE141;");
    asm("loc_4AE136: mov $0xB,%ecx;");
    asm("loc_4AE13B: mov %eax,%esi;");
    asm("loc_4AE13D: mov %edx,%edi;");
    asm("loc_4AE13F: rep movsl (%esi),(%edi);");
    asm("loc_4AE141: add $0x2C,%eax;");
    asm("loc_4AE144: add $0x2C,%edx;");
    asm("loc_4AE147: cmp %ebx,%eax;");
    asm("loc_4AE149: jne loc_4AE132;");
    asm("loc_4AE14B: pop %edi;");
    asm("loc_4AE14C: pop %esi;");
    asm("loc_4AE14D: mov %edx,8(%ebp);");
    asm("loc_4AE150: mov %edx,0xC(%ebp);");
    asm("loc_4AE153: mov %ebp,%eax;");
    asm("loc_4AE155: pop %ebp;");
    asm("loc_4AE156: pop %ebx;");
    asm("loc_4AE157: pop %ecx;");
    asm("loc_4AE158: ret $4;");
    asm("loc_4AE15B: mov 0x80C(%esi),%cl;");
    asm("loc_4AE161: mov %cl,(%ebp);");
    asm("loc_4AE164: mov 0x810(%esi),%eax;");
    asm("loc_4AE16A: test %eax,%eax;");
    asm("loc_4AE16C: je loc_4AE189;");
    asm("loc_4AE16E: mov 0x814(%esi),%ecx;");
    asm("loc_4AE174: sub %eax,%ecx;");
    asm("loc_4AE176: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AE17B: imul %ecx;");
    asm("loc_4AE17D: sar $3,%edx;");
    asm("loc_4AE180: mov %edx,%eax;");
    asm("loc_4AE182: shr $0x1F,%eax;");
    asm("loc_4AE185: add %eax,%edx;");
    asm("loc_4AE187: mov %edx,%eax;");
    asm("loc_4AE189: test %eax,%eax;");
    asm("loc_4AE18B: jge loc_4AE18F;");
    asm("loc_4AE18D: xor %eax,%eax;");
    asm("loc_4AE18F: imul $0x2C,%eax;");
    asm("loc_4AE192: push %eax;");
    asm("loc_4AE193: call _sub_5B7E84;");
    asm("loc_4AE198: mov %eax,4(%ebp);");
    asm("loc_4AE19B: mov 0x814(%esi),%ebx;");
    asm("loc_4AE1A1: mov %eax,%edx;");
    asm("loc_4AE1A3: mov 0x810(%esi),%eax;");
    asm("loc_4AE1A9: add $4,%esp;");
    asm("loc_4AE1AC: cmp %ebx,%eax;");
    asm("loc_4AE1AE: je loc_4AE24B;");
    asm("loc_4AE1B4: test %edx,%edx;");
    asm("loc_4AE1B6: je loc_4AE1C3;");
    asm("loc_4AE1B8: mov $0xB,%ecx;");
    asm("loc_4AE1BD: mov %eax,%esi;");
    asm("loc_4AE1BF: mov %edx,%edi;");
    asm("loc_4AE1C1: rep movsl (%esi),(%edi);");
    asm("loc_4AE1C3: add $0x2C,%eax;");
    asm("loc_4AE1C6: add $0x2C,%edx;");
    asm("loc_4AE1C9: cmp %ebx,%eax;");
    asm("loc_4AE1CB: jne loc_4AE1B4;");
    asm("loc_4AE1CD: pop %edi;");
    asm("loc_4AE1CE: pop %esi;");
    asm("loc_4AE1CF: mov %edx,8(%ebp);");
    asm("loc_4AE1D2: mov %edx,0xC(%ebp);");
    asm("loc_4AE1D5: mov %ebp,%eax;");
    asm("loc_4AE1D7: pop %ebp;");
    asm("loc_4AE1D8: pop %ebx;");
    asm("loc_4AE1D9: pop %ecx;");
    asm("loc_4AE1DA: ret $4;");
    asm("loc_4AE1DD: mov 0x7FC(%esi),%cl;");
    asm("loc_4AE1E3: mov %cl,(%ebp);");
    asm("loc_4AE1E6: mov 0x800(%esi),%eax;");
    asm("loc_4AE1EC: test %eax,%eax;");
    asm("loc_4AE1EE: je loc_4AE20B;");
    asm("loc_4AE1F0: mov 0x804(%esi),%ecx;");
    asm("loc_4AE1F6: sub %eax,%ecx;");
    asm("loc_4AE1F8: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AE1FD: imul %ecx;");
    asm("loc_4AE1FF: sar $3,%edx;");
    asm("loc_4AE202: mov %edx,%eax;");
    asm("loc_4AE204: shr $0x1F,%eax;");
    asm("loc_4AE207: add %eax,%edx;");
    asm("loc_4AE209: mov %edx,%eax;");
    asm("loc_4AE20B: test %eax,%eax;");
    asm("loc_4AE20D: jge loc_4AE211;");
    asm("loc_4AE20F: xor %eax,%eax;");
    asm("loc_4AE211: imul $0x2C,%eax;");
    asm("loc_4AE214: push %eax;");
    asm("loc_4AE215: call _sub_5B7E84;");
    asm("loc_4AE21A: mov %eax,4(%ebp);");
    asm("loc_4AE21D: mov 0x804(%esi),%ebx;");
    asm("loc_4AE223: mov %eax,%edx;");
    asm("loc_4AE225: mov 0x800(%esi),%eax;");
    asm("loc_4AE22B: add $4,%esp;");
    asm("loc_4AE22E: cmp %ebx,%eax;");
    asm("loc_4AE230: je loc_4AE24B;");
    asm("loc_4AE232: test %edx,%edx;");
    asm("loc_4AE234: je loc_4AE241;");
    asm("loc_4AE236: mov $0xB,%ecx;");
    asm("loc_4AE23B: mov %eax,%esi;");
    asm("loc_4AE23D: mov %edx,%edi;");
    asm("loc_4AE23F: rep movsl (%esi),(%edi);");
    asm("loc_4AE241: add $0x2C,%eax;");
    asm("loc_4AE244: add $0x2C,%edx;");
    asm("loc_4AE247: cmp %ebx,%eax;");
    asm("loc_4AE249: jne loc_4AE232;");
    asm("loc_4AE24B: pop %edi;");
    asm("loc_4AE24C: pop %esi;");
    asm("loc_4AE24D: mov %edx,8(%ebp);");
    asm("loc_4AE250: mov %edx,0xC(%ebp);");
    asm("loc_4AE253: mov %ebp,%eax;");
    asm("loc_4AE255: pop %ebp;");
    asm("loc_4AE256: pop %ebx;");
    asm("loc_4AE257: pop %ecx;");
    asm("loc_4AE258: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AE260() // _sub_4AE260
{
    __DEBUG_ASM(4AE260);
    // chunk 0x4AE260 _sub_4AE260
    asm("loc_4AE260: push $0xFFFFFFFF;");
    asm("loc_4AE262: push $_sub_5BCEA8;");
    asm("loc_4AE267: mov %fs:0,%eax;");
    asm("loc_4AE26D: push %eax;");
    asm("loc_4AE26E: mov %esp,%fs:0;");
    asm("loc_4AE275: sub $0x20,%esp;");
    asm("loc_4AE278: mov 0x30(%esp),%eax;");
    asm("loc_4AE27C: push %ebx;");
    asm("loc_4AE27D: push %ebp;");
    asm("loc_4AE27E: push %esi;");
    asm("loc_4AE27F: push %edi;");
    asm("loc_4AE280: xor %ebx,%ebx;");
    asm("loc_4AE282: mov %ecx,%ebp;");
    asm("loc_4AE284: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4AE28A: push %ebx;");
    asm("loc_4AE28B: push %ebx;");
    asm("loc_4AE28C: mov %eax,0x838(%ebp);");
    asm("loc_4AE292: mov (%ecx),%edx;");
    asm("loc_4AE294: push $0x38;");
    asm("loc_4AE296: calll *0xA8(%edx);");
    asm("loc_4AE29C: lea 0x10(%esp),%eax;");
    asm("loc_4AE2A0: push %eax;");
    asm("loc_4AE2A1: mov %ebp,%ecx;");
    asm("loc_4AE2A3: call _sub_4AE030;");
    asm("loc_4AE2A8: mov 4(%eax),%edx;");
    asm("loc_4AE2AB: cmp %ebx,%edx;");
    asm("loc_4AE2AD: mov %ebx,0x38(%esp);");
    asm("loc_4AE2B1: jne loc_4AE2B7;");
    asm("loc_4AE2B3: xor %edx,%edx;");
    asm("loc_4AE2B5: jmp loc_4AE2CD;");
    asm("loc_4AE2B7: mov 8(%eax),%ecx;");
    asm("loc_4AE2BA: sub %edx,%ecx;");
    asm("loc_4AE2BC: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AE2C1: imul %ecx;");
    asm("loc_4AE2C3: sar $3,%edx;");
    asm("loc_4AE2C6: mov %edx,%ecx;");
    asm("loc_4AE2C8: shr $0x1F,%ecx;");
    asm("loc_4AE2CB: add %ecx,%edx;");
    asm("loc_4AE2CD: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4AE2D3: mov (%ecx),%eax;");
    asm("loc_4AE2D5: dec %edx;");
    asm("loc_4AE2D6: push %edx;");
    asm("loc_4AE2D7: push %ebx;");
    asm("loc_4AE2D8: push $0x37;");
    asm("loc_4AE2DA: calll *0xA8(%eax);");
    asm("loc_4AE2E0: mov 0x14(%esp),%ecx;");
    asm("loc_4AE2E4: push %ecx;");
    asm("loc_4AE2E5: movl $0xFFFFFFFF,0x3C(%esp);");
    asm("loc_4AE2ED: call _sub_5B7E1D;");
    asm("loc_4AE2F2: add $4,%esp;");
    asm("loc_4AE2F5: lea 0x484(%ebp),%esi;");
    asm("loc_4AE2FB: nop;");
    asm("loc_4AE2FC: lea (%esp),%esp;");
    asm("loc_4AE300: lea 0x10(%esp),%edx;");
    asm("loc_4AE304: push %edx;");
    asm("loc_4AE305: mov %ebp,%ecx;");
    asm("loc_4AE307: call _sub_4AE030;");
    asm("loc_4AE30C: mov 4(%eax),%edx;");
    asm("loc_4AE30F: test %edx,%edx;");
    asm("loc_4AE311: jne loc_4AE317;");
    asm("loc_4AE313: xor %edi,%edi;");
    asm("loc_4AE315: jmp loc_4AE32F;");
    asm("loc_4AE317: mov 8(%eax),%ecx;");
    asm("loc_4AE31A: sub %edx,%ecx;");
    asm("loc_4AE31C: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AE321: imul %ecx;");
    asm("loc_4AE323: sar $3,%edx;");
    asm("loc_4AE326: mov %edx,%eax;");
    asm("loc_4AE328: shr $0x1F,%eax;");
    asm("loc_4AE32B: add %eax,%edx;");
    asm("loc_4AE32D: mov %edx,%edi;");
    asm("loc_4AE32F: mov 0x18(%esp),%ecx;");
    asm("loc_4AE333: mov 0x14(%esp),%edx;");
    asm("loc_4AE337: push %ecx;");
    asm("loc_4AE338: push %edx;");
    asm("loc_4AE339: lea 0x18(%esp),%ecx;");
    asm("loc_4AE33D: call _sub_53AAA0;");
    asm("loc_4AE342: mov 0x14(%esp),%eax;");
    asm("loc_4AE346: push %eax;");
    asm("loc_4AE347: call _sub_5B7E1D;");
    asm("loc_4AE34C: xor %eax,%eax;");
    asm("loc_4AE34E: mov %eax,0x18(%esp);");
    asm("loc_4AE352: mov %eax,0x1C(%esp);");
    asm("loc_4AE356: mov %eax,0x20(%esp);");
    asm("loc_4AE35A: mov -0x34(%esi),%eax;");
    asm("loc_4AE35D: mov 0x388(%eax),%cl;");
    asm("loc_4AE363: add $4,%esp;");
    asm("loc_4AE366: cmp %edi,%ebx;");
    asm("loc_4AE368: jae loc_4AE39E;");
    asm("loc_4AE36A: or $4,%cl;");
    asm("loc_4AE36D: mov %cl,0x388(%eax);");
    asm("loc_4AE373: mov (%esi),%eax;");
    asm("loc_4AE375: orb $4,0x388(%eax);");
    asm("loc_4AE37C: mov -0x108(%esi),%eax;");
    asm("loc_4AE382: orb $3,0x6C(%eax);");
    asm("loc_4AE386: mov -0xD4(%esi),%eax;");
    asm("loc_4AE38C: orb $3,0x6C(%eax);");
    asm("loc_4AE390: mov -0xA0(%esi),%eax;");
    asm("loc_4AE396: mov 0x6C(%eax),%cl;");
    asm("loc_4AE399: or $3,%cl;");
    asm("loc_4AE39C: jmp loc_4AE3D0;");
    asm("loc_4AE39E: and $0xFB,%cl;");
    asm("loc_4AE3A1: mov %cl,0x388(%eax);");
    asm("loc_4AE3A7: mov (%esi),%eax;");
    asm("loc_4AE3A9: andb $0xFB,0x388(%eax);");
    asm("loc_4AE3B0: mov -0x108(%esi),%eax;");
    asm("loc_4AE3B6: andb $0xFC,0x6C(%eax);");
    asm("loc_4AE3BA: mov -0xD4(%esi),%eax;");
    asm("loc_4AE3C0: andb $0xFC,0x6C(%eax);");
    asm("loc_4AE3C4: mov -0xA0(%esi),%eax;");
    asm("loc_4AE3CA: mov 0x6C(%eax),%cl;");
    asm("loc_4AE3CD: and $0xFC,%cl;");
    asm("loc_4AE3D0: inc %ebx;");
    asm("loc_4AE3D1: add $4,%esi;");
    asm("loc_4AE3D4: cmp $0xD,%ebx;");
    asm("loc_4AE3D7: mov %cl,0x6C(%eax);");
    asm("loc_4AE3DA: jl loc_4AE300;");
    asm("loc_4AE3E0: push $0;");
    asm("loc_4AE3E2: mov %ebp,%ecx;");
    asm("loc_4AE3E4: call _sub_4AF900;");
    asm("loc_4AE3E9: lea 0x20(%esp),%ecx;");
    asm("loc_4AE3ED: push %ecx;");
    asm("loc_4AE3EE: mov %ebp,%ecx;");
    asm("loc_4AE3F0: call _sub_4AE030;");
    asm("loc_4AE3F5: mov 4(%eax),%edx;");
    asm("loc_4AE3F8: test %edx,%edx;");
    asm("loc_4AE3FA: jne loc_4AE400;");
    asm("loc_4AE3FC: xor %esi,%esi;");
    asm("loc_4AE3FE: jmp loc_4AE418;");
    asm("loc_4AE400: mov 8(%eax),%ecx;");
    asm("loc_4AE403: sub %edx,%ecx;");
    asm("loc_4AE405: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AE40A: imul %ecx;");
    asm("loc_4AE40C: sar $3,%edx;");
    asm("loc_4AE40F: mov %edx,%eax;");
    asm("loc_4AE411: shr $0x1F,%eax;");
    asm("loc_4AE414: add %eax,%edx;");
    asm("loc_4AE416: mov %edx,%esi;");
    asm("loc_4AE418: mov 0x28(%esp),%ecx;");
    asm("loc_4AE41C: mov 0x24(%esp),%edx;");
    asm("loc_4AE420: push %ecx;");
    asm("loc_4AE421: push %edx;");
    asm("loc_4AE422: lea 0x28(%esp),%ecx;");
    asm("loc_4AE426: call _sub_53AAA0;");
    asm("loc_4AE42B: mov 0x24(%esp),%eax;");
    asm("loc_4AE42F: push %eax;");
    asm("loc_4AE430: call _sub_5B7E1D;");
    asm("loc_4AE435: mov 0x4B8(%ebp),%eax;");
    asm("loc_4AE43B: mov 0x6C(%eax),%cl;");
    asm("loc_4AE43E: add $4,%esp;");
    asm("loc_4AE441: cmp $0xD,%esi;");
    asm("loc_4AE444: ja loc_4AE44B;");
    asm("loc_4AE446: and $0xFC,%cl;");
    asm("loc_4AE449: jmp loc_4AE44E;");
    asm("loc_4AE44B: or $3,%cl;");
    asm("loc_4AE44E: mov %cl,0x6C(%eax);");
    asm("loc_4AE451: xor %eax,%eax;");
    asm("loc_4AE453: lea 0x4D4(%ebp),%ecx;");
    asm("loc_4AE459: lea (%esp),%esp;");
    asm("loc_4AE460: mov 0x40(%esp),%edx;");
    asm("loc_4AE464: cmp %edx,%eax;");
    asm("loc_4AE466: je loc_4AE476;");
    asm("loc_4AE468: mov (%ecx),%esi;");
    asm("loc_4AE46A: mov _data_679BB0,%edi;");
    asm("loc_4AE470: mov %edi,0x348(%esi);");
    asm("loc_4AE476: inc %eax;");
    asm("loc_4AE477: add $4,%ecx;");
    asm("loc_4AE47A: cmp $3,%eax;");
    asm("loc_4AE47D: jl loc_4AE460;");
    asm("loc_4AE47F: mov 0x4D4(%ebp,%edx,4),%ecx;");
    asm("loc_4AE486: mov _data_679BA4,%edx;");
    asm("loc_4AE48C: pop %edi;");
    asm("loc_4AE48D: pop %esi;");
    asm("loc_4AE48E: mov %edx,0x348(%ecx);");
    asm("loc_4AE494: mov 0x28(%esp),%ecx;");
    asm("loc_4AE498: pop %ebp;");
    asm("loc_4AE499: pop %ebx;");
    asm("loc_4AE49A: mov %ecx,%fs:0;");
    asm("loc_4AE4A1: add $0x2C,%esp;");
    asm("loc_4AE4A4: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AE4B0() // _sub_4AE4B0
{
    __DEBUG_ASM(4AE4B0);
    // chunk 0x4AE4B0 _sub_4AE4B0
    asm("loc_4AE4B0: sub $0x80,%esp;");
    asm("loc_4AE4B6: push %esi;");
    asm("loc_4AE4B7: mov %ecx,%esi;");
    asm("loc_4AE4B9: mov 0x7F4(%esi),%eax;");
    asm("loc_4AE4BF: test %eax,%eax;");
    asm("loc_4AE4C1: jne loc_4AE4D1;");
    asm("loc_4AE4C3: mov 0x8A0(%esi),%al;");
    asm("loc_4AE4C9: test %al,%al;");
    asm("loc_4AE4CB: je loc_4AE63D;");
    asm("loc_4AE4D1: mov 0x8A0(%esi),%al;");
    asm("loc_4AE4D7: test %al,%al;");
    asm("loc_4AE4D9: jne loc_4AE520;");
    asm("loc_4AE4DB: push $0x40;");
    asm("loc_4AE4DD: lea 8(%esp),%eax;");
    asm("loc_4AE4E1: push %eax;");
    asm("loc_4AE4E2: movl $0,0x7F4(%esi);");
    asm("loc_4AE4EC: movb $1,0x8A0(%esi);");
    asm("loc_4AE4F3: mov _data_67ECA8,%ecx;");
    asm("loc_4AE4F9: push $0x52F;");
    asm("loc_4AE4FE: push %ecx;");
    asm("loc_4AE4FF: call _sub_4347E0;");
    asm("loc_4AE504: mov 0x364(%esi),%edx;");
    asm("loc_4AE50A: mov _data_679BA4,%eax;");
    asm("loc_4AE50F: add $0x10,%esp;");
    asm("loc_4AE512: mov %eax,0x348(%edx);");
    asm("loc_4AE518: pop %esi;");
    asm("loc_4AE519: add $0x80,%esp;");
    asm("loc_4AE51F: ret;");
    asm("loc_4AE520: push %ebx;");
    asm("loc_4AE521: push %edi;");
    asm("loc_4AE522: push $0;");
    asm("loc_4AE524: mov %esi,%ecx;");
    asm("loc_4AE526: call _sub_4AE260;");
    asm("loc_4AE52B: lea 0x3B0(%esi),%eax;");
    asm("loc_4AE531: mov $0xD,%edi;");
    asm("loc_4AE536: mov $3,%ecx;");
    asm("loc_4AE53B: nop;");
    asm("loc_4AE53C: lea (%esp),%esp;");
    asm("loc_4AE540: mov -0x34(%eax),%edx;");
    asm("loc_4AE543: or %cl,0x6C(%edx);");
    asm("loc_4AE546: mov (%eax),%edx;");
    asm("loc_4AE548: or %cl,0x6C(%edx);");
    asm("loc_4AE54B: mov 0xA0(%eax),%edx;");
    asm("loc_4AE551: or %cl,0x6C(%edx);");
    asm("loc_4AE554: mov 0x34(%eax),%edx;");
    asm("loc_4AE557: or %cl,0x6C(%edx);");
    asm("loc_4AE55A: mov 0xD4(%eax),%edx;");
    asm("loc_4AE560: mov 0x6C(%edx),%bl;");
    asm("loc_4AE563: or %cl,%bl;");
    asm("loc_4AE565: add $4,%eax;");
    asm("loc_4AE568: dec %edi;");
    asm("loc_4AE569: mov %bl,0x6C(%edx);");
    asm("loc_4AE56C: jne loc_4AE540;");
    asm("loc_4AE56E: lea 0x418(%esi),%edx;");
    asm("loc_4AE574: mov $0xE,%edi;");
    asm("loc_4AE579: lea (%esp),%esp;");
    asm("loc_4AE580: mov (%edx),%eax;");
    asm("loc_4AE582: mov 0x6C(%eax),%bl;");
    asm("loc_4AE585: or %cl,%bl;");
    asm("loc_4AE587: add $4,%edx;");
    asm("loc_4AE58A: dec %edi;");
    asm("loc_4AE58B: mov %bl,0x6C(%eax);");
    asm("loc_4AE58E: jne loc_4AE580;");
    asm("loc_4AE590: lea 0x4C4(%esi),%eax;");
    asm("loc_4AE596: mov %ecx,%edi;");
    asm("loc_4AE598: mov 0x10(%eax),%edx;");
    asm("loc_4AE59B: or %cl,0x6C(%edx);");
    asm("loc_4AE59E: mov (%eax),%edx;");
    asm("loc_4AE5A0: mov 0x6C(%edx),%bl;");
    asm("loc_4AE5A3: or %cl,%bl;");
    asm("loc_4AE5A5: add $4,%eax;");
    asm("loc_4AE5A8: dec %edi;");
    asm("loc_4AE5A9: mov %bl,0x6C(%edx);");
    asm("loc_4AE5AC: jne loc_4AE598;");
    asm("loc_4AE5AE: mov 0x4BC(%esi),%eax;");
    asm("loc_4AE5B4: or %cl,0x6C(%eax);");
    asm("loc_4AE5B7: mov 0x4C0(%esi),%eax;");
    asm("loc_4AE5BD: or %cl,0x6C(%eax);");
    asm("loc_4AE5C0: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE5C6: or %cl,0x6C(%eax);");
    asm("loc_4AE5C9: mov 0x7AC(%esi),%eax;");
    asm("loc_4AE5CF: or %cl,0x6C(%eax);");
    asm("loc_4AE5D2: mov 0x7B0(%esi),%eax;");
    asm("loc_4AE5D8: or %cl,0x6C(%eax);");
    asm("loc_4AE5DB: mov 0x7B4(%esi),%eax;");
    asm("loc_4AE5E1: or %cl,0x6C(%eax);");
    asm("loc_4AE5E4: mov 0x344(%esi),%eax;");
    asm("loc_4AE5EA: mov 0x6C(%eax),%dl;");
    asm("loc_4AE5ED: or %cl,%dl;");
    asm("loc_4AE5EF: push $0x40;");
    asm("loc_4AE5F1: lea 0x10(%esp),%ecx;");
    asm("loc_4AE5F5: push %ecx;");
    asm("loc_4AE5F6: mov %dl,0x6C(%eax);");
    asm("loc_4AE5F9: mov _data_67ECA8,%edx;");
    asm("loc_4AE5FF: push $0x691;");
    asm("loc_4AE604: push %edx;");
    asm("loc_4AE605: call _sub_4347E0;");
    asm("loc_4AE60A: mov 0x344(%esi),%ecx;");
    asm("loc_4AE610: mov (%ecx),%eax;");
    asm("loc_4AE612: add $0x10,%esp;");
    asm("loc_4AE615: push $0;");
    asm("loc_4AE617: lea 0x10(%esp),%edx;");
    asm("loc_4AE61B: push %edx;");
    asm("loc_4AE61C: push $0x1D;");
    asm("loc_4AE61E: calll *0xA8(%eax);");
    asm("loc_4AE624: push $0;");
    asm("loc_4AE626: mov %esi,%ecx;");
    asm("loc_4AE628: call _sub_4ABDF0;");
    asm("loc_4AE62D: mov 0x7F0(%esi),%esi;");
    asm("loc_4AE633: mov 0x6C(%esi),%al;");
    asm("loc_4AE636: and $0xFC,%al;");
    asm("loc_4AE638: pop %edi;");
    asm("loc_4AE639: mov %al,0x6C(%esi);");
    asm("loc_4AE63C: pop %ebx;");
    asm("loc_4AE63D: pop %esi;");
    asm("loc_4AE63E: add $0x80,%esp;");
    asm("loc_4AE644: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AE650() // _sub_4AE650
{
    __DEBUG_ASM(4AE650);
    // chunk 0x4AE650 _sub_4AE650
    asm("loc_4AE650: sub $0x80,%esp;");
    asm("loc_4AE656: push %ebx;");
    asm("loc_4AE657: push %esi;");
    asm("loc_4AE658: mov %ecx,%esi;");
    asm("loc_4AE65A: mov 0x7F4(%esi),%eax;");
    asm("loc_4AE660: mov $1,%ebx;");
    asm("loc_4AE665: cmp %ebx,%eax;");
    asm("loc_4AE667: jne loc_4AE677;");
    asm("loc_4AE669: mov 0x8A0(%esi),%al;");
    asm("loc_4AE66F: test %al,%al;");
    asm("loc_4AE671: je loc_4AE766;");
    asm("loc_4AE677: mov 0x8A0(%esi),%al;");
    asm("loc_4AE67D: test %al,%al;");
    asm("loc_4AE67F: jne loc_4AE6A8;");
    asm("loc_4AE681: mov 0x368(%esi),%eax;");
    asm("loc_4AE687: mov %ebx,0x7F4(%esi);");
    asm("loc_4AE68D: mov %bl,0x8A0(%esi);");
    asm("loc_4AE693: mov _data_679BA4,%ecx;");
    asm("loc_4AE699: pop %esi;");
    asm("loc_4AE69A: mov %ecx,0x348(%eax);");
    asm("loc_4AE6A0: pop %ebx;");
    asm("loc_4AE6A1: add $0x80,%esp;");
    asm("loc_4AE6A7: ret;");
    asm("loc_4AE6A8: push $0xFFFFFFFF;");
    asm("loc_4AE6AA: mov %esi,%ecx;");
    asm("loc_4AE6AC: call _sub_4B0920;");
    asm("loc_4AE6B1: mov %esi,%ecx;");
    asm("loc_4AE6B3: call _sub_4B0530;");
    asm("loc_4AE6B8: mov 0x7AC(%esi),%edx;");
    asm("loc_4AE6BE: movb $0,0x848(%esi);");
    asm("loc_4AE6C5: mov _data_679B94,%eax;");
    asm("loc_4AE6CA: mov %eax,0x348(%edx);");
    asm("loc_4AE6D0: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE6D6: mov %bl,0x37C(%eax);");
    asm("loc_4AE6DC: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE6E2: andb $0xFB,0x388(%eax);");
    asm("loc_4AE6E9: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE6EF: mov 0x6C(%eax),%dl;");
    asm("loc_4AE6F2: mov $3,%cl;");
    asm("loc_4AE6F4: or %cl,%dl;");
    asm("loc_4AE6F6: mov %dl,0x6C(%eax);");
    asm("loc_4AE6F9: mov 0x7AC(%esi),%eax;");
    asm("loc_4AE6FF: or %cl,0x6C(%eax);");
    asm("loc_4AE702: mov 0x7B0(%esi),%eax;");
    asm("loc_4AE708: or %cl,0x6C(%eax);");
    asm("loc_4AE70B: mov 0x7B4(%esi),%eax;");
    asm("loc_4AE711: or %cl,0x6C(%eax);");
    asm("loc_4AE714: mov 0x344(%esi),%eax;");
    asm("loc_4AE71A: mov 0x6C(%eax),%dl;");
    asm("loc_4AE71D: or %cl,%dl;");
    asm("loc_4AE71F: push $0x40;");
    asm("loc_4AE721: lea 0xC(%esp),%ecx;");
    asm("loc_4AE725: push %ecx;");
    asm("loc_4AE726: mov %dl,0x6C(%eax);");
    asm("loc_4AE729: mov _data_67ECA8,%edx;");
    asm("loc_4AE72F: push $0x68E;");
    asm("loc_4AE734: push %edx;");
    asm("loc_4AE735: call _sub_4347E0;");
    asm("loc_4AE73A: mov 0x344(%esi),%ecx;");
    asm("loc_4AE740: mov (%ecx),%eax;");
    asm("loc_4AE742: add $0x10,%esp;");
    asm("loc_4AE745: push $0;");
    asm("loc_4AE747: lea 0xC(%esp),%edx;");
    asm("loc_4AE74B: push %edx;");
    asm("loc_4AE74C: push $0x1D;");
    asm("loc_4AE74E: calll *0xA8(%eax);");
    asm("loc_4AE754: push $0;");
    asm("loc_4AE756: mov %esi,%ecx;");
    asm("loc_4AE758: call _sub_4ABDF0;");
    asm("loc_4AE75D: push $0xFFFFFFFF;");
    asm("loc_4AE75F: mov %esi,%ecx;");
    asm("loc_4AE761: call _sub_4B2440;");
    asm("loc_4AE766: pop %esi;");
    asm("loc_4AE767: pop %ebx;");
    asm("loc_4AE768: add $0x80,%esp;");
    asm("loc_4AE76E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AE770() // _sub_4AE770
{
    __DEBUG_ASM(4AE770);
    // chunk 0x4AE770 _sub_4AE770
    asm("loc_4AE770: sub $0x80,%esp;");
    asm("loc_4AE776: push %esi;");
    asm("loc_4AE777: mov %ecx,%esi;");
    asm("loc_4AE779: mov 0x7F4(%esi),%ecx;");
    asm("loc_4AE77F: mov $2,%eax;");
    asm("loc_4AE784: cmp %eax,%ecx;");
    asm("loc_4AE786: jne loc_4AE796;");
    asm("loc_4AE788: mov 0x8A0(%esi),%cl;");
    asm("loc_4AE78E: test %cl,%cl;");
    asm("loc_4AE790: je loc_4AE886;");
    asm("loc_4AE796: mov 0x8A0(%esi),%cl;");
    asm("loc_4AE79C: test %cl,%cl;");
    asm("loc_4AE79E: jne loc_4AE7C7;");
    asm("loc_4AE7A0: mov %eax,0x7F4(%esi);");
    asm("loc_4AE7A6: mov 0x36C(%esi),%eax;");
    asm("loc_4AE7AC: movb $1,0x8A0(%esi);");
    asm("loc_4AE7B3: mov _data_679BA4,%ecx;");
    asm("loc_4AE7B9: mov %ecx,0x348(%eax);");
    asm("loc_4AE7BF: pop %esi;");
    asm("loc_4AE7C0: add $0x80,%esp;");
    asm("loc_4AE7C6: ret;");
    asm("loc_4AE7C7: push $0xFFFFFFFF;");
    asm("loc_4AE7C9: mov %esi,%ecx;");
    asm("loc_4AE7CB: call _sub_4B0920;");
    asm("loc_4AE7D0: mov %esi,%ecx;");
    asm("loc_4AE7D2: call _sub_4B0530;");
    asm("loc_4AE7D7: mov 0x7AC(%esi),%edx;");
    asm("loc_4AE7DD: movb $0,0x848(%esi);");
    asm("loc_4AE7E4: mov _data_679B94,%eax;");
    asm("loc_4AE7E9: mov %eax,0x348(%edx);");
    asm("loc_4AE7EF: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE7F5: movb $1,0x37C(%eax);");
    asm("loc_4AE7FC: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE802: andb $0xFB,0x388(%eax);");
    asm("loc_4AE809: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE80F: mov 0x6C(%eax),%dl;");
    asm("loc_4AE812: mov $3,%cl;");
    asm("loc_4AE814: or %cl,%dl;");
    asm("loc_4AE816: mov %dl,0x6C(%eax);");
    asm("loc_4AE819: mov 0x7AC(%esi),%eax;");
    asm("loc_4AE81F: or %cl,0x6C(%eax);");
    asm("loc_4AE822: mov 0x7B0(%esi),%eax;");
    asm("loc_4AE828: or %cl,0x6C(%eax);");
    asm("loc_4AE82B: mov 0x7B4(%esi),%eax;");
    asm("loc_4AE831: or %cl,0x6C(%eax);");
    asm("loc_4AE834: mov 0x344(%esi),%eax;");
    asm("loc_4AE83A: or %cl,0x6C(%eax);");
    asm("loc_4AE83D: mov 0x7A4(%esi),%eax;");
    asm("loc_4AE843: mov 0x6C(%eax),%dl;");
    asm("loc_4AE846: or %cl,%dl;");
    asm("loc_4AE848: push $0x40;");
    asm("loc_4AE84A: lea 8(%esp),%ecx;");
    asm("loc_4AE84E: push %ecx;");
    asm("loc_4AE84F: mov %dl,0x6C(%eax);");
    asm("loc_4AE852: mov _data_67ECA8,%edx;");
    asm("loc_4AE858: push $0x68D;");
    asm("loc_4AE85D: push %edx;");
    asm("loc_4AE85E: call _sub_4347E0;");
    asm("loc_4AE863: mov 0x344(%esi),%ecx;");
    asm("loc_4AE869: mov (%ecx),%eax;");
    asm("loc_4AE86B: add $0x10,%esp;");
    asm("loc_4AE86E: push $0;");
    asm("loc_4AE870: lea 8(%esp),%edx;");
    asm("loc_4AE874: push %edx;");
    asm("loc_4AE875: push $0x1D;");
    asm("loc_4AE877: calll *0xA8(%eax);");
    asm("loc_4AE87D: push $0;");
    asm("loc_4AE87F: mov %esi,%ecx;");
    asm("loc_4AE881: call _sub_4ABDF0;");
    asm("loc_4AE886: pop %esi;");
    asm("loc_4AE887: add $0x80,%esp;");
    asm("loc_4AE88D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AE890() // _sub_4AE890
{
    __DEBUG_ASM(4AE890);
    // chunk 0x4AE890 _sub_4AE890
    asm("loc_4AE890: sub $0x80,%esp;");
    asm("loc_4AE896: push %ebx;");
    asm("loc_4AE897: push %esi;");
    asm("loc_4AE898: mov %ecx,%esi;");
    asm("loc_4AE89A: mov 0x7F4(%esi),%eax;");
    asm("loc_4AE8A0: mov $3,%ebx;");
    asm("loc_4AE8A5: cmp %ebx,%eax;");
    asm("loc_4AE8A7: jne loc_4AE8B7;");
    asm("loc_4AE8A9: mov 0x8A0(%esi),%al;");
    asm("loc_4AE8AF: test %al,%al;");
    asm("loc_4AE8B1: je loc_4AE993;");
    asm("loc_4AE8B7: mov 0x8A0(%esi),%al;");
    asm("loc_4AE8BD: test %al,%al;");
    asm("loc_4AE8BF: jne loc_4AE8E9;");
    asm("loc_4AE8C1: mov 0x370(%esi),%eax;");
    asm("loc_4AE8C7: mov %ebx,0x7F4(%esi);");
    asm("loc_4AE8CD: movb $1,0x8A0(%esi);");
    asm("loc_4AE8D4: mov _data_679BA4,%ecx;");
    asm("loc_4AE8DA: pop %esi;");
    asm("loc_4AE8DB: mov %ecx,0x348(%eax);");
    asm("loc_4AE8E1: pop %ebx;");
    asm("loc_4AE8E2: add $0x80,%esp;");
    asm("loc_4AE8E8: ret;");
    asm("loc_4AE8E9: push $0xFFFFFFFF;");
    asm("loc_4AE8EB: mov %esi,%ecx;");
    asm("loc_4AE8ED: call _sub_4B0920;");
    asm("loc_4AE8F2: mov %esi,%ecx;");
    asm("loc_4AE8F4: call _sub_4B0530;");
    asm("loc_4AE8F9: mov 0x7AC(%esi),%edx;");
    asm("loc_4AE8FF: movb $0,0x848(%esi);");
    asm("loc_4AE906: mov _data_679B94,%eax;");
    asm("loc_4AE90B: mov %eax,0x348(%edx);");
    asm("loc_4AE911: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE917: movb $1,0x37C(%eax);");
    asm("loc_4AE91E: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE924: andb $0xFB,0x388(%eax);");
    asm("loc_4AE92B: mov 0x7A8(%esi),%eax;");
    asm("loc_4AE931: or %bl,0x6C(%eax);");
    asm("loc_4AE934: mov 0x7AC(%esi),%eax;");
    asm("loc_4AE93A: or %bl,0x6C(%eax);");
    asm("loc_4AE93D: mov 0x7B0(%esi),%eax;");
    asm("loc_4AE943: or %bl,0x6C(%eax);");
    asm("loc_4AE946: mov 0x7B4(%esi),%eax;");
    asm("loc_4AE94C: or %bl,0x6C(%eax);");
    asm("loc_4AE94F: mov 0x344(%esi),%eax;");
    asm("loc_4AE955: or %bl,0x6C(%eax);");
    asm("loc_4AE958: mov _data_67ECA8,%edx;");
    asm("loc_4AE95E: push $0x40;");
    asm("loc_4AE960: lea 0xC(%esp),%ecx;");
    asm("loc_4AE964: push %ecx;");
    asm("loc_4AE965: push $0x68F;");
    asm("loc_4AE96A: push %edx;");
    asm("loc_4AE96B: call _sub_4347E0;");
    asm("loc_4AE970: mov 0x344(%esi),%ecx;");
    asm("loc_4AE976: mov (%ecx),%eax;");
    asm("loc_4AE978: add $0x10,%esp;");
    asm("loc_4AE97B: push $0;");
    asm("loc_4AE97D: lea 0xC(%esp),%edx;");
    asm("loc_4AE981: push %edx;");
    asm("loc_4AE982: push $0x1D;");
    asm("loc_4AE984: calll *0xA8(%eax);");
    asm("loc_4AE98A: push $0;");
    asm("loc_4AE98C: mov %esi,%ecx;");
    asm("loc_4AE98E: call _sub_4ABDF0;");
    asm("loc_4AE993: pop %esi;");
    asm("loc_4AE994: pop %ebx;");
    asm("loc_4AE995: add $0x80,%esp;");
    asm("loc_4AE99B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AE9A0() // _sub_4AE9A0
{
    __DEBUG_ASM(4AE9A0);
    // chunk 0x4AE9A0 _sub_4AE9A0
    asm("loc_4AE9A0: sub $0x80,%esp;");
    asm("loc_4AE9A6: push %esi;");
    asm("loc_4AE9A7: mov %ecx,%esi;");
    asm("loc_4AE9A9: mov 0x7F4(%esi),%ecx;");
    asm("loc_4AE9AF: mov $4,%eax;");
    asm("loc_4AE9B4: cmp %eax,%ecx;");
    asm("loc_4AE9B6: jne loc_4AE9C6;");
    asm("loc_4AE9B8: mov 0x8A0(%esi),%cl;");
    asm("loc_4AE9BE: test %cl,%cl;");
    asm("loc_4AE9C0: je loc_4AEAA7;");
    asm("loc_4AE9C6: mov 0x8A0(%esi),%cl;");
    asm("loc_4AE9CC: test %cl,%cl;");
    asm("loc_4AE9CE: jne loc_4AE9F7;");
    asm("loc_4AE9D0: mov %eax,0x7F4(%esi);");
    asm("loc_4AE9D6: mov 0x374(%esi),%eax;");
    asm("loc_4AE9DC: movb $1,0x8A0(%esi);");
    asm("loc_4AE9E3: mov _data_679BA4,%ecx;");
    asm("loc_4AE9E9: mov %ecx,0x348(%eax);");
    asm("loc_4AE9EF: pop %esi;");
    asm("loc_4AE9F0: add $0x80,%esp;");
    asm("loc_4AE9F6: ret;");
    asm("loc_4AE9F7: mov _data_67ECA8,%eax;");
    asm("loc_4AE9FC: push $0x40;");
    asm("loc_4AE9FE: lea 8(%esp),%edx;");
    asm("loc_4AEA02: push %edx;");
    asm("loc_4AEA03: push $0x765;");
    asm("loc_4AEA08: push %eax;");
    asm("loc_4AEA09: call _sub_4347E0;");
    asm("loc_4AEA0E: mov 0x7B4(%esi),%ecx;");
    asm("loc_4AEA14: mov (%ecx),%edx;");
    asm("loc_4AEA16: add $0x10,%esp;");
    asm("loc_4AEA19: push $0;");
    asm("loc_4AEA1B: lea 8(%esp),%eax;");
    asm("loc_4AEA1F: push %eax;");
    asm("loc_4AEA20: push $0x1D;");
    asm("loc_4AEA22: calll *0xA8(%edx);");
    asm("loc_4AEA28: mov 0x7F0(%esi),%eax;");
    asm("loc_4AEA2E: movl $0,0x8A8(%esi);");
    asm("loc_4AEA38: movl $0,0x8AC(%esi);");
    asm("loc_4AEA42: mov 0x6C(%eax),%dl;");
    asm("loc_4AEA45: mov $3,%cl;");
    asm("loc_4AEA47: or %cl,%dl;");
    asm("loc_4AEA49: mov %dl,0x6C(%eax);");
    asm("loc_4AEA4C: mov 0x7B0(%esi),%eax;");
    asm("loc_4AEA52: or %cl,0x6C(%eax);");
    asm("loc_4AEA55: mov 0x7B4(%esi),%eax;");
    asm("loc_4AEA5B: or %cl,0x6C(%eax);");
    asm("loc_4AEA5E: mov 0x344(%esi),%eax;");
    asm("loc_4AEA64: mov 0x6C(%eax),%dl;");
    asm("loc_4AEA67: or %cl,%dl;");
    asm("loc_4AEA69: push $0x40;");
    asm("loc_4AEA6B: lea 8(%esp),%ecx;");
    asm("loc_4AEA6F: push %ecx;");
    asm("loc_4AEA70: mov %dl,0x6C(%eax);");
    asm("loc_4AEA73: mov _data_67ECA8,%edx;");
    asm("loc_4AEA79: push $0x532;");
    asm("loc_4AEA7E: push %edx;");
    asm("loc_4AEA7F: call _sub_4347E0;");
    asm("loc_4AEA84: mov 0x344(%esi),%ecx;");
    asm("loc_4AEA8A: mov (%ecx),%eax;");
    asm("loc_4AEA8C: add $0x10,%esp;");
    asm("loc_4AEA8F: push $0;");
    asm("loc_4AEA91: lea 8(%esp),%edx;");
    asm("loc_4AEA95: push %edx;");
    asm("loc_4AEA96: push $0x1D;");
    asm("loc_4AEA98: calll *0xA8(%eax);");
    asm("loc_4AEA9E: push $0;");
    asm("loc_4AEAA0: mov %esi,%ecx;");
    asm("loc_4AEAA2: call _sub_4ABDF0;");
    asm("loc_4AEAA7: pop %esi;");
    asm("loc_4AEAA8: add $0x80,%esp;");
    asm("loc_4AEAAE: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AEAB0() // _sub_4AEAB0
{
    __DEBUG_ASM(4AEAB0);
    // chunk 0x4AEAB0 _sub_4AEAB0
    asm("loc_4AEAB0: mov 0x848(%ecx),%al;");
    asm("loc_4AEAB6: test %al,%al;");
    asm("loc_4AEAB8: je loc_4AEAC2;");
    asm("loc_4AEABA: push $1;");
    asm("loc_4AEABC: call _sub_4B2540;");
    asm("loc_4AEAC1: ret;");
    asm("loc_4AEAC2: push %ebx;");
    asm("loc_4AEAC3: push %esi;");
    asm("loc_4AEAC4: push %edi;");
    asm("loc_4AEAC5: lea 0x3B0(%ecx),%eax;");
    asm("loc_4AEACB: mov $0xD,%edi;");
    asm("loc_4AEAD0: mov $0xFC,%dl;");
    asm("loc_4AEAD2: mov -0x34(%eax),%esi;");
    asm("loc_4AEAD5: and %dl,0x6C(%esi);");
    asm("loc_4AEAD8: mov (%eax),%esi;");
    asm("loc_4AEADA: and %dl,0x6C(%esi);");
    asm("loc_4AEADD: mov 0x34(%eax),%esi;");
    asm("loc_4AEAE0: and %dl,0x6C(%esi);");
    asm("loc_4AEAE3: mov 0xA0(%eax),%esi;");
    asm("loc_4AEAE9: and %dl,0x6C(%esi);");
    asm("loc_4AEAEC: mov 0xD4(%eax),%esi;");
    asm("loc_4AEAF2: mov 0x6C(%esi),%bl;");
    asm("loc_4AEAF5: and %dl,%bl;");
    asm("loc_4AEAF7: add $4,%eax;");
    asm("loc_4AEAFA: dec %edi;");
    asm("loc_4AEAFB: mov %bl,0x6C(%esi);");
    asm("loc_4AEAFE: jne loc_4AEAD2;");
    asm("loc_4AEB00: lea 0x418(%ecx),%esi;");
    asm("loc_4AEB06: mov $0xE,%edi;");
    asm("loc_4AEB0B: nop;");
    asm("loc_4AEB0C: lea (%esp),%esp;");
    asm("loc_4AEB10: mov (%esi),%eax;");
    asm("loc_4AEB12: mov 0x6C(%eax),%bl;");
    asm("loc_4AEB15: and %dl,%bl;");
    asm("loc_4AEB17: add $4,%esi;");
    asm("loc_4AEB1A: dec %edi;");
    asm("loc_4AEB1B: mov %bl,0x6C(%eax);");
    asm("loc_4AEB1E: jne loc_4AEB10;");
    asm("loc_4AEB20: lea 0x4C4(%ecx),%eax;");
    asm("loc_4AEB26: mov $3,%edi;");
    asm("loc_4AEB2B: nop;");
    asm("loc_4AEB2C: lea (%esp),%esp;");
    asm("loc_4AEB30: mov 0x10(%eax),%esi;");
    asm("loc_4AEB33: and %dl,0x6C(%esi);");
    asm("loc_4AEB36: mov (%eax),%esi;");
    asm("loc_4AEB38: mov 0x6C(%esi),%bl;");
    asm("loc_4AEB3B: and %dl,%bl;");
    asm("loc_4AEB3D: add $4,%eax;");
    asm("loc_4AEB40: dec %edi;");
    asm("loc_4AEB41: mov %bl,0x6C(%esi);");
    asm("loc_4AEB44: jne loc_4AEB30;");
    asm("loc_4AEB46: mov 0x4BC(%ecx),%eax;");
    asm("loc_4AEB4C: and %dl,0x6C(%eax);");
    asm("loc_4AEB4F: mov 0x4C0(%ecx),%eax;");
    asm("loc_4AEB55: and %dl,0x6C(%eax);");
    asm("loc_4AEB58: mov 0x4B8(%ecx),%eax;");
    asm("loc_4AEB5E: and %dl,0x6C(%eax);");
    asm("loc_4AEB61: mov 0x7A8(%ecx),%eax;");
    asm("loc_4AEB67: and %dl,0x6C(%eax);");
    asm("loc_4AEB6A: mov 0x7AC(%ecx),%eax;");
    asm("loc_4AEB70: and %dl,0x6C(%eax);");
    asm("loc_4AEB73: mov 0x7B0(%ecx),%eax;");
    asm("loc_4AEB79: and %dl,0x6C(%eax);");
    asm("loc_4AEB7C: mov 0x7B4(%ecx),%eax;");
    asm("loc_4AEB82: and %dl,0x6C(%eax);");
    asm("loc_4AEB85: mov 0x344(%ecx),%eax;");
    asm("loc_4AEB8B: and %dl,0x6C(%eax);");
    asm("loc_4AEB8E: mov 0x364(%ecx),%eax;");
    asm("loc_4AEB94: mov _data_679BB0,%ecx;");
    asm("loc_4AEB9A: pop %edi;");
    asm("loc_4AEB9B: pop %esi;");
    asm("loc_4AEB9C: mov %ecx,0x348(%eax);");
    asm("loc_4AEBA2: pop %ebx;");
    asm("loc_4AEBA3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AEBB0() // _sub_4AEBB0
{
    __DEBUG_ASM(4AEBB0);
    // chunk 0x4AEBB0 _sub_4AEBB0
    asm("loc_4AEBB0: mov 0x848(%ecx),%al;");
    asm("loc_4AEBB6: test %al,%al;");
    asm("loc_4AEBB8: je loc_4AEBC2;");
    asm("loc_4AEBBA: push $1;");
    asm("loc_4AEBBC: call _sub_4B2540;");
    asm("loc_4AEBC1: ret;");
    asm("loc_4AEBC2: push %esi;");
    asm("loc_4AEBC3: push %edi;");
    asm("loc_4AEBC4: lea 0x5AC(%ecx),%eax;");
    asm("loc_4AEBCA: mov $0xE,%edi;");
    asm("loc_4AEBCF: mov $0xFC,%dl;");
    asm("loc_4AEBD1: mov -0x38(%eax),%esi;");
    asm("loc_4AEBD4: and %dl,0x6C(%esi);");
    asm("loc_4AEBD7: mov (%eax),%esi;");
    asm("loc_4AEBD9: and %dl,0x6C(%esi);");
    asm("loc_4AEBDC: mov 0x38(%eax),%esi;");
    asm("loc_4AEBDF: and %dl,0x6C(%esi);");
    asm("loc_4AEBE2: mov 0xA8(%eax),%esi;");
    asm("loc_4AEBE8: and %dl,0x6C(%esi);");
    asm("loc_4AEBEB: mov 0x150(%eax),%esi;");
    asm("loc_4AEBF1: and %dl,0x6C(%esi);");
    asm("loc_4AEBF4: mov 0xE0(%eax),%esi;");
    asm("loc_4AEBFA: and %dl,0x6C(%esi);");
    asm("loc_4AEBFD: mov 0x118(%eax),%esi;");
    asm("loc_4AEC03: and %dl,0x6C(%esi);");
    asm("loc_4AEC06: mov 0x188(%eax),%esi;");
    asm("loc_4AEC0C: and %dl,0x6C(%esi);");
    asm("loc_4AEC0F: mov 0x1C0(%eax),%esi;");
    asm("loc_4AEC15: and %dl,0x6C(%esi);");
    asm("loc_4AEC18: mov 0x70(%eax),%esi;");
    asm("loc_4AEC1B: and %dl,0x6C(%esi);");
    asm("loc_4AEC1E: mov 0x38(%eax),%esi;");
    asm("loc_4AEC21: orb $2,0x331(%esi);");
    asm("loc_4AEC28: add $4,%eax;");
    asm("loc_4AEC2B: dec %edi;");
    asm("loc_4AEC2C: jne loc_4AEBD1;");
    asm("loc_4AEC2E: mov 0x564(%ecx),%eax;");
    asm("loc_4AEC34: and %dl,0x6C(%eax);");
    asm("loc_4AEC37: mov 0x568(%ecx),%eax;");
    asm("loc_4AEC3D: and %dl,0x6C(%eax);");
    asm("loc_4AEC40: mov 0x56C(%ecx),%eax;");
    asm("loc_4AEC46: and %dl,0x6C(%eax);");
    asm("loc_4AEC49: mov 0x570(%ecx),%eax;");
    asm("loc_4AEC4F: and %dl,0x6C(%eax);");
    asm("loc_4AEC52: mov 0x344(%ecx),%eax;");
    asm("loc_4AEC58: and %dl,0x6C(%eax);");
    asm("loc_4AEC5B: mov 0x7A8(%ecx),%eax;");
    asm("loc_4AEC61: and %dl,0x6C(%eax);");
    asm("loc_4AEC64: mov 0x7AC(%ecx),%eax;");
    asm("loc_4AEC6A: and %dl,0x6C(%eax);");
    asm("loc_4AEC6D: mov 0x7B0(%ecx),%eax;");
    asm("loc_4AEC73: and %dl,0x6C(%eax);");
    asm("loc_4AEC76: mov 0x7B4(%ecx),%eax;");
    asm("loc_4AEC7C: and %dl,0x6C(%eax);");
    asm("loc_4AEC7F: mov 0x368(%ecx),%eax;");
    asm("loc_4AEC85: mov _data_679BB0,%ecx;");
    asm("loc_4AEC8B: pop %edi;");
    asm("loc_4AEC8C: pop %esi;");
    asm("loc_4AEC8D: mov %ecx,0x348(%eax);");
    asm("loc_4AEC93: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AECA0() // _sub_4AECA0
{
    __DEBUG_ASM(4AECA0);
    // chunk 0x4AECA0 _sub_4AECA0
    asm("loc_4AECA0: mov 0x848(%ecx),%al;");
    asm("loc_4AECA6: test %al,%al;");
    asm("loc_4AECA8: je loc_4AECB2;");
    asm("loc_4AECAA: push $1;");
    asm("loc_4AECAC: call _sub_4B2540;");
    asm("loc_4AECB1: ret;");
    asm("loc_4AECB2: push %ebx;");
    asm("loc_4AECB3: push %esi;");
    asm("loc_4AECB4: push %edi;");
    asm("loc_4AECB5: lea 0x5AC(%ecx),%eax;");
    asm("loc_4AECBB: mov $0xE,%edi;");
    asm("loc_4AECC0: mov $0xFC,%dl;");
    asm("loc_4AECC2: mov -0x38(%eax),%esi;");
    asm("loc_4AECC5: and %dl,0x6C(%esi);");
    asm("loc_4AECC8: mov (%eax),%esi;");
    asm("loc_4AECCA: and %dl,0x6C(%esi);");
    asm("loc_4AECCD: mov 0x38(%eax),%esi;");
    asm("loc_4AECD0: and %dl,0x6C(%esi);");
    asm("loc_4AECD3: mov 0xA8(%eax),%esi;");
    asm("loc_4AECD9: and %dl,0x6C(%esi);");
    asm("loc_4AECDC: mov 0x150(%eax),%esi;");
    asm("loc_4AECE2: and %dl,0x6C(%esi);");
    asm("loc_4AECE5: mov 0xE0(%eax),%esi;");
    asm("loc_4AECEB: and %dl,0x6C(%esi);");
    asm("loc_4AECEE: mov 0x118(%eax),%esi;");
    asm("loc_4AECF4: and %dl,0x6C(%esi);");
    asm("loc_4AECF7: mov 0x188(%eax),%esi;");
    asm("loc_4AECFD: and %dl,0x6C(%esi);");
    asm("loc_4AED00: mov 0x1C0(%eax),%esi;");
    asm("loc_4AED06: and %dl,0x6C(%esi);");
    asm("loc_4AED09: mov 0x70(%eax),%esi;");
    asm("loc_4AED0C: mov 0x6C(%esi),%bl;");
    asm("loc_4AED0F: and %dl,%bl;");
    asm("loc_4AED11: add $4,%eax;");
    asm("loc_4AED14: dec %edi;");
    asm("loc_4AED15: mov %bl,0x6C(%esi);");
    asm("loc_4AED18: jne loc_4AECC2;");
    asm("loc_4AED1A: mov 0x344(%ecx),%eax;");
    asm("loc_4AED20: and %dl,0x6C(%eax);");
    asm("loc_4AED23: mov 0x7A8(%ecx),%eax;");
    asm("loc_4AED29: and %dl,0x6C(%eax);");
    asm("loc_4AED2C: mov 0x7AC(%ecx),%eax;");
    asm("loc_4AED32: and %dl,0x6C(%eax);");
    asm("loc_4AED35: mov 0x7B0(%ecx),%eax;");
    asm("loc_4AED3B: and %dl,0x6C(%eax);");
    asm("loc_4AED3E: mov 0x7B4(%ecx),%eax;");
    asm("loc_4AED44: and %dl,0x6C(%eax);");
    asm("loc_4AED47: mov 0x7A4(%ecx),%eax;");
    asm("loc_4AED4D: and %dl,0x6C(%eax);");
    asm("loc_4AED50: mov 0x36C(%ecx),%eax;");
    asm("loc_4AED56: mov _data_679BB0,%ecx;");
    asm("loc_4AED5C: pop %edi;");
    asm("loc_4AED5D: pop %esi;");
    asm("loc_4AED5E: mov %ecx,0x348(%eax);");
    asm("loc_4AED64: pop %ebx;");
    asm("loc_4AED65: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AED70() // _sub_4AED70
{
    __DEBUG_ASM(4AED70);
    // chunk 0x4AED70 _sub_4AED70
    asm("loc_4AED70: mov 0x848(%ecx),%al;");
    asm("loc_4AED76: test %al,%al;");
    asm("loc_4AED78: je loc_4AED82;");
    asm("loc_4AED7A: push $1;");
    asm("loc_4AED7C: call _sub_4B2540;");
    asm("loc_4AED81: ret;");
    asm("loc_4AED82: push %ebx;");
    asm("loc_4AED83: push %esi;");
    asm("loc_4AED84: push %edi;");
    asm("loc_4AED85: lea 0x5AC(%ecx),%eax;");
    asm("loc_4AED8B: mov $0xE,%edi;");
    asm("loc_4AED90: mov $0xFC,%dl;");
    asm("loc_4AED92: mov -0x38(%eax),%esi;");
    asm("loc_4AED95: and %dl,0x6C(%esi);");
    asm("loc_4AED98: mov (%eax),%esi;");
    asm("loc_4AED9A: and %dl,0x6C(%esi);");
    asm("loc_4AED9D: mov 0x38(%eax),%esi;");
    asm("loc_4AEDA0: and %dl,0x6C(%esi);");
    asm("loc_4AEDA3: mov 0xA8(%eax),%esi;");
    asm("loc_4AEDA9: and %dl,0x6C(%esi);");
    asm("loc_4AEDAC: mov 0x150(%eax),%esi;");
    asm("loc_4AEDB2: and %dl,0x6C(%esi);");
    asm("loc_4AEDB5: mov 0xE0(%eax),%esi;");
    asm("loc_4AEDBB: and %dl,0x6C(%esi);");
    asm("loc_4AEDBE: mov 0x118(%eax),%esi;");
    asm("loc_4AEDC4: and %dl,0x6C(%esi);");
    asm("loc_4AEDC7: mov 0x188(%eax),%esi;");
    asm("loc_4AEDCD: and %dl,0x6C(%esi);");
    asm("loc_4AEDD0: mov 0x1C0(%eax),%esi;");
    asm("loc_4AEDD6: and %dl,0x6C(%esi);");
    asm("loc_4AEDD9: mov 0x70(%eax),%esi;");
    asm("loc_4AEDDC: mov 0x6C(%esi),%bl;");
    asm("loc_4AEDDF: and %dl,%bl;");
    asm("loc_4AEDE1: add $4,%eax;");
    asm("loc_4AEDE4: dec %edi;");
    asm("loc_4AEDE5: mov %bl,0x6C(%esi);");
    asm("loc_4AEDE8: jne loc_4AED92;");
    asm("loc_4AEDEA: mov 0x344(%ecx),%eax;");
    asm("loc_4AEDF0: and %dl,0x6C(%eax);");
    asm("loc_4AEDF3: mov 0x7A8(%ecx),%eax;");
    asm("loc_4AEDF9: and %dl,0x6C(%eax);");
    asm("loc_4AEDFC: mov 0x7AC(%ecx),%eax;");
    asm("loc_4AEE02: and %dl,0x6C(%eax);");
    asm("loc_4AEE05: mov 0x7B0(%ecx),%eax;");
    asm("loc_4AEE0B: and %dl,0x6C(%eax);");
    asm("loc_4AEE0E: mov 0x7B4(%ecx),%eax;");
    asm("loc_4AEE14: and %dl,0x6C(%eax);");
    asm("loc_4AEE17: mov 0x370(%ecx),%eax;");
    asm("loc_4AEE1D: mov _data_679BB0,%ecx;");
    asm("loc_4AEE23: pop %edi;");
    asm("loc_4AEE24: pop %esi;");
    asm("loc_4AEE25: mov %ecx,0x348(%eax);");
    asm("loc_4AEE2B: pop %ebx;");
    asm("loc_4AEE2C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AEE30() // _sub_4AEE30
{
    asm("jmp dgb_4AEE30;"); // jumptable skip
    asm(".long _jmp_4AF0EC;"); // jumptable address
    __DEBUG_ASM(4AEE30);
    // chunk 0x4AEE30 _sub_4AEE30
    asm("loc_4AEE30: sub $0x80,%esp;");
    asm("loc_4AEE36: push %esi;");
    asm("loc_4AEE37: mov %ecx,%esi;");
    asm("loc_4AEE39: mov 0x7F8(%esi),%eax;");
    asm("loc_4AEE3F: cmp $5,%eax;");
    asm("loc_4AEE42: push %edi;");
    asm("loc_4AEE43: je loc_4AEE5B;");
    asm("loc_4AEE45: cmp $6,%eax;");
    asm("loc_4AEE48: je loc_4AEE5B;");
    asm("loc_4AEE4A: push $2;");
    asm("loc_4AEE4C: call _sub_5645C0;");
    asm("loc_4AEE51: push $5;");
    asm("loc_4AEE53: call _sub_5645C0;");
    asm("loc_4AEE58: add $8,%esp;");
    asm("loc_4AEE5B: mov 0x7F8(%esi),%eax;");
    asm("loc_4AEE61: cmp $6,%eax;");
    asm("loc_4AEE64: ja loc_4AF0E1;");
    asm("loc_4AEE6A: jmpl *_jmp_4AF0EC(,%eax,4);");
    asm("loc_4AEE71: mov %esi,%ecx;");
    asm("loc_4AEE73: call _sub_4AE4B0;");
    asm("loc_4AEE78: pop %edi;");
    asm("loc_4AEE79: pop %esi;");
    asm("loc_4AEE7A: add $0x80,%esp;");
    asm("loc_4AEE80: ret;");
    asm("loc_4AEE81: mov %esi,%ecx;");
    asm("loc_4AEE83: call _sub_4AE650;");
    asm("loc_4AEE88: pop %edi;");
    asm("loc_4AEE89: pop %esi;");
    asm("loc_4AEE8A: add $0x80,%esp;");
    asm("loc_4AEE90: ret;");
    asm("loc_4AEE91: mov %esi,%ecx;");
    asm("loc_4AEE93: call _sub_4AE770;");
    asm("loc_4AEE98: pop %edi;");
    asm("loc_4AEE99: pop %esi;");
    asm("loc_4AEE9A: add $0x80,%esp;");
    asm("loc_4AEEA0: ret;");
    asm("loc_4AEEA1: mov %esi,%ecx;");
    asm("loc_4AEEA3: call _sub_4AE890;");
    asm("loc_4AEEA8: pop %edi;");
    asm("loc_4AEEA9: pop %esi;");
    asm("loc_4AEEAA: add $0x80,%esp;");
    asm("loc_4AEEB0: ret;");
    asm("loc_4AEEB1: mov %esi,%ecx;");
    asm("loc_4AEEB3: call _sub_4AE9A0;");
    asm("loc_4AEEB8: pop %edi;");
    asm("loc_4AEEB9: pop %esi;");
    asm("loc_4AEEBA: add $0x80,%esp;");
    asm("loc_4AEEC0: ret;");
    asm("loc_4AEEC1: mov 0x32D(%esi),%al;");
    asm("loc_4AEEC7: test %al,%al;");
    asm("loc_4AEEC9: jne loc_4AF03D;");
    asm("loc_4AEECF: mov 0x34C(%esi),%eax;");
    asm("loc_4AEED5: movb $1,0x8A2(%esi);");
    asm("loc_4AEEDC: xor %edi,%edi;");
    asm("loc_4AEEDE: mov %edi,0x840(%esi);");
    asm("loc_4AEEE4: mov %edi,0x844(%esi);");
    asm("loc_4AEEEA: mov 0x331(%eax),%dl;");
    asm("loc_4AEEF0: mov $0xFD,%cl;");
    asm("loc_4AEEF2: and %cl,%dl;");
    asm("loc_4AEEF4: mov %dl,0x331(%eax);");
    asm("loc_4AEEFA: mov 0x350(%esi),%eax;");
    asm("loc_4AEF00: push %ebx;");
    asm("loc_4AEF01: and %cl,0x331(%eax);");
    asm("loc_4AEF07: mov 0x354(%esi),%eax;");
    asm("loc_4AEF0D: and %cl,0x331(%eax);");
    asm("loc_4AEF13: mov 0x358(%esi),%eax;");
    asm("loc_4AEF19: and %cl,0x331(%eax);");
    asm("loc_4AEF1F: mov 0x360(%esi),%eax;");
    asm("loc_4AEF25: and %cl,0x331(%eax);");
    asm("loc_4AEF2B: mov 0x7F4(%esi),%eax;");
    asm("loc_4AEF31: cmp $4,%eax;");
    asm("loc_4AEF34: ja loc_4AF026;");
    asm("loc_4AEF3A: jmpl *_jmp_4AF108(,%eax,4);");
    asm("loc_4AEF41: mov %esi,%ecx;");
    asm("loc_4AEF43: call _sub_4AEAB0;");
    asm("loc_4AEF48: push $_data_5D5088;");
    asm("loc_4AEF4D: call _sub_5B3EC0;");
    asm("loc_4AEF52: add $4,%esp;");
    asm("loc_4AEF55: pop %ebx;");
    asm("loc_4AEF56: pop %edi;");
    asm("loc_4AEF57: pop %esi;");
    asm("loc_4AEF58: add $0x80,%esp;");
    asm("loc_4AEF5E: ret;");
    asm("loc_4AEF5F: mov %esi,%ecx;");
    asm("loc_4AEF61: call _sub_4AEBB0;");
    asm("loc_4AEF66: push $_data_5D5088;");
    asm("loc_4AEF6B: call _sub_5B3EC0;");
    asm("loc_4AEF70: add $4,%esp;");
    asm("loc_4AEF73: pop %ebx;");
    asm("loc_4AEF74: pop %edi;");
    asm("loc_4AEF75: pop %esi;");
    asm("loc_4AEF76: add $0x80,%esp;");
    asm("loc_4AEF7C: ret;");
    asm("loc_4AEF7D: mov %esi,%ecx;");
    asm("loc_4AEF7F: call _sub_4AECA0;");
    asm("loc_4AEF84: push $_data_5D5088;");
    asm("loc_4AEF89: call _sub_5B3EC0;");
    asm("loc_4AEF8E: add $4,%esp;");
    asm("loc_4AEF91: pop %ebx;");
    asm("loc_4AEF92: pop %edi;");
    asm("loc_4AEF93: pop %esi;");
    asm("loc_4AEF94: add $0x80,%esp;");
    asm("loc_4AEF9A: ret;");
    asm("loc_4AEF9B: mov %esi,%ecx;");
    asm("loc_4AEF9D: call _sub_4AED70;");
    asm("loc_4AEFA2: push $_data_5D5088;");
    asm("loc_4AEFA7: call _sub_5B3EC0;");
    asm("loc_4AEFAC: add $4,%esp;");
    asm("loc_4AEFAF: pop %ebx;");
    asm("loc_4AEFB0: pop %edi;");
    asm("loc_4AEFB1: pop %esi;");
    asm("loc_4AEFB2: add $0x80,%esp;");
    asm("loc_4AEFB8: ret;");
    asm("loc_4AEFB9: mov 0x7F0(%esi),%eax;");
    asm("loc_4AEFBF: mov 0x6C(%eax),%cl;");
    asm("loc_4AEFC2: mov $0xFC,%bl;");
    asm("loc_4AEFC4: and %bl,%cl;");
    asm("loc_4AEFC6: mov %cl,0x6C(%eax);");
    asm("loc_4AEFC9: mov 0x374(%esi),%eax;");
    asm("loc_4AEFCF: mov _data_679BB0,%ecx;");
    asm("loc_4AEFD5: push $0x40;");
    asm("loc_4AEFD7: lea 0x10(%esp),%edx;");
    asm("loc_4AEFDB: push %edx;");
    asm("loc_4AEFDC: mov %ecx,0x348(%eax);");
    asm("loc_4AEFE2: mov _data_67ECA8,%eax;");
    asm("loc_4AEFE7: push $0x5E4;");
    asm("loc_4AEFEC: push %eax;");
    asm("loc_4AEFED: call _sub_4347E0;");
    asm("loc_4AEFF2: mov 0x7B4(%esi),%ecx;");
    asm("loc_4AEFF8: mov (%ecx),%edx;");
    asm("loc_4AEFFA: add $0x10,%esp;");
    asm("loc_4AEFFD: push %edi;");
    asm("loc_4AEFFE: lea 0x10(%esp),%eax;");
    asm("loc_4AF002: push %eax;");
    asm("loc_4AF003: push $0x1D;");
    asm("loc_4AF005: calll *0xA8(%edx);");
    asm("loc_4AF00B: mov 0x7B0(%esi),%eax;");
    asm("loc_4AF011: and %bl,0x6C(%eax);");
    asm("loc_4AF014: mov 0x7B4(%esi),%eax;");
    asm("loc_4AF01A: and %bl,0x6C(%eax);");
    asm("loc_4AF01D: mov 0x344(%esi),%esi;");
    asm("loc_4AF023: and %bl,0x6C(%esi);");
    asm("loc_4AF026: push $_data_5D5088;");
    asm("loc_4AF02B: call _sub_5B3EC0;");
    asm("loc_4AF030: add $4,%esp;");
    asm("loc_4AF033: pop %ebx;");
    asm("loc_4AF034: pop %edi;");
    asm("loc_4AF035: pop %esi;");
    asm("loc_4AF036: add $0x80,%esp;");
    asm("loc_4AF03C: ret;");
    asm("loc_4AF03D: xor %ecx,%ecx;");
    asm("loc_4AF03F: mov 0x84B(%esi),%cl;");
    asm("loc_4AF045: movb $1,0x32C(%esi);");
    asm("loc_4AF04C: push %ecx;");
    asm("loc_4AF04D: call _sub_4A7690;");
    asm("loc_4AF052: push $_data_5D5088;");
    asm("loc_4AF057: movb $0,_data_67DCC8;");
    asm("loc_4AF05E: call _sub_5B3EC0;");
    asm("loc_4AF063: mov 0xC(%esi),%eax;");
    asm("loc_4AF066: add $8,%esp;");
    asm("loc_4AF069: test %eax,%eax;");
    asm("loc_4AF06B: je loc_4AF0D2;");
    asm("loc_4AF06D: lea (%ecx),%ecx;");
    asm("loc_4AF070: mov 8(%eax),%edi;");
    asm("loc_4AF073: push %eax;");
    asm("loc_4AF074: call _sub_43D2A0;");
    asm("loc_4AF079: add $4,%esp;");
    asm("loc_4AF07C: test %edi,%edi;");
    asm("loc_4AF07E: mov %edi,%eax;");
    asm("loc_4AF080: jne loc_4AF070;");
    asm("loc_4AF082: jmp loc_4AF0D2;");
    asm("loc_4AF084: movb $1,0x32C(%esi);");
    asm("loc_4AF08B: movb $0,_data_67DCC8;");
    asm("loc_4AF092: mov 0x32D(%esi),%al;");
    asm("loc_4AF098: test %al,%al;");
    asm("loc_4AF09A: je loc_4AF0E1;");
    asm("loc_4AF09C: xor %ecx,%ecx;");
    asm("loc_4AF09E: mov 0x84B(%esi),%cl;");
    asm("loc_4AF0A4: push %ecx;");
    asm("loc_4AF0A5: call _sub_4A7690;");
    asm("loc_4AF0AA: push $_data_5D5088;");
    asm("loc_4AF0AF: call _sub_5B3EC0;");
    asm("loc_4AF0B4: mov 0xC(%esi),%eax;");
    asm("loc_4AF0B7: add $8,%esp;");
    asm("loc_4AF0BA: test %eax,%eax;");
    asm("loc_4AF0BC: je loc_4AF0D2;");
    asm("loc_4AF0BE: mov %edi,%edi;");
    asm("loc_4AF0C0: mov 8(%eax),%edi;");
    asm("loc_4AF0C3: push %eax;");
    asm("loc_4AF0C4: call _sub_43D2A0;");
    asm("loc_4AF0C9: add $4,%esp;");
    asm("loc_4AF0CC: test %edi,%edi;");
    asm("loc_4AF0CE: mov %edi,%eax;");
    asm("loc_4AF0D0: jne loc_4AF0C0;");
    asm("loc_4AF0D2: mov (%esi),%edx;");
    asm("loc_4AF0D4: mov %esi,%ecx;");
    asm("loc_4AF0D6: calll *0x28(%edx);");
    asm("loc_4AF0D9: mov (%esi),%eax;");
    asm("loc_4AF0DB: mov %esi,%ecx;");
    asm("loc_4AF0DD: push $1;");
    asm("loc_4AF0DF: calll *(%eax);");
    asm("loc_4AF0E1: pop %edi;");
    asm("loc_4AF0E2: pop %esi;");
    asm("loc_4AF0E3: add $0x80,%esp;");
    asm("loc_4AF0E9: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_4AF0EC: .long loc_4AEE71;");
    asm(".long loc_4AEE81;");
    asm(".long loc_4AEE91;");
    asm(".long loc_4AEEA1;");
    asm(".long loc_4AEEB1;");
    asm(".long loc_4AEEC1;");
    asm(".long loc_4AF084;");
    asm("_jmp_4AF108: .long loc_4AEF41;");
    asm(".long loc_4AEF5F;");
    asm(".long loc_4AEF7D;");
    asm(".long loc_4AEF9B;");
    asm(".long loc_4AEFB9;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4AEE30);
_naked _weak void _sub_4AF120() // _sub_4AF120
{
    __DEBUG_ASM(4AF120);
    // chunk 0x4AF120 _sub_4AF120
    asm("loc_4AF120: sub $0x1C,%esp;");
    asm("loc_4AF123: push %ebp;");
    asm("loc_4AF124: push %esi;");
    asm("loc_4AF125: mov 0x28(%esp),%esi;");
    asm("loc_4AF129: movl $0,8(%esi);");
    asm("loc_4AF130: movl $0,0xC(%esi);");
    asm("loc_4AF137: mov _import_5C6DE0,%eax;");
    asm("loc_4AF13C: push %edi;");
    asm("loc_4AF13D: movl $0,0x2C(%esp);");
    asm("loc_4AF145: mov (%eax),%eax;");
    asm("loc_4AF147: mov (%eax),%ecx;");
    asm("loc_4AF149: lea 0x2C(%esp),%edx;");
    asm("loc_4AF14D: push %edx;");
    asm("loc_4AF14E: push %eax;");
    asm("loc_4AF14F: calll *0x24(%ecx);");
    asm("loc_4AF152: mov 0x2C(%esp),%eax;");
    asm("loc_4AF156: xor %edi,%edi;");
    asm("loc_4AF158: test %eax,%eax;");
    asm("loc_4AF15A: jbe loc_4AF202;");
    asm("loc_4AF160: mov 0x38(%esp),%ebp;");
    asm("loc_4AF164: push $0;");
    asm("loc_4AF166: call _sub_5B7010;");
    asm("loc_4AF16B: push $0;");
    asm("loc_4AF16D: mov %eax,0x24(%esp);");
    asm("loc_4AF171: call _sub_5B7010;");
    asm("loc_4AF176: add $8,%esp;");
    asm("loc_4AF179: mov %eax,0x20(%esp);");
    asm("loc_4AF17D: mov _import_5C6DE0,%eax;");
    asm("loc_4AF182: mov (%eax),%eax;");
    asm("loc_4AF184: mov (%eax),%ecx;");
    asm("loc_4AF186: push %edi;");
    asm("loc_4AF187: lea 0x10(%esp),%edx;");
    asm("loc_4AF18B: push %edx;");
    asm("loc_4AF18C: push %eax;");
    asm("loc_4AF18D: calll *0x28(%ecx);");
    asm("loc_4AF190: test %eax,%eax;");
    asm("loc_4AF192: jne loc_4AF1ED;");
    asm("loc_4AF194: mov 0x1C(%esp),%eax;");
    asm("loc_4AF198: cmp $1,%eax;");
    asm("loc_4AF19B: je loc_4AF1ED;");
    asm("loc_4AF19D: mov 0x30(%esp),%ecx;");
    asm("loc_4AF1A1: test %ecx,%ecx;");
    asm("loc_4AF1A3: je loc_4AF1AB;");
    asm("loc_4AF1A5: cmp 0x10(%esp),%ecx;");
    asm("loc_4AF1A9: jne loc_4AF1ED;");
    asm("loc_4AF1AB: mov 0x34(%esp),%ecx;");
    asm("loc_4AF1AF: test %ecx,%ecx;");
    asm("loc_4AF1B1: je loc_4AF1B9;");
    asm("loc_4AF1B3: cmp 0x14(%esp),%ecx;");
    asm("loc_4AF1B7: jne loc_4AF1ED;");
    asm("loc_4AF1B9: push %eax;");
    asm("loc_4AF1BA: call _sub_5B7030;");
    asm("loc_4AF1BF: add $4,%esp;");
    asm("loc_4AF1C2: test %ebp,%ebp;");
    asm("loc_4AF1C4: jle loc_4AF1CB;");
    asm("loc_4AF1C6: cmp 4(%eax),%ebp;");
    asm("loc_4AF1C9: jmp loc_4AF1D1;");
    asm("loc_4AF1CB: mov 4(%eax),%eax;");
    asm("loc_4AF1CE: cmp %eax,0x10(%esi);");
    asm("loc_4AF1D1: jne loc_4AF1ED;");
    asm("loc_4AF1D3: mov 0x14(%esp),%ecx;");
    asm("loc_4AF1D7: mov 0x10(%esp),%eax;");
    asm("loc_4AF1DB: lea (,%ecx,4),%edx;");
    asm("loc_4AF1E2: lea (%eax,%eax,2),%ebp;");
    asm("loc_4AF1E5: cmp %edx,%ebp;");
    asm("loc_4AF1E7: je loc_4AF1FC;");
    asm("loc_4AF1E9: mov 0x38(%esp),%ebp;");
    asm("loc_4AF1ED: mov 0x2C(%esp),%eax;");
    asm("loc_4AF1F1: inc %edi;");
    asm("loc_4AF1F2: cmp %eax,%edi;");
    asm("loc_4AF1F4: jb loc_4AF164;");
    asm("loc_4AF1FA: jmp loc_4AF202;");
    asm("loc_4AF1FC: mov %eax,8(%esi);");
    asm("loc_4AF1FF: mov %ecx,0xC(%esi);");
    asm("loc_4AF202: mov 8(%esi),%eax;");
    asm("loc_4AF205: test %eax,%eax;");
    asm("loc_4AF207: jbe loc_4AF21E;");
    asm("loc_4AF209: mov 0xC(%esi),%eax;");
    asm("loc_4AF20C: test %eax,%eax;");
    asm("loc_4AF20E: jbe loc_4AF21E;");
    asm("loc_4AF210: pop %edi;");
    asm("loc_4AF211: pop %esi;");
    asm("loc_4AF212: mov $1,%eax;");
    asm("loc_4AF217: pop %ebp;");
    asm("loc_4AF218: add $0x1C,%esp;");
    asm("loc_4AF21B: ret $0x10;");
    asm("loc_4AF21E: pop %edi;");
    asm("loc_4AF21F: pop %esi;");
    asm("loc_4AF220: xor %eax,%eax;");
    asm("loc_4AF222: pop %ebp;");
    asm("loc_4AF223: add $0x1C,%esp;");
    asm("loc_4AF226: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AF230() // _sub_4AF230
{
    __DEBUG_ASM(4AF230);
    // chunk 0x4AF230 _sub_4AF230
    asm("loc_4AF230: push $0xFFFFFFFF;");
    asm("loc_4AF232: mov %fs:0,%eax;");
    asm("loc_4AF238: push $_sub_5BCEEF;");
    asm("loc_4AF23D: push %eax;");
    asm("loc_4AF23E: mov $0x1598,%eax;");
    asm("loc_4AF243: mov %esp,%fs:0;");
    asm("loc_4AF24A: call _sub_5B7E90;");
    asm("loc_4AF24F: push %ebx;");
    asm("loc_4AF250: push %ebp;");
    asm("loc_4AF251: mov %ecx,%ebp;");
    asm("loc_4AF253: mov 0x804(%ebp),%eax;");
    asm("loc_4AF259: cmp %eax,%eax;");
    asm("loc_4AF25B: mov 0x800(%ebp),%ebx;");
    asm("loc_4AF261: push %esi;");
    asm("loc_4AF262: push %edi;");
    asm("loc_4AF263: mov %eax,%edx;");
    asm("loc_4AF265: je loc_4AF27C;");
    asm("loc_4AF267: mov %edx,%esi;");
    asm("loc_4AF269: mov %ebx,%edi;");
    asm("loc_4AF26B: add $0x2C,%edx;");
    asm("loc_4AF26E: mov $0xB,%ecx;");
    asm("loc_4AF273: add $0x2C,%ebx;");
    asm("loc_4AF276: cmp %eax,%edx;");
    asm("loc_4AF278: rep movsl (%esi),(%edi);");
    asm("loc_4AF27A: jne loc_4AF267;");
    asm("loc_4AF27C: mov %ebx,0x804(%ebp);");
    asm("loc_4AF282: mov 0x814(%ebp),%eax;");
    asm("loc_4AF288: cmp %eax,%eax;");
    asm("loc_4AF28A: mov 0x810(%ebp),%ebx;");
    asm("loc_4AF290: mov %eax,%edx;");
    asm("loc_4AF292: je loc_4AF2A9;");
    asm("loc_4AF294: mov %edx,%esi;");
    asm("loc_4AF296: mov %ebx,%edi;");
    asm("loc_4AF298: add $0x2C,%edx;");
    asm("loc_4AF29B: mov $0xB,%ecx;");
    asm("loc_4AF2A0: add $0x2C,%ebx;");
    asm("loc_4AF2A3: cmp %eax,%edx;");
    asm("loc_4AF2A5: rep movsl (%esi),(%edi);");
    asm("loc_4AF2A7: jne loc_4AF294;");
    asm("loc_4AF2A9: mov %ebx,0x814(%ebp);");
    asm("loc_4AF2AF: mov 0x824(%ebp),%eax;");
    asm("loc_4AF2B5: cmp %eax,%eax;");
    asm("loc_4AF2B7: mov 0x820(%ebp),%ebx;");
    asm("loc_4AF2BD: mov %eax,%edx;");
    asm("loc_4AF2BF: je loc_4AF2D6;");
    asm("loc_4AF2C1: mov %edx,%esi;");
    asm("loc_4AF2C3: mov %ebx,%edi;");
    asm("loc_4AF2C5: add $0x2C,%edx;");
    asm("loc_4AF2C8: mov $0xB,%ecx;");
    asm("loc_4AF2CD: add $0x2C,%ebx;");
    asm("loc_4AF2D0: cmp %eax,%edx;");
    asm("loc_4AF2D2: rep movsl (%esi),(%edi);");
    asm("loc_4AF2D4: jne loc_4AF2C1;");
    asm("loc_4AF2D6: lea 0x40(%esp),%ecx;");
    asm("loc_4AF2DA: mov %ebx,0x824(%ebp);");
    asm("loc_4AF2E0: calll *_import_5C605C;");
    asm("loc_4AF2E6: mov 0x15B8(%esp),%esi;");
    asm("loc_4AF2ED: xor %ebx,%ebx;");
    asm("loc_4AF2EF: push %ebx;");
    asm("loc_4AF2F0: push %esi;");
    asm("loc_4AF2F1: lea 0x48(%esp),%ecx;");
    asm("loc_4AF2F5: mov %ebx,0x15B8(%esp);");
    asm("loc_4AF2FC: calll *_import_5C6058;");
    asm("loc_4AF302: test %al,%al;");
    asm("loc_4AF304: je loc_4AF4A8;");
    asm("loc_4AF30A: lea 0x40(%esp),%ecx;");
    asm("loc_4AF30E: calll *_import_5C6054;");
    asm("loc_4AF314: test %al,%al;");
    asm("loc_4AF316: je loc_4AF49C;");
    asm("loc_4AF31C: mov 0x10(%esp),%ebx;");
    asm("loc_4AF320: push $_data_5D5130;");
    asm("loc_4AF325: lea 0x44(%esp),%ecx;");
    asm("loc_4AF329: calll *_import_5C6050;");
    asm("loc_4AF32F: test %al,%al;");
    asm("loc_4AF331: je loc_4AF3EA;");
    asm("loc_4AF337: lea 0x40(%esp),%ecx;");
    asm("loc_4AF33B: or $0xFFFFFFFF,%ebx;");
    asm("loc_4AF33E: calll *_import_5C669C;");
    asm("loc_4AF344: test %al,%al;");
    asm("loc_4AF346: je loc_4AF3EA;");
    asm("loc_4AF34C: lea (%esp),%esp;");
    asm("loc_4AF350: mov _import_5C6CF4,%edi;");
    asm("loc_4AF356: push $_data_5D5124;");
    asm("loc_4AF35B: lea 0x44(%esp),%ecx;");
    asm("loc_4AF35F: call *%edi;");
    asm("loc_4AF361: test %al,%al;");
    asm("loc_4AF363: lea 0x40(%esp),%ecx;");
    asm("loc_4AF367: je loc_4AF375;");
    asm("loc_4AF369: push $0;");
    asm("loc_4AF36B: calll *_import_5C6D00;");
    asm("loc_4AF371: mov %eax,%ebx;");
    asm("loc_4AF373: jmp loc_4AF393;");
    asm("loc_4AF375: push $_data_5C9CA4;");
    asm("loc_4AF37A: call *%edi;");
    asm("loc_4AF37C: test %al,%al;");
    asm("loc_4AF37E: je loc_4AF393;");
    asm("loc_4AF380: push $0;");
    asm("loc_4AF382: lea 0x44(%esp),%ecx;");
    asm("loc_4AF386: calll *_import_5C6D00;");
    asm("loc_4AF38C: mov %eax,0x82C(%ebp,%ebx,4);");
    asm("loc_4AF393: lea 0x40(%esp),%ecx;");
    asm("loc_4AF397: calll *_import_5C669C;");
    asm("loc_4AF39D: test %al,%al;");
    asm("loc_4AF39F: jne loc_4AF350;");
    asm("loc_4AF3A1: cmp $1,%ebx;");
    asm("loc_4AF3A4: jne loc_4AF3EA;");
    asm("loc_4AF3A6: xor %ecx,%ecx;");
    asm("loc_4AF3A8: or $0xFFFFFFFF,%edx;");
    asm("loc_4AF3AB: mov %edx,0x18(%esp);");
    asm("loc_4AF3AF: xor %eax,%eax;");
    asm("loc_4AF3B1: lea 0x14(%esp),%edx;");
    asm("loc_4AF3B5: mov %ecx,0x34(%esp);");
    asm("loc_4AF3B9: mov %cl,0x3C(%esp);");
    asm("loc_4AF3BD: mov %ecx,0x14(%esp);");
    asm("loc_4AF3C1: push %edx;");
    asm("loc_4AF3C2: lea 0x80C(%ebp),%ecx;");
    asm("loc_4AF3C8: mov %eax,0x20(%esp);");
    asm("loc_4AF3CC: mov 8(%ecx),%eax;");
    asm("loc_4AF3CF: push %ebx;");
    asm("loc_4AF3D0: push %eax;");
    asm("loc_4AF3D1: mov %ebx,0x44(%esp);");
    asm("loc_4AF3D5: movl $0xC2E,0x38(%esp);");
    asm("loc_4AF3DD: movl $0xCF7,0x3C(%esp);");
    asm("loc_4AF3E5: call _sub_5126F0;");
    asm("loc_4AF3EA: push $_data_5D5120;");
    asm("loc_4AF3EF: lea 0x44(%esp),%ecx;");
    asm("loc_4AF3F3: calll *_import_5C6050;");
    asm("loc_4AF3F9: test %al,%al;");
    asm("loc_4AF3FB: je loc_4AF488;");
    asm("loc_4AF401: lea 0x40(%esp),%ecx;");
    asm("loc_4AF405: or $0xFFFFFFFF,%edi;");
    asm("loc_4AF408: calll *_import_5C669C;");
    asm("loc_4AF40E: test %al,%al;");
    asm("loc_4AF410: je loc_4AF47F;");
    asm("loc_4AF412: push $_data_5D511C;");
    asm("loc_4AF417: lea 0x44(%esp),%ecx;");
    asm("loc_4AF41B: calll *_import_5C6CF4;");
    asm("loc_4AF421: test %al,%al;");
    asm("loc_4AF423: lea 0x40(%esp),%ecx;");
    asm("loc_4AF427: je loc_4AF456;");
    asm("loc_4AF429: calll *_import_5C6698;");
    asm("loc_4AF42F: mov %eax,%esi;");
    asm("loc_4AF431: push %esi;");
    asm("loc_4AF432: calll *_import_5C70C4;");
    asm("loc_4AF438: add $4,%esp;");
    asm("loc_4AF43B: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4AF43E: je loc_4AF451;");
    asm("loc_4AF440: push %esi;");
    asm("loc_4AF441: call _sub_577EF0;");
    asm("loc_4AF446: add $4,%esp;");
    asm("loc_4AF449: test %eax,%eax;");
    asm("loc_4AF44B: je loc_4AF471;");
    asm("loc_4AF44D: mov (%eax),%edi;");
    asm("loc_4AF44F: jmp loc_4AF471;");
    asm("loc_4AF451: or $0xFFFFFFFF,%edi;");
    asm("loc_4AF454: jmp loc_4AF471;");
    asm("loc_4AF456: push $_data_5C9CA4;");
    asm("loc_4AF45B: calll *_import_5C6CF4;");
    asm("loc_4AF461: test %al,%al;");
    asm("loc_4AF463: je loc_4AF471;");
    asm("loc_4AF465: push $0;");
    asm("loc_4AF467: lea 0x44(%esp),%ecx;");
    asm("loc_4AF46B: calll *_import_5C6D00;");
    asm("loc_4AF471: lea 0x40(%esp),%ecx;");
    asm("loc_4AF475: calll *_import_5C669C;");
    asm("loc_4AF47B: test %al,%al;");
    asm("loc_4AF47D: jne loc_4AF412;");
    asm("loc_4AF47F: push %ebx;");
    asm("loc_4AF480: push %edi;");
    asm("loc_4AF481: mov %ebp,%ecx;");
    asm("loc_4AF483: call _sub_4AF5C0;");
    asm("loc_4AF488: lea 0x40(%esp),%ecx;");
    asm("loc_4AF48C: calll *_import_5C6054;");
    asm("loc_4AF492: test %al,%al;");
    asm("loc_4AF494: jne loc_4AF320;");
    asm("loc_4AF49A: xor %ebx,%ebx;");
    asm("loc_4AF49C: lea 0x40(%esp),%ecx;");
    asm("loc_4AF4A0: calll *_import_5C6400;");
    asm("loc_4AF4A6: jmp loc_4AF4C8;");
    asm("loc_4AF4A8: push %esi;");
    asm("loc_4AF4A9: push $0x910;");
    asm("loc_4AF4AE: push $_data_5D50E8;");
    asm("loc_4AF4B3: mov $0x100001,%eax;");
    asm("loc_4AF4B8: push $_data_5D50C0;");
    asm("loc_4AF4BD: push %eax;");
    asm("loc_4AF4BE: mov _import_5C6D18,%eax;");
    asm("loc_4AF4C3: calll *(%eax);");
    asm("loc_4AF4C5: add $0x14,%esp;");
    asm("loc_4AF4C8: lea 0x1468(%esp),%ecx;");
    asm("loc_4AF4CF: movl $1,0x15B0(%esp);");
    asm("loc_4AF4DA: mov %ecx,0x10(%esp);");
    asm("loc_4AF4DE: lea 0x1468(%esp),%ecx;");
    asm("loc_4AF4E5: movb $2,0x15B0(%esp);");
    asm("loc_4AF4ED: calll *_import_5C604C;");
    asm("loc_4AF4F3: push $1;");
    asm("loc_4AF4F5: lea 0x146C(%esp),%ecx;");
    asm("loc_4AF4FC: movb $1,0x15B4(%esp);");
    asm("loc_4AF504: calll *_import_5C7084;");
    asm("loc_4AF50A: mov _import_5C7080,%edx;");
    asm("loc_4AF510: mov (%edx),%eax;");
    asm("loc_4AF512: push %eax;");
    asm("loc_4AF513: push %ebx;");
    asm("loc_4AF514: lea 0x48(%esp),%ecx;");
    asm("loc_4AF518: movl $3,0x15B8(%esp);");
    asm("loc_4AF523: calll *_import_5C707C;");
    asm("loc_4AF529: mov 0x50(%esp),%eax;");
    asm("loc_4AF52D: or $0xFFFFFFFF,%edi;");
    asm("loc_4AF530: cmp %edi,%eax;");
    asm("loc_4AF532: je loc_4AF56D;");
    asm("loc_4AF534: cmp %ebx,0x54(%esp);");
    asm("loc_4AF538: mov _import_5C6EF8,%esi;");
    asm("loc_4AF53E: je loc_4AF562;");
    asm("loc_4AF540: mov 0x58(%esp),%eax;");
    asm("loc_4AF544: cmp %ebx,%eax;");
    asm("loc_4AF546: je loc_4AF557;");
    asm("loc_4AF548: push %eax;");
    asm("loc_4AF549: calll *_import_5C6EFC;");
    asm("loc_4AF54F: mov %ebx,0x58(%esp);");
    asm("loc_4AF553: mov %ebx,0x5C(%esp);");
    asm("loc_4AF557: mov 0x54(%esp),%ecx;");
    asm("loc_4AF55B: push %ecx;");
    asm("loc_4AF55C: call *%esi;");
    asm("loc_4AF55E: mov %ebx,0x54(%esp);");
    asm("loc_4AF562: mov 0x50(%esp),%edx;");
    asm("loc_4AF566: push %edx;");
    asm("loc_4AF567: call *%esi;");
    asm("loc_4AF569: mov %edi,0x50(%esp);");
    asm("loc_4AF56D: mov 0x58(%esp),%eax;");
    asm("loc_4AF571: cmp %ebx,%eax;");
    asm("loc_4AF573: je loc_4AF587;");
    asm("loc_4AF575: push %eax;");
    asm("loc_4AF576: calll *_import_5C71D8;");
    asm("loc_4AF57C: add $4,%esp;");
    asm("loc_4AF57F: mov %ebx,0x58(%esp);");
    asm("loc_4AF583: mov %ebx,0x5C(%esp);");
    asm("loc_4AF587: push $1;");
    asm("loc_4AF589: lea 0x44(%esp),%ecx;");
    asm("loc_4AF58D: mov %ebx,0x64(%esp);");
    asm("loc_4AF591: mov %edi,0x15B4(%esp);");
    asm("loc_4AF598: calll *_import_5C7084;");
    asm("loc_4AF59E: mov 0x15A8(%esp),%ecx;");
    asm("loc_4AF5A5: pop %edi;");
    asm("loc_4AF5A6: pop %esi;");
    asm("loc_4AF5A7: pop %ebp;");
    asm("loc_4AF5A8: pop %ebx;");
    asm("loc_4AF5A9: mov %ecx,%fs:0;");
    asm("loc_4AF5B0: add $0x15A4,%esp;");
    asm("loc_4AF5B6: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AF5C0() // _sub_4AF5C0
{
    __DEBUG_ASM(4AF5C0);
    // chunk 0x4AF5C0 _sub_4AF5C0
    asm("loc_4AF5C0: sub $0x30,%esp;");
    asm("loc_4AF5C3: mov 0x38(%esp),%eax;");
    asm("loc_4AF5C7: push %ebx;");
    asm("loc_4AF5C8: push %ebp;");
    asm("loc_4AF5C9: xor %edx,%edx;");
    asm("loc_4AF5CB: cmp %edx,%eax;");
    asm("loc_4AF5CD: push %esi;");
    asm("loc_4AF5CE: push %edi;");
    asm("loc_4AF5CF: mov %ecx,0x10(%esp);");
    asm("loc_4AF5D3: jl loc_4AF8F5;");
    asm("loc_4AF5D9: cmp $3,%eax;");
    asm("loc_4AF5DC: jg loc_4AF8F5;");
    asm("loc_4AF5E2: mov 0x44(%esp),%esi;");
    asm("loc_4AF5E6: or $0xFFFFFFFF,%ebp;");
    asm("loc_4AF5E9: or $0xFFFFFFFF,%ebx;");
    asm("loc_4AF5EC: cmp %edx,%esi;");
    asm("loc_4AF5EE: movb $1,0x3C(%esp);");
    asm("loc_4AF5F3: jl loc_4AF6A2;");
    asm("loc_4AF5F9: lea 0x14(%esp),%eax;");
    asm("loc_4AF5FD: push %eax;");
    asm("loc_4AF5FE: push %esi;");
    asm("loc_4AF5FF: call _sub_577E80;");
    asm("loc_4AF604: add $8,%esp;");
    asm("loc_4AF607: test %al,%al;");
    asm("loc_4AF609: je loc_4AF627;");
    asm("loc_4AF60B: lea 0x20(%esp),%ecx;");
    asm("loc_4AF60F: push %ecx;");
    asm("loc_4AF610: push %esi;");
    asm("loc_4AF611: call _sub_577EA0;");
    asm("loc_4AF616: xor %edx,%edx;");
    asm("loc_4AF618: add $8,%esp;");
    asm("loc_4AF61B: test %al,%al;");
    asm("loc_4AF61D: setne %dl;");
    asm("loc_4AF620: inc %edx;");
    asm("loc_4AF621: mov %edx,0x38(%esp);");
    asm("loc_4AF625: jmp loc_4AF62F;");
    asm("loc_4AF627: movl $3,0x38(%esp);");
    asm("loc_4AF62F: push %esi;");
    asm("loc_4AF630: call _sub_577EC0;");
    asm("loc_4AF635: add $4,%esp;");
    asm("loc_4AF638: test %eax,%eax;");
    asm("loc_4AF63A: je loc_4AF694;");
    asm("loc_4AF63C: push %esi;");
    asm("loc_4AF63D: call _sub_577EC0;");
    asm("loc_4AF642: mov 4(%eax),%ecx;");
    asm("loc_4AF645: add $4,%esp;");
    asm("loc_4AF648: test %ecx,%ecx;");
    asm("loc_4AF64A: je loc_4AF664;");
    asm("loc_4AF64C: push %esi;");
    asm("loc_4AF64D: call _sub_577EC0;");
    asm("loc_4AF652: mov 4(%eax),%ebp;");
    asm("loc_4AF655: add $4,%esp;");
    asm("loc_4AF658: cmp $0x14,%esi;");
    asm("loc_4AF65B: jne loc_4AF667;");
    asm("loc_4AF65D: movb $0,0x3C(%esp);");
    asm("loc_4AF662: jmp loc_4AF667;");
    asm("loc_4AF664: or $0xFFFFFFFF,%ebp;");
    asm("loc_4AF667: push %esi;");
    asm("loc_4AF668: call _sub_577EC0;");
    asm("loc_4AF66D: mov 8(%eax),%ecx;");
    asm("loc_4AF670: add $4,%esp;");
    asm("loc_4AF673: test %ecx,%ecx;");
    asm("loc_4AF675: je loc_4AF691;");
    asm("loc_4AF677: push %esi;");
    asm("loc_4AF678: call _sub_577EC0;");
    asm("loc_4AF67D: mov 8(%eax),%ebx;");
    asm("loc_4AF680: mov 0x4C(%esp),%eax;");
    asm("loc_4AF684: mov 0x14(%esp),%ecx;");
    asm("loc_4AF688: add $4,%esp;");
    asm("loc_4AF68B: mov %esi,0x34(%esp);");
    asm("loc_4AF68F: jmp loc_4AF6AA;");
    asm("loc_4AF691: or $0xFFFFFFFF,%ebx;");
    asm("loc_4AF694: mov 0x48(%esp),%eax;");
    asm("loc_4AF698: mov 0x10(%esp),%ecx;");
    asm("loc_4AF69C: mov %esi,0x34(%esp);");
    asm("loc_4AF6A0: jmp loc_4AF6AA;");
    asm("loc_4AF6A2: mov %edx,0x38(%esp);");
    asm("loc_4AF6A6: mov %edx,0x34(%esp);");
    asm("loc_4AF6AA: sub $0,%eax;");
    asm("loc_4AF6AD: mov %ebp,0x2C(%esp);");
    asm("loc_4AF6B1: mov %ebx,0x30(%esp);");
    asm("loc_4AF6B5: je loc_4AF8DF;");
    asm("loc_4AF6BB: dec %eax;");
    asm("loc_4AF6BC: je loc_4AF8D7;");
    asm("loc_4AF6C2: dec %eax;");
    asm("loc_4AF6C3: jne loc_4AF8F5;");
    asm("loc_4AF6C9: mov 0x828(%ecx),%edx;");
    asm("loc_4AF6CF: lea 0x81C(%ecx),%ebp;");
    asm("loc_4AF6D5: mov 8(%ebp),%ecx;");
    asm("loc_4AF6D8: sub %ecx,%edx;");
    asm("loc_4AF6DA: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AF6DF: imul %edx;");
    asm("loc_4AF6E1: sar $3,%edx;");
    asm("loc_4AF6E4: mov %edx,%eax;");
    asm("loc_4AF6E6: shr $0x1F,%eax;");
    asm("loc_4AF6E9: add %eax,%edx;");
    asm("loc_4AF6EB: cmp $1,%edx;");
    asm("loc_4AF6EE: mov %ecx,%ebx;");
    asm("loc_4AF6F0: jae loc_4AF7F4;");
    asm("loc_4AF6F6: mov 4(%ebp),%esi;");
    asm("loc_4AF6F9: test %esi,%esi;");
    asm("loc_4AF6FB: je loc_4AF719;");
    asm("loc_4AF6FD: mov %ecx,%edx;");
    asm("loc_4AF6FF: sub %esi,%edx;");
    asm("loc_4AF701: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AF706: imul %edx;");
    asm("loc_4AF708: sar $3,%edx;");
    asm("loc_4AF70B: mov %edx,%eax;");
    asm("loc_4AF70D: shr $0x1F,%eax;");
    asm("loc_4AF710: add %eax,%edx;");
    asm("loc_4AF712: cmp $1,%edx;");
    asm("loc_4AF715: mov %edx,%edi;");
    asm("loc_4AF717: ja loc_4AF71E;");
    asm("loc_4AF719: mov $1,%edi;");
    asm("loc_4AF71E: test %esi,%esi;");
    asm("loc_4AF720: jne loc_4AF726;");
    asm("loc_4AF722: xor %edx,%edx;");
    asm("loc_4AF724: jmp loc_4AF739;");
    asm("loc_4AF726: sub %esi,%ecx;");
    asm("loc_4AF728: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AF72D: imul %ecx;");
    asm("loc_4AF72F: sar $3,%edx;");
    asm("loc_4AF732: mov %edx,%ecx;");
    asm("loc_4AF734: shr $0x1F,%ecx;");
    asm("loc_4AF737: add %ecx,%edx;");
    asm("loc_4AF739: lea (%edx,%edi),%esi;");
    asm("loc_4AF73C: test %esi,%esi;");
    asm("loc_4AF73E: mov %esi,%eax;");
    asm("loc_4AF740: jge loc_4AF744;");
    asm("loc_4AF742: xor %eax,%eax;");
    asm("loc_4AF744: imul $0x2C,%eax;");
    asm("loc_4AF747: push %eax;");
    asm("loc_4AF748: call _sub_5B7E84;");
    asm("loc_4AF74D: mov 4(%ebp),%edx;");
    asm("loc_4AF750: add $4,%esp;");
    asm("loc_4AF753: mov %eax,%edi;");
    asm("loc_4AF755: push %edi;");
    asm("loc_4AF756: push %ebx;");
    asm("loc_4AF757: push %edx;");
    asm("loc_4AF758: mov %ebp,%ecx;");
    asm("loc_4AF75A: call _sub_4B2AE0;");
    asm("loc_4AF75F: lea 0x14(%esp),%ecx;");
    asm("loc_4AF763: push %ecx;");
    asm("loc_4AF764: push $1;");
    asm("loc_4AF766: push %eax;");
    asm("loc_4AF767: mov %ebp,%ecx;");
    asm("loc_4AF769: mov %eax,0x54(%esp);");
    asm("loc_4AF76D: call _sub_4B2B20;");
    asm("loc_4AF772: mov 0x48(%esp),%edx;");
    asm("loc_4AF776: mov 8(%ebp),%eax;");
    asm("loc_4AF779: add $0x2C,%edx;");
    asm("loc_4AF77C: push %edx;");
    asm("loc_4AF77D: push %eax;");
    asm("loc_4AF77E: push %ebx;");
    asm("loc_4AF77F: mov %ebp,%ecx;");
    asm("loc_4AF781: call _sub_4B2AE0;");
    asm("loc_4AF786: mov 8(%ebp),%ecx;");
    asm("loc_4AF789: mov 4(%ebp),%edx;");
    asm("loc_4AF78C: push %ecx;");
    asm("loc_4AF78D: push %edx;");
    asm("loc_4AF78E: mov %ebp,%ecx;");
    asm("loc_4AF790: call _sub_53AAA0;");
    asm("loc_4AF795: mov 4(%ebp),%eax;");
    asm("loc_4AF798: push %eax;");
    asm("loc_4AF799: call _sub_5B7E1D;");
    asm("loc_4AF79E: imul $0x2C,%esi;");
    asm("loc_4AF7A1: mov 4(%ebp),%eax;");
    asm("loc_4AF7A4: add %edi,%esi;");
    asm("loc_4AF7A6: add $4,%esp;");
    asm("loc_4AF7A9: test %eax,%eax;");
    asm("loc_4AF7AB: mov %esi,0xC(%ebp);");
    asm("loc_4AF7AE: jne loc_4AF7C8;");
    asm("loc_4AF7B0: xor %edx,%edx;");
    asm("loc_4AF7B2: inc %edx;");
    asm("loc_4AF7B3: imul $0x2C,%edx;");
    asm("loc_4AF7B6: add %edi,%edx;");
    asm("loc_4AF7B8: mov %edi,4(%ebp);");
    asm("loc_4AF7BB: pop %edi;");
    asm("loc_4AF7BC: pop %esi;");
    asm("loc_4AF7BD: mov %edx,8(%ebp);");
    asm("loc_4AF7C0: pop %ebp;");
    asm("loc_4AF7C1: pop %ebx;");
    asm("loc_4AF7C2: add $0x30,%esp;");
    asm("loc_4AF7C5: ret $8;");
    asm("loc_4AF7C8: mov 8(%ebp),%ecx;");
    asm("loc_4AF7CB: sub %eax,%ecx;");
    asm("loc_4AF7CD: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AF7D2: imul %ecx;");
    asm("loc_4AF7D4: sar $3,%edx;");
    asm("loc_4AF7D7: mov %edx,%ecx;");
    asm("loc_4AF7D9: shr $0x1F,%ecx;");
    asm("loc_4AF7DC: add %ecx,%edx;");
    asm("loc_4AF7DE: inc %edx;");
    asm("loc_4AF7DF: imul $0x2C,%edx;");
    asm("loc_4AF7E2: add %edi,%edx;");
    asm("loc_4AF7E4: mov %edi,4(%ebp);");
    asm("loc_4AF7E7: pop %edi;");
    asm("loc_4AF7E8: pop %esi;");
    asm("loc_4AF7E9: mov %edx,8(%ebp);");
    asm("loc_4AF7EC: pop %ebp;");
    asm("loc_4AF7ED: pop %ebx;");
    asm("loc_4AF7EE: add $0x30,%esp;");
    asm("loc_4AF7F1: ret $8;");
    asm("loc_4AF7F4: mov %ecx,%edx;");
    asm("loc_4AF7F6: sub %ebx,%edx;");
    asm("loc_4AF7F8: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AF7FD: imul %edx;");
    asm("loc_4AF7FF: sar $3,%edx;");
    asm("loc_4AF802: mov %edx,%eax;");
    asm("loc_4AF804: shr $0x1F,%eax;");
    asm("loc_4AF807: add %eax,%edx;");
    asm("loc_4AF809: cmp $1,%edx;");
    asm("loc_4AF80C: jae loc_4AF877;");
    asm("loc_4AF80E: lea 0x2C(%ebx),%edx;");
    asm("loc_4AF811: push %edx;");
    asm("loc_4AF812: push %ecx;");
    asm("loc_4AF813: push %ebx;");
    asm("loc_4AF814: mov %ebp,%ecx;");
    asm("loc_4AF816: call _sub_4B2AE0;");
    asm("loc_4AF81B: mov 8(%ebp),%esi;");
    asm("loc_4AF81E: lea 0x14(%esp),%eax;");
    asm("loc_4AF822: push %eax;");
    asm("loc_4AF823: mov %esi,%ecx;");
    asm("loc_4AF825: sub %ebx,%ecx;");
    asm("loc_4AF827: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AF82C: imul %ecx;");
    asm("loc_4AF82E: sar $3,%edx;");
    asm("loc_4AF831: mov %edx,%ecx;");
    asm("loc_4AF833: shr $0x1F,%ecx;");
    asm("loc_4AF836: add %ecx,%edx;");
    asm("loc_4AF838: mov $1,%eax;");
    asm("loc_4AF83D: sub %edx,%eax;");
    asm("loc_4AF83F: push %eax;");
    asm("loc_4AF840: push %esi;");
    asm("loc_4AF841: mov %ebp,%ecx;");
    asm("loc_4AF843: call _sub_4B2B20;");
    asm("loc_4AF848: mov 8(%ebp),%eax;");
    asm("loc_4AF84B: cmp %eax,%ebx;");
    asm("loc_4AF84D: je loc_4AF864;");
    asm("loc_4AF84F: nop;");
    asm("loc_4AF850: mov %ebx,%edi;");
    asm("loc_4AF852: add $0x2C,%ebx;");
    asm("loc_4AF855: cmp %eax,%ebx;");
    asm("loc_4AF857: mov $0xB,%ecx;");
    asm("loc_4AF85C: lea 0x14(%esp),%esi;");
    asm("loc_4AF860: rep movsl (%esi),(%edi);");
    asm("loc_4AF862: jne loc_4AF850;");
    asm("loc_4AF864: mov 8(%ebp),%eax;");
    asm("loc_4AF867: pop %edi;");
    asm("loc_4AF868: add $0x2C,%eax;");
    asm("loc_4AF86B: pop %esi;");
    asm("loc_4AF86C: mov %eax,8(%ebp);");
    asm("loc_4AF86F: pop %ebp;");
    asm("loc_4AF870: pop %ebx;");
    asm("loc_4AF871: add $0x30,%esp;");
    asm("loc_4AF874: ret $8;");
    asm("loc_4AF877: push %ecx;");
    asm("loc_4AF878: push %ecx;");
    asm("loc_4AF879: add $0xFFFFFFD4,%ecx;");
    asm("loc_4AF87C: push %ecx;");
    asm("loc_4AF87D: mov %ebp,%ecx;");
    asm("loc_4AF87F: call _sub_4B2AE0;");
    asm("loc_4AF884: mov 8(%ebp),%edx;");
    asm("loc_4AF887: lea -0x2C(%edx),%eax;");
    asm("loc_4AF88A: cmp %eax,%ebx;");
    asm("loc_4AF88C: je loc_4AF8A5;");
    asm("loc_4AF88E: mov %edi,%edi;");
    asm("loc_4AF890: sub $0x2C,%eax;");
    asm("loc_4AF893: sub $0x2C,%edx;");
    asm("loc_4AF896: cmp %ebx,%eax;");
    asm("loc_4AF898: mov $0xB,%ecx;");
    asm("loc_4AF89D: mov %eax,%esi;");
    asm("loc_4AF89F: mov %edx,%edi;");
    asm("loc_4AF8A1: rep movsl (%esi),(%edi);");
    asm("loc_4AF8A3: jne loc_4AF890;");
    asm("loc_4AF8A5: lea 0x2C(%ebx),%edx;");
    asm("loc_4AF8A8: cmp %edx,%ebx;");
    asm("loc_4AF8AA: mov %ebx,%eax;");
    asm("loc_4AF8AC: je loc_4AF8C4;");
    asm("loc_4AF8AE: mov %edi,%edi;");
    asm("loc_4AF8B0: mov %eax,%edi;");
    asm("loc_4AF8B2: add $0x2C,%eax;");
    asm("loc_4AF8B5: cmp %edx,%eax;");
    asm("loc_4AF8B7: mov $0xB,%ecx;");
    asm("loc_4AF8BC: lea 0x14(%esp),%esi;");
    asm("loc_4AF8C0: rep movsl (%esi),(%edi);");
    asm("loc_4AF8C2: jne loc_4AF8B0;");
    asm("loc_4AF8C4: mov 8(%ebp),%eax;");
    asm("loc_4AF8C7: pop %edi;");
    asm("loc_4AF8C8: add $0x2C,%eax;");
    asm("loc_4AF8CB: pop %esi;");
    asm("loc_4AF8CC: mov %eax,8(%ebp);");
    asm("loc_4AF8CF: pop %ebp;");
    asm("loc_4AF8D0: pop %ebx;");
    asm("loc_4AF8D1: add $0x30,%esp;");
    asm("loc_4AF8D4: ret $8;");
    asm("loc_4AF8D7: add $0x80C,%ecx;");
    asm("loc_4AF8DD: jmp loc_4AF8E5;");
    asm("loc_4AF8DF: add $0x7FC,%ecx;");
    asm("loc_4AF8E5: mov 8(%ecx),%eax;");
    asm("loc_4AF8E8: lea 0x14(%esp),%edx;");
    asm("loc_4AF8EC: push %edx;");
    asm("loc_4AF8ED: push $1;");
    asm("loc_4AF8EF: push %eax;");
    asm("loc_4AF8F0: call _sub_5126F0;");
    asm("loc_4AF8F5: pop %edi;");
    asm("loc_4AF8F6: pop %esi;");
    asm("loc_4AF8F7: pop %ebp;");
    asm("loc_4AF8F8: pop %ebx;");
    asm("loc_4AF8F9: add $0x30,%esp;");
    asm("loc_4AF8FC: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AF900() // _sub_4AF900
{
    __DEBUG_ASM(4AF900);
    // chunk 0x4AF900 _sub_4AF900
    asm("loc_4AF900: push $0xFFFFFFFF;");
    asm("loc_4AF902: push $_sub_5BCF0B;");
    asm("loc_4AF907: mov %fs:0,%eax;");
    asm("loc_4AF90D: push %eax;");
    asm("loc_4AF90E: mov %esp,%fs:0;");
    asm("loc_4AF915: sub $0x2AC,%esp;");
    asm("loc_4AF91B: push %ebx;");
    asm("loc_4AF91C: push %ebp;");
    asm("loc_4AF91D: push %esi;");
    asm("loc_4AF91E: lea 0x28(%esp),%eax;");
    asm("loc_4AF922: mov %ecx,%ebx;");
    asm("loc_4AF924: push %eax;");
    asm("loc_4AF925: mov %ebx,0x18(%esp);");
    asm("loc_4AF929: call _sub_4AE030;");
    asm("loc_4AF92E: mov 0x2C(%esp),%esi;");
    asm("loc_4AF932: xor %ebp,%ebp;");
    asm("loc_4AF934: cmp %ebp,%esi;");
    asm("loc_4AF936: mov %ebp,0x2C0(%esp);");
    asm("loc_4AF93D: jne loc_4AF943;");
    asm("loc_4AF93F: xor %edx,%edx;");
    asm("loc_4AF941: jmp loc_4AF95A;");
    asm("loc_4AF943: mov 0x30(%esp),%ecx;");
    asm("loc_4AF947: sub %esi,%ecx;");
    asm("loc_4AF949: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AF94E: imul %ecx;");
    asm("loc_4AF950: sar $3,%edx;");
    asm("loc_4AF953: mov %edx,%ecx;");
    asm("loc_4AF955: shr $0x1F,%ecx;");
    asm("loc_4AF958: add %ecx,%edx;");
    asm("loc_4AF95A: mov 0x2C8(%esp),%eax;");
    asm("loc_4AF961: add $0xFFFFFFF3,%edx;");
    asm("loc_4AF964: cmp %edx,%eax;");
    asm("loc_4AF966: jbe loc_4AF976;");
    asm("loc_4AF968: push %esi;");
    asm("loc_4AF969: call _sub_5B7E1D;");
    asm("loc_4AF96E: add $4,%esp;");
    asm("loc_4AF971: jmp loc_4AFB63;");
    asm("loc_4AF976: mov %eax,%esi;");
    asm("loc_4AF978: imul $0x2C,%esi;");
    asm("loc_4AF97B: push %edi;");
    asm("loc_4AF97C: mov %bp,0xBC(%esp);");
    asm("loc_4AF984: mov %ebp,0x10(%esp);");
    asm("loc_4AF988: mov %esi,0x14(%esp);");
    asm("loc_4AF98C: lea 0x37C(%ebx),%edi;");
    asm("loc_4AF992: jmp loc_4AF998;");
    asm("loc_4AF994: mov 0x18(%esp),%ebx;");
    asm("loc_4AF998: lea 0x1C(%esp),%edx;");
    asm("loc_4AF99C: push %edx;");
    asm("loc_4AF99D: mov %ebx,%ecx;");
    asm("loc_4AF99F: call _sub_4AE030;");
    asm("loc_4AF9A4: mov 4(%eax),%edx;");
    asm("loc_4AF9A7: cmp %ebp,%edx;");
    asm("loc_4AF9A9: jne loc_4AF9AF;");
    asm("loc_4AF9AB: xor %edx,%edx;");
    asm("loc_4AF9AD: jmp loc_4AF9C5;");
    asm("loc_4AF9AF: mov 8(%eax),%ecx;");
    asm("loc_4AF9B2: sub %edx,%ecx;");
    asm("loc_4AF9B4: mov $0x2E8BA2E9,%eax;");
    asm("loc_4AF9B9: imul %ecx;");
    asm("loc_4AF9BB: sar $3,%edx;");
    asm("loc_4AF9BE: mov %edx,%eax;");
    asm("loc_4AF9C0: shr $0x1F,%eax;");
    asm("loc_4AF9C3: add %eax,%edx;");
    asm("loc_4AF9C5: mov 0x2CC(%esp),%ecx;");
    asm("loc_4AF9CC: mov 0x10(%esp),%eax;");
    asm("loc_4AF9D0: add %ecx,%eax;");
    asm("loc_4AF9D2: mov 0x20(%esp),%ecx;");
    asm("loc_4AF9D6: cmp %edx,%eax;");
    asm("loc_4AF9D8: push %ecx;");
    asm("loc_4AF9D9: setb %bl;");
    asm("loc_4AF9DC: call _sub_5B7E1D;");
    asm("loc_4AF9E1: add $4,%esp;");
    asm("loc_4AF9E4: test %bl,%bl;");
    asm("loc_4AF9E6: mov %ebp,0x20(%esp);");
    asm("loc_4AF9EA: mov %ebp,0x24(%esp);");
    asm("loc_4AF9EE: mov %ebp,0x28(%esp);");
    asm("loc_4AF9F2: je loc_4AFB35;");
    asm("loc_4AF9F8: mov 0x30(%esp),%edx;");
    asm("loc_4AF9FC: mov (%edi),%eax;");
    asm("loc_4AF9FE: mov _data_679BB0,%ecx;");
    asm("loc_4AFA04: mov 0x34(%edi),%ebp;");
    asm("loc_4AFA07: mov 0x68(%edi),%ebx;");
    asm("loc_4AFA0A: add %edx,%esi;");
    asm("loc_4AFA0C: mov %ecx,0x348(%eax);");
    asm("loc_4AFA12: mov 0xD4(%edi),%edx;");
    asm("loc_4AFA18: movl $0xA,0x384(%edx);");
    asm("loc_4AFA22: mov 0x28(%esi),%al;");
    asm("loc_4AFA25: test %al,%al;");
    asm("loc_4AFA27: je loc_4AFA42;");
    asm("loc_4AFA29: mov _data_679BB0,%eax;");
    asm("loc_4AFA2E: mov %eax,0x348(%ebp);");
    asm("loc_4AFA34: mov _data_679BB0,%ecx;");
    asm("loc_4AFA3A: mov %ecx,0x348(%ebx);");
    asm("loc_4AFA40: jmp loc_4AFA59;");
    asm("loc_4AFA42: mov _data_679B94,%edx;");
    asm("loc_4AFA48: mov %edx,0x348(%ebp);");
    asm("loc_4AFA4E: mov _data_679B94,%eax;");
    asm("loc_4AFA53: mov %eax,0x348(%ebx);");
    asm("loc_4AFA59: mov 0x24(%esi),%eax;");
    asm("loc_4AFA5C: dec %eax;");
    asm("loc_4AFA5D: je loc_4AFAED;");
    asm("loc_4AFA63: dec %eax;");
    asm("loc_4AFA64: je loc_4AFA79;");
    asm("loc_4AFA66: push $_data_5C8CE0;");
    asm("loc_4AFA6B: mov %ebp,%ecx;");
    asm("loc_4AFA6D: call _sub_58A530;");
    asm("loc_4AFA72: push $_data_5C8CE0;");
    asm("loc_4AFA77: jmp loc_4AFABF;");
    asm("loc_4AFA79: push $0x100;");
    asm("loc_4AFA7E: lea 0xC0(%esp),%ecx;");
    asm("loc_4AFA85: push %ecx;");
    asm("loc_4AFA86: push %esi;");
    asm("loc_4AFA87: call _sub_577F50;");
    asm("loc_4AFA8C: add $0xC,%esp;");
    asm("loc_4AFA8F: lea 0xBC(%esp),%edx;");
    asm("loc_4AFA96: push %edx;");
    asm("loc_4AFA97: mov %ebp,%ecx;");
    asm("loc_4AFA99: call _sub_58A530;");
    asm("loc_4AFA9E: push $0x100;");
    asm("loc_4AFAA3: lea 0xC0(%esp),%eax;");
    asm("loc_4AFAAA: push %eax;");
    asm("loc_4AFAAB: lea 0xC(%esi),%ecx;");
    asm("loc_4AFAAE: push %ecx;");
    asm("loc_4AFAAF: call _sub_577F50;");
    asm("loc_4AFAB4: add $0xC,%esp;");
    asm("loc_4AFAB7: lea 0xBC(%esp),%edx;");
    asm("loc_4AFABE: push %edx;");
    asm("loc_4AFABF: mov %ebx,%ecx;");
    asm("loc_4AFAC1: call _sub_58A530;");
    asm("loc_4AFAC6: mov 0x18(%esi),%esi;");
    asm("loc_4AFAC9: test %esi,%esi;");
    asm("loc_4AFACB: jle loc_4AFB20;");
    asm("loc_4AFACD: mov _data_67ECA8,%ecx;");
    asm("loc_4AFAD3: push $0x40;");
    asm("loc_4AFAD5: lea 0x40(%esp),%eax;");
    asm("loc_4AFAD9: push %eax;");
    asm("loc_4AFADA: push %esi;");
    asm("loc_4AFADB: push %ecx;");
    asm("loc_4AFADC: call _sub_4347E0;");
    asm("loc_4AFAE1: add $0x10,%esp;");
    asm("loc_4AFAE4: push $0;");
    asm("loc_4AFAE6: lea 0x40(%esp),%eax;");
    asm("loc_4AFAEA: push %eax;");
    asm("loc_4AFAEB: jmp loc_4AFB27;");
    asm("loc_4AFAED: push $0x100;");
    asm("loc_4AFAF2: lea 0xC0(%esp),%eax;");
    asm("loc_4AFAF9: push %eax;");
    asm("loc_4AFAFA: push %esi;");
    asm("loc_4AFAFB: call _sub_577F50;");
    asm("loc_4AFB00: add $0xC,%esp;");
    asm("loc_4AFB03: lea 0xBC(%esp),%ecx;");
    asm("loc_4AFB0A: push %ecx;");
    asm("loc_4AFB0B: mov %ebp,%ecx;");
    asm("loc_4AFB0D: call _sub_58A530;");
    asm("loc_4AFB12: mov 0x28(%esi),%al;");
    asm("loc_4AFB15: test %al,%al;");
    asm("loc_4AFB17: je loc_4AFAB7;");
    asm("loc_4AFB19: push $_data_5C8CE0;");
    asm("loc_4AFB1E: jmp loc_4AFABF;");
    asm("loc_4AFB20: push $0;");
    asm("loc_4AFB22: push $_data_5C8CE0;");
    asm("loc_4AFB27: mov (%edi),%ecx;");
    asm("loc_4AFB29: mov (%ecx),%edx;");
    asm("loc_4AFB2B: push $0x1D;");
    asm("loc_4AFB2D: calll *0xA8(%edx);");
    asm("loc_4AFB33: xor %ebp,%ebp;");
    asm("loc_4AFB35: mov 0x10(%esp),%eax;");
    asm("loc_4AFB39: mov 0x14(%esp),%esi;");
    asm("loc_4AFB3D: inc %eax;");
    asm("loc_4AFB3E: add $0x2C,%esi;");
    asm("loc_4AFB41: add $4,%edi;");
    asm("loc_4AFB44: cmp $0xD,%eax;");
    asm("loc_4AFB47: mov %eax,0x10(%esp);");
    asm("loc_4AFB4B: mov %esi,0x14(%esp);");
    asm("loc_4AFB4F: jl loc_4AF994;");
    asm("loc_4AFB55: mov 0x30(%esp),%eax;");
    asm("loc_4AFB59: push %eax;");
    asm("loc_4AFB5A: call _sub_5B7E1D;");
    asm("loc_4AFB5F: add $4,%esp;");
    asm("loc_4AFB62: pop %edi;");
    asm("loc_4AFB63: mov 0x2B8(%esp),%ecx;");
    asm("loc_4AFB6A: pop %esi;");
    asm("loc_4AFB6B: pop %ebp;");
    asm("loc_4AFB6C: pop %ebx;");
    asm("loc_4AFB6D: mov %ecx,%fs:0;");
    asm("loc_4AFB74: add $0x2B8,%esp;");
    asm("loc_4AFB7A: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AFB80() // _sub_4AFB80
{
    __DEBUG_ASM(4AFB80);
    // chunk 0x4AFB80 _sub_4AFB80
    asm("loc_4AFB80: push $0xFFFFFFFF;");
    asm("loc_4AFB82: push $_sub_5BCF2B;");
    asm("loc_4AFB87: mov %fs:0,%eax;");
    asm("loc_4AFB8D: push %eax;");
    asm("loc_4AFB8E: mov %esp,%fs:0;");
    asm("loc_4AFB95: sub $0x90,%esp;");
    asm("loc_4AFB9B: push %ebx;");
    asm("loc_4AFB9C: push %ebp;");
    asm("loc_4AFB9D: lea 8(%esp),%eax;");
    asm("loc_4AFBA1: push %eax;");
    asm("loc_4AFBA2: mov %ecx,%ebp;");
    asm("loc_4AFBA4: call _sub_4AE030;");
    asm("loc_4AFBA9: mov 0xA8(%esp),%ebx;");
    asm("loc_4AFBB0: mov 0xC(%esp),%eax;");
    asm("loc_4AFBB4: imul $0x2C,%ebx;");
    asm("loc_4AFBB7: mov 0x24(%ebx,%eax),%ecx;");
    asm("loc_4AFBBB: test %ecx,%ecx;");
    asm("loc_4AFBBD: movl $0,0xA0(%esp);");
    asm("loc_4AFBC8: je loc_4AFD4C;");
    asm("loc_4AFBCE: mov 0x28(%ebx,%eax),%cl;");
    asm("loc_4AFBD2: test %cl,%cl;");
    asm("loc_4AFBD4: je loc_4AFD4C;");
    asm("loc_4AFBDA: push %esi;");
    asm("loc_4AFBDB: push %edi;");
    asm("loc_4AFBDC: push %ebp;");
    asm("loc_4AFBDD: movb $1,0x84C(%ebp);");
    asm("loc_4AFBE4: call _sub_59D8D0;");
    asm("loc_4AFBE9: mov 0x18(%esp),%ecx;");
    asm("loc_4AFBED: lea (%ebx,%ecx),%esi;");
    asm("loc_4AFBF0: push $0x40;");
    asm("loc_4AFBF2: lea 0x28(%esp),%edx;");
    asm("loc_4AFBF6: push %edx;");
    asm("loc_4AFBF7: lea 0x850(%ebp),%edi;");
    asm("loc_4AFBFD: mov $0xB,%ecx;");
    asm("loc_4AFC02: rep movsl (%esi),(%edi);");
    asm("loc_4AFC04: mov _data_67ECA8,%eax;");
    asm("loc_4AFC09: push $0x5E6;");
    asm("loc_4AFC0E: push %eax;");
    asm("loc_4AFC0F: call _sub_4347E0;");
    asm("loc_4AFC14: mov 0x4E8(%ebp),%ecx;");
    asm("loc_4AFC1A: mov (%ecx),%edx;");
    asm("loc_4AFC1C: add $0x14,%esp;");
    asm("loc_4AFC1F: push $0;");
    asm("loc_4AFC21: lea 0x24(%esp),%eax;");
    asm("loc_4AFC25: push %eax;");
    asm("loc_4AFC26: push $0x1D;");
    asm("loc_4AFC28: calll *0xA8(%edx);");
    asm("loc_4AFC2E: mov 0x14(%esp),%edx;");
    asm("loc_4AFC32: mov 0x18(%ebx,%edx),%eax;");
    asm("loc_4AFC36: push $0x40;");
    asm("loc_4AFC38: lea 0x24(%esp),%ecx;");
    asm("loc_4AFC3C: push %ecx;");
    asm("loc_4AFC3D: mov _data_67ECA8,%ecx;");
    asm("loc_4AFC43: push %eax;");
    asm("loc_4AFC44: push %ecx;");
    asm("loc_4AFC45: call _sub_4347E0;");
    asm("loc_4AFC4A: mov 0x4EC(%ebp),%ecx;");
    asm("loc_4AFC50: mov (%ecx),%edx;");
    asm("loc_4AFC52: add $0x10,%esp;");
    asm("loc_4AFC55: push $0;");
    asm("loc_4AFC57: lea 0x24(%esp),%eax;");
    asm("loc_4AFC5B: push %eax;");
    asm("loc_4AFC5C: push $0x1D;");
    asm("loc_4AFC5E: calll *0xA8(%edx);");
    asm("loc_4AFC64: mov _data_67ECA8,%edx;");
    asm("loc_4AFC6A: push $0x40;");
    asm("loc_4AFC6C: lea 0x24(%esp),%ecx;");
    asm("loc_4AFC70: push %ecx;");
    asm("loc_4AFC71: push $0x698;");
    asm("loc_4AFC76: push %edx;");
    asm("loc_4AFC77: call _sub_4347E0;");
    asm("loc_4AFC7C: mov 0x4FC(%ebp),%ecx;");
    asm("loc_4AFC82: mov (%ecx),%eax;");
    asm("loc_4AFC84: add $0x10,%esp;");
    asm("loc_4AFC87: push $0;");
    asm("loc_4AFC89: lea 0x24(%esp),%edx;");
    asm("loc_4AFC8D: push %edx;");
    asm("loc_4AFC8E: push $0x1D;");
    asm("loc_4AFC90: calll *0xA8(%eax);");
    asm("loc_4AFC96: mov _data_67ECA8,%ecx;");
    asm("loc_4AFC9C: push $0x40;");
    asm("loc_4AFC9E: lea 0x24(%esp),%eax;");
    asm("loc_4AFCA2: push %eax;");
    asm("loc_4AFCA3: push $0x2148;");
    asm("loc_4AFCA8: push %ecx;");
    asm("loc_4AFCA9: call _sub_4347E0;");
    asm("loc_4AFCAE: mov 0x500(%ebp),%ecx;");
    asm("loc_4AFCB4: mov (%ecx),%edx;");
    asm("loc_4AFCB6: add $0x10,%esp;");
    asm("loc_4AFCB9: push $0;");
    asm("loc_4AFCBB: lea 0x24(%esp),%eax;");
    asm("loc_4AFCBF: push %eax;");
    asm("loc_4AFCC0: push $0x1D;");
    asm("loc_4AFCC2: calll *0xA8(%edx);");
    asm("loc_4AFCC8: push $1;");
    asm("loc_4AFCCA: mov %ebp,%ecx;");
    asm("loc_4AFCCC: call _sub_4ABDF0;");
    asm("loc_4AFCD1: mov 0x4E4(%ebp),%ecx;");
    asm("loc_4AFCD7: mov 0x6C(%ecx),%dl;");
    asm("loc_4AFCDA: mov $3,%eax;");
    asm("loc_4AFCDF: or %al,%dl;");
    asm("loc_4AFCE1: mov %dl,0x6C(%ecx);");
    asm("loc_4AFCE4: mov 0x4E8(%ebp),%ecx;");
    asm("loc_4AFCEA: or %al,0x6C(%ecx);");
    asm("loc_4AFCED: mov 0x4EC(%ebp),%ecx;");
    asm("loc_4AFCF3: or %al,0x6C(%ecx);");
    asm("loc_4AFCF6: mov 0x4F8(%ebp),%ecx;");
    asm("loc_4AFCFC: or %al,0x6C(%ecx);");
    asm("loc_4AFCFF: mov 0x500(%ebp),%ecx;");
    asm("loc_4AFD05: or %al,0x6C(%ecx);");
    asm("loc_4AFD08: mov 0xB4(%esp),%cl;");
    asm("loc_4AFD0F: test %cl,%cl;");
    asm("loc_4AFD11: pop %edi;");
    asm("loc_4AFD12: pop %esi;");
    asm("loc_4AFD13: je loc_4AFD29;");
    asm("loc_4AFD15: mov 0xC(%esp),%ecx;");
    asm("loc_4AFD19: movb $1,0x87C(%ebp);");
    asm("loc_4AFD20: cmpl $2,0x24(%ebx,%ecx);");
    asm("loc_4AFD25: jne loc_4AFD4C;");
    asm("loc_4AFD27: jmp loc_4AFD3A;");
    asm("loc_4AFD29: mov 0xC(%esp),%edx;");
    asm("loc_4AFD2D: movb $0,0x87C(%ebp);");
    asm("loc_4AFD34: cmp %eax,0x24(%ebx,%edx);");
    asm("loc_4AFD38: je loc_4AFD4C;");
    asm("loc_4AFD3A: mov 0x4F4(%ebp),%ecx;");
    asm("loc_4AFD40: or %al,0x6C(%ecx);");
    asm("loc_4AFD43: mov 0x4FC(%ebp),%ebp;");
    asm("loc_4AFD49: or %al,0x6C(%ebp);");
    asm("loc_4AFD4C: mov 0xC(%esp),%eax;");
    asm("loc_4AFD50: push %eax;");
    asm("loc_4AFD51: call _sub_5B7E1D;");
    asm("loc_4AFD56: mov 0x9C(%esp),%ecx;");
    asm("loc_4AFD5D: add $4,%esp;");
    asm("loc_4AFD60: pop %ebp;");
    asm("loc_4AFD61: pop %ebx;");
    asm("loc_4AFD62: mov %ecx,%fs:0;");
    asm("loc_4AFD69: add $0x9C,%esp;");
    asm("loc_4AFD6F: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AFD80() // _sub_4AFD80
{
    __DEBUG_ASM(4AFD80);
    // chunk 0x4AFD80 _sub_4AFD80
    asm("loc_4AFD80: push %ebx;");
    asm("loc_4AFD81: push %ebp;");
    asm("loc_4AFD82: push %esi;");
    asm("loc_4AFD83: push %edi;");
    asm("loc_4AFD84: mov 0x14(%esp),%edi;");
    asm("loc_4AFD88: mov %ecx,%esi;");
    asm("loc_4AFD8A: mov %edi,%ecx;");
    asm("loc_4AFD8C: calll *_import_5C6404;");
    asm("loc_4AFD92: mov _import_5C6D00,%ebx;");
    asm("loc_4AFD98: mov %eax,%ebp;");
    asm("loc_4AFD9A: push $0;");
    asm("loc_4AFD9C: mov %edi,%ecx;");
    asm("loc_4AFD9E: mov %ebp,0x18(%esp);");
    asm("loc_4AFDA2: call *%ebx;");
    asm("loc_4AFDA4: cmp $1,%ebp;");
    asm("loc_4AFDA7: mov %eax,(%esi);");
    asm("loc_4AFDA9: jle loc_4AFDF2;");
    asm("loc_4AFDAB: push $1;");
    asm("loc_4AFDAD: mov %edi,%ecx;");
    asm("loc_4AFDAF: call *%ebx;");
    asm("loc_4AFDB1: push $2;");
    asm("loc_4AFDB3: mov %edi,%ecx;");
    asm("loc_4AFDB5: mov %eax,4(%esi);");
    asm("loc_4AFDB8: call *%ebx;");
    asm("loc_4AFDBA: push $3;");
    asm("loc_4AFDBC: mov %edi,%ecx;");
    asm("loc_4AFDBE: mov %eax,8(%esi);");
    asm("loc_4AFDC1: calll *_import_5C6034;");
    asm("loc_4AFDC7: push $4;");
    asm("loc_4AFDC9: mov %edi,%ecx;");
    asm("loc_4AFDCB: mov %al,0x14(%esi);");
    asm("loc_4AFDCE: calll *_import_5C6034;");
    asm("loc_4AFDD4: mov %al,0x15(%esi);");
    asm("loc_4AFDD7: mov %ebp,%eax;");
    asm("loc_4AFDD9: cmp $5,%eax;");
    asm("loc_4AFDDC: jle loc_4AFDF6;");
    asm("loc_4AFDDE: push $5;");
    asm("loc_4AFDE0: mov %edi,%ecx;");
    asm("loc_4AFDE2: call *%ebx;");
    asm("loc_4AFDE4: push $6;");
    asm("loc_4AFDE6: mov %edi,%ecx;");
    asm("loc_4AFDE8: mov %eax,0xC(%esi);");
    asm("loc_4AFDEB: call *%ebx;");
    asm("loc_4AFDED: mov %eax,0x10(%esi);");
    asm("loc_4AFDF0: jmp loc_4AFDF6;");
    asm("loc_4AFDF2: movb $1,0x16(%esi);");
    asm("loc_4AFDF6: mov 0x18(%esp),%al;");
    asm("loc_4AFDFA: test %al,%al;");
    asm("loc_4AFDFC: je loc_4AFE28;");
    asm("loc_4AFDFE: mov (%esi),%eax;");
    asm("loc_4AFE00: push %eax;");
    asm("loc_4AFE01: call _sub_5B3770;");
    asm("loc_4AFE06: add $4,%esp;");
    asm("loc_4AFE09: test %eax,%eax;");
    asm("loc_4AFE0B: je loc_4AFE28;");
    asm("loc_4AFE0D: fildl 8(%esi);");
    asm("loc_4AFE10: mov (%eax),%edx;");
    asm("loc_4AFE12: fmull _data_5D5138;");
    asm("loc_4AFE18: fsts 0x18(%esp);");
    asm("loc_4AFE1C: mov 0x18(%esp),%ecx;");
    asm("loc_4AFE20: fstps 0x10(%eax);");
    asm("loc_4AFE23: push %ecx;");
    asm("loc_4AFE24: mov %eax,%ecx;");
    asm("loc_4AFE26: calll *(%edx);");
    asm("loc_4AFE28: pop %edi;");
    asm("loc_4AFE29: pop %esi;");
    asm("loc_4AFE2A: pop %ebp;");
    asm("loc_4AFE2B: pop %ebx;");
    asm("loc_4AFE2C: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4AFE30() // _sub_4AFE30
{
    __DEBUG_ASM(4AFE30);
    // chunk 0x4AFE30 _sub_4AFE30
    asm("loc_4AFE30: push $0xFFFFFFFF;");
    asm("loc_4AFE32: mov %fs:0,%eax;");
    asm("loc_4AFE38: push $_sub_5BCF6F;");
    asm("loc_4AFE3D: push %eax;");
    asm("loc_4AFE3E: mov $0x1600,%eax;");
    asm("loc_4AFE43: mov %esp,%fs:0;");
    asm("loc_4AFE4A: call _sub_5B7E90;");
    asm("loc_4AFE4F: push %ebx;");
    asm("loc_4AFE50: push %ebp;");
    asm("loc_4AFE51: push %esi;");
    asm("loc_4AFE52: push %edi;");
    asm("loc_4AFE53: mov %ecx,%edi;");
    asm("loc_4AFE55: lea 0xA8(%esp),%ecx;");
    asm("loc_4AFE5C: calll *_import_5C605C;");
    asm("loc_4AFE62: mov 0x1620(%esp),%ebp;");
    asm("loc_4AFE69: xor %ebx,%ebx;");
    asm("loc_4AFE6B: push %ebx;");
    asm("loc_4AFE6C: push %ebp;");
    asm("loc_4AFE6D: lea 0xB0(%esp),%ecx;");
    asm("loc_4AFE74: mov %ebx,0x1620(%esp);");
    asm("loc_4AFE7B: calll *_import_5C6058;");
    asm("loc_4AFE81: or $0xFFFFFFFF,%esi;");
    asm("loc_4AFE84: cmp %bl,%al;");
    asm("loc_4AFE86: mov %al,0x17(%esp);");
    asm("loc_4AFE8A: jne loc_4AFEB1;");
    asm("loc_4AFE8C: push %ebp;");
    asm("loc_4AFE8D: push $0x9F5;");
    asm("loc_4AFE92: push $_data_5D50E8;");
    asm("loc_4AFE97: mov $0x100001,%eax;");
    asm("loc_4AFE9C: push $_data_5D50C0;");
    asm("loc_4AFEA1: push %eax;");
    asm("loc_4AFEA2: mov _import_5C6D18,%eax;");
    asm("loc_4AFEA7: calll *(%eax);");
    asm("loc_4AFEA9: add $0x14,%esp;");
    asm("loc_4AFEAC: jmp loc_4B0251;");
    asm("loc_4AFEB1: lea 0xA8(%esp),%ecx;");
    asm("loc_4AFEB8: calll *_import_5C6054;");
    asm("loc_4AFEBE: test %al,%al;");
    asm("loc_4AFEC0: je loc_4B0237;");
    asm("loc_4AFEC6: push $_data_5D5158;");
    asm("loc_4AFECB: lea 0xAC(%esp),%ecx;");
    asm("loc_4AFED2: calll *_import_5C6050;");
    asm("loc_4AFED8: test %al,%al;");
    asm("loc_4AFEDA: je loc_4AFFE1;");
    asm("loc_4AFEE0: lea 0xA8(%esp),%ecx;");
    asm("loc_4AFEE7: mov %ebx,0x10(%esp);");
    asm("loc_4AFEEB: calll *_import_5C669C;");
    asm("loc_4AFEF1: test %al,%al;");
    asm("loc_4AFEF3: je loc_4AFF87;");
    asm("loc_4AFEF9: lea (%esp),%esp;");
    asm("loc_4AFF00: push $_data_5D5150;");
    asm("loc_4AFF05: lea 0xAC(%esp),%ecx;");
    asm("loc_4AFF0C: calll *_import_5C6CF4;");
    asm("loc_4AFF12: test %al,%al;");
    asm("loc_4AFF14: je loc_4AFF6F;");
    asm("loc_4AFF16: xor %ecx,%ecx;");
    asm("loc_4AFF18: mov 0x32E(%edi),%cl;");
    asm("loc_4AFF1E: lea 0xA8(%esp),%edx;");
    asm("loc_4AFF25: mov %esi,0x48(%esp);");
    asm("loc_4AFF29: mov %esi,0x4C(%esp);");
    asm("loc_4AFF2D: mov %esi,0x54(%esp);");
    asm("loc_4AFF31: mov %esi,0x58(%esp);");
    asm("loc_4AFF35: mov %bl,0x5C(%esp);");
    asm("loc_4AFF39: push %ecx;");
    asm("loc_4AFF3A: push %edx;");
    asm("loc_4AFF3B: lea 0x50(%esp),%ecx;");
    asm("loc_4AFF3F: mov %bl,0x65(%esp);");
    asm("loc_4AFF43: mov %bl,0x66(%esp);");
    asm("loc_4AFF47: mov %esi,0x58(%esp);");
    asm("loc_4AFF4B: call _sub_4AFD80;");
    asm("loc_4AFF50: mov 0x10(%esp),%eax;");
    asm("loc_4AFF54: inc %eax;");
    asm("loc_4AFF55: lea 0x48(%esp),%edx;");
    asm("loc_4AFF59: push %edx;");
    asm("loc_4AFF5A: lea 0x504(%edi),%ecx;");
    asm("loc_4AFF60: mov %eax,0x14(%esp);");
    asm("loc_4AFF64: mov 8(%ecx),%eax;");
    asm("loc_4AFF67: push $1;");
    asm("loc_4AFF69: push %eax;");
    asm("loc_4AFF6A: call _sub_4A3680;");
    asm("loc_4AFF6F: lea 0xA8(%esp),%ecx;");
    asm("loc_4AFF76: calll *_import_5C669C;");
    asm("loc_4AFF7C: test %al,%al;");
    asm("loc_4AFF7E: jne loc_4AFF00;");
    asm("loc_4AFF80: cmpl $0xE,0x10(%esp);");
    asm("loc_4AFF85: jg loc_4AFFE1;");
    asm("loc_4AFF87: mov 0x10(%esp),%ecx;");
    asm("loc_4AFF8B: mov $0xF,%eax;");
    asm("loc_4AFF90: sub %ecx,%eax;");
    asm("loc_4AFF92: lea 0x504(%edi),%ebp;");
    asm("loc_4AFF98: mov %eax,0x10(%esp);");
    asm("loc_4AFF9C: lea (%esp),%esp;");
    asm("loc_4AFFA0: mov 8(%ebp),%eax;");
    asm("loc_4AFFA3: lea 0x60(%esp),%ecx;");
    asm("loc_4AFFA7: push %ecx;");
    asm("loc_4AFFA8: push $1;");
    asm("loc_4AFFAA: push %eax;");
    asm("loc_4AFFAB: mov %ebp,%ecx;");
    asm("loc_4AFFAD: mov %esi,0x6C(%esp);");
    asm("loc_4AFFB1: mov %esi,0x70(%esp);");
    asm("loc_4AFFB5: mov %esi,0x78(%esp);");
    asm("loc_4AFFB9: mov %esi,0x7C(%esp);");
    asm("loc_4AFFBD: mov %bl,0x80(%esp);");
    asm("loc_4AFFC4: mov %bl,0x81(%esp);");
    asm("loc_4AFFCB: mov %bl,0x82(%esp);");
    asm("loc_4AFFD2: mov %esi,0x74(%esp);");
    asm("loc_4AFFD6: call _sub_4A3680;");
    asm("loc_4AFFDB: decl 0x10(%esp);");
    asm("loc_4AFFDF: jne loc_4AFFA0;");
    asm("loc_4AFFE1: push $_data_5D5148;");
    asm("loc_4AFFE6: lea 0xAC(%esp),%ecx;");
    asm("loc_4AFFED: calll *_import_5C6050;");
    asm("loc_4AFFF3: test %al,%al;");
    asm("loc_4AFFF5: je loc_4B0103;");
    asm("loc_4AFFFB: lea 0xA8(%esp),%ecx;");
    asm("loc_4B0002: mov %ebx,0x10(%esp);");
    asm("loc_4B0006: calll *_import_5C669C;");
    asm("loc_4B000C: test %al,%al;");
    asm("loc_4B000E: je loc_4B009B;");
    asm("loc_4B0014: push $_data_5D5150;");
    asm("loc_4B0019: lea 0xAC(%esp),%ecx;");
    asm("loc_4B0020: calll *_import_5C6CF4;");
    asm("loc_4B0026: test %al,%al;");
    asm("loc_4B0028: je loc_4B0083;");
    asm("loc_4B002A: xor %edx,%edx;");
    asm("loc_4B002C: mov 0x32E(%edi),%dl;");
    asm("loc_4B0032: lea 0xA8(%esp),%eax;");
    asm("loc_4B0039: lea 0x30(%esp),%ecx;");
    asm("loc_4B003D: mov %esi,0x30(%esp);");
    asm("loc_4B0041: mov %esi,0x34(%esp);");
    asm("loc_4B0045: mov %esi,0x3C(%esp);");
    asm("loc_4B0049: mov %esi,0x40(%esp);");
    asm("loc_4B004D: push %edx;");
    asm("loc_4B004E: push %eax;");
    asm("loc_4B004F: mov %bl,0x4C(%esp);");
    asm("loc_4B0053: mov %bl,0x4D(%esp);");
    asm("loc_4B0057: mov %bl,0x4E(%esp);");
    asm("loc_4B005B: mov %esi,0x40(%esp);");
    asm("loc_4B005F: call _sub_4AFD80;");
    asm("loc_4B0064: mov 0x10(%esp),%eax;");
    asm("loc_4B0068: inc %eax;");
    asm("loc_4B0069: lea 0x30(%esp),%edx;");
    asm("loc_4B006D: push %edx;");
    asm("loc_4B006E: lea 0x524(%edi),%ecx;");
    asm("loc_4B0074: mov %eax,0x14(%esp);");
    asm("loc_4B0078: mov 8(%ecx),%eax;");
    asm("loc_4B007B: push $1;");
    asm("loc_4B007D: push %eax;");
    asm("loc_4B007E: call _sub_4A3680;");
    asm("loc_4B0083: lea 0xA8(%esp),%ecx;");
    asm("loc_4B008A: calll *_import_5C669C;");
    asm("loc_4B0090: test %al,%al;");
    asm("loc_4B0092: jne loc_4B0014;");
    asm("loc_4B0094: cmpl $0xE,0x10(%esp);");
    asm("loc_4B0099: jg loc_4B0103;");
    asm("loc_4B009B: mov 0x10(%esp),%ecx;");
    asm("loc_4B009F: mov $0xF,%eax;");
    asm("loc_4B00A4: sub %ecx,%eax;");
    asm("loc_4B00A6: lea 0x524(%edi),%ebp;");
    asm("loc_4B00AC: mov %eax,0x10(%esp);");
    asm("loc_4B00B0: mov 8(%ebp),%eax;");
    asm("loc_4B00B3: lea 0x90(%esp),%ecx;");
    asm("loc_4B00BA: push %ecx;");
    asm("loc_4B00BB: push $1;");
    asm("loc_4B00BD: push %eax;");
    asm("loc_4B00BE: mov %ebp,%ecx;");
    asm("loc_4B00C0: mov %esi,0x9C(%esp);");
    asm("loc_4B00C7: mov %esi,0xA0(%esp);");
    asm("loc_4B00CE: mov %esi,0xA8(%esp);");
    asm("loc_4B00D5: mov %esi,0xAC(%esp);");
    asm("loc_4B00DC: mov %bl,0xB0(%esp);");
    asm("loc_4B00E3: mov %bl,0xB1(%esp);");
    asm("loc_4B00EA: mov %bl,0xB2(%esp);");
    asm("loc_4B00F1: mov %esi,0xA4(%esp);");
    asm("loc_4B00F8: call _sub_4A3680;");
    asm("loc_4B00FD: decl 0x10(%esp);");
    asm("loc_4B0101: jne loc_4B00B0;");
    asm("loc_4B0103: push $_data_5D5140;");
    asm("loc_4B0108: lea 0xAC(%esp),%ecx;");
    asm("loc_4B010F: calll *_import_5C6050;");
    asm("loc_4B0115: test %al,%al;");
    asm("loc_4B0117: je loc_4B0222;");
    asm("loc_4B011D: lea 0xA8(%esp),%ecx;");
    asm("loc_4B0124: mov %ebx,0x10(%esp);");
    asm("loc_4B0128: calll *_import_5C669C;");
    asm("loc_4B012E: test %al,%al;");
    asm("loc_4B0130: je loc_4B01BD;");
    asm("loc_4B0136: push $_data_5D5150;");
    asm("loc_4B013B: lea 0xAC(%esp),%ecx;");
    asm("loc_4B0142: calll *_import_5C6CF4;");
    asm("loc_4B0148: test %al,%al;");
    asm("loc_4B014A: je loc_4B01A5;");
    asm("loc_4B014C: xor %edx,%edx;");
    asm("loc_4B014E: mov 0x32E(%edi),%dl;");
    asm("loc_4B0154: lea 0xA8(%esp),%eax;");
    asm("loc_4B015B: lea 0x18(%esp),%ecx;");
    asm("loc_4B015F: mov %esi,0x18(%esp);");
    asm("loc_4B0163: mov %esi,0x1C(%esp);");
    asm("loc_4B0167: mov %esi,0x24(%esp);");
    asm("loc_4B016B: mov %esi,0x28(%esp);");
    asm("loc_4B016F: push %edx;");
    asm("loc_4B0170: push %eax;");
    asm("loc_4B0171: mov %bl,0x34(%esp);");
    asm("loc_4B0175: mov %bl,0x35(%esp);");
    asm("loc_4B0179: mov %bl,0x36(%esp);");
    asm("loc_4B017D: mov %esi,0x28(%esp);");
    asm("loc_4B0181: call _sub_4AFD80;");
    asm("loc_4B0186: mov 0x10(%esp),%eax;");
    asm("loc_4B018A: inc %eax;");
    asm("loc_4B018B: lea 0x18(%esp),%edx;");
    asm("loc_4B018F: push %edx;");
    asm("loc_4B0190: lea 0x544(%edi),%ecx;");
    asm("loc_4B0196: mov %eax,0x14(%esp);");
    asm("loc_4B019A: mov 8(%ecx),%eax;");
    asm("loc_4B019D: push $1;");
    asm("loc_4B019F: push %eax;");
    asm("loc_4B01A0: call _sub_4A3680;");
    asm("loc_4B01A5: lea 0xA8(%esp),%ecx;");
    asm("loc_4B01AC: calll *_import_5C669C;");
    asm("loc_4B01B2: test %al,%al;");
    asm("loc_4B01B4: jne loc_4B0136;");
    asm("loc_4B01B6: cmpl $0xE,0x10(%esp);");
    asm("loc_4B01BB: jg loc_4B0222;");
    asm("loc_4B01BD: mov 0x10(%esp),%ecx;");
    asm("loc_4B01C1: mov $0xF,%eax;");
    asm("loc_4B01C6: sub %ecx,%eax;");
    asm("loc_4B01C8: lea 0x544(%edi),%ebp;");
    asm("loc_4B01CE: mov %eax,0x10(%esp);");
    asm("loc_4B01D2: mov 8(%ebp),%eax;");
    asm("loc_4B01D5: lea 0x78(%esp),%ecx;");
    asm("loc_4B01D9: push %ecx;");
    asm("loc_4B01DA: push $1;");
    asm("loc_4B01DC: push %eax;");
    asm("loc_4B01DD: mov %ebp,%ecx;");
    asm("loc_4B01DF: mov %esi,0x84(%esp);");
    asm("loc_4B01E6: mov %esi,0x88(%esp);");
    asm("loc_4B01ED: mov %esi,0x90(%esp);");
    asm("loc_4B01F4: mov %esi,0x94(%esp);");
    asm("loc_4B01FB: mov %bl,0x98(%esp);");
    asm("loc_4B0202: mov %bl,0x99(%esp);");
    asm("loc_4B0209: mov %bl,0x9A(%esp);");
    asm("loc_4B0210: mov %esi,0x8C(%esp);");
    asm("loc_4B0217: call _sub_4A3680;");
    asm("loc_4B021C: decl 0x10(%esp);");
    asm("loc_4B0220: jne loc_4B01D2;");
    asm("loc_4B0222: lea 0xA8(%esp),%ecx;");
    asm("loc_4B0229: calll *_import_5C6054;");
    asm("loc_4B022F: test %al,%al;");
    asm("loc_4B0231: jne loc_4AFEC6;");
    asm("loc_4B0237: lea 0xA8(%esp),%ecx;");
    asm("loc_4B023E: calll *_import_5C6400;");
    asm("loc_4B0244: cmp %bl,0x32E(%edi);");
    asm("loc_4B024A: je loc_4B0251;");
    asm("loc_4B024C: call _sub_5B40F0;");
    asm("loc_4B0251: lea 0x14D0(%esp),%edx;");
    asm("loc_4B0258: movl $1,0x1618(%esp);");
    asm("loc_4B0263: mov %edx,0x10(%esp);");
    asm("loc_4B0267: lea 0x14D0(%esp),%ecx;");
    asm("loc_4B026E: movb $2,0x1618(%esp);");
    asm("loc_4B0276: calll *_import_5C604C;");
    asm("loc_4B027C: push $1;");
    asm("loc_4B027E: lea 0x14D4(%esp),%ecx;");
    asm("loc_4B0285: movb $1,0x161C(%esp);");
    asm("loc_4B028D: calll *_import_5C7084;");
    asm("loc_4B0293: mov _import_5C7080,%eax;");
    asm("loc_4B0298: mov (%eax),%ecx;");
    asm("loc_4B029A: push %ecx;");
    asm("loc_4B029B: push %ebx;");
    asm("loc_4B029C: lea 0xB0(%esp),%ecx;");
    asm("loc_4B02A3: movl $3,0x1620(%esp);");
    asm("loc_4B02AE: calll *_import_5C707C;");
    asm("loc_4B02B4: cmp %esi,0xB8(%esp);");
    asm("loc_4B02BB: je loc_4B030E;");
    asm("loc_4B02BD: cmp %ebx,0xBC(%esp);");
    asm("loc_4B02C4: mov _import_5C6EF8,%edi;");
    asm("loc_4B02CA: je loc_4B02FD;");
    asm("loc_4B02CC: mov 0xC0(%esp),%eax;");
    asm("loc_4B02D3: cmp %ebx,%eax;");
    asm("loc_4B02D5: je loc_4B02EC;");
    asm("loc_4B02D7: push %eax;");
    asm("loc_4B02D8: calll *_import_5C6EFC;");
    asm("loc_4B02DE: mov %ebx,0xC0(%esp);");
    asm("loc_4B02E5: mov %ebx,0xC4(%esp);");
    asm("loc_4B02EC: mov 0xBC(%esp),%edx;");
    asm("loc_4B02F3: push %edx;");
    asm("loc_4B02F4: call *%edi;");
    asm("loc_4B02F6: mov %ebx,0xBC(%esp);");
    asm("loc_4B02FD: mov 0xB8(%esp),%eax;");
    asm("loc_4B0304: push %eax;");
    asm("loc_4B0305: call *%edi;");
    asm("loc_4B0307: mov %esi,0xB8(%esp);");
    asm("loc_4B030E: mov 0xC0(%esp),%eax;");
    asm("loc_4B0315: cmp %ebx,%eax;");
    asm("loc_4B0317: je loc_4B0331;");
    asm("loc_4B0319: push %eax;");
    asm("loc_4B031A: calll *_import_5C71D8;");
    asm("loc_4B0320: add $4,%esp;");
    asm("loc_4B0323: mov %ebx,0xC0(%esp);");
    asm("loc_4B032A: mov %ebx,0xC4(%esp);");
    asm("loc_4B0331: push $1;");
    asm("loc_4B0333: lea 0xAC(%esp),%ecx;");
    asm("loc_4B033A: mov %ebx,0xCC(%esp);");
    asm("loc_4B0341: mov %esi,0x161C(%esp);");
    asm("loc_4B0348: calll *_import_5C7084;");
    asm("loc_4B034E: mov 0x1610(%esp),%ecx;");
    asm("loc_4B0355: mov 0x17(%esp),%al;");
    asm("loc_4B0359: pop %edi;");
    asm("loc_4B035A: pop %esi;");
    asm("loc_4B035B: pop %ebp;");
    asm("loc_4B035C: pop %ebx;");
    asm("loc_4B035D: mov %ecx,%fs:0;");
    asm("loc_4B0364: add $0x160C,%esp;");
    asm("loc_4B036A: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B0370() // _sub_4B0370
{
    __DEBUG_ASM(4B0370);
    // chunk 0x4B0370 _sub_4B0370
    asm("loc_4B0370: push %ebx;");
    asm("loc_4B0371: push %esi;");
    asm("loc_4B0372: push %edi;");
    asm("loc_4B0373: xor %edi,%edi;");
    asm("loc_4B0375: mov %ecx,%esi;");
    asm("loc_4B0377: xor %ebx,%ebx;");
    asm("loc_4B0379: lea (%esp),%esp;");
    asm("loc_4B0380: mov 0x508(%esi),%eax;");
    asm("loc_4B0386: test %eax,%eax;");
    asm("loc_4B0388: je loc_4B03E0;");
    asm("loc_4B038A: mov 0x50C(%esi),%ecx;");
    asm("loc_4B0390: sub %eax,%ecx;");
    asm("loc_4B0392: mov $0x2AAAAAAB,%eax;");
    asm("loc_4B0397: imul %ecx;");
    asm("loc_4B0399: sar $2,%edx;");
    asm("loc_4B039C: mov %edx,%eax;");
    asm("loc_4B039E: shr $0x1F,%eax;");
    asm("loc_4B03A1: add %eax,%edx;");
    asm("loc_4B03A3: cmp %edx,%edi;");
    asm("loc_4B03A5: jae loc_4B03E0;");
    asm("loc_4B03A7: mov 0x508(%esi),%ecx;");
    asm("loc_4B03AD: lea (%ecx,%ebx),%eax;");
    asm("loc_4B03B0: mov 8(%eax),%ecx;");
    asm("loc_4B03B3: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_4B03B6: je loc_4B03DA;");
    asm("loc_4B03B8: mov 0x14(%eax),%dl;");
    asm("loc_4B03BB: test %dl,%dl;");
    asm("loc_4B03BD: push $0xFFFFFFFF;");
    asm("loc_4B03BF: push %ecx;");
    asm("loc_4B03C0: mov %esi,%ecx;");
    asm("loc_4B03C2: je loc_4B03D2;");
    asm("loc_4B03C4: mov (%eax),%edx;");
    asm("loc_4B03C6: push %edx;");
    asm("loc_4B03C7: call _sub_4B1450;");
    asm("loc_4B03CC: inc %edi;");
    asm("loc_4B03CD: add $0x18,%ebx;");
    asm("loc_4B03D0: jmp loc_4B0380;");
    asm("loc_4B03D2: mov (%eax),%eax;");
    asm("loc_4B03D4: push %eax;");
    asm("loc_4B03D5: call _sub_4B1D20;");
    asm("loc_4B03DA: inc %edi;");
    asm("loc_4B03DB: add $0x18,%ebx;");
    asm("loc_4B03DE: jmp loc_4B0380;");
    asm("loc_4B03E0: xor %edi,%edi;");
    asm("loc_4B03E2: xor %ebx,%ebx;");
    asm("loc_4B03E4: mov 0x528(%esi),%eax;");
    asm("loc_4B03EA: test %eax,%eax;");
    asm("loc_4B03EC: je loc_4B0447;");
    asm("loc_4B03EE: mov 0x52C(%esi),%ecx;");
    asm("loc_4B03F4: sub %eax,%ecx;");
    asm("loc_4B03F6: mov $0x2AAAAAAB,%eax;");
    asm("loc_4B03FB: imul %ecx;");
    asm("loc_4B03FD: sar $2,%edx;");
    asm("loc_4B0400: mov %edx,%ecx;");
    asm("loc_4B0402: shr $0x1F,%ecx;");
    asm("loc_4B0405: add %ecx,%edx;");
    asm("loc_4B0407: cmp %edx,%edi;");
    asm("loc_4B0409: jae loc_4B0447;");
    asm("loc_4B040B: mov 0x528(%esi),%edx;");
    asm("loc_4B0411: mov 8(%edx,%ebx),%ecx;");
    asm("loc_4B0415: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_4B0418: lea (%edx,%ebx),%eax;");
    asm("loc_4B041B: je loc_4B0441;");
    asm("loc_4B041D: mov 0x14(%eax),%dl;");
    asm("loc_4B0420: test %dl,%dl;");
    asm("loc_4B0422: push $0xFFFFFFFF;");
    asm("loc_4B0424: push %ecx;");
    asm("loc_4B0425: je loc_4B0437;");
    asm("loc_4B0427: mov (%eax),%eax;");
    asm("loc_4B0429: push %eax;");
    asm("loc_4B042A: mov %esi,%ecx;");
    asm("loc_4B042C: call _sub_4B1450;");
    asm("loc_4B0431: inc %edi;");
    asm("loc_4B0432: add $0x18,%ebx;");
    asm("loc_4B0435: jmp loc_4B03E4;");
    asm("loc_4B0437: mov (%eax),%ecx;");
    asm("loc_4B0439: push %ecx;");
    asm("loc_4B043A: mov %esi,%ecx;");
    asm("loc_4B043C: call _sub_4B1D20;");
    asm("loc_4B0441: inc %edi;");
    asm("loc_4B0442: add $0x18,%ebx;");
    asm("loc_4B0445: jmp loc_4B03E4;");
    asm("loc_4B0447: xor %edi,%edi;");
    asm("loc_4B0449: xor %ebx,%ebx;");
    asm("loc_4B044B: nop;");
    asm("loc_4B044C: lea (%esp),%esp;");
    asm("loc_4B0450: mov 0x548(%esi),%eax;");
    asm("loc_4B0456: test %eax,%eax;");
    asm("loc_4B0458: je loc_4B04B0;");
    asm("loc_4B045A: mov 0x54C(%esi),%ecx;");
    asm("loc_4B0460: sub %eax,%ecx;");
    asm("loc_4B0462: mov $0x2AAAAAAB,%eax;");
    asm("loc_4B0467: imul %ecx;");
    asm("loc_4B0469: sar $2,%edx;");
    asm("loc_4B046C: mov %edx,%eax;");
    asm("loc_4B046E: shr $0x1F,%eax;");
    asm("loc_4B0471: add %eax,%edx;");
    asm("loc_4B0473: cmp %edx,%edi;");
    asm("loc_4B0475: jae loc_4B04B0;");
    asm("loc_4B0477: mov 0x548(%esi),%ecx;");
    asm("loc_4B047D: lea (%ecx,%ebx),%eax;");
    asm("loc_4B0480: mov 8(%eax),%ecx;");
    asm("loc_4B0483: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_4B0486: je loc_4B04AA;");
    asm("loc_4B0488: mov 0x14(%eax),%dl;");
    asm("loc_4B048B: test %dl,%dl;");
    asm("loc_4B048D: push $0xFFFFFFFF;");
    asm("loc_4B048F: push %ecx;");
    asm("loc_4B0490: mov %esi,%ecx;");
    asm("loc_4B0492: je loc_4B04A2;");
    asm("loc_4B0494: mov (%eax),%edx;");
    asm("loc_4B0496: push %edx;");
    asm("loc_4B0497: call _sub_4B1450;");
    asm("loc_4B049C: inc %edi;");
    asm("loc_4B049D: add $0x18,%ebx;");
    asm("loc_4B04A0: jmp loc_4B0450;");
    asm("loc_4B04A2: mov (%eax),%eax;");
    asm("loc_4B04A4: push %eax;");
    asm("loc_4B04A5: call _sub_4B1D20;");
    asm("loc_4B04AA: inc %edi;");
    asm("loc_4B04AB: add $0x18,%ebx;");
    asm("loc_4B04AE: jmp loc_4B0450;");
    asm("loc_4B04B0: mov 0x10(%esp),%eax;");
    asm("loc_4B04B4: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4B04B7: jne loc_4B04D4;");
    asm("loc_4B04B9: push $_data_5D4A14;");
    asm("loc_4B04BE: call _sub_5B36B0;");
    asm("loc_4B04C3: flds 0x14(%eax);");
    asm("loc_4B04C6: fmuls _data_5CA230;");
    asm("loc_4B04CC: add $4,%esp;");
    asm("loc_4B04CF: call _sub_5B7EC0;");
    asm("loc_4B04D4: push $0xFFFFFFFF;");
    asm("loc_4B04D6: push %eax;");
    asm("loc_4B04D7: push $0x767;");
    asm("loc_4B04DC: mov %esi,%ecx;");
    asm("loc_4B04DE: call _sub_4B1450;");
    asm("loc_4B04E3: push $_data_5D49EC;");
    asm("loc_4B04E8: call _sub_5B36B0;");
    asm("loc_4B04ED: mov %eax,%esi;");
    asm("loc_4B04EF: mov (%esi),%edx;");
    asm("loc_4B04F1: add $4,%esp;");
    asm("loc_4B04F4: push $0;");
    asm("loc_4B04F6: mov %esi,%ecx;");
    asm("loc_4B04F8: movl $0,0x10(%esi);");
    asm("loc_4B04FF: calll *(%edx);");
    asm("loc_4B0501: flds 0x14(%esi);");
    asm("loc_4B0504: fcomps 0x10(%esi);");
    asm("loc_4B0507: fnstsw %ax;");
    asm("loc_4B0509: test $0x44,%ah;");
    asm("loc_4B050C: jnp loc_4B0524;");
    asm("loc_4B050E: flds 0x10(%esi);");
    asm("loc_4B0511: mov (%esi),%eax;");
    asm("loc_4B0513: fsts 0x10(%esp);");
    asm("loc_4B0517: mov 0x10(%esp),%ecx;");
    asm("loc_4B051B: fstps 0x14(%esi);");
    asm("loc_4B051E: push %ecx;");
    asm("loc_4B051F: mov %esi,%ecx;");
    asm("loc_4B0521: calll *4(%eax);");
    asm("loc_4B0524: pop %edi;");
    asm("loc_4B0525: pop %esi;");
    asm("loc_4B0526: pop %ebx;");
    asm("loc_4B0527: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B0530() // _sub_4B0530
{
    __DEBUG_ASM(4B0530);
    // chunk 0x4B0530 _sub_4B0530
    asm("loc_4B0530: sub $0x3C,%esp;");
    asm("loc_4B0533: push %ebp;");
    asm("loc_4B0534: mov %ecx,%ebp;");
    asm("loc_4B0536: mov 0x32E(%ebp),%al;");
    asm("loc_4B053C: test %al,%al;");
    asm("loc_4B053E: jne loc_4B0694;");
    asm("loc_4B0544: push %ebx;");
    asm("loc_4B0545: push %esi;");
    asm("loc_4B0546: lea 0x7B8(%ebp),%edx;");
    asm("loc_4B054C: push %edi;");
    asm("loc_4B054D: movl $0xFFFFFFFF,0x34(%esp);");
    asm("loc_4B0555: movb $0,0x48(%esp);");
    asm("loc_4B055A: movb $0,0x4A(%esp);");
    asm("loc_4B055F: xor %ebx,%ebx;");
    asm("loc_4B0561: mov %edx,0x10(%esp);");
    asm("loc_4B0565: mov 0x7F4(%ebp),%eax;");
    asm("loc_4B056B: cmp $1,%eax;");
    asm("loc_4B056E: jne loc_4B0578;");
    asm("loc_4B0570: mov 0x508(%ebp),%esi;");
    asm("loc_4B0576: jmp loc_4B0590;");
    asm("loc_4B0578: cmp $2,%eax;");
    asm("loc_4B057B: jne loc_4B0585;");
    asm("loc_4B057D: mov 0x548(%ebp),%esi;");
    asm("loc_4B0583: jmp loc_4B0590;");
    asm("loc_4B0585: cmp $3,%eax;");
    asm("loc_4B0588: jne loc_4B059D;");
    asm("loc_4B058A: mov 0x528(%ebp),%esi;");
    asm("loc_4B0590: add %ebx,%esi;");
    asm("loc_4B0592: lea 0x34(%esp),%edi;");
    asm("loc_4B0596: mov $6,%ecx;");
    asm("loc_4B059B: rep movsl (%esi),(%edi);");
    asm("loc_4B059D: mov 0x4A(%esp),%al;");
    asm("loc_4B05A1: test %al,%al;");
    asm("loc_4B05A3: jne loc_4B0659;");
    asm("loc_4B05A9: mov 0x48(%esp),%al;");
    asm("loc_4B05AD: test %al,%al;");
    asm("loc_4B05AF: push $0;");
    asm("loc_4B05B1: je loc_4B060D;");
    asm("loc_4B05B3: cmpl $0x536,0x38(%esp);");
    asm("loc_4B05BB: push $0;");
    asm("loc_4B05BD: push $0x3B;");
    asm("loc_4B05BF: jne loc_4B05E7;");
    asm("loc_4B05C1: mov 0x564(%ebp),%ecx;");
    asm("loc_4B05C7: mov (%ecx),%eax;");
    asm("loc_4B05C9: calll *0xA8(%eax);");
    asm("loc_4B05CF: mov 0x10(%esp),%ecx;");
    asm("loc_4B05D3: mov %eax,0x1C(%esp);");
    asm("loc_4B05D7: movl $0,0x20(%esp);");
    asm("loc_4B05DF: fildll 0x1C(%esp);");
    asm("loc_4B05E3: fstps (%ecx);");
    asm("loc_4B05E5: jmp loc_4B065F;");
    asm("loc_4B05E7: mov -0x164(%edx),%ecx;");
    asm("loc_4B05ED: mov (%ecx),%edx;");
    asm("loc_4B05EF: calll *0xA8(%edx);");
    asm("loc_4B05F5: mov %eax,0x24(%esp);");
    asm("loc_4B05F9: mov 0x10(%esp),%eax;");
    asm("loc_4B05FD: movl $0,0x28(%esp);");
    asm("loc_4B0605: fildll 0x24(%esp);");
    asm("loc_4B0609: fstps (%eax);");
    asm("loc_4B060B: jmp loc_4B065F;");
    asm("loc_4B060D: mov -0x1D4(%edx),%ecx;");
    asm("loc_4B0613: mov (%ecx),%edx;");
    asm("loc_4B0615: lea 0x1C(%esp),%eax;");
    asm("loc_4B0619: push %eax;");
    asm("loc_4B061A: push $0x2F;");
    asm("loc_4B061C: calll *0xA8(%edx);");
    asm("loc_4B0622: mov 0x18(%esp),%ecx;");
    asm("loc_4B0626: mov %ecx,0x2C(%esp);");
    asm("loc_4B062A: xor %ecx,%ecx;");
    asm("loc_4B062C: mov %ecx,0x30(%esp);");
    asm("loc_4B0630: fildll 0x2C(%esp);");
    asm("loc_4B0634: movl $1,0x14(%esp);");
    asm("loc_4B063C: fcompl _data_5C8B68;");
    asm("loc_4B0642: fnstsw %ax;");
    asm("loc_4B0644: test $1,%ah;");
    asm("loc_4B0647: je loc_4B064D;");
    asm("loc_4B0649: mov %ecx,0x14(%esp);");
    asm("loc_4B064D: fildl 0x14(%esp);");
    asm("loc_4B0651: mov 0x10(%esp),%edx;");
    asm("loc_4B0655: fstps (%edx);");
    asm("loc_4B0657: jmp loc_4B065F;");
    asm("loc_4B0659: movl $0xBF800000,(%edx);");
    asm("loc_4B065F: mov 0x10(%esp),%edx;");
    asm("loc_4B0663: add $4,%edx;");
    asm("loc_4B0666: add $0x18,%ebx;");
    asm("loc_4B0669: cmp $0x150,%ebx;");
    asm("loc_4B066F: mov %edx,0x10(%esp);");
    asm("loc_4B0673: jl loc_4B0565;");
    asm("loc_4B0679: push $0x1E;");
    asm("loc_4B067B: call _sub_5646E0;");
    asm("loc_4B0680: push $0x1F;");
    asm("loc_4B0682: call _sub_5646E0;");
    asm("loc_4B0687: push $0x20;");
    asm("loc_4B0689: call _sub_5646E0;");
    asm("loc_4B068E: add $0xC,%esp;");
    asm("loc_4B0691: pop %edi;");
    asm("loc_4B0692: pop %esi;");
    asm("loc_4B0693: pop %ebx;");
    asm("loc_4B0694: pop %ebp;");
    asm("loc_4B0695: add $0x3C,%esp;");
    asm("loc_4B0698: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B06A0() // _sub_4B06A0
{
    __DEBUG_ASM(4B06A0);
    // chunk 0x4B06A0 _sub_4B06A0
    asm("loc_4B06A0: sub $0x2C,%esp;");
    asm("loc_4B06A3: push %ebp;");
    asm("loc_4B06A4: mov %ecx,%ebp;");
    asm("loc_4B06A6: mov 0x32E(%ebp),%al;");
    asm("loc_4B06AC: test %al,%al;");
    asm("loc_4B06AE: jne loc_4B090E;");
    asm("loc_4B06B4: push %ebx;");
    asm("loc_4B06B5: xor %ecx,%ecx;");
    asm("loc_4B06B7: push %esi;");
    asm("loc_4B06B8: lea 0x7B8(%ebp),%ebx;");
    asm("loc_4B06BE: push %edi;");
    asm("loc_4B06BF: movl $0xFFFFFFFF,0x24(%esp);");
    asm("loc_4B06C7: movb $0,0x38(%esp);");
    asm("loc_4B06CC: movb $0,0x3A(%esp);");
    asm("loc_4B06D1: mov %ecx,0x10(%esp);");
    asm("loc_4B06D5: mov %ecx,0x18(%esp);");
    asm("loc_4B06D9: mov %ebx,0x14(%esp);");
    asm("loc_4B06DD: lea (%ecx),%ecx;");
    asm("loc_4B06E0: mov 0x7F4(%ebp),%eax;");
    asm("loc_4B06E6: cmp $1,%eax;");
    asm("loc_4B06E9: jne loc_4B06F3;");
    asm("loc_4B06EB: mov 0x508(%ebp),%esi;");
    asm("loc_4B06F1: jmp loc_4B070B;");
    asm("loc_4B06F3: cmp $2,%eax;");
    asm("loc_4B06F6: jne loc_4B0700;");
    asm("loc_4B06F8: mov 0x548(%ebp),%esi;");
    asm("loc_4B06FE: jmp loc_4B070B;");
    asm("loc_4B0700: cmp $3,%eax;");
    asm("loc_4B0703: jne loc_4B0718;");
    asm("loc_4B0705: mov 0x528(%ebp),%esi;");
    asm("loc_4B070B: add %ecx,%esi;");
    asm("loc_4B070D: lea 0x24(%esp),%edi;");
    asm("loc_4B0711: mov $6,%ecx;");
    asm("loc_4B0716: rep movsl (%esi),(%edi);");
    asm("loc_4B0718: mov 0x3A(%esp),%al;");
    asm("loc_4B071C: test %al,%al;");
    asm("loc_4B071E: jne loc_4B08CC;");
    asm("loc_4B0724: mov 0x38(%esp),%al;");
    asm("loc_4B0728: test %al,%al;");
    asm("loc_4B072A: je loc_4B0868;");
    asm("loc_4B0730: mov 0x24(%esp),%esi;");
    asm("loc_4B0734: cmp $0x536,%esi;");
    asm("loc_4B073A: jne loc_4B07E6;");
    asm("loc_4B0740: mov 0x8B8(%ebp),%eax;");
    asm("loc_4B0746: cmp 0x330(%ebp),%eax;");
    asm("loc_4B074C: jne loc_4B0760;");
    asm("loc_4B074E: mov 0x8BC(%ebp),%cl;");
    asm("loc_4B0754: cmp 0x334(%ebp),%cl;");
    asm("loc_4B075A: je loc_4B08CC;");
    asm("loc_4B0760: xor %edi,%edi;");
    asm("loc_4B0762: lea 0x954(%ebp),%esi;");
    asm("loc_4B0768: lea 0x8D4(%ebp),%ebx;");
    asm("loc_4B076E: mov %edi,%edi;");
    asm("loc_4B0770: mov 0x944(%edi,%ebp),%al;");
    asm("loc_4B0777: test %al,%al;");
    asm("loc_4B0779: je loc_4B07D1;");
    asm("loc_4B077B: mov -8(%ebx),%edx;");
    asm("loc_4B077E: cmp 0x8B8(%ebp),%edx;");
    asm("loc_4B0784: jne loc_4B07D1;");
    asm("loc_4B0786: mov (%ebx),%ecx;");
    asm("loc_4B0788: xor %eax,%eax;");
    asm("loc_4B078A: cmp $0x20,%ecx;");
    asm("loc_4B078D: movzbl 0x8BC(%ebp),%ecx;");
    asm("loc_4B0794: sete %al;");
    asm("loc_4B0797: cmp %eax,%ecx;");
    asm("loc_4B0799: jne loc_4B07D1;");
    asm("loc_4B079B: mov 0x40(%esp),%al;");
    asm("loc_4B079F: test %al,%al;");
    asm("loc_4B07A1: mov (%esi),%eax;");
    asm("loc_4B07A3: je loc_4B07C2;");
    asm("loc_4B07A5: mov 0x564(%ebp),%ecx;");
    asm("loc_4B07AB: mov (%ecx),%edx;");
    asm("loc_4B07AD: push $0;");
    asm("loc_4B07AF: push %eax;");
    asm("loc_4B07B0: push $0x38;");
    asm("loc_4B07B2: calll *0xA8(%edx);");
    asm("loc_4B07B8: mov 0x10(%esp),%ecx;");
    asm("loc_4B07BC: mov (%esi),%edx;");
    asm("loc_4B07BE: push %ecx;");
    asm("loc_4B07BF: push %edx;");
    asm("loc_4B07C0: jmp loc_4B07C5;");
    asm("loc_4B07C2: push $0xFFFFFFFF;");
    asm("loc_4B07C4: push %eax;");
    asm("loc_4B07C5: mov %ebp,%ecx;");
    asm("loc_4B07C7: push $0x536;");
    asm("loc_4B07CC: call _sub_4B1450;");
    asm("loc_4B07D1: inc %edi;");
    asm("loc_4B07D2: add $4,%esi;");
    asm("loc_4B07D5: add $0xC,%ebx;");
    asm("loc_4B07D8: cmp $0xA,%edi;");
    asm("loc_4B07DB: jl loc_4B0770;");
    asm("loc_4B07DD: mov 0x14(%esp),%ebx;");
    asm("loc_4B07E1: jmp loc_4B08CC;");
    asm("loc_4B07E6: mov -0x164(%ebx),%ecx;");
    asm("loc_4B07EC: mov (%ecx),%edx;");
    asm("loc_4B07EE: push $0;");
    asm("loc_4B07F0: push $0;");
    asm("loc_4B07F2: push $0x3B;");
    asm("loc_4B07F4: calll *0xA8(%edx);");
    asm("loc_4B07FA: mov %eax,0x1C(%esp);");
    asm("loc_4B07FE: movl $0,0x20(%esp);");
    asm("loc_4B0806: fildll 0x1C(%esp);");
    asm("loc_4B080A: fcomps (%ebx);");
    asm("loc_4B080C: fnstsw %ax;");
    asm("loc_4B080E: test $0x44,%ah;");
    asm("loc_4B0811: jnp loc_4B08CC;");
    asm("loc_4B0817: mov 0x40(%esp),%al;");
    asm("loc_4B081B: flds (%ebx);");
    asm("loc_4B081D: test %al,%al;");
    asm("loc_4B081F: je loc_4B0856;");
    asm("loc_4B0821: mov -0x164(%ebx),%esi;");
    asm("loc_4B0827: mov (%esi),%edi;");
    asm("loc_4B0829: push $0;");
    asm("loc_4B082B: call _sub_5B7EC0;");
    asm("loc_4B0830: push %eax;");
    asm("loc_4B0831: push $0x38;");
    asm("loc_4B0833: mov %esi,%ecx;");
    asm("loc_4B0835: calll *0xA8(%edi);");
    asm("loc_4B083B: flds (%ebx);");
    asm("loc_4B083D: mov 0x10(%esp),%eax;");
    asm("loc_4B0841: push %eax;");
    asm("loc_4B0842: call _sub_5B7EC0;");
    asm("loc_4B0847: mov 0x28(%esp),%ecx;");
    asm("loc_4B084B: push %eax;");
    asm("loc_4B084C: push %ecx;");
    asm("loc_4B084D: mov %ebp,%ecx;");
    asm("loc_4B084F: call _sub_4B1450;");
    asm("loc_4B0854: jmp loc_4B08CC;");
    asm("loc_4B0856: push $0xFFFFFFFF;");
    asm("loc_4B0858: call _sub_5B7EC0;");
    asm("loc_4B085D: push %eax;");
    asm("loc_4B085E: push %esi;");
    asm("loc_4B085F: mov %ebp,%ecx;");
    asm("loc_4B0861: call _sub_4B1450;");
    asm("loc_4B0866: jmp loc_4B08CC;");
    asm("loc_4B0868: mov -0x19C(%ebx),%edx;");
    asm("loc_4B086E: testb $2,0x6C(%edx);");
    asm("loc_4B0872: je loc_4B08CC;");
    asm("loc_4B0874: flds (%ebx);");
    asm("loc_4B0876: fcompl _data_5C8B68;");
    asm("loc_4B087C: fnstsw %ax;");
    asm("loc_4B087E: test $1,%ah;");
    asm("loc_4B0881: jne loc_4B088A;");
    asm("loc_4B0883: mov $1,%eax;");
    asm("loc_4B0888: jmp loc_4B088C;");
    asm("loc_4B088A: xor %eax,%eax;");
    asm("loc_4B088C: mov -0x1D4(%ebx),%ecx;");
    asm("loc_4B0892: xor %edx,%edx;");
    asm("loc_4B0894: test %eax,%eax;");
    asm("loc_4B0896: mov (%ecx),%eax;");
    asm("loc_4B0898: sete %dl;");
    asm("loc_4B089B: push $0;");
    asm("loc_4B089D: mov %edx,%esi;");
    asm("loc_4B089F: push %esi;");
    asm("loc_4B08A0: push $0x30;");
    asm("loc_4B08A2: calll *0xA8(%eax);");
    asm("loc_4B08A8: mov 0x40(%esp),%al;");
    asm("loc_4B08AC: test %al,%al;");
    asm("loc_4B08AE: je loc_4B08BD;");
    asm("loc_4B08B0: mov 0x10(%esp),%ecx;");
    asm("loc_4B08B4: mov 0x24(%esp),%edx;");
    asm("loc_4B08B8: push %ecx;");
    asm("loc_4B08B9: push %esi;");
    asm("loc_4B08BA: push %edx;");
    asm("loc_4B08BB: jmp loc_4B08C5;");
    asm("loc_4B08BD: mov 0x24(%esp),%eax;");
    asm("loc_4B08C1: push $0xFFFFFFFF;");
    asm("loc_4B08C3: push %esi;");
    asm("loc_4B08C4: push %eax;");
    asm("loc_4B08C5: mov %ebp,%ecx;");
    asm("loc_4B08C7: call _sub_4B1D20;");
    asm("loc_4B08CC: mov 0x18(%esp),%ecx;");
    asm("loc_4B08D0: mov 0x10(%esp),%edi;");
    asm("loc_4B08D4: add $0x18,%ecx;");
    asm("loc_4B08D7: inc %edi;");
    asm("loc_4B08D8: add $4,%ebx;");
    asm("loc_4B08DB: cmp $0x150,%ecx;");
    asm("loc_4B08E1: mov %edi,0x10(%esp);");
    asm("loc_4B08E5: mov %ebx,0x14(%esp);");
    asm("loc_4B08E9: mov %ecx,0x18(%esp);");
    asm("loc_4B08ED: jl loc_4B06E0;");
    asm("loc_4B08F3: push $0x1E;");
    asm("loc_4B08F5: call _sub_5646E0;");
    asm("loc_4B08FA: push $0x1F;");
    asm("loc_4B08FC: call _sub_5646E0;");
    asm("loc_4B0901: push $0x20;");
    asm("loc_4B0903: call _sub_5646E0;");
    asm("loc_4B0908: add $0xC,%esp;");
    asm("loc_4B090B: pop %edi;");
    asm("loc_4B090C: pop %esi;");
    asm("loc_4B090D: pop %ebx;");
    asm("loc_4B090E: pop %ebp;");
    asm("loc_4B090F: add $0x2C,%esp;");
    asm("loc_4B0912: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B0920() // _sub_4B0920
{
    asm("jmp dgb_4B0920;"); // jumptable skip
    asm(".long _jmp_4B143C;"); // jumptable address
    __DEBUG_ASM(4B0920);
    // chunk 0x4B0920 _sub_4B0920
    asm("loc_4B0920: sub $0x27C,%esp;");
    asm("loc_4B0926: push %ebx;");
    asm("loc_4B0927: push %ebp;");
    asm("loc_4B0928: mov %ecx,%ebx;");
    asm("loc_4B092A: mov 0x32E(%ebx),%al;");
    asm("loc_4B0930: test %al,%al;");
    asm("loc_4B0932: push %esi;");
    asm("loc_4B0933: push %edi;");
    asm("loc_4B0934: jne loc_4B0993;");
    asm("loc_4B0936: mov 0x654(%ebx),%ecx;");
    asm("loc_4B093C: push $0x3C656042;");
    asm("loc_4B0941: push $0x3E75C28F;");
    asm("loc_4B0946: call _sub_595E30;");
    asm("loc_4B094B: mov 0x654(%ebx),%ecx;");
    asm("loc_4B0951: lea 0x3C(%esp),%edx;");
    asm("loc_4B0955: movl $0,0x3C(%esp);");
    asm("loc_4B095D: movl $0,0x40(%esp);");
    asm("loc_4B0965: movl $0,0x44(%esp);");
    asm("loc_4B096D: mov (%ecx),%eax;");
    asm("loc_4B096F: push %edx;");
    asm("loc_4B0970: calll *0x14(%eax);");
    asm("loc_4B0973: mov 0x5AC(%ebx),%ecx;");
    asm("loc_4B0979: push $_data_5D01A8;");
    asm("loc_4B097E: call _sub_58A790;");
    asm("loc_4B0983: mov 0x5AC(%ebx),%ecx;");
    asm("loc_4B0989: push $0x3E5C28F6;");
    asm("loc_4B098E: call _sub_58B730;");
    asm("loc_4B0993: xor %edx,%edx;");
    asm("loc_4B0995: xor %ecx,%ecx;");
    asm("loc_4B0997: mov %edx,0x1C(%esp);");
    asm("loc_4B099B: mov %ecx,0x20(%esp);");
    asm("loc_4B099F: lea 0x5E4(%ebx),%ebp;");
    asm("loc_4B09A5: jmp loc_4B09B0;");
    asm("loc_4B09A7: xor %edx,%edx;");
    asm("loc_4B09A9: lea (%esp),%esp;");
    asm("loc_4B09B0: mov 0x32E(%ebx),%al;");
    asm("loc_4B09B6: test %al,%al;");
    asm("loc_4B09B8: movb $0,0x13(%esp);");
    asm("loc_4B09BD: jne loc_4B09C9;");
    asm("loc_4B09BF: mov (%ebp),%eax;");
    asm("loc_4B09C2: orb $2,0x331(%eax);");
    asm("loc_4B09C9: mov 0x7F4(%ebx),%eax;");
    asm("loc_4B09CF: or $0xFFFFFFFF,%esi;");
    asm("loc_4B09D2: cmp $1,%eax;");
    asm("loc_4B09D5: mov %esi,0x24(%esp);");
    asm("loc_4B09D9: movb $0,0x38(%esp);");
    asm("loc_4B09DE: movb $0,0x39(%esp);");
    asm("loc_4B09E3: movb $0,0x3A(%esp);");
    asm("loc_4B09E8: jne loc_4B09F2;");
    asm("loc_4B09EA: mov 0x508(%ebx),%esi;");
    asm("loc_4B09F0: jmp loc_4B0A0E;");
    asm("loc_4B09F2: cmp $2,%eax;");
    asm("loc_4B09F5: jne loc_4B09FF;");
    asm("loc_4B09F7: mov 0x548(%ebx),%esi;");
    asm("loc_4B09FD: jmp loc_4B0A0E;");
    asm("loc_4B09FF: cmp $3,%eax;");
    asm("loc_4B0A02: jne loc_4B0AB5;");
    asm("loc_4B0A08: mov 0x528(%ebx),%esi;");
    asm("loc_4B0A0E: add %ecx,%esi;");
    asm("loc_4B0A10: lea 0x24(%esp),%edi;");
    asm("loc_4B0A14: mov $6,%ecx;");
    asm("loc_4B0A19: rep movsl (%esi),(%edi);");
    asm("loc_4B0A1B: mov 0x24(%esp),%eax;");
    asm("loc_4B0A1F: cmp $0x534,%eax;");
    asm("loc_4B0A24: jne loc_4B0A4B;");
    asm("loc_4B0A26: mov _import_5C6DE0,%eax;");
    asm("loc_4B0A2B: mov %edx,0x14(%esp);");
    asm("loc_4B0A2F: mov (%eax),%eax;");
    asm("loc_4B0A31: mov (%eax),%ecx;");
    asm("loc_4B0A33: lea 0x14(%esp),%edx;");
    asm("loc_4B0A37: push %edx;");
    asm("loc_4B0A38: push $1;");
    asm("loc_4B0A3A: push %eax;");
    asm("loc_4B0A3B: calll *0x20(%ecx);");
    asm("loc_4B0A3E: mov 0x14(%esp),%eax;");
    asm("loc_4B0A42: test %eax,%eax;");
    asm("loc_4B0A44: sete 0x13(%esp);");
    asm("loc_4B0A49: jmp loc_4B0AB1;");
    asm("loc_4B0A4B: cmp $0x657,%eax;");
    asm("loc_4B0A50: jne loc_4B0A77;");
    asm("loc_4B0A52: mov _import_5C6DE0,%eax;");
    asm("loc_4B0A57: mov %edx,0x14(%esp);");
    asm("loc_4B0A5B: mov (%eax),%eax;");
    asm("loc_4B0A5D: mov (%eax),%ecx;");
    asm("loc_4B0A5F: lea 0x14(%esp),%edx;");
    asm("loc_4B0A63: push %edx;");
    asm("loc_4B0A64: push $8;");
    asm("loc_4B0A66: push %eax;");
    asm("loc_4B0A67: calll *0x20(%ecx);");
    asm("loc_4B0A6A: mov 0x14(%esp),%eax;");
    asm("loc_4B0A6E: test %eax,%eax;");
    asm("loc_4B0A70: sete 0x13(%esp);");
    asm("loc_4B0A75: jmp loc_4B0AB1;");
    asm("loc_4B0A77: cmp $0x67F,%eax;");
    asm("loc_4B0A7C: jne loc_4B0A9B;");
    asm("loc_4B0A7E: mov $0xA,%ecx;");
    asm("loc_4B0A83: mov $_data_679BC0,%esi;");
    asm("loc_4B0A88: lea 0x164(%esp),%edi;");
    asm("loc_4B0A8F: rep movsl (%esi),(%edi);");
    asm("loc_4B0A91: cmpl $0x20,0x174(%esp);");
    asm("loc_4B0A99: jmp loc_4B0AAA;");
    asm("loc_4B0A9B: cmp $0x57F,%eax;");
    asm("loc_4B0AA0: jne loc_4B0AB1;");
    asm("loc_4B0AA2: calll *_import_5C60D0;");
    asm("loc_4B0AA8: test %al,%al;");
    asm("loc_4B0AAA: jne loc_4B0AB1;");
    asm("loc_4B0AAC: movb $1,0x13(%esp);");
    asm("loc_4B0AB1: mov 0x24(%esp),%esi;");
    asm("loc_4B0AB5: mov 0x290(%esp),%eax;");
    asm("loc_4B0ABC: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4B0ABF: je loc_4B0AC9;");
    asm("loc_4B0AC1: cmp %esi,%eax;");
    asm("loc_4B0AC3: jne loc_4B1409;");
    asm("loc_4B0AC9: mov 0x70(%ebp),%ecx;");
    asm("loc_4B0ACC: mov (%ecx),%eax;");
    asm("loc_4B0ACE: push $0x64;");
    asm("loc_4B0AD0: push $0;");
    asm("loc_4B0AD2: push $0x37;");
    asm("loc_4B0AD4: calll *0xA8(%eax);");
    asm("loc_4B0ADA: mov (%ebp),%eax;");
    asm("loc_4B0ADD: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0AE1: mov -0x70(%ebp),%eax;");
    asm("loc_4B0AE4: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0AE8: mov 0x70(%ebp),%eax;");
    asm("loc_4B0AEB: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0AEF: mov 0x118(%ebp),%eax;");
    asm("loc_4B0AF5: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0AF9: mov 0xA8(%ebp),%eax;");
    asm("loc_4B0AFF: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0B03: mov 0xE0(%ebp),%eax;");
    asm("loc_4B0B09: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0B0D: mov 0x150(%ebp),%eax;");
    asm("loc_4B0B13: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0B17: mov 0x188(%ebp),%eax;");
    asm("loc_4B0B1D: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0B21: mov 0x38(%ebp),%eax;");
    asm("loc_4B0B24: mov 0x6C(%eax),%cl;");
    asm("loc_4B0B27: and $0xFC,%cl;");
    asm("loc_4B0B2A: cmp $0xFFFFFFFF,%esi;");
    asm("loc_4B0B2D: mov %cl,0x6C(%eax);");
    asm("loc_4B0B30: jne loc_4B0B40;");
    asm("loc_4B0B32: mov -0x38(%ebp),%eax;");
    asm("loc_4B0B35: mov 0x6C(%eax),%cl;");
    asm("loc_4B0B38: and $0xFC,%cl;");
    asm("loc_4B0B3B: jmp loc_4B1406;");
    asm("loc_4B0B40: mov 0x3A(%esp),%al;");
    asm("loc_4B0B44: test %al,%al;");
    asm("loc_4B0B46: je loc_4B0B88;");
    asm("loc_4B0B48: mov -0x38(%ebp),%eax;");
    asm("loc_4B0B4B: andb $0xFC,0x6C(%eax);");
    asm("loc_4B0B4F: mov _data_67ECA8,%edx;");
    asm("loc_4B0B55: push $0x40;");
    asm("loc_4B0B57: lea 0xE8(%esp),%ecx;");
    asm("loc_4B0B5E: push %ecx;");
    asm("loc_4B0B5F: push %esi;");
    asm("loc_4B0B60: push %edx;");
    asm("loc_4B0B61: call _sub_4347E0;");
    asm("loc_4B0B66: mov -0x70(%ebp),%ecx;");
    asm("loc_4B0B69: mov (%ecx),%eax;");
    asm("loc_4B0B6B: add $0x10,%esp;");
    asm("loc_4B0B6E: push $0;");
    asm("loc_4B0B70: lea 0xE8(%esp),%edx;");
    asm("loc_4B0B77: push %edx;");
    asm("loc_4B0B78: push $0x1D;");
    asm("loc_4B0B7A: calll *0xA8(%eax);");
    asm("loc_4B0B80: mov -0x70(%ebp),%eax;");
    asm("loc_4B0B83: jmp loc_4B1400;");
    asm("loc_4B0B88: mov 0x13(%esp),%al;");
    asm("loc_4B0B8C: test %al,%al;");
    asm("loc_4B0B8E: jne loc_4B1409;");
    asm("loc_4B0B94: mov 0x39(%esp),%al;");
    asm("loc_4B0B98: test %al,%al;");
    asm("loc_4B0B9A: je loc_4B0C58;");
    asm("loc_4B0BA0: mov 0x32D(%ebx),%al;");
    asm("loc_4B0BA6: test %al,%al;");
    asm("loc_4B0BA8: je loc_4B0C58;");
    asm("loc_4B0BAE: mov -0x38(%ebp),%eax;");
    asm("loc_4B0BB1: mov _data_679B94,%ecx;");
    asm("loc_4B0BB7: mov %ecx,0x348(%eax);");
    asm("loc_4B0BBD: mov 0x188(%ebp),%edx;");
    asm("loc_4B0BC3: mov _data_679B94,%eax;");
    asm("loc_4B0BC8: mov %eax,0x348(%edx);");
    asm("loc_4B0BCE: mov 0x150(%ebp),%ecx;");
    asm("loc_4B0BD4: movb $1,0x37C(%ecx);");
    asm("loc_4B0BDB: mov 0x150(%ebp),%eax;");
    asm("loc_4B0BE1: andb $0xFB,0x388(%eax);");
    asm("loc_4B0BE8: mov 0x38(%ebp),%edx;");
    asm("loc_4B0BEB: mov _data_679B94,%eax;");
    asm("loc_4B0BF0: mov %eax,0x348(%edx);");
    asm("loc_4B0BF6: mov (%ebp),%ecx;");
    asm("loc_4B0BF9: movb $1,0x336(%ecx);");
    asm("loc_4B0C00: mov (%ebp),%eax;");
    asm("loc_4B0C03: andb $0xFD,0x331(%eax);");
    asm("loc_4B0C0A: mov 0xA8(%ebp),%edx;");
    asm("loc_4B0C10: mov _data_679B94,%eax;");
    asm("loc_4B0C15: mov %eax,0x348(%edx);");
    asm("loc_4B0C1B: mov 0xE0(%ebp),%ecx;");
    asm("loc_4B0C21: mov _data_679B94,%edx;");
    asm("loc_4B0C27: mov %edx,0x348(%ecx);");
    asm("loc_4B0C2D: mov 0x118(%ebp),%eax;");
    asm("loc_4B0C33: mov _data_679B94,%ecx;");
    asm("loc_4B0C39: mov %ecx,0x348(%eax);");
    asm("loc_4B0C3F: mov 0x70(%ebp),%edx;");
    asm("loc_4B0C42: movb $1,0x32D(%edx);");
    asm("loc_4B0C49: mov 0x70(%ebp),%eax;");
    asm("loc_4B0C4C: movb $0,0x32C(%eax);");
    asm("loc_4B0C53: jmp loc_4B0CFF;");
    asm("loc_4B0C58: mov -0x38(%ebp),%ecx;");
    asm("loc_4B0C5B: mov _data_679BB0,%edx;");
    asm("loc_4B0C61: mov %edx,0x348(%ecx);");
    asm("loc_4B0C67: mov 0x188(%ebp),%eax;");
    asm("loc_4B0C6D: mov _data_679BB0,%ecx;");
    asm("loc_4B0C73: mov %ecx,0x348(%eax);");
    asm("loc_4B0C79: mov 0x150(%ebp),%edx;");
    asm("loc_4B0C7F: movb $0,0x37C(%edx);");
    asm("loc_4B0C86: mov 0x150(%ebp),%eax;");
    asm("loc_4B0C8C: orb $4,0x388(%eax);");
    asm("loc_4B0C93: mov _data_679BB0,%ecx;");
    asm("loc_4B0C99: mov 0x38(%ebp),%eax;");
    asm("loc_4B0C9C: mov %ecx,0x348(%eax);");
    asm("loc_4B0CA2: mov (%ebp),%edx;");
    asm("loc_4B0CA5: movb $0,0x336(%edx);");
    asm("loc_4B0CAC: mov (%ebp),%eax;");
    asm("loc_4B0CAF: orb $2,0x331(%eax);");
    asm("loc_4B0CB6: mov 0xA8(%ebp),%eax;");
    asm("loc_4B0CBC: mov _data_679BB0,%ecx;");
    asm("loc_4B0CC2: mov %ecx,0x348(%eax);");
    asm("loc_4B0CC8: mov 0xE0(%ebp),%edx;");
    asm("loc_4B0CCE: mov _data_679BB0,%eax;");
    asm("loc_4B0CD3: mov %eax,0x348(%edx);");
    asm("loc_4B0CD9: mov 0x118(%ebp),%ecx;");
    asm("loc_4B0CDF: mov _data_679BB0,%edx;");
    asm("loc_4B0CE5: mov %edx,0x348(%ecx);");
    asm("loc_4B0CEB: mov 0x70(%ebp),%eax;");
    asm("loc_4B0CEE: movb $0,0x32D(%eax);");
    asm("loc_4B0CF5: mov 0x70(%ebp),%ecx;");
    asm("loc_4B0CF8: movb $1,0x32C(%ecx);");
    asm("loc_4B0CFF: mov -0x38(%ebp),%eax;");
    asm("loc_4B0D02: orb $3,0x6C(%eax);");
    asm("loc_4B0D06: mov _data_67ECA8,%eax;");
    asm("loc_4B0D0B: push $0x40;");
    asm("loc_4B0D0D: lea 0xE8(%esp),%edx;");
    asm("loc_4B0D14: push %edx;");
    asm("loc_4B0D15: push %esi;");
    asm("loc_4B0D16: push %eax;");
    asm("loc_4B0D17: call _sub_4347E0;");
    asm("loc_4B0D1C: mov -0x38(%ebp),%ecx;");
    asm("loc_4B0D1F: mov (%ecx),%edx;");
    asm("loc_4B0D21: add $0x10,%esp;");
    asm("loc_4B0D24: push $0;");
    asm("loc_4B0D26: lea 0xE8(%esp),%eax;");
    asm("loc_4B0D2D: push %eax;");
    asm("loc_4B0D2E: push $0x1D;");
    asm("loc_4B0D30: calll *0xA8(%edx);");
    asm("loc_4B0D36: push %esi;");
    asm("loc_4B0D37: call _sub_5B3770;");
    asm("loc_4B0D3C: mov %eax,%edi;");
    asm("loc_4B0D3E: add $4,%esp;");
    asm("loc_4B0D41: test %edi,%edi;");
    asm("loc_4B0D43: mov %edi,0x18(%esp);");
    asm("loc_4B0D47: je loc_4B0E14;");
    asm("loc_4B0D4D: mov 0x38(%esp),%al;");
    asm("loc_4B0D51: flds 0x14(%edi);");
    asm("loc_4B0D54: test %al,%al;");
    asm("loc_4B0D56: je loc_4B0D82;");
    asm("loc_4B0D58: mov 0x70(%ebp),%eax;");
    asm("loc_4B0D5B: fmuls _data_5CA230;");
    asm("loc_4B0D61: mov (%eax),%edi;");
    asm("loc_4B0D63: push $0;");
    asm("loc_4B0D65: call _sub_5B7EC0;");
    asm("loc_4B0D6A: mov 0x70(%ebp),%ecx;");
    asm("loc_4B0D6D: push %eax;");
    asm("loc_4B0D6E: push $0x38;");
    asm("loc_4B0D70: calll *0xA8(%edi);");
    asm("loc_4B0D76: mov 0x70(%ebp),%eax;");
    asm("loc_4B0D79: mov 0x18(%esp),%edi;");
    asm("loc_4B0D7D: jmp loc_4B0E10;");
    asm("loc_4B0D82: fcompl _data_5C8B68;");
    asm("loc_4B0D88: movl $1,0x14(%esp);");
    asm("loc_4B0D90: fnstsw %ax;");
    asm("loc_4B0D92: test $0x41,%ah;");
    asm("loc_4B0D95: je loc_4B0D9F;");
    asm("loc_4B0D97: movl $0,0x14(%esp);");
    asm("loc_4B0D9F: mov 0x14(%esp),%eax;");
    asm("loc_4B0DA3: mov (%ebp),%ecx;");
    asm("loc_4B0DA6: mov (%ecx),%edx;");
    asm("loc_4B0DA8: push $0;");
    asm("loc_4B0DAA: push %eax;");
    asm("loc_4B0DAB: push $0x30;");
    asm("loc_4B0DAD: calll *0xA8(%edx);");
    asm("loc_4B0DB3: mov (%ebp),%eax;");
    asm("loc_4B0DB6: orb $3,0x6C(%eax);");
    asm("loc_4B0DBA: mov 0x14(%esp),%eax;");
    asm("loc_4B0DBE: test %eax,%eax;");
    asm("loc_4B0DC0: push $0x40;");
    asm("loc_4B0DC2: je loc_4B0DDA;");
    asm("loc_4B0DC4: mov _data_67ECA8,%edx;");
    asm("loc_4B0DCA: lea 0xE8(%esp),%ecx;");
    asm("loc_4B0DD1: push %ecx;");
    asm("loc_4B0DD2: push $0x65F;");
    asm("loc_4B0DD7: push %edx;");
    asm("loc_4B0DD8: jmp loc_4B0DEE;");
    asm("loc_4B0DDA: mov _data_67ECA8,%ecx;");
    asm("loc_4B0DE0: lea 0xE8(%esp),%eax;");
    asm("loc_4B0DE7: push %eax;");
    asm("loc_4B0DE8: push $0x67A;");
    asm("loc_4B0DED: push %ecx;");
    asm("loc_4B0DEE: call _sub_4347E0;");
    asm("loc_4B0DF3: mov 0x38(%ebp),%ecx;");
    asm("loc_4B0DF6: mov (%ecx),%edx;");
    asm("loc_4B0DF8: add $0x10,%esp;");
    asm("loc_4B0DFB: push $0;");
    asm("loc_4B0DFD: lea 0xE8(%esp),%eax;");
    asm("loc_4B0E04: push %eax;");
    asm("loc_4B0E05: push $0x1D;");
    asm("loc_4B0E07: calll *0xA8(%edx);");
    asm("loc_4B0E0D: mov 0x38(%ebp),%eax;");
    asm("loc_4B0E10: orb $3,0x6C(%eax);");
    asm("loc_4B0E14: cmp $0x57F,%esi;");
    asm("loc_4B0E1A: jg loc_4B1278;");
    asm("loc_4B0E20: je loc_4B11AC;");
    asm("loc_4B0E26: mov %esi,%eax;");
    asm("loc_4B0E28: sub $0x534,%eax;");
    asm("loc_4B0E2D: je loc_4B1179;");
    asm("loc_4B0E33: sub $2,%eax;");
    asm("loc_4B0E36: je loc_4B0F0D;");
    asm("loc_4B0E3C: sub $0x48,%eax;");
    asm("loc_4B0E3F: jne loc_4B128C;");
    asm("loc_4B0E45: mov 0x150(%ebp),%eax;");
    asm("loc_4B0E4B: orb $3,0x6C(%eax);");
    asm("loc_4B0E4F: mov 0x188(%ebp),%eax;");
    asm("loc_4B0E55: orb $3,0x6C(%eax);");
    asm("loc_4B0E59: mov _data_67ECA8,%edx;");
    asm("loc_4B0E5F: push $0x40;");
    asm("loc_4B0E61: lea 0xE8(%esp),%ecx;");
    asm("loc_4B0E68: push %ecx;");
    asm("loc_4B0E69: push $0x60B;");
    asm("loc_4B0E6E: push %edx;");
    asm("loc_4B0E6F: call _sub_4347E0;");
    asm("loc_4B0E74: mov 0x188(%ebp),%ecx;");
    asm("loc_4B0E7A: mov (%ecx),%eax;");
    asm("loc_4B0E7C: add $0x10,%esp;");
    asm("loc_4B0E7F: push $0;");
    asm("loc_4B0E81: lea 0xE8(%esp),%edx;");
    asm("loc_4B0E88: push %edx;");
    asm("loc_4B0E89: push $0x1D;");
    asm("loc_4B0E8B: calll *0xA8(%eax);");
    asm("loc_4B0E91: mov 0x330(%ebx),%eax;");
    asm("loc_4B0E97: cmp 0x8B8(%ebx),%eax;");
    asm("loc_4B0E9D: jne loc_4B0EDD;");
    asm("loc_4B0E9F: mov 0x334(%ebx),%cl;");
    asm("loc_4B0EA5: cmp 0x8BC(%ebx),%cl;");
    asm("loc_4B0EAB: jne loc_4B0EDD;");
    asm("loc_4B0EAD: mov _data_679B94,%eax;");
    asm("loc_4B0EB2: mov 0x188(%ebp),%edx;");
    asm("loc_4B0EB8: mov %eax,0x348(%edx);");
    asm("loc_4B0EBE: mov 0x150(%ebp),%ecx;");
    asm("loc_4B0EC4: movb $1,0x37C(%ecx);");
    asm("loc_4B0ECB: mov 0x150(%ebp),%eax;");
    asm("loc_4B0ED1: andb $0xFB,0x388(%eax);");
    asm("loc_4B0ED8: jmp loc_4B1409;");
    asm("loc_4B0EDD: mov _data_679BB0,%eax;");
    asm("loc_4B0EE2: mov 0x188(%ebp),%edx;");
    asm("loc_4B0EE8: mov %eax,0x348(%edx);");
    asm("loc_4B0EEE: mov 0x150(%ebp),%ecx;");
    asm("loc_4B0EF4: movb $0,0x37C(%ecx);");
    asm("loc_4B0EFB: mov 0x150(%ebp),%eax;");
    asm("loc_4B0F01: orb $4,0x388(%eax);");
    asm("loc_4B0F08: jmp loc_4B1409;");
    asm("loc_4B0F0D: fildl 0x1C(%esp);");
    asm("loc_4B0F11: mov 0x564(%ebx),%ecx;");
    asm("loc_4B0F17: lea 0x3C(%esp),%eax;");
    asm("loc_4B0F1B: movl $0,0x3C(%esp);");
    asm("loc_4B0F23: fmuls _data_5D4E78;");
    asm("loc_4B0F29: movl $0,0x44(%esp);");
    asm("loc_4B0F31: push %eax;");
    asm("loc_4B0F32: fsts 0x18(%esp);");
    asm("loc_4B0F36: fstps 0x44(%esp);");
    asm("loc_4B0F3A: mov (%ecx),%edx;");
    asm("loc_4B0F3C: calll *0x14(%edx);");
    asm("loc_4B0F3F: flds 0x14(%esp);");
    asm("loc_4B0F43: mov 0x568(%ebx),%ecx;");
    asm("loc_4B0F49: fadd %st,%st(0);");
    asm("loc_4B0F4B: lea 0x64(%esp),%eax;");
    asm("loc_4B0F4F: movl $0,0x64(%esp);");
    asm("loc_4B0F57: fsts 0x18(%esp);");
    asm("loc_4B0F5B: movl $0,0x6C(%esp);");
    asm("loc_4B0F63: fstps 0x68(%esp);");
    asm("loc_4B0F67: mov (%ecx),%edx;");
    asm("loc_4B0F69: push %eax;");
    asm("loc_4B0F6A: calll *0x14(%edx);");
    asm("loc_4B0F6D: mov 0x18(%esp),%ecx;");
    asm("loc_4B0F71: mov %ecx,0x5C(%esp);");
    asm("loc_4B0F75: mov 0x56C(%ebx),%ecx;");
    asm("loc_4B0F7B: lea 0x58(%esp),%eax;");
    asm("loc_4B0F7F: movl $0,0x58(%esp);");
    asm("loc_4B0F87: movl $0,0x60(%esp);");
    asm("loc_4B0F8F: mov (%ecx),%edx;");
    asm("loc_4B0F91: push %eax;");
    asm("loc_4B0F92: calll *0x14(%edx);");
    asm("loc_4B0F95: mov 0x14(%esp),%ecx;");
    asm("loc_4B0F99: mov %ecx,0x50(%esp);");
    asm("loc_4B0F9D: mov 0x570(%ebx),%ecx;");
    asm("loc_4B0FA3: lea 0x4C(%esp),%eax;");
    asm("loc_4B0FA7: movl $0,0x4C(%esp);");
    asm("loc_4B0FAF: movl $0,0x54(%esp);");
    asm("loc_4B0FB7: mov (%ecx),%edx;");
    asm("loc_4B0FB9: push %eax;");
    asm("loc_4B0FBA: calll *0x14(%edx);");
    asm("loc_4B0FBD: mov 0x950(%ebx),%eax;");
    asm("loc_4B0FC3: mov 0x564(%ebx),%ecx;");
    asm("loc_4B0FC9: mov (%ecx),%edx;");
    asm("loc_4B0FCB: dec %eax;");
    asm("loc_4B0FCC: push %eax;");
    asm("loc_4B0FCD: push $0;");
    asm("loc_4B0FCF: push $0x37;");
    asm("loc_4B0FD1: calll *0xA8(%edx);");
    asm("loc_4B0FD7: mov $0xA,%ecx;");
    asm("loc_4B0FDC: mov $_data_679BC0,%esi;");
    asm("loc_4B0FE1: lea 0x7C(%esp),%edi;");
    asm("loc_4B0FE5: rep movsl (%esi),(%edi);");
    asm("loc_4B0FE7: xor %eax,%eax;");
    asm("loc_4B0FE9: lea 0x8CC(%ebx),%ecx;");
    asm("loc_4B0FEF: movb $0,0x13(%esp);");
    asm("loc_4B0FF4: mov %eax,0x18(%esp);");
    asm("loc_4B0FF8: lea 0x954(%ebx),%esi;");
    asm("loc_4B0FFE: mov %ecx,0x14(%esp);");
    asm("loc_4B1002: mov 0x944(%ebx,%eax),%cl;");
    asm("loc_4B1009: test %cl,%cl;");
    asm("loc_4B100B: je loc_4B1075;");
    asm("loc_4B100D: mov 0x14(%esp),%edx;");
    asm("loc_4B1011: mov (%edx),%eax;");
    asm("loc_4B1013: mov 4(%edx),%edi;");
    asm("loc_4B1016: mov 8(%edx),%ecx;");
    asm("loc_4B1019: cmp %eax,0x84(%esp);");
    asm("loc_4B1020: jne loc_4B1075;");
    asm("loc_4B1022: cmp %ecx,0x8C(%esp);");
    asm("loc_4B1029: jne loc_4B1075;");
    asm("loc_4B102B: push %edi;");
    asm("loc_4B102C: push %eax;");
    asm("loc_4B102D: cmp $0x20,%ecx;");
    asm("loc_4B1030: lea 0xAC(%esp),%edx;");
    asm("loc_4B1037: sete %cl;");
    asm("loc_4B103A: push $_data_5D5190;");
    asm("loc_4B103F: push %edx;");
    asm("loc_4B1040: mov %eax,0x8B8(%ebx);");
    asm("loc_4B1046: mov %eax,0x330(%ebx);");
    asm("loc_4B104C: mov %cl,0x334(%ebx);");
    asm("loc_4B1052: calll *_import_5C70EC;");
    asm("loc_4B1058: mov (%esi),%edx;");
    asm("loc_4B105A: mov 0x564(%ebx),%ecx;");
    asm("loc_4B1060: mov (%ecx),%eax;");
    asm("loc_4B1062: add $0x10,%esp;");
    asm("loc_4B1065: push $0;");
    asm("loc_4B1067: push %edx;");
    asm("loc_4B1068: push $0x38;");
    asm("loc_4B106A: calll *0xA8(%eax);");
    asm("loc_4B1070: movb $1,0x13(%esp);");
    asm("loc_4B1075: mov 0x18(%esp),%eax;");
    asm("loc_4B1079: mov 0x14(%esp),%edx;");
    asm("loc_4B107D: inc %eax;");
    asm("loc_4B107E: add $0xC,%edx;");
    asm("loc_4B1081: add $4,%esi;");
    asm("loc_4B1084: cmp $0xA,%eax;");
    asm("loc_4B1087: mov %eax,0x18(%esp);");
    asm("loc_4B108B: mov %edx,0x14(%esp);");
    asm("loc_4B108F: jl loc_4B1002;");
    asm("loc_4B1095: mov 0x13(%esp),%al;");
    asm("loc_4B1099: test %al,%al;");
    asm("loc_4B109B: mov _import_5C70EC,%esi;");
    asm("loc_4B10A1: jne loc_4B10F8;");
    asm("loc_4B10A3: mov 0x8C(%esp),%edx;");
    asm("loc_4B10AA: mov 0x84(%esp),%eax;");
    asm("loc_4B10B1: cmp $0x20,%edx;");
    asm("loc_4B10B4: mov 0x88(%esp),%edx;");
    asm("loc_4B10BB: push %edx;");
    asm("loc_4B10BC: push %eax;");
    asm("loc_4B10BD: mov %eax,0x8B8(%ebx);");
    asm("loc_4B10C3: mov %eax,0x330(%ebx);");
    asm("loc_4B10C9: lea 0xAC(%esp),%eax;");
    asm("loc_4B10D0: sete %cl;");
    asm("loc_4B10D3: push $_data_5D5190;");
    asm("loc_4B10D8: push %eax;");
    asm("loc_4B10D9: mov %cl,0x334(%ebx);");
    asm("loc_4B10DF: call *%esi;");
    asm("loc_4B10E1: mov 0x564(%ebx),%ecx;");
    asm("loc_4B10E7: mov (%ecx),%edx;");
    asm("loc_4B10E9: add $0x10,%esp;");
    asm("loc_4B10EC: push $0;");
    asm("loc_4B10EE: push $0;");
    asm("loc_4B10F0: push $0x38;");
    asm("loc_4B10F2: calll *0xA8(%edx);");
    asm("loc_4B10F8: mov 0x97C(%ebx),%al;");
    asm("loc_4B10FE: test %al,%al;");
    asm("loc_4B1100: je loc_4B1136;");
    asm("loc_4B1102: mov 0x334(%ebx),%al;");
    asm("loc_4B1108: test %al,%al;");
    asm("loc_4B110A: lea 0xA4(%esp),%eax;");
    asm("loc_4B1111: je loc_4B1123;");
    asm("loc_4B1113: push %eax;");
    asm("loc_4B1114: push $_data_5D5180;");
    asm("loc_4B1119: lea 0xAC(%esp),%ecx;");
    asm("loc_4B1120: push %ecx;");
    asm("loc_4B1121: jmp loc_4B1131;");
    asm("loc_4B1123: lea 0xA4(%esp),%edx;");
    asm("loc_4B112A: push %edx;");
    asm("loc_4B112B: push $_data_5D5170;");
    asm("loc_4B1130: push %eax;");
    asm("loc_4B1131: call *%esi;");
    asm("loc_4B1133: add $0xC,%esp;");
    asm("loc_4B1136: mov 0x570(%ebx),%ecx;");
    asm("loc_4B113C: mov (%ecx),%edx;");
    asm("loc_4B113E: push $0;");
    asm("loc_4B1140: lea 0xA8(%esp),%eax;");
    asm("loc_4B1147: push %eax;");
    asm("loc_4B1148: push $0x1D;");
    asm("loc_4B114A: calll *0xA8(%edx);");
    asm("loc_4B1150: mov 0x564(%ebx),%eax;");
    asm("loc_4B1156: orb $3,0x6C(%eax);");
    asm("loc_4B115A: mov 0x568(%ebx),%eax;");
    asm("loc_4B1160: orb $3,0x6C(%eax);");
    asm("loc_4B1164: mov 0x56C(%ebx),%eax;");
    asm("loc_4B116A: orb $3,0x6C(%eax);");
    asm("loc_4B116E: mov 0x570(%ebx),%eax;");
    asm("loc_4B1174: jmp loc_4B1400;");
    asm("loc_4B1179: test %edi,%edi;");
    asm("loc_4B117B: je loc_4B1409;");
    asm("loc_4B1181: flds 0x14(%edi);");
    asm("loc_4B1184: sub $8,%esp;");
    asm("loc_4B1187: fstpl (%esp);");
    asm("loc_4B118A: lea 0x214(%esp),%ecx;");
    asm("loc_4B1191: push $_data_5D5164;");
    asm("loc_4B1196: push %ecx;");
    asm("loc_4B1197: calll *_import_5C70EC;");
    asm("loc_4B119D: add $0x10,%esp;");
    asm("loc_4B11A0: lea 0x20C(%esp),%eax;");
    asm("loc_4B11A7: jmp loc_4B13E7;");
    asm("loc_4B11AC: mov 0x14(%edi),%ecx;");
    asm("loc_4B11AF: push $3;");
    asm("loc_4B11B1: mov %ecx,0x4C(%esp);");
    asm("loc_4B11B5: mov 0x70(%ebp),%ecx;");
    asm("loc_4B11B8: mov (%ecx),%edx;");
    asm("loc_4B11BA: push $0;");
    asm("loc_4B11BC: push $0x37;");
    asm("loc_4B11BE: calll *0xA8(%edx);");
    asm("loc_4B11C4: flds 0x48(%esp);");
    asm("loc_4B11C8: mov 0x70(%ebp),%edi;");
    asm("loc_4B11CB: fadd %st,%st(0);");
    asm("loc_4B11CD: call _sub_5B7EC0;");
    asm("loc_4B11D2: mov %eax,%esi;");
    asm("loc_4B11D4: mov (%edi),%eax;");
    asm("loc_4B11D6: push $0;");
    asm("loc_4B11D8: push %esi;");
    asm("loc_4B11D9: push $0x38;");
    asm("loc_4B11DB: mov %edi,%ecx;");
    asm("loc_4B11DD: calll *0xA8(%eax);");
    asm("loc_4B11E3: mov 0x70(%ebp),%eax;");
    asm("loc_4B11E6: mov 0x6C(%eax),%cl;");
    asm("loc_4B11E9: or $3,%cl;");
    asm("loc_4B11EC: cmp $3,%esi;");
    asm("loc_4B11EF: mov %cl,0x6C(%eax);");
    asm("loc_4B11F2: ja loc_4B1259;");
    asm("loc_4B11F4: jmpl *_jmp_4B143C(,%esi,4);");
    asm("loc_4B11FB: push $0x40;");
    asm("loc_4B11FD: lea 0x190(%esp),%ecx;");
    asm("loc_4B1204: push %ecx;");
    asm("loc_4B1205: push $0x702;");
    asm("loc_4B120A: jmp loc_4B124A;");
    asm("loc_4B120C: mov _data_67ECA8,%ecx;");
    asm("loc_4B1212: push $0x40;");
    asm("loc_4B1214: lea 0x190(%esp),%eax;");
    asm("loc_4B121B: push %eax;");
    asm("loc_4B121C: push $0x703;");
    asm("loc_4B1221: push %ecx;");
    asm("loc_4B1222: jmp loc_4B1251;");
    asm("loc_4B1224: mov _data_67ECA8,%eax;");
    asm("loc_4B1229: push $0x40;");
    asm("loc_4B122B: lea 0x190(%esp),%edx;");
    asm("loc_4B1232: push %edx;");
    asm("loc_4B1233: push $0x704;");
    asm("loc_4B1238: push %eax;");
    asm("loc_4B1239: jmp loc_4B1251;");
    asm("loc_4B123B: push $0x40;");
    asm("loc_4B123D: lea 0x190(%esp),%ecx;");
    asm("loc_4B1244: push %ecx;");
    asm("loc_4B1245: push $0x705;");
    asm("loc_4B124A: mov _data_67ECA8,%edx;");
    asm("loc_4B1250: push %edx;");
    asm("loc_4B1251: call _sub_4347E0;");
    asm("loc_4B1256: add $0x10,%esp;");
    asm("loc_4B1259: mov 0x118(%ebp),%ecx;");
    asm("loc_4B125F: mov (%ecx),%eax;");
    asm("loc_4B1261: push $0;");
    asm("loc_4B1263: lea 0x190(%esp),%edx;");
    asm("loc_4B126A: push %edx;");
    asm("loc_4B126B: push $0x1D;");
    asm("loc_4B126D: calll *0xA8(%eax);");
    asm("loc_4B1273: jmp loc_4B13FA;");
    asm("loc_4B1278: cmp $0x687,%esi;");
    asm("loc_4B127E: je loc_4B1367;");
    asm("loc_4B1284: cmp $0x767,%esi;");
    asm("loc_4B128A: je loc_4B12D3;");
    asm("loc_4B128C: test %edi,%edi;");
    asm("loc_4B128E: jne loc_4B1409;");
    asm("loc_4B1294: mov -0x38(%ebp),%eax;");
    asm("loc_4B1297: andb $0xFC,0x6C(%eax);");
    asm("loc_4B129B: mov _data_67ECA8,%ecx;");
    asm("loc_4B12A1: push $0x40;");
    asm("loc_4B12A3: lea 0xE8(%esp),%eax;");
    asm("loc_4B12AA: push %eax;");
    asm("loc_4B12AB: push %esi;");
    asm("loc_4B12AC: push %ecx;");
    asm("loc_4B12AD: call _sub_4347E0;");
    asm("loc_4B12B2: mov -0x38(%ebp),%ecx;");
    asm("loc_4B12B5: mov (%ecx),%edx;");
    asm("loc_4B12B7: add $0x10,%esp;");
    asm("loc_4B12BA: push %edi;");
    asm("loc_4B12BB: lea 0xE8(%esp),%eax;");
    asm("loc_4B12C2: push %eax;");
    asm("loc_4B12C3: push $0x1D;");
    asm("loc_4B12C5: calll *0xA8(%edx);");
    asm("loc_4B12CB: mov -0x38(%ebp),%eax;");
    asm("loc_4B12CE: jmp loc_4B1400;");
    asm("loc_4B12D3: mov 0x70(%ebp),%ecx;");
    asm("loc_4B12D6: push $0x3C9374BC;");
    asm("loc_4B12DB: push $0x3EB4BC6A;");
    asm("loc_4B12E0: call _sub_595E30;");
    asm("loc_4B12E5: mov 0x70(%ebp),%ecx;");
    asm("loc_4B12E8: lea 0x70(%esp),%eax;");
    asm("loc_4B12EC: movl $0xBDE147AE,0x70(%esp);");
    asm("loc_4B12F4: movl $0,0x74(%esp);");
    asm("loc_4B12FC: movl $0,0x78(%esp);");
    asm("loc_4B1304: mov (%ecx),%edx;");
    asm("loc_4B1306: push %eax;");
    asm("loc_4B1307: calll *0x14(%edx);");
    asm("loc_4B130A: mov 0x8C8(%ebx),%al;");
    asm("loc_4B1310: test %al,%al;");
    asm("loc_4B1312: jne loc_4B1341;");
    asm("loc_4B1314: push $_data_5D4A00;");
    asm("loc_4B1319: call _sub_5B36B0;");
    asm("loc_4B131E: flds 0x14(%eax);");
    asm("loc_4B1321: mov 0x70(%ebp),%esi;");
    asm("loc_4B1324: mov (%esi),%edi;");
    asm("loc_4B1326: fmuls _data_5CA230;");
    asm("loc_4B132C: add $4,%esp;");
    asm("loc_4B132F: push $0;");
    asm("loc_4B1331: call _sub_5B7EC0;");
    asm("loc_4B1336: push %eax;");
    asm("loc_4B1337: push $0x38;");
    asm("loc_4B1339: mov %esi,%ecx;");
    asm("loc_4B133B: calll *0xA8(%edi);");
    asm("loc_4B1341: mov 0x70(%ebp),%eax;");
    asm("loc_4B1344: orb $3,0x6C(%eax);");
    asm("loc_4B1348: mov -0x38(%ebp),%ecx;");
    asm("loc_4B134B: push $0x3E3D70A4;");
    asm("loc_4B1350: call _sub_58B730;");
    asm("loc_4B1355: mov -0x38(%ebp),%ecx;");
    asm("loc_4B1358: push $_data_5CE91C;");
    asm("loc_4B135D: call _sub_58A790;");
    asm("loc_4B1362: jmp loc_4B1409;");
    asm("loc_4B1367: test %edi,%edi;");
    asm("loc_4B1369: je loc_4B1409;");
    asm("loc_4B136F: mov 0x70(%ebp),%ecx;");
    asm("loc_4B1372: mov (%ecx),%edx;");
    asm("loc_4B1374: push $0x20;");
    asm("loc_4B1376: push $8;");
    asm("loc_4B1378: push $0x37;");
    asm("loc_4B137A: calll *0xA8(%edx);");
    asm("loc_4B1380: call _sub_5B3860;");
    asm("loc_4B1385: mov 0x70(%ebp),%esi;");
    asm("loc_4B1388: mov (%esi),%edi;");
    asm("loc_4B138A: mov %eax,0x18(%esp);");
    asm("loc_4B138E: fildl 0x18(%esp);");
    asm("loc_4B1392: push $0;");
    asm("loc_4B1394: fstps 0x1C(%esp);");
    asm("loc_4B1398: flds 0x1C(%esp);");
    asm("loc_4B139C: call _sub_5B7EC0;");
    asm("loc_4B13A1: push %eax;");
    asm("loc_4B13A2: push $0x38;");
    asm("loc_4B13A4: mov %esi,%ecx;");
    asm("loc_4B13A6: calll *0xA8(%edi);");
    asm("loc_4B13AC: flds 0x18(%esp);");
    asm("loc_4B13B0: mov 0x70(%ebp),%eax;");
    asm("loc_4B13B3: mov 0x6C(%eax),%cl;");
    asm("loc_4B13B6: sub $8,%esp;");
    asm("loc_4B13B9: or $3,%cl;");
    asm("loc_4B13BC: fstpl (%esp);");
    asm("loc_4B13BF: mov %cl,0x6C(%eax);");
    asm("loc_4B13C2: lea 0x254(%esp),%eax;");
    asm("loc_4B13C9: push $_data_5D5048;");
    asm("loc_4B13CE: push %eax;");
    asm("loc_4B13CF: calll *_import_5C70EC;");
    asm("loc_4B13D5: mov 0x30(%esp),%eax;");
    asm("loc_4B13D9: add $0x10,%esp;");
    asm("loc_4B13DC: test %eax,%eax;");
    asm("loc_4B13DE: jl loc_4B1409;");
    asm("loc_4B13E0: lea 0x24C(%esp),%eax;");
    asm("loc_4B13E7: mov 0x118(%ebp),%ecx;");
    asm("loc_4B13ED: mov (%ecx),%edx;");
    asm("loc_4B13EF: push $0;");
    asm("loc_4B13F1: push %eax;");
    asm("loc_4B13F2: push $0x1D;");
    asm("loc_4B13F4: calll *0xA8(%edx);");
    asm("loc_4B13FA: mov 0x118(%ebp),%eax;");
    asm("loc_4B1400: mov 0x6C(%eax),%cl;");
    asm("loc_4B1403: or $3,%cl;");
    asm("loc_4B1406: mov %cl,0x6C(%eax);");
    asm("loc_4B1409: mov 0x20(%esp),%ecx;");
    asm("loc_4B140D: mov 0x1C(%esp),%edx;");
    asm("loc_4B1411: add $0x18,%ecx;");
    asm("loc_4B1414: add $4,%ebp;");
    asm("loc_4B1417: dec %edx;");
    asm("loc_4B1418: cmp $0x150,%ecx;");
    asm("loc_4B141E: mov %ecx,0x20(%esp);");
    asm("loc_4B1422: mov %edx,0x1C(%esp);");
    asm("loc_4B1426: jl loc_4B09A7;");
    asm("loc_4B142C: pop %edi;");
    asm("loc_4B142D: pop %esi;");
    asm("loc_4B142E: pop %ebp;");
    asm("loc_4B142F: pop %ebx;");
    asm("loc_4B1430: add $0x27C,%esp;");
    asm("loc_4B1436: ret $4;");
    asm("int3;"); // unreachable
    asm("_jmp_4B143C: .long loc_4B11FB;");
    asm(".long loc_4B120C;");
    asm(".long loc_4B1224;");
    asm(".long loc_4B123B;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4B0920);
_naked _weak void _sub_4B1450() // _sub_4B1450
{
    asm("jmp dgb_4B1450;"); // jumptable skip
    asm(".long _jmp_4B1B80;"); // jumptable address
    __DEBUG_ASM(4B1450);
    // chunk 0x4B1450 _sub_4B1450
    asm("loc_4B1450: sub $0x108,%esp;");
    asm("loc_4B1456: push %ebx;");
    asm("loc_4B1457: push %ebp;");
    asm("loc_4B1458: mov 0x114(%esp),%ebp;");
    asm("loc_4B145F: push %esi;");
    asm("loc_4B1460: xor %ebx,%ebx;");
    asm("loc_4B1462: cmp $0x534,%ebp;");
    asm("loc_4B1468: push %edi;");
    asm("loc_4B1469: mov %ecx,%edi;");
    asm("loc_4B146B: jne loc_4B1476;");
    asm("loc_4B146D: lea 0x10(%esp),%edx;");
    asm("loc_4B1471: push %edx;");
    asm("loc_4B1472: push $1;");
    asm("loc_4B1474: jmp loc_4B1485;");
    asm("loc_4B1476: cmp $0x657,%ebp;");
    asm("loc_4B147C: jne loc_4B14A0;");
    asm("loc_4B147E: lea 0x10(%esp),%edx;");
    asm("loc_4B1482: push %edx;");
    asm("loc_4B1483: push $8;");
    asm("loc_4B1485: mov _import_5C6DE0,%eax;");
    asm("loc_4B148A: mov %ebx,0x18(%esp);");
    asm("loc_4B148E: mov (%eax),%eax;");
    asm("loc_4B1490: mov (%eax),%ecx;");
    asm("loc_4B1492: push %eax;");
    asm("loc_4B1493: calll *0x20(%ecx);");
    asm("loc_4B1496: cmp %ebx,0x10(%esp);");
    asm("loc_4B149A: je loc_4B1B70;");
    asm("loc_4B14A0: push %ebp;");
    asm("loc_4B14A1: call _sub_5B3770;");
    asm("loc_4B14A6: mov %eax,%esi;");
    asm("loc_4B14A8: add $4,%esp;");
    asm("loc_4B14AB: cmp %ebx,%esi;");
    asm("loc_4B14AD: je loc_4B1631;");
    asm("loc_4B14B3: cmp $0x57F,%ebp;");
    asm("loc_4B14B9: je loc_4B1631;");
    asm("loc_4B14BF: fildl 0x120(%esp);");
    asm("loc_4B14C6: mov (%esi),%eax;");
    asm("loc_4B14C8: mov %esi,%ecx;");
    asm("loc_4B14CA: fmull _data_5D5138;");
    asm("loc_4B14D0: fsts 0x10(%esp);");
    asm("loc_4B14D4: mov 0x10(%esp),%ebx;");
    asm("loc_4B14D8: push %ebx;");
    asm("loc_4B14D9: fstps 0x10(%esi);");
    asm("loc_4B14DC: calll *(%eax);");
    asm("loc_4B14DE: flds 0x14(%esi);");
    asm("loc_4B14E1: fcomps 0x10(%esi);");
    asm("loc_4B14E4: fnstsw %ax;");
    asm("loc_4B14E6: test $0x44,%ah;");
    asm("loc_4B14E9: jnp loc_4B1501;");
    asm("loc_4B14EB: flds 0x10(%esi);");
    asm("loc_4B14EE: mov (%esi),%edx;");
    asm("loc_4B14F0: fsts 0x14(%esp);");
    asm("loc_4B14F4: mov %esi,%ecx;");
    asm("loc_4B14F6: mov 0x14(%esp),%eax;");
    asm("loc_4B14FA: fstps 0x14(%esi);");
    asm("loc_4B14FD: push %eax;");
    asm("loc_4B14FE: calll *4(%edx);");
    asm("loc_4B1501: cmp $0x538,%ebp;");
    asm("loc_4B1507: jne loc_4B1552;");
    asm("loc_4B1509: push $0x583;");
    asm("loc_4B150E: call _sub_5B3770;");
    asm("loc_4B1513: mov 0x14(%esp),%ecx;");
    asm("loc_4B1517: mov %eax,%esi;");
    asm("loc_4B1519: mov (%esi),%edx;");
    asm("loc_4B151B: add $4,%esp;");
    asm("loc_4B151E: mov %ecx,0x10(%esi);");
    asm("loc_4B1521: push %ebx;");
    asm("loc_4B1522: mov %esi,%ecx;");
    asm("loc_4B1524: calll *(%edx);");
    asm("loc_4B1526: flds 0x14(%esi);");
    asm("loc_4B1529: fcomps 0x10(%esi);");
    asm("loc_4B152C: fnstsw %ax;");
    asm("loc_4B152E: test $0x44,%ah;");
    asm("loc_4B1531: jnp loc_4B1643;");
    asm("loc_4B1537: flds 0x10(%esi);");
    asm("loc_4B153A: mov (%esi),%eax;");
    asm("loc_4B153C: fsts 0x14(%esp);");
    asm("loc_4B1540: mov 0x14(%esp),%ecx;");
    asm("loc_4B1544: fstps 0x14(%esi);");
    asm("loc_4B1547: push %ecx;");
    asm("loc_4B1548: mov %esi,%ecx;");
    asm("loc_4B154A: calll *4(%eax);");
    asm("loc_4B154D: jmp loc_4B1643;");
    asm("loc_4B1552: cmp $0x539,%ebp;");
    asm("loc_4B1558: jne loc_4B15A3;");
    asm("loc_4B155A: push $0x584;");
    asm("loc_4B155F: call _sub_5B3770;");
    asm("loc_4B1564: mov 0x14(%esp),%edx;");
    asm("loc_4B1568: mov %eax,%esi;");
    asm("loc_4B156A: mov (%esi),%eax;");
    asm("loc_4B156C: add $4,%esp;");
    asm("loc_4B156F: push %ebx;");
    asm("loc_4B1570: mov %esi,%ecx;");
    asm("loc_4B1572: mov %edx,0x10(%esi);");
    asm("loc_4B1575: calll *(%eax);");
    asm("loc_4B1577: flds 0x14(%esi);");
    asm("loc_4B157A: fcomps 0x10(%esi);");
    asm("loc_4B157D: fnstsw %ax;");
    asm("loc_4B157F: test $0x44,%ah;");
    asm("loc_4B1582: jnp loc_4B1643;");
    asm("loc_4B1588: flds 0x10(%esi);");
    asm("loc_4B158B: mov (%esi),%edx;");
    asm("loc_4B158D: fsts 0x14(%esp);");
    asm("loc_4B1591: mov %esi,%ecx;");
    asm("loc_4B1593: mov 0x14(%esp),%eax;");
    asm("loc_4B1597: fstps 0x14(%esi);");
    asm("loc_4B159A: push %eax;");
    asm("loc_4B159B: calll *4(%edx);");
    asm("loc_4B159E: jmp loc_4B1643;");
    asm("loc_4B15A3: cmp $0x57C,%ebp;");
    asm("loc_4B15A9: jne loc_4B1631;");
    asm("loc_4B15AF: push $0x57D;");
    asm("loc_4B15B4: call _sub_5B3770;");
    asm("loc_4B15B9: mov 0x14(%esp),%ecx;");
    asm("loc_4B15BD: mov %eax,%esi;");
    asm("loc_4B15BF: mov (%esi),%edx;");
    asm("loc_4B15C1: add $4,%esp;");
    asm("loc_4B15C4: mov %ecx,0x10(%esi);");
    asm("loc_4B15C7: push %ebx;");
    asm("loc_4B15C8: mov %esi,%ecx;");
    asm("loc_4B15CA: calll *(%edx);");
    asm("loc_4B15CC: flds 0x14(%esi);");
    asm("loc_4B15CF: fcomps 0x10(%esi);");
    asm("loc_4B15D2: fnstsw %ax;");
    asm("loc_4B15D4: test $0x44,%ah;");
    asm("loc_4B15D7: jnp loc_4B15EF;");
    asm("loc_4B15D9: flds 0x10(%esi);");
    asm("loc_4B15DC: mov (%esi),%eax;");
    asm("loc_4B15DE: fsts 0x14(%esp);");
    asm("loc_4B15E2: mov 0x14(%esp),%ecx;");
    asm("loc_4B15E6: fstps 0x14(%esi);");
    asm("loc_4B15E9: push %ecx;");
    asm("loc_4B15EA: mov %esi,%ecx;");
    asm("loc_4B15EC: calll *4(%eax);");
    asm("loc_4B15EF: push $0x5CA;");
    asm("loc_4B15F4: call _sub_5B3770;");
    asm("loc_4B15F9: mov 0x14(%esp),%edx;");
    asm("loc_4B15FD: mov %eax,%esi;");
    asm("loc_4B15FF: mov (%esi),%eax;");
    asm("loc_4B1601: add $4,%esp;");
    asm("loc_4B1604: push %ebx;");
    asm("loc_4B1605: mov %esi,%ecx;");
    asm("loc_4B1607: mov %edx,0x10(%esi);");
    asm("loc_4B160A: calll *(%eax);");
    asm("loc_4B160C: flds 0x14(%esi);");
    asm("loc_4B160F: fcomps 0x10(%esi);");
    asm("loc_4B1612: fnstsw %ax;");
    asm("loc_4B1614: test $0x44,%ah;");
    asm("loc_4B1617: jnp loc_4B1643;");
    asm("loc_4B1619: flds 0x10(%esi);");
    asm("loc_4B161C: mov (%esi),%edx;");
    asm("loc_4B161E: fsts 0x14(%esp);");
    asm("loc_4B1622: mov %esi,%ecx;");
    asm("loc_4B1624: mov 0x14(%esp),%eax;");
    asm("loc_4B1628: fstps 0x14(%esi);");
    asm("loc_4B162B: push %eax;");
    asm("loc_4B162C: calll *4(%edx);");
    asm("loc_4B162F: jmp loc_4B1643;");
    asm("loc_4B1631: cmp $0x581,%ebp;");
    asm("loc_4B1637: jg loc_4B191B;");
    asm("loc_4B163D: je loc_4B18FD;");
    asm("loc_4B1643: lea -0x534(%ebp),%eax;");
    asm("loc_4B1649: cmp $0x4B,%eax;");
    asm("loc_4B164C: ja loc_4B1B62;");
    asm("loc_4B1652: movzbl _data_4B1B98(%eax),%ecx;");
    asm("loc_4B1659: jmpl *_jmp_4B1B80(,%ecx,4);");
    asm("loc_4B1660: fildl 0x120(%esp);");
    asm("loc_4B1667: push $6;");
    asm("loc_4B1669: fmull _data_5C75E8;");
    asm("loc_4B166F: fstps 0x14(%esp);");
    asm("loc_4B1673: call _sub_5B3510;");
    asm("loc_4B1678: fcomps 0x14(%esp);");
    asm("loc_4B167C: add $4,%esp;");
    asm("loc_4B167F: fnstsw %ax;");
    asm("loc_4B1681: test $0x44,%ah;");
    asm("loc_4B1684: jnp loc_4B16D6;");
    asm("loc_4B1686: mov 0x10(%esp),%edx;");
    asm("loc_4B168A: mov (%esi),%eax;");
    asm("loc_4B168C: mov %edx,%ebx;");
    asm("loc_4B168E: push %ebx;");
    asm("loc_4B168F: mov %esi,%ecx;");
    asm("loc_4B1691: mov %edx,0x10(%esi);");
    asm("loc_4B1694: calll *(%eax);");
    asm("loc_4B1696: flds 0x14(%esi);");
    asm("loc_4B1699: fcomps 0x10(%esi);");
    asm("loc_4B169C: fnstsw %ax;");
    asm("loc_4B169E: test $0x44,%ah;");
    asm("loc_4B16A1: jnp loc_4B16B9;");
    asm("loc_4B16A3: flds 0x10(%esi);");
    asm("loc_4B16A6: mov (%esi),%edx;");
    asm("loc_4B16A8: fsts 0x14(%esp);");
    asm("loc_4B16AC: mov %esi,%ecx;");
    asm("loc_4B16AE: mov 0x14(%esp),%eax;");
    asm("loc_4B16B2: fstps 0x14(%esi);");
    asm("loc_4B16B5: push %eax;");
    asm("loc_4B16B6: calll *4(%edx);");
    asm("loc_4B16B9: mov _data_67ECD0,%ecx;");
    asm("loc_4B16BF: test %ecx,%ecx;");
    asm("loc_4B16C1: je loc_4B16D6;");
    asm("loc_4B16C3: mov _data_673344,%eax;");
    asm("loc_4B16C8: test %eax,%eax;");
    asm("loc_4B16CA: je loc_4B16D6;");
    asm("loc_4B16CC: mov (%ecx),%edx;");
    asm("loc_4B16CE: push %eax;");
    asm("loc_4B16CF: push %ebx;");
    asm("loc_4B16D0: calll *0x15C(%edx);");
    asm("loc_4B16D6: mov 0x124(%esp),%esi;");
    asm("loc_4B16DD: test %esi,%esi;");
    asm("loc_4B16DF: jl loc_4B1B62;");
    asm("loc_4B16E5: mov 0x120(%esp),%eax;");
    asm("loc_4B16EC: cmp $3,%eax;");
    asm("loc_4B16EF: ja loc_4B174A;");
    asm("loc_4B16F1: jmpl *_jmp_4B1BE4(,%eax,4);");
    asm("loc_4B16F8: push $0x40;");
    asm("loc_4B16FA: lea 0x1C(%esp),%eax;");
    asm("loc_4B16FE: push %eax;");
    asm("loc_4B16FF: push $0x702;");
    asm("loc_4B1704: jmp loc_4B173B;");
    asm("loc_4B1706: mov _data_67ECA8,%eax;");
    asm("loc_4B170B: push $0x40;");
    asm("loc_4B170D: lea 0x1C(%esp),%edx;");
    asm("loc_4B1711: push %edx;");
    asm("loc_4B1712: push $0x703;");
    asm("loc_4B1717: push %eax;");
    asm("loc_4B1718: jmp loc_4B1742;");
    asm("loc_4B171A: mov _data_67ECA8,%edx;");
    asm("loc_4B1720: push $0x40;");
    asm("loc_4B1722: lea 0x1C(%esp),%ecx;");
    asm("loc_4B1726: push %ecx;");
    asm("loc_4B1727: push $0x704;");
    asm("loc_4B172C: push %edx;");
    asm("loc_4B172D: jmp loc_4B1742;");
    asm("loc_4B172F: push $0x40;");
    asm("loc_4B1731: lea 0x1C(%esp),%eax;");
    asm("loc_4B1735: push %eax;");
    asm("loc_4B1736: push $0x705;");
    asm("loc_4B173B: mov _data_67ECA8,%ecx;");
    asm("loc_4B1741: push %ecx;");
    asm("loc_4B1742: call _sub_4347E0;");
    asm("loc_4B1747: add $0x10,%esp;");
    asm("loc_4B174A: mov 0x6FC(%edi,%esi,4),%ecx;");
    asm("loc_4B1751: mov (%ecx),%edx;");
    asm("loc_4B1753: push $0;");
    asm("loc_4B1755: lea 0x1C(%esp),%eax;");
    asm("loc_4B1759: push %eax;");
    asm("loc_4B175A: push $0x1D;");
    asm("loc_4B175C: calll *0xA8(%edx);");
    asm("loc_4B1762: jmp loc_4B1B62;");
    asm("loc_4B1767: mov 0x124(%esp),%eax;");
    asm("loc_4B176E: test %eax,%eax;");
    asm("loc_4B1770: jl loc_4B1B62;");
    asm("loc_4B1776: push $0x1F;");
    asm("loc_4B1778: call _sub_564650;");
    asm("loc_4B177D: add $4,%esp;");
    asm("loc_4B1780: jmp loc_4B1B62;");
    asm("loc_4B1785: mov 0x124(%esp),%eax;");
    asm("loc_4B178C: test %eax,%eax;");
    asm("loc_4B178E: jl loc_4B1B62;");
    asm("loc_4B1794: lea 0x10(%esp),%ecx;");
    asm("loc_4B1798: push %ecx;");
    asm("loc_4B1799: movl $0,0x14(%esp);");
    asm("loc_4B17A1: call _sub_428BA0;");
    asm("loc_4B17A6: add $4,%esp;");
    asm("loc_4B17A9: test %al,%al;");
    asm("loc_4B17AB: jne loc_4B17BC;");
    asm("loc_4B17AD: push $0x20;");
    asm("loc_4B17AF: call _sub_564650;");
    asm("loc_4B17B4: add $4,%esp;");
    asm("loc_4B17B7: jmp loc_4B1B62;");
    asm("loc_4B17BC: mov 0x10(%esp),%eax;");
    asm("loc_4B17C0: mov (%eax),%edx;");
    asm("loc_4B17C2: push %eax;");
    asm("loc_4B17C3: calll *8(%edx);");
    asm("loc_4B17C6: jmp loc_4B1B62;");
    asm("loc_4B17CB: mov 0x120(%esp),%esi;");
    asm("loc_4B17D2: test %esi,%esi;");
    asm("loc_4B17D4: jl loc_4B1B70;");
    asm("loc_4B17DA: xor %ecx,%ecx;");
    asm("loc_4B17DC: xor %eax,%eax;");
    asm("loc_4B17DE: lea 0x954(%edi),%edx;");
    asm("loc_4B17E4: cmp %esi,(%edx);");
    asm("loc_4B17E6: jne loc_4B17EA;");
    asm("loc_4B17E8: mov %eax,%ecx;");
    asm("loc_4B17EA: inc %eax;");
    asm("loc_4B17EB: add $4,%edx;");
    asm("loc_4B17EE: cmp $0xA,%eax;");
    asm("loc_4B17F1: jl loc_4B17E4;");
    asm("loc_4B17F3: mov _import_5C70EC,%ebx;");
    asm("loc_4B17F9: lea (%ecx,%ecx,2),%eax;");
    asm("loc_4B17FC: lea 0x8CC(%edi,%eax,4),%ecx;");
    asm("loc_4B1803: mov %ecx,%edx;");
    asm("loc_4B1805: mov (%edx),%eax;");
    asm("loc_4B1807: mov 4(%edx),%ecx;");
    asm("loc_4B180A: mov 8(%edx),%esi;");
    asm("loc_4B180D: push %ecx;");
    asm("loc_4B180E: push %eax;");
    asm("loc_4B180F: mov %eax,0x330(%edi);");
    asm("loc_4B1815: lea 0x20(%esp),%eax;");
    asm("loc_4B1819: push $_data_5D5190;");
    asm("loc_4B181E: push %eax;");
    asm("loc_4B181F: call *%ebx;");
    asm("loc_4B1821: mov 0x97C(%edi),%al;");
    asm("loc_4B1827: add $0x10,%esp;");
    asm("loc_4B182A: test %al,%al;");
    asm("loc_4B182C: je loc_4B186E;");
    asm("loc_4B182E: cmp $0x20,%esi;");
    asm("loc_4B1831: jne loc_4B183C;");
    asm("loc_4B1833: movb $1,0x334(%edi);");
    asm("loc_4B183A: jmp loc_4B1843;");
    asm("loc_4B183C: movb $0,0x334(%edi);");
    asm("loc_4B1843: mov 0x334(%edi),%al;");
    asm("loc_4B1849: test %al,%al;");
    asm("loc_4B184B: lea 0x18(%esp),%ecx;");
    asm("loc_4B184F: je loc_4B185E;");
    asm("loc_4B1851: push %ecx;");
    asm("loc_4B1852: push $_data_5D5180;");
    asm("loc_4B1857: lea 0x20(%esp),%edx;");
    asm("loc_4B185B: push %edx;");
    asm("loc_4B185C: jmp loc_4B1869;");
    asm("loc_4B185E: lea 0x18(%esp),%eax;");
    asm("loc_4B1862: push %eax;");
    asm("loc_4B1863: push $_data_5D5170;");
    asm("loc_4B1868: push %ecx;");
    asm("loc_4B1869: call *%ebx;");
    asm("loc_4B186B: add $0xC,%esp;");
    asm("loc_4B186E: mov 0x124(%esp),%eax;");
    asm("loc_4B1875: test %eax,%eax;");
    asm("loc_4B1877: jl loc_4B1B62;");
    asm("loc_4B187D: mov 0x570(%edi),%ecx;");
    asm("loc_4B1883: mov (%ecx),%edx;");
    asm("loc_4B1885: push $0;");
    asm("loc_4B1887: lea 0x1C(%esp),%eax;");
    asm("loc_4B188B: push %eax;");
    asm("loc_4B188C: push $0x1D;");
    asm("loc_4B188E: calll *0xA8(%edx);");
    asm("loc_4B1894: push $0x57E;");
    asm("loc_4B1899: mov %edi,%ecx;");
    asm("loc_4B189B: call _sub_4B0920;");
    asm("loc_4B18A0: jmp loc_4B1B62;");
    asm("loc_4B18A5: fildl 0x120(%esp);");
    asm("loc_4B18AC: sub $8,%esp;");
    asm("loc_4B18AF: lea 0xA0(%esp),%ecx;");
    asm("loc_4B18B6: fmuls _data_5C99C8;");
    asm("loc_4B18BC: fstpl (%esp);");
    asm("loc_4B18BF: push $_data_5D5164;");
    asm("loc_4B18C4: push %ecx;");
    asm("loc_4B18C5: calll *_import_5C70EC;");
    asm("loc_4B18CB: mov 0x134(%esp),%eax;");
    asm("loc_4B18D2: add $0x10,%esp;");
    asm("loc_4B18D5: test %eax,%eax;");
    asm("loc_4B18D7: jl loc_4B1B62;");
    asm("loc_4B18DD: mov 0x6FC(%edi,%eax,4),%ecx;");
    asm("loc_4B18E4: mov (%ecx),%edx;");
    asm("loc_4B18E6: push $0;");
    asm("loc_4B18E8: lea 0x9C(%esp),%eax;");
    asm("loc_4B18EF: push %eax;");
    asm("loc_4B18F0: push $0x1D;");
    asm("loc_4B18F2: calll *0xA8(%edx);");
    asm("loc_4B18F8: jmp loc_4B1B62;");
    asm("loc_4B18FD: mov 0x124(%esp),%eax;");
    asm("loc_4B1904: test %eax,%eax;");
    asm("loc_4B1906: jl loc_4B1B62;");
    asm("loc_4B190C: push $0x1E;");
    asm("loc_4B190E: call _sub_564650;");
    asm("loc_4B1913: add $4,%esp;");
    asm("loc_4B1916: jmp loc_4B1B62;");
    asm("loc_4B191B: cmp $0x687,%ebp;");
    asm("loc_4B1921: jg loc_4B19C1;");
    asm("loc_4B1927: je loc_4B1974;");
    asm("loc_4B1929: sub $0x583,%ebp;");
    asm("loc_4B192F: je loc_4B1956;");
    asm("loc_4B1931: dec %ebp;");
    asm("loc_4B1932: jne loc_4B1B62;");
    asm("loc_4B1938: mov 0x124(%esp),%eax;");
    asm("loc_4B193F: test %eax,%eax;");
    asm("loc_4B1941: jl loc_4B1B62;");
    asm("loc_4B1947: push $0x22;");
    asm("loc_4B1949: call _sub_564650;");
    asm("loc_4B194E: add $4,%esp;");
    asm("loc_4B1951: jmp loc_4B1B62;");
    asm("loc_4B1956: mov 0x124(%esp),%eax;");
    asm("loc_4B195D: test %eax,%eax;");
    asm("loc_4B195F: jl loc_4B1B62;");
    asm("loc_4B1965: push $0x21;");
    asm("loc_4B1967: call _sub_564650;");
    asm("loc_4B196C: add $4,%esp;");
    asm("loc_4B196F: jmp loc_4B1B62;");
    asm("loc_4B1974: mov 0x120(%esp),%ecx;");
    asm("loc_4B197B: push %ecx;");
    asm("loc_4B197C: lea 0xDC(%esp),%edx;");
    asm("loc_4B1983: push $_data_5D0EC4;");
    asm("loc_4B1988: push %edx;");
    asm("loc_4B1989: calll *_import_5C70EC;");
    asm("loc_4B198F: mov 0x130(%esp),%eax;");
    asm("loc_4B1996: add $0xC,%esp;");
    asm("loc_4B1999: test %eax,%eax;");
    asm("loc_4B199B: jl loc_4B1B62;");
    asm("loc_4B19A1: mov 0x6FC(%edi,%eax,4),%ecx;");
    asm("loc_4B19A8: mov (%ecx),%eax;");
    asm("loc_4B19AA: push $0;");
    asm("loc_4B19AC: lea 0xDC(%esp),%edx;");
    asm("loc_4B19B3: push %edx;");
    asm("loc_4B19B4: push $0x1D;");
    asm("loc_4B19B6: calll *0xA8(%eax);");
    asm("loc_4B19BC: jmp loc_4B1B62;");
    asm("loc_4B19C1: cmp $0x767,%ebp;");
    asm("loc_4B19C7: jne loc_4B1B62;");
    asm("loc_4B19CD: mov 0x120(%esp),%ebx;");
    asm("loc_4B19D4: xor %ebp,%ebp;");
    asm("loc_4B19D6: mov %ebp,0x10(%esp);");
    asm("loc_4B19DA: lea (%ebx),%ebx;");
    asm("loc_4B19E0: mov 0x548(%edi),%eax;");
    asm("loc_4B19E6: test %eax,%eax;");
    asm("loc_4B19E8: je loc_4B1AE4;");
    asm("loc_4B19EE: mov 0x54C(%edi),%ecx;");
    asm("loc_4B19F4: sub %eax,%ecx;");
    asm("loc_4B19F6: mov $0x2AAAAAAB,%eax;");
    asm("loc_4B19FB: imul %ecx;");
    asm("loc_4B19FD: sar $2,%edx;");
    asm("loc_4B1A00: mov %edx,%eax;");
    asm("loc_4B1A02: shr $0x1F,%eax;");
    asm("loc_4B1A05: add %eax,%edx;");
    asm("loc_4B1A07: cmp %edx,%ebp;");
    asm("loc_4B1A09: jae loc_4B1AE4;");
    asm("loc_4B1A0F: mov 0x548(%edi),%ecx;");
    asm("loc_4B1A15: mov 0x10(%esp),%edx;");
    asm("loc_4B1A19: lea (%ecx,%edx),%eax;");
    asm("loc_4B1A1C: mov 0xC(%eax),%ecx;");
    asm("loc_4B1A1F: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_4B1A22: je loc_4B1AD3;");
    asm("loc_4B1A28: mov (%eax),%esi;");
    asm("loc_4B1A2A: cmp $0x767,%esi;");
    asm("loc_4B1A30: je loc_4B1AD3;");
    asm("loc_4B1A36: mov 0x14(%eax),%dl;");
    asm("loc_4B1A39: test %dl,%dl;");
    asm("loc_4B1A3B: je loc_4B1AB8;");
    asm("loc_4B1A3D: cmp %ecx,%ebx;");
    asm("loc_4B1A3F: push $0xFFFFFFFF;");
    asm("loc_4B1A41: jg loc_4B1A5B;");
    asm("loc_4B1A43: push $0;");
    asm("loc_4B1A45: push %esi;");
    asm("loc_4B1A46: mov %edi,%ecx;");
    asm("loc_4B1A48: call _sub_4B1450;");
    asm("loc_4B1A4D: mov 0x10(%esp),%eax;");
    asm("loc_4B1A51: inc %ebp;");
    asm("loc_4B1A52: add $0x18,%eax;");
    asm("loc_4B1A55: mov %eax,0x10(%esp);");
    asm("loc_4B1A59: jmp loc_4B19E0;");
    asm("loc_4B1A5B: mov 0x10(%eax),%eax;");
    asm("loc_4B1A5E: cmp %eax,%ebx;");
    asm("loc_4B1A60: jl loc_4B1A7D;");
    asm("loc_4B1A62: push $0x64;");
    asm("loc_4B1A64: push %esi;");
    asm("loc_4B1A65: mov %edi,%ecx;");
    asm("loc_4B1A67: call _sub_4B1450;");
    asm("loc_4B1A6C: mov 0x10(%esp),%eax;");
    asm("loc_4B1A70: inc %ebp;");
    asm("loc_4B1A71: add $0x18,%eax;");
    asm("loc_4B1A74: mov %eax,0x10(%esp);");
    asm("loc_4B1A78: jmp loc_4B19E0;");
    asm("loc_4B1A7D: sub %ecx,%eax;");
    asm("loc_4B1A7F: mov %eax,0x18(%esp);");
    asm("loc_4B1A83: fildl 0x18(%esp);");
    asm("loc_4B1A87: mov %ebx,%eax;");
    asm("loc_4B1A89: sub %ecx,%eax;");
    asm("loc_4B1A8B: mov %eax,0x18(%esp);");
    asm("loc_4B1A8F: fdivrl _data_5CA320;");
    asm("loc_4B1A95: fimull 0x18(%esp);");
    asm("loc_4B1A99: call _sub_5B7EC0;");
    asm("loc_4B1A9E: push %eax;");
    asm("loc_4B1A9F: push %esi;");
    asm("loc_4B1AA0: mov %edi,%ecx;");
    asm("loc_4B1AA2: call _sub_4B1450;");
    asm("loc_4B1AA7: mov 0x10(%esp),%eax;");
    asm("loc_4B1AAB: inc %ebp;");
    asm("loc_4B1AAC: add $0x18,%eax;");
    asm("loc_4B1AAF: mov %eax,0x10(%esp);");
    asm("loc_4B1AB3: jmp loc_4B19E0;");
    asm("loc_4B1AB8: cmp %ecx,%ebx;");
    asm("loc_4B1ABA: jl loc_4B1AC7;");
    asm("loc_4B1ABC: cmp 0x10(%eax),%ebx;");
    asm("loc_4B1ABF: jg loc_4B1AC7;");
    asm("loc_4B1AC1: push $0xFFFFFFFF;");
    asm("loc_4B1AC3: push $1;");
    asm("loc_4B1AC5: jmp loc_4B1ACB;");
    asm("loc_4B1AC7: push $0xFFFFFFFF;");
    asm("loc_4B1AC9: push $0;");
    asm("loc_4B1ACB: mov %edi,%ecx;");
    asm("loc_4B1ACD: push %esi;");
    asm("loc_4B1ACE: call _sub_4B1D20;");
    asm("loc_4B1AD3: mov 0x10(%esp),%eax;");
    asm("loc_4B1AD7: inc %ebp;");
    asm("loc_4B1AD8: add $0x18,%eax;");
    asm("loc_4B1ADB: mov %eax,0x10(%esp);");
    asm("loc_4B1ADF: jmp loc_4B19E0;");
    asm("loc_4B1AE4: push $_data_5D4A00;");
    asm("loc_4B1AE9: call _sub_5B36B0;");
    asm("loc_4B1AEE: fildl 0x124(%esp);");
    asm("loc_4B1AF5: mov %eax,%esi;");
    asm("loc_4B1AF7: mov (%esi),%edx;");
    asm("loc_4B1AF9: fmull _data_5D5138;");
    asm("loc_4B1AFF: add $4,%esp;");
    asm("loc_4B1B02: mov %esi,%ecx;");
    asm("loc_4B1B04: fsts 0x14(%esp);");
    asm("loc_4B1B08: mov 0x14(%esp),%eax;");
    asm("loc_4B1B0C: fstps 0x10(%esi);");
    asm("loc_4B1B0F: push %eax;");
    asm("loc_4B1B10: calll *(%edx);");
    asm("loc_4B1B12: flds 0x14(%esi);");
    asm("loc_4B1B15: fcomps 0x10(%esi);");
    asm("loc_4B1B18: fnstsw %ax;");
    asm("loc_4B1B1A: test $0x44,%ah;");
    asm("loc_4B1B1D: jnp loc_4B1B35;");
    asm("loc_4B1B1F: flds 0x10(%esi);");
    asm("loc_4B1B22: mov (%esi),%edx;");
    asm("loc_4B1B24: fsts 0x14(%esp);");
    asm("loc_4B1B28: mov %esi,%ecx;");
    asm("loc_4B1B2A: mov 0x14(%esp),%eax;");
    asm("loc_4B1B2E: fstps 0x14(%esi);");
    asm("loc_4B1B31: push %eax;");
    asm("loc_4B1B32: calll *4(%edx);");
    asm("loc_4B1B35: mov 0x32E(%edi),%al;");
    asm("loc_4B1B3B: test %al,%al;");
    asm("loc_4B1B3D: mov %edi,%ecx;");
    asm("loc_4B1B3F: je loc_4B1B4D;");
    asm("loc_4B1B41: push $0x767;");
    asm("loc_4B1B46: call _sub_4B0920;");
    asm("loc_4B1B4B: jmp loc_4B1B62;");
    asm("loc_4B1B4D: push $0xFFFFFFFF;");
    asm("loc_4B1B4F: movb $1,0x8C8(%edi);");
    asm("loc_4B1B56: call _sub_4B0920;");
    asm("loc_4B1B5B: movb $0,0x8C8(%edi);");
    asm("loc_4B1B62: push $0xBF800000;");
    asm("loc_4B1B67: push $0xFFFFFFFF;");
    asm("loc_4B1B69: mov %edi,%ecx;");
    asm("loc_4B1B6B: call _sub_4B1F30;");
    asm("loc_4B1B70: pop %edi;");
    asm("loc_4B1B71: pop %esi;");
    asm("loc_4B1B72: pop %ebp;");
    asm("loc_4B1B73: pop %ebx;");
    asm("loc_4B1B74: add $0x108,%esp;");
    asm("loc_4B1B7A: ret $0xC;");
    asm("int3;"); // unreachable
    asm("_jmp_4B1B80: .long loc_4B18A5;");
    asm(".long loc_4B17CB;");
    asm(".long loc_4B1767;");
    asm(".long loc_4B1785;");
    asm(".long loc_4B1660;");
    asm(".long loc_4B1B62;");
    asm("_jmp_4B1BE4: .long loc_4B16F8;");
    asm(".long loc_4B1706;");
    asm(".long loc_4B171A;");
    asm(".long loc_4B172F;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4B1450);
#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __INTELLISENSE__
