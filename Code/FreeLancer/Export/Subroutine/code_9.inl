#ifndef __INTELLISENSE__
// clang-format off
#include "..\..\PCH.h"
#pragma init_seg(lib)
#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

_naked _weak void _sub_4B1C00() // _sub_4B1C00
{
    __DEBUG_ASM(4B1C00);
    // chunk 0x4B1C00 _sub_4B1C00
    asm("loc_4B1C00: sub $0x2C,%esp;");
    asm("loc_4B1C03: push %ebp;");
    asm("loc_4B1C04: push %esi;");
    asm("loc_4B1C05: mov %ecx,%ebp;");
    asm("loc_4B1C07: push %edi;");
    asm("loc_4B1C08: mov $0xA,%ecx;");
    asm("loc_4B1C0D: mov $_data_679BC0,%esi;");
    asm("loc_4B1C12: lea 0x10(%esp),%edi;");
    asm("loc_4B1C16: rep movsl (%esi),(%edi);");
    asm("loc_4B1C18: mov 0x18(%esp),%eax;");
    asm("loc_4B1C1C: mov 0x20(%esp),%ecx;");
    asm("loc_4B1C20: mov %eax,0x8B8(%ebp);");
    asm("loc_4B1C26: mov $0x20,%eax;");
    asm("loc_4B1C2B: cmp %eax,%ecx;");
    asm("loc_4B1C2D: jne loc_4B1C38;");
    asm("loc_4B1C2F: movb $1,0x8BC(%ebp);");
    asm("loc_4B1C36: jmp loc_4B1C3F;");
    asm("loc_4B1C38: movb $0,0x8BC(%ebp);");
    asm("loc_4B1C3F: mov 0x40(%esp),%cl;");
    asm("loc_4B1C43: test %cl,%cl;");
    asm("loc_4B1C45: movl $0x10,0xC(%esp);");
    asm("loc_4B1C4D: je loc_4B1C53;");
    asm("loc_4B1C4F: mov %eax,0xC(%esp);");
    asm("loc_4B1C53: mov 0xC(%esp),%ecx;");
    asm("loc_4B1C57: push %ebx;");
    asm("loc_4B1C58: xor %ebx,%ebx;");
    asm("loc_4B1C5A: lea 0x8CC(%ebp),%edx;");
    asm("loc_4B1C60: mov %ebx,0x1C(%esp);");
    asm("loc_4B1C64: mov %ebx,0x20(%esp);");
    asm("loc_4B1C68: mov %ecx,0x24(%esp);");
    asm("loc_4B1C6C: mov %edx,0x44(%esp);");
    asm("loc_4B1C70: mov 0x944(%ebx,%ebp),%al;");
    asm("loc_4B1C77: test %al,%al;");
    asm("loc_4B1C79: je loc_4B1CB7;");
    asm("loc_4B1C7B: mov 0x44(%esp),%eax;");
    asm("loc_4B1C7F: mov (%eax),%esi;");
    asm("loc_4B1C81: cmp %esi,0x40(%esp);");
    asm("loc_4B1C85: mov 4(%eax),%edi;");
    asm("loc_4B1C88: mov 8(%eax),%eax;");
    asm("loc_4B1C8B: jne loc_4B1CB7;");
    asm("loc_4B1C8D: cmp %eax,0x10(%esp);");
    asm("loc_4B1C91: jne loc_4B1CB7;");
    asm("loc_4B1C93: push $0xFFFFFFFF;");
    asm("loc_4B1C95: push %edi;");
    asm("loc_4B1C96: push %esi;");
    asm("loc_4B1C97: lea 0x20(%esp),%ecx;");
    asm("loc_4B1C9B: push %ecx;");
    asm("loc_4B1C9C: mov %ebp,%ecx;");
    asm("loc_4B1C9E: call _sub_4AF120;");
    asm("loc_4B1CA3: mov 0x32D(%ebp),%al;");
    asm("loc_4B1CA9: test %al,%al;");
    asm("loc_4B1CAB: jne loc_4B1CB7;");
    asm("loc_4B1CAD: push %edi;");
    asm("loc_4B1CAE: push %esi;");
    asm("loc_4B1CAF: call _sub_558D60;");
    asm("loc_4B1CB4: add $8,%esp;");
    asm("loc_4B1CB7: mov 0x44(%esp),%ecx;");
    asm("loc_4B1CBB: inc %ebx;");
    asm("loc_4B1CBC: add $0xC,%ecx;");
    asm("loc_4B1CBF: cmp $0xA,%ebx;");
    asm("loc_4B1CC2: mov %ecx,0x44(%esp);");
    asm("loc_4B1CC6: jl loc_4B1C70;");
    asm("loc_4B1CC8: mov 0x1C(%esp),%eax;");
    asm("loc_4B1CCC: test %eax,%eax;");
    asm("loc_4B1CCE: pop %ebx;");
    asm("loc_4B1CCF: jbe loc_4B1D0B;");
    asm("loc_4B1CD1: mov 0x1C(%esp),%eax;");
    asm("loc_4B1CD5: test %eax,%eax;");
    asm("loc_4B1CD7: jbe loc_4B1D0B;");
    asm("loc_4B1CD9: mov _data_67ECA0,%eax;");
    asm("loc_4B1CDE: lea 0x10(%esp),%edx;");
    asm("loc_4B1CE2: push %edx;");
    asm("loc_4B1CE3: push %eax;");
    asm("loc_4B1CE4: call _sub_424CE0;");
    asm("loc_4B1CE9: add $8,%esp;");
    asm("loc_4B1CEC: pop %edi;");
    asm("loc_4B1CED: pop %esi;");
    asm("loc_4B1CEE: movl $0,0x8C0(%ebp);");
    asm("loc_4B1CF8: movl $0x40240000,0x8C4(%ebp);");
    asm("loc_4B1D02: mov $1,%al;");
    asm("loc_4B1D04: pop %ebp;");
    asm("loc_4B1D05: add $0x2C,%esp;");
    asm("loc_4B1D08: ret $8;");
    asm("loc_4B1D0B: pop %edi;");
    asm("loc_4B1D0C: pop %esi;");
    asm("loc_4B1D0D: xor %al,%al;");
    asm("loc_4B1D0F: pop %ebp;");
    asm("loc_4B1D10: add $0x2C,%esp;");
    asm("loc_4B1D13: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B1D20() // _sub_4B1D20
{
    __DEBUG_ASM(4B1D20);
    // chunk 0x4B1D20 _sub_4B1D20
    asm("loc_4B1D20: sub $0x84,%esp;");
    asm("loc_4B1D26: push %esi;");
    asm("loc_4B1D27: mov 0x8C(%esp),%esi;");
    asm("loc_4B1D2E: cmp $0x534,%esi;");
    asm("loc_4B1D34: push %edi;");
    asm("loc_4B1D35: mov %ecx,%edi;");
    asm("loc_4B1D37: jne loc_4B1D42;");
    asm("loc_4B1D39: lea 8(%esp),%edx;");
    asm("loc_4B1D3D: push %edx;");
    asm("loc_4B1D3E: push $1;");
    asm("loc_4B1D40: jmp loc_4B1D51;");
    asm("loc_4B1D42: cmp $0x657,%esi;");
    asm("loc_4B1D48: jne loc_4B1D72;");
    asm("loc_4B1D4A: lea 8(%esp),%edx;");
    asm("loc_4B1D4E: push %edx;");
    asm("loc_4B1D4F: push $8;");
    asm("loc_4B1D51: mov _import_5C6DE0,%eax;");
    asm("loc_4B1D56: movl $0,0x10(%esp);");
    asm("loc_4B1D5E: mov (%eax),%eax;");
    asm("loc_4B1D60: mov (%eax),%ecx;");
    asm("loc_4B1D62: push %eax;");
    asm("loc_4B1D63: calll *0x20(%ecx);");
    asm("loc_4B1D66: mov 8(%esp),%eax;");
    asm("loc_4B1D6A: test %eax,%eax;");
    asm("loc_4B1D6C: je loc_4B1F1D;");
    asm("loc_4B1D72: fildl 0x94(%esp);");
    asm("loc_4B1D79: push %ebp;");
    asm("loc_4B1D7A: fcompl _data_5C8B68;");
    asm("loc_4B1D80: fnstsw %ax;");
    asm("loc_4B1D82: test $0x41,%ah;");
    asm("loc_4B1D85: jne loc_4B1D8E;");
    asm("loc_4B1D87: mov $1,%ebp;");
    asm("loc_4B1D8C: jmp loc_4B1D90;");
    asm("loc_4B1D8E: xor %ebp,%ebp;");
    asm("loc_4B1D90: push %esi;");
    asm("loc_4B1D91: mov %ebp,0x9C(%esp);");
    asm("loc_4B1D98: call _sub_5B3770;");
    asm("loc_4B1D9D: mov %eax,%esi;");
    asm("loc_4B1D9F: add $4,%esp;");
    asm("loc_4B1DA2: test %esi,%esi;");
    asm("loc_4B1DA4: je loc_4B1E42;");
    asm("loc_4B1DAA: fildl 0x98(%esp);");
    asm("loc_4B1DB1: mov (%esi),%eax;");
    asm("loc_4B1DB3: fsts 0xC(%esp);");
    asm("loc_4B1DB7: mov 0xC(%esp),%ecx;");
    asm("loc_4B1DBB: push %ecx;");
    asm("loc_4B1DBC: fstps 0x10(%esi);");
    asm("loc_4B1DBF: mov %esi,%ecx;");
    asm("loc_4B1DC1: calll *(%eax);");
    asm("loc_4B1DC3: flds 0x14(%esi);");
    asm("loc_4B1DC6: fcomps 0x10(%esi);");
    asm("loc_4B1DC9: fnstsw %ax;");
    asm("loc_4B1DCB: test $0x44,%ah;");
    asm("loc_4B1DCE: jnp loc_4B1DE6;");
    asm("loc_4B1DD0: flds 0x10(%esi);");
    asm("loc_4B1DD3: mov (%esi),%edx;");
    asm("loc_4B1DD5: fsts 0xC(%esp);");
    asm("loc_4B1DD9: mov 0xC(%esp),%eax;");
    asm("loc_4B1DDD: push %eax;");
    asm("loc_4B1DDE: fstps 0x14(%esi);");
    asm("loc_4B1DE1: mov %esi,%ecx;");
    asm("loc_4B1DE3: calll *4(%edx);");
    asm("loc_4B1DE6: mov 0x32E(%edi),%al;");
    asm("loc_4B1DEC: test %al,%al;");
    asm("loc_4B1DEE: mov 0x9C(%esp),%ecx;");
    asm("loc_4B1DF5: mov 0x61C(%edi,%ecx,4),%esi;");
    asm("loc_4B1DFC: jne loc_4B1E42;");
    asm("loc_4B1DFE: test %ebp,%ebp;");
    asm("loc_4B1E00: push $0x40;");
    asm("loc_4B1E02: je loc_4B1E16;");
    asm("loc_4B1E04: mov _data_67ECA8,%eax;");
    asm("loc_4B1E09: lea 0x14(%esp),%edx;");
    asm("loc_4B1E0D: push %edx;");
    asm("loc_4B1E0E: push $0x65F;");
    asm("loc_4B1E13: push %eax;");
    asm("loc_4B1E14: jmp loc_4B1E27;");
    asm("loc_4B1E16: mov _data_67ECA8,%edx;");
    asm("loc_4B1E1C: lea 0x14(%esp),%ecx;");
    asm("loc_4B1E20: push %ecx;");
    asm("loc_4B1E21: push $0x67A;");
    asm("loc_4B1E26: push %edx;");
    asm("loc_4B1E27: call _sub_4347E0;");
    asm("loc_4B1E2C: mov (%esi),%eax;");
    asm("loc_4B1E2E: add $0x10,%esp;");
    asm("loc_4B1E31: push $0;");
    asm("loc_4B1E33: lea 0x14(%esp),%ecx;");
    asm("loc_4B1E37: push %ecx;");
    asm("loc_4B1E38: push $0x1D;");
    asm("loc_4B1E3A: mov %esi,%ecx;");
    asm("loc_4B1E3C: calll *0xA8(%eax);");
    asm("loc_4B1E42: cmpl $0x57E,0x94(%esp);");
    asm("loc_4B1E4D: jne loc_4B1F02;");
    asm("loc_4B1E53: mov 0x330(%edi),%eax;");
    asm("loc_4B1E59: xor %edx,%edx;");
    asm("loc_4B1E5B: mov 0x334(%edi),%dl;");
    asm("loc_4B1E61: mov %edi,%ecx;");
    asm("loc_4B1E63: push %edx;");
    asm("loc_4B1E64: push %eax;");
    asm("loc_4B1E65: call _sub_4B1C00;");
    asm("loc_4B1E6A: test %al,%al;");
    asm("loc_4B1E6C: je loc_4B1EF9;");
    asm("loc_4B1E72: push $0x40;");
    asm("loc_4B1E74: lea 0x14(%esp),%ecx;");
    asm("loc_4B1E78: push %ecx;");
    asm("loc_4B1E79: movb $1,0x84D(%edi);");
    asm("loc_4B1E80: mov _data_67ECA8,%edx;");
    asm("loc_4B1E86: push $0x778;");
    asm("loc_4B1E8B: push %edx;");
    asm("loc_4B1E8C: call _sub_4347E0;");
    asm("loc_4B1E91: mov 0x4E8(%edi),%ecx;");
    asm("loc_4B1E97: add $0x10,%esp;");
    asm("loc_4B1E9A: lea 0x10(%esp),%eax;");
    asm("loc_4B1E9E: push %eax;");
    asm("loc_4B1E9F: call _sub_58A530;");
    asm("loc_4B1EA4: mov _data_67ECA8,%edx;");
    asm("loc_4B1EAA: push $0x40;");
    asm("loc_4B1EAC: lea 0x14(%esp),%ecx;");
    asm("loc_4B1EB0: push %ecx;");
    asm("loc_4B1EB1: push $0x779;");
    asm("loc_4B1EB6: push %edx;");
    asm("loc_4B1EB7: call _sub_4347E0;");
    asm("loc_4B1EBC: mov 0x4EC(%edi),%ecx;");
    asm("loc_4B1EC2: add $0x10,%esp;");
    asm("loc_4B1EC5: lea 0x10(%esp),%eax;");
    asm("loc_4B1EC9: push %eax;");
    asm("loc_4B1ECA: call _sub_58A530;");
    asm("loc_4B1ECF: mov %edi,%ecx;");
    asm("loc_4B1ED1: call _sub_4ABFB0;");
    asm("loc_4B1ED6: lea 0x5AC(%edi),%esi;");
    asm("loc_4B1EDC: mov $0xE,%ebp;");
    asm("loc_4B1EE1: mov (%esi),%ecx;");
    asm("loc_4B1EE3: mov (%ecx),%edx;");
    asm("loc_4B1EE5: push $0;");
    asm("loc_4B1EE7: push $0;");
    asm("loc_4B1EE9: push $0x24;");
    asm("loc_4B1EEB: calll *0xA8(%edx);");
    asm("loc_4B1EF1: add $4,%esi;");
    asm("loc_4B1EF4: dec %ebp;");
    asm("loc_4B1EF5: jne loc_4B1EE1;");
    asm("loc_4B1EF7: jmp loc_4B1F02;");
    asm("loc_4B1EF9: push $0xFFFFFFFF;");
    asm("loc_4B1EFB: mov %edi,%ecx;");
    asm("loc_4B1EFD: call _sub_4B0920;");
    asm("loc_4B1F02: fildl 0x98(%esp);");
    asm("loc_4B1F09: mov 0x94(%esp),%eax;");
    asm("loc_4B1F10: push %ecx;");
    asm("loc_4B1F11: mov %edi,%ecx;");
    asm("loc_4B1F13: fstps (%esp);");
    asm("loc_4B1F16: push %eax;");
    asm("loc_4B1F17: call _sub_4B1F30;");
    asm("loc_4B1F1C: pop %ebp;");
    asm("loc_4B1F1D: pop %edi;");
    asm("loc_4B1F1E: pop %esi;");
    asm("loc_4B1F1F: add $0x84,%esp;");
    asm("loc_4B1F25: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B1F30() // _sub_4B1F30
{
    __DEBUG_ASM(4B1F30);
    // chunk 0x4B1F30 _sub_4B1F30
    asm("loc_4B1F30: sub $0x38,%esp;");
    asm("loc_4B1F33: push %ebp;");
    asm("loc_4B1F34: mov %ecx,%ebp;");
    asm("loc_4B1F36: mov 0x32E(%ebp),%al;");
    asm("loc_4B1F3C: test %al,%al;");
    asm("loc_4B1F3E: jne loc_4B2127;");
    asm("loc_4B1F44: mov 0x8B8(%ebp),%eax;");
    asm("loc_4B1F4A: mov 0x330(%ebp),%ecx;");
    asm("loc_4B1F50: push %ebx;");
    asm("loc_4B1F51: xor %bl,%bl;");
    asm("loc_4B1F53: cmp %ecx,%eax;");
    asm("loc_4B1F55: movl $0xFFFFFFFF,0x28(%esp);");
    asm("loc_4B1F5D: mov %bl,0x3C(%esp);");
    asm("loc_4B1F61: mov %bl,0x3E(%esp);");
    asm("loc_4B1F65: jne loc_4B1F75;");
    asm("loc_4B1F67: mov 0x8BC(%ebp),%cl;");
    asm("loc_4B1F6D: cmp 0x334(%ebp),%cl;");
    asm("loc_4B1F73: je loc_4B1F77;");
    asm("loc_4B1F75: mov $1,%bl;");
    asm("loc_4B1F77: xor %edx,%edx;");
    asm("loc_4B1F79: lea 0x5E4(%ebp),%eax;");
    asm("loc_4B1F7F: push %esi;");
    asm("loc_4B1F80: mov %edx,0x10(%esp);");
    asm("loc_4B1F84: mov %eax,0xC(%esp);");
    asm("loc_4B1F88: push %edi;");
    asm("loc_4B1F89: lea (%esp),%esp;");
    asm("loc_4B1F90: test %bl,%bl;");
    asm("loc_4B1F92: jne loc_4B20D7;");
    asm("loc_4B1F98: mov 0x7F4(%ebp),%eax;");
    asm("loc_4B1F9E: cmp $1,%eax;");
    asm("loc_4B1FA1: jne loc_4B1FAB;");
    asm("loc_4B1FA3: mov 0x508(%ebp),%esi;");
    asm("loc_4B1FA9: jmp loc_4B1FC3;");
    asm("loc_4B1FAB: cmp $2,%eax;");
    asm("loc_4B1FAE: jne loc_4B1FB8;");
    asm("loc_4B1FB0: mov 0x548(%ebp),%esi;");
    asm("loc_4B1FB6: jmp loc_4B1FC3;");
    asm("loc_4B1FB8: cmp $3,%eax;");
    asm("loc_4B1FBB: jne loc_4B1FD0;");
    asm("loc_4B1FBD: mov 0x528(%ebp),%esi;");
    asm("loc_4B1FC3: add %edx,%esi;");
    asm("loc_4B1FC5: lea 0x30(%esp),%edi;");
    asm("loc_4B1FC9: mov $6,%ecx;");
    asm("loc_4B1FCE: rep movsl (%esi),(%edi);");
    asm("loc_4B1FD0: mov 0x46(%esp),%al;");
    asm("loc_4B1FD4: test %al,%al;");
    asm("loc_4B1FD6: jne loc_4B20B9;");
    asm("loc_4B1FDC: mov 0x44(%esp),%al;");
    asm("loc_4B1FE0: test %al,%al;");
    asm("loc_4B1FE2: je loc_4B2037;");
    asm("loc_4B1FE4: cmpl $0x536,0x30(%esp);");
    asm("loc_4B1FEC: je loc_4B20B9;");
    asm("loc_4B1FF2: mov 0x10(%esp),%ecx;");
    asm("loc_4B1FF6: mov 0x70(%ecx),%ecx;");
    asm("loc_4B1FF9: mov (%ecx),%edx;");
    asm("loc_4B1FFB: push $0;");
    asm("loc_4B1FFD: push $0;");
    asm("loc_4B1FFF: push $0x3B;");
    asm("loc_4B2001: calll *0xA8(%edx);");
    asm("loc_4B2007: mov %eax,0x20(%esp);");
    asm("loc_4B200B: mov 0x10(%esp),%eax;");
    asm("loc_4B200F: movl $0,0x24(%esp);");
    asm("loc_4B2017: fildll 0x20(%esp);");
    asm("loc_4B201B: flds 0x1D4(%eax);");
    asm("loc_4B2021: call _sub_5B7EC0;");
    asm("loc_4B2026: mov %eax,%esi;");
    asm("loc_4B2028: call _sub_5B7EC0;");
    asm("loc_4B202D: cmp %eax,%esi;");
    asm("loc_4B202F: je loc_4B20B5;");
    asm("loc_4B2035: jmp loc_4B20B3;");
    asm("loc_4B2037: mov 0x10(%esp),%eax;");
    asm("loc_4B203B: mov (%eax),%ecx;");
    asm("loc_4B203D: testb $2,0x6C(%ecx);");
    asm("loc_4B2041: je loc_4B20B9;");
    asm("loc_4B2043: mov 0x30(%esp),%esi;");
    asm("loc_4B2047: cmp 0x4C(%esp),%esi;");
    asm("loc_4B204B: jne loc_4B2062;");
    asm("loc_4B204D: flds 0x1D4(%eax);");
    asm("loc_4B2053: fcomps 0x50(%esp);");
    asm("loc_4B2057: fnstsw %ax;");
    asm("loc_4B2059: test $0x44,%ah;");
    asm("loc_4B205C: jp loc_4B20B9;");
    asm("loc_4B205E: mov $1,%bl;");
    asm("loc_4B2060: jmp loc_4B20B9;");
    asm("loc_4B2062: mov (%ecx),%edx;");
    asm("loc_4B2064: push $0;");
    asm("loc_4B2066: lea 0x20(%esp),%eax;");
    asm("loc_4B206A: push %eax;");
    asm("loc_4B206B: push $0x2F;");
    asm("loc_4B206D: calll *0xA8(%edx);");
    asm("loc_4B2073: mov 0x1C(%esp),%ecx;");
    asm("loc_4B2077: mov %ecx,0x28(%esp);");
    asm("loc_4B207B: xor %ecx,%ecx;");
    asm("loc_4B207D: mov %ecx,0x2C(%esp);");
    asm("loc_4B2081: fildll 0x28(%esp);");
    asm("loc_4B2085: movl $1,0x18(%esp);");
    asm("loc_4B208D: fcompl _data_5C8B68;");
    asm("loc_4B2093: fnstsw %ax;");
    asm("loc_4B2095: test $0x41,%ah;");
    asm("loc_4B2098: je loc_4B209E;");
    asm("loc_4B209A: mov %ecx,0x18(%esp);");
    asm("loc_4B209E: fildl 0x18(%esp);");
    asm("loc_4B20A2: mov 0x10(%esp),%edx;");
    asm("loc_4B20A6: fcomps 0x1D4(%edx);");
    asm("loc_4B20AC: fnstsw %ax;");
    asm("loc_4B20AE: test $0x44,%ah;");
    asm("loc_4B20B1: jnp loc_4B20B5;");
    asm("loc_4B20B3: mov $1,%bl;");
    asm("loc_4B20B5: mov 0x14(%esp),%edx;");
    asm("loc_4B20B9: mov 0x10(%esp),%esi;");
    asm("loc_4B20BD: add $0x18,%edx;");
    asm("loc_4B20C0: add $4,%esi;");
    asm("loc_4B20C3: cmp $0x150,%edx;");
    asm("loc_4B20C9: mov %esi,0x10(%esp);");
    asm("loc_4B20CD: mov %edx,0x14(%esp);");
    asm("loc_4B20D1: jl loc_4B1F90;");
    asm("loc_4B20D7: test %bl,%bl;");
    asm("loc_4B20D9: pop %edi;");
    asm("loc_4B20DA: mov %bl,0x848(%ebp);");
    asm("loc_4B20E0: mov _data_679BB0,%eax;");
    asm("loc_4B20E5: pop %esi;");
    asm("loc_4B20E6: jne loc_4B20ED;");
    asm("loc_4B20E8: mov _data_679B94,%eax;");
    asm("loc_4B20ED: mov 0x7AC(%ebp),%ecx;");
    asm("loc_4B20F3: test %bl,%bl;");
    asm("loc_4B20F5: mov %eax,0x348(%ecx);");
    asm("loc_4B20FB: mov 0x7A8(%ebp),%eax;");
    asm("loc_4B2101: sete %dl;");
    asm("loc_4B2104: mov %dl,0x37C(%eax);");
    asm("loc_4B210A: mov 0x7A8(%ebp),%ebp;");
    asm("loc_4B2110: mov 0x388(%ebp),%al;");
    asm("loc_4B2116: shl $2,%bl;");
    asm("loc_4B2119: xor %al,%bl;");
    asm("loc_4B211B: and $4,%bl;");
    asm("loc_4B211E: xor %al,%bl;");
    asm("loc_4B2120: mov %bl,0x388(%ebp);");
    asm("loc_4B2126: pop %ebx;");
    asm("loc_4B2127: pop %ebp;");
    asm("loc_4B2128: add $0x38,%esp;");
    asm("loc_4B212B: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2130() // _sub_4B2130
{
    __DEBUG_ASM(4B2130);
    // chunk 0x4B2130 _sub_4B2130
    asm("loc_4B2130: mov %fs:0,%eax;");
    asm("loc_4B2136: push $0xFFFFFFFF;");
    asm("loc_4B2138: push $_sub_5BCFFE;");
    asm("loc_4B213D: push %eax;");
    asm("loc_4B213E: mov %esp,%fs:0;");
    asm("loc_4B2145: sub $0xE4,%esp;");
    asm("loc_4B214B: push %ebx;");
    asm("loc_4B214C: push %ebp;");
    asm("loc_4B214D: mov %ecx,%ebp;");
    asm("loc_4B214F: mov 0x7F4(%ebp),%eax;");
    asm("loc_4B2155: xor %ebx,%ebx;");
    asm("loc_4B2157: cmp %ebx,%eax;");
    asm("loc_4B2159: push %esi;");
    asm("loc_4B215A: push %edi;");
    asm("loc_4B215B: jne loc_4B22C6;");
    asm("loc_4B2161: mov 0x4B8(%ebp),%ecx;");
    asm("loc_4B2167: mov (%ecx),%eax;");
    asm("loc_4B2169: push %ebx;");
    asm("loc_4B216A: push %ebx;");
    asm("loc_4B216B: push $0x3B;");
    asm("loc_4B216D: calll *0xA8(%eax);");
    asm("loc_4B2173: mov 0x838(%ebp),%ecx;");
    asm("loc_4B2179: sub %ebx,%ecx;");
    asm("loc_4B217B: je loc_4B21B3;");
    asm("loc_4B217D: dec %ecx;");
    asm("loc_4B217E: je loc_4B219B;");
    asm("loc_4B2180: dec %ecx;");
    asm("loc_4B2181: jne loc_4B21CB;");
    asm("loc_4B2183: mov 0x104(%esp),%ecx;");
    asm("loc_4B218A: mov 0x820(%ebp),%ebp;");
    asm("loc_4B2190: add %ecx,%eax;");
    asm("loc_4B2192: imul $0x2C,%eax;");
    asm("loc_4B2195: mov 0x1C(%eax,%ebp),%esi;");
    asm("loc_4B2199: jmp loc_4B21CF;");
    asm("loc_4B219B: mov 0x104(%esp),%edx;");
    asm("loc_4B21A2: mov 0x810(%ebp),%ebp;");
    asm("loc_4B21A8: add %edx,%eax;");
    asm("loc_4B21AA: imul $0x2C,%eax;");
    asm("loc_4B21AD: mov 0x1C(%eax,%ebp),%esi;");
    asm("loc_4B21B1: jmp loc_4B21CF;");
    asm("loc_4B21B3: mov 0x104(%esp),%ecx;");
    asm("loc_4B21BA: mov 0x800(%ebp),%ebp;");
    asm("loc_4B21C0: add %ecx,%eax;");
    asm("loc_4B21C2: imul $0x2C,%eax;");
    asm("loc_4B21C5: mov 0x1C(%eax,%ebp),%esi;");
    asm("loc_4B21C9: jmp loc_4B21CF;");
    asm("loc_4B21CB: mov 0x10(%esp),%esi;");
    asm("loc_4B21CF: cmp %ebx,%esi;");
    asm("loc_4B21D1: jle loc_4B2419;");
    asm("loc_4B21D7: mov %ebx,0x98(%esp);");
    asm("loc_4B21DE: mov %ebx,0x9C(%esp);");
    asm("loc_4B21E5: lea 0xA0(%esp),%ecx;");
    asm("loc_4B21EC: mov %ebx,0xFC(%esp);");
    asm("loc_4B21F3: call _sub_4144B0;");
    asm("loc_4B21F8: or $0xFFFFFFFF,%edi;");
    asm("loc_4B21FB: push %edi;");
    asm("loc_4B21FC: push %ebx;");
    asm("loc_4B21FD: lea 0xA0(%esp),%ecx;");
    asm("loc_4B2204: movb $1,0x104(%esp);");
    asm("loc_4B220C: mov %ebx,0x9C(%esp);");
    asm("loc_4B2213: mov %edi,0x98(%esp);");
    asm("loc_4B221A: mov %ebx,0xDC(%esp);");
    asm("loc_4B2221: call _sub_413DF0;");
    asm("loc_4B2226: mov %bl,0xF0(%esp);");
    asm("loc_4B222D: push $0x3E4CCCCD;");
    asm("loc_4B2232: lea 0x94(%esp),%edx;");
    asm("loc_4B2239: push %ebx;");
    asm("loc_4B223A: push %edx;");
    asm("loc_4B223B: movl $2,0x108(%esp);");
    asm("loc_4B2246: mov %esi,0x9C(%esp);");
    asm("loc_4B224D: mov %esi,0xA0(%esp);");
    asm("loc_4B2254: call _sub_4B6420;");
    asm("loc_4B2259: add $0xC,%esp;");
    asm("loc_4B225C: mov $3,%ebx;");
    asm("loc_4B2261: lea 0xA0(%esp),%eax;");
    asm("loc_4B2268: mov %ebx,0xFC(%esp);");
    asm("loc_4B226F: mov %eax,0x10(%esp);");
    asm("loc_4B2273: lea 0xA0(%esp),%ecx;");
    asm("loc_4B227A: movb $5,0xFC(%esp);");
    asm("loc_4B2282: call _sub_4144F0;");
    asm("loc_4B2287: lea 0xAC(%esp),%ecx;");
    asm("loc_4B228E: movb $4,0xFC(%esp);");
    asm("loc_4B2296: call _sub_445D70;");
    asm("loc_4B229B: lea 0xA0(%esp),%ecx;");
    asm("loc_4B22A2: mov %bl,0xFC(%esp);");
    asm("loc_4B22A9: call _sub_444E20;");
    asm("loc_4B22AE: lea 0x98(%esp),%ecx;");
    asm("loc_4B22B5: mov %edi,0xFC(%esp);");
    asm("loc_4B22BC: call _sub_444E20;");
    asm("loc_4B22C1: jmp loc_4B2419;");
    asm("loc_4B22C6: cmp $1,%eax;");
    asm("loc_4B22C9: jne loc_4B22D3;");
    asm("loc_4B22CB: mov 0x508(%ebp),%ecx;");
    asm("loc_4B22D1: jmp loc_4B22FC;");
    asm("loc_4B22D3: cmp $2,%eax;");
    asm("loc_4B22D6: jne loc_4B22ED;");
    asm("loc_4B22D8: mov 0x104(%esp),%eax;");
    asm("loc_4B22DF: mov 0x548(%ebp),%ecx;");
    asm("loc_4B22E5: lea (%eax,%eax,2),%eax;");
    asm("loc_4B22E8: lea (%ecx,%eax,8),%esi;");
    asm("loc_4B22EB: jmp loc_4B2309;");
    asm("loc_4B22ED: cmp $3,%eax;");
    asm("loc_4B22F0: jne loc_4B2419;");
    asm("loc_4B22F6: mov 0x528(%ebp),%ecx;");
    asm("loc_4B22FC: mov 0x104(%esp),%eax;");
    asm("loc_4B2303: lea (%eax,%eax,2),%edx;");
    asm("loc_4B2306: lea (%ecx,%edx,8),%esi;");
    asm("loc_4B2309: lea 0x78(%esp),%edi;");
    asm("loc_4B230D: mov $6,%ecx;");
    asm("loc_4B2312: rep movsl (%esi),(%edi);");
    asm("loc_4B2314: mov 0x7C(%esp),%esi;");
    asm("loc_4B2318: cmp %ebx,%esi;");
    asm("loc_4B231A: jle loc_4B2419;");
    asm("loc_4B2320: cmp %bl,0x84C(%ebp);");
    asm("loc_4B2326: jne loc_4B2419;");
    asm("loc_4B232C: cmp %bl,0x84D(%ebp);");
    asm("loc_4B2332: jne loc_4B2419;");
    asm("loc_4B2338: mov %ebx,0x1C(%esp);");
    asm("loc_4B233C: mov %ebx,0x20(%esp);");
    asm("loc_4B2340: lea 0x24(%esp),%ecx;");
    asm("loc_4B2344: movl $6,0xFC(%esp);");
    asm("loc_4B234F: call _sub_4144B0;");
    asm("loc_4B2354: mov 0x1C(%esp),%eax;");
    asm("loc_4B2358: cmp %ebx,%eax;");
    asm("loc_4B235A: mov %ebx,0x18(%esp);");
    asm("loc_4B235E: movl $0xFFFFFFFF,0x14(%esp);");
    asm("loc_4B2366: mov %ebx,0x58(%esp);");
    asm("loc_4B236A: je loc_4B2374;");
    asm("loc_4B236C: cmp %bx,(%eax);");
    asm("loc_4B236F: je loc_4B2374;");
    asm("loc_4B2371: mov %bx,(%eax);");
    asm("loc_4B2374: mov %bl,0x74(%esp);");
    asm("loc_4B2378: push $0x3E4CCCCD;");
    asm("loc_4B237D: lea 0x18(%esp),%eax;");
    asm("loc_4B2381: push %ebx;");
    asm("loc_4B2382: push %eax;");
    asm("loc_4B2383: movl $8,0x108(%esp);");
    asm("loc_4B238E: mov %esi,0x20(%esp);");
    asm("loc_4B2392: mov %esi,0x24(%esp);");
    asm("loc_4B2396: call _sub_4B6420;");
    asm("loc_4B239B: add $0xC,%esp;");
    asm("loc_4B239E: lea 0x24(%esp),%ecx;");
    asm("loc_4B23A2: movl $9,0xFC(%esp);");
    asm("loc_4B23AD: mov %ecx,0x10(%esp);");
    asm("loc_4B23B1: lea 0x24(%esp),%ecx;");
    asm("loc_4B23B5: movb $0xB,0xFC(%esp);");
    asm("loc_4B23BD: call _sub_4144F0;");
    asm("loc_4B23C2: mov 0x38(%esp),%edx;");
    asm("loc_4B23C6: mov 0x34(%esp),%eax;");
    asm("loc_4B23CA: push %edx;");
    asm("loc_4B23CB: push %eax;");
    asm("loc_4B23CC: lea 0x38(%esp),%ecx;");
    asm("loc_4B23D0: movb $0xA,0x104(%esp);");
    asm("loc_4B23D8: call _sub_445DC0;");
    asm("loc_4B23DD: mov 0x34(%esp),%ecx;");
    asm("loc_4B23E1: push %ecx;");
    asm("loc_4B23E2: call _sub_5B7E1D;");
    asm("loc_4B23E7: add $4,%esp;");
    asm("loc_4B23EA: lea 0x24(%esp),%ecx;");
    asm("loc_4B23EE: mov %ebx,0x34(%esp);");
    asm("loc_4B23F2: mov %ebx,0x38(%esp);");
    asm("loc_4B23F6: mov %ebx,0x3C(%esp);");
    asm("loc_4B23FA: movb $9,0xFC(%esp);");
    asm("loc_4B2402: call _sub_444E20;");
    asm("loc_4B2407: mov 0x1C(%esp),%eax;");
    asm("loc_4B240B: cmp %ebx,%eax;");
    asm("loc_4B240D: je loc_4B2419;");
    asm("loc_4B240F: push %eax;");
    asm("loc_4B2410: calll *_import_5C71D8;");
    asm("loc_4B2416: add $4,%esp;");
    asm("loc_4B2419: mov 0xF4(%esp),%ecx;");
    asm("loc_4B2420: pop %edi;");
    asm("loc_4B2421: pop %esi;");
    asm("loc_4B2422: pop %ebp;");
    asm("loc_4B2423: pop %ebx;");
    asm("loc_4B2424: mov %ecx,%fs:0;");
    asm("loc_4B242B: add $0xF0,%esp;");
    asm("loc_4B2431: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2440() // _sub_4B2440
{
    __DEBUG_ASM(4B2440);
    // chunk 0x4B2440 _sub_4B2440
    asm("loc_4B2440: sub $0x34,%esp;");
    asm("loc_4B2443: mov _import_5C6DE0,%eax;");
    asm("loc_4B2448: push %ebx;");
    asm("loc_4B2449: push %ebp;");
    asm("loc_4B244A: push %esi;");
    asm("loc_4B244B: push %edi;");
    asm("loc_4B244C: mov %ecx,%ebp;");
    asm("loc_4B244E: xor %ebx,%ebx;");
    asm("loc_4B2450: lea 0x14(%esp),%edx;");
    asm("loc_4B2454: push %edx;");
    asm("loc_4B2455: mov %ebx,0x18(%esp);");
    asm("loc_4B2459: mov (%eax),%eax;");
    asm("loc_4B245B: mov $0xA,%ecx;");
    asm("loc_4B2460: mov $_data_679BC0,%esi;");
    asm("loc_4B2465: lea 0x20(%esp),%edi;");
    asm("loc_4B2469: rep movsl (%esi),(%edi);");
    asm("loc_4B246B: mov (%eax),%ecx;");
    asm("loc_4B246D: push $3;");
    asm("loc_4B246F: push %eax;");
    asm("loc_4B2470: mov %ebx,0x30(%esp);");
    asm("loc_4B2474: mov %ebx,0x34(%esp);");
    asm("loc_4B2478: calll *0x20(%ecx);");
    asm("loc_4B247B: mov 0x14(%esp),%eax;");
    asm("loc_4B247F: shr $0x14,%eax;");
    asm("loc_4B2482: cmp $0x11,%eax;");
    asm("loc_4B2485: mov %eax,0x14(%esp);");
    asm("loc_4B2489: jb loc_4B2494;");
    asm("loc_4B248B: movb $1,0x97C(%ebp);");
    asm("loc_4B2492: jmp loc_4B249A;");
    asm("loc_4B2494: mov %bl,0x97C(%ebp);");
    asm("loc_4B249A: lea 0x954(%ebp),%eax;");
    asm("loc_4B24A0: mov %eax,0x10(%esp);");
    asm("loc_4B24A4: mov $0xFFFFF6BC,%eax;");
    asm("loc_4B24A9: sub %ebp,%eax;");
    asm("loc_4B24AB: mov %ebx,0x950(%ebp);");
    asm("loc_4B24B1: lea 0x944(%ebp),%edi;");
    asm("loc_4B24B7: lea 0x8D4(%ebp),%esi;");
    asm("loc_4B24BD: mov %eax,0x18(%esp);");
    asm("loc_4B24C1: mov (%esi),%edx;");
    asm("loc_4B24C3: mov 0x10(%esp),%ecx;");
    asm("loc_4B24C7: mov -4(%esi),%eax;");
    asm("loc_4B24CA: push %edx;");
    asm("loc_4B24CB: movl $0xFFFFFFFF,(%ecx);");
    asm("loc_4B24D1: mov -8(%esi),%ecx;");
    asm("loc_4B24D4: push %eax;");
    asm("loc_4B24D5: push %ecx;");
    asm("loc_4B24D6: lea 0x28(%esp),%edx;");
    asm("loc_4B24DA: push %edx;");
    asm("loc_4B24DB: mov %ebp,%ecx;");
    asm("loc_4B24DD: call _sub_4AF120;");
    asm("loc_4B24E2: test %al,%al;");
    asm("loc_4B24E4: mov %al,(%edi);");
    asm("loc_4B24E6: je loc_4B250E;");
    asm("loc_4B24E8: mov 0x97C(%ebp),%al;");
    asm("loc_4B24EE: test %al,%al;");
    asm("loc_4B24F0: jne loc_4B24FC;");
    asm("loc_4B24F2: cmpl $0x10,(%esi);");
    asm("loc_4B24F5: je loc_4B24FC;");
    asm("loc_4B24F7: movb $0,(%edi);");
    asm("loc_4B24FA: jmp loc_4B250E;");
    asm("loc_4B24FC: mov 0x950(%ebp),%eax;");
    asm("loc_4B2502: mov 0x10(%esp),%ecx;");
    asm("loc_4B2506: mov %eax,(%ecx);");
    asm("loc_4B2508: incl 0x950(%ebp);");
    asm("loc_4B250E: mov 0x10(%esp),%ebx;");
    asm("loc_4B2512: mov 0x18(%esp),%edx;");
    asm("loc_4B2516: add $4,%ebx;");
    asm("loc_4B2519: add $0xC,%esi;");
    asm("loc_4B251C: inc %edi;");
    asm("loc_4B251D: add %edi,%edx;");
    asm("loc_4B251F: cmp $0xA,%edx;");
    asm("loc_4B2522: mov %ebx,0x10(%esp);");
    asm("loc_4B2526: jl loc_4B24C1;");
    asm("loc_4B2528: pop %edi;");
    asm("loc_4B2529: pop %esi;");
    asm("loc_4B252A: pop %ebp;");
    asm("loc_4B252B: pop %ebx;");
    asm("loc_4B252C: add $0x34,%esp;");
    asm("loc_4B252F: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2540() // _sub_4B2540
{
    __DEBUG_ASM(4B2540);
    // chunk 0x4B2540 _sub_4B2540
    asm("loc_4B2540: sub $0x180,%esp;");
    asm("loc_4B2546: push %esi;");
    asm("loc_4B2547: mov %ecx,%esi;");
    asm("loc_4B2549: mov 0x849(%esi),%al;");
    asm("loc_4B254F: test %al,%al;");
    asm("loc_4B2551: jne loc_4B26EB;");
    asm("loc_4B2557: mov 0x188(%esp),%al;");
    asm("loc_4B255E: test %al,%al;");
    asm("loc_4B2560: mov %al,0x84A(%esi);");
    asm("loc_4B2566: je loc_4B2693;");
    asm("loc_4B256C: mov 0x330(%esi),%eax;");
    asm("loc_4B2572: cmp %eax,0x8B8(%esi);");
    asm("loc_4B2578: jne loc_4B2588;");
    asm("loc_4B257A: mov 0x8BC(%esi),%cl;");
    asm("loc_4B2580: cmp 0x334(%esi),%cl;");
    asm("loc_4B2586: je loc_4B25ED;");
    asm("loc_4B2588: xor %edx,%edx;");
    asm("loc_4B258A: mov 0x334(%esi),%dl;");
    asm("loc_4B2590: mov %esi,%ecx;");
    asm("loc_4B2592: push %edx;");
    asm("loc_4B2593: push %eax;");
    asm("loc_4B2594: call _sub_4B1C00;");
    asm("loc_4B2599: test %al,%al;");
    asm("loc_4B259B: je loc_4B25E1;");
    asm("loc_4B259D: push $0x40;");
    asm("loc_4B259F: lea 0x88(%esp),%eax;");
    asm("loc_4B25A6: push %eax;");
    asm("loc_4B25A7: movb $1,0x84D(%esi);");
    asm("loc_4B25AE: mov _data_67ECA8,%ecx;");
    asm("loc_4B25B4: push $0x779;");
    asm("loc_4B25B9: push %ecx;");
    asm("loc_4B25BA: call _sub_4347E0;");
    asm("loc_4B25BF: mov 0x4EC(%esi),%ecx;");
    asm("loc_4B25C5: add $0x10,%esp;");
    asm("loc_4B25C8: lea 0x84(%esp),%edx;");
    asm("loc_4B25CF: push %edx;");
    asm("loc_4B25D0: call _sub_58A530;");
    asm("loc_4B25D5: mov 0x7F0(%esi),%eax;");
    asm("loc_4B25DB: andb $0xFC,0x6C(%eax);");
    asm("loc_4B25DF: jmp loc_4B25ED;");
    asm("loc_4B25E1: push $0x536;");
    asm("loc_4B25E6: mov %esi,%ecx;");
    asm("loc_4B25E8: call _sub_4B0920;");
    asm("loc_4B25ED: mov _data_67ECA8,%ecx;");
    asm("loc_4B25F3: push $0x40;");
    asm("loc_4B25F5: lea 0x108(%esp),%eax;");
    asm("loc_4B25FC: push %eax;");
    asm("loc_4B25FD: push $0x778;");
    asm("loc_4B2602: push %ecx;");
    asm("loc_4B2603: call _sub_4347E0;");
    asm("loc_4B2608: mov 0x4E8(%esi),%ecx;");
    asm("loc_4B260E: add $0x10,%esp;");
    asm("loc_4B2611: lea 0x104(%esp),%edx;");
    asm("loc_4B2618: push %edx;");
    asm("loc_4B2619: call _sub_58A530;");
    asm("loc_4B261E: mov %esi,%ecx;");
    asm("loc_4B2620: call _sub_4ABFB0;");
    asm("loc_4B2625: mov _data_67ECA8,%ecx;");
    asm("loc_4B262B: push $0x40;");
    asm("loc_4B262D: lea 8(%esp),%eax;");
    asm("loc_4B2631: push %eax;");
    asm("loc_4B2632: push $0x4DC;");
    asm("loc_4B2637: push %ecx;");
    asm("loc_4B2638: call _sub_4347E0;");
    asm("loc_4B263D: mov 0x4FC(%esi),%ecx;");
    asm("loc_4B2643: mov (%ecx),%edx;");
    asm("loc_4B2645: add $0x10,%esp;");
    asm("loc_4B2648: push $0;");
    asm("loc_4B264A: lea 8(%esp),%eax;");
    asm("loc_4B264E: push %eax;");
    asm("loc_4B264F: push $0x1D;");
    asm("loc_4B2651: calll *0xA8(%edx);");
    asm("loc_4B2657: mov _data_67ECA8,%edx;");
    asm("loc_4B265D: push $0x40;");
    asm("loc_4B265F: lea 8(%esp),%ecx;");
    asm("loc_4B2663: push %ecx;");
    asm("loc_4B2664: push $0x4DD;");
    asm("loc_4B2669: push %edx;");
    asm("loc_4B266A: call _sub_4347E0;");
    asm("loc_4B266F: mov 0x500(%esi),%ecx;");
    asm("loc_4B2675: mov (%ecx),%eax;");
    asm("loc_4B2677: add $0x10,%esp;");
    asm("loc_4B267A: push $0;");
    asm("loc_4B267C: lea 8(%esp),%edx;");
    asm("loc_4B2680: push %edx;");
    asm("loc_4B2681: push $0x1D;");
    asm("loc_4B2683: calll *0xA8(%eax);");
    asm("loc_4B2689: pop %esi;");
    asm("loc_4B268A: add $0x180,%esp;");
    asm("loc_4B2690: ret $4;");
    asm("loc_4B2693: mov 0x4E8(%esi),%ecx;");
    asm("loc_4B2699: mov 0x6C(%ecx),%dl;");
    asm("loc_4B269C: mov $0xFC,%al;");
    asm("loc_4B269E: and %al,%dl;");
    asm("loc_4B26A0: mov %dl,0x6C(%ecx);");
    asm("loc_4B26A3: mov 0x4EC(%esi),%ecx;");
    asm("loc_4B26A9: and %al,0x6C(%ecx);");
    asm("loc_4B26AC: mov 0x4F0(%esi),%ecx;");
    asm("loc_4B26B2: and %al,0x6C(%ecx);");
    asm("loc_4B26B5: mov 0x4FC(%esi),%ecx;");
    asm("loc_4B26BB: and %al,0x6C(%ecx);");
    asm("loc_4B26BE: mov 0x500(%esi),%ecx;");
    asm("loc_4B26C4: and %al,0x6C(%ecx);");
    asm("loc_4B26C7: mov 0x4F4(%esi),%ecx;");
    asm("loc_4B26CD: and %al,0x6C(%ecx);");
    asm("loc_4B26D0: mov 0x4F8(%esi),%ecx;");
    asm("loc_4B26D6: and %al,0x6C(%ecx);");
    asm("loc_4B26D9: mov 0x4E4(%esi),%ecx;");
    asm("loc_4B26DF: and %al,0x6C(%ecx);");
    asm("loc_4B26E2: push $0;");
    asm("loc_4B26E4: mov %esi,%ecx;");
    asm("loc_4B26E6: call _sub_4ABDF0;");
    asm("loc_4B26EB: pop %esi;");
    asm("loc_4B26EC: add $0x180,%esp;");
    asm("loc_4B26F2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2700() // _sub_4B2700
{
    asm("jmp dgb_4B2700;"); // jumptable skip
    asm(".long _jmp_4B28C8;"); // jumptable address
    __DEBUG_ASM(4B2700);
    // chunk 0x4B2700 _sub_4B2700
    asm("loc_4B2700: sub $0x80,%esp;");
    asm("loc_4B2706: push %ebx;");
    asm("loc_4B2707: push %esi;");
    asm("loc_4B2708: mov %ecx,%esi;");
    asm("loc_4B270A: mov 0x7F4(%esi),%eax;");
    asm("loc_4B2710: test %eax,%eax;");
    asm("loc_4B2712: jne loc_4B2765;");
    asm("loc_4B2714: push %edi;");
    asm("loc_4B2715: call _sub_575D70;");
    asm("loc_4B271A: mov %eax,%edi;");
    asm("loc_4B271C: call _sub_575D60;");
    asm("loc_4B2721: push %edi;");
    asm("loc_4B2722: mov %eax,%ebx;");
    asm("loc_4B2724: call _sub_576F40;");
    asm("loc_4B2729: add $4,%esp;");
    asm("loc_4B272C: cmp $1,%eax;");
    asm("loc_4B272F: pop %edi;");
    asm("loc_4B2730: jae loc_4B273B;");
    asm("loc_4B2732: push %ebx;");
    asm("loc_4B2733: call _sub_576F40;");
    asm("loc_4B2738: add $4,%esp;");
    asm("loc_4B273B: push $_data_5D4CBC;");
    asm("loc_4B2740: mov %esi,%ecx;");
    asm("loc_4B2742: call _sub_4AF230;");
    asm("loc_4B2747: mov 0x4B8(%esi),%ecx;");
    asm("loc_4B274D: mov (%ecx),%eax;");
    asm("loc_4B274F: push $0;");
    asm("loc_4B2751: push $0;");
    asm("loc_4B2753: push $0x3B;");
    asm("loc_4B2755: calll *0xA8(%eax);");
    asm("loc_4B275B: push %eax;");
    asm("loc_4B275C: mov %esi,%ecx;");
    asm("loc_4B275E: call _sub_4AF900;");
    asm("loc_4B2763: jmp loc_4B27BA;");
    asm("loc_4B2765: mov 0x84D(%esi),%al;");
    asm("loc_4B276B: test %al,%al;");
    asm("loc_4B276D: je loc_4B27B1;");
    asm("loc_4B276F: mov 0x8B8(%esi),%edx;");
    asm("loc_4B2775: xor %ecx,%ecx;");
    asm("loc_4B2777: mov 0x8BC(%esi),%cl;");
    asm("loc_4B277D: push %ecx;");
    asm("loc_4B277E: push %edx;");
    asm("loc_4B277F: mov %esi,%ecx;");
    asm("loc_4B2781: call _sub_4B1C00;");
    asm("loc_4B2786: mov 0x8BC(%esi),%cl;");
    asm("loc_4B278C: mov 0x8B8(%esi),%eax;");
    asm("loc_4B2792: mov %cl,0x334(%esi);");
    asm("loc_4B2798: push $0x536;");
    asm("loc_4B279D: mov %esi,%ecx;");
    asm("loc_4B279F: movb $0,0x84D(%esi);");
    asm("loc_4B27A6: mov %eax,0x330(%esi);");
    asm("loc_4B27AC: call _sub_4B0920;");
    asm("loc_4B27B1: push $1;");
    asm("loc_4B27B3: mov %esi,%ecx;");
    asm("loc_4B27B5: call _sub_4B06A0;");
    asm("loc_4B27BA: mov 0x7AC(%esi),%edx;");
    asm("loc_4B27C0: movb $0,0x848(%esi);");
    asm("loc_4B27C7: mov _data_679B94,%eax;");
    asm("loc_4B27CC: mov %eax,0x348(%edx);");
    asm("loc_4B27D2: mov 0x7A8(%esi),%eax;");
    asm("loc_4B27D8: movb $1,0x37C(%eax);");
    asm("loc_4B27DF: mov 0x7A8(%esi),%eax;");
    asm("loc_4B27E5: mov 0x388(%eax),%bl;");
    asm("loc_4B27EB: and $0xFB,%bl;");
    asm("loc_4B27EE: push $0;");
    asm("loc_4B27F0: mov %esi,%ecx;");
    asm("loc_4B27F2: mov %bl,0x388(%eax);");
    asm("loc_4B27F8: call _sub_4B2540;");
    asm("loc_4B27FD: mov 0x7F4(%esi),%eax;");
    asm("loc_4B2803: cmp $4,%eax;");
    asm("loc_4B2806: ja loc_4B28AC;");
    asm("loc_4B280C: jmpl *_jmp_4B28C8(,%eax,4);");
    asm("loc_4B2813: mov %esi,%ecx;");
    asm("loc_4B2815: call _sub_4AEAB0;");
    asm("loc_4B281A: jmp loc_4B28AC;");
    asm("loc_4B281F: mov %esi,%ecx;");
    asm("loc_4B2821: call _sub_4AEBB0;");
    asm("loc_4B2826: jmp loc_4B28AC;");
    asm("loc_4B282B: mov %esi,%ecx;");
    asm("loc_4B282D: call _sub_4AECA0;");
    asm("loc_4B2832: jmp loc_4B28AC;");
    asm("loc_4B2834: mov %esi,%ecx;");
    asm("loc_4B2836: call _sub_4AED70;");
    asm("loc_4B283B: jmp loc_4B28AC;");
    asm("loc_4B283D: mov 0x7F0(%esi),%eax;");
    asm("loc_4B2843: mov 0x6C(%eax),%cl;");
    asm("loc_4B2846: mov $0xFC,%bl;");
    asm("loc_4B2848: and %bl,%cl;");
    asm("loc_4B284A: mov %cl,0x6C(%eax);");
    asm("loc_4B284D: mov 0x374(%esi),%ecx;");
    asm("loc_4B2853: mov _data_679BB0,%edx;");
    asm("loc_4B2859: push $0x40;");
    asm("loc_4B285B: lea 0xC(%esp),%eax;");
    asm("loc_4B285F: push %eax;");
    asm("loc_4B2860: mov %edx,0x348(%ecx);");
    asm("loc_4B2866: mov _data_67ECA8,%ecx;");
    asm("loc_4B286C: push $0x5E4;");
    asm("loc_4B2871: push %ecx;");
    asm("loc_4B2872: call _sub_4347E0;");
    asm("loc_4B2877: mov 0x7B4(%esi),%ecx;");
    asm("loc_4B287D: mov (%ecx),%edx;");
    asm("loc_4B287F: add $0x10,%esp;");
    asm("loc_4B2882: push $0;");
    asm("loc_4B2884: lea 0xC(%esp),%eax;");
    asm("loc_4B2888: push %eax;");
    asm("loc_4B2889: push $0x1D;");
    asm("loc_4B288B: calll *0xA8(%edx);");
    asm("loc_4B2891: mov 0x7B0(%esi),%eax;");
    asm("loc_4B2897: and %bl,0x6C(%eax);");
    asm("loc_4B289A: mov 0x7B4(%esi),%eax;");
    asm("loc_4B28A0: and %bl,0x6C(%eax);");
    asm("loc_4B28A3: mov 0x344(%esi),%eax;");
    asm("loc_4B28A9: and %bl,0x6C(%eax);");
    asm("loc_4B28AC: mov 0x848(%esi),%al;");
    asm("loc_4B28B2: test %al,%al;");
    asm("loc_4B28B4: jne loc_4B28BD;");
    asm("loc_4B28B6: mov %esi,%ecx;");
    asm("loc_4B28B8: call _sub_4AEE30;");
    asm("loc_4B28BD: pop %esi;");
    asm("loc_4B28BE: pop %ebx;");
    asm("loc_4B28BF: add $0x80,%esp;");
    asm("loc_4B28C5: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_4B28C8: .long loc_4B2813;");
    asm(".long loc_4B281F;");
    asm(".long loc_4B282B;");
    asm(".long loc_4B2834;");
    asm(".long loc_4B283D;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4B2700);
_naked _weak void _sub_4B28E0() // _sub_4B28E0
{
    __DEBUG_ASM(4B28E0);
    // chunk 0x4B28E0 _sub_4B28E0
    asm("loc_4B28E0: push %ebx;");
    asm("loc_4B28E1: mov %ecx,%ebx;");
    asm("loc_4B28E3: xor %eax,%eax;");
    asm("loc_4B28E5: push %esi;");
    asm("loc_4B28E6: mov 0xC(%esp),%esi;");
    asm("loc_4B28EA: cmp %eax,%esi;");
    asm("loc_4B28EC: mov %eax,8(%ebx);");
    asm("loc_4B28EF: mov %al,0xC(%ebx);");
    asm("loc_4B28F2: movl $_off_5CB554,(%ebx);");
    asm("loc_4B28F8: mov %eax,4(%ebx);");
    asm("loc_4B28FB: jne loc_4B2902;");
    asm("loc_4B28FD: mov %al,0xC(%ebx);");
    asm("loc_4B2900: jmp loc_4B2937;");
    asm("loc_4B2902: push %ebp;");
    asm("loc_4B2903: or $0xFFFFFFFF,%ecx;");
    asm("loc_4B2906: xor %eax,%eax;");
    asm("loc_4B2908: push %edi;");
    asm("loc_4B2909: mov %esi,%edi;");
    asm("loc_4B290B: repne scas (%edi),%al;");
    asm("loc_4B290D: not %ecx;");
    asm("loc_4B290F: dec %ecx;");
    asm("loc_4B2910: mov %ecx,%eax;");
    asm("loc_4B2912: cmp $0x20,%eax;");
    asm("loc_4B2915: lea 0xC(%ebx),%ebp;");
    asm("loc_4B2918: jb loc_4B291F;");
    asm("loc_4B291A: mov $0x1F,%eax;");
    asm("loc_4B291F: mov %eax,%ecx;");
    asm("loc_4B2921: mov %ecx,%edx;");
    asm("loc_4B2923: shr $2,%ecx;");
    asm("loc_4B2926: mov %ebp,%edi;");
    asm("loc_4B2928: rep movsl (%esi),(%edi);");
    asm("loc_4B292A: mov %edx,%ecx;");
    asm("loc_4B292C: and $3,%ecx;");
    asm("loc_4B292F: rep movsb (%esi),(%edi);");
    asm("loc_4B2931: pop %edi;");
    asm("loc_4B2932: movb $0,(%eax,%ebp);");
    asm("loc_4B2936: pop %ebp;");
    asm("loc_4B2937: push %ebx;");
    asm("loc_4B2938: mov %eax,8(%ebx);");
    asm("loc_4B293B: call _sub_59DAB0;");
    asm("loc_4B2940: add $4,%esp;");
    asm("loc_4B2943: pop %esi;");
    asm("loc_4B2944: movl $_off_5D51A4,(%ebx);");
    asm("loc_4B294A: mov %ebx,%eax;");
    asm("loc_4B294C: pop %ebx;");
    asm("loc_4B294D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2950() // _sub_4B2950
{
    __DEBUG_ASM(4B2950);
    // chunk 0x4B2950 _sub_4B2950
    asm("loc_4B2950: push $0xFFFFFFFF;");
    asm("loc_4B2952: push $_sub_5BD01B;");
    asm("loc_4B2957: mov %fs:0,%eax;");
    asm("loc_4B295D: push %eax;");
    asm("loc_4B295E: mov %esp,%fs:0;");
    asm("loc_4B2965: push %ecx;");
    asm("loc_4B2966: push %ebx;");
    asm("loc_4B2967: push %esi;");
    asm("loc_4B2968: push %edi;");
    asm("loc_4B2969: push $0x980;");
    asm("loc_4B296E: mov %ecx,%ebx;");
    asm("loc_4B2970: call _sub_5B7E84;");
    asm("loc_4B2975: mov %eax,%esi;");
    asm("loc_4B2977: add $4,%esp;");
    asm("loc_4B297A: mov %esi,0xC(%esp);");
    asm("loc_4B297E: xor %edi,%edi;");
    asm("loc_4B2980: cmp %edi,%esi;");
    asm("loc_4B2982: mov %edi,0x18(%esp);");
    asm("loc_4B2986: je loc_4B2A7A;");
    asm("loc_4B298C: mov %esi,%ecx;");
    asm("loc_4B298E: call _sub_59F860;");
    asm("loc_4B2993: mov 0x24(%esp),%al;");
    asm("loc_4B2997: mov 0x24(%esp),%cl;");
    asm("loc_4B299B: mov 0x24(%esp),%dl;");
    asm("loc_4B299F: mov %al,0x504(%esi);");
    asm("loc_4B29A5: mov 0x24(%esp),%al;");
    asm("loc_4B29A9: mov %edi,0x508(%esi);");
    asm("loc_4B29AF: mov %edi,0x50C(%esi);");
    asm("loc_4B29B5: mov %edi,0x510(%esi);");
    asm("loc_4B29BB: mov %cl,0x514(%esi);");
    asm("loc_4B29C1: mov 0x24(%esp),%cl;");
    asm("loc_4B29C5: mov %edi,0x518(%esi);");
    asm("loc_4B29CB: mov %edi,0x51C(%esi);");
    asm("loc_4B29D1: mov %edi,0x520(%esi);");
    asm("loc_4B29D7: mov %dl,0x524(%esi);");
    asm("loc_4B29DD: mov 0x24(%esp),%dl;");
    asm("loc_4B29E1: mov %edi,0x528(%esi);");
    asm("loc_4B29E7: mov %edi,0x52C(%esi);");
    asm("loc_4B29ED: mov %edi,0x530(%esi);");
    asm("loc_4B29F3: mov %al,0x534(%esi);");
    asm("loc_4B29F9: mov %edi,0x538(%esi);");
    asm("loc_4B29FF: mov %edi,0x53C(%esi);");
    asm("loc_4B2A05: mov %edi,0x540(%esi);");
    asm("loc_4B2A0B: mov %cl,0x544(%esi);");
    asm("loc_4B2A11: mov %edi,0x548(%esi);");
    asm("loc_4B2A17: mov %edi,0x54C(%esi);");
    asm("loc_4B2A1D: mov %edi,0x550(%esi);");
    asm("loc_4B2A23: lea 0x24(%esp),%eax;");
    asm("loc_4B2A27: push %eax;");
    asm("loc_4B2A28: lea 0x7FC(%esi),%ecx;");
    asm("loc_4B2A2E: mov %dl,0x554(%esi);");
    asm("loc_4B2A34: mov %edi,0x558(%esi);");
    asm("loc_4B2A3A: mov %edi,0x55C(%esi);");
    asm("loc_4B2A40: mov %edi,0x560(%esi);");
    asm("loc_4B2A46: call _sub_5A6900;");
    asm("loc_4B2A4B: lea 0x24(%esp),%ecx;");
    asm("loc_4B2A4F: push %ecx;");
    asm("loc_4B2A50: lea 0x80C(%esi),%ecx;");
    asm("loc_4B2A56: call _sub_5A6900;");
    asm("loc_4B2A5B: lea 0x24(%esp),%edx;");
    asm("loc_4B2A5F: push %edx;");
    asm("loc_4B2A60: lea 0x81C(%esi),%ecx;");
    asm("loc_4B2A66: call _sub_5A6900;");
    asm("loc_4B2A6B: movl $_off_5D4A5C,(%esi);");
    asm("loc_4B2A71: movl $_off_5D4A4C,0x7C(%esi);");
    asm("loc_4B2A78: jmp loc_4B2A7C;");
    asm("loc_4B2A7A: xor %esi,%esi;");
    asm("loc_4B2A7C: mov 0x24(%esp),%ecx;");
    asm("loc_4B2A80: mov 0x20(%esp),%edx;");
    asm("loc_4B2A84: mov (%esi),%eax;");
    asm("loc_4B2A86: push %ecx;");
    asm("loc_4B2A87: add $0xC,%ebx;");
    asm("loc_4B2A8A: push %edx;");
    asm("loc_4B2A8B: mov %esi,%ecx;");
    asm("loc_4B2A8D: movl $0xFFFFFFFF,0x20(%esp);");
    asm("loc_4B2A95: mov %ebx,0x10(%esi);");
    asm("loc_4B2A98: calll *0x24(%eax);");
    asm("loc_4B2A9B: test %al,%al;");
    asm("loc_4B2A9D: jne loc_4B2ABD;");
    asm("loc_4B2A9F: mov (%esi),%eax;");
    asm("loc_4B2AA1: push $1;");
    asm("loc_4B2AA3: mov %esi,%ecx;");
    asm("loc_4B2AA5: calll *(%eax);");
    asm("loc_4B2AA7: pop %edi;");
    asm("loc_4B2AA8: pop %esi;");
    asm("loc_4B2AA9: xor %eax,%eax;");
    asm("loc_4B2AAB: pop %ebx;");
    asm("loc_4B2AAC: mov 4(%esp),%ecx;");
    asm("loc_4B2AB0: mov %ecx,%fs:0;");
    asm("loc_4B2AB7: add $0x10,%esp;");
    asm("loc_4B2ABA: ret $8;");
    asm("loc_4B2ABD: mov 0x10(%esp),%ecx;");
    asm("loc_4B2AC1: pop %edi;");
    asm("loc_4B2AC2: mov %esi,%eax;");
    asm("loc_4B2AC4: pop %esi;");
    asm("loc_4B2AC5: pop %ebx;");
    asm("loc_4B2AC6: mov %ecx,%fs:0;");
    asm("loc_4B2ACD: add $0x10,%esp;");
    asm("loc_4B2AD0: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2AE0() // _sub_4B2AE0
{
    __DEBUG_ASM(4B2AE0);
    // chunk 0x4B2AE0 _sub_4B2AE0
    asm("loc_4B2AE0: mov 4(%esp),%edx;");
    asm("loc_4B2AE4: mov 0xC(%esp),%eax;");
    asm("loc_4B2AE8: push %ebx;");
    asm("loc_4B2AE9: mov 0xC(%esp),%ebx;");
    asm("loc_4B2AED: cmp %ebx,%edx;");
    asm("loc_4B2AEF: je loc_4B2B0E;");
    asm("loc_4B2AF1: push %esi;");
    asm("loc_4B2AF2: push %edi;");
    asm("loc_4B2AF3: test %eax,%eax;");
    asm("loc_4B2AF5: je loc_4B2B02;");
    asm("loc_4B2AF7: mov $0xB,%ecx;");
    asm("loc_4B2AFC: mov %edx,%esi;");
    asm("loc_4B2AFE: mov %eax,%edi;");
    asm("loc_4B2B00: rep movsl (%esi),(%edi);");
    asm("loc_4B2B02: add $0x2C,%edx;");
    asm("loc_4B2B05: add $0x2C,%eax;");
    asm("loc_4B2B08: cmp %ebx,%edx;");
    asm("loc_4B2B0A: jne loc_4B2AF3;");
    asm("loc_4B2B0C: pop %edi;");
    asm("loc_4B2B0D: pop %esi;");
    asm("loc_4B2B0E: pop %ebx;");
    asm("loc_4B2B0F: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2B20() // _sub_4B2B20
{
    __DEBUG_ASM(4B2B20);
    // chunk 0x4B2B20 _sub_4B2B20
    asm("loc_4B2B20: mov 8(%esp),%eax;");
    asm("loc_4B2B24: test %eax,%eax;");
    asm("loc_4B2B26: jbe loc_4B2B4D;");
    asm("loc_4B2B28: push %ebx;");
    asm("loc_4B2B29: mov 0x10(%esp),%ebx;");
    asm("loc_4B2B2D: push %esi;");
    asm("loc_4B2B2E: mov %eax,%edx;");
    asm("loc_4B2B30: mov 0xC(%esp),%eax;");
    asm("loc_4B2B34: push %edi;");
    asm("loc_4B2B35: test %eax,%eax;");
    asm("loc_4B2B37: je loc_4B2B44;");
    asm("loc_4B2B39: mov $0xB,%ecx;");
    asm("loc_4B2B3E: mov %ebx,%esi;");
    asm("loc_4B2B40: mov %eax,%edi;");
    asm("loc_4B2B42: rep movsl (%esi),(%edi);");
    asm("loc_4B2B44: add $0x2C,%eax;");
    asm("loc_4B2B47: dec %edx;");
    asm("loc_4B2B48: jne loc_4B2B35;");
    asm("loc_4B2B4A: pop %edi;");
    asm("loc_4B2B4B: pop %esi;");
    asm("loc_4B2B4C: pop %ebx;");
    asm("loc_4B2B4D: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2B50() // _sub_4B2B50
{
    __DEBUG_ASM(4B2B50);
    // chunk 0x4B2B50 _sub_4B2B50
    asm("loc_4B2B50: push %edi;");
    asm("loc_4B2B51: mov 8(%esp),%edi;");
    asm("loc_4B2B55: test %edi,%edi;");
    asm("loc_4B2B57: je loc_4B2B66;");
    asm("loc_4B2B59: push %esi;");
    asm("loc_4B2B5A: mov 0x10(%esp),%esi;");
    asm("loc_4B2B5E: mov $0xB,%ecx;");
    asm("loc_4B2B63: rep movsl (%esi),(%edi);");
    asm("loc_4B2B65: pop %esi;");
    asm("loc_4B2B66: pop %edi;");
    asm("loc_4B2B67: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2B70() // _sub_4B2B70
{
    __DEBUG_ASM(4B2B70);
    // chunk 0x4B2B70 _sub_4B2B70
    asm("loc_4B2B70: mov _data_5D51A8,%eax;");
    asm("loc_4B2B75: mov %eax,_data_672244;");
    asm("loc_4B2B7A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2B80() // _sub_4B2B80
{
    __DEBUG_ASM(4B2B80);
    // chunk 0x4B2B80 _sub_4B2B80
    asm("loc_4B2B80: mov _data_5D51A8,%eax;");
    asm("loc_4B2B85: mov %eax,_data_672240;");
    asm("loc_4B2B8A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2B90() // _sub_4B2B90
{
    __DEBUG_ASM(4B2B90);
    // chunk 0x4B2B90 _sub_4B2B90
    asm("loc_4B2B90: mov _data_5D51AC,%eax;");
    asm("loc_4B2B95: mov %eax,_data_67223C;");
    asm("loc_4B2B9A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2BA0() // _sub_4B2BA0
{
    __DEBUG_ASM(4B2BA0);
    // chunk 0x4B2BA0 _sub_4B2BA0
    asm("loc_4B2BA0: push $_data_5CB6CC;");
    asm("loc_4B2BA5: mov $_data_672210,%ecx;");
    asm("loc_4B2BAA: call _sub_4B4830;");
    asm("loc_4B2BAF: push $_sub_4B2BC0;");
    asm("loc_4B2BB4: call _sub_5B7E6C;");
    asm("loc_4B2BB9: pop %ecx;");
    asm("loc_4B2BBA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2BC0() // _unknown_libname_34
{
    __DEBUG_ASM(4B2BC0);
    // chunk 0x4B2BC0 _sub_4B2BC0
    asm("loc_4B2BC0: mov $_data_672210,%ecx;");
    asm("loc_4B2BC5: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2BD0() // _sub_4B2BD0
{
    __DEBUG_ASM(4B2BD0);
    // chunk 0x4B2BD0 _sub_4B2BD0
    asm("loc_4B2BD0: push $_data_5D51B8;");
    asm("loc_4B2BD5: calll *_import_5C6020;");
    asm("loc_4B2BDB: add $4,%esp;");
    asm("loc_4B2BDE: mov %eax,_data_67220C;");
    asm("loc_4B2BE3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2BF0() // _sub_4B2BF0
{
    __DEBUG_ASM(4B2BF0);
    // chunk 0x4B2BF0 _sub_4B2BF0
    asm("loc_4B2BF0: push %esi;");
    asm("loc_4B2BF1: mov %ecx,%esi;");
    asm("loc_4B2BF3: call _sub_4B2C10;");
    asm("loc_4B2BF8: testb $1,8(%esp);");
    asm("loc_4B2BFD: je loc_4B2C08;");
    asm("loc_4B2BFF: push %esi;");
    asm("loc_4B2C00: call _sub_5B7E1D;");
    asm("loc_4B2C05: add $4,%esp;");
    asm("loc_4B2C08: mov %esi,%eax;");
    asm("loc_4B2C0A: pop %esi;");
    asm("loc_4B2C0B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2C10() // _sub_4B2C10
{
    __DEBUG_ASM(4B2C10);
    // chunk 0x4B2C10 _sub_4B2C10
    asm("loc_4B2C10: push $0xFFFFFFFF;");
    asm("loc_4B2C12: push $_sub_5BD038;");
    asm("loc_4B2C17: mov %fs:0,%eax;");
    asm("loc_4B2C1D: push %eax;");
    asm("loc_4B2C1E: mov %esp,%fs:0;");
    asm("loc_4B2C25: push %ecx;");
    asm("loc_4B2C26: push %esi;");
    asm("loc_4B2C27: mov %ecx,%esi;");
    asm("loc_4B2C29: push %edi;");
    asm("loc_4B2C2A: mov %esi,8(%esp);");
    asm("loc_4B2C2E: mov 0x334(%esi),%eax;");
    asm("loc_4B2C34: xor %edi,%edi;");
    asm("loc_4B2C36: push %eax;");
    asm("loc_4B2C37: mov %edi,0x18(%esp);");
    asm("loc_4B2C3B: call _sub_5B7E1D;");
    asm("loc_4B2C40: add $4,%esp;");
    asm("loc_4B2C43: cmp %edi,%esi;");
    asm("loc_4B2C45: mov %edi,0x334(%esi);");
    asm("loc_4B2C4B: mov %edi,0x338(%esi);");
    asm("loc_4B2C51: mov %edi,0x33C(%esi);");
    asm("loc_4B2C57: je loc_4B2C61;");
    asm("loc_4B2C59: lea 0x32C(%esi),%ecx;");
    asm("loc_4B2C5F: jmp loc_4B2C63;");
    asm("loc_4B2C61: xor %ecx,%ecx;");
    asm("loc_4B2C63: call _sub_576010;");
    asm("loc_4B2C68: mov %esi,%ecx;");
    asm("loc_4B2C6A: movl $0xFFFFFFFF,0x14(%esp);");
    asm("loc_4B2C72: call _sub_59FA50;");
    asm("loc_4B2C77: mov 0xC(%esp),%ecx;");
    asm("loc_4B2C7B: pop %edi;");
    asm("loc_4B2C7C: pop %esi;");
    asm("loc_4B2C7D: mov %ecx,%fs:0;");
    asm("loc_4B2C84: add $0x10,%esp;");
    asm("loc_4B2C87: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B2C90() // _sub_4B2C90
{
    __DEBUG_ASM(4B2C90);
    // chunk 0x4B2C90 _sub_4B2C90
    asm("loc_4B2C90: sub $0x2BC,%esp;");
    asm("loc_4B2C96: push %ebx;");
    asm("loc_4B2C97: push %ebp;");
    asm("loc_4B2C98: push %esi;");
    asm("loc_4B2C99: push %edi;");
    asm("loc_4B2C9A: mov %ecx,%esi;");
    asm("loc_4B2C9C: mov (%esi),%eax;");
    asm("loc_4B2C9E: push $0;");
    asm("loc_4B2CA0: push $_data_5CB748;");
    asm("loc_4B2CA5: calll *0x98(%eax);");
    asm("loc_4B2CAB: lea 0x80(%esi),%ecx;");
    asm("loc_4B2CB1: push %ecx;");
    asm("loc_4B2CB2: lea 0xB4(%esi),%ecx;");
    asm("loc_4B2CB8: call _sub_5A1340;");
    asm("loc_4B2CBD: push $0;");
    asm("loc_4B2CBF: push $0;");
    asm("loc_4B2CC1: push $0x438;");
    asm("loc_4B2CC6: push $0;");
    asm("loc_4B2CC8: push $0;");
    asm("loc_4B2CCA: lea 0x44(%esp),%edx;");
    asm("loc_4B2CCE: push %edx;");
    asm("loc_4B2CCF: lea 0x3C(%esp),%eax;");
    asm("loc_4B2CD3: push %eax;");
    asm("loc_4B2CD4: push $_data_5D2AE0;");
    asm("loc_4B2CD9: push $_data_5D5420;");
    asm("loc_4B2CDE: mov %esi,%ecx;");
    asm("loc_4B2CE0: movl $0x3E083127,0x54(%esp);");
    asm("loc_4B2CE8: movl $0x3CD4FDF4,0x58(%esp);");
    asm("loc_4B2CF0: movl $0,0x5C(%esp);");
    asm("loc_4B2CF8: movl $0,0x48(%esp);");
    asm("loc_4B2D00: movl $0xBE50E560,0x4C(%esp);");
    asm("loc_4B2D08: movl $0,0x50(%esp);");
    asm("loc_4B2D10: call _sub_5A0D00;");
    asm("loc_4B2D15: push $0;");
    asm("loc_4B2D17: push $1;");
    asm("loc_4B2D19: mov %eax,0x344(%esi);");
    asm("loc_4B2D1F: mov (%eax),%edx;");
    asm("loc_4B2D21: push $1;");
    asm("loc_4B2D23: mov %eax,%ecx;");
    asm("loc_4B2D25: calll *0xA8(%edx);");
    asm("loc_4B2D2B: push $0;");
    asm("loc_4B2D2D: push $0;");
    asm("loc_4B2D2F: push $1;");
    asm("loc_4B2D31: push $0x427;");
    asm("loc_4B2D36: push $0x3FC00000;");
    asm("loc_4B2D3B: push $0x3D75C28F;");
    asm("loc_4B2D40: push $0x3E87AE14;");
    asm("loc_4B2D45: push $0;");
    asm("loc_4B2D47: lea 0x44(%esp),%eax;");
    asm("loc_4B2D4B: push %eax;");
    asm("loc_4B2D4C: push $_data_5D0410;");
    asm("loc_4B2D51: push $_data_5D5414;");
    asm("loc_4B2D56: mov %esi,%ecx;");
    asm("loc_4B2D58: movl $0,0x50(%esp);");
    asm("loc_4B2D60: movl $0xBE5D2F1B,0x54(%esp);");
    asm("loc_4B2D68: movl $0,0x58(%esp);");
    asm("loc_4B2D70: call _sub_5A0E30;");
    asm("loc_4B2D75: push $0;");
    asm("loc_4B2D77: push $1;");
    asm("loc_4B2D79: mov %eax,0x478(%esi);");
    asm("loc_4B2D7F: mov (%eax),%edx;");
    asm("loc_4B2D81: push $1;");
    asm("loc_4B2D83: mov %eax,%ecx;");
    asm("loc_4B2D85: calll *0xA8(%edx);");
    asm("loc_4B2D8B: push $0;");
    asm("loc_4B2D8D: push $0;");
    asm("loc_4B2D8F: push $0x2148;");
    asm("loc_4B2D94: push $0;");
    asm("loc_4B2D96: push $0;");
    asm("loc_4B2D98: push $0;");
    asm("loc_4B2D9A: push $0;");
    asm("loc_4B2D9C: lea 0x40(%esp),%eax;");
    asm("loc_4B2DA0: push %eax;");
    asm("loc_4B2DA1: push $0;");
    asm("loc_4B2DA3: lea 0x54(%esp),%ecx;");
    asm("loc_4B2DA7: movl $0x3CA3D70A,0x48(%esp);");
    asm("loc_4B2DAF: movl $0x3CA3D70A,0x4C(%esp);");
    asm("loc_4B2DB7: movl $0,0x50(%esp);");
    asm("loc_4B2DBF: movl $0x3E6147AE,0x54(%esp);");
    asm("loc_4B2DC7: movl $0x3E6C8B44,0x58(%esp);");
    asm("loc_4B2DCF: movl $0,0x5C(%esp);");
    asm("loc_4B2DD7: push %ecx;");
    asm("loc_4B2DD8: push $0;");
    asm("loc_4B2DDA: push $_data_5CED30;");
    asm("loc_4B2DDF: push $0;");
    asm("loc_4B2DE1: push $_data_5CF1F4;");
    asm("loc_4B2DE6: push $_data_5D5400;");
    asm("loc_4B2DEB: mov %esi,%ecx;");
    asm("loc_4B2DED: call _sub_5A0C90;");
    asm("loc_4B2DF2: mov _import_5C71EC,%ebx;");
    asm("loc_4B2DF8: xor %edi,%edi;");
    asm("loc_4B2DFA: mov %eax,0x348(%esi);");
    asm("loc_4B2E00: mov %edi,0x1C(%esp);");
    asm("loc_4B2E04: lea 0x370(%esi),%ebp;");
    asm("loc_4B2E0A: lea (%ebx),%ebx;");
    asm("loc_4B2E10: push %edi;");
    asm("loc_4B2E11: lea 0xD0(%esp),%edx;");
    asm("loc_4B2E18: push $_data_5D53EC;");
    asm("loc_4B2E1D: push %edx;");
    asm("loc_4B2E1E: call *%ebx;");
    asm("loc_4B2E20: fildl 0x28(%esp);");
    asm("loc_4B2E24: add $0xC,%esp;");
    asm("loc_4B2E27: push $0;");
    asm("loc_4B2E29: fmuls _data_5D53E8;");
    asm("loc_4B2E2F: push $0x43A;");
    asm("loc_4B2E34: push $0;");
    asm("loc_4B2E36: push $1;");
    asm("loc_4B2E38: push $0;");
    asm("loc_4B2E3A: fstps 0x30(%esp);");
    asm("loc_4B2E3E: flds _data_5D53E4;");
    asm("loc_4B2E44: push $0;");
    asm("loc_4B2E46: fsubs 0x34(%esp);");
    asm("loc_4B2E4A: lea 0x3C(%esp),%eax;");
    asm("loc_4B2E4E: push %eax;");
    asm("loc_4B2E4F: push $0;");
    asm("loc_4B2E51: lea 0x50(%esp),%ecx;");
    asm("loc_4B2E55: fsts 0x40(%esp);");
    asm("loc_4B2E59: push %ecx;");
    asm("loc_4B2E5A: fstps 0x58(%esp);");
    asm("loc_4B2E5E: push $0;");
    asm("loc_4B2E60: push $_data_5CED30;");
    asm("loc_4B2E65: push $_data_5CB0D0;");
    asm("loc_4B2E6A: push $_data_5D4E20;");
    asm("loc_4B2E6F: lea 0x100(%esp),%edx;");
    asm("loc_4B2E76: push %edx;");
    asm("loc_4B2E77: mov %esi,%ecx;");
    asm("loc_4B2E79: movl $0x3C656042,0x5C(%esp);");
    asm("loc_4B2E81: movl $0x3C656042,0x60(%esp);");
    asm("loc_4B2E89: movl $0,0x64(%esp);");
    asm("loc_4B2E91: movl $0xBE5C28F6,0x68(%esp);");
    asm("loc_4B2E99: movl $0,0x70(%esp);");
    asm("loc_4B2EA1: call _sub_5A0FB0;");
    asm("loc_4B2EA6: push %edi;");
    asm("loc_4B2EA7: mov %eax,-0x24(%ebp);");
    asm("loc_4B2EAA: lea 0xD0(%esp),%eax;");
    asm("loc_4B2EB1: push $_data_5D53CC;");
    asm("loc_4B2EB6: push %eax;");
    asm("loc_4B2EB7: call *%ebx;");
    asm("loc_4B2EB9: mov 0x2C(%esp),%ecx;");
    asm("loc_4B2EBD: add $0xC,%esp;");
    asm("loc_4B2EC0: push $0;");
    asm("loc_4B2EC2: push $0;");
    asm("loc_4B2EC4: push $0;");
    asm("loc_4B2EC6: push $0;");
    asm("loc_4B2EC8: push $0;");
    asm("loc_4B2ECA: lea 0xD4(%esp),%edx;");
    asm("loc_4B2ED1: push %edx;");
    asm("loc_4B2ED2: lea 0xB4(%esp),%eax;");
    asm("loc_4B2ED9: push %eax;");
    asm("loc_4B2EDA: mov %ecx,0xBC(%esp);");
    asm("loc_4B2EE1: push $_data_5CED30;");
    asm("loc_4B2EE6: lea 0xEC(%esp),%ecx;");
    asm("loc_4B2EED: push %ecx;");
    asm("loc_4B2EEE: mov %esi,%ecx;");
    asm("loc_4B2EF0: movl $0x3C656042,0xE4(%esp);");
    asm("loc_4B2EFB: movl $0x3C656042,0xE8(%esp);");
    asm("loc_4B2F06: movl $0,0xEC(%esp);");
    asm("loc_4B2F11: movl $0xBE5C28F6,0xC0(%esp);");
    asm("loc_4B2F1C: movl $0,0xC8(%esp);");
    asm("loc_4B2F27: call _sub_5A0D00;");
    asm("loc_4B2F2C: push %edi;");
    asm("loc_4B2F2D: lea 0xD0(%esp),%edx;");
    asm("loc_4B2F34: push $_data_5D53B8;");
    asm("loc_4B2F39: push %edx;");
    asm("loc_4B2F3A: mov %eax,(%ebp);");
    asm("loc_4B2F3D: call *%ebx;");
    asm("loc_4B2F3F: flds _data_5D53B4;");
    asm("loc_4B2F45: fsubs 0x28(%esp);");
    asm("loc_4B2F49: add $0xC,%esp;");
    asm("loc_4B2F4C: movl $0x3C656042,0xB4(%esp);");
    asm("loc_4B2F57: movl $0x3C656042,0xB8(%esp);");
    asm("loc_4B2F62: fsts 0x20(%esp);");
    asm("loc_4B2F66: movl $0,0xBC(%esp);");
    asm("loc_4B2F71: fstps 0x64(%esp);");
    asm("loc_4B2F75: movl $0xBE343958,0x60(%esp);");
    asm("loc_4B2F7D: movl $0,0x68(%esp);");
    asm("loc_4B2F85: push $0;");
    asm("loc_4B2F87: push $0;");
    asm("loc_4B2F89: push $0;");
    asm("loc_4B2F8B: push $0;");
    asm("loc_4B2F8D: push $0;");
    asm("loc_4B2F8F: lea 0xC8(%esp),%eax;");
    asm("loc_4B2F96: push %eax;");
    asm("loc_4B2F97: lea 0x78(%esp),%ecx;");
    asm("loc_4B2F9B: push %ecx;");
    asm("loc_4B2F9C: push $_data_5CED30;");
    asm("loc_4B2FA1: lea 0xEC(%esp),%edx;");
    asm("loc_4B2FA8: push %edx;");
    asm("loc_4B2FA9: mov %esi,%ecx;");
    asm("loc_4B2FAB: call _sub_5A0D00;");
    asm("loc_4B2FB0: push %edi;");
    asm("loc_4B2FB1: mov %eax,0x24(%ebp);");
    asm("loc_4B2FB4: lea 0xD0(%esp),%eax;");
    asm("loc_4B2FBB: push $_data_5D53A0;");
    asm("loc_4B2FC0: push %eax;");
    asm("loc_4B2FC1: call *%ebx;");
    asm("loc_4B2FC3: add $0xC,%esp;");
    asm("loc_4B2FC6: mov 0x20(%esp),%ecx;");
    asm("loc_4B2FCA: lea 0x48(%esp),%edx;");
    asm("loc_4B2FCE: push %edx;");
    asm("loc_4B2FCF: push $0;");
    asm("loc_4B2FD1: push $0;");
    asm("loc_4B2FD3: push $0x6E;");
    asm("loc_4B2FD5: push $1;");
    asm("loc_4B2FD7: push $1;");
    asm("loc_4B2FD9: push $0;");
    asm("loc_4B2FDB: push $1;");
    asm("loc_4B2FDD: push $0;");
    asm("loc_4B2FDF: push $0;");
    asm("loc_4B2FE1: push $0;");
    asm("loc_4B2FE3: lea 0xA4(%esp),%eax;");
    asm("loc_4B2FEA: push %eax;");
    asm("loc_4B2FEB: mov %ecx,0xDC(%esp);");
    asm("loc_4B2FF2: push $0;");
    asm("loc_4B2FF4: lea 0xDC(%esp),%ecx;");
    asm("loc_4B2FFB: push %ecx;");
    asm("loc_4B2FFC: push $_data_5CB0D0;");
    asm("loc_4B3001: lea 0x108(%esp),%edx;");
    asm("loc_4B3008: push %edx;");
    asm("loc_4B3009: mov %esi,%ecx;");
    asm("loc_4B300B: movl $0,0x88(%esp);");
    asm("loc_4B3016: movl $0,0x8C(%esp);");
    asm("loc_4B3021: movl $0,0x90(%esp);");
    asm("loc_4B302C: movl $0x3C656042,0xB8(%esp);");
    asm("loc_4B3037: movl $0x3C656042,0xBC(%esp);");
    asm("loc_4B3042: movl $0,0xC0(%esp);");
    asm("loc_4B304D: movl $0xBE343958,0xE8(%esp);");
    asm("loc_4B3058: movl $0xBF8CCCCD,0xF0(%esp);");
    asm("loc_4B3063: call _sub_5A0DB0;");
    asm("loc_4B3068: mov %eax,0x48(%ebp);");
    asm("loc_4B306B: mov 0x6C(%eax),%cl;");
    asm("loc_4B306E: and $0xF7,%cl;");
    asm("loc_4B3071: push %edi;");
    asm("loc_4B3072: mov %cl,0x6C(%eax);");
    asm("loc_4B3075: lea 0xD0(%esp),%eax;");
    asm("loc_4B307C: push $_data_5D538C;");
    asm("loc_4B3081: push %eax;");
    asm("loc_4B3082: call *%ebx;");
    asm("loc_4B3084: flds _data_5D53B4;");
    asm("loc_4B308A: fsubs 0x28(%esp);");
    asm("loc_4B308E: add $0xC,%esp;");
    asm("loc_4B3091: push $0;");
    asm("loc_4B3093: push $0;");
    asm("loc_4B3095: push $0;");
    asm("loc_4B3097: fstps 0x64(%esp);");
    asm("loc_4B309B: push $0;");
    asm("loc_4B309D: push $0;");
    asm("loc_4B309F: lea 0xA4(%esp),%ecx;");
    asm("loc_4B30A6: push %ecx;");
    asm("loc_4B30A7: lea 0x6C(%esp),%edx;");
    asm("loc_4B30AB: push %edx;");
    asm("loc_4B30AC: movl $0x3E2F1AA0,0xAC(%esp);");
    asm("loc_4B30B7: movl $0x3C656042,0xB0(%esp);");
    asm("loc_4B30C2: movl $0,0xB4(%esp);");
    asm("loc_4B30CD: movl $0x3CA3D70A,0x70(%esp);");
    asm("loc_4B30D5: movl $0,0x78(%esp);");
    asm("loc_4B30DD: push $_data_5CED30;");
    asm("loc_4B30E2: lea 0xEC(%esp),%eax;");
    asm("loc_4B30E9: push %eax;");
    asm("loc_4B30EA: mov %esi,%ecx;");
    asm("loc_4B30EC: call _sub_5A0D00;");
    asm("loc_4B30F1: push %edi;");
    asm("loc_4B30F2: lea 0xD0(%esp),%ecx;");
    asm("loc_4B30F9: push $_data_5D5378;");
    asm("loc_4B30FE: push %ecx;");
    asm("loc_4B30FF: mov %eax,0x6C(%ebp);");
    asm("loc_4B3102: call *%ebx;");
    asm("loc_4B3104: flds 0x28(%esp);");
    asm("loc_4B3108: fsubrl _data_5D5370;");
    asm("loc_4B310E: add $0xC,%esp;");
    asm("loc_4B3111: push $0;");
    asm("loc_4B3113: push $0;");
    asm("loc_4B3115: push $0;");
    asm("loc_4B3117: fsts 0x2C(%esp);");
    asm("loc_4B311B: push $0x3F6;");
    asm("loc_4B3120: fstps 0x80(%esp);");
    asm("loc_4B3127: push $0x3F99999A;");
    asm("loc_4B312C: push $0x3CF5C28F;");
    asm("loc_4B3131: push $0x3E8A3D71;");
    asm("loc_4B3136: push $0;");
    asm("loc_4B3138: lea 0x8C(%esp),%edx;");
    asm("loc_4B313F: push %edx;");
    asm("loc_4B3140: push $_data_5D010C;");
    asm("loc_4B3145: lea 0xF4(%esp),%eax;");
    asm("loc_4B314C: push %eax;");
    asm("loc_4B314D: mov %esi,%ecx;");
    asm("loc_4B314F: movl $0xBC23D70A,0x98(%esp);");
    asm("loc_4B315A: movl $0,0xA0(%esp);");
    asm("loc_4B3165: call _sub_5A0E30;");
    asm("loc_4B316A: push %edi;");
    asm("loc_4B316B: lea 0xD0(%esp),%ecx;");
    asm("loc_4B3172: push $_data_5D5358;");
    asm("loc_4B3177: push %ecx;");
    asm("loc_4B3178: mov %eax,0x90(%ebp);");
    asm("loc_4B317E: call *%ebx;");
    asm("loc_4B3180: add $0xC,%esp;");
    asm("loc_4B3183: mov 0x20(%esp),%edx;");
    asm("loc_4B3187: push $0;");
    asm("loc_4B3189: push $0;");
    asm("loc_4B318B: push $2;");
    asm("loc_4B318D: push $0x40E;");
    asm("loc_4B3192: push $0x3F99999A;");
    asm("loc_4B3197: push $0x3CF5C28F;");
    asm("loc_4B319C: push $0x3DD70A3D;");
    asm("loc_4B31A1: push $0;");
    asm("loc_4B31A3: lea 0xA4(%esp),%eax;");
    asm("loc_4B31AA: push %eax;");
    asm("loc_4B31AB: push $_data_5D010C;");
    asm("loc_4B31B0: lea 0xF4(%esp),%ecx;");
    asm("loc_4B31B7: push %ecx;");
    asm("loc_4B31B8: mov %esi,%ecx;");
    asm("loc_4B31BA: movl $0x3E0B4396,0xB0(%esp);");
    asm("loc_4B31C5: mov %edx,0xB4(%esp);");
    asm("loc_4B31CC: movl $0,0xB8(%esp);");
    asm("loc_4B31D7: call _sub_5A0E30;");
    asm("loc_4B31DC: push %edi;");
    asm("loc_4B31DD: lea 0xD0(%esp),%edx;");
    asm("loc_4B31E4: push $_data_5D5344;");
    asm("loc_4B31E9: push %edx;");
    asm("loc_4B31EA: mov %eax,0xB4(%ebp);");
    asm("loc_4B31F0: call *%ebx;");
    asm("loc_4B31F2: flds _data_5D0434;");
    asm("loc_4B31F8: mov _data_679BAC,%eax;");
    asm("loc_4B31FD: fsubs 0x28(%esp);");
    asm("loc_4B3201: add $0xC,%esp;");
    asm("loc_4B3204: push %eax;");
    asm("loc_4B3205: push %eax;");
    asm("loc_4B3206: fstps 0x1C(%esp);");
    asm("loc_4B320A: push $0x43C;");
    asm("loc_4B320F: push $1;");
    asm("loc_4B3211: lea 0x4C(%esp),%eax;");
    asm("loc_4B3215: push %eax;");
    asm("loc_4B3216: movl $0x3C656042,0x50(%esp);");
    asm("loc_4B321E: movl $0x3B03126F,0x54(%esp);");
    asm("loc_4B3226: movl $0,0x58(%esp);");
    asm("loc_4B322E: movl $0xBE343958,0x24(%esp);");
    asm("loc_4B3236: movl $0x3A83126F,0x2C(%esp);");
    asm("loc_4B323E: push $0;");
    asm("loc_4B3240: lea 0x28(%esp),%ecx;");
    asm("loc_4B3244: push %ecx;");
    asm("loc_4B3245: push $_data_5C865C;");
    asm("loc_4B324A: lea 0xEC(%esp),%edx;");
    asm("loc_4B3251: push %edx;");
    asm("loc_4B3252: mov %esi,%ecx;");
    asm("loc_4B3254: call _sub_5A1080;");
    asm("loc_4B3259: push $0;");
    asm("loc_4B325B: push $0x10000;");
    asm("loc_4B3260: mov %eax,0xD8(%ebp);");
    asm("loc_4B3266: mov (%eax),%edx;");
    asm("loc_4B3268: push $0x19;");
    asm("loc_4B326A: mov %eax,%ecx;");
    asm("loc_4B326C: calll *0xA8(%edx);");
    asm("loc_4B3272: inc %edi;");
    asm("loc_4B3273: add $4,%ebp;");
    asm("loc_4B3276: cmp $9,%edi;");
    asm("loc_4B3279: mov %edi,0x1C(%esp);");
    asm("loc_4B327D: jl loc_4B2E10;");
    asm("loc_4B3283: push $0;");
    asm("loc_4B3285: push $9;");
    asm("loc_4B3287: push $5;");
    asm("loc_4B3289: push $0;");
    asm("loc_4B328B: push $0x3E6B851F;");
    asm("loc_4B3290: push $0x3C9374BC;");
    asm("loc_4B3295: lea 0x28(%esp),%eax;");
    asm("loc_4B3299: push %eax;");
    asm("loc_4B329A: push $_data_5D5334;");
    asm("loc_4B329F: mov %esi,%ecx;");
    asm("loc_4B32A1: movl $0x3E428F5C,0x30(%esp);");
    asm("loc_4B32A9: movl $0x3E0F5C29,0x34(%esp);");
    asm("loc_4B32B1: movl $0xBF800000,0x38(%esp);");
    asm("loc_4B32B9: call _sub_5A17E0;");
    asm("loc_4B32BE: push $0;");
    asm("loc_4B32C0: push $0;");
    asm("loc_4B32C2: push $1;");
    asm("loc_4B32C4: push $0x4A8;");
    asm("loc_4B32C9: push $0x3FD9999A;");
    asm("loc_4B32CE: push $0x3CF5C28F;");
    asm("loc_4B32D3: push $0x3EF74BC7;");
    asm("loc_4B32D8: push $0;");
    asm("loc_4B32DA: lea 0x30(%esp),%ecx;");
    asm("loc_4B32DE: push %ecx;");
    asm("loc_4B32DF: push $_data_5CE91C;");
    asm("loc_4B32E4: push $_data_5D5328;");
    asm("loc_4B32E9: mov %esi,%ecx;");
    asm("loc_4B32EB: mov %eax,0x46C(%esi);");
    asm("loc_4B32F1: movl $0x3C23D70A,0x3C(%esp);");
    asm("loc_4B32F9: movl $0x3E6E978D,0x40(%esp);");
    asm("loc_4B3301: movl $0,0x44(%esp);");
    asm("loc_4B3309: call _sub_5A0E30;");
    asm("loc_4B330E: push $0;");
    asm("loc_4B3310: push $0;");
    asm("loc_4B3312: push $0x439;");
    asm("loc_4B3317: push $0;");
    asm("loc_4B3319: push $0;");
    asm("loc_4B331B: push $0;");
    asm("loc_4B331D: push $0;");
    asm("loc_4B331F: lea 0x2C(%esp),%edx;");
    asm("loc_4B3323: push %edx;");
    asm("loc_4B3324: push $0;");
    asm("loc_4B3326: lea 0x60(%esp),%eax;");
    asm("loc_4B332A: push %eax;");
    asm("loc_4B332B: push $0;");
    asm("loc_4B332D: push $_data_5CED30;");
    asm("loc_4B3332: push $0;");
    asm("loc_4B3334: push $_data_5D52F8;");
    asm("loc_4B3339: push $_data_5D52E4;");
    asm("loc_4B333E: mov %esi,%ecx;");
    asm("loc_4B3340: movl $0x3CA3D70A,0x4C(%esp);");
    asm("loc_4B3348: movl $0x3CA3D70A,0x50(%esp);");
    asm("loc_4B3350: movl $0,0x54(%esp);");
    asm("loc_4B3358: movl $0xBE5C28F6,0x78(%esp);");
    asm("loc_4B3360: movl $0xBE051EB8,0x7C(%esp);");
    asm("loc_4B3368: movl $0,0x80(%esp);");
    asm("loc_4B3373: call _sub_5A0C90;");
    asm("loc_4B3378: push $0;");
    asm("loc_4B337A: push $0;");
    asm("loc_4B337C: push $1;");
    asm("loc_4B337E: push $0;");
    asm("loc_4B3380: push $0x3FB33333;");
    asm("loc_4B3385: push $0x3CF5C28F;");
    asm("loc_4B338A: push $0x3EF9DB23;");
    asm("loc_4B338F: push $0;");
    asm("loc_4B3391: lea 0x30(%esp),%ecx;");
    asm("loc_4B3395: push %ecx;");
    asm("loc_4B3396: push $_data_5D0608;");
    asm("loc_4B339B: push $_data_5D52D0;");
    asm("loc_4B33A0: mov %esi,%ecx;");
    asm("loc_4B33A2: mov %eax,0x470(%esi);");
    asm("loc_4B33A8: movl $0x3BA3D70A,0x3C(%esp);");
    asm("loc_4B33B0: movl $0x3E449BA6,0x40(%esp);");
    asm("loc_4B33B8: movl $0,0x44(%esp);");
    asm("loc_4B33C0: call _sub_5A0E30;");
    asm("loc_4B33C5: push $0;");
    asm("loc_4B33C7: mov %eax,0x47C(%esi);");
    asm("loc_4B33CD: movl $0xBD89374C,0x14(%esp);");
    asm("loc_4B33D5: movl $0xBE051EB8,0x18(%esp);");
    asm("loc_4B33DD: movl $0,0x1C(%esp);");
    asm("loc_4B33E5: push $0;");
    asm("loc_4B33E7: push $0;");
    asm("loc_4B33E9: push $0x4A9;");
    asm("loc_4B33EE: push $0x3F99999A;");
    asm("loc_4B33F3: push $0x3CF5C28F;");
    asm("loc_4B33F8: push $0x3E19999A;");
    asm("loc_4B33FD: push $0;");
    asm("loc_4B33FF: lea 0x30(%esp),%edx;");
    asm("loc_4B3403: push %edx;");
    asm("loc_4B3404: push $_data_5D0608;");
    asm("loc_4B3409: push $_data_5D52BC;");
    asm("loc_4B340E: mov %esi,%ecx;");
    asm("loc_4B3410: call _sub_5A0E30;");
    asm("loc_4B3415: push $0;");
    asm("loc_4B3417: push $0;");
    asm("loc_4B3419: push $2;");
    asm("loc_4B341B: push $0;");
    asm("loc_4B341D: push $0x3F99999A;");
    asm("loc_4B3422: push $0x3CF5C28F;");
    asm("loc_4B3427: push $0x3E19999A;");
    asm("loc_4B342C: push $0;");
    asm("loc_4B342E: lea 0x30(%esp),%eax;");
    asm("loc_4B3432: push %eax;");
    asm("loc_4B3433: push $_data_5D0608;");
    asm("loc_4B3438: push $_data_5D52AC;");
    asm("loc_4B343D: mov %esi,%ecx;");
    asm("loc_4B343F: movl $0x3DF5C28F,0x3C(%esp);");
    asm("loc_4B3447: movl $0xBE051EB8,0x40(%esp);");
    asm("loc_4B344F: movl $0,0x44(%esp);");
    asm("loc_4B3457: call _sub_5A0E30;");
    asm("loc_4B345C: push $0;");
    asm("loc_4B345E: push $0;");
    asm("loc_4B3460: push $1;");
    asm("loc_4B3462: push $0x4AA;");
    asm("loc_4B3467: push $0x3F99999A;");
    asm("loc_4B346C: push $0x3CF5C28F;");
    asm("loc_4B3471: push $0x3EF9DB23;");
    asm("loc_4B3476: push $0;");
    asm("loc_4B3478: lea 0x30(%esp),%ecx;");
    asm("loc_4B347C: push %ecx;");
    asm("loc_4B347D: push $_data_5D0608;");
    asm("loc_4B3482: push $_data_5D5298;");
    asm("loc_4B3487: mov %esi,%ecx;");
    asm("loc_4B3489: mov %eax,0x474(%esi);");
    asm("loc_4B348F: movl $0x3BA3D70A,0x3C(%esp);");
    asm("loc_4B3497: movl $0xBE47AE14,0x40(%esp);");
    asm("loc_4B349F: movl $0,0x44(%esp);");
    asm("loc_4B34A7: call _sub_5A0E30;");
    asm("loc_4B34AC: push $0;");
    asm("loc_4B34AE: push $1;");
    asm("loc_4B34B0: mov %eax,0x480(%esi);");
    asm("loc_4B34B6: mov (%eax),%edx;");
    asm("loc_4B34B8: push $1;");
    asm("loc_4B34BA: mov %eax,%ecx;");
    asm("loc_4B34BC: calll *0xA8(%edx);");
    asm("loc_4B34C2: push $0x476;");
    asm("loc_4B34C7: call _sub_4C4CE0;");
    asm("loc_4B34CC: push %eax;");
    asm("loc_4B34CD: lea 0xD4(%esp),%eax;");
    asm("loc_4B34D4: push %eax;");
    asm("loc_4B34D5: call _sub_4779A0;");
    asm("loc_4B34DA: mov 0x47C(%esi),%ecx;");
    asm("loc_4B34E0: mov (%ecx),%edx;");
    asm("loc_4B34E2: add $0xC,%esp;");
    asm("loc_4B34E5: push $0;");
    asm("loc_4B34E7: lea 0xD0(%esp),%eax;");
    asm("loc_4B34EE: push %eax;");
    asm("loc_4B34EF: push $0x1D;");
    asm("loc_4B34F1: calll *0xA8(%edx);");
    asm("loc_4B34F7: push $0;");
    asm("loc_4B34F9: lea 0x32C(%esi),%ecx;");
    asm("loc_4B34FF: call _sub_576360;");
    asm("loc_4B3504: mov 0x2D4(%esp),%ecx;");
    asm("loc_4B350B: mov 0x2D0(%esp),%edx;");
    asm("loc_4B3512: push %ecx;");
    asm("loc_4B3513: push %edx;");
    asm("loc_4B3514: mov %esi,%ecx;");
    asm("loc_4B3516: call _sub_4B5060;");
    asm("loc_4B351B: test %al,%al;");
    asm("loc_4B351D: pop %edi;");
    asm("loc_4B351E: setne %al;");
    asm("loc_4B3521: pop %esi;");
    asm("loc_4B3522: pop %ebp;");
    asm("loc_4B3523: pop %ebx;");
    asm("loc_4B3524: add $0x2BC,%esp;");
    asm("loc_4B352A: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B3530() // _sub_4B3530
{
    asm("jmp dgb_4B3530;"); // jumptable skip
    asm(".long _jmp_4B3960;"); // jumptable address
    __DEBUG_ASM(4B3530);
    // chunk 0x4B3530 _sub_4B3530
    asm("loc_4B3530: sub $0x204,%esp;");
    asm("loc_4B3536: push %ebx;");
    asm("loc_4B3537: push %ebp;");
    asm("loc_4B3538: mov 0x210(%esp),%ebp;");
    asm("loc_4B353F: push %esi;");
    asm("loc_4B3540: lea -0x26(%ebp),%eax;");
    asm("loc_4B3543: cmp $0x28,%eax;");
    asm("loc_4B3546: push %edi;");
    asm("loc_4B3547: mov %ecx,%esi;");
    asm("loc_4B3549: ja loc_4B394E;");
    asm("loc_4B354F: movzbl _data_4B397C(%eax),%eax;");
    asm("loc_4B3556: jmpl *_jmp_4B3960(,%eax,4);");
    asm("loc_4B355D: mov 0x21C(%esp),%ebx;");
    asm("loc_4B3564: xor %edi,%edi;");
    asm("loc_4B3566: lea 0x394(%esi),%eax;");
    asm("loc_4B356C: lea (%esp),%esp;");
    asm("loc_4B3570: cmp -0x24(%eax),%ebx;");
    asm("loc_4B3573: je loc_4B359B;");
    asm("loc_4B3575: cmp (%eax),%ebx;");
    asm("loc_4B3577: je loc_4B359B;");
    asm("loc_4B3579: cmp 0x48(%eax),%ebx;");
    asm("loc_4B357C: je loc_4B359B;");
    asm("loc_4B357E: cmp -0x48(%eax),%ebx;");
    asm("loc_4B3581: je loc_4B359B;");
    asm("loc_4B3583: inc %edi;");
    asm("loc_4B3584: add $4,%eax;");
    asm("loc_4B3587: cmp $9,%edi;");
    asm("loc_4B358A: jl loc_4B3570;");
    asm("loc_4B358C: xor %eax,%eax;");
    asm("loc_4B358E: pop %edi;");
    asm("loc_4B358F: pop %esi;");
    asm("loc_4B3590: pop %ebp;");
    asm("loc_4B3591: pop %ebx;");
    asm("loc_4B3592: add $0x204,%esp;");
    asm("loc_4B3598: ret $0xC;");
    asm("loc_4B359B: cmp $0x2C,%ebp;");
    asm("loc_4B359E: jne loc_4B35A8;");
    asm("loc_4B35A0: mov %edi,0x484(%esi);");
    asm("loc_4B35A6: jmp loc_4B35BA;");
    asm("loc_4B35A8: cmp %edi,0x484(%esi);");
    asm("loc_4B35AE: jne loc_4B35BA;");
    asm("loc_4B35B0: movl $0xFFFFFFFF,0x484(%esi);");
    asm("loc_4B35BA: mov 0x370(%esi,%edi,4),%ecx;");
    asm("loc_4B35C1: cmp %ecx,%ebx;");
    asm("loc_4B35C3: je loc_4B35D2;");
    asm("loc_4B35C5: mov (%ecx),%edx;");
    asm("loc_4B35C7: push $0;");
    asm("loc_4B35C9: push $0;");
    asm("loc_4B35CB: push %ebp;");
    asm("loc_4B35CC: calll *0xA8(%edx);");
    asm("loc_4B35D2: mov 0x34C(%esi,%edi,4),%ecx;");
    asm("loc_4B35D9: cmp %ecx,%ebx;");
    asm("loc_4B35DB: je loc_4B35EA;");
    asm("loc_4B35DD: mov (%ecx),%eax;");
    asm("loc_4B35DF: push $0;");
    asm("loc_4B35E1: push $0;");
    asm("loc_4B35E3: push %ebp;");
    asm("loc_4B35E4: calll *0xA8(%eax);");
    asm("loc_4B35EA: mov 0x394(%esi,%edi,4),%ecx;");
    asm("loc_4B35F1: cmp %ecx,%ebx;");
    asm("loc_4B35F3: je loc_4B3602;");
    asm("loc_4B35F5: mov (%ecx),%edx;");
    asm("loc_4B35F7: push $0;");
    asm("loc_4B35F9: push $0;");
    asm("loc_4B35FB: push %ebp;");
    asm("loc_4B35FC: calll *0xA8(%edx);");
    asm("loc_4B3602: mov 0x3DC(%esi,%edi,4),%esi;");
    asm("loc_4B3609: cmp %esi,%ebx;");
    asm("loc_4B360B: je loc_4B394E;");
    asm("loc_4B3611: push $0;");
    asm("loc_4B3613: push $0;");
    asm("loc_4B3615: push %ebp;");
    asm("loc_4B3616: jmp loc_4B3944;");
    asm("loc_4B361B: mov 0x6C(%esi),%al;");
    asm("loc_4B361E: and $0xFC,%al;");
    asm("loc_4B3620: push $0;");
    asm("loc_4B3622: push %esi;");
    asm("loc_4B3623: mov %al,0x6C(%esi);");
    asm("loc_4B3626: call _sub_59DD00;");
    asm("loc_4B362B: mov 0xC(%esi),%eax;");
    asm("loc_4B362E: add $8,%esp;");
    asm("loc_4B3631: test %eax,%eax;");
    asm("loc_4B3633: je loc_4B3647;");
    asm("loc_4B3635: mov 8(%eax),%edi;");
    asm("loc_4B3638: push %eax;");
    asm("loc_4B3639: call _sub_43D2A0;");
    asm("loc_4B363E: add $4,%esp;");
    asm("loc_4B3641: test %edi,%edi;");
    asm("loc_4B3643: mov %edi,%eax;");
    asm("loc_4B3645: jne loc_4B3635;");
    asm("loc_4B3647: mov (%esi),%edx;");
    asm("loc_4B3649: mov %esi,%ecx;");
    asm("loc_4B364B: calll *0x28(%edx);");
    asm("loc_4B364E: mov (%esi),%eax;");
    asm("loc_4B3650: push $1;");
    asm("loc_4B3652: mov %esi,%ecx;");
    asm("loc_4B3654: calll *(%eax);");
    asm("loc_4B3656: xor %eax,%eax;");
    asm("loc_4B3658: pop %edi;");
    asm("loc_4B3659: pop %esi;");
    asm("loc_4B365A: pop %ebp;");
    asm("loc_4B365B: pop %ebx;");
    asm("loc_4B365C: add $0x204,%esp;");
    asm("loc_4B3662: ret $0xC;");
    asm("loc_4B3665: mov 0x220(%esp),%ebx;");
    asm("loc_4B366C: xor %edi,%edi;");
    asm("loc_4B366E: lea 0x34C(%esi),%ebp;");
    asm("loc_4B3674: mov 0x21C(%esp),%ecx;");
    asm("loc_4B367B: cmp (%ebp),%ecx;");
    asm("loc_4B367E: jne loc_4B36BA;");
    asm("loc_4B3680: mov 0x340(%esi),%eax;");
    asm("loc_4B3686: mov 0x334(%esi),%edx;");
    asm("loc_4B368C: add %edi,%eax;");
    asm("loc_4B368E: test %edx,%edx;");
    asm("loc_4B3690: je loc_4B36BA;");
    asm("loc_4B3692: mov 0x338(%esi),%ecx;");
    asm("loc_4B3698: sub %edx,%ecx;");
    asm("loc_4B369A: sar $5,%ecx;");
    asm("loc_4B369D: cmp %ecx,%eax;");
    asm("loc_4B369F: jae loc_4B36BA;");
    asm("loc_4B36A1: shl $5,%eax;");
    asm("loc_4B36A4: test %ebx,%ebx;");
    asm("loc_4B36A6: jne loc_4B36AF;");
    asm("loc_4B36A8: movb $1,0x1C(%edx,%eax);");
    asm("loc_4B36AD: jmp loc_4B36BA;");
    asm("loc_4B36AF: mov 0x334(%esi),%ecx;");
    asm("loc_4B36B5: movb $0,0x1C(%ecx,%eax);");
    asm("loc_4B36BA: inc %edi;");
    asm("loc_4B36BB: add $4,%ebp;");
    asm("loc_4B36BE: cmp $9,%edi;");
    asm("loc_4B36C1: jl loc_4B3674;");
    asm("loc_4B36C3: mov 0x334(%esi),%edi;");
    asm("loc_4B36C9: xor %ebx,%ebx;");
    asm("loc_4B36CB: xor %ecx,%ecx;");
    asm("loc_4B36CD: xor %edx,%edx;");
    asm("loc_4B36CF: nop;");
    asm("loc_4B36D0: test %edi,%edi;");
    asm("loc_4B36D2: je loc_4B3921;");
    asm("loc_4B36D8: mov 0x338(%esi),%eax;");
    asm("loc_4B36DE: sub %edi,%eax;");
    asm("loc_4B36E0: sar $5,%eax;");
    asm("loc_4B36E3: cmp %eax,%ecx;");
    asm("loc_4B36E5: jae loc_4B3921;");
    asm("loc_4B36EB: mov 0x334(%esi),%eax;");
    asm("loc_4B36F1: add %edx,%eax;");
    asm("loc_4B36F3: cmpb $0,0x1C(%eax);");
    asm("loc_4B36F7: je loc_4B36FC;");
    asm("loc_4B36F9: add 0xC(%eax),%ebx;");
    asm("loc_4B36FC: inc %ecx;");
    asm("loc_4B36FD: add $0x20,%edx;");
    asm("loc_4B3700: jmp loc_4B36D0;");
    asm("loc_4B3702: mov 0x21C(%esp),%edx;");
    asm("loc_4B3709: cmp 0x46C(%esi),%edx;");
    asm("loc_4B370F: jne loc_4B394E;");
    asm("loc_4B3715: mov 0x220(%esp),%eax;");
    asm("loc_4B371C: mov %esi,%ecx;");
    asm("loc_4B371E: mov %eax,0x340(%esi);");
    asm("loc_4B3724: call _sub_4B3DD0;");
    asm("loc_4B3729: xor %eax,%eax;");
    asm("loc_4B372B: pop %edi;");
    asm("loc_4B372C: pop %esi;");
    asm("loc_4B372D: pop %ebp;");
    asm("loc_4B372E: pop %ebx;");
    asm("loc_4B372F: add $0x204,%esp;");
    asm("loc_4B3735: ret $0xC;");
    asm("loc_4B3738: mov 0x21C(%esp),%eax;");
    asm("loc_4B373F: mov (%eax),%edi;");
    asm("loc_4B3741: mov (%esi),%edx;");
    asm("loc_4B3743: sub $0xC,%esp;");
    asm("loc_4B3746: mov %esp,%ecx;");
    asm("loc_4B3748: mov %edi,(%ecx);");
    asm("loc_4B374A: mov 4(%eax),%edi;");
    asm("loc_4B374D: mov 8(%eax),%eax;");
    asm("loc_4B3750: mov %edi,4(%ecx);");
    asm("loc_4B3753: mov %eax,8(%ecx);");
    asm("loc_4B3756: mov %esi,%ecx;");
    asm("loc_4B3758: calll *0x7C(%edx);");
    asm("loc_4B375B: mov (%esi),%edx;");
    asm("loc_4B375D: lea 0x60(%esi),%eax;");
    asm("loc_4B3760: push %eax;");
    asm("loc_4B3761: mov %esi,%ecx;");
    asm("loc_4B3763: calll *0x14(%edx);");
    asm("loc_4B3766: push $2;");
    asm("loc_4B3768: call _sub_5645C0;");
    asm("loc_4B376D: add $4,%esp;");
    asm("loc_4B3770: xor %eax,%eax;");
    asm("loc_4B3772: pop %edi;");
    asm("loc_4B3773: pop %esi;");
    asm("loc_4B3774: pop %ebp;");
    asm("loc_4B3775: pop %ebx;");
    asm("loc_4B3776: add $0x204,%esp;");
    asm("loc_4B377C: ret $0xC;");
    asm("loc_4B377F: mov 0x21C(%esp),%ecx;");
    asm("loc_4B3786: xor %edi,%edi;");
    asm("loc_4B3788: lea 0x3DC(%esi),%eax;");
    asm("loc_4B378E: mov %edi,%edi;");
    asm("loc_4B3790: cmp -0x48(%eax),%ecx;");
    asm("loc_4B3793: je loc_4B37D5;");
    asm("loc_4B3795: cmp (%eax),%ecx;");
    asm("loc_4B3797: je loc_4B37D5;");
    asm("loc_4B3799: inc %edi;");
    asm("loc_4B379A: add $4,%eax;");
    asm("loc_4B379D: cmp $9,%edi;");
    asm("loc_4B37A0: jl loc_4B3790;");
    asm("loc_4B37A2: cmp 0x344(%esi),%ecx;");
    asm("loc_4B37A8: jne loc_4B384C;");
    asm("loc_4B37AE: mov %esi,%ecx;");
    asm("loc_4B37B0: call _sub_4B40D0;");
    asm("loc_4B37B5: mov _data_67220C,%ecx;");
    asm("loc_4B37BB: push $0;");
    asm("loc_4B37BD: push %ecx;");
    asm("loc_4B37BE: call _sub_489E80;");
    asm("loc_4B37C3: add $8,%esp;");
    asm("loc_4B37C6: xor %eax,%eax;");
    asm("loc_4B37C8: pop %edi;");
    asm("loc_4B37C9: pop %esi;");
    asm("loc_4B37CA: pop %ebp;");
    asm("loc_4B37CB: pop %ebx;");
    asm("loc_4B37CC: add $0x204,%esp;");
    asm("loc_4B37D2: ret $0xC;");
    asm("loc_4B37D5: mov 0x34C(%esi,%edi,4),%ecx;");
    asm("loc_4B37DC: mov (%ecx),%edx;");
    asm("loc_4B37DE: push $0;");
    asm("loc_4B37E0: lea 0x14(%esp),%eax;");
    asm("loc_4B37E4: push %eax;");
    asm("loc_4B37E5: push $0x2F;");
    asm("loc_4B37E7: calll *0xA8(%edx);");
    asm("loc_4B37ED: mov 0x10(%esp),%eax;");
    asm("loc_4B37F1: mov 0x34C(%esi,%edi,4),%ecx;");
    asm("loc_4B37F8: mov (%ecx),%edx;");
    asm("loc_4B37FA: push $0;");
    asm("loc_4B37FC: push %eax;");
    asm("loc_4B37FD: push $0x30;");
    asm("loc_4B37FF: calll *0xA8(%edx);");
    asm("loc_4B3805: mov 0x10(%esp),%eax;");
    asm("loc_4B3809: mov (%esi),%edx;");
    asm("loc_4B380B: test %eax,%eax;");
    asm("loc_4B380D: mov 0x34C(%esi,%edi,4),%eax;");
    asm("loc_4B3814: mov %esi,%ecx;");
    asm("loc_4B3816: je loc_4B3832;");
    asm("loc_4B3818: push $0;");
    asm("loc_4B381A: push %eax;");
    asm("loc_4B381B: push $0x30;");
    asm("loc_4B381D: calll *0xA8(%edx);");
    asm("loc_4B3823: xor %eax,%eax;");
    asm("loc_4B3825: pop %edi;");
    asm("loc_4B3826: pop %esi;");
    asm("loc_4B3827: pop %ebp;");
    asm("loc_4B3828: pop %ebx;");
    asm("loc_4B3829: add $0x204,%esp;");
    asm("loc_4B382F: ret $0xC;");
    asm("loc_4B3832: push $1;");
    asm("loc_4B3834: push %eax;");
    asm("loc_4B3835: push $0x30;");
    asm("loc_4B3837: calll *0xA8(%edx);");
    asm("loc_4B383D: xor %eax,%eax;");
    asm("loc_4B383F: pop %edi;");
    asm("loc_4B3840: pop %esi;");
    asm("loc_4B3841: pop %ebp;");
    asm("loc_4B3842: pop %ebx;");
    asm("loc_4B3843: add $0x204,%esp;");
    asm("loc_4B3849: ret $0xC;");
    asm("loc_4B384C: cmp 0x348(%esi),%ecx;");
    asm("loc_4B3852: jne loc_4B38A6;");
    asm("loc_4B3854: mov 0x6C(%esi),%cl;");
    asm("loc_4B3857: and $0xFC,%cl;");
    asm("loc_4B385A: push $0;");
    asm("loc_4B385C: push %esi;");
    asm("loc_4B385D: mov %cl,0x6C(%esi);");
    asm("loc_4B3860: call _sub_59DD00;");
    asm("loc_4B3865: push $0;");
    asm("loc_4B3867: call _sub_4424F0;");
    asm("loc_4B386C: mov 0xC(%esi),%eax;");
    asm("loc_4B386F: add $0xC,%esp;");
    asm("loc_4B3872: test %eax,%eax;");
    asm("loc_4B3874: je loc_4B3888;");
    asm("loc_4B3876: mov 8(%eax),%edi;");
    asm("loc_4B3879: push %eax;");
    asm("loc_4B387A: call _sub_43D2A0;");
    asm("loc_4B387F: add $4,%esp;");
    asm("loc_4B3882: test %edi,%edi;");
    asm("loc_4B3884: mov %edi,%eax;");
    asm("loc_4B3886: jne loc_4B3876;");
    asm("loc_4B3888: mov (%esi),%edx;");
    asm("loc_4B388A: mov %esi,%ecx;");
    asm("loc_4B388C: calll *0x28(%edx);");
    asm("loc_4B388F: mov (%esi),%eax;");
    asm("loc_4B3891: push $1;");
    asm("loc_4B3893: mov %esi,%ecx;");
    asm("loc_4B3895: calll *(%eax);");
    asm("loc_4B3897: xor %eax,%eax;");
    asm("loc_4B3899: pop %edi;");
    asm("loc_4B389A: pop %esi;");
    asm("loc_4B389B: pop %ebp;");
    asm("loc_4B389C: pop %ebx;");
    asm("loc_4B389D: add $0x204,%esp;");
    asm("loc_4B38A3: ret $0xC;");
    asm("loc_4B38A6: cmp 0x470(%esi),%ecx;");
    asm("loc_4B38AC: jne loc_4B394E;");
    asm("loc_4B38B2: xor %edx,%edx;");
    asm("loc_4B38B4: xor %edi,%edi;");
    asm("loc_4B38B6: mov 0x334(%esi),%ecx;");
    asm("loc_4B38BC: test %ecx,%ecx;");
    asm("loc_4B38BE: je loc_4B38E4;");
    asm("loc_4B38C0: mov 0x338(%esi),%eax;");
    asm("loc_4B38C6: sub %ecx,%eax;");
    asm("loc_4B38C8: sar $5,%eax;");
    asm("loc_4B38CB: cmp %eax,%edx;");
    asm("loc_4B38CD: jae loc_4B38E4;");
    asm("loc_4B38CF: mov 0x1C(%ecx,%edi),%bl;");
    asm("loc_4B38D3: lea 0x1C(%ecx,%edi),%eax;");
    asm("loc_4B38D7: test %bl,%bl;");
    asm("loc_4B38D9: sete %cl;");
    asm("loc_4B38DC: inc %edx;");
    asm("loc_4B38DD: mov %cl,(%eax);");
    asm("loc_4B38DF: add $0x20,%edi;");
    asm("loc_4B38E2: jmp loc_4B38B6;");
    asm("loc_4B38E4: mov %esi,%ecx;");
    asm("loc_4B38E6: call _sub_4B3DD0;");
    asm("loc_4B38EB: mov 0x334(%esi),%edi;");
    asm("loc_4B38F1: xor %ebx,%ebx;");
    asm("loc_4B38F3: xor %ecx,%ecx;");
    asm("loc_4B38F5: xor %edx,%edx;");
    asm("loc_4B38F7: test %edi,%edi;");
    asm("loc_4B38F9: je loc_4B3921;");
    asm("loc_4B38FB: mov 0x338(%esi),%eax;");
    asm("loc_4B3901: sub %edi,%eax;");
    asm("loc_4B3903: sar $5,%eax;");
    asm("loc_4B3906: cmp %eax,%ecx;");
    asm("loc_4B3908: jae loc_4B3921;");
    asm("loc_4B390A: mov 0x334(%esi),%eax;");
    asm("loc_4B3910: add %edx,%eax;");
    asm("loc_4B3912: cmpb $0,0x1C(%eax);");
    asm("loc_4B3916: je loc_4B391B;");
    asm("loc_4B3918: add 0xC(%eax),%ebx;");
    asm("loc_4B391B: inc %ecx;");
    asm("loc_4B391C: add $0x20,%edx;");
    asm("loc_4B391F: jmp loc_4B38F7;");
    asm("loc_4B3921: push %ebx;");
    asm("loc_4B3922: lea 0x18(%esp),%edx;");
    asm("loc_4B3926: push $_data_5D0EC4;");
    asm("loc_4B392B: push %edx;");
    asm("loc_4B392C: calll *_import_5C70EC;");
    asm("loc_4B3932: mov 0x474(%esi),%esi;");
    asm("loc_4B3938: add $0xC,%esp;");
    asm("loc_4B393B: push $0;");
    asm("loc_4B393D: lea 0x18(%esp),%ecx;");
    asm("loc_4B3941: push %ecx;");
    asm("loc_4B3942: push $0x1D;");
    asm("loc_4B3944: mov (%esi),%eax;");
    asm("loc_4B3946: mov %esi,%ecx;");
    asm("loc_4B3948: calll *0xA8(%eax);");
    asm("loc_4B394E: pop %edi;");
    asm("loc_4B394F: pop %esi;");
    asm("loc_4B3950: pop %ebp;");
    asm("loc_4B3951: xor %eax,%eax;");
    asm("loc_4B3953: pop %ebx;");
    asm("loc_4B3954: add $0x204,%esp;");
    asm("loc_4B395A: ret $0xC;");
    asm("int3;"); // unreachable
    asm("_jmp_4B3960: .long loc_4B377F;");
    asm(".long loc_4B355D;");
    asm(".long loc_4B3665;");
    asm(".long loc_4B3702;");
    asm(".long loc_4B3738;");
    asm(".long loc_4B361B;");
    asm(".long loc_4B394E;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4B3530);
_naked _weak void _sub_4B39B0() // _sub_4B39B0
{
    __DEBUG_ASM(4B39B0);
    // chunk 0x4B39B0 _sub_4B39B0
    asm("loc_4B39B0: push $0xFFFFFFFF;");
    asm("loc_4B39B2: push $_sub_5BD059;");
    asm("loc_4B39B7: mov %fs:0,%eax;");
    asm("loc_4B39BD: push %eax;");
    asm("loc_4B39BE: mov %esp,%fs:0;");
    asm("loc_4B39C5: sub $0x7C,%esp;");
    asm("loc_4B39C8: mov 0x338(%ecx),%eax;");
    asm("loc_4B39CE: push %ebx;");
    asm("loc_4B39CF: lea 0x330(%ecx),%ebx;");
    asm("loc_4B39D5: push %esi;");
    asm("loc_4B39D6: push %edi;");
    asm("loc_4B39D7: mov %ecx,0x28(%esp);");
    asm("loc_4B39DB: mov 4(%ebx),%ecx;");
    asm("loc_4B39DE: push %eax;");
    asm("loc_4B39DF: push %ecx;");
    asm("loc_4B39E0: mov %ebx,%ecx;");
    asm("loc_4B39E2: call _sub_4B4B50;");
    asm("loc_4B39E7: mov $_data_668708,%ecx;");
    asm("loc_4B39EC: call _sub_43B630;");
    asm("loc_4B39F1: mov 0xC(%eax),%eax;");
    asm("loc_4B39F4: mov %eax,0x14(%esp);");
    asm("loc_4B39F8: call _sub_4C4F70;");
    asm("loc_4B39FD: fstps 0xC(%esp);");
    asm("loc_4B3A01: xor %edi,%edi;");
    asm("loc_4B3A03: xor %esi,%esi;");
    asm("loc_4B3A05: mov %edi,0x10(%esp);");
    asm("loc_4B3A09: call _sub_4C3E10;");
    asm("loc_4B3A0E: cmp %edi,%eax;");
    asm("loc_4B3A10: je loc_4B3A3C;");
    asm("loc_4B3A12: push %eax;");
    asm("loc_4B3A13: calll *_import_5C61FC;");
    asm("loc_4B3A19: add $4,%esp;");
    asm("loc_4B3A1C: cmp %edi,%eax;");
    asm("loc_4B3A1E: mov %eax,0x10(%esp);");
    asm("loc_4B3A22: je loc_4B3A3C;");
    asm("loc_4B3A24: flds _data_5C75DC;");
    asm("loc_4B3A2A: fsubs 0xC(%esp);");
    asm("loc_4B3A2E: fmuls 0x1C(%eax);");
    asm("loc_4B3A31: fmuls 0x14(%esp);");
    asm("loc_4B3A35: call _sub_5B7EC0;");
    asm("loc_4B3A3A: mov %eax,%esi;");
    asm("loc_4B3A3C: flds 0xC(%esp);");
    asm("loc_4B3A40: fcomps _data_5C75DC;");
    asm("loc_4B3A46: fnstsw %ax;");
    asm("loc_4B3A48: test $0x44,%ah;");
    asm("loc_4B3A4B: jnp loc_4B3A58;");
    asm("loc_4B3A4D: cmp %edi,%esi;");
    asm("loc_4B3A4F: jne loc_4B3A5A;");
    asm("loc_4B3A51: mov $1,%esi;");
    asm("loc_4B3A56: jmp loc_4B3A5C;");
    asm("loc_4B3A58: cmp %edi,%esi;");
    asm("loc_4B3A5A: jle loc_4B3AA1;");
    asm("loc_4B3A5C: flds 0xC(%esp);");
    asm("loc_4B3A60: mov %edi,0x48(%esp);");
    asm("loc_4B3A64: fmuls _data_5CA230;");
    asm("loc_4B3A6A: mov %di,0x4C(%esp);");
    asm("loc_4B3A6F: movl $0x428,0x50(%esp);");
    asm("loc_4B3A77: mov %esi,0x54(%esp);");
    asm("loc_4B3A7B: mov %edi,0x5C(%esp);");
    asm("loc_4B3A7F: mov %edi,0x60(%esp);");
    asm("loc_4B3A83: call _sub_5B7EC0;");
    asm("loc_4B3A88: lea 0x48(%esp),%ecx;");
    asm("loc_4B3A8C: mov %eax,0x58(%esp);");
    asm("loc_4B3A90: mov 8(%ebx),%eax;");
    asm("loc_4B3A93: push %ecx;");
    asm("loc_4B3A94: push %eax;");
    asm("loc_4B3A95: mov %ebx,%ecx;");
    asm("loc_4B3A97: movb $1,0x6C(%esp);");
    asm("loc_4B3A9C: call _sub_4B49A0;");
    asm("loc_4B3AA1: push %ebp;");
    asm("loc_4B3AA2: call _sub_4C3F00;");
    asm("loc_4B3AA7: mov 4(%eax),%eax;");
    asm("loc_4B3AAA: mov (%eax),%esi;");
    asm("loc_4B3AAC: cmp %eax,%esi;");
    asm("loc_4B3AAE: mov %eax,0x10(%esp);");
    asm("loc_4B3AB2: je loc_4B3B69;");
    asm("loc_4B3AB8: cmpl $0x3F800000,0xC(%esi);");
    asm("loc_4B3ABF: je loc_4B3B5F;");
    asm("loc_4B3AC5: mov 0x14(%esp),%ecx;");
    asm("loc_4B3AC9: cmp %edi,%ecx;");
    asm("loc_4B3ACB: mov $0x429,%ebp;");
    asm("loc_4B3AD0: je loc_4B3B0A;");
    asm("loc_4B3AD2: xor %edx,%edx;");
    asm("loc_4B3AD4: mov 8(%esi),%dx;");
    asm("loc_4B3AD8: push %edx;");
    asm("loc_4B3AD9: calll *_import_5C6220;");
    asm("loc_4B3ADF: mov %eax,%edi;");
    asm("loc_4B3AE1: mov 0xC(%edi),%eax;");
    asm("loc_4B3AE4: push %eax;");
    asm("loc_4B3AE5: call _sub_45A7C0;");
    asm("loc_4B3AEA: flds _data_5C75DC;");
    asm("loc_4B3AF0: fsubs 0xC(%esi);");
    asm("loc_4B3AF3: add $4,%esp;");
    asm("loc_4B3AF6: fimull 0x10(%edi);");
    asm("loc_4B3AF9: mov %eax,%ebp;");
    asm("loc_4B3AFB: fmuls 0x18(%esp);");
    asm("loc_4B3AFF: call _sub_5B7EC0;");
    asm("loc_4B3B04: mov %eax,%edi;");
    asm("loc_4B3B06: test %edi,%edi;");
    asm("loc_4B3B08: jne loc_4B3B0F;");
    asm("loc_4B3B0A: mov $1,%edi;");
    asm("loc_4B3B0F: flds 0xC(%esi);");
    asm("loc_4B3B12: fmuls _data_5CA230;");
    asm("loc_4B3B18: call _sub_5B7EC0;");
    asm("loc_4B3B1D: mov 8(%esi),%cx;");
    asm("loc_4B3B21: mov %cx,0x50(%esp);");
    asm("loc_4B3B26: xor %ecx,%ecx;");
    asm("loc_4B3B28: mov %ecx,0x60(%esp);");
    asm("loc_4B3B2C: mov %ecx,0x64(%esp);");
    asm("loc_4B3B30: lea 0x4C(%esp),%ecx;");
    asm("loc_4B3B34: mov %eax,0x5C(%esp);");
    asm("loc_4B3B38: mov 8(%ebx),%eax;");
    asm("loc_4B3B3B: push %ecx;");
    asm("loc_4B3B3C: push %eax;");
    asm("loc_4B3B3D: mov %ebx,%ecx;");
    asm("loc_4B3B3F: movl $1,0x54(%esp);");
    asm("loc_4B3B47: mov %ebp,0x5C(%esp);");
    asm("loc_4B3B4B: mov %edi,0x60(%esp);");
    asm("loc_4B3B4F: movb $1,0x70(%esp);");
    asm("loc_4B3B54: call _sub_4B49A0;");
    asm("loc_4B3B59: mov 0x10(%esp),%eax;");
    asm("loc_4B3B5D: xor %edi,%edi;");
    asm("loc_4B3B5F: mov (%esi),%esi;");
    asm("loc_4B3B61: cmp %eax,%esi;");
    asm("loc_4B3B63: jne loc_4B3AB8;");
    asm("loc_4B3B69: call _sub_4C4060;");
    asm("loc_4B3B6E: push %eax;");
    asm("loc_4B3B6F: lea 0x44(%esp),%ecx;");
    asm("loc_4B3B73: calll *_import_5C6190;");
    asm("loc_4B3B79: mov _data_66873C,%eax;");
    asm("loc_4B3B7E: push %eax;");
    asm("loc_4B3B7F: mov $_data_668708,%ecx;");
    asm("loc_4B3B84: mov %edi,0x98(%esp);");
    asm("loc_4B3B8B: call _sub_43A510;");
    asm("loc_4B3B90: mov %eax,0x18(%esp);");
    asm("loc_4B3B94: mov 0x44(%esp),%eax;");
    asm("loc_4B3B98: mov (%eax),%esi;");
    asm("loc_4B3B9A: cmp %eax,%esi;");
    asm("loc_4B3B9C: mov %eax,0x28(%esp);");
    asm("loc_4B3BA0: je loc_4B3D3D;");
    asm("loc_4B3BA6: mov 0xC(%esi),%eax;");
    asm("loc_4B3BA9: lea 0x1C(%esp),%edx;");
    asm("loc_4B3BAD: push %edx;");
    asm("loc_4B3BAE: lea 0x24(%esp),%ecx;");
    asm("loc_4B3BB2: push %ecx;");
    asm("loc_4B3BB3: push %eax;");
    asm("loc_4B3BB4: mov %edi,0x2C(%esp);");
    asm("loc_4B3BB8: mov %edi,0x28(%esp);");
    asm("loc_4B3BBC: call _sub_5835F0;");
    asm("loc_4B3BC1: add $0xC,%esp;");
    asm("loc_4B3BC4: cmp $1,%eax;");
    asm("loc_4B3BC7: je loc_4B3D31;");
    asm("loc_4B3BCD: mov 0xC(%esi),%eax;");
    asm("loc_4B3BD0: push %eax;");
    asm("loc_4B3BD1: calll *_import_5C632C;");
    asm("loc_4B3BD7: mov 0x1C(%esp),%ecx;");
    asm("loc_4B3BDB: add $4,%esp;");
    asm("loc_4B3BDE: mov %eax,%ebp;");
    asm("loc_4B3BE0: push %ebp;");
    asm("loc_4B3BE1: call _sub_438060;");
    asm("loc_4B3BE6: call _sub_5B7EC0;");
    asm("loc_4B3BEB: mov %eax,0x30(%esp);");
    asm("loc_4B3BEF: mov %edi,0x34(%esp);");
    asm("loc_4B3BF3: fildll 0x30(%esp);");
    asm("loc_4B3BF7: fmuls _data_5D51B4;");
    asm("loc_4B3BFD: call _sub_5B7EC0;");
    asm("loc_4B3C02: mov %eax,0x38(%esp);");
    asm("loc_4B3C06: mov 0xC(%esi),%eax;");
    asm("loc_4B3C09: mov %edi,0x3C(%esp);");
    asm("loc_4B3C0D: fildll 0x38(%esp);");
    asm("loc_4B3C11: push %eax;");
    asm("loc_4B3C12: flds 0x18(%esi);");
    asm("loc_4B3C15: fsubrs _data_5C75DC;");
    asm("loc_4B3C1B: fmulp;");
    asm("loc_4B3C1D: fimull 0x1C(%esi);");
    asm("loc_4B3C20: fstps 0x18(%esp);");
    asm("loc_4B3C24: calll *_import_5C603C;");
    asm("loc_4B3C2A: mov %eax,%edi;");
    asm("loc_4B3C2C: add $4,%esp;");
    asm("loc_4B3C2F: test %edi,%edi;");
    asm("loc_4B3C31: je loc_4B3D2F;");
    asm("loc_4B3C37: mov 0x14(%edi),%eax;");
    asm("loc_4B3C3A: test %eax,%eax;");
    asm("loc_4B3C3C: mov %eax,0x24(%esp);");
    asm("loc_4B3C40: je loc_4B3D2F;");
    asm("loc_4B3C46: flds 0x18(%esi);");
    asm("loc_4B3C49: fcomps _data_5C75DC;");
    asm("loc_4B3C4F: fnstsw %ax;");
    asm("loc_4B3C51: test $0x44,%ah;");
    asm("loc_4B3C54: jnp loc_4B3D2F;");
    asm("loc_4B3C5A: push %ebp;");
    asm("loc_4B3C5B: movl $0,0x14(%esp);");
    asm("loc_4B3C63: calll *_import_5C6088;");
    asm("loc_4B3C69: add $4,%esp;");
    asm("loc_4B3C6C: test %eax,%eax;");
    asm("loc_4B3C6E: je loc_4B3C9C;");
    asm("loc_4B3C70: mov 0x78(%eax),%ebp;");
    asm("loc_4B3C73: test %ebp,%ebp;");
    asm("loc_4B3C75: jne loc_4B3CBF;");
    asm("loc_4B3C77: mov 4(%edi),%edi;");
    asm("loc_4B3C7A: test %edi,%edi;");
    asm("loc_4B3C7C: mov 0x74(%eax),%ebp;");
    asm("loc_4B3C7F: je loc_4B3CBF;");
    asm("loc_4B3C81: mov 0x24(%edi),%ecx;");
    asm("loc_4B3C84: test %ecx,%ecx;");
    asm("loc_4B3C86: je loc_4B3CBF;");
    asm("loc_4B3C88: mov 0x28(%edi),%eax;");
    asm("loc_4B3C8B: sub %ecx,%eax;");
    asm("loc_4B3C8D: sar $3,%eax;");
    asm("loc_4B3C90: test %eax,%eax;");
    asm("loc_4B3C92: jbe loc_4B3CBF;");
    asm("loc_4B3C94: mov (%ecx),%edx;");
    asm("loc_4B3C96: mov %edx,0x10(%esp);");
    asm("loc_4B3C9A: jmp loc_4B3CBF;");
    asm("loc_4B3C9C: mov 0xC(%edi),%ebp;");
    asm("loc_4B3C9F: mov 4(%edi),%edi;");
    asm("loc_4B3CA2: test %edi,%edi;");
    asm("loc_4B3CA4: je loc_4B3CBF;");
    asm("loc_4B3CA6: mov 0x24(%edi),%ecx;");
    asm("loc_4B3CA9: test %ecx,%ecx;");
    asm("loc_4B3CAB: je loc_4B3CBF;");
    asm("loc_4B3CAD: mov 0x28(%edi),%eax;");
    asm("loc_4B3CB0: sub %ecx,%eax;");
    asm("loc_4B3CB2: sar $3,%eax;");
    asm("loc_4B3CB5: test %eax,%eax;");
    asm("loc_4B3CB7: jbe loc_4B3CBF;");
    asm("loc_4B3CB9: mov (%ecx),%eax;");
    asm("loc_4B3CBB: mov %eax,0x10(%esp);");
    asm("loc_4B3CBF: flds 0x14(%esp);");
    asm("loc_4B3CC3: call _sub_5B7EC0;");
    asm("loc_4B3CC8: test %eax,%eax;");
    asm("loc_4B3CCA: jne loc_4B3CD1;");
    asm("loc_4B3CCC: mov $1,%eax;");
    asm("loc_4B3CD1: flds 0x18(%esi);");
    asm("loc_4B3CD4: mov 0xA(%esi),%cx;");
    asm("loc_4B3CD8: mov 0x24(%esp),%edx;");
    asm("loc_4B3CDC: mov %eax,0x78(%esp);");
    asm("loc_4B3CE0: mov 0x10(%esp),%eax;");
    asm("loc_4B3CE4: fmuls _data_5CA230;");
    asm("loc_4B3CEA: movl $2,0x6C(%esp);");
    asm("loc_4B3CF2: mov %cx,0x70(%esp);");
    asm("loc_4B3CF7: mov %edx,0x74(%esp);");
    asm("loc_4B3CFB: mov %ebp,0x80(%esp);");
    asm("loc_4B3D02: mov %eax,0x84(%esp);");
    asm("loc_4B3D09: call _sub_5B7EC0;");
    asm("loc_4B3D0E: mov 8(%ebx),%edx;");
    asm("loc_4B3D11: lea 0x6C(%esp),%ecx;");
    asm("loc_4B3D15: push %ecx;");
    asm("loc_4B3D16: push $1;");
    asm("loc_4B3D18: push %edx;");
    asm("loc_4B3D19: mov %ebx,%ecx;");
    asm("loc_4B3D1B: mov %eax,0x88(%esp);");
    asm("loc_4B3D22: movb $1,0x94(%esp);");
    asm("loc_4B3D2A: call _sub_4B4BA0;");
    asm("loc_4B3D2F: xor %edi,%edi;");
    asm("loc_4B3D31: mov (%esi),%esi;");
    asm("loc_4B3D33: cmp 0x28(%esp),%esi;");
    asm("loc_4B3D37: jne loc_4B3BA6;");
    asm("loc_4B3D3D: mov 4(%ebx),%eax;");
    asm("loc_4B3D40: cmp %edi,%eax;");
    asm("loc_4B3D42: pop %ebp;");
    asm("loc_4B3D43: jne loc_4B3D49;");
    asm("loc_4B3D45: xor %ebx,%ebx;");
    asm("loc_4B3D47: jmp loc_4B3D51;");
    asm("loc_4B3D49: mov 8(%ebx),%ebx;");
    asm("loc_4B3D4C: sub %eax,%ebx;");
    asm("loc_4B3D4E: sar $5,%ebx;");
    asm("loc_4B3D51: mov 0x28(%esp),%eax;");
    asm("loc_4B3D55: mov 0x46C(%eax),%ecx;");
    asm("loc_4B3D5B: mov (%ecx),%edx;");
    asm("loc_4B3D5D: dec %ebx;");
    asm("loc_4B3D5E: push %ebx;");
    asm("loc_4B3D5F: push %edi;");
    asm("loc_4B3D60: push $0x37;");
    asm("loc_4B3D62: calll *0xA8(%edx);");
    asm("loc_4B3D68: mov 0x40(%esp),%eax;");
    asm("loc_4B3D6C: mov (%eax),%esi;");
    asm("loc_4B3D6E: cmp %eax,%esi;");
    asm("loc_4B3D70: mov %eax,%edi;");
    asm("loc_4B3D72: je loc_4B3DA1;");
    asm("loc_4B3D74: mov %esi,%eax;");
    asm("loc_4B3D76: mov 4(%eax),%ecx;");
    asm("loc_4B3D79: mov (%eax),%edx;");
    asm("loc_4B3D7B: mov (%esi),%esi;");
    asm("loc_4B3D7D: mov %edx,(%ecx);");
    asm("loc_4B3D7F: mov (%eax),%ecx;");
    asm("loc_4B3D81: mov 4(%eax),%edx;");
    asm("loc_4B3D84: push %eax;");
    asm("loc_4B3D85: mov %edx,4(%ecx);");
    asm("loc_4B3D88: call _sub_5B7E1D;");
    asm("loc_4B3D8D: mov 0x48(%esp),%ecx;");
    asm("loc_4B3D91: add $4,%esp;");
    asm("loc_4B3D94: dec %ecx;");
    asm("loc_4B3D95: cmp %edi,%esi;");
    asm("loc_4B3D97: mov %ecx,0x44(%esp);");
    asm("loc_4B3D9B: jne loc_4B3D74;");
    asm("loc_4B3D9D: mov 0x40(%esp),%eax;");
    asm("loc_4B3DA1: push %eax;");
    asm("loc_4B3DA2: call _sub_5B7E1D;");
    asm("loc_4B3DA7: mov 0x8C(%esp),%ecx;");
    asm("loc_4B3DAE: add $4,%esp;");
    asm("loc_4B3DB1: pop %edi;");
    asm("loc_4B3DB2: pop %esi;");
    asm("loc_4B3DB3: pop %ebx;");
    asm("loc_4B3DB4: mov %ecx,%fs:0;");
    asm("loc_4B3DBB: add $0x88,%esp;");
    asm("loc_4B3DC1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B3DD0() // _sub_4B3DD0
{
    __DEBUG_ASM(4B3DD0);
    // chunk 0x4B3DD0 _sub_4B3DD0
    asm("loc_4B3DD0: sub $0x218,%esp;");
    asm("loc_4B3DD6: push %ebx;");
    asm("loc_4B3DD7: push %ebp;");
    asm("loc_4B3DD8: push %esi;");
    asm("loc_4B3DD9: mov %ecx,%ebp;");
    asm("loc_4B3DDB: push %edi;");
    asm("loc_4B3DDC: mov 0x340(%ebp),%edi;");
    asm("loc_4B3DE2: xor %edx,%edx;");
    asm("loc_4B3DE4: mov %edi,%ebx;");
    asm("loc_4B3DE6: mov %edx,0x1C(%esp);");
    asm("loc_4B3DEA: mov %edi,0x20(%esp);");
    asm("loc_4B3DEE: shl $5,%ebx;");
    asm("loc_4B3DF1: lea 0x394(%ebp),%esi;");
    asm("loc_4B3DF7: mov 0x334(%ebp),%ecx;");
    asm("loc_4B3DFD: test %ecx,%ecx;");
    asm("loc_4B3DFF: mov %ebx,0x24(%esp);");
    asm("loc_4B3E03: je loc_4B3FD8;");
    asm("loc_4B3E09: mov 0x338(%ebp),%eax;");
    asm("loc_4B3E0F: sub %ecx,%eax;");
    asm("loc_4B3E11: sar $5,%eax;");
    asm("loc_4B3E14: cmp %eax,%edi;");
    asm("loc_4B3E16: jae loc_4B3FD8;");
    asm("loc_4B3E1C: push $0;");
    asm("loc_4B3E1E: mov %ecx,%edi;");
    asm("loc_4B3E20: mov 0x6C(%esi),%ecx;");
    asm("loc_4B3E23: mov (%ecx),%eax;");
    asm("loc_4B3E25: push $0;");
    asm("loc_4B3E27: push $2;");
    asm("loc_4B3E29: add %ebx,%edi;");
    asm("loc_4B3E2B: calll *0xA8(%eax);");
    asm("loc_4B3E31: mov 0x90(%esi),%ecx;");
    asm("loc_4B3E37: mov (%ecx),%edx;");
    asm("loc_4B3E39: push $0;");
    asm("loc_4B3E3B: push $0;");
    asm("loc_4B3E3D: push $2;");
    asm("loc_4B3E3F: calll *0xA8(%edx);");
    asm("loc_4B3E45: mov -0x48(%esi),%ecx;");
    asm("loc_4B3E48: mov (%ecx),%eax;");
    asm("loc_4B3E4A: push $0;");
    asm("loc_4B3E4C: push $0;");
    asm("loc_4B3E4E: push $2;");
    asm("loc_4B3E50: calll *0xA8(%eax);");
    asm("loc_4B3E56: mov -0x24(%esi),%ecx;");
    asm("loc_4B3E59: mov (%ecx),%edx;");
    asm("loc_4B3E5B: push $0;");
    asm("loc_4B3E5D: push $0;");
    asm("loc_4B3E5F: push $2;");
    asm("loc_4B3E61: calll *0xA8(%edx);");
    asm("loc_4B3E67: mov (%esi),%ecx;");
    asm("loc_4B3E69: mov (%ecx),%eax;");
    asm("loc_4B3E6B: push $0;");
    asm("loc_4B3E6D: push $0;");
    asm("loc_4B3E6F: push $2;");
    asm("loc_4B3E71: calll *0xA8(%eax);");
    asm("loc_4B3E77: mov 0x24(%esi),%ecx;");
    asm("loc_4B3E7A: mov (%ecx),%edx;");
    asm("loc_4B3E7C: push $0;");
    asm("loc_4B3E7E: push $0;");
    asm("loc_4B3E80: push $1;");
    asm("loc_4B3E82: calll *0xA8(%edx);");
    asm("loc_4B3E88: mov 0x48(%esi),%ecx;");
    asm("loc_4B3E8B: mov (%ecx),%eax;");
    asm("loc_4B3E8D: push $0;");
    asm("loc_4B3E8F: push $0;");
    asm("loc_4B3E91: push $2;");
    asm("loc_4B3E93: calll *0xA8(%eax);");
    asm("loc_4B3E99: mov 0xB4(%esi),%ecx;");
    asm("loc_4B3E9F: mov (%ecx),%edx;");
    asm("loc_4B3EA1: push $0;");
    asm("loc_4B3EA3: push $0;");
    asm("loc_4B3EA5: push $1;");
    asm("loc_4B3EA7: calll *0xA8(%edx);");
    asm("loc_4B3EAD: mov 8(%edi),%edx;");
    asm("loc_4B3EB0: mov 0x6C(%esi),%ecx;");
    asm("loc_4B3EB3: mov (%ecx),%eax;");
    asm("loc_4B3EB5: push $0;");
    asm("loc_4B3EB7: push %edx;");
    asm("loc_4B3EB8: push $0x1E;");
    asm("loc_4B3EBA: calll *0xA8(%eax);");
    asm("loc_4B3EC0: mov 0xC(%edi),%eax;");
    asm("loc_4B3EC3: push %eax;");
    asm("loc_4B3EC4: lea 0x2C(%esp),%ecx;");
    asm("loc_4B3EC8: push $_data_5D0EC4;");
    asm("loc_4B3ECD: push %ecx;");
    asm("loc_4B3ECE: calll *_import_5C70EC;");
    asm("loc_4B3ED4: mov 0x90(%esi),%ecx;");
    asm("loc_4B3EDA: mov (%ecx),%edx;");
    asm("loc_4B3EDC: add $0xC,%esp;");
    asm("loc_4B3EDF: push $0;");
    asm("loc_4B3EE1: lea 0x2C(%esp),%eax;");
    asm("loc_4B3EE5: push %eax;");
    asm("loc_4B3EE6: push $0x1D;");
    asm("loc_4B3EE8: calll *0xA8(%edx);");
    asm("loc_4B3EEE: movzbl 0x1C(%edi),%eax;");
    asm("loc_4B3EF2: mov -0x48(%esi),%ecx;");
    asm("loc_4B3EF5: mov (%ecx),%edx;");
    asm("loc_4B3EF7: push $0;");
    asm("loc_4B3EF9: push %eax;");
    asm("loc_4B3EFA: push $0x30;");
    asm("loc_4B3EFC: calll *0xA8(%edx);");
    asm("loc_4B3F02: mov 0x24(%esi),%ecx;");
    asm("loc_4B3F05: mov 0x14(%edi),%eax;");
    asm("loc_4B3F08: mov (%ecx),%edx;");
    asm("loc_4B3F0A: test %eax,%eax;");
    asm("loc_4B3F0C: jne loc_4B3F1E;");
    asm("loc_4B3F0E: push %eax;");
    asm("loc_4B3F0F: push $_data_5CB0D0;");
    asm("loc_4B3F14: push $4;");
    asm("loc_4B3F16: calll *0xA8(%edx);");
    asm("loc_4B3F1C: jmp loc_4B3F2F;");
    asm("loc_4B3F1E: mov 0x18(%edi),%ebx;");
    asm("loc_4B3F21: push %ebx;");
    asm("loc_4B3F22: push %eax;");
    asm("loc_4B3F23: push $4;");
    asm("loc_4B3F25: calll *0xA8(%edx);");
    asm("loc_4B3F2B: mov 0x24(%esp),%ebx;");
    asm("loc_4B3F2F: mov 0x10(%edi),%edi;");
    asm("loc_4B3F32: mov 0xB4(%esi),%ecx;");
    asm("loc_4B3F38: mov (%ecx),%eax;");
    asm("loc_4B3F3A: push %edi;");
    asm("loc_4B3F3B: push $0x64;");
    asm("loc_4B3F3D: push $0x40;");
    asm("loc_4B3F3F: calll *0xA8(%eax);");
    asm("loc_4B3F45: cmp $0x46,%edi;");
    asm("loc_4B3F48: jl loc_4B3F64;");
    asm("loc_4B3F4A: movb $0x4B,0x14(%esp);");
    asm("loc_4B3F4F: movb $0xC2,0x15(%esp);");
    asm("loc_4B3F54: movb $0x30,0x16(%esp);");
    asm("loc_4B3F59: movb $0xFF,0x17(%esp);");
    asm("loc_4B3F5E: mov 0x14(%esp),%eax;");
    asm("loc_4B3F62: jmp loc_4B3F9B;");
    asm("loc_4B3F64: cmp $0x1E,%edi;");
    asm("loc_4B3F67: jl loc_4B3F83;");
    asm("loc_4B3F69: movb $0xF5,0x10(%esp);");
    asm("loc_4B3F6E: movb $0xEA,0x11(%esp);");
    asm("loc_4B3F73: movb $0x26,0x12(%esp);");
    asm("loc_4B3F78: movb $0xFF,0x13(%esp);");
    asm("loc_4B3F7D: mov 0x10(%esp),%eax;");
    asm("loc_4B3F81: jmp loc_4B3F9B;");
    asm("loc_4B3F83: movb $0xFF,0x18(%esp);");
    asm("loc_4B3F88: movb $0x26,0x19(%esp);");
    asm("loc_4B3F8D: movb $0x26,0x1A(%esp);");
    asm("loc_4B3F92: movb $0xFF,0x1B(%esp);");
    asm("loc_4B3F97: mov 0x18(%esp),%eax;");
    asm("loc_4B3F9B: mov 0xB4(%esi),%ecx;");
    asm("loc_4B3FA1: mov (%ecx),%edx;");
    asm("loc_4B3FA3: push $0;");
    asm("loc_4B3FA5: push %eax;");
    asm("loc_4B3FA6: push $0x3F;");
    asm("loc_4B3FA8: calll *0xA8(%edx);");
    asm("loc_4B3FAE: mov 0x1C(%esp),%eax;");
    asm("loc_4B3FB2: inc %eax;");
    asm("loc_4B3FB3: add $4,%esi;");
    asm("loc_4B3FB6: cmp $9,%eax;");
    asm("loc_4B3FB9: mov %eax,0x1C(%esp);");
    asm("loc_4B3FBD: jge loc_4B40BF;");
    asm("loc_4B3FC3: mov 0x20(%esp),%ecx;");
    asm("loc_4B3FC7: inc %ecx;");
    asm("loc_4B3FC8: mov %ecx,0x20(%esp);");
    asm("loc_4B3FCC: add $0x20,%ebx;");
    asm("loc_4B3FCF: mov %eax,%edx;");
    asm("loc_4B3FD1: mov %ecx,%edi;");
    asm("loc_4B3FD3: jmp loc_4B3DF7;");
    asm("loc_4B3FD8: cmp $9,%edx;");
    asm("loc_4B3FDB: jge loc_4B40BF;");
    asm("loc_4B3FE1: mov $9,%edi;");
    asm("loc_4B3FE6: lea 0x424(%ebp,%edx,4),%esi;");
    asm("loc_4B3FED: sub %edx,%edi;");
    asm("loc_4B3FEF: nop;");
    asm("loc_4B3FF0: mov -0x24(%esi),%ecx;");
    asm("loc_4B3FF3: mov (%ecx),%eax;");
    asm("loc_4B3FF5: push $0;");
    asm("loc_4B3FF7: push $0;");
    asm("loc_4B3FF9: push $0x1E;");
    asm("loc_4B3FFB: calll *0xA8(%eax);");
    asm("loc_4B4001: mov -0x24(%esi),%ecx;");
    asm("loc_4B4004: mov (%ecx),%edx;");
    asm("loc_4B4006: push $0;");
    asm("loc_4B4008: push $1;");
    asm("loc_4B400A: push $2;");
    asm("loc_4B400C: calll *0xA8(%edx);");
    asm("loc_4B4012: mov (%esi),%ecx;");
    asm("loc_4B4014: mov (%ecx),%eax;");
    asm("loc_4B4016: push $0;");
    asm("loc_4B4018: push $0;");
    asm("loc_4B401A: push $0x1E;");
    asm("loc_4B401C: calll *0xA8(%eax);");
    asm("loc_4B4022: mov (%esi),%ecx;");
    asm("loc_4B4024: mov (%ecx),%edx;");
    asm("loc_4B4026: push $0;");
    asm("loc_4B4028: push $1;");
    asm("loc_4B402A: push $2;");
    asm("loc_4B402C: calll *0xA8(%edx);");
    asm("loc_4B4032: mov -0xD8(%esi),%ecx;");
    asm("loc_4B4038: mov (%ecx),%eax;");
    asm("loc_4B403A: push $0;");
    asm("loc_4B403C: push $1;");
    asm("loc_4B403E: push $2;");
    asm("loc_4B4040: calll *0xA8(%eax);");
    asm("loc_4B4046: mov -0xB4(%esi),%ecx;");
    asm("loc_4B404C: mov (%ecx),%edx;");
    asm("loc_4B404E: push $0;");
    asm("loc_4B4050: push $1;");
    asm("loc_4B4052: push $2;");
    asm("loc_4B4054: calll *0xA8(%edx);");
    asm("loc_4B405A: mov -0x90(%esi),%ecx;");
    asm("loc_4B4060: mov (%ecx),%eax;");
    asm("loc_4B4062: push $0;");
    asm("loc_4B4064: push $1;");
    asm("loc_4B4066: push $2;");
    asm("loc_4B4068: calll *0xA8(%eax);");
    asm("loc_4B406E: mov -0x48(%esi),%ecx;");
    asm("loc_4B4071: mov (%ecx),%edx;");
    asm("loc_4B4073: push $0;");
    asm("loc_4B4075: push $1;");
    asm("loc_4B4077: push $2;");
    asm("loc_4B4079: calll *0xA8(%edx);");
    asm("loc_4B407F: mov 0x24(%esi),%ecx;");
    asm("loc_4B4082: mov (%ecx),%eax;");
    asm("loc_4B4084: push $0;");
    asm("loc_4B4086: push $1;");
    asm("loc_4B4088: push $1;");
    asm("loc_4B408A: calll *0xA8(%eax);");
    asm("loc_4B4090: mov -0xD8(%esi),%ecx;");
    asm("loc_4B4096: mov (%ecx),%edx;");
    asm("loc_4B4098: push $0;");
    asm("loc_4B409A: push $0;");
    asm("loc_4B409C: push $0x30;");
    asm("loc_4B409E: calll *0xA8(%edx);");
    asm("loc_4B40A4: mov -0x6C(%esi),%ecx;");
    asm("loc_4B40A7: mov (%ecx),%eax;");
    asm("loc_4B40A9: push $0;");
    asm("loc_4B40AB: push $1;");
    asm("loc_4B40AD: push $1;");
    asm("loc_4B40AF: calll *0xA8(%eax);");
    asm("loc_4B40B5: add $4,%esi;");
    asm("loc_4B40B8: dec %edi;");
    asm("loc_4B40B9: jne loc_4B3FF0;");
    asm("loc_4B40BF: pop %edi;");
    asm("loc_4B40C0: pop %esi;");
    asm("loc_4B40C1: pop %ebp;");
    asm("loc_4B40C2: pop %ebx;");
    asm("loc_4B40C3: add $0x218,%esp;");
    asm("loc_4B40C9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B40D0() // _sub_4B40D0
{
    __DEBUG_ASM(4B40D0);
    // chunk 0x4B40D0 _sub_4B40D0
    asm("loc_4B40D0: push $0xFFFFFFFF;");
    asm("loc_4B40D2: push $_sub_5BD088;");
    asm("loc_4B40D7: mov %fs:0,%eax;");
    asm("loc_4B40DD: push %eax;");
    asm("loc_4B40DE: mov %esp,%fs:0;");
    asm("loc_4B40E5: sub $0x230,%esp;");
    asm("loc_4B40EB: push %ebx;");
    asm("loc_4B40EC: push %ebp;");
    asm("loc_4B40ED: push %esi;");
    asm("loc_4B40EE: mov %ecx,%ebp;");
    asm("loc_4B40F0: push %edi;");
    asm("loc_4B40F1: mov 0x334(%ebp),%edi;");
    asm("loc_4B40F7: xor %ebx,%ebx;");
    asm("loc_4B40F9: xor %esi,%esi;");
    asm("loc_4B40FB: xor %ecx,%ecx;");
    asm("loc_4B40FD: mov %ebp,0x1C(%esp);");
    asm("loc_4B4101: xor %edx,%edx;");
    asm("loc_4B4103: cmp %ebx,%edi;");
    asm("loc_4B4105: je loc_4B412D;");
    asm("loc_4B4107: mov 0x338(%ebp),%eax;");
    asm("loc_4B410D: sub %edi,%eax;");
    asm("loc_4B410F: sar $5,%eax;");
    asm("loc_4B4112: cmp %eax,%ecx;");
    asm("loc_4B4114: jae loc_4B412D;");
    asm("loc_4B4116: mov 0x334(%ebp),%eax;");
    asm("loc_4B411C: add %edx,%eax;");
    asm("loc_4B411E: cmpb $0,0x1C(%eax);");
    asm("loc_4B4122: je loc_4B4127;");
    asm("loc_4B4124: add 0xC(%eax),%esi;");
    asm("loc_4B4127: inc %ecx;");
    asm("loc_4B4128: add $0x20,%edx;");
    asm("loc_4B412B: jmp loc_4B4103;");
    asm("loc_4B412D: call _sub_4C4CE0;");
    asm("loc_4B4132: cmp %esi,%eax;");
    asm("loc_4B4134: jl loc_4B4394;");
    asm("loc_4B413A: push %esi;");
    asm("loc_4B413B: call _sub_4C4D50;");
    asm("loc_4B4140: add $4,%esp;");
    asm("loc_4B4143: call _sub_4C3F00;");
    asm("loc_4B4148: mov %eax,%esi;");
    asm("loc_4B414A: mov (%esi),%al;");
    asm("loc_4B414C: push %ebx;");
    asm("loc_4B414D: push %ebx;");
    asm("loc_4B414E: lea 0x28(%esp),%ecx;");
    asm("loc_4B4152: mov %al,0x28(%esp);");
    asm("loc_4B4156: calll *_import_5C640C;");
    asm("loc_4B415C: lea 0x38(%esp),%ecx;");
    asm("loc_4B4160: push %ecx;");
    asm("loc_4B4161: mov %eax,0x28(%esp);");
    asm("loc_4B4165: mov %ebx,0x2C(%esp);");
    asm("loc_4B4169: mov 4(%esi),%edi;");
    asm("loc_4B416C: mov %esi,%ecx;");
    asm("loc_4B416E: calll *_import_5C63B8;");
    asm("loc_4B4174: lea 0x3C(%esp),%edx;");
    asm("loc_4B4178: push %edx;");
    asm("loc_4B4179: lea 0x24(%esp),%ecx;");
    asm("loc_4B417D: mov %eax,%esi;");
    asm("loc_4B417F: calll *_import_5C63B4;");
    asm("loc_4B4185: mov (%esi),%ecx;");
    asm("loc_4B4187: mov (%eax),%edx;");
    asm("loc_4B4189: push %edi;");
    asm("loc_4B418A: push %ecx;");
    asm("loc_4B418B: push %edx;");
    asm("loc_4B418C: lea 0x2C(%esp),%ecx;");
    asm("loc_4B4190: calll *_import_5C63B0;");
    asm("loc_4B4196: mov %ebx,0x248(%esp);");
    asm("loc_4B419D: call _sub_4C4060;");
    asm("loc_4B41A2: push %eax;");
    asm("loc_4B41A3: lea 0x30(%esp),%ecx;");
    asm("loc_4B41A7: calll *_import_5C6190;");
    asm("loc_4B41AD: xor %bl,%bl;");
    asm("loc_4B41AF: xor %eax,%eax;");
    asm("loc_4B41B1: movb $1,0x248(%esp);");
    asm("loc_4B41B9: movb $0,0x13(%esp);");
    asm("loc_4B41BE: mov %eax,0x18(%esp);");
    asm("loc_4B41C2: mov 0x334(%ebp),%ecx;");
    asm("loc_4B41C8: test %ecx,%ecx;");
    asm("loc_4B41CA: mov %eax,0x14(%esp);");
    asm("loc_4B41CE: je loc_4B4291;");
    asm("loc_4B41D4: mov 0x338(%ebp),%eax;");
    asm("loc_4B41DA: sub %ecx,%eax;");
    asm("loc_4B41DC: mov 0x18(%esp),%ecx;");
    asm("loc_4B41E0: sar $5,%eax;");
    asm("loc_4B41E3: cmp %eax,%ecx;");
    asm("loc_4B41E5: jae loc_4B4291;");
    asm("loc_4B41EB: mov 0x334(%ebp),%edi;");
    asm("loc_4B41F1: mov 0x14(%esp),%ecx;");
    asm("loc_4B41F5: mov 0x1C(%edi,%ecx),%al;");
    asm("loc_4B41F9: add %ecx,%edi;");
    asm("loc_4B41FB: test %al,%al;");
    asm("loc_4B41FD: je loc_4B423B;");
    asm("loc_4B41FF: mov (%edi),%eax;");
    asm("loc_4B4201: sub $0,%eax;");
    asm("loc_4B4204: je loc_4B4282;");
    asm("loc_4B4206: dec %eax;");
    asm("loc_4B4207: je loc_4B4250;");
    asm("loc_4B4209: dec %eax;");
    asm("loc_4B420A: jne loc_4B423B;");
    asm("loc_4B420C: mov 0x30(%esp),%ebp;");
    asm("loc_4B4210: mov (%ebp),%esi;");
    asm("loc_4B4213: cmp %ebp,%esi;");
    asm("loc_4B4215: je loc_4B4237;");
    asm("loc_4B4217: mov 0xA(%esi),%ax;");
    asm("loc_4B421B: cmp 4(%edi),%ax;");
    asm("loc_4B421F: jne loc_4B4231;");
    asm("loc_4B4221: push $0x3F800000;");
    asm("loc_4B4226: lea 8(%esi),%ecx;");
    asm("loc_4B4229: calll *_import_5C6408;");
    asm("loc_4B422F: mov $1,%bl;");
    asm("loc_4B4231: mov (%esi),%esi;");
    asm("loc_4B4233: cmp %ebp,%esi;");
    asm("loc_4B4235: jne loc_4B4217;");
    asm("loc_4B4237: mov 0x1C(%esp),%ebp;");
    asm("loc_4B423B: mov 0x18(%esp),%ecx;");
    asm("loc_4B423F: mov 0x14(%esp),%eax;");
    asm("loc_4B4243: inc %ecx;");
    asm("loc_4B4244: mov %ecx,0x18(%esp);");
    asm("loc_4B4248: add $0x20,%eax;");
    asm("loc_4B424B: jmp loc_4B41C2;");
    asm("loc_4B4250: mov 0x24(%esp),%ecx;");
    asm("loc_4B4254: mov (%ecx),%eax;");
    asm("loc_4B4256: cmp %ecx,%eax;");
    asm("loc_4B4258: je loc_4B423B;");
    asm("loc_4B425A: lea (%ebx),%ebx;");
    asm("loc_4B4260: mov 8(%eax),%dx;");
    asm("loc_4B4264: cmp 4(%edi),%dx;");
    asm("loc_4B4268: jne loc_4B427A;");
    asm("loc_4B426A: mov 0x1C(%esp),%ebp;");
    asm("loc_4B426E: movl $0x3F800000,0xC(%eax);");
    asm("loc_4B4275: movb $1,0x13(%esp);");
    asm("loc_4B427A: mov (%eax),%eax;");
    asm("loc_4B427C: cmp %ecx,%eax;");
    asm("loc_4B427E: jne loc_4B4260;");
    asm("loc_4B4280: jmp loc_4B423B;");
    asm("loc_4B4282: push $0x3F800000;");
    asm("loc_4B4287: call _sub_4C4F50;");
    asm("loc_4B428C: add $4,%esp;");
    asm("loc_4B428F: jmp loc_4B423B;");
    asm("loc_4B4291: mov 0x13(%esp),%al;");
    asm("loc_4B4295: test %al,%al;");
    asm("loc_4B4297: je loc_4B42A6;");
    asm("loc_4B4299: lea 0x20(%esp),%eax;");
    asm("loc_4B429D: push %eax;");
    asm("loc_4B429E: call _sub_4C3F10;");
    asm("loc_4B42A3: add $4,%esp;");
    asm("loc_4B42A6: test %bl,%bl;");
    asm("loc_4B42A8: je loc_4B42B7;");
    asm("loc_4B42AA: lea 0x2C(%esp),%ecx;");
    asm("loc_4B42AE: push %ecx;");
    asm("loc_4B42AF: call _sub_4C4040;");
    asm("loc_4B42B4: add $4,%esp;");
    asm("loc_4B42B7: push $0x476;");
    asm("loc_4B42BC: call _sub_4C4CE0;");
    asm("loc_4B42C1: push %eax;");
    asm("loc_4B42C2: lea 0x48(%esp),%edx;");
    asm("loc_4B42C6: push %edx;");
    asm("loc_4B42C7: call _sub_4779A0;");
    asm("loc_4B42CC: mov 0x47C(%ebp),%ecx;");
    asm("loc_4B42D2: mov (%ecx),%eax;");
    asm("loc_4B42D4: add $0xC,%esp;");
    asm("loc_4B42D7: push $0;");
    asm("loc_4B42D9: lea 0x44(%esp),%edx;");
    asm("loc_4B42DD: push %edx;");
    asm("loc_4B42DE: push $0x1D;");
    asm("loc_4B42E0: calll *0xA8(%eax);");
    asm("loc_4B42E6: mov 0x30(%esp),%eax;");
    asm("loc_4B42EA: mov (%eax),%ecx;");
    asm("loc_4B42EC: cmp %eax,%ecx;");
    asm("loc_4B42EE: movb $0,0x248(%esp);");
    asm("loc_4B42F6: mov %eax,%esi;");
    asm("loc_4B42F8: mov %ecx,0x14(%esp);");
    asm("loc_4B42FC: je loc_4B432C;");
    asm("loc_4B42FE: mov %edi,%edi;");
    asm("loc_4B4300: push $0;");
    asm("loc_4B4302: lea 0x1C(%esp),%eax;");
    asm("loc_4B4306: push %eax;");
    asm("loc_4B4307: lea 0x1C(%esp),%ecx;");
    asm("loc_4B430B: call _sub_53AB20;");
    asm("loc_4B4310: mov (%eax),%ecx;");
    asm("loc_4B4312: push %ecx;");
    asm("loc_4B4313: lea 0x20(%esp),%edx;");
    asm("loc_4B4317: push %edx;");
    asm("loc_4B4318: lea 0x34(%esp),%ecx;");
    asm("loc_4B431C: calll *_import_5C6188;");
    asm("loc_4B4322: cmp %esi,0x14(%esp);");
    asm("loc_4B4326: jne loc_4B4300;");
    asm("loc_4B4328: mov 0x30(%esp),%eax;");
    asm("loc_4B432C: push %eax;");
    asm("loc_4B432D: call _sub_5B7E1D;");
    asm("loc_4B4332: mov 0x28(%esp),%eax;");
    asm("loc_4B4336: xor %edi,%edi;");
    asm("loc_4B4338: mov %edi,0x34(%esp);");
    asm("loc_4B433C: mov %edi,0x38(%esp);");
    asm("loc_4B4340: mov (%eax),%ecx;");
    asm("loc_4B4342: add $4,%esp;");
    asm("loc_4B4345: cmp %eax,%ecx;");
    asm("loc_4B4347: movl $0xFFFFFFFF,0x248(%esp);");
    asm("loc_4B4352: mov %eax,%esi;");
    asm("loc_4B4354: mov %ecx,0x14(%esp);");
    asm("loc_4B4358: je loc_4B438B;");
    asm("loc_4B435A: lea (%ebx),%ebx;");
    asm("loc_4B4360: push %edi;");
    asm("loc_4B4361: lea 0x1C(%esp),%eax;");
    asm("loc_4B4365: push %eax;");
    asm("loc_4B4366: lea 0x1C(%esp),%ecx;");
    asm("loc_4B436A: call _sub_53AB20;");
    asm("loc_4B436F: mov (%eax),%ecx;");
    asm("loc_4B4371: push %ecx;");
    asm("loc_4B4372: lea 0x20(%esp),%edx;");
    asm("loc_4B4376: push %edx;");
    asm("loc_4B4377: lea 0x28(%esp),%ecx;");
    asm("loc_4B437B: calll *_import_5C63AC;");
    asm("loc_4B4381: cmp %esi,0x14(%esp);");
    asm("loc_4B4385: jne loc_4B4360;");
    asm("loc_4B4387: mov 0x24(%esp),%eax;");
    asm("loc_4B438B: push %eax;");
    asm("loc_4B438C: call _sub_5B7E1D;");
    asm("loc_4B4391: add $4,%esp;");
    asm("loc_4B4394: mov 0x240(%esp),%ecx;");
    asm("loc_4B439B: pop %edi;");
    asm("loc_4B439C: pop %esi;");
    asm("loc_4B439D: pop %ebp;");
    asm("loc_4B439E: pop %ebx;");
    asm("loc_4B439F: mov %ecx,%fs:0;");
    asm("loc_4B43A6: add $0x23C,%esp;");
    asm("loc_4B43AC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B43B0() // _sub_4B43B0
{
    __DEBUG_ASM(4B43B0);
    // chunk 0x4B43B0 _sub_4B43B0
    asm("loc_4B43B0: push %esi;");
    asm("loc_4B43B1: mov %ecx,%esi;");
    asm("loc_4B43B3: call _sub_45A740;");
    asm("loc_4B43B8: test %al,%al;");
    asm("loc_4B43BA: jne loc_4B44FF;");
    asm("loc_4B43C0: push %ebx;");
    asm("loc_4B43C1: mov 0x334(%esi),%ebx;");
    asm("loc_4B43C7: push %edi;");
    asm("loc_4B43C8: xor %edi,%edi;");
    asm("loc_4B43CA: xor %ecx,%ecx;");
    asm("loc_4B43CC: xor %edx,%edx;");
    asm("loc_4B43CE: mov %edi,%edi;");
    asm("loc_4B43D0: test %ebx,%ebx;");
    asm("loc_4B43D2: je loc_4B43FA;");
    asm("loc_4B43D4: mov 0x338(%esi),%eax;");
    asm("loc_4B43DA: sub %ebx,%eax;");
    asm("loc_4B43DC: sar $5,%eax;");
    asm("loc_4B43DF: cmp %eax,%ecx;");
    asm("loc_4B43E1: jae loc_4B43FA;");
    asm("loc_4B43E3: mov 0x334(%esi),%eax;");
    asm("loc_4B43E9: add %edx,%eax;");
    asm("loc_4B43EB: cmpb $0,0x1C(%eax);");
    asm("loc_4B43EF: je loc_4B43F4;");
    asm("loc_4B43F1: add 0xC(%eax),%edi;");
    asm("loc_4B43F4: inc %ecx;");
    asm("loc_4B43F5: add $0x20,%edx;");
    asm("loc_4B43F8: jmp loc_4B43D0;");
    asm("loc_4B43FA: test %edi,%edi;");
    asm("loc_4B43FC: jne loc_4B442C;");
    asm("loc_4B43FE: mov 0x480(%esi),%ecx;");
    asm("loc_4B4404: mov (%ecx),%eax;");
    asm("loc_4B4406: push $0;");
    asm("loc_4B4408: push $1;");
    asm("loc_4B440A: push $1;");
    asm("loc_4B440C: calll *0xA8(%eax);");
    asm("loc_4B4412: mov 0x344(%esi),%ecx;");
    asm("loc_4B4418: mov (%ecx),%edx;");
    asm("loc_4B441A: push $0;");
    asm("loc_4B441C: push $1;");
    asm("loc_4B441E: push $1;");
    asm("loc_4B4420: calll *0xA8(%edx);");
    asm("loc_4B4426: push $0;");
    asm("loc_4B4428: push $1;");
    asm("loc_4B442A: jmp loc_4B4469;");
    asm("loc_4B442C: call _sub_4C4CE0;");
    asm("loc_4B4431: mov 0x480(%esi),%ecx;");
    asm("loc_4B4437: mov (%ecx),%edx;");
    asm("loc_4B4439: cmp %eax,%edi;");
    asm("loc_4B443B: setg %bl;");
    asm("loc_4B443E: xor %eax,%eax;");
    asm("loc_4B4440: test %bl,%bl;");
    asm("loc_4B4442: sete %al;");
    asm("loc_4B4445: push $0;");
    asm("loc_4B4447: push %eax;");
    asm("loc_4B4448: push $1;");
    asm("loc_4B444A: calll *0xA8(%edx);");
    asm("loc_4B4450: mov 0x344(%esi),%ecx;");
    asm("loc_4B4456: mov (%ecx),%edx;");
    asm("loc_4B4458: movzbl %bl,%edi;");
    asm("loc_4B445B: push $0;");
    asm("loc_4B445D: push %edi;");
    asm("loc_4B445E: push $1;");
    asm("loc_4B4460: calll *0xA8(%edx);");
    asm("loc_4B4466: push $0;");
    asm("loc_4B4468: push %edi;");
    asm("loc_4B4469: mov 0x478(%esi),%ecx;");
    asm("loc_4B446F: mov (%ecx),%eax;");
    asm("loc_4B4471: push $1;");
    asm("loc_4B4473: calll *0xA8(%eax);");
    asm("loc_4B4479: mov 0xC(%esi),%edi;");
    asm("loc_4B447C: test %edi,%edi;");
    asm("loc_4B447E: je loc_4B44C8;");
    asm("loc_4B4480: mov $0x64,%ebx;");
    asm("loc_4B4485: mov %ebx,0x70(%edi);");
    asm("loc_4B4488: mov 0x484(%esi),%eax;");
    asm("loc_4B448E: test %eax,%eax;");
    asm("loc_4B4490: jl loc_4B44C1;");
    asm("loc_4B4492: mov (%edi),%edx;");
    asm("loc_4B4494: mov %edi,%ecx;");
    asm("loc_4B4496: calll *8(%edx);");
    asm("loc_4B4499: mov 0x484(%esi),%ecx;");
    asm("loc_4B449F: cmp 0x370(%esi,%ecx,4),%eax;");
    asm("loc_4B44A6: je loc_4B44BA;");
    asm("loc_4B44A8: cmp 0x394(%esi,%ecx,4),%eax;");
    asm("loc_4B44AF: je loc_4B44BA;");
    asm("loc_4B44B1: cmp 0x3DC(%esi,%ecx,4),%eax;");
    asm("loc_4B44B8: jne loc_4B44C1;");
    asm("loc_4B44BA: movl $0x65,0x70(%edi);");
    asm("loc_4B44C1: mov 8(%edi),%edi;");
    asm("loc_4B44C4: test %edi,%edi;");
    asm("loc_4B44C6: jne loc_4B4485;");
    asm("loc_4B44C8: lea 0x394(%esi),%eax;");
    asm("loc_4B44CE: push $9;");
    asm("loc_4B44D0: push %eax;");
    asm("loc_4B44D1: call _sub_5A4B50;");
    asm("loc_4B44D6: lea 0x3DC(%esi),%ecx;");
    asm("loc_4B44DC: push $9;");
    asm("loc_4B44DE: push %ecx;");
    asm("loc_4B44DF: call _sub_5A4B50;");
    asm("loc_4B44E4: lea 0x370(%esi),%edx;");
    asm("loc_4B44EA: push $9;");
    asm("loc_4B44EC: push %edx;");
    asm("loc_4B44ED: call _sub_5A4B50;");
    asm("loc_4B44F2: add $0x18,%esp;");
    asm("loc_4B44F5: pop %edi;");
    asm("loc_4B44F6: pop %ebx;");
    asm("loc_4B44F7: mov %esi,%ecx;");
    asm("loc_4B44F9: pop %esi;");
    asm("loc_4B44FA: jmp _sub_5A0760;");
    asm("loc_4B44FF: pop %esi;");
    asm("loc_4B4500: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4510() // _sub_4B4510
{
    __DEBUG_ASM(4B4510);
    // chunk 0x4B4510 _sub_4B4510
    asm("loc_4B4510: mov %fs:0,%eax;");
    asm("loc_4B4516: push $0xFFFFFFFF;");
    asm("loc_4B4518: push $_sub_5BD0A9;");
    asm("loc_4B451D: push %eax;");
    asm("loc_4B451E: mov %esp,%fs:0;");
    asm("loc_4B4525: sub $0x1C,%esp;");
    asm("loc_4B4528: push %ebx;");
    asm("loc_4B4529: push %esi;");
    asm("loc_4B452A: push %edi;");
    asm("loc_4B452B: call _sub_4C4F70;");
    asm("loc_4B4530: fcomps _data_5C75DC;");
    asm("loc_4B4536: fnstsw %ax;");
    asm("loc_4B4538: test $0x44,%ah;");
    asm("loc_4B453B: jnp loc_4B4551;");
    asm("loc_4B453D: pop %edi;");
    asm("loc_4B453E: pop %esi;");
    asm("loc_4B453F: mov $1,%al;");
    asm("loc_4B4541: pop %ebx;");
    asm("loc_4B4542: mov 0x1C(%esp),%ecx;");
    asm("loc_4B4546: mov %ecx,%fs:0;");
    asm("loc_4B454D: add $0x28,%esp;");
    asm("loc_4B4550: ret;");
    asm("loc_4B4551: call _sub_4C3F00;");
    asm("loc_4B4556: mov 4(%eax),%ecx;");
    asm("loc_4B4559: mov (%ecx),%eax;");
    asm("loc_4B455B: cmp %ecx,%eax;");
    asm("loc_4B455D: je loc_4B4573;");
    asm("loc_4B455F: mov $0x3F800000,%edx;");
    asm("loc_4B4564: cmp %edx,0xC(%eax);");
    asm("loc_4B4567: jne loc_4B4655;");
    asm("loc_4B456D: mov (%eax),%eax;");
    asm("loc_4B456F: cmp %ecx,%eax;");
    asm("loc_4B4571: jne loc_4B4564;");
    asm("loc_4B4573: call _sub_4C4060;");
    asm("loc_4B4578: push %eax;");
    asm("loc_4B4579: lea 0x20(%esp),%ecx;");
    asm("loc_4B457D: calll *_import_5C6190;");
    asm("loc_4B4583: mov 0x20(%esp),%ecx;");
    asm("loc_4B4587: mov (%ecx),%esi;");
    asm("loc_4B4589: xor %edi,%edi;");
    asm("loc_4B458B: cmp %ecx,%esi;");
    asm("loc_4B458D: mov %edi,0x30(%esp);");
    asm("loc_4B4591: mov %ecx,%ebx;");
    asm("loc_4B4593: je loc_4B45D2;");
    asm("loc_4B4595: flds 0x18(%esi);");
    asm("loc_4B4598: fcomps _data_5C75DC;");
    asm("loc_4B459E: fnstsw %ax;");
    asm("loc_4B45A0: test $0x44,%ah;");
    asm("loc_4B45A3: jnp loc_4B45CC;");
    asm("loc_4B45A5: mov 0xC(%esi),%eax;");
    asm("loc_4B45A8: lea 0xC(%esp),%ecx;");
    asm("loc_4B45AC: push %ecx;");
    asm("loc_4B45AD: lea 0x14(%esp),%edx;");
    asm("loc_4B45B1: push %edx;");
    asm("loc_4B45B2: push %eax;");
    asm("loc_4B45B3: mov %edi,0x1C(%esp);");
    asm("loc_4B45B7: mov %edi,0x18(%esp);");
    asm("loc_4B45BB: call _sub_5835F0;");
    asm("loc_4B45C0: add $0xC,%esp;");
    asm("loc_4B45C3: cmp $1,%eax;");
    asm("loc_4B45C6: jne loc_4B461B;");
    asm("loc_4B45C8: mov 0x20(%esp),%ecx;");
    asm("loc_4B45CC: mov (%esi),%esi;");
    asm("loc_4B45CE: cmp %ebx,%esi;");
    asm("loc_4B45D0: jne loc_4B4595;");
    asm("loc_4B45D2: mov (%ecx),%esi;");
    asm("loc_4B45D4: cmp %ecx,%esi;");
    asm("loc_4B45D6: movl $0xFFFFFFFF,0x30(%esp);");
    asm("loc_4B45DE: mov %ecx,%edi;");
    asm("loc_4B45E0: je loc_4B45FE;");
    asm("loc_4B45E2: mov %esi,%eax;");
    asm("loc_4B45E4: mov (%esi),%esi;");
    asm("loc_4B45E6: push %eax;");
    asm("loc_4B45E7: lea 0x1C(%esp),%ecx;");
    asm("loc_4B45EB: push %ecx;");
    asm("loc_4B45EC: lea 0x24(%esp),%ecx;");
    asm("loc_4B45F0: calll *_import_5C6188;");
    asm("loc_4B45F6: cmp %edi,%esi;");
    asm("loc_4B45F8: jne loc_4B45E2;");
    asm("loc_4B45FA: mov 0x20(%esp),%ecx;");
    asm("loc_4B45FE: push %ecx;");
    asm("loc_4B45FF: call _sub_5B7E1D;");
    asm("loc_4B4604: add $4,%esp;");
    asm("loc_4B4607: pop %edi;");
    asm("loc_4B4608: pop %esi;");
    asm("loc_4B4609: xor %al,%al;");
    asm("loc_4B460B: pop %ebx;");
    asm("loc_4B460C: mov 0x1C(%esp),%ecx;");
    asm("loc_4B4610: mov %ecx,%fs:0;");
    asm("loc_4B4617: add $0x28,%esp;");
    asm("loc_4B461A: ret;");
    asm("loc_4B461B: mov 0x20(%esp),%eax;");
    asm("loc_4B461F: mov (%eax),%esi;");
    asm("loc_4B4621: cmp %eax,%esi;");
    asm("loc_4B4623: movl $0xFFFFFFFF,0x30(%esp);");
    asm("loc_4B462B: mov %eax,%edi;");
    asm("loc_4B462D: je loc_4B464C;");
    asm("loc_4B462F: nop;");
    asm("loc_4B4630: mov %esi,%eax;");
    asm("loc_4B4632: mov (%esi),%esi;");
    asm("loc_4B4634: push %eax;");
    asm("loc_4B4635: lea 0x18(%esp),%eax;");
    asm("loc_4B4639: push %eax;");
    asm("loc_4B463A: lea 0x24(%esp),%ecx;");
    asm("loc_4B463E: calll *_import_5C6188;");
    asm("loc_4B4644: cmp %edi,%esi;");
    asm("loc_4B4646: jne loc_4B4630;");
    asm("loc_4B4648: mov 0x20(%esp),%eax;");
    asm("loc_4B464C: push %eax;");
    asm("loc_4B464D: call _sub_5B7E1D;");
    asm("loc_4B4652: add $4,%esp;");
    asm("loc_4B4655: mov 0x28(%esp),%ecx;");
    asm("loc_4B4659: pop %edi;");
    asm("loc_4B465A: pop %esi;");
    asm("loc_4B465B: mov $1,%al;");
    asm("loc_4B465D: pop %ebx;");
    asm("loc_4B465E: mov %ecx,%fs:0;");
    asm("loc_4B4665: add $0x28,%esp;");
    asm("loc_4B4668: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4670() // _sub_4B4670
{
    __DEBUG_ASM(4B4670);
    // chunk 0x4B4670 _sub_4B4670
    asm("loc_4B4670: mov _data_66873C,%eax;");
    asm("loc_4B4675: sub $0x200,%esp;");
    asm("loc_4B467B: test %eax,%eax;");
    asm("loc_4B467D: push %esi;");
    asm("loc_4B467E: push %edi;");
    asm("loc_4B467F: mov %ecx,%esi;");
    asm("loc_4B4681: je loc_4B4786;");
    asm("loc_4B4687: call _sub_5A17B0;");
    asm("loc_4B468C: call _sub_4C4F90;");
    asm("loc_4B4691: cmp %eax,0x488(%esi);");
    asm("loc_4B4697: jne loc_4B46BC;");
    asm("loc_4B4699: call _sub_4C4FA0;");
    asm("loc_4B469E: cmp %eax,0x48C(%esi);");
    asm("loc_4B46A4: jne loc_4B46BC;");
    asm("loc_4B46A6: call _sub_4C4F70;");
    asm("loc_4B46AB: fcomps 0x490(%esi);");
    asm("loc_4B46B1: fnstsw %ax;");
    asm("loc_4B46B3: test $0x44,%ah;");
    asm("loc_4B46B6: jnp loc_4B47B2;");
    asm("loc_4B46BC: push %ebx;");
    asm("loc_4B46BD: call _sub_4C4F90;");
    asm("loc_4B46C2: mov %eax,0x488(%esi);");
    asm("loc_4B46C8: call _sub_4C4FA0;");
    asm("loc_4B46CD: mov %eax,0x48C(%esi);");
    asm("loc_4B46D3: call _sub_4C4F70;");
    asm("loc_4B46D8: fstps 0x490(%esi);");
    asm("loc_4B46DE: mov %esi,%ecx;");
    asm("loc_4B46E0: call _sub_4B39B0;");
    asm("loc_4B46E5: mov %esi,%ecx;");
    asm("loc_4B46E7: call _sub_4B3DD0;");
    asm("loc_4B46EC: mov 0x334(%esi),%edi;");
    asm("loc_4B46F2: xor %ebx,%ebx;");
    asm("loc_4B46F4: xor %ecx,%ecx;");
    asm("loc_4B46F6: xor %edx,%edx;");
    asm("loc_4B46F8: test %edi,%edi;");
    asm("loc_4B46FA: je loc_4B4722;");
    asm("loc_4B46FC: mov 0x338(%esi),%eax;");
    asm("loc_4B4702: sub %edi,%eax;");
    asm("loc_4B4704: sar $5,%eax;");
    asm("loc_4B4707: cmp %eax,%ecx;");
    asm("loc_4B4709: jae loc_4B4722;");
    asm("loc_4B470B: mov 0x334(%esi),%eax;");
    asm("loc_4B4711: add %edx,%eax;");
    asm("loc_4B4713: cmpb $0,0x1C(%eax);");
    asm("loc_4B4717: je loc_4B471C;");
    asm("loc_4B4719: add 0xC(%eax),%ebx;");
    asm("loc_4B471C: inc %ecx;");
    asm("loc_4B471D: add $0x20,%edx;");
    asm("loc_4B4720: jmp loc_4B46F8;");
    asm("loc_4B4722: push %ebx;");
    asm("loc_4B4723: lea 0x10(%esp),%eax;");
    asm("loc_4B4727: push $_data_5D0EC4;");
    asm("loc_4B472C: push %eax;");
    asm("loc_4B472D: calll *_import_5C70EC;");
    asm("loc_4B4733: mov 0x474(%esi),%ecx;");
    asm("loc_4B4739: mov (%ecx),%edx;");
    asm("loc_4B473B: add $0xC,%esp;");
    asm("loc_4B473E: push $0;");
    asm("loc_4B4740: lea 0x10(%esp),%eax;");
    asm("loc_4B4744: push %eax;");
    asm("loc_4B4745: push $0x1D;");
    asm("loc_4B4747: calll *0xA8(%edx);");
    asm("loc_4B474D: push $0x476;");
    asm("loc_4B4752: call _sub_4C4CE0;");
    asm("loc_4B4757: push %eax;");
    asm("loc_4B4758: lea 0x14(%esp),%ecx;");
    asm("loc_4B475C: push %ecx;");
    asm("loc_4B475D: call _sub_4779A0;");
    asm("loc_4B4762: mov 0x47C(%esi),%ecx;");
    asm("loc_4B4768: mov (%ecx),%edx;");
    asm("loc_4B476A: add $0xC,%esp;");
    asm("loc_4B476D: push $0;");
    asm("loc_4B476F: lea 0x10(%esp),%eax;");
    asm("loc_4B4773: push %eax;");
    asm("loc_4B4774: push $0x1D;");
    asm("loc_4B4776: calll *0xA8(%edx);");
    asm("loc_4B477C: pop %ebx;");
    asm("loc_4B477D: pop %edi;");
    asm("loc_4B477E: pop %esi;");
    asm("loc_4B477F: add $0x200,%esp;");
    asm("loc_4B4785: ret;");
    asm("loc_4B4786: test %esi,%esi;");
    asm("loc_4B4788: je loc_4B47B2;");
    asm("loc_4B478A: mov 0xC(%esi),%eax;");
    asm("loc_4B478D: test %eax,%eax;");
    asm("loc_4B478F: je loc_4B47A3;");
    asm("loc_4B4791: mov 8(%eax),%edi;");
    asm("loc_4B4794: push %eax;");
    asm("loc_4B4795: call _sub_43D2A0;");
    asm("loc_4B479A: add $4,%esp;");
    asm("loc_4B479D: test %edi,%edi;");
    asm("loc_4B479F: mov %edi,%eax;");
    asm("loc_4B47A1: jne loc_4B4791;");
    asm("loc_4B47A3: mov (%esi),%edx;");
    asm("loc_4B47A5: mov %esi,%ecx;");
    asm("loc_4B47A7: calll *0x28(%edx);");
    asm("loc_4B47AA: mov (%esi),%eax;");
    asm("loc_4B47AC: push $1;");
    asm("loc_4B47AE: mov %esi,%ecx;");
    asm("loc_4B47B0: calll *(%eax);");
    asm("loc_4B47B2: pop %edi;");
    asm("loc_4B47B3: pop %esi;");
    asm("loc_4B47B4: add $0x200,%esp;");
    asm("loc_4B47BA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B47C0() // _sub_4B47C0
{
    __DEBUG_ASM(4B47C0);
    // chunk 0x4B47C0 _sub_4B47C0
    asm("loc_4B47C0: cmpl $0x10,4(%esp);");
    asm("loc_4B47C5: jne loc_4B4820;");
    asm("loc_4B47C7: mov -0x2C0(%ecx),%dl;");
    asm("loc_4B47CD: push %esi;");
    asm("loc_4B47CE: lea -0x32C(%ecx),%esi;");
    asm("loc_4B47D4: and $0xFC,%dl;");
    asm("loc_4B47D7: push $0;");
    asm("loc_4B47D9: push %esi;");
    asm("loc_4B47DA: mov %dl,0x6C(%esi);");
    asm("loc_4B47DD: call _sub_59DD00;");
    asm("loc_4B47E2: push $0;");
    asm("loc_4B47E4: call _sub_4424F0;");
    asm("loc_4B47E9: add $0xC,%esp;");
    asm("loc_4B47EC: test %esi,%esi;");
    asm("loc_4B47EE: je loc_4B481A;");
    asm("loc_4B47F0: mov 0xC(%esi),%eax;");
    asm("loc_4B47F3: test %eax,%eax;");
    asm("loc_4B47F5: je loc_4B480B;");
    asm("loc_4B47F7: push %edi;");
    asm("loc_4B47F8: mov 8(%eax),%edi;");
    asm("loc_4B47FB: push %eax;");
    asm("loc_4B47FC: call _sub_43D2A0;");
    asm("loc_4B4801: add $4,%esp;");
    asm("loc_4B4804: test %edi,%edi;");
    asm("loc_4B4806: mov %edi,%eax;");
    asm("loc_4B4808: jne loc_4B47F8;");
    asm("loc_4B480A: pop %edi;");
    asm("loc_4B480B: mov (%esi),%eax;");
    asm("loc_4B480D: mov %esi,%ecx;");
    asm("loc_4B480F: calll *0x28(%eax);");
    asm("loc_4B4812: mov (%esi),%edx;");
    asm("loc_4B4814: push $1;");
    asm("loc_4B4816: mov %esi,%ecx;");
    asm("loc_4B4818: calll *(%edx);");
    asm("loc_4B481A: mov $1,%al;");
    asm("loc_4B481C: pop %esi;");
    asm("loc_4B481D: ret $4;");
    asm("loc_4B4820: xor %al,%al;");
    asm("loc_4B4822: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4830() // _sub_4B4830
{
    __DEBUG_ASM(4B4830);
    // chunk 0x4B4830 _sub_4B4830
    asm("loc_4B4830: push %ebx;");
    asm("loc_4B4831: mov %ecx,%ebx;");
    asm("loc_4B4833: xor %eax,%eax;");
    asm("loc_4B4835: push %esi;");
    asm("loc_4B4836: mov 0xC(%esp),%esi;");
    asm("loc_4B483A: cmp %eax,%esi;");
    asm("loc_4B483C: mov %eax,8(%ebx);");
    asm("loc_4B483F: mov %al,0xC(%ebx);");
    asm("loc_4B4842: movl $_off_5CB554,(%ebx);");
    asm("loc_4B4848: mov %eax,4(%ebx);");
    asm("loc_4B484B: jne loc_4B4852;");
    asm("loc_4B484D: mov %al,0xC(%ebx);");
    asm("loc_4B4850: jmp loc_4B4887;");
    asm("loc_4B4852: push %ebp;");
    asm("loc_4B4853: or $0xFFFFFFFF,%ecx;");
    asm("loc_4B4856: xor %eax,%eax;");
    asm("loc_4B4858: push %edi;");
    asm("loc_4B4859: mov %esi,%edi;");
    asm("loc_4B485B: repne scas (%edi),%al;");
    asm("loc_4B485D: not %ecx;");
    asm("loc_4B485F: dec %ecx;");
    asm("loc_4B4860: mov %ecx,%eax;");
    asm("loc_4B4862: cmp $0x20,%eax;");
    asm("loc_4B4865: lea 0xC(%ebx),%ebp;");
    asm("loc_4B4868: jb loc_4B486F;");
    asm("loc_4B486A: mov $0x1F,%eax;");
    asm("loc_4B486F: mov %eax,%ecx;");
    asm("loc_4B4871: mov %ecx,%edx;");
    asm("loc_4B4873: shr $2,%ecx;");
    asm("loc_4B4876: mov %ebp,%edi;");
    asm("loc_4B4878: rep movsl (%esi),(%edi);");
    asm("loc_4B487A: mov %edx,%ecx;");
    asm("loc_4B487C: and $3,%ecx;");
    asm("loc_4B487F: rep movsb (%esi),(%edi);");
    asm("loc_4B4881: pop %edi;");
    asm("loc_4B4882: movb $0,(%eax,%ebp);");
    asm("loc_4B4886: pop %ebp;");
    asm("loc_4B4887: push %ebx;");
    asm("loc_4B4888: mov %eax,8(%ebx);");
    asm("loc_4B488B: call _sub_59DAB0;");
    asm("loc_4B4890: add $4,%esp;");
    asm("loc_4B4893: pop %esi;");
    asm("loc_4B4894: movl $_off_5D5434,(%ebx);");
    asm("loc_4B489A: mov %ebx,%eax;");
    asm("loc_4B489C: pop %ebx;");
    asm("loc_4B489D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B48A0() // _sub_4B48A0
{
    __DEBUG_ASM(4B48A0);
    // chunk 0x4B48A0 _sub_4B48A0
    asm("loc_4B48A0: push $0xFFFFFFFF;");
    asm("loc_4B48A2: push $_sub_5BD0CB;");
    asm("loc_4B48A7: mov %fs:0,%eax;");
    asm("loc_4B48AD: push %eax;");
    asm("loc_4B48AE: mov %esp,%fs:0;");
    asm("loc_4B48B5: push %ecx;");
    asm("loc_4B48B6: push %ebx;");
    asm("loc_4B48B7: push %ebp;");
    asm("loc_4B48B8: push %esi;");
    asm("loc_4B48B9: push %edi;");
    asm("loc_4B48BA: push $0x494;");
    asm("loc_4B48BF: mov %ecx,%ebp;");
    asm("loc_4B48C1: call _sub_5B7E84;");
    asm("loc_4B48C6: mov %eax,%esi;");
    asm("loc_4B48C8: add $4,%esp;");
    asm("loc_4B48CB: mov %esi,0x10(%esp);");
    asm("loc_4B48CF: xor %edi,%edi;");
    asm("loc_4B48D1: or $0xFFFFFFFF,%ebx;");
    asm("loc_4B48D4: cmp %edi,%esi;");
    asm("loc_4B48D6: mov %edi,0x1C(%esp);");
    asm("loc_4B48DA: je loc_4B4950;");
    asm("loc_4B48DC: mov %esi,%ecx;");
    asm("loc_4B48DE: call _sub_59F860;");
    asm("loc_4B48E3: mov 0x28(%esp),%al;");
    asm("loc_4B48E7: movl $_off_5CBED8,0x32C(%esi);");
    asm("loc_4B48F1: mov %al,0x330(%esi);");
    asm("loc_4B48F7: mov %edi,0x334(%esi);");
    asm("loc_4B48FD: mov %edi,0x338(%esi);");
    asm("loc_4B4903: mov %edi,0x33C(%esi);");
    asm("loc_4B4909: movl $_off_5D51E4,(%esi);");
    asm("loc_4B490F: movl $_off_5D51D4,0x7C(%esi);");
    asm("loc_4B4916: movl $_off_5D51CC,0x32C(%esi);");
    asm("loc_4B4920: mov %edi,0x344(%esi);");
    asm("loc_4B4926: mov %edi,0x348(%esi);");
    asm("loc_4B492C: mov %edi,0x340(%esi);");
    asm("loc_4B4932: mov %ebx,0x484(%esi);");
    asm("loc_4B4938: mov %ebx,0x488(%esi);");
    asm("loc_4B493E: mov %ebx,0x48C(%esi);");
    asm("loc_4B4944: movl $0xBF800000,0x490(%esi);");
    asm("loc_4B494E: jmp loc_4B4952;");
    asm("loc_4B4950: xor %esi,%esi;");
    asm("loc_4B4952: mov 0x28(%esp),%eax;");
    asm("loc_4B4956: mov 0x24(%esp),%ecx;");
    asm("loc_4B495A: mov (%esi),%edx;");
    asm("loc_4B495C: push %eax;");
    asm("loc_4B495D: push %ecx;");
    asm("loc_4B495E: add $0xC,%ebp;");
    asm("loc_4B4961: mov %esi,%ecx;");
    asm("loc_4B4963: mov %ebx,0x24(%esp);");
    asm("loc_4B4967: mov %ebp,0x10(%esi);");
    asm("loc_4B496A: calll *0x24(%edx);");
    asm("loc_4B496D: test %al,%al;");
    asm("loc_4B496F: jne loc_4B497D;");
    asm("loc_4B4971: mov (%esi),%edx;");
    asm("loc_4B4973: push $1;");
    asm("loc_4B4975: mov %esi,%ecx;");
    asm("loc_4B4977: calll *(%edx);");
    asm("loc_4B4979: xor %eax,%eax;");
    asm("loc_4B497B: jmp loc_4B497F;");
    asm("loc_4B497D: mov %esi,%eax;");
    asm("loc_4B497F: mov 0x14(%esp),%ecx;");
    asm("loc_4B4983: pop %edi;");
    asm("loc_4B4984: pop %esi;");
    asm("loc_4B4985: pop %ebp;");
    asm("loc_4B4986: pop %ebx;");
    asm("loc_4B4987: mov %ecx,%fs:0;");
    asm("loc_4B498E: add $0x10,%esp;");
    asm("loc_4B4991: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B49A0() // _sub_4B49A0
{
    __DEBUG_ASM(4B49A0);
    // chunk 0x4B49A0 _sub_4B49A0
    asm("loc_4B49A0: sub $8,%esp;");
    asm("loc_4B49A3: push %ebx;");
    asm("loc_4B49A4: mov %ecx,%ebx;");
    asm("loc_4B49A6: mov 4(%ebx),%edx;");
    asm("loc_4B49A9: mov 0xC(%ebx),%ecx;");
    asm("loc_4B49AC: push %ebp;");
    asm("loc_4B49AD: mov 0x14(%esp),%ebp;");
    asm("loc_4B49B1: mov %ebp,%eax;");
    asm("loc_4B49B3: sub %edx,%eax;");
    asm("loc_4B49B5: sar $5,%eax;");
    asm("loc_4B49B8: mov %eax,0xC(%esp);");
    asm("loc_4B49BC: mov 8(%ebx),%eax;");
    asm("loc_4B49BF: sub %eax,%ecx;");
    asm("loc_4B49C1: sar $5,%ecx;");
    asm("loc_4B49C4: cmp $1,%ecx;");
    asm("loc_4B49C7: push %esi;");
    asm("loc_4B49C8: push %edi;");
    asm("loc_4B49C9: jae loc_4B4A88;");
    asm("loc_4B49CF: test %edx,%edx;");
    asm("loc_4B49D1: je loc_4B49DF;");
    asm("loc_4B49D3: mov %eax,%ecx;");
    asm("loc_4B49D5: sub %edx,%ecx;");
    asm("loc_4B49D7: sar $5,%ecx;");
    asm("loc_4B49DA: cmp $1,%ecx;");
    asm("loc_4B49DD: ja loc_4B49E4;");
    asm("loc_4B49DF: mov $1,%ecx;");
    asm("loc_4B49E4: test %edx,%edx;");
    asm("loc_4B49E6: jne loc_4B49EC;");
    asm("loc_4B49E8: xor %eax,%eax;");
    asm("loc_4B49EA: jmp loc_4B49F1;");
    asm("loc_4B49EC: sub %edx,%eax;");
    asm("loc_4B49EE: sar $5,%eax;");
    asm("loc_4B49F1: add %ecx,%eax;");
    asm("loc_4B49F3: test %eax,%eax;");
    asm("loc_4B49F5: mov %eax,0x1C(%esp);");
    asm("loc_4B49F9: jge loc_4B49FD;");
    asm("loc_4B49FB: xor %eax,%eax;");
    asm("loc_4B49FD: shl $5,%eax;");
    asm("loc_4B4A00: push %eax;");
    asm("loc_4B4A01: call _sub_5B7E84;");
    asm("loc_4B4A06: mov 4(%ebx),%esi;");
    asm("loc_4B4A09: add $4,%esp;");
    asm("loc_4B4A0C: cmp %ebp,%esi;");
    asm("loc_4B4A0E: mov %eax,0x10(%esp);");
    asm("loc_4B4A12: mov %eax,%edi;");
    asm("loc_4B4A14: je loc_4B4A2A;");
    asm("loc_4B4A16: push %esi;");
    asm("loc_4B4A17: push %edi;");
    asm("loc_4B4A18: call _sub_4B4EC0;");
    asm("loc_4B4A1D: add $0x20,%esi;");
    asm("loc_4B4A20: add $8,%esp;");
    asm("loc_4B4A23: add $0x20,%edi;");
    asm("loc_4B4A26: cmp %ebp,%esi;");
    asm("loc_4B4A28: jne loc_4B4A16;");
    asm("loc_4B4A2A: mov 0x20(%esp),%edx;");
    asm("loc_4B4A2E: push %edx;");
    asm("loc_4B4A2F: push %edi;");
    asm("loc_4B4A30: call _sub_4B4EC0;");
    asm("loc_4B4A35: mov 8(%ebx),%eax;");
    asm("loc_4B4A38: add $8,%esp;");
    asm("loc_4B4A3B: add $0x20,%edi;");
    asm("loc_4B4A3E: push %edi;");
    asm("loc_4B4A3F: push %eax;");
    asm("loc_4B4A40: push %ebp;");
    asm("loc_4B4A41: mov %ebx,%ecx;");
    asm("loc_4B4A43: call _sub_4B4E50;");
    asm("loc_4B4A48: mov 8(%ebx),%ecx;");
    asm("loc_4B4A4B: mov 4(%ebx),%edx;");
    asm("loc_4B4A4E: push %ecx;");
    asm("loc_4B4A4F: push %edx;");
    asm("loc_4B4A50: mov %ebx,%ecx;");
    asm("loc_4B4A52: call _sub_53AAA0;");
    asm("loc_4B4A57: mov 4(%ebx),%eax;");
    asm("loc_4B4A5A: push %eax;");
    asm("loc_4B4A5B: call _sub_5B7E1D;");
    asm("loc_4B4A60: mov 0x20(%esp),%eax;");
    asm("loc_4B4A64: mov 0x14(%esp),%esi;");
    asm("loc_4B4A68: shl $5,%eax;");
    asm("loc_4B4A6B: add %esi,%eax;");
    asm("loc_4B4A6D: add $4,%esp;");
    asm("loc_4B4A70: mov %ebx,%ecx;");
    asm("loc_4B4A72: mov %eax,0xC(%ebx);");
    asm("loc_4B4A75: call _sub_587380;");
    asm("loc_4B4A7A: inc %eax;");
    asm("loc_4B4A7B: shl $5,%eax;");
    asm("loc_4B4A7E: add %esi,%eax;");
    asm("loc_4B4A80: mov %esi,4(%ebx);");
    asm("loc_4B4A83: jmp loc_4B4B2A;");
    asm("loc_4B4A88: mov %eax,%ecx;");
    asm("loc_4B4A8A: sub %ebp,%ecx;");
    asm("loc_4B4A8C: sar $5,%ecx;");
    asm("loc_4B4A8F: cmp $1,%ecx;");
    asm("loc_4B4A92: mov %ebx,%ecx;");
    asm("loc_4B4A94: jae loc_4B4ADD;");
    asm("loc_4B4A96: lea 0x20(%ebp),%edx;");
    asm("loc_4B4A99: push %edx;");
    asm("loc_4B4A9A: push %eax;");
    asm("loc_4B4A9B: push %ebp;");
    asm("loc_4B4A9C: call _sub_4B4E50;");
    asm("loc_4B4AA1: mov 8(%ebx),%eax;");
    asm("loc_4B4AA4: mov 0x20(%esp),%ecx;");
    asm("loc_4B4AA8: push %ecx;");
    asm("loc_4B4AA9: mov %eax,%edx;");
    asm("loc_4B4AAB: sub %ebp,%edx;");
    asm("loc_4B4AAD: sar $5,%edx;");
    asm("loc_4B4AB0: mov $1,%ecx;");
    asm("loc_4B4AB5: sub %edx,%ecx;");
    asm("loc_4B4AB7: push %ecx;");
    asm("loc_4B4AB8: push %eax;");
    asm("loc_4B4AB9: mov %ebx,%ecx;");
    asm("loc_4B4ABB: call _sub_4B4E90;");
    asm("loc_4B4AC0: mov 8(%ebx),%eax;");
    asm("loc_4B4AC3: cmp %eax,%ebp;");
    asm("loc_4B4AC5: je loc_4B4B24;");
    asm("loc_4B4AC7: mov 0x20(%esp),%esi;");
    asm("loc_4B4ACB: mov %ebp,%edi;");
    asm("loc_4B4ACD: add $0x20,%ebp;");
    asm("loc_4B4AD0: cmp %eax,%ebp;");
    asm("loc_4B4AD2: mov $8,%ecx;");
    asm("loc_4B4AD7: rep movsl (%esi),(%edi);");
    asm("loc_4B4AD9: jne loc_4B4AC7;");
    asm("loc_4B4ADB: jmp loc_4B4B24;");
    asm("loc_4B4ADD: push %eax;");
    asm("loc_4B4ADE: push %eax;");
    asm("loc_4B4ADF: add $0xFFFFFFE0,%eax;");
    asm("loc_4B4AE2: push %eax;");
    asm("loc_4B4AE3: call _sub_4B4E50;");
    asm("loc_4B4AE8: mov 8(%ebx),%edx;");
    asm("loc_4B4AEB: lea -0x20(%edx),%eax;");
    asm("loc_4B4AEE: cmp %eax,%ebp;");
    asm("loc_4B4AF0: je loc_4B4B07;");
    asm("loc_4B4AF2: sub $0x20,%eax;");
    asm("loc_4B4AF5: sub $0x20,%edx;");
    asm("loc_4B4AF8: cmp %ebp,%eax;");
    asm("loc_4B4AFA: mov $8,%ecx;");
    asm("loc_4B4AFF: mov %eax,%esi;");
    asm("loc_4B4B01: mov %edx,%edi;");
    asm("loc_4B4B03: rep movsl (%esi),(%edi);");
    asm("loc_4B4B05: jne loc_4B4AF2;");
    asm("loc_4B4B07: lea 0x20(%ebp),%eax;");
    asm("loc_4B4B0A: cmp %eax,%ebp;");
    asm("loc_4B4B0C: je loc_4B4B24;");
    asm("loc_4B4B0E: mov 0x20(%esp),%edx;");
    asm("loc_4B4B12: mov %ebp,%edi;");
    asm("loc_4B4B14: add $0x20,%ebp;");
    asm("loc_4B4B17: cmp %eax,%ebp;");
    asm("loc_4B4B19: mov $8,%ecx;");
    asm("loc_4B4B1E: mov %edx,%esi;");
    asm("loc_4B4B20: rep movsl (%esi),(%edi);");
    asm("loc_4B4B22: jne loc_4B4B12;");
    asm("loc_4B4B24: mov 8(%ebx),%eax;");
    asm("loc_4B4B27: add $0x20,%eax;");
    asm("loc_4B4B2A: mov 4(%ebx),%ecx;");
    asm("loc_4B4B2D: mov %eax,8(%ebx);");
    asm("loc_4B4B30: mov 0x14(%esp),%eax;");
    asm("loc_4B4B34: pop %edi;");
    asm("loc_4B4B35: pop %esi;");
    asm("loc_4B4B36: shl $5,%eax;");
    asm("loc_4B4B39: pop %ebp;");
    asm("loc_4B4B3A: add %ecx,%eax;");
    asm("loc_4B4B3C: pop %ebx;");
    asm("loc_4B4B3D: add $8,%esp;");
    asm("loc_4B4B40: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4B50() // _sub_4B4B50
{
    __DEBUG_ASM(4B4B50);
    // chunk 0x4B4B50 _sub_4B4B50
    asm("loc_4B4B50: mov 8(%esp),%edx;");
    asm("loc_4B4B54: push %ebx;");
    asm("loc_4B4B55: mov 8(%esp),%ebx;");
    asm("loc_4B4B59: mov %ecx,%eax;");
    asm("loc_4B4B5B: push %ebp;");
    asm("loc_4B4B5C: mov 8(%eax),%ebp;");
    asm("loc_4B4B5F: cmp %ebp,%edx;");
    asm("loc_4B4B61: je loc_4B4B88;");
    asm("loc_4B4B63: push %esi;");
    asm("loc_4B4B64: push %edi;");
    asm("loc_4B4B65: mov %edx,%esi;");
    asm("loc_4B4B67: mov %ebx,%edi;");
    asm("loc_4B4B69: add $0x20,%edx;");
    asm("loc_4B4B6C: mov $8,%ecx;");
    asm("loc_4B4B71: add $0x20,%ebx;");
    asm("loc_4B4B74: cmp %ebp,%edx;");
    asm("loc_4B4B76: rep movsl (%esi),(%edi);");
    asm("loc_4B4B78: jne loc_4B4B65;");
    asm("loc_4B4B7A: pop %edi;");
    asm("loc_4B4B7B: pop %esi;");
    asm("loc_4B4B7C: mov %ebx,8(%eax);");
    asm("loc_4B4B7F: mov 0xC(%esp),%eax;");
    asm("loc_4B4B83: pop %ebp;");
    asm("loc_4B4B84: pop %ebx;");
    asm("loc_4B4B85: ret $8;");
    asm("loc_4B4B88: mov %ebx,8(%eax);");
    asm("loc_4B4B8B: pop %ebp;");
    asm("loc_4B4B8C: mov %ebx,%eax;");
    asm("loc_4B4B8E: pop %ebx;");
    asm("loc_4B4B8F: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4BA0() // _sub_4B4BA0
{
    __DEBUG_ASM(4B4BA0);
    // chunk 0x4B4BA0 _sub_4B4BA0
    asm("loc_4B4BA0: sub $0xC,%esp;");
    asm("loc_4B4BA3: push %ebx;");
    asm("loc_4B4BA4: push %ebp;");
    asm("loc_4B4BA5: push %esi;");
    asm("loc_4B4BA6: mov 0x20(%esp),%esi;");
    asm("loc_4B4BAA: push %edi;");
    asm("loc_4B4BAB: mov %ecx,%edi;");
    asm("loc_4B4BAD: mov 8(%edi),%eax;");
    asm("loc_4B4BB0: mov 0xC(%edi),%ecx;");
    asm("loc_4B4BB3: sub %eax,%ecx;");
    asm("loc_4B4BB5: sar $5,%ecx;");
    asm("loc_4B4BB8: cmp %esi,%ecx;");
    asm("loc_4B4BBA: mov %edi,0x10(%esp);");
    asm("loc_4B4BBE: jae loc_4B4CFC;");
    asm("loc_4B4BC4: mov 4(%edi),%edx;");
    asm("loc_4B4BC7: test %edx,%edx;");
    asm("loc_4B4BC9: je loc_4B4BD6;");
    asm("loc_4B4BCB: mov %eax,%ecx;");
    asm("loc_4B4BCD: sub %edx,%ecx;");
    asm("loc_4B4BCF: sar $5,%ecx;");
    asm("loc_4B4BD2: cmp %ecx,%esi;");
    asm("loc_4B4BD4: jb loc_4B4BD8;");
    asm("loc_4B4BD6: mov %esi,%ecx;");
    asm("loc_4B4BD8: test %edx,%edx;");
    asm("loc_4B4BDA: jne loc_4B4BE0;");
    asm("loc_4B4BDC: xor %eax,%eax;");
    asm("loc_4B4BDE: jmp loc_4B4BE5;");
    asm("loc_4B4BE0: sub %edx,%eax;");
    asm("loc_4B4BE2: sar $5,%eax;");
    asm("loc_4B4BE5: add %ecx,%eax;");
    asm("loc_4B4BE7: test %eax,%eax;");
    asm("loc_4B4BE9: mov %eax,0x14(%esp);");
    asm("loc_4B4BED: jge loc_4B4BF1;");
    asm("loc_4B4BEF: xor %eax,%eax;");
    asm("loc_4B4BF1: shl $5,%eax;");
    asm("loc_4B4BF4: push %eax;");
    asm("loc_4B4BF5: call _sub_5B7E84;");
    asm("loc_4B4BFA: mov 0x24(%esp),%ecx;");
    asm("loc_4B4BFE: mov %eax,0x1C(%esp);");
    asm("loc_4B4C02: mov %eax,%edx;");
    asm("loc_4B4C04: mov 4(%edi),%eax;");
    asm("loc_4B4C07: add $4,%esp;");
    asm("loc_4B4C0A: cmp %ecx,%eax;");
    asm("loc_4B4C0C: je loc_4B4C35;");
    asm("loc_4B4C0E: mov %edi,%edi;");
    asm("loc_4B4C10: test %edx,%edx;");
    asm("loc_4B4C12: je loc_4B4C27;");
    asm("loc_4B4C14: mov $8,%ecx;");
    asm("loc_4B4C19: mov %eax,%esi;");
    asm("loc_4B4C1B: mov %edx,%edi;");
    asm("loc_4B4C1D: rep movsl (%esi),(%edi);");
    asm("loc_4B4C1F: mov 0x24(%esp),%esi;");
    asm("loc_4B4C23: mov 0x10(%esp),%edi;");
    asm("loc_4B4C27: mov 0x20(%esp),%ecx;");
    asm("loc_4B4C2B: add $0x20,%eax;");
    asm("loc_4B4C2E: add $0x20,%edx;");
    asm("loc_4B4C31: cmp %ecx,%eax;");
    asm("loc_4B4C33: jne loc_4B4C10;");
    asm("loc_4B4C35: test %esi,%esi;");
    asm("loc_4B4C37: mov %edx,%eax;");
    asm("loc_4B4C39: jbe loc_4B4C5E;");
    asm("loc_4B4C3B: mov 0x28(%esp),%ebp;");
    asm("loc_4B4C3F: mov %esi,%ebx;");
    asm("loc_4B4C41: test %eax,%eax;");
    asm("loc_4B4C43: je loc_4B4C58;");
    asm("loc_4B4C45: mov $8,%ecx;");
    asm("loc_4B4C4A: mov %ebp,%esi;");
    asm("loc_4B4C4C: mov %eax,%edi;");
    asm("loc_4B4C4E: rep movsl (%esi),(%edi);");
    asm("loc_4B4C50: mov 0x24(%esp),%esi;");
    asm("loc_4B4C54: mov 0x10(%esp),%edi;");
    asm("loc_4B4C58: add $0x20,%eax;");
    asm("loc_4B4C5B: dec %ebx;");
    asm("loc_4B4C5C: jne loc_4B4C41;");
    asm("loc_4B4C5E: mov 8(%edi),%ebp;");
    asm("loc_4B4C61: mov 0x20(%esp),%eax;");
    asm("loc_4B4C65: mov %esi,%ecx;");
    asm("loc_4B4C67: shl $5,%ecx;");
    asm("loc_4B4C6A: cmp %ebp,%eax;");
    asm("loc_4B4C6C: lea (%ecx,%edx),%ebx;");
    asm("loc_4B4C6F: je loc_4B4CA1;");
    asm("loc_4B4C71: mov %ebx,%eax;");
    asm("loc_4B4C73: sub %ecx,%eax;");
    asm("loc_4B4C75: mov 0x20(%esp),%ecx;");
    asm("loc_4B4C79: sub %edx,%eax;");
    asm("loc_4B4C7B: add %ecx,%eax;");
    asm("loc_4B4C7D: lea (%ecx),%ecx;");
    asm("loc_4B4C80: test %ebx,%ebx;");
    asm("loc_4B4C82: je loc_4B4C97;");
    asm("loc_4B4C84: mov $8,%ecx;");
    asm("loc_4B4C89: mov %eax,%esi;");
    asm("loc_4B4C8B: mov %ebx,%edi;");
    asm("loc_4B4C8D: rep movsl (%esi),(%edi);");
    asm("loc_4B4C8F: mov 0x24(%esp),%esi;");
    asm("loc_4B4C93: mov 0x10(%esp),%edi;");
    asm("loc_4B4C97: add $0x20,%eax;");
    asm("loc_4B4C9A: add $0x20,%ebx;");
    asm("loc_4B4C9D: cmp %ebp,%eax;");
    asm("loc_4B4C9F: jne loc_4B4C80;");
    asm("loc_4B4CA1: mov 4(%edi),%edx;");
    asm("loc_4B4CA4: push %edx;");
    asm("loc_4B4CA5: call _sub_5B7E1D;");
    asm("loc_4B4CAA: mov 0x18(%esp),%eax;");
    asm("loc_4B4CAE: mov 0x1C(%esp),%edx;");
    asm("loc_4B4CB2: mov 4(%edi),%ecx;");
    asm("loc_4B4CB5: shl $5,%eax;");
    asm("loc_4B4CB8: add %edx,%eax;");
    asm("loc_4B4CBA: add $4,%esp;");
    asm("loc_4B4CBD: test %ecx,%ecx;");
    asm("loc_4B4CBF: mov %eax,0xC(%edi);");
    asm("loc_4B4CC2: jne loc_4B4CDD;");
    asm("loc_4B4CC4: xor %eax,%eax;");
    asm("loc_4B4CC6: mov %esi,%eax;");
    asm("loc_4B4CC8: shl $5,%eax;");
    asm("loc_4B4CCB: add %edx,%eax;");
    asm("loc_4B4CCD: mov %edx,4(%edi);");
    asm("loc_4B4CD0: mov %eax,8(%edi);");
    asm("loc_4B4CD3: pop %edi;");
    asm("loc_4B4CD4: pop %esi;");
    asm("loc_4B4CD5: pop %ebp;");
    asm("loc_4B4CD6: pop %ebx;");
    asm("loc_4B4CD7: add $0xC,%esp;");
    asm("loc_4B4CDA: ret $0xC;");
    asm("loc_4B4CDD: mov 8(%edi),%eax;");
    asm("loc_4B4CE0: sub %ecx,%eax;");
    asm("loc_4B4CE2: sar $5,%eax;");
    asm("loc_4B4CE5: add %esi,%eax;");
    asm("loc_4B4CE7: shl $5,%eax;");
    asm("loc_4B4CEA: add %edx,%eax;");
    asm("loc_4B4CEC: mov %edx,4(%edi);");
    asm("loc_4B4CEF: mov %eax,8(%edi);");
    asm("loc_4B4CF2: pop %edi;");
    asm("loc_4B4CF3: pop %esi;");
    asm("loc_4B4CF4: pop %ebp;");
    asm("loc_4B4CF5: pop %ebx;");
    asm("loc_4B4CF6: add $0xC,%esp;");
    asm("loc_4B4CF9: ret $0xC;");
    asm("loc_4B4CFC: mov 0x20(%esp),%ebp;");
    asm("loc_4B4D00: mov %eax,%ecx;");
    asm("loc_4B4D02: sub %ebp,%ecx;");
    asm("loc_4B4D04: sar $5,%ecx;");
    asm("loc_4B4D07: cmp %esi,%ecx;");
    asm("loc_4B4D09: jae loc_4B4DAC;");
    asm("loc_4B4D0F: mov %esi,%ecx;");
    asm("loc_4B4D11: shl $5,%ecx;");
    asm("loc_4B4D14: cmp %eax,%ebp;");
    asm("loc_4B4D16: mov %ecx,0x20(%esp);");
    asm("loc_4B4D1A: lea (%ecx,%ebp),%edx;");
    asm("loc_4B4D1D: je loc_4B4D44;");
    asm("loc_4B4D1F: mov %edx,%ebx;");
    asm("loc_4B4D21: sub %ecx,%ebx;");
    asm("loc_4B4D23: test %edx,%edx;");
    asm("loc_4B4D25: je loc_4B4D3A;");
    asm("loc_4B4D27: mov $8,%ecx;");
    asm("loc_4B4D2C: mov %ebx,%esi;");
    asm("loc_4B4D2E: mov %edx,%edi;");
    asm("loc_4B4D30: rep movsl (%esi),(%edi);");
    asm("loc_4B4D32: mov 0x24(%esp),%esi;");
    asm("loc_4B4D36: mov 0x10(%esp),%edi;");
    asm("loc_4B4D3A: add $0x20,%ebx;");
    asm("loc_4B4D3D: add $0x20,%edx;");
    asm("loc_4B4D40: cmp %eax,%ebx;");
    asm("loc_4B4D42: jne loc_4B4D23;");
    asm("loc_4B4D44: mov 8(%edi),%eax;");
    asm("loc_4B4D47: mov 0x28(%esp),%ebx;");
    asm("loc_4B4D4B: mov %eax,%edx;");
    asm("loc_4B4D4D: sub %ebp,%edx;");
    asm("loc_4B4D4F: sar $5,%edx;");
    asm("loc_4B4D52: sub %edx,%esi;");
    asm("loc_4B4D54: je loc_4B4D71;");
    asm("loc_4B4D56: mov %esi,%edx;");
    asm("loc_4B4D58: test %eax,%eax;");
    asm("loc_4B4D5A: je loc_4B4D6B;");
    asm("loc_4B4D5C: mov $8,%ecx;");
    asm("loc_4B4D61: mov %ebx,%esi;");
    asm("loc_4B4D63: mov %eax,%edi;");
    asm("loc_4B4D65: rep movsl (%esi),(%edi);");
    asm("loc_4B4D67: mov 0x10(%esp),%edi;");
    asm("loc_4B4D6B: add $0x20,%eax;");
    asm("loc_4B4D6E: dec %edx;");
    asm("loc_4B4D6F: jne loc_4B4D58;");
    asm("loc_4B4D71: mov 8(%edi),%edx;");
    asm("loc_4B4D74: cmp %edx,%ebp;");
    asm("loc_4B4D76: mov %ebp,%eax;");
    asm("loc_4B4D78: je loc_4B4D96;");
    asm("loc_4B4D7A: lea (%ebx),%ebx;");
    asm("loc_4B4D80: mov %eax,%edi;");
    asm("loc_4B4D82: add $0x20,%eax;");
    asm("loc_4B4D85: cmp %edx,%eax;");
    asm("loc_4B4D87: mov $8,%ecx;");
    asm("loc_4B4D8C: mov %ebx,%esi;");
    asm("loc_4B4D8E: rep movsl (%esi),(%edi);");
    asm("loc_4B4D90: jne loc_4B4D80;");
    asm("loc_4B4D92: mov 0x10(%esp),%edi;");
    asm("loc_4B4D96: mov 8(%edi),%ecx;");
    asm("loc_4B4D99: mov 0x20(%esp),%eax;");
    asm("loc_4B4D9D: add %eax,%ecx;");
    asm("loc_4B4D9F: mov %ecx,8(%edi);");
    asm("loc_4B4DA2: pop %edi;");
    asm("loc_4B4DA3: pop %esi;");
    asm("loc_4B4DA4: pop %ebp;");
    asm("loc_4B4DA5: pop %ebx;");
    asm("loc_4B4DA6: add $0xC,%esp;");
    asm("loc_4B4DA9: ret $0xC;");
    asm("loc_4B4DAC: test %esi,%esi;");
    asm("loc_4B4DAE: jbe loc_4B4E42;");
    asm("loc_4B4DB4: shl $5,%esi;");
    asm("loc_4B4DB7: mov %eax,%edx;");
    asm("loc_4B4DB9: sub %esi,%edx;");
    asm("loc_4B4DBB: cmp %eax,%edx;");
    asm("loc_4B4DBD: mov %eax,%ebx;");
    asm("loc_4B4DBF: mov %esi,0x20(%esp);");
    asm("loc_4B4DC3: je loc_4B4DE6;");
    asm("loc_4B4DC5: test %ebx,%ebx;");
    asm("loc_4B4DC7: je loc_4B4DD8;");
    asm("loc_4B4DC9: mov $8,%ecx;");
    asm("loc_4B4DCE: mov %edx,%esi;");
    asm("loc_4B4DD0: mov %ebx,%edi;");
    asm("loc_4B4DD2: rep movsl (%esi),(%edi);");
    asm("loc_4B4DD4: mov 0x10(%esp),%edi;");
    asm("loc_4B4DD8: add $0x20,%edx;");
    asm("loc_4B4DDB: add $0x20,%ebx;");
    asm("loc_4B4DDE: cmp %eax,%edx;");
    asm("loc_4B4DE0: jne loc_4B4DC5;");
    asm("loc_4B4DE2: mov 0x20(%esp),%esi;");
    asm("loc_4B4DE6: mov 8(%edi),%edx;");
    asm("loc_4B4DE9: mov %edx,%eax;");
    asm("loc_4B4DEB: sub %esi,%eax;");
    asm("loc_4B4DED: cmp %eax,%ebp;");
    asm("loc_4B4DEF: je loc_4B4E0A;");
    asm("loc_4B4DF1: sub $0x20,%eax;");
    asm("loc_4B4DF4: sub $0x20,%edx;");
    asm("loc_4B4DF7: cmp %ebp,%eax;");
    asm("loc_4B4DF9: mov $8,%ecx;");
    asm("loc_4B4DFE: mov %eax,%esi;");
    asm("loc_4B4E00: mov %edx,%edi;");
    asm("loc_4B4E02: rep movsl (%esi),(%edi);");
    asm("loc_4B4E04: jne loc_4B4DF1;");
    asm("loc_4B4E06: mov 0x10(%esp),%edi;");
    asm("loc_4B4E0A: mov 0x20(%esp),%ecx;");
    asm("loc_4B4E0E: lea (%ecx,%ebp),%edx;");
    asm("loc_4B4E11: cmp %edx,%ebp;");
    asm("loc_4B4E13: mov %ebp,%eax;");
    asm("loc_4B4E15: je loc_4B4E36;");
    asm("loc_4B4E17: mov 0x28(%esp),%ebx;");
    asm("loc_4B4E1B: nop;");
    asm("loc_4B4E1C: lea (%esp),%esp;");
    asm("loc_4B4E20: mov %eax,%edi;");
    asm("loc_4B4E22: add $0x20,%eax;");
    asm("loc_4B4E25: cmp %edx,%eax;");
    asm("loc_4B4E27: mov $8,%ecx;");
    asm("loc_4B4E2C: mov %ebx,%esi;");
    asm("loc_4B4E2E: rep movsl (%esi),(%edi);");
    asm("loc_4B4E30: jne loc_4B4E20;");
    asm("loc_4B4E32: mov 0x10(%esp),%edi;");
    asm("loc_4B4E36: mov 8(%edi),%eax;");
    asm("loc_4B4E39: mov 0x20(%esp),%edx;");
    asm("loc_4B4E3D: add %edx,%eax;");
    asm("loc_4B4E3F: mov %eax,8(%edi);");
    asm("loc_4B4E42: pop %edi;");
    asm("loc_4B4E43: pop %esi;");
    asm("loc_4B4E44: pop %ebp;");
    asm("loc_4B4E45: pop %ebx;");
    asm("loc_4B4E46: add $0xC,%esp;");
    asm("loc_4B4E49: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4E50() // _sub_4B4E50
{
    __DEBUG_ASM(4B4E50);
    // chunk 0x4B4E50 _sub_4B4E50
    asm("loc_4B4E50: mov 4(%esp),%edx;");
    asm("loc_4B4E54: mov 0xC(%esp),%eax;");
    asm("loc_4B4E58: push %ebx;");
    asm("loc_4B4E59: mov 0xC(%esp),%ebx;");
    asm("loc_4B4E5D: cmp %ebx,%edx;");
    asm("loc_4B4E5F: je loc_4B4E7E;");
    asm("loc_4B4E61: push %esi;");
    asm("loc_4B4E62: push %edi;");
    asm("loc_4B4E63: test %eax,%eax;");
    asm("loc_4B4E65: je loc_4B4E72;");
    asm("loc_4B4E67: mov $8,%ecx;");
    asm("loc_4B4E6C: mov %edx,%esi;");
    asm("loc_4B4E6E: mov %eax,%edi;");
    asm("loc_4B4E70: rep movsl (%esi),(%edi);");
    asm("loc_4B4E72: add $0x20,%edx;");
    asm("loc_4B4E75: add $0x20,%eax;");
    asm("loc_4B4E78: cmp %ebx,%edx;");
    asm("loc_4B4E7A: jne loc_4B4E63;");
    asm("loc_4B4E7C: pop %edi;");
    asm("loc_4B4E7D: pop %esi;");
    asm("loc_4B4E7E: pop %ebx;");
    asm("loc_4B4E7F: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4E90() // _sub_4B4E90
{
    __DEBUG_ASM(4B4E90);
    // chunk 0x4B4E90 _sub_4B4E90
    asm("loc_4B4E90: mov 8(%esp),%eax;");
    asm("loc_4B4E94: test %eax,%eax;");
    asm("loc_4B4E96: jbe loc_4B4EBD;");
    asm("loc_4B4E98: push %ebx;");
    asm("loc_4B4E99: mov 0x10(%esp),%ebx;");
    asm("loc_4B4E9D: push %esi;");
    asm("loc_4B4E9E: mov %eax,%edx;");
    asm("loc_4B4EA0: mov 0xC(%esp),%eax;");
    asm("loc_4B4EA4: push %edi;");
    asm("loc_4B4EA5: test %eax,%eax;");
    asm("loc_4B4EA7: je loc_4B4EB4;");
    asm("loc_4B4EA9: mov $8,%ecx;");
    asm("loc_4B4EAE: mov %ebx,%esi;");
    asm("loc_4B4EB0: mov %eax,%edi;");
    asm("loc_4B4EB2: rep movsl (%esi),(%edi);");
    asm("loc_4B4EB4: add $0x20,%eax;");
    asm("loc_4B4EB7: dec %edx;");
    asm("loc_4B4EB8: jne loc_4B4EA5;");
    asm("loc_4B4EBA: pop %edi;");
    asm("loc_4B4EBB: pop %esi;");
    asm("loc_4B4EBC: pop %ebx;");
    asm("loc_4B4EBD: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4EC0() // _sub_4B4EC0
{
    __DEBUG_ASM(4B4EC0);
    // chunk 0x4B4EC0 _sub_4B4EC0
    asm("loc_4B4EC0: push %edi;");
    asm("loc_4B4EC1: mov 8(%esp),%edi;");
    asm("loc_4B4EC5: test %edi,%edi;");
    asm("loc_4B4EC7: je loc_4B4ED6;");
    asm("loc_4B4EC9: push %esi;");
    asm("loc_4B4ECA: mov 0x10(%esp),%esi;");
    asm("loc_4B4ECE: mov $8,%ecx;");
    asm("loc_4B4ED3: rep movsl (%esi),(%edi);");
    asm("loc_4B4ED5: pop %esi;");
    asm("loc_4B4ED6: pop %edi;");
    asm("loc_4B4ED7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4EE0() // _sub_4B4EE0
{
    __DEBUG_ASM(4B4EE0);
    // chunk 0x4B4EE0 _sub_4B4EE0
    asm("loc_4B4EE0: mov _data_5D5438,%eax;");
    asm("loc_4B4EE5: mov %eax,_data_672280;");
    asm("loc_4B4EEA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4EF0() // _sub_4B4EF0
{
    __DEBUG_ASM(4B4EF0);
    // chunk 0x4B4EF0 _sub_4B4EF0
    asm("loc_4B4EF0: mov _data_5D5438,%eax;");
    asm("loc_4B4EF5: mov %eax,_data_67227C;");
    asm("loc_4B4EFA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4F00() // _sub_4B4F00
{
    __DEBUG_ASM(4B4F00);
    // chunk 0x4B4F00 _sub_4B4F00
    asm("loc_4B4F00: mov _data_5D543C,%eax;");
    asm("loc_4B4F05: mov %eax,_data_672278;");
    asm("loc_4B4F0A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4F10() // _sub_4B4F10
{
    __DEBUG_ASM(4B4F10);
    // chunk 0x4B4F10 _sub_4B4F10
    asm("loc_4B4F10: push %ebx;");
    asm("loc_4B4F11: xor %ebx,%ebx;");
    asm("loc_4B4F13: push %esi;");
    asm("loc_4B4F14: mov %ecx,%esi;");
    asm("loc_4B4F16: push $_data_5D5440;");
    asm("loc_4B4F1B: movl $0xA,0x70(%esi);");
    asm("loc_4B4F22: mov %ebx,0x164(%esi);");
    asm("loc_4B4F28: mov %ebx,0x17C(%esi);");
    asm("loc_4B4F2E: mov %ebx,0x180(%esi);");
    asm("loc_4B4F34: movl $0xBF028F5C,0x184(%esi);");
    asm("loc_4B4F3E: movl $0x3E4CCCCD,0x188(%esi);");
    asm("loc_4B4F48: mov %bl,0x178(%esi);");
    asm("loc_4B4F4E: call _sub_4177B0;");
    asm("loc_4B4F53: mov 0x98(%esi),%ecx;");
    asm("loc_4B4F59: add $4,%esp;");
    asm("loc_4B4F5C: cmp %eax,%ecx;");
    asm("loc_4B4F5E: je loc_4B4FA4;");
    asm("loc_4B4F60: push %edi;");
    asm("loc_4B4F61: mov %eax,0x98(%esi);");
    asm("loc_4B4F67: xor %edi,%edi;");
    asm("loc_4B4F69: lea (%esp),%esp;");
    asm("loc_4B4F70: mov 0x8C(%esi),%ecx;");
    asm("loc_4B4F76: cmp %ebx,%ecx;");
    asm("loc_4B4F78: je loc_4B4F9D;");
    asm("loc_4B4F7A: mov 0x90(%esi),%eax;");
    asm("loc_4B4F80: sub %ecx,%eax;");
    asm("loc_4B4F82: sar $3,%eax;");
    asm("loc_4B4F85: cmp %eax,%edi;");
    asm("loc_4B4F87: jae loc_4B4F9D;");
    asm("loc_4B4F89: mov %ecx,%eax;");
    asm("loc_4B4F8B: mov (%eax,%edi,8),%ecx;");
    asm("loc_4B4F8E: mov 0x98(%esi),%eax;");
    asm("loc_4B4F94: mov (%ecx),%edx;");
    asm("loc_4B4F96: push %eax;");
    asm("loc_4B4F97: calll *8(%edx);");
    asm("loc_4B4F9A: inc %edi;");
    asm("loc_4B4F9B: jmp loc_4B4F70;");
    asm("loc_4B4F9D: mov %ebx,0xA4(%esi);");
    asm("loc_4B4FA3: pop %edi;");
    asm("loc_4B4FA4: movl $4,0x84(%esi);");
    asm("loc_4B4FAE: mov 0xAC(%esi),%cl;");
    asm("loc_4B4FB4: mov $1,%al;");
    asm("loc_4B4FB6: cmp %al,%cl;");
    asm("loc_4B4FB8: je loc_4B4FC6;");
    asm("loc_4B4FBA: mov %al,0xAC(%esi);");
    asm("loc_4B4FC0: mov %ebx,0xA4(%esi);");
    asm("loc_4B4FC6: pop %esi;");
    asm("loc_4B4FC7: pop %ebx;");
    asm("loc_4B4FC8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B4FD0() // _sub_4B4FD0
{
    __DEBUG_ASM(4B4FD0);
    // chunk 0x4B4FD0 _sub_4B4FD0
    asm("loc_4B4FD0: push %esi;");
    asm("loc_4B4FD1: push %edi;");
    asm("loc_4B4FD2: mov %ecx,%edi;");
    asm("loc_4B4FD4: movl $_off_5D5544,(%edi);");
    asm("loc_4B4FDA: decl _data_67DCD4;");
    asm("loc_4B4FE0: mov 0x6C(%edi),%cl;");
    asm("loc_4B4FE3: mov 0xC(%edi),%esi;");
    asm("loc_4B4FE6: and $0xFC,%cl;");
    asm("loc_4B4FE9: test %esi,%esi;");
    asm("loc_4B4FEB: mov %cl,0x6C(%edi);");
    asm("loc_4B4FEE: je loc_4B4FFE;");
    asm("loc_4B4FF0: mov (%esi),%eax;");
    asm("loc_4B4FF2: mov %esi,%ecx;");
    asm("loc_4B4FF4: calll *0x28(%eax);");
    asm("loc_4B4FF7: mov 8(%esi),%esi;");
    asm("loc_4B4FFA: test %esi,%esi;");
    asm("loc_4B4FFC: jne loc_4B4FF0;");
    asm("loc_4B4FFE: push %edi;");
    asm("loc_4B4FFF: call _sub_59DC00;");
    asm("loc_4B5004: add $4,%esp;");
    asm("loc_4B5007: pop %edi;");
    asm("loc_4B5008: pop %esi;");
    asm("loc_4B5009: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5010() // _sub_4B5010
{
    __DEBUG_ASM(4B5010);
    // chunk 0x4B5010 _sub_4B5010
    asm("loc_4B5010: xor %eax,%eax;");
    asm("loc_4B5012: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5020() // _sub_4B5020
{
    __DEBUG_ASM(4B5020);
    // chunk 0x4B5020 _sub_4B5020
    asm("loc_4B5020: mov 4(%esp),%eax;");
    asm("loc_4B5024: mov (%eax),%edx;");
    asm("loc_4B5026: add $0x60,%ecx;");
    asm("loc_4B5029: mov %edx,(%ecx);");
    asm("loc_4B502B: mov 4(%eax),%edx;");
    asm("loc_4B502E: mov %edx,4(%ecx);");
    asm("loc_4B5031: mov 8(%eax),%eax;");
    asm("loc_4B5034: mov %eax,8(%ecx);");
    asm("loc_4B5037: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5040() // _sub_4B5040
{
    __DEBUG_ASM(4B5040);
    // chunk 0x4B5040 _sub_4B5040
    asm("loc_4B5040: push %esi;");
    asm("loc_4B5041: mov 8(%esp),%esi;");
    asm("loc_4B5045: push %edi;");
    asm("loc_4B5046: lea 0x3C(%ecx),%edi;");
    asm("loc_4B5049: mov $9,%ecx;");
    asm("loc_4B504E: rep movsl (%esi),(%edi);");
    asm("loc_4B5050: pop %edi;");
    asm("loc_4B5051: pop %esi;");
    asm("loc_4B5052: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5060() // _sub_4B5060
{
    __DEBUG_ASM(4B5060);
    // chunk 0x4B5060 _sub_4B5060
    asm("loc_4B5060: mov 4(%esp),%eax;");
    asm("loc_4B5064: push %esi;");
    asm("loc_4B5065: mov %ecx,%esi;");
    asm("loc_4B5067: push %eax;");
    asm("loc_4B5068: push %esi;");
    asm("loc_4B5069: call _sub_59DD00;");
    asm("loc_4B506E: push %esi;");
    asm("loc_4B506F: call _sub_59DBF0;");
    asm("loc_4B5074: mov 0x6C(%esi),%cl;");
    asm("loc_4B5077: and $0xFB,%cl;");
    asm("loc_4B507A: or $3,%cl;");
    asm("loc_4B507D: add $0xC,%esp;");
    asm("loc_4B5080: mov %cl,0x6C(%esi);");
    asm("loc_4B5083: mov $1,%al;");
    asm("loc_4B5085: pop %esi;");
    asm("loc_4B5086: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5090() // _sub_4B5090
{
    __DEBUG_ASM(4B5090);
    // chunk 0x4B5090 _sub_4B5090
    asm("loc_4B5090: push %esi;");
    asm("loc_4B5091: push %edi;");
    asm("loc_4B5092: mov %ecx,%edi;");
    asm("loc_4B5094: mov 0x6C(%edi),%cl;");
    asm("loc_4B5097: mov 0xC(%edi),%esi;");
    asm("loc_4B509A: and $0xFC,%cl;");
    asm("loc_4B509D: test %esi,%esi;");
    asm("loc_4B509F: mov %cl,0x6C(%edi);");
    asm("loc_4B50A2: je loc_4B50B2;");
    asm("loc_4B50A4: mov (%esi),%eax;");
    asm("loc_4B50A6: mov %esi,%ecx;");
    asm("loc_4B50A8: calll *0x28(%eax);");
    asm("loc_4B50AB: mov 8(%esi),%esi;");
    asm("loc_4B50AE: test %esi,%esi;");
    asm("loc_4B50B0: jne loc_4B50A4;");
    asm("loc_4B50B2: push %edi;");
    asm("loc_4B50B3: call _sub_59DC00;");
    asm("loc_4B50B8: add $4,%esp;");
    asm("loc_4B50BB: pop %edi;");
    asm("loc_4B50BC: pop %esi;");
    asm("loc_4B50BD: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B50C0() // _sub_4B50C0
{
    __DEBUG_ASM(4B50C0);
    // chunk 0x4B50C0 _sub_4B50C0
    asm("loc_4B50C0: mov 4(%ecx),%ecx;");
    asm("loc_4B50C3: test %ecx,%ecx;");
    asm("loc_4B50C5: je loc_4B50CC;");
    asm("loc_4B50C7: mov (%ecx),%eax;");
    asm("loc_4B50C9: jmpl *0x4C(%eax);");
    asm("loc_4B50CC: xor %al,%al;");
    asm("loc_4B50CE: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B50E0() // ?information_request@ContentCallback@AI@pub@@UAE_NW4InformationType@123@HPAD@Z
{
    __DEBUG_ASM(4B50E0);
    // chunk 0x4B50E0 _sub_4B50E0
    asm("loc_4B50E0: xor %al,%al;");
    asm("loc_4B50E2: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B50F0() // _sub_4B50F0
{
    __DEBUG_ASM(4B50F0);
    // chunk 0x4B50F0 _sub_4B50F0
    asm("loc_4B50F0: push %esi;");
    asm("loc_4B50F1: push %edi;");
    asm("loc_4B50F2: mov %ecx,%edi;");
    asm("loc_4B50F4: movl $_off_5D5544,(%edi);");
    asm("loc_4B50FA: decl _data_67DCD4;");
    asm("loc_4B5100: mov 0x6C(%edi),%cl;");
    asm("loc_4B5103: mov 0xC(%edi),%esi;");
    asm("loc_4B5106: and $0xFC,%cl;");
    asm("loc_4B5109: test %esi,%esi;");
    asm("loc_4B510B: mov %cl,0x6C(%edi);");
    asm("loc_4B510E: je loc_4B511E;");
    asm("loc_4B5110: mov (%esi),%eax;");
    asm("loc_4B5112: mov %esi,%ecx;");
    asm("loc_4B5114: calll *0x28(%eax);");
    asm("loc_4B5117: mov 8(%esi),%esi;");
    asm("loc_4B511A: test %esi,%esi;");
    asm("loc_4B511C: jne loc_4B5110;");
    asm("loc_4B511E: push %edi;");
    asm("loc_4B511F: call _sub_59DC00;");
    asm("loc_4B5124: mov 0x10(%esp),%al;");
    asm("loc_4B5128: add $4,%esp;");
    asm("loc_4B512B: test $1,%al;");
    asm("loc_4B512D: je loc_4B5138;");
    asm("loc_4B512F: push %edi;");
    asm("loc_4B5130: call _sub_5B7E1D;");
    asm("loc_4B5135: add $4,%esp;");
    asm("loc_4B5138: mov %edi,%eax;");
    asm("loc_4B513A: pop %edi;");
    asm("loc_4B513B: pop %esi;");
    asm("loc_4B513C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5140() // _sub_4B5140
{
    __DEBUG_ASM(4B5140);
    // chunk 0x4B5140 _sub_4B5140
    asm("loc_4B5140: mov %ecx,%eax;");
    asm("loc_4B5142: xor %cl,%cl;");
    asm("loc_4B5144: mov %cl,3(%eax);");
    asm("loc_4B5147: mov %cl,2(%eax);");
    asm("loc_4B514A: mov %cl,1(%eax);");
    asm("loc_4B514D: mov %cl,(%eax);");
    asm("loc_4B514F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5150() // _sub_4B5150
{
    __DEBUG_ASM(4B5150);
    // chunk 0x4B5150 _sub_4B5150
    asm("loc_4B5150: mov %ecx,%eax;");
    asm("loc_4B5152: mov $0x3F800000,%ecx;");
    asm("loc_4B5157: mov %ecx,0x20(%eax);");
    asm("loc_4B515A: mov %ecx,0x10(%eax);");
    asm("loc_4B515D: mov %ecx,(%eax);");
    asm("loc_4B515F: xor %ecx,%ecx;");
    asm("loc_4B5161: mov %ecx,0x1C(%eax);");
    asm("loc_4B5164: mov %ecx,0x18(%eax);");
    asm("loc_4B5167: mov %ecx,0x14(%eax);");
    asm("loc_4B516A: mov %ecx,0xC(%eax);");
    asm("loc_4B516D: mov %ecx,8(%eax);");
    asm("loc_4B5170: mov %ecx,4(%eax);");
    asm("loc_4B5173: mov %ecx,0x2C(%eax);");
    asm("loc_4B5176: mov %ecx,0x28(%eax);");
    asm("loc_4B5179: mov %ecx,0x24(%eax);");
    asm("loc_4B517C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5180() // _sub_4B5180
{
    __DEBUG_ASM(4B5180);
    // chunk 0x4B5180 _sub_4B5180
    asm("loc_4B5180: mov 4(%esp),%eax;");
    asm("loc_4B5184: push %esi;");
    asm("loc_4B5185: mov %ecx,%esi;");
    asm("loc_4B5187: push %eax;");
    asm("loc_4B5188: push %esi;");
    asm("loc_4B5189: call _sub_59DD00;");
    asm("loc_4B518E: push %esi;");
    asm("loc_4B518F: call _sub_59DBF0;");
    asm("loc_4B5194: mov 0x6C(%esi),%cl;");
    asm("loc_4B5197: and $0xFB,%cl;");
    asm("loc_4B519A: or $3,%cl;");
    asm("loc_4B519D: mov %cl,0x6C(%esi);");
    asm("loc_4B51A0: add $0xC,%esp;");
    asm("loc_4B51A3: mov %esi,%ecx;");
    asm("loc_4B51A5: call _sub_5A1C50;");
    asm("loc_4B51AA: mov $0x3DCCCCCD,%eax;");
    asm("loc_4B51AF: mov %eax,0xB4(%esi);");
    asm("loc_4B51B5: mov %eax,0xB8(%esi);");
    asm("loc_4B51BB: mov $1,%al;");
    asm("loc_4B51BD: pop %esi;");
    asm("loc_4B51BE: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B51D0() // _sub_4B51D0
{
    __DEBUG_ASM(4B51D0);
    // chunk 0x4B51D0 _sub_4B51D0
    asm("loc_4B51D0: sub $0xC,%esp;");
    asm("loc_4B51D3: mov 0x10(%esp),%eax;");
    asm("loc_4B51D7: flds 0x68(%ecx);");
    asm("loc_4B51DA: fdivs 8(%eax);");
    asm("loc_4B51DD: fld %st(0);");
    asm("loc_4B51DF: fmuls (%eax);");
    asm("loc_4B51E1: fxch;");
    asm("loc_4B51E3: fmuls 4(%eax);");
    asm("loc_4B51E6: fstps 4(%esp);");
    asm("loc_4B51EA: fsubs 0x60(%ecx);");
    asm("loc_4B51ED: fcoms _data_5C7474;");
    asm("loc_4B51F3: fnstsw %ax;");
    asm("loc_4B51F5: test $1,%ah;");
    asm("loc_4B51F8: jne loc_4B5230;");
    asm("loc_4B51FA: fcomps 0xB4(%ecx);");
    asm("loc_4B5200: fnstsw %ax;");
    asm("loc_4B5202: test $0x41,%ah;");
    asm("loc_4B5205: jp loc_4B5232;");
    asm("loc_4B5207: flds 0x64(%ecx);");
    asm("loc_4B520A: fsubs 4(%esp);");
    asm("loc_4B520E: fcoms _data_5C7474;");
    asm("loc_4B5214: fnstsw %ax;");
    asm("loc_4B5216: test $1,%ah;");
    asm("loc_4B5219: jne loc_4B5230;");
    asm("loc_4B521B: fcomps 0xB8(%ecx);");
    asm("loc_4B5221: fnstsw %ax;");
    asm("loc_4B5223: test $0x41,%ah;");
    asm("loc_4B5226: jp loc_4B5232;");
    asm("loc_4B5228: mov $1,%al;");
    asm("loc_4B522A: add $0xC,%esp;");
    asm("loc_4B522D: ret $4;");
    asm("loc_4B5230: fstp %st(0);");
    asm("loc_4B5232: xor %al,%al;");
    asm("loc_4B5234: add $0xC,%esp;");
    asm("loc_4B5237: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5240() // _sub_4B5240
{
    __DEBUG_ASM(4B5240);
    // chunk 0x4B5240 _sub_4B5240
    asm("loc_4B5240: push %esi;");
    asm("loc_4B5241: mov %ecx,%esi;");
    asm("loc_4B5243: call _sub_5A1AF0;");
    asm("loc_4B5248: testb $1,8(%esp);");
    asm("loc_4B524D: je loc_4B5258;");
    asm("loc_4B524F: push %esi;");
    asm("loc_4B5250: call _sub_5B7E1D;");
    asm("loc_4B5255: add $4,%esp;");
    asm("loc_4B5258: mov %esi,%eax;");
    asm("loc_4B525A: pop %esi;");
    asm("loc_4B525B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5260() // _sub_4B5260
{
    __DEBUG_ASM(4B5260);
    // chunk 0x4B5260 _sub_4B5260
    asm("loc_4B5260: push %esi;");
    asm("loc_4B5261: mov %ecx,%esi;");
    asm("loc_4B5263: call _sub_4B5340;");
    asm("loc_4B5268: testb $1,8(%esp);");
    asm("loc_4B526D: je loc_4B5278;");
    asm("loc_4B526F: push %esi;");
    asm("loc_4B5270: call _sub_5B7E1D;");
    asm("loc_4B5275: add $4,%esp;");
    asm("loc_4B5278: mov %esi,%eax;");
    asm("loc_4B527A: pop %esi;");
    asm("loc_4B527B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5280() // _sub_4B5280
{
    __DEBUG_ASM(4B5280);
    // chunk 0x4B5280 _sub_4B5280
    asm("loc_4B5280: sub $0xC,%esp;");
    asm("loc_4B5283: push %ebx;");
    asm("loc_4B5284: push %ebp;");
    asm("loc_4B5285: push %esi;");
    asm("loc_4B5286: mov %ecx,%esi;");
    asm("loc_4B5288: mov 0x10(%esi),%ecx;");
    asm("loc_4B528B: push %edi;");
    asm("loc_4B528C: mov 4(%esi),%edi;");
    asm("loc_4B528F: mov (%edi),%eax;");
    asm("loc_4B5291: xor %ebp,%ebp;");
    asm("loc_4B5293: cmp %ebp,%ecx;");
    asm("loc_4B5295: mov %eax,0x10(%esp);");
    asm("loc_4B5299: je loc_4B52F4;");
    asm("loc_4B529B: mov %eax,%ecx;");
    asm("loc_4B529D: cmp %ecx,%eax;");
    asm("loc_4B529F: jne loc_4B52F4;");
    asm("loc_4B52A1: mov 4(%edi),%ebx;");
    asm("loc_4B52A4: cmp 8(%esi),%ebx;");
    asm("loc_4B52A7: mov %ebx,%edi;");
    asm("loc_4B52A9: je loc_4B52CF;");
    asm("loc_4B52AB: nop;");
    asm("loc_4B52AC: lea (%esp),%esp;");
    asm("loc_4B52B0: mov 8(%edi),%eax;");
    asm("loc_4B52B3: push %eax;");
    asm("loc_4B52B4: mov %esi,%ecx;");
    asm("loc_4B52B6: call _sub_4B6870;");
    asm("loc_4B52BB: mov (%edi),%edi;");
    asm("loc_4B52BD: push %ebx;");
    asm("loc_4B52BE: call _sub_5B7E1D;");
    asm("loc_4B52C3: mov 8(%esi),%eax;");
    asm("loc_4B52C6: add $4,%esp;");
    asm("loc_4B52C9: cmp %eax,%edi;");
    asm("loc_4B52CB: mov %edi,%ebx;");
    asm("loc_4B52CD: jne loc_4B52B0;");
    asm("loc_4B52CF: mov 4(%esi),%ecx;");
    asm("loc_4B52D2: mov 8(%esi),%edx;");
    asm("loc_4B52D5: mov %edx,4(%ecx);");
    asm("loc_4B52D8: mov 4(%esi),%eax;");
    asm("loc_4B52DB: mov %ebp,0x10(%esi);");
    asm("loc_4B52DE: mov %eax,(%eax);");
    asm("loc_4B52E0: mov 4(%esi),%eax;");
    asm("loc_4B52E3: mov %eax,8(%eax);");
    asm("loc_4B52E6: lea 0x14(%esp),%eax;");
    asm("loc_4B52EA: push %eax;");
    asm("loc_4B52EB: mov %esi,%ecx;");
    asm("loc_4B52ED: call _sub_53E430;");
    asm("loc_4B52F2: jmp loc_4B5318;");
    asm("loc_4B52F4: cmp %edi,%eax;");
    asm("loc_4B52F6: je loc_4B5318;");
    asm("loc_4B52F8: lea 0x10(%esp),%ecx;");
    asm("loc_4B52FC: mov %eax,%ebx;");
    asm("loc_4B52FE: call _sub_52AFA0;");
    asm("loc_4B5303: push %ebx;");
    asm("loc_4B5304: lea 0x1C(%esp),%ecx;");
    asm("loc_4B5308: push %ecx;");
    asm("loc_4B5309: mov %esi,%ecx;");
    asm("loc_4B530B: call _sub_46C8C0;");
    asm("loc_4B5310: mov 0x10(%esp),%eax;");
    asm("loc_4B5314: cmp %edi,%eax;");
    asm("loc_4B5316: jne loc_4B52F8;");
    asm("loc_4B5318: mov 4(%esi),%edx;");
    asm("loc_4B531B: push %edx;");
    asm("loc_4B531C: call _sub_5B7E1D;");
    asm("loc_4B5321: mov 8(%esi),%eax;");
    asm("loc_4B5324: push %eax;");
    asm("loc_4B5325: mov %ebp,4(%esi);");
    asm("loc_4B5328: mov %ebp,0x10(%esi);");
    asm("loc_4B532B: call _sub_5B7E1D;");
    asm("loc_4B5330: add $8,%esp;");
    asm("loc_4B5333: pop %edi;");
    asm("loc_4B5334: mov %ebp,8(%esi);");
    asm("loc_4B5337: pop %esi;");
    asm("loc_4B5338: pop %ebp;");
    asm("loc_4B5339: pop %ebx;");
    asm("loc_4B533A: add $0xC,%esp;");
    asm("loc_4B533D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5340() // _sub_4B5340
{
    __DEBUG_ASM(4B5340);
    // chunk 0x4B5340 _sub_4B5340
    asm("loc_4B5340: push $0xFFFFFFFF;");
    asm("loc_4B5342: push $_sub_5BD114;");
    asm("loc_4B5347: mov %fs:0,%eax;");
    asm("loc_4B534D: push %eax;");
    asm("loc_4B534E: mov %esp,%fs:0;");
    asm("loc_4B5355: sub $0x1C,%esp;");
    asm("loc_4B5358: push %ebx;");
    asm("loc_4B5359: push %ebp;");
    asm("loc_4B535A: mov %ecx,%ebp;");
    asm("loc_4B535C: push %esi;");
    asm("loc_4B535D: push %edi;");
    asm("loc_4B535E: mov %ebp,0x1C(%esp);");
    asm("loc_4B5362: movl $_off_5D5454,(%ebp);");
    asm("loc_4B5369: mov _data_672288,%eax;");
    asm("loc_4B536E: xor %ebx,%ebx;");
    asm("loc_4B5370: cmp %ebp,%eax;");
    asm("loc_4B5372: movl $1,0x34(%esp);");
    asm("loc_4B537A: jne loc_4B5382;");
    asm("loc_4B537C: mov %ebx,_data_672288;");
    asm("loc_4B5382: mov 0x154(%ebp),%edi;");
    asm("loc_4B5388: mov 0x160(%ebp),%ecx;");
    asm("loc_4B538E: cmp %ebx,%ecx;");
    asm("loc_4B5390: mov (%edi),%eax;");
    asm("loc_4B5392: lea 0x150(%ebp),%esi;");
    asm("loc_4B5398: mov %eax,0x10(%esp);");
    asm("loc_4B539C: je loc_4B53D8;");
    asm("loc_4B539E: mov %eax,%ecx;");
    asm("loc_4B53A0: cmp %ecx,%eax;");
    asm("loc_4B53A2: jne loc_4B53D8;");
    asm("loc_4B53A4: cmp %edi,%edi;");
    asm("loc_4B53A6: jne loc_4B53D8;");
    asm("loc_4B53A8: mov 4(%edi),%eax;");
    asm("loc_4B53AB: push %eax;");
    asm("loc_4B53AC: mov %esi,%ecx;");
    asm("loc_4B53AE: call _sub_4B6870;");
    asm("loc_4B53B3: mov 4(%esi),%ecx;");
    asm("loc_4B53B6: mov 8(%esi),%edx;");
    asm("loc_4B53B9: mov %edx,4(%ecx);");
    asm("loc_4B53BC: mov 4(%esi),%eax;");
    asm("loc_4B53BF: mov %ebx,0x10(%esi);");
    asm("loc_4B53C2: mov %eax,(%eax);");
    asm("loc_4B53C4: mov 4(%esi),%eax;");
    asm("loc_4B53C7: mov %eax,8(%eax);");
    asm("loc_4B53CA: lea 0x14(%esp),%eax;");
    asm("loc_4B53CE: push %eax;");
    asm("loc_4B53CF: mov %esi,%ecx;");
    asm("loc_4B53D1: call _sub_53E430;");
    asm("loc_4B53D6: jmp loc_4B540A;");
    asm("loc_4B53D8: cmp %edi,%eax;");
    asm("loc_4B53DA: je loc_4B5406;");
    asm("loc_4B53DC: lea (%esp),%esp;");
    asm("loc_4B53E0: push %ebx;");
    asm("loc_4B53E1: lea 0x24(%esp),%ecx;");
    asm("loc_4B53E5: push %ecx;");
    asm("loc_4B53E6: lea 0x18(%esp),%ecx;");
    asm("loc_4B53EA: call _sub_526960;");
    asm("loc_4B53EF: mov (%eax),%edx;");
    asm("loc_4B53F1: push %edx;");
    asm("loc_4B53F2: lea 0x28(%esp),%eax;");
    asm("loc_4B53F6: push %eax;");
    asm("loc_4B53F7: mov %esi,%ecx;");
    asm("loc_4B53F9: call _sub_46C8C0;");
    asm("loc_4B53FE: mov 0x10(%esp),%eax;");
    asm("loc_4B5402: cmp %edi,%eax;");
    asm("loc_4B5404: jne loc_4B53E0;");
    asm("loc_4B5406: mov %eax,0x14(%esp);");
    asm("loc_4B540A: mov 4(%esi),%eax;");
    asm("loc_4B540D: push %eax;");
    asm("loc_4B540E: call _sub_5B7E1D;");
    asm("loc_4B5413: mov 8(%esi),%eax;");
    asm("loc_4B5416: push %eax;");
    asm("loc_4B5417: mov %ebx,4(%esi);");
    asm("loc_4B541A: mov %ebx,0x10(%esi);");
    asm("loc_4B541D: call _sub_5B7E1D;");
    asm("loc_4B5422: mov %ebx,8(%esi);");
    asm("loc_4B5425: lea 0xEC(%ebp),%esi;");
    asm("loc_4B542B: add $8,%esp;");
    asm("loc_4B542E: mov %esi,0x18(%esp);");
    asm("loc_4B5432: add $0x10,%esi;");
    asm("loc_4B5435: mov %esi,0x28(%esp);");
    asm("loc_4B5439: mov %esi,%ecx;");
    asm("loc_4B543B: movb $4,0x34(%esp);");
    asm("loc_4B5440: call _sub_4144F0;");
    asm("loc_4B5445: mov 0x14(%esi),%ebp;");
    asm("loc_4B5448: mov 0x10(%esi),%edi;");
    asm("loc_4B544B: cmp %ebp,%edi;");
    asm("loc_4B544D: movb $3,0x34(%esp);");
    asm("loc_4B5452: je loc_4B5463;");
    asm("loc_4B5454: push %ebx;");
    asm("loc_4B5455: mov %edi,%ecx;");
    asm("loc_4B5457: call _sub_418F70;");
    asm("loc_4B545C: add $8,%edi;");
    asm("loc_4B545F: cmp %ebp,%edi;");
    asm("loc_4B5461: jne loc_4B5454;");
    asm("loc_4B5463: mov 0x10(%esi),%eax;");
    asm("loc_4B5466: push %eax;");
    asm("loc_4B5467: call _sub_5B7E1D;");
    asm("loc_4B546C: mov _import_5C71D8,%edi;");
    asm("loc_4B5472: mov %ebx,0x10(%esi);");
    asm("loc_4B5475: mov %ebx,0x14(%esi);");
    asm("loc_4B5478: mov %ebx,0x18(%esi);");
    asm("loc_4B547B: mov (%esi),%eax;");
    asm("loc_4B547D: add $4,%esp;");
    asm("loc_4B5480: cmp %ebx,%eax;");
    asm("loc_4B5482: je loc_4B548F;");
    asm("loc_4B5484: push %eax;");
    asm("loc_4B5485: call *%edi;");
    asm("loc_4B5487: add $4,%esp;");
    asm("loc_4B548A: mov %ebx,(%esi);");
    asm("loc_4B548C: mov %ebx,4(%esi);");
    asm("loc_4B548F: mov 0x18(%esp),%esi;");
    asm("loc_4B5493: mov 8(%esi),%eax;");
    asm("loc_4B5496: cmp %ebx,%eax;");
    asm("loc_4B5498: je loc_4B54A6;");
    asm("loc_4B549A: push %eax;");
    asm("loc_4B549B: call *%edi;");
    asm("loc_4B549D: add $4,%esp;");
    asm("loc_4B54A0: mov %ebx,8(%esi);");
    asm("loc_4B54A3: mov %ebx,0xC(%esi);");
    asm("loc_4B54A6: mov 0x1C(%esp),%ecx;");
    asm("loc_4B54AA: movl $0xFFFFFFFF,0x34(%esp);");
    asm("loc_4B54B2: call _sub_5A1AF0;");
    asm("loc_4B54B7: mov 0x2C(%esp),%ecx;");
    asm("loc_4B54BB: pop %edi;");
    asm("loc_4B54BC: pop %esi;");
    asm("loc_4B54BD: pop %ebp;");
    asm("loc_4B54BE: pop %ebx;");
    asm("loc_4B54BF: mov %ecx,%fs:0;");
    asm("loc_4B54C6: add $0x28,%esp;");
    asm("loc_4B54C9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B54D0() // _sub_4B54D0
{
    __DEBUG_ASM(4B54D0);
    // chunk 0x4B54D0 _sub_4B54D0
    asm("loc_4B54D0: sub $0xC,%esp;");
    asm("loc_4B54D3: mov 0x10(%esp),%eax;");
    asm("loc_4B54D7: push %esi;");
    asm("loc_4B54D8: mov %ecx,%esi;");
    asm("loc_4B54DA: push %eax;");
    asm("loc_4B54DB: push %esi;");
    asm("loc_4B54DC: call _sub_59DD00;");
    asm("loc_4B54E1: push %esi;");
    asm("loc_4B54E2: call _sub_59DBF0;");
    asm("loc_4B54E7: mov 0x6C(%esi),%cl;");
    asm("loc_4B54EA: and $0xFB,%cl;");
    asm("loc_4B54ED: or $3,%cl;");
    asm("loc_4B54F0: mov %cl,0x6C(%esi);");
    asm("loc_4B54F3: add $0xC,%esp;");
    asm("loc_4B54F6: mov %esi,%ecx;");
    asm("loc_4B54F8: call _sub_5A1C50;");
    asm("loc_4B54FD: mov 0x6C(%esi),%dl;");
    asm("loc_4B5500: mov $0x3DCCCCCD,%eax;");
    asm("loc_4B5505: mov %eax,0xB4(%esi);");
    asm("loc_4B550B: mov %eax,0xB8(%esi);");
    asm("loc_4B5511: mov $0x43,%al;");
    asm("loc_4B5513: mov %al,0x14(%esp);");
    asm("loc_4B5517: mov %al,0x15(%esp);");
    asm("loc_4B551B: mov %al,0x16(%esp);");
    asm("loc_4B551F: and $0xFD,%dl;");
    asm("loc_4B5522: mov $0xFF,%al;");
    asm("loc_4B5524: mov %al,0x17(%esp);");
    asm("loc_4B5528: mov %dl,0x6C(%esi);");
    asm("loc_4B552B: mov 0x14(%esp),%edx;");
    asm("loc_4B552F: mov %al,0x17(%esp);");
    asm("loc_4B5533: movb $0x87,0x14(%esp);");
    asm("loc_4B5538: movb $0xC3,0x15(%esp);");
    asm("loc_4B553D: movb $0xE0,0x16(%esp);");
    asm("loc_4B5542: mov 0x14(%esp),%eax;");
    asm("loc_4B5546: movl $7,0x78(%esi);");
    asm("loc_4B554D: movb $0,0xE0(%esi);");
    asm("loc_4B5554: movl $0x3A902DE0,0xB0(%esi);");
    asm("loc_4B555E: movb $1,0xE1(%esi);");
    asm("loc_4B5565: mov %edx,0xD8(%esi);");
    asm("loc_4B556B: mov %eax,0xCC(%esi);");
    asm("loc_4B5571: call _sub_5B0880;");
    asm("loc_4B5576: test %al,%al;");
    asm("loc_4B5578: movl $0xBF800000,0xC(%esp);");
    asm("loc_4B5580: movl $0x3EC51EB8,8(%esp);");
    asm("loc_4B5588: je loc_4B55BE;");
    asm("loc_4B558A: flds 0x188(%esi);");
    asm("loc_4B5590: mov 8(%esp),%eax;");
    asm("loc_4B5594: fstps 4(%esp);");
    asm("loc_4B5598: mov 4(%esp),%edx;");
    asm("loc_4B559C: lea 0x16C(%esi),%ecx;");
    asm("loc_4B55A2: mov %edx,(%ecx);");
    asm("loc_4B55A4: mov 0xC(%esp),%edx;");
    asm("loc_4B55A8: mov %eax,4(%ecx);");
    asm("loc_4B55AB: mov %edx,8(%ecx);");
    asm("loc_4B55AE: mov %esi,%ecx;");
    asm("loc_4B55B0: call _sub_4B59B0;");
    asm("loc_4B55B5: mov $1,%al;");
    asm("loc_4B55B7: pop %esi;");
    asm("loc_4B55B8: add $0xC,%esp;");
    asm("loc_4B55BB: ret $8;");
    asm("loc_4B55BE: flds 0x184(%esi);");
    asm("loc_4B55C4: mov 8(%esp),%edx;");
    asm("loc_4B55C8: fstps 4(%esp);");
    asm("loc_4B55CC: mov 4(%esp),%ecx;");
    asm("loc_4B55D0: lea 0x16C(%esi),%eax;");
    asm("loc_4B55D6: mov %ecx,(%eax);");
    asm("loc_4B55D8: mov 0xC(%esp),%ecx;");
    asm("loc_4B55DC: mov %edx,4(%eax);");
    asm("loc_4B55DF: mov %ecx,8(%eax);");
    asm("loc_4B55E2: mov %esi,%ecx;");
    asm("loc_4B55E4: call _sub_4B59B0;");
    asm("loc_4B55E9: mov $1,%al;");
    asm("loc_4B55EB: pop %esi;");
    asm("loc_4B55EC: add $0xC,%esp;");
    asm("loc_4B55EF: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5600() // _sub_4B5600
{
    __DEBUG_ASM(4B5600);
    // chunk 0x4B5600 _sub_4B5600
    asm("loc_4B5600: push %esi;");
    asm("loc_4B5601: mov %ecx,%esi;");
    asm("loc_4B5603: call _sub_41DD90;");
    asm("loc_4B5608: test %al,%al;");
    asm("loc_4B560A: mov 0x6C(%esi),%al;");
    asm("loc_4B560D: jne loc_4B5622;");
    asm("loc_4B560F: and $0xFD,%al;");
    asm("loc_4B5611: movl $0,0x164(%esi);");
    asm("loc_4B561B: mov %al,0x6C(%esi);");
    asm("loc_4B561E: pop %esi;");
    asm("loc_4B561F: ret $8;");
    asm("loc_4B5622: xor %edx,%edx;");
    asm("loc_4B5624: test $2,%al;");
    asm("loc_4B5626: jne loc_4B5665;");
    asm("loc_4B5628: flds 0x17C(%esi);");
    asm("loc_4B562E: and $0xFE,%al;");
    asm("loc_4B5630: fcomps _data_5C7474;");
    asm("loc_4B5636: mov %al,0x6C(%esi);");
    asm("loc_4B5639: fnstsw %ax;");
    asm("loc_4B563B: test $0x41,%ah;");
    asm("loc_4B563E: jne loc_4B566F;");
    asm("loc_4B5640: flds 0x17C(%esi);");
    asm("loc_4B5646: fsubl 8(%esp);");
    asm("loc_4B564A: fsts 0x17C(%esi);");
    asm("loc_4B5650: fcomps _data_5C7474;");
    asm("loc_4B5656: fnstsw %ax;");
    asm("loc_4B5658: test $5,%ah;");
    asm("loc_4B565B: jp loc_4B566F;");
    asm("loc_4B565D: mov %edx,0x17C(%esi);");
    asm("loc_4B5663: jmp loc_4B566F;");
    asm("loc_4B5665: movl $0x3F000000,0x17C(%esi);");
    asm("loc_4B566F: mov 0x6C(%esi),%al;");
    asm("loc_4B5672: shr $1,%al;");
    asm("loc_4B5674: and $1,%al;");
    asm("loc_4B5676: mov %al,0x178(%esi);");
    asm("loc_4B567C: mov _data_67228C,%ecx;");
    asm("loc_4B5682: mov _data_616840,%eax;");
    asm("loc_4B5687: cmp %eax,%ecx;");
    asm("loc_4B5689: mov _data_616844,%ecx;");
    asm("loc_4B568F: jne loc_4B56AB;");
    asm("loc_4B5691: cmp %ecx,_data_672290;");
    asm("loc_4B5697: jne loc_4B56AB;");
    asm("loc_4B5699: flds 0x180(%esi);");
    asm("loc_4B569F: faddl 8(%esp);");
    asm("loc_4B56A3: fstps 0x180(%esi);");
    asm("loc_4B56A9: jmp loc_4B56BC;");
    asm("loc_4B56AB: mov %eax,_data_67228C;");
    asm("loc_4B56B0: mov %ecx,_data_672290;");
    asm("loc_4B56B6: mov %edx,0x180(%esi);");
    asm("loc_4B56BC: flds 0x164(%esi);");
    asm("loc_4B56C2: fcomps _data_5C7474;");
    asm("loc_4B56C8: fnstsw %ax;");
    asm("loc_4B56CA: test $0x41,%ah;");
    asm("loc_4B56CD: jne loc_4B56F2;");
    asm("loc_4B56CF: flds 0x164(%esi);");
    asm("loc_4B56D5: fsubl 8(%esp);");
    asm("loc_4B56D9: fsts 0x164(%esi);");
    asm("loc_4B56DF: fcomps _data_5C7474;");
    asm("loc_4B56E5: fnstsw %ax;");
    asm("loc_4B56E7: test $0x41,%ah;");
    asm("loc_4B56EA: jp loc_4B56F6;");
    asm("loc_4B56EC: mov %edx,0x164(%esi);");
    asm("loc_4B56F2: andb $0xFD,0x6C(%esi);");
    asm("loc_4B56F6: pop %esi;");
    asm("loc_4B56F7: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5700() // _sub_4B5700
{
    __DEBUG_ASM(4B5700);
    // chunk 0x4B5700 _sub_4B5700
    asm("loc_4B5700: cmpl $0xEF02,4(%esp);");
    asm("loc_4B5708: jne loc_4B5713;");
    asm("loc_4B570A: andb $0xFD,0x6C(%ecx);");
    asm("loc_4B570E: mov $1,%al;");
    asm("loc_4B5710: ret $0xC;");
    asm("loc_4B5713: xor %al,%al;");
    asm("loc_4B5715: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5720() // _sub_4B5720
{
    __DEBUG_ASM(4B5720);
    // chunk 0x4B5720 _sub_4B5720
    asm("loc_4B5720: sub $0x44,%esp;");
    asm("loc_4B5723: push %esi;");
    asm("loc_4B5724: push $6;");
    asm("loc_4B5726: mov %ecx,%esi;");
    asm("loc_4B5728: call _sub_5792B0;");
    asm("loc_4B572D: add $4,%esp;");
    asm("loc_4B5730: test %eax,%eax;");
    asm("loc_4B5732: je loc_4B59A4;");
    asm("loc_4B5738: testb $2,0x6C(%esi);");
    asm("loc_4B573C: je loc_4B59A4;");
    asm("loc_4B5742: call _sub_41A3E0;");
    asm("loc_4B5747: test %al,%al;");
    asm("loc_4B5749: jne loc_4B59A4;");
    asm("loc_4B574F: push %ebx;");
    asm("loc_4B5750: push %edi;");
    asm("loc_4B5751: xor %ebx,%ebx;");
    asm("loc_4B5753: push %ebx;");
    asm("loc_4B5754: call _sub_422190;");
    asm("loc_4B5759: push $0xB71;");
    asm("loc_4B575E: call _sub_421ED0;");
    asm("loc_4B5763: push $0xB44;");
    asm("loc_4B5768: call _sub_421ED0;");
    asm("loc_4B576D: mov 0x68(%esi),%eax;");
    asm("loc_4B5770: add $0xC,%esp;");
    asm("loc_4B5773: lea 0x7C(%esi),%edi;");
    asm("loc_4B5776: push %eax;");
    asm("loc_4B5777: push $0x3E947AE1;");
    asm("loc_4B577C: mov %edi,%ecx;");
    asm("loc_4B577E: mov %edi,0x2C(%esp);");
    asm("loc_4B5782: call _sub_4145D0;");
    asm("loc_4B5787: lea 0x30(%esp),%ecx;");
    asm("loc_4B578B: push %ecx;");
    asm("loc_4B578C: mov %edi,%ecx;");
    asm("loc_4B578E: call _sub_414570;");
    asm("loc_4B5793: mov 0x30(%esp),%edx;");
    asm("loc_4B5797: mov 0x34(%esp),%eax;");
    asm("loc_4B579B: mov %edx,0x28(%esp);");
    asm("loc_4B579F: mov %ebx,0x2C(%esp);");
    asm("loc_4B57A3: fildll 0x28(%esp);");
    asm("loc_4B57A7: mov %eax,0x28(%esp);");
    asm("loc_4B57AB: mov %ebx,0x2C(%esp);");
    asm("loc_4B57AF: fsts 0xB4(%esi);");
    asm("loc_4B57B5: lea 0x60(%esi),%ecx;");
    asm("loc_4B57B8: fildll 0x28(%esp);");
    asm("loc_4B57BC: push %ecx;");
    asm("loc_4B57BD: mov %ebx,0xBC(%esi);");
    asm("loc_4B57C3: mov %ebx,0xC0(%esi);");
    asm("loc_4B57C9: fsts 0xB8(%esi);");
    asm("loc_4B57CF: fxch;");
    asm("loc_4B57D1: fstps 0xC4(%esi);");
    asm("loc_4B57D7: fchs;");
    asm("loc_4B57D9: fstps 0xC8(%esi);");
    asm("loc_4B57DF: call _sub_417730;");
    asm("loc_4B57E4: mov %eax,0x2C(%esp);");
    asm("loc_4B57E8: mov 0xE1(%esi),%al;");
    asm("loc_4B57EE: add $4,%esp;");
    asm("loc_4B57F1: test %al,%al;");
    asm("loc_4B57F3: mov %edx,0x2C(%esp);");
    asm("loc_4B57F7: je loc_4B592D;");
    asm("loc_4B57FD: flds 0x28(%esp);");
    asm("loc_4B5801: push %ebp;");
    asm("loc_4B5802: sub $8,%esp;");
    asm("loc_4B5805: fstpl (%esp);");
    asm("loc_4B5808: calll *_import_5C71C4;");
    asm("loc_4B580E: fstps 0x18(%esp);");
    asm("loc_4B5812: flds 0x38(%esp);");
    asm("loc_4B5816: fstpl (%esp);");
    asm("loc_4B5819: calll *_import_5C71C4;");
    asm("loc_4B581F: fstps 0x1C(%esp);");
    asm("loc_4B5823: push $0x1701;");
    asm("loc_4B5828: flds 0xB4(%esi);");
    asm("loc_4B582E: fadds _data_5D4F28;");
    asm("loc_4B5834: fstps 0x2C(%esp);");
    asm("loc_4B5838: flds 0xB8(%esi);");
    asm("loc_4B583E: fadds _data_5D55B4;");
    asm("loc_4B5844: fstps 0x30(%esp);");
    asm("loc_4B5848: call _sub_401E90;");
    asm("loc_4B584D: call _sub_422A70;");
    asm("loc_4B5852: call _sub_4225E0;");
    asm("loc_4B5857: lea 0xD8(%esi),%edx;");
    asm("loc_4B585D: push %edx;");
    asm("loc_4B585E: call _sub_421BA0;");
    asm("loc_4B5863: push $0xDE1;");
    asm("loc_4B5868: call _sub_421ED0;");
    asm("loc_4B586D: push $8;");
    asm("loc_4B586F: call _sub_421670;");
    asm("loc_4B5874: mov 0x2C(%esp),%eax;");
    asm("loc_4B5878: mov 0x28(%esp),%ecx;");
    asm("loc_4B587C: push %ebx;");
    asm("loc_4B587D: mov %eax,%edi;");
    asm("loc_4B587F: mov %ecx,%ebp;");
    asm("loc_4B5881: push %edi;");
    asm("loc_4B5882: push %ebp;");
    asm("loc_4B5883: mov %eax,0x3C(%esp);");
    asm("loc_4B5887: mov %ecx,0x40(%esp);");
    asm("loc_4B588B: call _sub_421CC0;");
    asm("loc_4B5890: flds 0x44(%esp);");
    asm("loc_4B5894: fadds 0x34(%esp);");
    asm("loc_4B5898: push %ebx;");
    asm("loc_4B5899: push %edi;");
    asm("loc_4B589A: fstps 0x4C(%esp);");
    asm("loc_4B589E: mov 0x4C(%esp),%ebx;");
    asm("loc_4B58A2: push %ebx;");
    asm("loc_4B58A3: call _sub_421CC0;");
    asm("loc_4B58A8: flds 0x54(%esp);");
    asm("loc_4B58AC: fadds 0x44(%esp);");
    asm("loc_4B58B0: push $0;");
    asm("loc_4B58B2: fstps 0x44(%esp);");
    asm("loc_4B58B6: mov 0x44(%esp),%edx;");
    asm("loc_4B58BA: push %edx;");
    asm("loc_4B58BB: push %ebx;");
    asm("loc_4B58BC: call _sub_421CC0;");
    asm("loc_4B58C1: mov 0x4C(%esp),%eax;");
    asm("loc_4B58C5: push $0;");
    asm("loc_4B58C7: push %eax;");
    asm("loc_4B58C8: push %ebp;");
    asm("loc_4B58C9: call _sub_421CC0;");
    asm("loc_4B58CE: add $0x48,%esp;");
    asm("loc_4B58D1: call _sub_421690;");
    asm("loc_4B58D6: push $_data_679BB4;");
    asm("loc_4B58DB: call _sub_421BA0;");
    asm("loc_4B58E0: push $7;");
    asm("loc_4B58E2: call _sub_421670;");
    asm("loc_4B58E7: push $0;");
    asm("loc_4B58E9: push %edi;");
    asm("loc_4B58EA: push %ebp;");
    asm("loc_4B58EB: call _sub_421CC0;");
    asm("loc_4B58F0: push $0;");
    asm("loc_4B58F2: push %edi;");
    asm("loc_4B58F3: push %ebx;");
    asm("loc_4B58F4: call _sub_421CC0;");
    asm("loc_4B58F9: mov 0x30(%esp),%edi;");
    asm("loc_4B58FD: push $0;");
    asm("loc_4B58FF: push %edi;");
    asm("loc_4B5900: push %ebx;");
    asm("loc_4B5901: call _sub_421CC0;");
    asm("loc_4B5906: push $0;");
    asm("loc_4B5908: push %edi;");
    asm("loc_4B5909: push %ebp;");
    asm("loc_4B590A: call _sub_421CC0;");
    asm("loc_4B590F: call _sub_421690;");
    asm("loc_4B5914: push $0x1701;");
    asm("loc_4B5919: call _sub_401E90;");
    asm("loc_4B591E: add $0x3C,%esp;");
    asm("loc_4B5921: call _sub_422AB0;");
    asm("loc_4B5926: mov 0x28(%esp),%edi;");
    asm("loc_4B592A: xor %ebx,%ebx;");
    asm("loc_4B592C: pop %ebp;");
    asm("loc_4B592D: add $0xCC,%esi;");
    asm("loc_4B5933: push %esi;");
    asm("loc_4B5934: call _sub_417780;");
    asm("loc_4B5939: flds 0x2C(%esp);");
    asm("loc_4B593D: fadds _data_5C75DC;");
    asm("loc_4B5943: mov 0x30(%esp),%ecx;");
    asm("loc_4B5947: mov 0x34(%esp),%edx;");
    asm("loc_4B594B: mov 0x38(%esp),%eax;");
    asm("loc_4B594F: fstps 0x3C(%esp);");
    asm("loc_4B5953: mov %edx,0x2C(%esp);");
    asm("loc_4B5957: mov %ebx,0x30(%esp);");
    asm("loc_4B595B: fildll 0x2C(%esp);");
    asm("loc_4B595F: add $4,%esp;");
    asm("loc_4B5962: mov %eax,0x28(%esp);");
    asm("loc_4B5966: fstps 0x40(%esp);");
    asm("loc_4B596A: push %ebx;");
    asm("loc_4B596B: mov %ebx,0x30(%esp);");
    asm("loc_4B596F: fildll 0x2C(%esp);");
    asm("loc_4B5973: push %ebx;");
    asm("loc_4B5974: mov %ecx,0x44(%esp);");
    asm("loc_4B5978: fstps 0x4C(%esp);");
    asm("loc_4B597C: push %edi;");
    asm("loc_4B597D: lea 0x44(%esp),%ecx;");
    asm("loc_4B5981: mov %ebx,0x54(%esp);");
    asm("loc_4B5985: mov %ebx,0x58(%esp);");
    asm("loc_4B5989: call _sub_4143C0;");
    asm("loc_4B598E: push $0xB71;");
    asm("loc_4B5993: call _sub_421DD0;");
    asm("loc_4B5998: push $1;");
    asm("loc_4B599A: call _sub_422190;");
    asm("loc_4B599F: add $8,%esp;");
    asm("loc_4B59A2: pop %edi;");
    asm("loc_4B59A3: pop %ebx;");
    asm("loc_4B59A4: pop %esi;");
    asm("loc_4B59A5: add $0x44,%esp;");
    asm("loc_4B59A8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B59B0() // _sub_4B59B0
{
    __DEBUG_ASM(4B59B0);
    // chunk 0x4B59B0 _sub_4B59B0
    asm("loc_4B59B0: mov %fs:0,%eax;");
    asm("loc_4B59B6: push $0xFFFFFFFF;");
    asm("loc_4B59B8: push $_sub_5BD14F;");
    asm("loc_4B59BD: push %eax;");
    asm("loc_4B59BE: mov $0x1698,%eax;");
    asm("loc_4B59C3: mov %esp,%fs:0;");
    asm("loc_4B59CA: call _sub_5B7E90;");
    asm("loc_4B59CF: push %esi;");
    asm("loc_4B59D0: xor %esi,%esi;");
    asm("loc_4B59D2: push %esi;");
    asm("loc_4B59D3: lea 0x34(%esp),%eax;");
    asm("loc_4B59D7: push $_data_5D55C8;");
    asm("loc_4B59DC: push %eax;");
    asm("loc_4B59DD: mov %ecx,0x28(%esp);");
    asm("loc_4B59E1: calll *_import_5C6068;");
    asm("loc_4B59E7: add $0xC,%esp;");
    asm("loc_4B59EA: lea 0x134(%esp),%ecx;");
    asm("loc_4B59F1: calll *_import_5C605C;");
    asm("loc_4B59F7: push %esi;");
    asm("loc_4B59F8: lea 0x34(%esp),%ecx;");
    asm("loc_4B59FC: push %ecx;");
    asm("loc_4B59FD: lea 0x13C(%esp),%ecx;");
    asm("loc_4B5A04: mov %esi,0x16AC(%esp);");
    asm("loc_4B5A0B: calll *_import_5C6058;");
    asm("loc_4B5A11: test %al,%al;");
    asm("loc_4B5A13: je loc_4B5BC7;");
    asm("loc_4B5A19: lea 0x134(%esp),%ecx;");
    asm("loc_4B5A20: calll *_import_5C6054;");
    asm("loc_4B5A26: test %al,%al;");
    asm("loc_4B5A28: je loc_4B5BC7;");
    asm("loc_4B5A2E: push %ebx;");
    asm("loc_4B5A2F: push %ebp;");
    asm("loc_4B5A30: push %edi;");
    asm("loc_4B5A31: push $_data_5D55B8;");
    asm("loc_4B5A36: lea 0x144(%esp),%ecx;");
    asm("loc_4B5A3D: calll *_import_5C6050;");
    asm("loc_4B5A43: test %al,%al;");
    asm("loc_4B5A45: je loc_4B5BAD;");
    asm("loc_4B5A4B: lea 0x140(%esp),%ecx;");
    asm("loc_4B5A52: calll *_import_5C669C;");
    asm("loc_4B5A58: test %al,%al;");
    asm("loc_4B5A5A: je loc_4B5BAD;");
    asm("loc_4B5A60: push $_data_5CE780;");
    asm("loc_4B5A65: lea 0x144(%esp),%ecx;");
    asm("loc_4B5A6C: calll *_import_5C6CF4;");
    asm("loc_4B5A72: test %al,%al;");
    asm("loc_4B5A74: je loc_4B5B98;");
    asm("loc_4B5A7A: push $0;");
    asm("loc_4B5A7C: lea 0x144(%esp),%ecx;");
    asm("loc_4B5A83: calll *_import_5C6CFC;");
    asm("loc_4B5A89: call _sub_5B7EC0;");
    asm("loc_4B5A8E: push $1;");
    asm("loc_4B5A90: lea 0x144(%esp),%ecx;");
    asm("loc_4B5A97: mov %eax,%ebx;");
    asm("loc_4B5A99: calll *_import_5C6CFC;");
    asm("loc_4B5A9F: call _sub_5B7EC0;");
    asm("loc_4B5AA4: mov 0x28(%esp),%edx;");
    asm("loc_4B5AA8: mov 0x158(%edx),%ecx;");
    asm("loc_4B5AAE: mov %eax,0x1C(%esp);");
    asm("loc_4B5AB2: mov 0x154(%edx),%eax;");
    asm("loc_4B5AB8: lea 0x150(%edx),%edi;");
    asm("loc_4B5ABE: mov %ebx,0x18(%esp);");
    asm("loc_4B5AC2: mov 4(%eax),%esi;");
    asm("loc_4B5AC5: cmp %ecx,%esi;");
    asm("loc_4B5AC7: mov %eax,%ebp;");
    asm("loc_4B5AC9: mov $1,%al;");
    asm("loc_4B5ACB: je loc_4B5AE7;");
    asm("loc_4B5ACD: lea (%ecx),%ecx;");
    asm("loc_4B5AD0: cmp 0xC(%esi),%ebx;");
    asm("loc_4B5AD3: setb %al;");
    asm("loc_4B5AD6: test %al,%al;");
    asm("loc_4B5AD8: mov %esi,%ebp;");
    asm("loc_4B5ADA: je loc_4B5AE0;");
    asm("loc_4B5ADC: mov (%esi),%esi;");
    asm("loc_4B5ADE: jmp loc_4B5AE3;");
    asm("loc_4B5AE0: mov 8(%esi),%esi;");
    asm("loc_4B5AE3: cmp %ecx,%esi;");
    asm("loc_4B5AE5: jne loc_4B5AD0;");
    asm("loc_4B5AE7: mov 0xC(%edi),%cl;");
    asm("loc_4B5AEA: test %cl,%cl;");
    asm("loc_4B5AEC: je loc_4B5B11;");
    asm("loc_4B5AEE: lea 0x18(%esp),%eax;");
    asm("loc_4B5AF2: push %eax;");
    asm("loc_4B5AF3: push %ebp;");
    asm("loc_4B5AF4: push %esi;");
    asm("loc_4B5AF5: lea 0x44(%esp),%ecx;");
    asm("loc_4B5AF9: push %ecx;");
    asm("loc_4B5AFA: mov %edi,%ecx;");
    asm("loc_4B5AFC: call _sub_4B68B0;");
    asm("loc_4B5B01: mov (%eax),%edx;");
    asm("loc_4B5B03: mov %edx,0x20(%esp);");
    asm("loc_4B5B07: movb $1,0x24(%esp);");
    asm("loc_4B5B0C: jmp loc_4B5B98;");
    asm("loc_4B5B11: test %al,%al;");
    asm("loc_4B5B13: mov %ebp,0x14(%esp);");
    asm("loc_4B5B17: je loc_4B5B56;");
    asm("loc_4B5B19: lea 0x34(%esp),%eax;");
    asm("loc_4B5B1D: push %eax;");
    asm("loc_4B5B1E: mov %edi,%ecx;");
    asm("loc_4B5B20: call _sub_53E430;");
    asm("loc_4B5B25: mov 0x14(%esp),%ecx;");
    asm("loc_4B5B29: cmp (%eax),%ecx;");
    asm("loc_4B5B2B: jne loc_4B5B4D;");
    asm("loc_4B5B2D: lea 0x13(%esp),%edx;");
    asm("loc_4B5B31: push %edx;");
    asm("loc_4B5B32: lea 0x1C(%esp),%eax;");
    asm("loc_4B5B36: push %eax;");
    asm("loc_4B5B37: push %ebp;");
    asm("loc_4B5B38: push %esi;");
    asm("loc_4B5B39: lea 0x40(%esp),%ecx;");
    asm("loc_4B5B3D: push %ecx;");
    asm("loc_4B5B3E: mov %edi,%ecx;");
    asm("loc_4B5B40: movb $1,0x27(%esp);");
    asm("loc_4B5B45: call _sub_4B68B0;");
    asm("loc_4B5B4A: push %eax;");
    asm("loc_4B5B4B: jmp loc_4B5B8F;");
    asm("loc_4B5B4D: lea 0x14(%esp),%ecx;");
    asm("loc_4B5B51: call _sub_43C010;");
    asm("loc_4B5B56: mov 0x14(%esp),%eax;");
    asm("loc_4B5B5A: mov 0xC(%eax),%ecx;");
    asm("loc_4B5B5D: mov 0x18(%esp),%edx;");
    asm("loc_4B5B61: cmp %edx,%ecx;");
    asm("loc_4B5B63: lea 0x13(%esp),%ecx;");
    asm("loc_4B5B67: push %ecx;");
    asm("loc_4B5B68: jae loc_4B5B85;");
    asm("loc_4B5B6A: lea 0x1C(%esp),%edx;");
    asm("loc_4B5B6E: push %edx;");
    asm("loc_4B5B6F: push %ebp;");
    asm("loc_4B5B70: push %esi;");
    asm("loc_4B5B71: lea 0x3C(%esp),%eax;");
    asm("loc_4B5B75: push %eax;");
    asm("loc_4B5B76: mov %edi,%ecx;");
    asm("loc_4B5B78: movb $1,0x27(%esp);");
    asm("loc_4B5B7D: call _sub_4B68B0;");
    asm("loc_4B5B82: push %eax;");
    asm("loc_4B5B83: jmp loc_4B5B8F;");
    asm("loc_4B5B85: lea 0x18(%esp),%edx;");
    asm("loc_4B5B89: movb $0,0x17(%esp);");
    asm("loc_4B5B8E: push %edx;");
    asm("loc_4B5B8F: lea 0x28(%esp),%ecx;");
    asm("loc_4B5B93: call _sub_46D660;");
    asm("loc_4B5B98: lea 0x140(%esp),%ecx;");
    asm("loc_4B5B9F: calll *_import_5C669C;");
    asm("loc_4B5BA5: test %al,%al;");
    asm("loc_4B5BA7: jne loc_4B5A60;");
    asm("loc_4B5BAD: lea 0x140(%esp),%ecx;");
    asm("loc_4B5BB4: calll *_import_5C6054;");
    asm("loc_4B5BBA: test %al,%al;");
    asm("loc_4B5BBC: jne loc_4B5A31;");
    asm("loc_4B5BC2: pop %edi;");
    asm("loc_4B5BC3: pop %ebp;");
    asm("loc_4B5BC4: xor %esi,%esi;");
    asm("loc_4B5BC6: pop %ebx;");
    asm("loc_4B5BC7: lea 0x155C(%esp),%eax;");
    asm("loc_4B5BCE: movl $1,0x16A4(%esp);");
    asm("loc_4B5BD9: mov %eax,0x20(%esp);");
    asm("loc_4B5BDD: lea 0x155C(%esp),%ecx;");
    asm("loc_4B5BE4: movb $2,0x16A4(%esp);");
    asm("loc_4B5BEC: calll *_import_5C604C;");
    asm("loc_4B5BF2: mov 0x1560(%esp),%eax;");
    asm("loc_4B5BF9: cmp %esi,%eax;");
    asm("loc_4B5BFB: je loc_4B5C19;");
    asm("loc_4B5BFD: mov -1(%eax),%cl;");
    asm("loc_4B5C00: dec %eax;");
    asm("loc_4B5C01: test %cl,%cl;");
    asm("loc_4B5C03: je loc_4B5C10;");
    asm("loc_4B5C05: cmp $0xFF,%cl;");
    asm("loc_4B5C08: je loc_4B5C10;");
    asm("loc_4B5C0A: dec %cl;");
    asm("loc_4B5C0C: mov %cl,(%eax);");
    asm("loc_4B5C0E: jmp loc_4B5C19;");
    asm("loc_4B5C10: push %eax;");
    asm("loc_4B5C11: call _sub_5B7E1D;");
    asm("loc_4B5C16: add $4,%esp;");
    asm("loc_4B5C19: mov %esi,0x1560(%esp);");
    asm("loc_4B5C20: mov %esi,0x1564(%esp);");
    asm("loc_4B5C27: mov %esi,0x1568(%esp);");
    asm("loc_4B5C2E: lea 0x134(%esp),%ecx;");
    asm("loc_4B5C35: movl $3,0x16A4(%esp);");
    asm("loc_4B5C40: calll *_import_5C604C;");
    asm("loc_4B5C46: mov 0x138(%esp),%eax;");
    asm("loc_4B5C4D: cmp %esi,%eax;");
    asm("loc_4B5C4F: pop %esi;");
    asm("loc_4B5C50: je loc_4B5C81;");
    asm("loc_4B5C52: mov -1(%eax),%cl;");
    asm("loc_4B5C55: dec %eax;");
    asm("loc_4B5C56: test %cl,%cl;");
    asm("loc_4B5C58: je loc_4B5C78;");
    asm("loc_4B5C5A: cmp $0xFF,%cl;");
    asm("loc_4B5C5D: je loc_4B5C78;");
    asm("loc_4B5C5F: dec %cl;");
    asm("loc_4B5C61: mov %cl,(%eax);");
    asm("loc_4B5C63: mov 0x1698(%esp),%ecx;");
    asm("loc_4B5C6A: mov %ecx,%fs:0;");
    asm("loc_4B5C71: add $0x16A4,%esp;");
    asm("loc_4B5C77: ret;");
    asm("loc_4B5C78: push %eax;");
    asm("loc_4B5C79: call _sub_5B7E1D;");
    asm("loc_4B5C7E: add $4,%esp;");
    asm("loc_4B5C81: mov 0x1698(%esp),%ecx;");
    asm("loc_4B5C88: mov %ecx,%fs:0;");
    asm("loc_4B5C8F: add $0x16A4,%esp;");
    asm("loc_4B5C95: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5CA0() // _sub_4B5CA0
{
    __DEBUG_ASM(4B5CA0);
    // chunk 0x4B5CA0 _sub_4B5CA0
    asm("loc_4B5CA0: mov %fs:0,%eax;");
    asm("loc_4B5CA6: push $0xFFFFFFFF;");
    asm("loc_4B5CA8: push $_sub_5BD1A6;");
    asm("loc_4B5CAD: push %eax;");
    asm("loc_4B5CAE: mov %esp,%fs:0;");
    asm("loc_4B5CB5: sub $0x78,%esp;");
    asm("loc_4B5CB8: push %ebx;");
    asm("loc_4B5CB9: push %esi;");
    asm("loc_4B5CBA: push %edi;");
    asm("loc_4B5CBB: mov 0x94(%esp),%edi;");
    asm("loc_4B5CC2: mov 4(%edi),%eax;");
    asm("loc_4B5CC5: xor %ebx,%ebx;");
    asm("loc_4B5CC7: cmp %ebx,%eax;");
    asm("loc_4B5CC9: mov %ecx,%esi;");
    asm("loc_4B5CCB: je loc_4B5FAF;");
    asm("loc_4B5CD1: call _sub_41DD90;");
    asm("loc_4B5CD6: test %al,%al;");
    asm("loc_4B5CD8: jne loc_4B5CE3;");
    asm("loc_4B5CDA: andb $0xFD,0x6C(%esi);");
    asm("loc_4B5CDE: jmp loc_4B5FAF;");
    asm("loc_4B5CE3: push $_data_5D55E0;");
    asm("loc_4B5CE8: call _sub_5B36B0;");
    asm("loc_4B5CED: flds 0x14(%eax);");
    asm("loc_4B5CF0: fcompl _data_5C8B68;");
    asm("loc_4B5CF6: add $4,%esp;");
    asm("loc_4B5CF9: fnstsw %ax;");
    asm("loc_4B5CFB: test $5,%ah;");
    asm("loc_4B5CFE: jnp loc_4B5FAF;");
    asm("loc_4B5D04: flds 0x164(%esi);");
    asm("loc_4B5D0A: fcomps _data_5C7474;");
    asm("loc_4B5D10: fnstsw %ax;");
    asm("loc_4B5D12: test $0x41,%ah;");
    asm("loc_4B5D15: je loc_4B5FAF;");
    asm("loc_4B5D1B: mov 0xEC(%esi),%eax;");
    asm("loc_4B5D21: cmp (%edi),%eax;");
    asm("loc_4B5D23: jne loc_4B5D2D;");
    asm("loc_4B5D25: cmp %bl,0x178(%esi);");
    asm("loc_4B5D2B: jne loc_4B5D57;");
    asm("loc_4B5D2D: flds 0x17C(%esi);");
    asm("loc_4B5D33: fcomps _data_5C7474;");
    asm("loc_4B5D39: fnstsw %ax;");
    asm("loc_4B5D3B: test $0x41,%ah;");
    asm("loc_4B5D3E: je loc_4B5D57;");
    asm("loc_4B5D40: flds 0x180(%esi);");
    asm("loc_4B5D46: fcomps _data_5C94F8;");
    asm("loc_4B5D4C: fnstsw %ax;");
    asm("loc_4B5D4E: test $1,%ah;");
    asm("loc_4B5D51: jne loc_4B5FAF;");
    asm("loc_4B5D57: mov 4(%edi),%ecx;");
    asm("loc_4B5D5A: lea 0x10(%esp),%edx;");
    asm("loc_4B5D5E: push %edx;");
    asm("loc_4B5D5F: lea 0x10(%esp),%eax;");
    asm("loc_4B5D63: mov %ecx,0x14(%esp);");
    asm("loc_4B5D67: push %eax;");
    asm("loc_4B5D68: lea 0x150(%esi),%ecx;");
    asm("loc_4B5D6E: call _sub_432240;");
    asm("loc_4B5D73: mov 0x154(%esi),%eax;");
    asm("loc_4B5D79: cmp %eax,0xC(%esp);");
    asm("loc_4B5D7D: je loc_4B5FAF;");
    asm("loc_4B5D83: mov %ebx,0x28(%esp);");
    asm("loc_4B5D87: mov %ebx,0x2C(%esp);");
    asm("loc_4B5D8B: lea 0x30(%esp),%ecx;");
    asm("loc_4B5D8F: mov %ebx,0x8C(%esp);");
    asm("loc_4B5D96: call _sub_4144B0;");
    asm("loc_4B5D9B: push $0xFFFFFFFF;");
    asm("loc_4B5D9D: push %ebx;");
    asm("loc_4B5D9E: lea 0x30(%esp),%ecx;");
    asm("loc_4B5DA2: mov %ebx,0x2C(%esp);");
    asm("loc_4B5DA6: movl $0xFFFFFFFF,0x28(%esp);");
    asm("loc_4B5DAE: mov %ebx,0x6C(%esp);");
    asm("loc_4B5DB2: call _sub_413DF0;");
    asm("loc_4B5DB7: mov %bl,0x80(%esp);");
    asm("loc_4B5DBE: mov (%edi),%eax;");
    asm("loc_4B5DC0: mov 0xC(%esp),%ecx;");
    asm("loc_4B5DC4: mov 0x10(%ecx),%edx;");
    asm("loc_4B5DC7: mov 8(%edi),%edi;");
    asm("loc_4B5DCA: cmp %ebx,%edi;");
    asm("loc_4B5DCC: movl $1,0x8C(%esp);");
    asm("loc_4B5DD7: mov %edx,0x24(%esp);");
    asm("loc_4B5DDB: mov %eax,0x20(%esp);");
    asm("loc_4B5DDF: je loc_4B5E16;");
    asm("loc_4B5DE1: push %ebp;");
    asm("loc_4B5DE2: push %edi;");
    asm("loc_4B5DE3: calll *_import_5C71C8;");
    asm("loc_4B5DE9: mov %eax,%ebp;");
    asm("loc_4B5DEB: add $4,%esp;");
    asm("loc_4B5DEE: lea 1(%ebp),%ecx;");
    asm("loc_4B5DF1: push %ecx;");
    asm("loc_4B5DF2: lea 0x30(%esp),%ecx;");
    asm("loc_4B5DF6: call _sub_4142A0;");
    asm("loc_4B5DFB: mov 0x2C(%esp),%edx;");
    asm("loc_4B5DFF: push %ebp;");
    asm("loc_4B5E00: push %edi;");
    asm("loc_4B5E01: push %edx;");
    asm("loc_4B5E02: calll *_import_5C71C0;");
    asm("loc_4B5E08: mov 0x38(%esp),%eax;");
    asm("loc_4B5E0C: add $0xC,%esp;");
    asm("loc_4B5E0F: mov %bx,(%eax,%ebp,2);");
    asm("loc_4B5E13: pop %ebp;");
    asm("loc_4B5E14: jmp loc_4B5E26;");
    asm("loc_4B5E16: mov 0x28(%esp),%eax;");
    asm("loc_4B5E1A: cmp %ebx,%eax;");
    asm("loc_4B5E1C: je loc_4B5E26;");
    asm("loc_4B5E1E: cmp %bx,(%eax);");
    asm("loc_4B5E21: je loc_4B5E26;");
    asm("loc_4B5E23: mov %bx,(%eax);");
    asm("loc_4B5E26: mov 0x6C(%esi),%al;");
    asm("loc_4B5E29: mov 0x20(%esp),%ecx;");
    asm("loc_4B5E2D: mov 0xEC(%esi),%edx;");
    asm("loc_4B5E33: or $1,%al;");
    asm("loc_4B5E35: cmp %ecx,%edx;");
    asm("loc_4B5E37: mov %al,0x6C(%esi);");
    asm("loc_4B5E3A: jne loc_4B5E9F;");
    asm("loc_4B5E3C: or $2,%al;");
    asm("loc_4B5E3E: mov %al,0x6C(%esi);");
    asm("loc_4B5E41: lea 0x30(%esp),%edx;");
    asm("loc_4B5E45: movl $2,0x8C(%esp);");
    asm("loc_4B5E50: mov %edx,0x10(%esp);");
    asm("loc_4B5E54: lea 0x30(%esp),%ecx;");
    asm("loc_4B5E58: movb $4,0x8C(%esp);");
    asm("loc_4B5E60: call _sub_4144F0;");
    asm("loc_4B5E65: lea 0x3C(%esp),%ecx;");
    asm("loc_4B5E69: movb $3,0x8C(%esp);");
    asm("loc_4B5E71: call _sub_445D70;");
    asm("loc_4B5E76: lea 0x30(%esp),%ecx;");
    asm("loc_4B5E7A: movb $2,0x8C(%esp);");
    asm("loc_4B5E82: call _sub_444E20;");
    asm("loc_4B5E87: mov 0x28(%esp),%eax;");
    asm("loc_4B5E8B: cmp %ebx,%eax;");
    asm("loc_4B5E8D: je loc_4B5FAF;");
    asm("loc_4B5E93: push %eax;");
    asm("loc_4B5E94: calll *_import_5C71D8;");
    asm("loc_4B5E9A: jmp loc_4B5FAC;");
    asm("loc_4B5E9F: call _sub_5B0880;");
    asm("loc_4B5EA4: test %al,%al;");
    asm("loc_4B5EA6: lea 0x16C(%esi),%edi;");
    asm("loc_4B5EAC: movl $0xBF800000,0x1C(%esp);");
    asm("loc_4B5EB4: movl $0x3EC51EB8,0x18(%esp);");
    asm("loc_4B5EBC: mov %edi,%ecx;");
    asm("loc_4B5EBE: je loc_4B5EC8;");
    asm("loc_4B5EC0: mov 0x188(%esi),%eax;");
    asm("loc_4B5EC6: jmp loc_4B5ECE;");
    asm("loc_4B5EC8: mov 0x184(%esi),%eax;");
    asm("loc_4B5ECE: mov %eax,%edx;");
    asm("loc_4B5ED0: mov %edx,(%ecx);");
    asm("loc_4B5ED2: mov 0x1C(%esp),%edx;");
    asm("loc_4B5ED6: mov %eax,0x14(%esp);");
    asm("loc_4B5EDA: mov 0x18(%esp),%eax;");
    asm("loc_4B5EDE: mov %eax,4(%ecx);");
    asm("loc_4B5EE1: mov 0x20(%esp),%eax;");
    asm("loc_4B5EE5: mov %edx,8(%ecx);");
    asm("loc_4B5EE8: mov 0x6C(%esi),%dl;");
    asm("loc_4B5EEB: mov %eax,0xEC(%esi);");
    asm("loc_4B5EF1: mov 0x24(%esp),%eax;");
    asm("loc_4B5EF5: or $2,%dl;");
    asm("loc_4B5EF8: cmp %ebx,%eax;");
    asm("loc_4B5EFA: mov %dl,0x6C(%esi);");
    asm("loc_4B5EFD: mov %eax,0xF0(%esi);");
    asm("loc_4B5F03: je loc_4B5F2F;");
    asm("loc_4B5F05: mov _data_6119F8,%ecx;");
    asm("loc_4B5F0B: mov _data_67ECA8,%edx;");
    asm("loc_4B5F11: push %ecx;");
    asm("loc_4B5F12: push $_data_66FC60;");
    asm("loc_4B5F17: push %eax;");
    asm("loc_4B5F18: push %edx;");
    asm("loc_4B5F19: call _sub_4347E0;");
    asm("loc_4B5F1E: mov (%esi),%eax;");
    asm("loc_4B5F20: add $0x10,%esp;");
    asm("loc_4B5F23: push $_data_66FC60;");
    asm("loc_4B5F28: mov %esi,%ecx;");
    asm("loc_4B5F2A: calll *0x70(%eax);");
    asm("loc_4B5F2D: jmp loc_4B5F3B;");
    asm("loc_4B5F2F: mov 0x28(%esp),%eax;");
    asm("loc_4B5F33: mov (%esi),%edx;");
    asm("loc_4B5F35: push %eax;");
    asm("loc_4B5F36: mov %esi,%ecx;");
    asm("loc_4B5F38: calll *0x70(%edx);");
    asm("loc_4B5F3B: mov (%esi),%edx;");
    asm("loc_4B5F3D: push %edi;");
    asm("loc_4B5F3E: mov %esi,%ecx;");
    asm("loc_4B5F40: calll *0x14(%edx);");
    asm("loc_4B5F43: mov 0x24(%esp),%eax;");
    asm("loc_4B5F47: push %eax;");
    asm("loc_4B5F48: call _sub_459930;");
    asm("loc_4B5F4D: add $4,%esp;");
    asm("loc_4B5F50: lea 0x30(%esp),%ecx;");
    asm("loc_4B5F54: movl $5,0x8C(%esp);");
    asm("loc_4B5F5F: mov %ecx,0x10(%esp);");
    asm("loc_4B5F63: lea 0x30(%esp),%ecx;");
    asm("loc_4B5F67: movb $7,0x8C(%esp);");
    asm("loc_4B5F6F: call _sub_4144F0;");
    asm("loc_4B5F74: lea 0x3C(%esp),%ecx;");
    asm("loc_4B5F78: movb $6,0x8C(%esp);");
    asm("loc_4B5F80: call _sub_445D70;");
    asm("loc_4B5F85: mov 0x30(%esp),%eax;");
    asm("loc_4B5F89: cmp %ebx,%eax;");
    asm("loc_4B5F8B: mov _import_5C71D8,%esi;");
    asm("loc_4B5F91: je loc_4B5FA1;");
    asm("loc_4B5F93: push %eax;");
    asm("loc_4B5F94: call *%esi;");
    asm("loc_4B5F96: add $4,%esp;");
    asm("loc_4B5F99: mov %ebx,0x30(%esp);");
    asm("loc_4B5F9D: mov %ebx,0x34(%esp);");
    asm("loc_4B5FA1: mov 0x28(%esp),%eax;");
    asm("loc_4B5FA5: cmp %ebx,%eax;");
    asm("loc_4B5FA7: je loc_4B5FAF;");
    asm("loc_4B5FA9: push %eax;");
    asm("loc_4B5FAA: call *%esi;");
    asm("loc_4B5FAC: add $4,%esp;");
    asm("loc_4B5FAF: mov 0x84(%esp),%ecx;");
    asm("loc_4B5FB6: pop %edi;");
    asm("loc_4B5FB7: pop %esi;");
    asm("loc_4B5FB8: pop %ebx;");
    asm("loc_4B5FB9: mov %ecx,%fs:0;");
    asm("loc_4B5FC0: add $0x84,%esp;");
    asm("loc_4B5FC6: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B5FD0() // _sub_4B5FD0
{
    __DEBUG_ASM(4B5FD0);
    // chunk 0x4B5FD0 _sub_4B5FD0
    asm("loc_4B5FD0: sub $0xC,%esp;");
    asm("loc_4B5FD3: push %ebx;");
    asm("loc_4B5FD4: push %esi;");
    asm("loc_4B5FD5: push %edi;");
    asm("loc_4B5FD6: mov 0x1C(%esp),%edi;");
    asm("loc_4B5FDA: mov 4(%edi),%eax;");
    asm("loc_4B5FDD: test %eax,%eax;");
    asm("loc_4B5FDF: mov %ecx,%esi;");
    asm("loc_4B5FE1: je loc_4B6126;");
    asm("loc_4B5FE7: call _sub_41DD90;");
    asm("loc_4B5FEC: test %al,%al;");
    asm("loc_4B5FEE: jne loc_4B6001;");
    asm("loc_4B5FF0: mov 0x6C(%esi),%al;");
    asm("loc_4B5FF3: and $0xFD,%al;");
    asm("loc_4B5FF5: pop %edi;");
    asm("loc_4B5FF6: mov %al,0x6C(%esi);");
    asm("loc_4B5FF9: pop %esi;");
    asm("loc_4B5FFA: pop %ebx;");
    asm("loc_4B5FFB: add $0xC,%esp;");
    asm("loc_4B5FFE: ret $8;");
    asm("loc_4B6001: push $_data_5D55E0;");
    asm("loc_4B6006: call _sub_5B36B0;");
    asm("loc_4B600B: flds 0x14(%eax);");
    asm("loc_4B600E: fcompl _data_5C8B68;");
    asm("loc_4B6014: add $4,%esp;");
    asm("loc_4B6017: fnstsw %ax;");
    asm("loc_4B6019: test $5,%ah;");
    asm("loc_4B601C: jnp loc_4B6126;");
    asm("loc_4B6022: mov 0x6C(%esi),%bl;");
    asm("loc_4B6025: mov 0xEC(%esi),%eax;");
    asm("loc_4B602B: or $1,%bl;");
    asm("loc_4B602E: mov %bl,0x6C(%esi);");
    asm("loc_4B6031: cmp (%edi),%eax;");
    asm("loc_4B6033: mov %bl,%cl;");
    asm("loc_4B6035: jne loc_4B6059;");
    asm("loc_4B6037: flds 0x164(%esi);");
    asm("loc_4B603D: fcomps _data_5C7474;");
    asm("loc_4B6043: fnstsw %ax;");
    asm("loc_4B6045: test $0x41,%ah;");
    asm("loc_4B6048: jne loc_4B6059;");
    asm("loc_4B604A: or $2,%cl;");
    asm("loc_4B604D: pop %edi;");
    asm("loc_4B604E: mov %cl,0x6C(%esi);");
    asm("loc_4B6051: pop %esi;");
    asm("loc_4B6052: pop %ebx;");
    asm("loc_4B6053: add $0xC,%esp;");
    asm("loc_4B6056: ret $8;");
    asm("loc_4B6059: call _sub_5B0880;");
    asm("loc_4B605E: test %al,%al;");
    asm("loc_4B6060: lea 0x16C(%esi),%ebx;");
    asm("loc_4B6066: movl $0xBF800000,0x14(%esp);");
    asm("loc_4B606E: movl $0x3EC51EB8,0x10(%esp);");
    asm("loc_4B6076: je loc_4B609A;");
    asm("loc_4B6078: flds 0x188(%esi);");
    asm("loc_4B607E: mov 0x10(%esp),%eax;");
    asm("loc_4B6082: fstps 0xC(%esp);");
    asm("loc_4B6086: mov 0xC(%esp),%edx;");
    asm("loc_4B608A: mov %ebx,%ecx;");
    asm("loc_4B608C: mov %edx,(%ecx);");
    asm("loc_4B608E: mov 0x14(%esp),%edx;");
    asm("loc_4B6092: mov %eax,4(%ecx);");
    asm("loc_4B6095: mov %edx,8(%ecx);");
    asm("loc_4B6098: jmp loc_4B60BA;");
    asm("loc_4B609A: flds 0x184(%esi);");
    asm("loc_4B60A0: mov 0x10(%esp),%edx;");
    asm("loc_4B60A4: fstps 0xC(%esp);");
    asm("loc_4B60A8: mov 0xC(%esp),%ecx;");
    asm("loc_4B60AC: mov %ebx,%eax;");
    asm("loc_4B60AE: mov %ecx,(%eax);");
    asm("loc_4B60B0: mov 0x14(%esp),%ecx;");
    asm("loc_4B60B4: mov %edx,4(%eax);");
    asm("loc_4B60B7: mov %ecx,8(%eax);");
    asm("loc_4B60BA: mov 0x20(%esp),%edx;");
    asm("loc_4B60BE: mov %edx,0x164(%esi);");
    asm("loc_4B60C4: orb $2,0x6C(%esi);");
    asm("loc_4B60C8: mov (%edi),%eax;");
    asm("loc_4B60CA: mov %eax,0xEC(%esi);");
    asm("loc_4B60D0: mov 4(%edi),%eax;");
    asm("loc_4B60D3: test %eax,%eax;");
    asm("loc_4B60D5: mov %eax,0xF0(%esi);");
    asm("loc_4B60DB: je loc_4B6107;");
    asm("loc_4B60DD: mov _data_6119F8,%ecx;");
    asm("loc_4B60E3: mov _data_67ECA8,%edx;");
    asm("loc_4B60E9: push %ecx;");
    asm("loc_4B60EA: push $_data_66FC60;");
    asm("loc_4B60EF: push %eax;");
    asm("loc_4B60F0: push %edx;");
    asm("loc_4B60F1: call _sub_4347E0;");
    asm("loc_4B60F6: mov (%esi),%eax;");
    asm("loc_4B60F8: add $0x10,%esp;");
    asm("loc_4B60FB: push $_data_66FC60;");
    asm("loc_4B6100: mov %esi,%ecx;");
    asm("loc_4B6102: calll *0x70(%eax);");
    asm("loc_4B6105: jmp loc_4B6112;");
    asm("loc_4B6107: mov 8(%edi),%eax;");
    asm("loc_4B610A: mov (%esi),%edx;");
    asm("loc_4B610C: push %eax;");
    asm("loc_4B610D: mov %esi,%ecx;");
    asm("loc_4B610F: calll *0x70(%edx);");
    asm("loc_4B6112: mov (%esi),%edx;");
    asm("loc_4B6114: push %ebx;");
    asm("loc_4B6115: mov %esi,%ecx;");
    asm("loc_4B6117: calll *0x14(%edx);");
    asm("loc_4B611A: mov 4(%edi),%eax;");
    asm("loc_4B611D: push %eax;");
    asm("loc_4B611E: call _sub_459930;");
    asm("loc_4B6123: add $4,%esp;");
    asm("loc_4B6126: pop %edi;");
    asm("loc_4B6127: pop %esi;");
    asm("loc_4B6128: pop %ebx;");
    asm("loc_4B6129: add $0xC,%esp;");
    asm("loc_4B612C: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6130() // _sub_4B6130
{
    __DEBUG_ASM(4B6130);
    // chunk 0x4B6130 _sub_4B6130
    asm("loc_4B6130: sub $0xC,%esp;");
    asm("loc_4B6133: push %ebx;");
    asm("loc_4B6134: push %esi;");
    asm("loc_4B6135: push %edi;");
    asm("loc_4B6136: mov 0x1C(%esp),%edi;");
    asm("loc_4B613A: mov 4(%edi),%eax;");
    asm("loc_4B613D: test %eax,%eax;");
    asm("loc_4B613F: mov %ecx,%esi;");
    asm("loc_4B6141: je loc_4B6256;");
    asm("loc_4B6147: call _sub_41DD90;");
    asm("loc_4B614C: test %al,%al;");
    asm("loc_4B614E: jne loc_4B6161;");
    asm("loc_4B6150: mov 0x6C(%esi),%al;");
    asm("loc_4B6153: and $0xFD,%al;");
    asm("loc_4B6155: pop %edi;");
    asm("loc_4B6156: mov %al,0x6C(%esi);");
    asm("loc_4B6159: pop %esi;");
    asm("loc_4B615A: pop %ebx;");
    asm("loc_4B615B: add $0xC,%esp;");
    asm("loc_4B615E: ret $0xC;");
    asm("loc_4B6161: push $_data_5D55E0;");
    asm("loc_4B6166: call _sub_5B36B0;");
    asm("loc_4B616B: flds 0x14(%eax);");
    asm("loc_4B616E: fcompl _data_5C8B68;");
    asm("loc_4B6174: add $4,%esp;");
    asm("loc_4B6177: fnstsw %ax;");
    asm("loc_4B6179: test $5,%ah;");
    asm("loc_4B617C: jnp loc_4B6256;");
    asm("loc_4B6182: mov 0x6C(%esi),%bl;");
    asm("loc_4B6185: mov 0xEC(%esi),%eax;");
    asm("loc_4B618B: or $1,%bl;");
    asm("loc_4B618E: mov %bl,0x6C(%esi);");
    asm("loc_4B6191: cmp (%edi),%eax;");
    asm("loc_4B6193: mov %bl,%cl;");
    asm("loc_4B6195: jne loc_4B61B9;");
    asm("loc_4B6197: flds 0x164(%esi);");
    asm("loc_4B619D: fcomps _data_5C7474;");
    asm("loc_4B61A3: fnstsw %ax;");
    asm("loc_4B61A5: test $0x41,%ah;");
    asm("loc_4B61A8: jne loc_4B61B9;");
    asm("loc_4B61AA: or $2,%cl;");
    asm("loc_4B61AD: pop %edi;");
    asm("loc_4B61AE: mov %cl,0x6C(%esi);");
    asm("loc_4B61B1: pop %esi;");
    asm("loc_4B61B2: pop %ebx;");
    asm("loc_4B61B3: add $0xC,%esp;");
    asm("loc_4B61B6: ret $0xC;");
    asm("loc_4B61B9: mov 0x24(%esp),%edx;");
    asm("loc_4B61BD: lea 0x16C(%esi),%ebx;");
    asm("loc_4B61C3: mov %ebx,%eax;");
    asm("loc_4B61C5: mov %edx,(%eax);");
    asm("loc_4B61C7: mov %edx,0xC(%esp);");
    asm("loc_4B61CB: movl $0x3EC51EB8,0x10(%esp);");
    asm("loc_4B61D3: mov 0x10(%esp),%edx;");
    asm("loc_4B61D7: mov %edx,4(%eax);");
    asm("loc_4B61DA: movl $0xBF800000,0x14(%esp);");
    asm("loc_4B61E2: mov 0x14(%esp),%edx;");
    asm("loc_4B61E6: mov %edx,8(%eax);");
    asm("loc_4B61E9: mov 0x20(%esp),%eax;");
    asm("loc_4B61ED: or $2,%cl;");
    asm("loc_4B61F0: mov %eax,0x164(%esi);");
    asm("loc_4B61F6: mov %cl,0x6C(%esi);");
    asm("loc_4B61F9: mov (%edi),%ecx;");
    asm("loc_4B61FB: mov %ecx,0xEC(%esi);");
    asm("loc_4B6201: mov 4(%edi),%eax;");
    asm("loc_4B6204: test %eax,%eax;");
    asm("loc_4B6206: mov %eax,0xF0(%esi);");
    asm("loc_4B620C: je loc_4B6237;");
    asm("loc_4B620E: mov _data_6119F8,%edx;");
    asm("loc_4B6214: push %edx;");
    asm("loc_4B6215: push $_data_66FC60;");
    asm("loc_4B621A: push %eax;");
    asm("loc_4B621B: mov _data_67ECA8,%eax;");
    asm("loc_4B6220: push %eax;");
    asm("loc_4B6221: call _sub_4347E0;");
    asm("loc_4B6226: mov (%esi),%edx;");
    asm("loc_4B6228: add $0x10,%esp;");
    asm("loc_4B622B: push $_data_66FC60;");
    asm("loc_4B6230: mov %esi,%ecx;");
    asm("loc_4B6232: calll *0x70(%edx);");
    asm("loc_4B6235: jmp loc_4B6242;");
    asm("loc_4B6237: mov 8(%edi),%ecx;");
    asm("loc_4B623A: mov (%esi),%eax;");
    asm("loc_4B623C: push %ecx;");
    asm("loc_4B623D: mov %esi,%ecx;");
    asm("loc_4B623F: calll *0x70(%eax);");
    asm("loc_4B6242: mov (%esi),%edx;");
    asm("loc_4B6244: push %ebx;");
    asm("loc_4B6245: mov %esi,%ecx;");
    asm("loc_4B6247: calll *0x14(%edx);");
    asm("loc_4B624A: mov 4(%edi),%eax;");
    asm("loc_4B624D: push %eax;");
    asm("loc_4B624E: call _sub_459930;");
    asm("loc_4B6253: add $4,%esp;");
    asm("loc_4B6256: pop %edi;");
    asm("loc_4B6257: pop %esi;");
    asm("loc_4B6258: pop %ebx;");
    asm("loc_4B6259: add $0xC,%esp;");
    asm("loc_4B625C: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6260() // _sub_4B6260
{
    __DEBUG_ASM(4B6260);
    // chunk 0x4B6260 _sub_4B6260
    asm("loc_4B6260: push $_data_5D5440;");
    asm("loc_4B6265: mov $_data_67224C,%ecx;");
    asm("loc_4B626A: call _sub_4B65C0;");
    asm("loc_4B626F: push $_sub_4B6280;");
    asm("loc_4B6274: call _sub_5B7E6C;");
    asm("loc_4B6279: pop %ecx;");
    asm("loc_4B627A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6280() // _unknown_libname_35
{
    __DEBUG_ASM(4B6280);
    // chunk 0x4B6280 _sub_4B6280
    asm("loc_4B6280: mov $_data_67224C,%ecx;");
    asm("loc_4B6285: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6290() // _sub_4B6290
{
    __DEBUG_ASM(4B6290);
    // chunk 0x4B6290 _sub_4B6290
    asm("loc_4B6290: mov _data_672288,%ecx;");
    asm("loc_4B6296: test %ecx,%ecx;");
    asm("loc_4B6298: je loc_4B62A9;");
    asm("loc_4B629A: mov 8(%esp),%eax;");
    asm("loc_4B629E: mov 4(%esp),%edx;");
    asm("loc_4B62A2: push %eax;");
    asm("loc_4B62A3: push %edx;");
    asm("loc_4B62A4: call _sub_4B5600;");
    asm("loc_4B62A9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B62B0() // _sub_4B62B0
{
    __DEBUG_ASM(4B62B0);
    // chunk 0x4B62B0 _sub_4B62B0
    asm("loc_4B62B0: mov _data_672288,%ecx;");
    asm("loc_4B62B6: test %ecx,%ecx;");
    asm("loc_4B62B8: je loc_4B62C4;");
    asm("loc_4B62BA: mov 4(%esp),%eax;");
    asm("loc_4B62BE: push %eax;");
    asm("loc_4B62BF: call _sub_4B5CA0;");
    asm("loc_4B62C4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B62D0() // _sub_4B62D0
{
    __DEBUG_ASM(4B62D0);
    // chunk 0x4B62D0 _sub_4B62D0
    asm("loc_4B62D0: mov _data_672288,%ecx;");
    asm("loc_4B62D6: test %ecx,%ecx;");
    asm("loc_4B62D8: je loc_4B62E9;");
    asm("loc_4B62DA: mov 8(%esp),%eax;");
    asm("loc_4B62DE: mov 4(%esp),%edx;");
    asm("loc_4B62E2: push %eax;");
    asm("loc_4B62E3: push %edx;");
    asm("loc_4B62E4: call _sub_4B5FD0;");
    asm("loc_4B62E9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B62F0() // _sub_4B62F0
{
    __DEBUG_ASM(4B62F0);
    // chunk 0x4B62F0 _sub_4B62F0
    asm("loc_4B62F0: mov %fs:0,%eax;");
    asm("loc_4B62F6: push $0xFFFFFFFF;");
    asm("loc_4B62F8: push $_sub_5BD1DB;");
    asm("loc_4B62FD: push %eax;");
    asm("loc_4B62FE: mov _data_672288,%eax;");
    asm("loc_4B6303: mov %esp,%fs:0;");
    asm("loc_4B630A: sub $0x64,%esp;");
    asm("loc_4B630D: push %ebx;");
    asm("loc_4B630E: xor %ebx,%ebx;");
    asm("loc_4B6310: cmp %ebx,%eax;");
    asm("loc_4B6312: push %esi;");
    asm("loc_4B6313: je loc_4B640A;");
    asm("loc_4B6319: mov %ebx,0x10(%esp);");
    asm("loc_4B631D: mov %ebx,0x14(%esp);");
    asm("loc_4B6321: lea 0x18(%esp),%ecx;");
    asm("loc_4B6325: mov %ebx,0x74(%esp);");
    asm("loc_4B6329: call _sub_4144B0;");
    asm("loc_4B632E: mov 0x10(%esp),%eax;");
    asm("loc_4B6332: cmp %ebx,%eax;");
    asm("loc_4B6334: mov %ebx,0xC(%esp);");
    asm("loc_4B6338: movl $0xFFFFFFFF,8(%esp);");
    asm("loc_4B6340: mov %ebx,0x4C(%esp);");
    asm("loc_4B6344: je loc_4B634E;");
    asm("loc_4B6346: cmp %bx,(%eax);");
    asm("loc_4B6349: je loc_4B634E;");
    asm("loc_4B634B: mov %bx,(%eax);");
    asm("loc_4B634E: push %edi;");
    asm("loc_4B634F: mov %bl,0x6C(%esp);");
    asm("loc_4B6353: mov 0x80(%esp),%eax;");
    asm("loc_4B635A: mov %eax,0xC(%esp);");
    asm("loc_4B635E: mov %eax,0x10(%esp);");
    asm("loc_4B6362: mov 0x84(%esp),%eax;");
    asm("loc_4B6369: push %eax;");
    asm("loc_4B636A: lea 0x10(%esp),%ecx;");
    asm("loc_4B636E: push %ecx;");
    asm("loc_4B636F: mov _data_672288,%ecx;");
    asm("loc_4B6375: movl $1,0x80(%esp);");
    asm("loc_4B6380: call _sub_4B5FD0;");
    asm("loc_4B6385: lea 0x1C(%esp),%edx;");
    asm("loc_4B6389: movl $2,0x78(%esp);");
    asm("loc_4B6391: mov %edx,0x80(%esp);");
    asm("loc_4B6398: lea 0x1C(%esp),%ecx;");
    asm("loc_4B639C: movb $4,0x78(%esp);");
    asm("loc_4B63A1: call _sub_4144F0;");
    asm("loc_4B63A6: mov 0x30(%esp),%edi;");
    asm("loc_4B63AA: mov 0x2C(%esp),%esi;");
    asm("loc_4B63AE: cmp %edi,%esi;");
    asm("loc_4B63B0: movb $3,0x78(%esp);");
    asm("loc_4B63B5: je loc_4B63CA;");
    asm("loc_4B63B7: push %ebx;");
    asm("loc_4B63B8: mov %esi,%ecx;");
    asm("loc_4B63BA: call _sub_418F70;");
    asm("loc_4B63BF: add $8,%esi;");
    asm("loc_4B63C2: cmp %edi,%esi;");
    asm("loc_4B63C4: jne loc_4B63B7;");
    asm("loc_4B63C6: mov 0x2C(%esp),%esi;");
    asm("loc_4B63CA: push %esi;");
    asm("loc_4B63CB: call _sub_5B7E1D;");
    asm("loc_4B63D0: mov 0x20(%esp),%eax;");
    asm("loc_4B63D4: mov _import_5C71D8,%esi;");
    asm("loc_4B63DA: add $4,%esp;");
    asm("loc_4B63DD: cmp %ebx,%eax;");
    asm("loc_4B63DF: mov %ebx,0x2C(%esp);");
    asm("loc_4B63E3: mov %ebx,0x30(%esp);");
    asm("loc_4B63E7: mov %ebx,0x34(%esp);");
    asm("loc_4B63EB: pop %edi;");
    asm("loc_4B63EC: je loc_4B63FC;");
    asm("loc_4B63EE: push %eax;");
    asm("loc_4B63EF: call *%esi;");
    asm("loc_4B63F1: add $4,%esp;");
    asm("loc_4B63F4: mov %ebx,0x18(%esp);");
    asm("loc_4B63F8: mov %ebx,0x1C(%esp);");
    asm("loc_4B63FC: mov 0x10(%esp),%eax;");
    asm("loc_4B6400: cmp %ebx,%eax;");
    asm("loc_4B6402: je loc_4B640A;");
    asm("loc_4B6404: push %eax;");
    asm("loc_4B6405: call *%esi;");
    asm("loc_4B6407: add $4,%esp;");
    asm("loc_4B640A: mov 0x6C(%esp),%ecx;");
    asm("loc_4B640E: pop %esi;");
    asm("loc_4B640F: pop %ebx;");
    asm("loc_4B6410: mov %ecx,%fs:0;");
    asm("loc_4B6417: add $0x70,%esp;");
    asm("loc_4B641A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6420() // _sub_4B6420
{
    __DEBUG_ASM(4B6420);
    // chunk 0x4B6420 _sub_4B6420
    asm("loc_4B6420: mov _data_672288,%ecx;");
    asm("loc_4B6426: test %ecx,%ecx;");
    asm("loc_4B6428: je loc_4B643E;");
    asm("loc_4B642A: mov 0xC(%esp),%eax;");
    asm("loc_4B642E: mov 8(%esp),%edx;");
    asm("loc_4B6432: push %eax;");
    asm("loc_4B6433: mov 8(%esp),%eax;");
    asm("loc_4B6437: push %edx;");
    asm("loc_4B6438: push %eax;");
    asm("loc_4B6439: call _sub_4B6130;");
    asm("loc_4B643E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6440() // _sub_4B6440
{
    __DEBUG_ASM(4B6440);
    // chunk 0x4B6440 _sub_4B6440
    asm("loc_4B6440: mov %fs:0,%eax;");
    asm("loc_4B6446: push $0xFFFFFFFF;");
    asm("loc_4B6448: push $_sub_5BD1DB;");
    asm("loc_4B644D: push %eax;");
    asm("loc_4B644E: mov _data_672288,%eax;");
    asm("loc_4B6453: mov %esp,%fs:0;");
    asm("loc_4B645A: sub $0x64,%esp;");
    asm("loc_4B645D: push %ebx;");
    asm("loc_4B645E: xor %ebx,%ebx;");
    asm("loc_4B6460: cmp %ebx,%eax;");
    asm("loc_4B6462: push %esi;");
    asm("loc_4B6463: je loc_4B6563;");
    asm("loc_4B6469: mov %ebx,0x10(%esp);");
    asm("loc_4B646D: mov %ebx,0x14(%esp);");
    asm("loc_4B6471: lea 0x18(%esp),%ecx;");
    asm("loc_4B6475: mov %ebx,0x74(%esp);");
    asm("loc_4B6479: call _sub_4144B0;");
    asm("loc_4B647E: mov 0x10(%esp),%eax;");
    asm("loc_4B6482: cmp %ebx,%eax;");
    asm("loc_4B6484: mov %ebx,0xC(%esp);");
    asm("loc_4B6488: movl $0xFFFFFFFF,8(%esp);");
    asm("loc_4B6490: mov %ebx,0x4C(%esp);");
    asm("loc_4B6494: je loc_4B649E;");
    asm("loc_4B6496: cmp %bx,(%eax);");
    asm("loc_4B6499: je loc_4B649E;");
    asm("loc_4B649B: mov %bx,(%eax);");
    asm("loc_4B649E: push %edi;");
    asm("loc_4B649F: mov %bl,0x6C(%esp);");
    asm("loc_4B64A3: mov 0x80(%esp),%eax;");
    asm("loc_4B64AA: mov 0x84(%esp),%ecx;");
    asm("loc_4B64B1: mov %eax,0xC(%esp);");
    asm("loc_4B64B5: mov %eax,0x10(%esp);");
    asm("loc_4B64B9: mov 0x88(%esp),%eax;");
    asm("loc_4B64C0: push %eax;");
    asm("loc_4B64C1: push %ecx;");
    asm("loc_4B64C2: mov _data_672288,%ecx;");
    asm("loc_4B64C8: lea 0x14(%esp),%edx;");
    asm("loc_4B64CC: push %edx;");
    asm("loc_4B64CD: movl $1,0x84(%esp);");
    asm("loc_4B64D8: call _sub_4B6130;");
    asm("loc_4B64DD: lea 0x1C(%esp),%eax;");
    asm("loc_4B64E1: movl $2,0x78(%esp);");
    asm("loc_4B64E9: mov %eax,0x80(%esp);");
    asm("loc_4B64F0: lea 0x1C(%esp),%ecx;");
    asm("loc_4B64F4: movb $4,0x78(%esp);");
    asm("loc_4B64F9: call _sub_4144F0;");
    asm("loc_4B64FE: mov 0x30(%esp),%edi;");
    asm("loc_4B6502: mov 0x2C(%esp),%esi;");
    asm("loc_4B6506: cmp %edi,%esi;");
    asm("loc_4B6508: movb $3,0x78(%esp);");
    asm("loc_4B650D: je loc_4B6523;");
    asm("loc_4B650F: nop;");
    asm("loc_4B6510: push %ebx;");
    asm("loc_4B6511: mov %esi,%ecx;");
    asm("loc_4B6513: call _sub_418F70;");
    asm("loc_4B6518: add $8,%esi;");
    asm("loc_4B651B: cmp %edi,%esi;");
    asm("loc_4B651D: jne loc_4B6510;");
    asm("loc_4B651F: mov 0x2C(%esp),%esi;");
    asm("loc_4B6523: push %esi;");
    asm("loc_4B6524: call _sub_5B7E1D;");
    asm("loc_4B6529: mov 0x20(%esp),%eax;");
    asm("loc_4B652D: mov _import_5C71D8,%esi;");
    asm("loc_4B6533: add $4,%esp;");
    asm("loc_4B6536: cmp %ebx,%eax;");
    asm("loc_4B6538: mov %ebx,0x2C(%esp);");
    asm("loc_4B653C: mov %ebx,0x30(%esp);");
    asm("loc_4B6540: mov %ebx,0x34(%esp);");
    asm("loc_4B6544: pop %edi;");
    asm("loc_4B6545: je loc_4B6555;");
    asm("loc_4B6547: push %eax;");
    asm("loc_4B6548: call *%esi;");
    asm("loc_4B654A: add $4,%esp;");
    asm("loc_4B654D: mov %ebx,0x18(%esp);");
    asm("loc_4B6551: mov %ebx,0x1C(%esp);");
    asm("loc_4B6555: mov 0x10(%esp),%eax;");
    asm("loc_4B6559: cmp %ebx,%eax;");
    asm("loc_4B655B: je loc_4B6563;");
    asm("loc_4B655D: push %eax;");
    asm("loc_4B655E: call *%esi;");
    asm("loc_4B6560: add $4,%esp;");
    asm("loc_4B6563: mov 0x6C(%esp),%ecx;");
    asm("loc_4B6567: pop %esi;");
    asm("loc_4B6568: pop %ebx;");
    asm("loc_4B6569: mov %ecx,%fs:0;");
    asm("loc_4B6570: add $0x70,%esp;");
    asm("loc_4B6573: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6580() // _sub_4B6580
{
    __DEBUG_ASM(4B6580);
    // chunk 0x4B6580 _sub_4B6580
    asm("loc_4B6580: mov _data_672288,%ecx;");
    asm("loc_4B6586: test %ecx,%ecx;");
    asm("loc_4B6588: je loc_4B659F;");
    asm("loc_4B658A: mov (%ecx),%eax;");
    asm("loc_4B658C: calll *0x28(%eax);");
    asm("loc_4B658F: mov _data_672288,%ecx;");
    asm("loc_4B6595: test %ecx,%ecx;");
    asm("loc_4B6597: je loc_4B659F;");
    asm("loc_4B6599: mov (%ecx),%edx;");
    asm("loc_4B659B: push $1;");
    asm("loc_4B659D: calll *(%edx);");
    asm("loc_4B659F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B65A0() // _sub_4B65A0
{
    __DEBUG_ASM(4B65A0);
    // chunk 0x4B65A0 _sub_4B65A0
    asm("loc_4B65A0: mov _data_672288,%eax;");
    asm("loc_4B65A5: test %eax,%eax;");
    asm("loc_4B65A7: je loc_4B65BC;");
    asm("loc_4B65A9: movl $0,0x164(%eax);");
    asm("loc_4B65B3: mov _data_672288,%eax;");
    asm("loc_4B65B8: andb $0xFD,0x6C(%eax);");
    asm("loc_4B65BC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B65C0() // _sub_4B65C0
{
    __DEBUG_ASM(4B65C0);
    // chunk 0x4B65C0 _sub_4B65C0
    asm("loc_4B65C0: push %ebx;");
    asm("loc_4B65C1: mov %ecx,%ebx;");
    asm("loc_4B65C3: xor %eax,%eax;");
    asm("loc_4B65C5: push %esi;");
    asm("loc_4B65C6: mov 0xC(%esp),%esi;");
    asm("loc_4B65CA: cmp %eax,%esi;");
    asm("loc_4B65CC: mov %eax,8(%ebx);");
    asm("loc_4B65CF: mov %al,0xC(%ebx);");
    asm("loc_4B65D2: movl $_off_5CB554,(%ebx);");
    asm("loc_4B65D8: mov %eax,4(%ebx);");
    asm("loc_4B65DB: jne loc_4B65E2;");
    asm("loc_4B65DD: mov %al,0xC(%ebx);");
    asm("loc_4B65E0: jmp loc_4B6617;");
    asm("loc_4B65E2: push %ebp;");
    asm("loc_4B65E3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4B65E6: xor %eax,%eax;");
    asm("loc_4B65E8: push %edi;");
    asm("loc_4B65E9: mov %esi,%edi;");
    asm("loc_4B65EB: repne scas (%edi),%al;");
    asm("loc_4B65ED: not %ecx;");
    asm("loc_4B65EF: dec %ecx;");
    asm("loc_4B65F0: mov %ecx,%eax;");
    asm("loc_4B65F2: cmp $0x20,%eax;");
    asm("loc_4B65F5: lea 0xC(%ebx),%ebp;");
    asm("loc_4B65F8: jb loc_4B65FF;");
    asm("loc_4B65FA: mov $0x1F,%eax;");
    asm("loc_4B65FF: mov %eax,%ecx;");
    asm("loc_4B6601: mov %ecx,%edx;");
    asm("loc_4B6603: shr $2,%ecx;");
    asm("loc_4B6606: mov %ebp,%edi;");
    asm("loc_4B6608: rep movsl (%esi),(%edi);");
    asm("loc_4B660A: mov %edx,%ecx;");
    asm("loc_4B660C: and $3,%ecx;");
    asm("loc_4B660F: rep movsb (%esi),(%edi);");
    asm("loc_4B6611: pop %edi;");
    asm("loc_4B6612: movb $0,(%eax,%ebp);");
    asm("loc_4B6616: pop %ebp;");
    asm("loc_4B6617: push %ebx;");
    asm("loc_4B6618: mov %eax,8(%ebx);");
    asm("loc_4B661B: call _sub_59DAB0;");
    asm("loc_4B6620: add $4,%esp;");
    asm("loc_4B6623: pop %esi;");
    asm("loc_4B6624: movl $_off_5D55F4,(%ebx);");
    asm("loc_4B662A: mov %ebx,%eax;");
    asm("loc_4B662C: pop %ebx;");
    asm("loc_4B662D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6630() // _sub_4B6630
{
    __DEBUG_ASM(4B6630);
    // chunk 0x4B6630 _sub_4B6630
    asm("loc_4B6630: push $0xFFFFFFFF;");
    asm("loc_4B6632: push $_sub_5BD23D;");
    asm("loc_4B6637: mov %fs:0,%eax;");
    asm("loc_4B663D: push %eax;");
    asm("loc_4B663E: mov %esp,%fs:0;");
    asm("loc_4B6645: sub $0xC,%esp;");
    asm("loc_4B6648: push %ebx;");
    asm("loc_4B6649: push %ebp;");
    asm("loc_4B664A: push %esi;");
    asm("loc_4B664B: push $0x18C;");
    asm("loc_4B6650: mov %ecx,%ebp;");
    asm("loc_4B6652: call _sub_5B7E84;");
    asm("loc_4B6657: mov %eax,%esi;");
    asm("loc_4B6659: add $4,%esp;");
    asm("loc_4B665C: mov %esi,0x10(%esp);");
    asm("loc_4B6660: xor %ebx,%ebx;");
    asm("loc_4B6662: cmp %ebx,%esi;");
    asm("loc_4B6664: mov %ebx,0x20(%esp);");
    asm("loc_4B6668: je loc_4B6730;");
    asm("loc_4B666E: push %edi;");
    asm("loc_4B666F: mov %esi,%ecx;");
    asm("loc_4B6671: call _sub_4B6790;");
    asm("loc_4B6676: lea 0x7C(%esi),%ecx;");
    asm("loc_4B6679: movb $1,0x24(%esp);");
    asm("loc_4B667E: call _sub_4144B0;");
    asm("loc_4B6683: lea 0xD0(%esi),%ecx;");
    asm("loc_4B6689: mov %bl,0xCF(%esi);");
    asm("loc_4B668F: mov %bl,0xCE(%esi);");
    asm("loc_4B6695: mov %bl,0xCD(%esi);");
    asm("loc_4B669B: mov %bl,0xCC(%esi);");
    asm("loc_4B66A1: call _sub_4B5140;");
    asm("loc_4B66A6: lea 0xD4(%esi),%ecx;");
    asm("loc_4B66AC: call _sub_4B5140;");
    asm("loc_4B66B1: lea 0xD8(%esi),%ecx;");
    asm("loc_4B66B7: call _sub_4B5140;");
    asm("loc_4B66BC: lea 0xDC(%esi),%ecx;");
    asm("loc_4B66C2: call _sub_4B5140;");
    asm("loc_4B66C7: movl $_off_5D54CC,(%esi);");
    asm("loc_4B66CD: lea 0xEC(%esi),%edi;");
    asm("loc_4B66D3: mov %edi,0x18(%esp);");
    asm("loc_4B66D7: mov %ebx,8(%edi);");
    asm("loc_4B66DA: mov %ebx,0xC(%edi);");
    asm("loc_4B66DD: lea 0x10(%edi),%ecx;");
    asm("loc_4B66E0: movb $3,0x24(%esp);");
    asm("loc_4B66E5: call _sub_4144B0;");
    asm("loc_4B66EA: mov %edi,%ecx;");
    asm("loc_4B66EC: movb $4,0x24(%esp);");
    asm("loc_4B66F1: call _sub_4963A0;");
    asm("loc_4B66F6: lea 0x12(%esp),%eax;");
    asm("loc_4B66FA: push %eax;");
    asm("loc_4B66FB: push %ebx;");
    asm("loc_4B66FC: lea 0x1B(%esp),%edx;");
    asm("loc_4B6700: lea 0x150(%esi),%ecx;");
    asm("loc_4B6706: push %edx;");
    asm("loc_4B6707: movb $5,0x30(%esp);");
    asm("loc_4B670C: call _sub_4B6800;");
    asm("loc_4B6711: mov %esi,%ecx;");
    asm("loc_4B6713: movb $6,0x24(%esp);");
    asm("loc_4B6718: movl $_off_5D5454,(%esi);");
    asm("loc_4B671E: call _sub_4B4F10;");
    asm("loc_4B6723: andb $0xFD,0x6C(%esi);");
    asm("loc_4B6727: mov %esi,_data_672288;");
    asm("loc_4B672D: pop %edi;");
    asm("loc_4B672E: jmp loc_4B6732;");
    asm("loc_4B6730: xor %esi,%esi;");
    asm("loc_4B6732: mov 0x2C(%esp),%ecx;");
    asm("loc_4B6736: mov 0x28(%esp),%edx;");
    asm("loc_4B673A: mov (%esi),%eax;");
    asm("loc_4B673C: push %ecx;");
    asm("loc_4B673D: add $0xC,%ebp;");
    asm("loc_4B6740: push %edx;");
    asm("loc_4B6741: mov %esi,%ecx;");
    asm("loc_4B6743: movl $0xFFFFFFFF,0x28(%esp);");
    asm("loc_4B674B: mov %ebp,0x10(%esi);");
    asm("loc_4B674E: calll *0x24(%eax);");
    asm("loc_4B6751: test %al,%al;");
    asm("loc_4B6753: jne loc_4B6773;");
    asm("loc_4B6755: mov (%esi),%eax;");
    asm("loc_4B6757: push $1;");
    asm("loc_4B6759: mov %esi,%ecx;");
    asm("loc_4B675B: calll *(%eax);");
    asm("loc_4B675D: pop %esi;");
    asm("loc_4B675E: pop %ebp;");
    asm("loc_4B675F: xor %eax,%eax;");
    asm("loc_4B6761: pop %ebx;");
    asm("loc_4B6762: mov 0xC(%esp),%ecx;");
    asm("loc_4B6766: mov %ecx,%fs:0;");
    asm("loc_4B676D: add $0x18,%esp;");
    asm("loc_4B6770: ret $8;");
    asm("loc_4B6773: mov 0x18(%esp),%ecx;");
    asm("loc_4B6777: mov %esi,%eax;");
    asm("loc_4B6779: pop %esi;");
    asm("loc_4B677A: pop %ebp;");
    asm("loc_4B677B: pop %ebx;");
    asm("loc_4B677C: mov %ecx,%fs:0;");
    asm("loc_4B6783: add $0x18,%esp;");
    asm("loc_4B6786: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6790() // _sub_4B6790
{
    __DEBUG_ASM(4B6790);
    // chunk 0x4B6790 _sub_4B6790
    asm("loc_4B6790: mov %ecx,%eax;");
    asm("loc_4B6792: xor %ecx,%ecx;");
    asm("loc_4B6794: mov %ecx,0xC(%eax);");
    asm("loc_4B6797: mov %ecx,8(%eax);");
    asm("loc_4B679A: mov %ecx,4(%eax);");
    asm("loc_4B679D: mov %ecx,0x14(%eax);");
    asm("loc_4B67A0: mov %cl,0x18(%eax);");
    asm("loc_4B67A3: mov %ecx,0x58(%eax);");
    asm("loc_4B67A6: mov %ecx,0x54(%eax);");
    asm("loc_4B67A9: mov %ecx,0x50(%eax);");
    asm("loc_4B67AC: mov %ecx,0x48(%eax);");
    asm("loc_4B67AF: mov %ecx,0x44(%eax);");
    asm("loc_4B67B2: mov %ecx,0x40(%eax);");
    asm("loc_4B67B5: mov $0x3F800000,%edx;");
    asm("loc_4B67BA: mov %edx,0x5C(%eax);");
    asm("loc_4B67BD: mov %edx,0x4C(%eax);");
    asm("loc_4B67C0: mov %edx,0x3C(%eax);");
    asm("loc_4B67C3: mov %ecx,0x68(%eax);");
    asm("loc_4B67C6: mov %ecx,0x64(%eax);");
    asm("loc_4B67C9: mov %ecx,0x60(%eax);");
    asm("loc_4B67CC: mov %ecx,0x10(%eax);");
    asm("loc_4B67CF: mov %ecx,0x70(%eax);");
    asm("loc_4B67D2: mov %ecx,0x38(%eax);");
    asm("loc_4B67D5: mov %ecx,0x74(%eax);");
    asm("loc_4B67D8: mov %ecx,0x78(%eax);");
    asm("loc_4B67DB: mov 0x6C(%eax),%cl;");
    asm("loc_4B67DE: and $0xF8,%cl;");
    asm("loc_4B67E1: or $8,%cl;");
    asm("loc_4B67E4: mov %cl,0x6C(%eax);");
    asm("loc_4B67E7: movl $_off_5D5544,(%eax);");
    asm("loc_4B67ED: incl _data_67DCD4;");
    asm("loc_4B67F3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6800() // _sub_4B6800
{
    __DEBUG_ASM(4B6800);
    // chunk 0x4B6800 _sub_4B6800
    asm("loc_4B6800: mov 0xC(%esp),%eax;");
    asm("loc_4B6804: mov 4(%esp),%edx;");
    asm("loc_4B6808: push %ebx;");
    asm("loc_4B6809: push %esi;");
    asm("loc_4B680A: mov %ecx,%esi;");
    asm("loc_4B680C: mov (%eax),%cl;");
    asm("loc_4B680E: mov %cl,(%esi);");
    asm("loc_4B6810: mov (%edx),%al;");
    asm("loc_4B6812: mov 0x10(%esp),%cl;");
    asm("loc_4B6816: push %edi;");
    asm("loc_4B6817: push $0x18;");
    asm("loc_4B6819: mov %al,1(%esi);");
    asm("loc_4B681C: mov %cl,0xC(%esi);");
    asm("loc_4B681F: call _sub_5B7E84;");
    asm("loc_4B6824: xor %ebx,%ebx;");
    asm("loc_4B6826: mov %ebx,4(%eax);");
    asm("loc_4B6829: mov %bl,0x15(%eax);");
    asm("loc_4B682C: mov $1,%cl;");
    asm("loc_4B682E: mov %cl,0x14(%eax);");
    asm("loc_4B6831: mov %eax,8(%esi);");
    asm("loc_4B6834: mov %cl,0x15(%eax);");
    asm("loc_4B6837: mov 8(%esi),%edx;");
    asm("loc_4B683A: mov %ebx,(%edx);");
    asm("loc_4B683C: mov 8(%esi),%eax;");
    asm("loc_4B683F: mov %ebx,8(%eax);");
    asm("loc_4B6842: mov 8(%esi),%edi;");
    asm("loc_4B6845: push $0x18;");
    asm("loc_4B6847: call _sub_5B7E84;");
    asm("loc_4B684C: mov %edi,4(%eax);");
    asm("loc_4B684F: mov %bl,0x14(%eax);");
    asm("loc_4B6852: mov %bl,0x15(%eax);");
    asm("loc_4B6855: mov %eax,4(%esi);");
    asm("loc_4B6858: mov %eax,(%eax);");
    asm("loc_4B685A: mov 4(%esi),%eax;");
    asm("loc_4B685D: add $8,%esp;");
    asm("loc_4B6860: mov %eax,8(%eax);");
    asm("loc_4B6863: pop %edi;");
    asm("loc_4B6864: mov %ebx,0x10(%esi);");
    asm("loc_4B6867: mov %esi,%eax;");
    asm("loc_4B6869: pop %esi;");
    asm("loc_4B686A: pop %ebx;");
    asm("loc_4B686B: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6870() // _sub_4B6870
{
    __DEBUG_ASM(4B6870);
    // chunk 0x4B6870 _sub_4B6870
    asm("loc_4B6870: push %ebx;");
    asm("loc_4B6871: push %esi;");
    asm("loc_4B6872: mov %ecx,%ebx;");
    asm("loc_4B6874: mov 8(%ebx),%eax;");
    asm("loc_4B6877: push %edi;");
    asm("loc_4B6878: mov 0x10(%esp),%edi;");
    asm("loc_4B687C: cmp %eax,%edi;");
    asm("loc_4B687E: mov %edi,%esi;");
    asm("loc_4B6880: je loc_4B68A1;");
    asm("loc_4B6882: mov 8(%esi),%eax;");
    asm("loc_4B6885: push %eax;");
    asm("loc_4B6886: mov %ebx,%ecx;");
    asm("loc_4B6888: call _sub_4B6870;");
    asm("loc_4B688D: mov (%esi),%esi;");
    asm("loc_4B688F: push %edi;");
    asm("loc_4B6890: call _sub_5B7E1D;");
    asm("loc_4B6895: mov 8(%ebx),%eax;");
    asm("loc_4B6898: add $4,%esp;");
    asm("loc_4B689B: cmp %eax,%esi;");
    asm("loc_4B689D: mov %esi,%edi;");
    asm("loc_4B689F: jne loc_4B6882;");
    asm("loc_4B68A1: pop %edi;");
    asm("loc_4B68A2: pop %esi;");
    asm("loc_4B68A3: pop %ebx;");
    asm("loc_4B68A4: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B68B0() // _sub_4B68B0
{
    __DEBUG_ASM(4B68B0);
    // chunk 0x4B68B0 _sub_4B68B0
    asm("loc_4B68B0: push %ebx;");
    asm("loc_4B68B1: push %ebp;");
    asm("loc_4B68B2: push %esi;");
    asm("loc_4B68B3: push %edi;");
    asm("loc_4B68B4: push $0x18;");
    asm("loc_4B68B6: mov %ecx,%esi;");
    asm("loc_4B68B8: call _sub_5B7E84;");
    asm("loc_4B68BD: mov 0x20(%esp),%edi;");
    asm("loc_4B68C1: mov 0x24(%esp),%ebp;");
    asm("loc_4B68C5: mov %eax,%ebx;");
    asm("loc_4B68C7: mov %edi,4(%ebx);");
    asm("loc_4B68CA: movb $0,0x14(%ebx);");
    asm("loc_4B68CE: movb $0,0x15(%ebx);");
    asm("loc_4B68D2: mov 8(%esi),%eax;");
    asm("loc_4B68D5: mov %eax,(%ebx);");
    asm("loc_4B68D7: mov 8(%esi),%ecx;");
    asm("loc_4B68DA: lea 0xC(%ebx),%edx;");
    asm("loc_4B68DD: push %ebp;");
    asm("loc_4B68DE: push %edx;");
    asm("loc_4B68DF: mov %ecx,8(%ebx);");
    asm("loc_4B68E2: call _sub_4E5FC0;");
    asm("loc_4B68E7: mov 0x10(%esi),%ecx;");
    asm("loc_4B68EA: mov 4(%esi),%eax;");
    asm("loc_4B68ED: add $0xC,%esp;");
    asm("loc_4B68F0: inc %ecx;");
    asm("loc_4B68F1: cmp %eax,%edi;");
    asm("loc_4B68F3: mov %ecx,0x10(%esi);");
    asm("loc_4B68F6: je loc_4B6919;");
    asm("loc_4B68F8: mov 0x18(%esp),%eax;");
    asm("loc_4B68FC: cmp 8(%esi),%eax;");
    asm("loc_4B68FF: jne loc_4B6919;");
    asm("loc_4B6901: mov (%ebp),%ecx;");
    asm("loc_4B6904: cmp 0xC(%edi),%ecx;");
    asm("loc_4B6907: jb loc_4B6919;");
    asm("loc_4B6909: mov %ebx,8(%edi);");
    asm("loc_4B690C: mov 4(%esi),%eax;");
    asm("loc_4B690F: cmp 8(%eax),%edi;");
    asm("loc_4B6912: jne loc_4B6933;");
    asm("loc_4B6914: mov %ebx,8(%eax);");
    asm("loc_4B6917: jmp loc_4B6933;");
    asm("loc_4B6919: mov %ebx,(%edi);");
    asm("loc_4B691B: mov 4(%esi),%eax;");
    asm("loc_4B691E: cmp %eax,%edi;");
    asm("loc_4B6920: jne loc_4B692D;");
    asm("loc_4B6922: mov %ebx,4(%eax);");
    asm("loc_4B6925: mov 4(%esi),%edx;");
    asm("loc_4B6928: mov %ebx,8(%edx);");
    asm("loc_4B692B: jmp loc_4B6933;");
    asm("loc_4B692D: cmp (%eax),%edi;");
    asm("loc_4B692F: jne loc_4B6933;");
    asm("loc_4B6931: mov %ebx,(%eax);");
    asm("loc_4B6933: mov 4(%esi),%ecx;");
    asm("loc_4B6936: cmp 4(%ecx),%ebx;");
    asm("loc_4B6939: mov %ebx,%eax;");
    asm("loc_4B693B: je loc_4B6ADE;");
    asm("loc_4B6941: mov 4(%eax),%ecx;");
    asm("loc_4B6944: mov 0x14(%ecx),%dl;");
    asm("loc_4B6947: test %dl,%dl;");
    asm("loc_4B6949: jne loc_4B6ADE;");
    asm("loc_4B694F: mov 4(%ecx),%edi;");
    asm("loc_4B6952: mov (%edi),%edx;");
    asm("loc_4B6954: cmp %edx,%ecx;");
    asm("loc_4B6956: jne loc_4B6A20;");
    asm("loc_4B695C: mov 8(%edi),%edx;");
    asm("loc_4B695F: cmpb $0,0x14(%edx);");
    asm("loc_4B6963: jne loc_4B6982;");
    asm("loc_4B6965: movb $1,0x14(%ecx);");
    asm("loc_4B6969: movb $1,0x14(%edx);");
    asm("loc_4B696D: mov 4(%eax),%edx;");
    asm("loc_4B6970: mov 4(%edx),%ecx;");
    asm("loc_4B6973: movb $0,0x14(%ecx);");
    asm("loc_4B6977: mov 4(%eax),%edx;");
    asm("loc_4B697A: mov 4(%edx),%eax;");
    asm("loc_4B697D: jmp loc_4B6AD2;");
    asm("loc_4B6982: cmp 8(%ecx),%eax;");
    asm("loc_4B6985: jne loc_4B69C1;");
    asm("loc_4B6987: mov %ecx,%eax;");
    asm("loc_4B6989: mov 8(%eax),%ecx;");
    asm("loc_4B698C: mov (%ecx),%edx;");
    asm("loc_4B698E: mov %edx,8(%eax);");
    asm("loc_4B6991: mov (%ecx),%edx;");
    asm("loc_4B6993: cmp 8(%esi),%edx;");
    asm("loc_4B6996: je loc_4B699B;");
    asm("loc_4B6998: mov %eax,4(%edx);");
    asm("loc_4B699B: mov 4(%eax),%edx;");
    asm("loc_4B699E: mov %edx,4(%ecx);");
    asm("loc_4B69A1: mov 4(%esi),%edx;");
    asm("loc_4B69A4: cmp 4(%edx),%eax;");
    asm("loc_4B69A7: jne loc_4B69AE;");
    asm("loc_4B69A9: mov %ecx,4(%edx);");
    asm("loc_4B69AC: jmp loc_4B69BC;");
    asm("loc_4B69AE: mov 4(%eax),%edx;");
    asm("loc_4B69B1: cmp (%edx),%eax;");
    asm("loc_4B69B3: jne loc_4B69B9;");
    asm("loc_4B69B5: mov %ecx,(%edx);");
    asm("loc_4B69B7: jmp loc_4B69BC;");
    asm("loc_4B69B9: mov %ecx,8(%edx);");
    asm("loc_4B69BC: mov %eax,(%ecx);");
    asm("loc_4B69BE: mov %ecx,4(%eax);");
    asm("loc_4B69C1: mov 4(%eax),%ecx;");
    asm("loc_4B69C4: movb $1,0x14(%ecx);");
    asm("loc_4B69C8: mov 4(%eax),%edx;");
    asm("loc_4B69CB: mov 4(%edx),%ecx;");
    asm("loc_4B69CE: movb $0,0x14(%ecx);");
    asm("loc_4B69D2: mov 4(%eax),%edx;");
    asm("loc_4B69D5: mov 4(%edx),%ecx;");
    asm("loc_4B69D8: mov (%ecx),%edx;");
    asm("loc_4B69DA: mov 8(%edx),%edi;");
    asm("loc_4B69DD: mov %edi,(%ecx);");
    asm("loc_4B69DF: mov 8(%edx),%edi;");
    asm("loc_4B69E2: cmp 8(%esi),%edi;");
    asm("loc_4B69E5: je loc_4B69EA;");
    asm("loc_4B69E7: mov %ecx,4(%edi);");
    asm("loc_4B69EA: mov 4(%ecx),%edi;");
    asm("loc_4B69ED: mov %edi,4(%edx);");
    asm("loc_4B69F0: mov 4(%esi),%edi;");
    asm("loc_4B69F3: cmp 4(%edi),%ecx;");
    asm("loc_4B69F6: jne loc_4B6A03;");
    asm("loc_4B69F8: mov %edx,4(%edi);");
    asm("loc_4B69FB: mov %ecx,8(%edx);");
    asm("loc_4B69FE: jmp loc_4B6ACF;");
    asm("loc_4B6A03: mov 4(%ecx),%edi;");
    asm("loc_4B6A06: cmp 8(%edi),%ecx;");
    asm("loc_4B6A09: jne loc_4B6A16;");
    asm("loc_4B6A0B: mov %edx,8(%edi);");
    asm("loc_4B6A0E: mov %ecx,8(%edx);");
    asm("loc_4B6A11: jmp loc_4B6ACF;");
    asm("loc_4B6A16: mov %edx,(%edi);");
    asm("loc_4B6A18: mov %ecx,8(%edx);");
    asm("loc_4B6A1B: jmp loc_4B6ACF;");
    asm("loc_4B6A20: cmpb $0,0x14(%edx);");
    asm("loc_4B6A24: jne loc_4B6A43;");
    asm("loc_4B6A26: movb $1,0x14(%ecx);");
    asm("loc_4B6A2A: movb $1,0x14(%edx);");
    asm("loc_4B6A2E: mov 4(%eax),%ecx;");
    asm("loc_4B6A31: mov 4(%ecx),%edx;");
    asm("loc_4B6A34: movb $0,0x14(%edx);");
    asm("loc_4B6A38: mov 4(%eax),%eax;");
    asm("loc_4B6A3B: mov 4(%eax),%eax;");
    asm("loc_4B6A3E: jmp loc_4B6AD2;");
    asm("loc_4B6A43: cmp (%ecx),%eax;");
    asm("loc_4B6A45: jne loc_4B6A83;");
    asm("loc_4B6A47: mov %ecx,%eax;");
    asm("loc_4B6A49: mov (%eax),%ecx;");
    asm("loc_4B6A4B: mov 8(%ecx),%edx;");
    asm("loc_4B6A4E: mov %edx,(%eax);");
    asm("loc_4B6A50: mov 8(%ecx),%edx;");
    asm("loc_4B6A53: cmp 8(%esi),%edx;");
    asm("loc_4B6A56: je loc_4B6A5B;");
    asm("loc_4B6A58: mov %eax,4(%edx);");
    asm("loc_4B6A5B: mov 4(%eax),%edx;");
    asm("loc_4B6A5E: mov %edx,4(%ecx);");
    asm("loc_4B6A61: mov 4(%esi),%edx;");
    asm("loc_4B6A64: cmp 4(%edx),%eax;");
    asm("loc_4B6A67: jne loc_4B6A6E;");
    asm("loc_4B6A69: mov %ecx,4(%edx);");
    asm("loc_4B6A6C: jmp loc_4B6A7D;");
    asm("loc_4B6A6E: mov 4(%eax),%edx;");
    asm("loc_4B6A71: cmp 8(%edx),%eax;");
    asm("loc_4B6A74: jne loc_4B6A7B;");
    asm("loc_4B6A76: mov %ecx,8(%edx);");
    asm("loc_4B6A79: jmp loc_4B6A7D;");
    asm("loc_4B6A7B: mov %ecx,(%edx);");
    asm("loc_4B6A7D: mov %eax,8(%ecx);");
    asm("loc_4B6A80: mov %ecx,4(%eax);");
    asm("loc_4B6A83: mov 4(%eax),%ecx;");
    asm("loc_4B6A86: movb $1,0x14(%ecx);");
    asm("loc_4B6A8A: mov 4(%eax),%edx;");
    asm("loc_4B6A8D: mov 4(%edx),%ecx;");
    asm("loc_4B6A90: movb $0,0x14(%ecx);");
    asm("loc_4B6A94: mov 4(%eax),%edx;");
    asm("loc_4B6A97: mov 4(%edx),%ecx;");
    asm("loc_4B6A9A: mov 8(%ecx),%edx;");
    asm("loc_4B6A9D: mov (%edx),%edi;");
    asm("loc_4B6A9F: mov %edi,8(%ecx);");
    asm("loc_4B6AA2: mov (%edx),%edi;");
    asm("loc_4B6AA4: cmp 8(%esi),%edi;");
    asm("loc_4B6AA7: je loc_4B6AAC;");
    asm("loc_4B6AA9: mov %ecx,4(%edi);");
    asm("loc_4B6AAC: mov 4(%ecx),%edi;");
    asm("loc_4B6AAF: mov %edi,4(%edx);");
    asm("loc_4B6AB2: mov 4(%esi),%edi;");
    asm("loc_4B6AB5: cmp 4(%edi),%ecx;");
    asm("loc_4B6AB8: jne loc_4B6ABF;");
    asm("loc_4B6ABA: mov %edx,4(%edi);");
    asm("loc_4B6ABD: jmp loc_4B6ACD;");
    asm("loc_4B6ABF: mov 4(%ecx),%edi;");
    asm("loc_4B6AC2: cmp (%edi),%ecx;");
    asm("loc_4B6AC4: jne loc_4B6ACA;");
    asm("loc_4B6AC6: mov %edx,(%edi);");
    asm("loc_4B6AC8: jmp loc_4B6ACD;");
    asm("loc_4B6ACA: mov %edx,8(%edi);");
    asm("loc_4B6ACD: mov %ecx,(%edx);");
    asm("loc_4B6ACF: mov %edx,4(%ecx);");
    asm("loc_4B6AD2: mov 4(%esi),%ecx;");
    asm("loc_4B6AD5: cmp 4(%ecx),%eax;");
    asm("loc_4B6AD8: jne loc_4B6941;");
    asm("loc_4B6ADE: mov 4(%esi),%edx;");
    asm("loc_4B6AE1: mov 4(%edx),%eax;");
    asm("loc_4B6AE4: pop %edi;");
    asm("loc_4B6AE5: movb $1,0x14(%eax);");
    asm("loc_4B6AE9: mov 0x10(%esp),%eax;");
    asm("loc_4B6AED: pop %esi;");
    asm("loc_4B6AEE: pop %ebp;");
    asm("loc_4B6AEF: mov %ebx,(%eax);");
    asm("loc_4B6AF1: pop %ebx;");
    asm("loc_4B6AF2: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6B00() // _sub_4B6B00
{
    __DEBUG_ASM(4B6B00);
    // chunk 0x4B6B00 _sub_4B6B00
    asm("loc_4B6B00: mov _data_5D55F8,%eax;");
    asm("loc_4B6B05: mov %eax,_data_6722C8;");
    asm("loc_4B6B0A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6B10() // _sub_4B6B10
{
    __DEBUG_ASM(4B6B10);
    // chunk 0x4B6B10 _sub_4B6B10
    asm("loc_4B6B10: mov _data_5D55F8,%eax;");
    asm("loc_4B6B15: mov %eax,_data_6722C4;");
    asm("loc_4B6B1A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6B20() // _sub_4B6B20
{
    __DEBUG_ASM(4B6B20);
    // chunk 0x4B6B20 _sub_4B6B20
    asm("loc_4B6B20: mov _data_5D55FC,%eax;");
    asm("loc_4B6B25: mov %eax,_data_6722C0;");
    asm("loc_4B6B2A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6B30() // _sub_4B6B30
{
    __DEBUG_ASM(4B6B30);
    // chunk 0x4B6B30 _sub_4B6B30
    asm("loc_4B6B30: push $_data_5D021C;");
    asm("loc_4B6B35: mov $_data_672294,%ecx;");
    asm("loc_4B6B3A: call _sub_4B7200;");
    asm("loc_4B6B3F: push $_sub_4B6B50;");
    asm("loc_4B6B44: call _sub_5B7E6C;");
    asm("loc_4B6B49: pop %ecx;");
    asm("loc_4B6B4A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6B50() // _unknown_libname_36
{
    __DEBUG_ASM(4B6B50);
    // chunk 0x4B6B50 _sub_4B6B50
    asm("loc_4B6B50: mov $_data_672294,%ecx;");
    asm("loc_4B6B55: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6B60() // _sub_4B6B60
{
    __DEBUG_ASM(4B6B60);
    // chunk 0x4B6B60 _sub_4B6B60
    asm("loc_4B6B60: sub $0xC,%esp;");
    asm("loc_4B6B63: push %esi;");
    asm("loc_4B6B64: call _sub_45A460;");
    asm("loc_4B6B69: call _sub_54BAF0;");
    asm("loc_4B6B6E: test %eax,%eax;");
    asm("loc_4B6B70: je loc_4B6C4B;");
    asm("loc_4B6B76: push $_data_5D0234;");
    asm("loc_4B6B7B: call _sub_59DA10;");
    asm("loc_4B6B80: add $4,%esp;");
    asm("loc_4B6B83: test %eax,%eax;");
    asm("loc_4B6B85: jne loc_4B6C4B;");
    asm("loc_4B6B8B: push $_data_5D0228;");
    asm("loc_4B6B90: call _sub_59DA10;");
    asm("loc_4B6B95: add $4,%esp;");
    asm("loc_4B6B98: test %eax,%eax;");
    asm("loc_4B6B9A: jne loc_4B6C4B;");
    asm("loc_4B6BA0: call _sub_45A470;");
    asm("loc_4B6BA5: test %al,%al;");
    asm("loc_4B6BA7: jne loc_4B6C4B;");
    asm("loc_4B6BAD: mov _data_67DCC8,%al;");
    asm("loc_4B6BB2: test %al,%al;");
    asm("loc_4B6BB4: jne loc_4B6C4B;");
    asm("loc_4B6BBA: call _sub_42D730;");
    asm("loc_4B6BBF: test %al,%al;");
    asm("loc_4B6BC1: jne loc_4B6C4B;");
    asm("loc_4B6BC7: call _sub_41A3E0;");
    asm("loc_4B6BCC: test %al,%al;");
    asm("loc_4B6BCE: jne loc_4B6C4B;");
    asm("loc_4B6BD0: push $0;");
    asm("loc_4B6BD2: push $0;");
    asm("loc_4B6BD4: push $_data_5D021C;");
    asm("loc_4B6BD9: push $_data_5D021C;");
    asm("loc_4B6BDE: call _sub_59DB20;");
    asm("loc_4B6BE3: add $0x10,%esp;");
    asm("loc_4B6BE6: test %eax,%eax;");
    asm("loc_4B6BE8: je loc_4B6C4B;");
    asm("loc_4B6BEA: mov (%eax),%edx;");
    asm("loc_4B6BEC: mov %eax,%ecx;");
    asm("loc_4B6BEE: calll *8(%edx);");
    asm("loc_4B6BF1: mov %eax,%esi;");
    asm("loc_4B6BF3: test %esi,%esi;");
    asm("loc_4B6BF5: je loc_4B6C4B;");
    asm("loc_4B6BF7: mov (%esi),%eax;");
    asm("loc_4B6BF9: lea 4(%esp),%ecx;");
    asm("loc_4B6BFD: push %ecx;");
    asm("loc_4B6BFE: mov %esi,%ecx;");
    asm("loc_4B6C00: movl $0,8(%esp);");
    asm("loc_4B6C08: movl $0x3D9BA5E3,0xC(%esp);");
    asm("loc_4B6C10: movl $0xBFA4DD2F,0x10(%esp);");
    asm("loc_4B6C18: calll *0x14(%eax);");
    asm("loc_4B6C1B: mov 0x18(%esp),%eax;");
    asm("loc_4B6C1F: mov 0x14(%esp),%ecx;");
    asm("loc_4B6C23: mov (%esi),%edx;");
    asm("loc_4B6C25: push %eax;");
    asm("loc_4B6C26: push %ecx;");
    asm("loc_4B6C27: push $0x49;");
    asm("loc_4B6C29: mov %esi,%ecx;");
    asm("loc_4B6C2B: calll *0xA8(%edx);");
    asm("loc_4B6C31: mov (%esi),%edx;");
    asm("loc_4B6C33: push $0;");
    asm("loc_4B6C35: push $0;");
    asm("loc_4B6C37: push $0x4A;");
    asm("loc_4B6C39: mov %esi,%ecx;");
    asm("loc_4B6C3B: calll *0xA8(%edx);");
    asm("loc_4B6C41: push $0xD;");
    asm("loc_4B6C43: call _sub_5645C0;");
    asm("loc_4B6C48: add $4,%esp;");
    asm("loc_4B6C4B: pop %esi;");
    asm("loc_4B6C4C: add $0xC,%esp;");
    asm("loc_4B6C4F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6C50() // _sub_4B6C50
{
    __DEBUG_ASM(4B6C50);
    // chunk 0x4B6C50 _sub_4B6C50
    asm("loc_4B6C50: mov $1,%al;");
    asm("loc_4B6C52: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6C60() // _sub_4B6C60
{
    __DEBUG_ASM(4B6C60);
    // chunk 0x4B6C60 _sub_4B6C60
    asm("loc_4B6C60: push %esi;");
    asm("loc_4B6C61: mov %ecx,%esi;");
    asm("loc_4B6C63: call _sub_4B6C80;");
    asm("loc_4B6C68: testb $1,8(%esp);");
    asm("loc_4B6C6D: je loc_4B6C78;");
    asm("loc_4B6C6F: push %esi;");
    asm("loc_4B6C70: call _sub_5B7E1D;");
    asm("loc_4B6C75: add $4,%esp;");
    asm("loc_4B6C78: mov %esi,%eax;");
    asm("loc_4B6C7A: pop %esi;");
    asm("loc_4B6C7B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6C80() // _sub_4B6C80
{
    __DEBUG_ASM(4B6C80);
    // chunk 0x4B6C80 _sub_4B6C80
    asm("loc_4B6C80: push $0xFFFFFFFF;");
    asm("loc_4B6C82: push $_sub_5BD258;");
    asm("loc_4B6C87: mov %fs:0,%eax;");
    asm("loc_4B6C8D: push %eax;");
    asm("loc_4B6C8E: mov %esp,%fs:0;");
    asm("loc_4B6C95: push %ecx;");
    asm("loc_4B6C96: push %ebx;");
    asm("loc_4B6C97: push %esi;");
    asm("loc_4B6C98: push %edi;");
    asm("loc_4B6C99: mov %ecx,%edi;");
    asm("loc_4B6C9B: mov %edi,0xC(%esp);");
    asm("loc_4B6C9F: mov 0x97C(%edi),%ebx;");
    asm("loc_4B6CA5: mov (%ebx),%esi;");
    asm("loc_4B6CA7: cmp %ebx,%esi;");
    asm("loc_4B6CA9: movl $0,0x18(%esp);");
    asm("loc_4B6CB1: je loc_4B6CE0;");
    asm("loc_4B6CB3: mov %esi,%eax;");
    asm("loc_4B6CB5: mov 4(%eax),%ecx;");
    asm("loc_4B6CB8: mov (%eax),%edx;");
    asm("loc_4B6CBA: mov (%esi),%esi;");
    asm("loc_4B6CBC: mov %edx,(%ecx);");
    asm("loc_4B6CBE: mov (%eax),%ecx;");
    asm("loc_4B6CC0: mov 4(%eax),%edx;");
    asm("loc_4B6CC3: push %eax;");
    asm("loc_4B6CC4: mov %edx,4(%ecx);");
    asm("loc_4B6CC7: call _sub_5B7E1D;");
    asm("loc_4B6CCC: mov 0x980(%edi),%ecx;");
    asm("loc_4B6CD2: add $4,%esp;");
    asm("loc_4B6CD5: dec %ecx;");
    asm("loc_4B6CD6: cmp %ebx,%esi;");
    asm("loc_4B6CD8: mov %ecx,0x980(%edi);");
    asm("loc_4B6CDE: jne loc_4B6CB3;");
    asm("loc_4B6CE0: mov 0x97C(%edi),%eax;");
    asm("loc_4B6CE6: push %eax;");
    asm("loc_4B6CE7: call _sub_5B7E1D;");
    asm("loc_4B6CEC: add $4,%esp;");
    asm("loc_4B6CEF: test %edi,%edi;");
    asm("loc_4B6CF1: movl $0,0x97C(%edi);");
    asm("loc_4B6CFB: movl $0,0x980(%edi);");
    asm("loc_4B6D05: je loc_4B6D0F;");
    asm("loc_4B6D07: lea 0x974(%edi),%ecx;");
    asm("loc_4B6D0D: jmp loc_4B6D11;");
    asm("loc_4B6D0F: xor %ecx,%ecx;");
    asm("loc_4B6D11: call _sub_576010;");
    asm("loc_4B6D16: mov %edi,%ecx;");
    asm("loc_4B6D18: movl $0xFFFFFFFF,0x18(%esp);");
    asm("loc_4B6D20: call _sub_477DA0;");
    asm("loc_4B6D25: mov 0x10(%esp),%ecx;");
    asm("loc_4B6D29: pop %edi;");
    asm("loc_4B6D2A: pop %esi;");
    asm("loc_4B6D2B: pop %ebx;");
    asm("loc_4B6D2C: mov %ecx,%fs:0;");
    asm("loc_4B6D33: add $0x10,%esp;");
    asm("loc_4B6D36: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6D40() // _sub_4B6D40
{
    __DEBUG_ASM(4B6D40);
    // chunk 0x4B6D40 _sub_4B6D40
    asm("loc_4B6D40: mov 8(%esp),%eax;");
    asm("loc_4B6D44: push %ebx;");
    asm("loc_4B6D45: push %esi;");
    asm("loc_4B6D46: mov %ecx,%esi;");
    asm("loc_4B6D48: mov 0xC(%esp),%ecx;");
    asm("loc_4B6D4C: push %eax;");
    asm("loc_4B6D4D: push %ecx;");
    asm("loc_4B6D4E: mov %esi,%ecx;");
    asm("loc_4B6D50: call _sub_47B3E0;");
    asm("loc_4B6D55: mov %al,%bl;");
    asm("loc_4B6D57: test %bl,%bl;");
    asm("loc_4B6D59: je loc_4B6E0E;");
    asm("loc_4B6D5F: mov %esi,%ecx;");
    asm("loc_4B6D61: call _sub_47B410;");
    asm("loc_4B6D66: mov 0x384(%esi),%ecx;");
    asm("loc_4B6D6C: test %ecx,%ecx;");
    asm("loc_4B6D6E: je loc_4B6D81;");
    asm("loc_4B6D70: mov (%ecx),%edx;");
    asm("loc_4B6D72: push $0;");
    asm("loc_4B6D74: push $0xBCB;");
    asm("loc_4B6D79: push $0x1E;");
    asm("loc_4B6D7B: calll *0xA8(%edx);");
    asm("loc_4B6D81: mov 0x4B0(%esi),%ecx;");
    asm("loc_4B6D87: test %ecx,%ecx;");
    asm("loc_4B6D89: je loc_4B6D99;");
    asm("loc_4B6D8B: mov (%ecx),%eax;");
    asm("loc_4B6D8D: push $0;");
    asm("loc_4B6D8F: push $1;");
    asm("loc_4B6D91: push $1;");
    asm("loc_4B6D93: calll *0xA8(%eax);");
    asm("loc_4B6D99: mov 0x3B4(%esi),%ecx;");
    asm("loc_4B6D9F: test %ecx,%ecx;");
    asm("loc_4B6DA1: je loc_4B6DB1;");
    asm("loc_4B6DA3: mov (%ecx),%edx;");
    asm("loc_4B6DA5: push $0;");
    asm("loc_4B6DA7: push $1;");
    asm("loc_4B6DA9: push $1;");
    asm("loc_4B6DAB: calll *0xA8(%edx);");
    asm("loc_4B6DB1: mov 0x340(%esi),%ecx;");
    asm("loc_4B6DB7: test %ecx,%ecx;");
    asm("loc_4B6DB9: je loc_4B6DC9;");
    asm("loc_4B6DBB: mov (%ecx),%eax;");
    asm("loc_4B6DBD: push $0;");
    asm("loc_4B6DBF: push $1;");
    asm("loc_4B6DC1: push $1;");
    asm("loc_4B6DC3: calll *0xA8(%eax);");
    asm("loc_4B6DC9: mov 0x4DC(%esi),%ecx;");
    asm("loc_4B6DCF: test %ecx,%ecx;");
    asm("loc_4B6DD1: je loc_4B6DE1;");
    asm("loc_4B6DD3: mov (%ecx),%edx;");
    asm("loc_4B6DD5: push $0;");
    asm("loc_4B6DD7: push $1;");
    asm("loc_4B6DD9: push $1;");
    asm("loc_4B6DDB: calll *0xA8(%edx);");
    asm("loc_4B6DE1: mov 0x4D0(%esi),%ecx;");
    asm("loc_4B6DE7: test %ecx,%ecx;");
    asm("loc_4B6DE9: je loc_4B6E03;");
    asm("loc_4B6DEB: mov (%ecx),%eax;");
    asm("loc_4B6DED: push $0;");
    asm("loc_4B6DEF: push $1;");
    asm("loc_4B6DF1: push $1;");
    asm("loc_4B6DF3: calll *0xA8(%eax);");
    asm("loc_4B6DF9: movl $0,0x4D0(%esi);");
    asm("loc_4B6E03: push $1;");
    asm("loc_4B6E05: push $4;");
    asm("loc_4B6E07: mov %esi,%ecx;");
    asm("loc_4B6E09: call _sub_47F240;");
    asm("loc_4B6E0E: push $0xF;");
    asm("loc_4B6E10: lea 0x974(%esi),%ecx;");
    asm("loc_4B6E16: call _sub_5760D0;");
    asm("loc_4B6E1B: pop %esi;");
    asm("loc_4B6E1C: mov %bl,%al;");
    asm("loc_4B6E1E: pop %ebx;");
    asm("loc_4B6E1F: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B6E30() // _sub_4B6E30
{
    __DEBUG_ASM(4B6E30);
    // chunk 0x4B6E30 _sub_4B6E30
    asm("loc_4B6E30: sub $0xC,%esp;");
    asm("loc_4B6E33: push %esi;");
    asm("loc_4B6E34: mov %ecx,%esi;");
    asm("loc_4B6E36: call _sub_54BAF0;");
    asm("loc_4B6E3B: test %eax,%eax;");
    asm("loc_4B6E3D: je loc_4B6E85;");
    asm("loc_4B6E3F: push $_data_5D0234;");
    asm("loc_4B6E44: call _sub_59DA10;");
    asm("loc_4B6E49: add $4,%esp;");
    asm("loc_4B6E4C: test %eax,%eax;");
    asm("loc_4B6E4E: jne loc_4B6E85;");
    asm("loc_4B6E50: push $_data_5D0228;");
    asm("loc_4B6E55: call _sub_59DA10;");
    asm("loc_4B6E5A: add $4,%esp;");
    asm("loc_4B6E5D: test %eax,%eax;");
    asm("loc_4B6E5F: jne loc_4B6E85;");
    asm("loc_4B6E61: call _sub_45A470;");
    asm("loc_4B6E66: test %al,%al;");
    asm("loc_4B6E68: jne loc_4B6E85;");
    asm("loc_4B6E6A: mov _data_67DCC8,%al;");
    asm("loc_4B6E6F: test %al,%al;");
    asm("loc_4B6E71: jne loc_4B6E85;");
    asm("loc_4B6E73: call _sub_42D730;");
    asm("loc_4B6E78: test %al,%al;");
    asm("loc_4B6E7A: jne loc_4B6E85;");
    asm("loc_4B6E7C: call _sub_41A3E0;");
    asm("loc_4B6E81: test %al,%al;");
    asm("loc_4B6E83: je loc_4B6E9A;");
    asm("loc_4B6E85: mov (%esi),%eax;");
    asm("loc_4B6E87: push $0;");
    asm("loc_4B6E89: push $0;");
    asm("loc_4B6E8B: push $0xEF02;");
    asm("loc_4B6E90: mov %esi,%ecx;");
    asm("loc_4B6E92: calll *0x5C(%eax);");
    asm("loc_4B6E95: pop %esi;");
    asm("loc_4B6E96: add $0xC,%esp;");
    asm("loc_4B6E99: ret;");
    asm("loc_4B6E9A: mov 0xC(%esi),%ecx;");
    asm("loc_4B6E9D: test %ecx,%ecx;");
    asm("loc_4B6E9F: push %ebx;");
    asm("loc_4B6EA0: push %edi;");
    asm("loc_4B6EA1: je loc_4B6EBE;");
    asm("loc_4B6EA3: testb $1,0x6C(%ecx);");
    asm("loc_4B6EA7: mov 8(%ecx),%edi;");
    asm("loc_4B6EAA: je loc_4B6EB3;");
    asm("loc_4B6EAC: mov (%ecx),%edx;");
    asm("loc_4B6EAE: calll *0x2C(%edx);");
    asm("loc_4B6EB1: jmp loc_4B6EB8;");
    asm("loc_4B6EB3: mov (%ecx),%eax;");
    asm("loc_4B6EB5: calll *0x30(%eax);");
    asm("loc_4B6EB8: test %edi,%edi;");
    asm("loc_4B6EBA: mov %edi,%ecx;");
    asm("loc_4B6EBC: jne loc_4B6EA3;");
    asm("loc_4B6EBE: mov 0x97C(%esi),%eax;");
    asm("loc_4B6EC4: xor %ecx,%ecx;");
    asm("loc_4B6EC6: mov %ecx,0xC(%esp);");
    asm("loc_4B6ECA: mov (%eax),%edi;");
    asm("loc_4B6ECC: cmp %eax,%edi;");
    asm("loc_4B6ECE: mov %ecx,0x10(%esp);");
    asm("loc_4B6ED2: mov %eax,0x14(%esp);");
    asm("loc_4B6ED6: je loc_4B6F2D;");
    asm("loc_4B6ED8: push %ebp;");
    asm("loc_4B6ED9: lea (%esp),%esp;");
    asm("loc_4B6EE0: mov 0x1C(%edi),%eax;");
    asm("loc_4B6EE3: mov 0xC(%edi),%ebx;");
    asm("loc_4B6EE6: push $0;");
    asm("loc_4B6EE8: push $0;");
    asm("loc_4B6EEA: push $0;");
    asm("loc_4B6EEC: push $1;");
    asm("loc_4B6EEE: push $0;");
    asm("loc_4B6EF0: push $0;");
    asm("loc_4B6EF2: push $0;");
    asm("loc_4B6EF4: push $0;");
    asm("loc_4B6EF6: push $0;");
    asm("loc_4B6EF8: push %eax;");
    asm("loc_4B6EF9: lea 8(%edi),%ebp;");
    asm("loc_4B6EFC: push %ebp;");
    asm("loc_4B6EFD: mov %esi,%ecx;");
    asm("loc_4B6EFF: call _sub_47E440;");
    asm("loc_4B6F04: push %eax;");
    asm("loc_4B6F05: push %ebx;");
    asm("loc_4B6F06: lea 0x40(%esp),%ecx;");
    asm("loc_4B6F0A: push %ecx;");
    asm("loc_4B6F0B: mov %esi,%ecx;");
    asm("loc_4B6F0D: call _sub_47C740;");
    asm("loc_4B6F12: mov 0x14(%esp),%ecx;");
    asm("loc_4B6F16: test %ecx,%ecx;");
    asm("loc_4B6F18: jne loc_4B6F24;");
    asm("loc_4B6F1A: test %al,%al;");
    asm("loc_4B6F1C: je loc_4B6F24;");
    asm("loc_4B6F1E: mov %ebp,%ecx;");
    asm("loc_4B6F20: mov %ecx,0x14(%esp);");
    asm("loc_4B6F24: mov (%edi),%edi;");
    asm("loc_4B6F26: cmp 0x18(%esp),%edi;");
    asm("loc_4B6F2A: jne loc_4B6EE0;");
    asm("loc_4B6F2C: pop %ebp;");
    asm("loc_4B6F2D: mov 0x4E0(%esi),%al;");
    asm("loc_4B6F33: test %al,%al;");
    asm("loc_4B6F35: je loc_4B6F3F;");
    asm("loc_4B6F37: mov 0x348(%esi),%eax;");
    asm("loc_4B6F3D: jmp loc_4B6F4A;");
    asm("loc_4B6F3F: test %ecx,%ecx;");
    asm("loc_4B6F41: je loc_4B6F48;");
    asm("loc_4B6F43: mov 4(%ecx),%eax;");
    asm("loc_4B6F46: jmp loc_4B6F4A;");
    asm("loc_4B6F48: xor %eax,%eax;");
    asm("loc_4B6F4A: push $0;");
    asm("loc_4B6F4C: push %eax;");
    asm("loc_4B6F4D: mov %esi,%ecx;");
    asm("loc_4B6F4F: call _sub_47BA90;");
    asm("loc_4B6F54: mov 0xC(%esp),%edx;");
    asm("loc_4B6F58: push %edx;");
    asm("loc_4B6F59: mov %esi,%ecx;");
    asm("loc_4B6F5B: call _sub_47F3E0;");
    asm("loc_4B6F60: mov 0x4E1(%esi),%al;");
    asm("loc_4B6F66: test %al,%al;");
    asm("loc_4B6F68: je loc_4B6F6E;");
    asm("loc_4B6F6A: xor %al,%al;");
    asm("loc_4B6F6C: jmp loc_4B6F76;");
    asm("loc_4B6F6E: xor %eax,%eax;");
    asm("loc_4B6F70: mov 0x4E2(%esi),%al;");
    asm("loc_4B6F76: push %eax;");
    asm("loc_4B6F77: lea 0x330(%esi),%ecx;");
    asm("loc_4B6F7D: call _sub_53E4A0;");
    asm("loc_4B6F82: mov 0xC(%esp),%eax;");
    asm("loc_4B6F86: mov 0x3C8(%esi),%ecx;");
    asm("loc_4B6F8C: or $0xFFFFFFFF,%edi;");
    asm("loc_4B6F8F: cmp %ecx,%eax;");
    asm("loc_4B6F91: je loc_4B7017;");
    asm("loc_4B6F97: mov 0x3D0(%esi),%ecx;");
    asm("loc_4B6F9D: test %ecx,%ecx;");
    asm("loc_4B6F9F: mov %edi,0x3A4(%esi);");
    asm("loc_4B6FA5: je loc_4B6FB9;");
    asm("loc_4B6FA7: mov (%ecx),%edx;");
    asm("loc_4B6FA9: dec %eax;");
    asm("loc_4B6FAA: push %eax;");
    asm("loc_4B6FAB: push $0;");
    asm("loc_4B6FAD: push $0x37;");
    asm("loc_4B6FAF: calll *0xA8(%edx);");
    asm("loc_4B6FB5: mov 0xC(%esp),%eax;");
    asm("loc_4B6FB9: mov 0x3C4(%esi),%ecx;");
    asm("loc_4B6FBF: test %ecx,%ecx;");
    asm("loc_4B6FC1: je loc_4B700A;");
    asm("loc_4B6FC3: add $5,%ecx;");
    asm("loc_4B6FC6: cmp %eax,%ecx;");
    asm("loc_4B6FC8: jbe loc_4B700A;");
    asm("loc_4B6FCA: cmp $5,%eax;");
    asm("loc_4B6FCD: jbe loc_4B6FDA;");
    asm("loc_4B6FCF: lea -5(%eax),%ecx;");
    asm("loc_4B6FD2: mov %ecx,0x3C4(%esi);");
    asm("loc_4B6FD8: jmp loc_4B6FE4;");
    asm("loc_4B6FDA: movl $0,0x3C4(%esi);");
    asm("loc_4B6FE4: mov 0x3D0(%esi),%ecx;");
    asm("loc_4B6FEA: test %ecx,%ecx;");
    asm("loc_4B6FEC: je loc_4B700A;");
    asm("loc_4B6FEE: mov 0x3C4(%esi),%eax;");
    asm("loc_4B6FF4: mov (%ecx),%edx;");
    asm("loc_4B6FF6: lea (%eax,%eax,4),%eax;");
    asm("loc_4B6FF9: push $0;");
    asm("loc_4B6FFB: shl $1,%eax;");
    asm("loc_4B6FFD: push %eax;");
    asm("loc_4B6FFE: push $0x38;");
    asm("loc_4B7000: calll *0xA8(%edx);");
    asm("loc_4B7006: mov 0xC(%esp),%eax;");
    asm("loc_4B700A: mov (%esi),%edx;");
    asm("loc_4B700C: mov %esi,%ecx;");
    asm("loc_4B700E: mov %eax,0x3C8(%esi);");
    asm("loc_4B7014: calll *0x2C(%edx);");
    asm("loc_4B7017: lea 0x474(%esi),%ecx;");
    asm("loc_4B701D: mov $5,%edx;");
    asm("loc_4B7022: mov $0xFC,%bl;");
    asm("loc_4B7024: mov (%ecx),%eax;");
    asm("loc_4B7026: and %bl,0x6C(%eax);");
    asm("loc_4B7029: add $4,%ecx;");
    asm("loc_4B702C: dec %edx;");
    asm("loc_4B702D: jne loc_4B7024;");
    asm("loc_4B702F: cmp %edi,0x3A4(%esi);");
    asm("loc_4B7035: pop %edi;");
    asm("loc_4B7036: pop %ebx;");
    asm("loc_4B7037: jne loc_4B7040;");
    asm("loc_4B7039: movb $1,0x4E0(%esi);");
    asm("loc_4B7040: pop %esi;");
    asm("loc_4B7041: add $0xC,%esp;");
    asm("loc_4B7044: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7050() // _sub_4B7050
{
    __DEBUG_ASM(4B7050);
    // chunk 0x4B7050 _sub_4B7050
    asm("loc_4B7050: sub $0xC,%esp;");
    asm("loc_4B7053: mov 0x10(%esp),%eax;");
    asm("loc_4B7057: sub $0x26,%eax;");
    asm("loc_4B705A: push %edi;");
    asm("loc_4B705B: mov %ecx,%edi;");
    asm("loc_4B705D: mov %edi,8(%esp);");
    asm("loc_4B7061: je loc_4B714E;");
    asm("loc_4B7067: sub $0x23,%eax;");
    asm("loc_4B706A: je loc_4B7090;");
    asm("loc_4B706C: dec %eax;");
    asm("loc_4B706D: jne loc_4B7073;");
    asm("loc_4B706F: orb $3,0x6C(%edi);");
    asm("loc_4B7073: mov 0x1C(%esp),%eax;");
    asm("loc_4B7077: mov 0x18(%esp),%ecx;");
    asm("loc_4B707B: mov 0x14(%esp),%edx;");
    asm("loc_4B707F: push %eax;");
    asm("loc_4B7080: push %ecx;");
    asm("loc_4B7081: push %edx;");
    asm("loc_4B7082: mov %edi,%ecx;");
    asm("loc_4B7084: call _sub_479D10;");
    asm("loc_4B7089: pop %edi;");
    asm("loc_4B708A: add $0xC,%esp;");
    asm("loc_4B708D: ret $0xC;");
    asm("loc_4B7090: mov 0x1C(%esp),%eax;");
    asm("loc_4B7094: push %ebx;");
    asm("loc_4B7095: push %ebp;");
    asm("loc_4B7096: mov %eax,0x348(%edi);");
    asm("loc_4B709C: mov 0x97C(%edi),%ebp;");
    asm("loc_4B70A2: lea 0x978(%edi),%ebx;");
    asm("loc_4B70A8: push %esi;");
    asm("loc_4B70A9: mov (%ebp),%esi;");
    asm("loc_4B70AC: cmp %ebp,%esi;");
    asm("loc_4B70AE: je loc_4B70C6;");
    asm("loc_4B70B0: mov %esi,%eax;");
    asm("loc_4B70B2: mov (%esi),%esi;");
    asm("loc_4B70B4: push %eax;");
    asm("loc_4B70B5: lea 0x1C(%esp),%ecx;");
    asm("loc_4B70B9: push %ecx;");
    asm("loc_4B70BA: mov %ebx,%ecx;");
    asm("loc_4B70BC: calll *_import_5C6188;");
    asm("loc_4B70C2: cmp %ebp,%esi;");
    asm("loc_4B70C4: jne loc_4B70B0;");
    asm("loc_4B70C6: mov 0x24(%esp),%esi;");
    asm("loc_4B70CA: cmp %esi,%ebx;");
    asm("loc_4B70CC: je loc_4B713F;");
    asm("loc_4B70CE: mov 4(%ebx),%ebp;");
    asm("loc_4B70D1: mov (%ebp),%ebx;");
    asm("loc_4B70D4: lea 0x10(%esp),%edx;");
    asm("loc_4B70D8: push %edx;");
    asm("loc_4B70D9: mov %esi,%ecx;");
    asm("loc_4B70DB: calll *_import_5C6410;");
    asm("loc_4B70E1: cmp %ebp,%ebx;");
    asm("loc_4B70E3: mov 4(%esi),%eax;");
    asm("loc_4B70E6: mov %eax,0x18(%esp);");
    asm("loc_4B70EA: je loc_4B7117;");
    asm("loc_4B70EC: mov 0x10(%esp),%eax;");
    asm("loc_4B70F0: cmp 0x18(%esp),%eax;");
    asm("loc_4B70F4: je loc_4B7117;");
    asm("loc_4B70F6: lea 8(%eax),%esi;");
    asm("loc_4B70F9: lea 8(%ebx),%edi;");
    asm("loc_4B70FC: mov (%ebx),%ebx;");
    asm("loc_4B70FE: cmp %ebp,%ebx;");
    asm("loc_4B7100: mov $8,%ecx;");
    asm("loc_4B7105: rep movsl (%esi),(%edi);");
    asm("loc_4B7107: mov 0x10(%esp),%ecx;");
    asm("loc_4B710B: mov (%ecx),%eax;");
    asm("loc_4B710D: mov 0x14(%esp),%edi;");
    asm("loc_4B7111: mov %eax,0x10(%esp);");
    asm("loc_4B7115: jne loc_4B70F0;");
    asm("loc_4B7117: push %ebp;");
    asm("loc_4B7118: push %ebx;");
    asm("loc_4B7119: lea 0x1C(%esp),%edx;");
    asm("loc_4B711D: lea 0x978(%edi),%esi;");
    asm("loc_4B7123: push %edx;");
    asm("loc_4B7124: mov %esi,%ecx;");
    asm("loc_4B7126: calll *_import_5C618C;");
    asm("loc_4B712C: mov 0x18(%esp),%eax;");
    asm("loc_4B7130: mov 0x10(%esp),%ecx;");
    asm("loc_4B7134: push %eax;");
    asm("loc_4B7135: push %ecx;");
    asm("loc_4B7136: push %ebp;");
    asm("loc_4B7137: mov %esi,%ecx;");
    asm("loc_4B7139: calll *_import_5C636C;");
    asm("loc_4B713F: mov (%edi),%edx;");
    asm("loc_4B7141: mov %edi,%ecx;");
    asm("loc_4B7143: calll *0x2C(%edx);");
    asm("loc_4B7146: pop %esi;");
    asm("loc_4B7147: pop %ebp;");
    asm("loc_4B7148: pop %ebx;");
    asm("loc_4B7149: jmp loc_4B7073;");
    asm("loc_4B714E: mov 0x18(%esp),%eax;");
    asm("loc_4B7152: cmp 0x4D8(%edi),%eax;");
    asm("loc_4B7158: jne loc_4B7073;");
    asm("loc_4B715E: mov (%edi),%edx;");
    asm("loc_4B7160: push $0;");
    asm("loc_4B7162: push $0;");
    asm("loc_4B7164: push $0xEF02;");
    asm("loc_4B7169: mov %edi,%ecx;");
    asm("loc_4B716B: calll *0x5C(%edx);");
    asm("loc_4B716E: mov $1,%eax;");
    asm("loc_4B7173: pop %edi;");
    asm("loc_4B7174: add $0xC,%esp;");
    asm("loc_4B7177: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7180() // _sub_4B7180
{
    __DEBUG_ASM(4B7180);
    // chunk 0x4B7180 _sub_4B7180
    asm("loc_4B7180: mov 4(%esp),%eax;");
    asm("loc_4B7184: cmp $0xEF02,%eax;");
    asm("loc_4B7189: push %esi;");
    asm("loc_4B718A: mov %ecx,%esi;");
    asm("loc_4B718C: jne loc_4B71A5;");
    asm("loc_4B718E: push $0xE;");
    asm("loc_4B7190: call _sub_5645C0;");
    asm("loc_4B7195: add $4,%esp;");
    asm("loc_4B7198: mov %esi,%ecx;");
    asm("loc_4B719A: call _sub_47AD20;");
    asm("loc_4B719F: mov $1,%al;");
    asm("loc_4B71A1: pop %esi;");
    asm("loc_4B71A2: ret $0xC;");
    asm("loc_4B71A5: mov 0x10(%esp),%ecx;");
    asm("loc_4B71A9: mov 0xC(%esp),%edx;");
    asm("loc_4B71AD: push %ecx;");
    asm("loc_4B71AE: push %edx;");
    asm("loc_4B71AF: push %eax;");
    asm("loc_4B71B0: mov %esi,%ecx;");
    asm("loc_4B71B2: call _sub_47ADE0;");
    asm("loc_4B71B7: pop %esi;");
    asm("loc_4B71B8: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B71C0() // _sub_4B71C0
{
    __DEBUG_ASM(4B71C0);
    // chunk 0x4B71C0 _sub_4B71C0
    asm("loc_4B71C0: push %esi;");
    asm("loc_4B71C1: mov %ecx,%esi;");
    asm("loc_4B71C3: call _sub_45A740;");
    asm("loc_4B71C8: test %al,%al;");
    asm("loc_4B71CA: je loc_4B71D2;");
    asm("loc_4B71CC: xor %al,%al;");
    asm("loc_4B71CE: pop %esi;");
    asm("loc_4B71CF: ret $4;");
    asm("loc_4B71D2: cmpl $0xF,8(%esp);");
    asm("loc_4B71D7: je loc_4B71DF;");
    asm("loc_4B71D9: xor %al,%al;");
    asm("loc_4B71DB: pop %esi;");
    asm("loc_4B71DC: ret $4;");
    asm("loc_4B71DF: push $0xE;");
    asm("loc_4B71E1: call _sub_5645C0;");
    asm("loc_4B71E6: add $4,%esp;");
    asm("loc_4B71E9: lea -0x974(%esi),%ecx;");
    asm("loc_4B71EF: call _sub_47AD20;");
    asm("loc_4B71F4: mov $1,%al;");
    asm("loc_4B71F6: pop %esi;");
    asm("loc_4B71F7: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7200() // _sub_4B7200
{
    __DEBUG_ASM(4B7200);
    // chunk 0x4B7200 _sub_4B7200
    asm("loc_4B7200: push %ebx;");
    asm("loc_4B7201: mov %ecx,%ebx;");
    asm("loc_4B7203: xor %eax,%eax;");
    asm("loc_4B7205: push %esi;");
    asm("loc_4B7206: mov 0xC(%esp),%esi;");
    asm("loc_4B720A: cmp %eax,%esi;");
    asm("loc_4B720C: mov %eax,8(%ebx);");
    asm("loc_4B720F: mov %al,0xC(%ebx);");
    asm("loc_4B7212: movl $_off_5CB554,(%ebx);");
    asm("loc_4B7218: mov %eax,4(%ebx);");
    asm("loc_4B721B: jne loc_4B7222;");
    asm("loc_4B721D: mov %al,0xC(%ebx);");
    asm("loc_4B7220: jmp loc_4B7257;");
    asm("loc_4B7222: push %ebp;");
    asm("loc_4B7223: or $0xFFFFFFFF,%ecx;");
    asm("loc_4B7226: xor %eax,%eax;");
    asm("loc_4B7228: push %edi;");
    asm("loc_4B7229: mov %esi,%edi;");
    asm("loc_4B722B: repne scas (%edi),%al;");
    asm("loc_4B722D: not %ecx;");
    asm("loc_4B722F: dec %ecx;");
    asm("loc_4B7230: mov %ecx,%eax;");
    asm("loc_4B7232: cmp $0x20,%eax;");
    asm("loc_4B7235: lea 0xC(%ebx),%ebp;");
    asm("loc_4B7238: jb loc_4B723F;");
    asm("loc_4B723A: mov $0x1F,%eax;");
    asm("loc_4B723F: mov %eax,%ecx;");
    asm("loc_4B7241: mov %ecx,%edx;");
    asm("loc_4B7243: shr $2,%ecx;");
    asm("loc_4B7246: mov %ebp,%edi;");
    asm("loc_4B7248: rep movsl (%esi),(%edi);");
    asm("loc_4B724A: mov %edx,%ecx;");
    asm("loc_4B724C: and $3,%ecx;");
    asm("loc_4B724F: rep movsb (%esi),(%edi);");
    asm("loc_4B7251: pop %edi;");
    asm("loc_4B7252: movb $0,(%eax,%ebp);");
    asm("loc_4B7256: pop %ebp;");
    asm("loc_4B7257: push %ebx;");
    asm("loc_4B7258: mov %eax,8(%ebx);");
    asm("loc_4B725B: call _sub_59DAB0;");
    asm("loc_4B7260: add $4,%esp;");
    asm("loc_4B7263: pop %esi;");
    asm("loc_4B7264: movl $_off_5D56DC,(%ebx);");
    asm("loc_4B726A: mov %ebx,%eax;");
    asm("loc_4B726C: pop %ebx;");
    asm("loc_4B726D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7270() // _sub_4B7270
{
    __DEBUG_ASM(4B7270);
    // chunk 0x4B7270 _sub_4B7270
    asm("loc_4B7270: push $0xFFFFFFFF;");
    asm("loc_4B7272: push $_sub_5BD2A0;");
    asm("loc_4B7277: mov %fs:0,%eax;");
    asm("loc_4B727D: push %eax;");
    asm("loc_4B727E: mov %esp,%fs:0;");
    asm("loc_4B7285: sub $0xC,%esp;");
    asm("loc_4B7288: push %esi;");
    asm("loc_4B7289: push %edi;");
    asm("loc_4B728A: push $0x984;");
    asm("loc_4B728F: mov %ecx,0xC(%esp);");
    asm("loc_4B7293: call _sub_5B7E84;");
    asm("loc_4B7298: mov %eax,%edi;");
    asm("loc_4B729A: add $4,%esp;");
    asm("loc_4B729D: mov %edi,0xC(%esp);");
    asm("loc_4B72A1: xor %esi,%esi;");
    asm("loc_4B72A3: cmp %esi,%edi;");
    asm("loc_4B72A5: mov %esi,0x1C(%esp);");
    asm("loc_4B72A9: je loc_4B732A;");
    asm("loc_4B72AB: push %ebx;");
    asm("loc_4B72AC: push %ebp;");
    asm("loc_4B72AD: mov %edi,%ecx;");
    asm("loc_4B72AF: call _sub_477CF0;");
    asm("loc_4B72B4: movl $_off_5CBED8,0x974(%edi);");
    asm("loc_4B72BE: mov 0x30(%esp),%al;");
    asm("loc_4B72C2: lea 0x978(%edi),%ebx;");
    asm("loc_4B72C8: push $0x28;");
    asm("loc_4B72CA: movb $2,0x28(%esp);");
    asm("loc_4B72CF: mov %al,(%ebx);");
    asm("loc_4B72D1: call _sub_5B7E84;");
    asm("loc_4B72D6: mov %eax,(%eax);");
    asm("loc_4B72D8: mov %eax,4(%eax);");
    asm("loc_4B72DB: add $4,%esp;");
    asm("loc_4B72DE: mov %eax,4(%ebx);");
    asm("loc_4B72E1: mov %esi,8(%ebx);");
    asm("loc_4B72E4: movl $_off_5D561C,(%edi);");
    asm("loc_4B72EA: movl $_off_5D560C,0x7C(%edi);");
    asm("loc_4B72F1: movl $_off_5D5604,0x974(%edi);");
    asm("loc_4B72FB: mov 4(%ebx),%ebp;");
    asm("loc_4B72FE: mov (%ebp),%esi;");
    asm("loc_4B7301: cmp %ebp,%esi;");
    asm("loc_4B7303: movb $3,0x24(%esp);");
    asm("loc_4B7308: je loc_4B7326;");
    asm("loc_4B730A: lea (%ebx),%ebx;");
    asm("loc_4B7310: mov %esi,%eax;");
    asm("loc_4B7312: mov (%esi),%esi;");
    asm("loc_4B7314: push %eax;");
    asm("loc_4B7315: lea 0x1C(%esp),%ecx;");
    asm("loc_4B7319: push %ecx;");
    asm("loc_4B731A: mov %ebx,%ecx;");
    asm("loc_4B731C: calll *_import_5C6188;");
    asm("loc_4B7322: cmp %ebp,%esi;");
    asm("loc_4B7324: jne loc_4B7310;");
    asm("loc_4B7326: pop %ebp;");
    asm("loc_4B7327: pop %ebx;");
    asm("loc_4B7328: jmp loc_4B732C;");
    asm("loc_4B732A: xor %edi,%edi;");
    asm("loc_4B732C: mov 8(%esp),%edx;");
    asm("loc_4B7330: mov 0x28(%esp),%ecx;");
    asm("loc_4B7334: mov (%edi),%eax;");
    asm("loc_4B7336: add $0xC,%edx;");
    asm("loc_4B7339: mov %edx,0x10(%edi);");
    asm("loc_4B733C: mov 0x24(%esp),%edx;");
    asm("loc_4B7340: push %ecx;");
    asm("loc_4B7341: push %edx;");
    asm("loc_4B7342: mov %edi,%ecx;");
    asm("loc_4B7344: movl $0xFFFFFFFF,0x24(%esp);");
    asm("loc_4B734C: calll *0x24(%eax);");
    asm("loc_4B734F: test %al,%al;");
    asm("loc_4B7351: jne loc_4B7370;");
    asm("loc_4B7353: mov (%edi),%eax;");
    asm("loc_4B7355: push $1;");
    asm("loc_4B7357: mov %edi,%ecx;");
    asm("loc_4B7359: calll *(%eax);");
    asm("loc_4B735B: pop %edi;");
    asm("loc_4B735C: xor %eax,%eax;");
    asm("loc_4B735E: pop %esi;");
    asm("loc_4B735F: mov 0xC(%esp),%ecx;");
    asm("loc_4B7363: mov %ecx,%fs:0;");
    asm("loc_4B736A: add $0x18,%esp;");
    asm("loc_4B736D: ret $8;");
    asm("loc_4B7370: mov 0x14(%esp),%ecx;");
    asm("loc_4B7374: mov %edi,%eax;");
    asm("loc_4B7376: pop %edi;");
    asm("loc_4B7377: pop %esi;");
    asm("loc_4B7378: mov %ecx,%fs:0;");
    asm("loc_4B737F: add $0x18,%esp;");
    asm("loc_4B7382: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7390() // _sub_4B7390
{
    __DEBUG_ASM(4B7390);
    // chunk 0x4B7390 _sub_4B7390
    asm("loc_4B7390: mov 4(%esp),%eax;");
    asm("loc_4B7394: test %eax,%eax;");
    asm("loc_4B7396: je loc_4B73D2;");
    asm("loc_4B7398: mov 8(%esp),%ecx;");
    asm("loc_4B739C: mov (%ecx),%dl;");
    asm("loc_4B739E: mov %dl,(%eax);");
    asm("loc_4B73A0: mov 2(%ecx),%dx;");
    asm("loc_4B73A4: mov %dx,2(%eax);");
    asm("loc_4B73A8: mov 4(%ecx),%edx;");
    asm("loc_4B73AB: mov %edx,4(%eax);");
    asm("loc_4B73AE: mov 8(%ecx),%edx;");
    asm("loc_4B73B1: mov %edx,8(%eax);");
    asm("loc_4B73B4: mov 0xC(%ecx),%dl;");
    asm("loc_4B73B7: mov %dl,0xC(%eax);");
    asm("loc_4B73BA: mov 0x10(%ecx),%edx;");
    asm("loc_4B73BD: mov %edx,0x10(%eax);");
    asm("loc_4B73C0: mov 0x14(%ecx),%edx;");
    asm("loc_4B73C3: mov %edx,0x14(%eax);");
    asm("loc_4B73C6: mov 0x18(%ecx),%dl;");
    asm("loc_4B73C9: mov %dl,0x18(%eax);");
    asm("loc_4B73CC: mov 0x1C(%ecx),%ecx;");
    asm("loc_4B73CF: mov %ecx,0x1C(%eax);");
    asm("loc_4B73D2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B73E0() // _sub_4B73E0
{
    __DEBUG_ASM(4B73E0);
    // chunk 0x4B73E0 _sub_4B73E0
    asm("loc_4B73E0: mov _data_5D56E0,%eax;");
    asm("loc_4B73E5: mov %eax,_data_672304;");
    asm("loc_4B73EA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B73F0() // _sub_4B73F0
{
    __DEBUG_ASM(4B73F0);
    // chunk 0x4B73F0 _sub_4B73F0
    asm("loc_4B73F0: mov _data_5D56E0,%eax;");
    asm("loc_4B73F5: mov %eax,_data_672300;");
    asm("loc_4B73FA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7400() // _sub_4B7400
{
    __DEBUG_ASM(4B7400);
    // chunk 0x4B7400 _sub_4B7400
    asm("loc_4B7400: mov _data_5D56E4,%eax;");
    asm("loc_4B7405: mov %eax,_data_6722FC;");
    asm("loc_4B740A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7410() // _sub_4B7410
{
    __DEBUG_ASM(4B7410);
    // chunk 0x4B7410 _sub_4B7410
    asm("loc_4B7410: push $_data_5CB6BC;");
    asm("loc_4B7415: mov $_data_6722D0,%ecx;");
    asm("loc_4B741A: call _sub_4B96B0;");
    asm("loc_4B741F: push $_sub_4B7430;");
    asm("loc_4B7424: call _sub_5B7E6C;");
    asm("loc_4B7429: pop %ecx;");
    asm("loc_4B742A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7430() // _unknown_libname_37
{
    __DEBUG_ASM(4B7430);
    // chunk 0x4B7430 _sub_4B7430
    asm("loc_4B7430: mov $_data_6722D0,%ecx;");
    asm("loc_4B7435: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B7440() // _sub_4B7440
{
    __DEBUG_ASM(4B7440);
    // chunk 0x4B7440 _sub_4B7440
    asm("loc_4B7440: push $0xFFFFFFFF;");
    asm("loc_4B7442: push $_sub_5BD2BB;");
    asm("loc_4B7447: mov %fs:0,%eax;");
    asm("loc_4B744D: push %eax;");
    asm("loc_4B744E: mov %esp,%fs:0;");
    asm("loc_4B7455: sub $0x730,%esp;");
    asm("loc_4B745B: mov _data_66873C,%eax;");
    asm("loc_4B7460: push %ebx;");
    asm("loc_4B7461: push %ebp;");
    asm("loc_4B7462: push %esi;");
    asm("loc_4B7463: push %edi;");
    asm("loc_4B7464: mov %ecx,%esi;");
    asm("loc_4B7466: push %eax;");
    asm("loc_4B7467: mov $_data_668708,%ecx;");
    asm("loc_4B746C: call _sub_43A510;");
    asm("loc_4B7471: mov %eax,%edi;");
    asm("loc_4B7473: mov 0x6B(%esp),%al;");
    asm("loc_4B7477: push $0xC;");
    asm("loc_4B7479: mov %edi,0x74(%esp);");
    asm("loc_4B747D: mov %al,0x4C(%esp);");
    asm("loc_4B7481: call _sub_5B7E84;");
    asm("loc_4B7486: mov %eax,(%eax);");
    asm("loc_4B7488: mov %eax,4(%eax);");
    asm("loc_4B748B: xor %ebx,%ebx;");
    asm("loc_4B748D: add $4,%esp;");
    asm("loc_4B7490: mov %eax,0x4C(%esp);");
    asm("loc_4B7494: mov %ebx,0x50(%esp);");
    asm("loc_4B7498: mov $3,%ebp;");
    asm("loc_4B749D: push %ebp;");
    asm("loc_4B749E: lea 0x4C(%esp),%ecx;");
    asm("loc_4B74A2: push %ecx;");
    asm("loc_4B74A3: mov %edi,%ecx;");
    asm("loc_4B74A5: mov %ebx,0x750(%esp);");
    asm("loc_4B74AC: call _sub_437F70;");
    asm("loc_4B74B1: cmp %ebx,%eax;");
    asm("loc_4B74B3: mov %eax,0x3CC(%esi);");
    asm("loc_4B74B9: jne loc_4B74F0;");
    asm("loc_4B74BB: mov 0x4C(%esp),%eax;");
    asm("loc_4B74BF: mov (%eax),%ecx;");
    asm("loc_4B74C1: push %eax;");
    asm("loc_4B74C2: push %ecx;");
    asm("loc_4B74C3: lea 0x48(%esp),%edx;");
    asm("loc_4B74C7: push %edx;");
    asm("loc_4B74C8: lea 0x54(%esp),%ecx;");
    asm("loc_4B74CC: movl $0xFFFFFFFF,0x754(%esp);");
    asm("loc_4B74D7: call _sub_4A2F80;");
    asm("loc_4B74DC: mov 0x4C(%esp),%eax;");
    asm("loc_4B74E0: push %eax;");
    asm("loc_4B74E1: call _sub_5B7E1D;");
    asm("loc_4B74E6: add $4,%esp;");
    asm("loc_4B74E9: xor %al,%al;");
    asm("loc_4B74EB: jmp loc_4B85CE;");
    asm("loc_4B74F0: mov (%esi),%edx;");
    asm("loc_4B74F2: or $0xFFFFFFFF,%eax;");
    asm("loc_4B74F5: push %ebx;");
    asm("loc_4B74F6: push $_data_5D1580;");
    asm("loc_4B74FB: mov %esi,%ecx;");
    asm("loc_4B74FD: mov %eax,0x3D4(%esi);");
    asm("loc_4B7503: mov %eax,0x3D0(%esi);");
    asm("loc_4B7509: movb $1,0x3E4(%esi);");
    asm("loc_4B7510: calll *0x98(%edx);");
    asm("loc_4B7516: push %ebx;");
    asm("loc_4B7517: push %ebx;");
    asm("loc_4B7518: push $0x2148;");
    asm("loc_4B751D: push %ebx;");
    asm("loc_4B751E: movl $0x3F28F5C3,0x44(%esp);");
    asm("loc_4B7526: mov 0x44(%esp),%ecx;");
    asm("loc_4B752A: push %ebx;");
    asm("loc_4B752B: movl $0x3F23D70A,0x4C(%esp);");
    asm("loc_4B7533: mov 0x4C(%esp),%edx;");
    asm("loc_4B7537: lea 0xB4(%esi),%eax;");
    asm("loc_4B753D: mov %ecx,(%eax);");
    asm("loc_4B753F: mov %edx,4(%eax);");
    asm("loc_4B7542: movl $0,0x50(%esp);");
    asm("loc_4B754A: mov 0x50(%esp),%ecx;");
    asm("loc_4B754E: mov %ecx,8(%eax);");
    asm("loc_4B7551: push %ebx;");
    asm("loc_4B7552: movl $0x3F23D70A,0x4C(%esp);");
    asm("loc_4B755A: mov 0x4C(%esp),%eax;");
    asm("loc_4B755E: push %ebx;");
    asm("loc_4B755F: movl $0xBE8A3D71,0x54(%esp);");
    asm("loc_4B7567: mov 0x54(%esp),%ecx;");
    asm("loc_4B756B: lea 0xC0(%esi),%edx;");
    asm("loc_4B7571: mov %eax,(%edx);");
    asm("loc_4B7573: mov %ecx,4(%edx);");
    asm("loc_4B7576: movl $0,0x58(%esp);");
    asm("loc_4B757E: mov 0x58(%esp),%eax;");
    asm("loc_4B7582: lea 0x50(%esp),%ecx;");
    asm("loc_4B7586: push %ecx;");
    asm("loc_4B7587: push %ebx;");
    asm("loc_4B7588: mov %eax,8(%edx);");
    asm("loc_4B758B: lea 0x98(%esp),%edx;");
    asm("loc_4B7592: push %edx;");
    asm("loc_4B7593: push %ebx;");
    asm("loc_4B7594: push $_data_5CED30;");
    asm("loc_4B7599: push %ebx;");
    asm("loc_4B759A: push $_data_5CF1F4;");
    asm("loc_4B759F: push $_data_5D5904;");
    asm("loc_4B75A4: mov %esi,%ecx;");
    asm("loc_4B75A6: movl $0x3CA3D70A,0x70(%esp);");
    asm("loc_4B75AE: movl $0x3CA3D70A,0x74(%esp);");
    asm("loc_4B75B6: movl $0,0x78(%esp);");
    asm("loc_4B75BE: movl $0x3FA00000,0xB0(%esp);");
    asm("loc_4B75C9: movl $0xBD23D70A,0xB4(%esp);");
    asm("loc_4B75D4: movl $0,0xB8(%esp);");
    asm("loc_4B75DF: call _sub_5A0C90;");
    asm("loc_4B75E4: mov %eax,0x330(%esi);");
    asm("loc_4B75EA: cmp %ebp,0x3CC(%esi);");
    asm("loc_4B75F0: jle loc_4B75F8;");
    asm("loc_4B75F2: mov %ebp,0x3CC(%esi);");
    asm("loc_4B75F8: mov 0x4C(%esp),%eax;");
    asm("loc_4B75FC: mov (%eax),%ecx;");
    asm("loc_4B75FE: mov 0x3CC(%esi),%eax;");
    asm("loc_4B7604: xor %ebp,%ebp;");
    asm("loc_4B7606: cmp %ebx,%eax;");
    asm("loc_4B7608: mov %ecx,0x64(%esp);");
    asm("loc_4B760C: mov %ebp,0x6C(%esp);");
    asm("loc_4B7610: jle loc_4B7ADD;");
    asm("loc_4B7616: mov _import_5C71EC,%ebx;");
    asm("loc_4B761C: lea 0x3B4(%esi),%edi;");
    asm("loc_4B7622: mov 0x64(%esp),%edx;");
    asm("loc_4B7626: xor %eax,%eax;");
    asm("loc_4B7628: mov %eax,0x24(%esp);");
    asm("loc_4B762C: mov %eax,0x20(%esp);");
    asm("loc_4B7630: mov 8(%edx),%eax;");
    asm("loc_4B7633: mov (%eax),%eax;");
    asm("loc_4B7635: push %eax;");
    asm("loc_4B7636: mov %eax,0xC(%edi);");
    asm("loc_4B7639: calll *_import_5C6088;");
    asm("loc_4B763F: add $4,%esp;");
    asm("loc_4B7642: test %eax,%eax;");
    asm("loc_4B7644: mov %eax,0x1C(%esp);");
    asm("loc_4B7648: mov %eax,(%edi);");
    asm("loc_4B764A: movl $0,0x38(%edi);");
    asm("loc_4B7651: je loc_4B7819;");
    asm("loc_4B7657: mov 0x90(%eax),%eax;");
    asm("loc_4B765D: push %eax;");
    asm("loc_4B765E: calll *_import_5C6088;");
    asm("loc_4B7664: mov 0x54(%eax),%ecx;");
    asm("loc_4B7667: push %ecx;");
    asm("loc_4B7668: mov %eax,0x4C(%esp);");
    asm("loc_4B766C: calll *_import_5C61FC;");
    asm("loc_4B7672: mov 0xF8(%eax),%ecx;");
    asm("loc_4B7678: add $8,%esp;");
    asm("loc_4B767B: test %ecx,%ecx;");
    asm("loc_4B767D: mov %ecx,0x38(%edi);");
    asm("loc_4B7680: jl loc_4B7687;");
    asm("loc_4B7682: cmp $4,%ecx;");
    asm("loc_4B7685: jl loc_4B768E;");
    asm("loc_4B7687: movl $0,0x38(%edi);");
    asm("loc_4B768E: mov 0x14(%eax),%edx;");
    asm("loc_4B7691: mov 0x44(%esp),%eax;");
    asm("loc_4B7695: mov 0x48(%eax),%eax;");
    asm("loc_4B7698: mov 0x70(%esp),%ecx;");
    asm("loc_4B769C: push %eax;");
    asm("loc_4B769D: mov %edx,0x28(%esp);");
    asm("loc_4B76A1: call _sub_438060;");
    asm("loc_4B76A6: call _sub_5B7EC0;");
    asm("loc_4B76AB: mov 0x1C(%esp),%ecx;");
    asm("loc_4B76AF: mov 0x98(%ecx),%ecx;");
    asm("loc_4B76B5: mov %eax,0x20(%esp);");
    asm("loc_4B76B9: mov (%ecx),%eax;");
    asm("loc_4B76BB: cmp %ecx,%eax;");
    asm("loc_4B76BD: mov %ecx,0x40(%esp);");
    asm("loc_4B76C1: mov %eax,0x1C(%esp);");
    asm("loc_4B76C5: je loc_4B7726;");
    asm("loc_4B76C7: jmp loc_4B76D0;");
    asm("loc_4B76C9: mov 0x1C(%esp),%eax;");
    asm("loc_4B76CD: lea (%ecx),%ecx;");
    asm("loc_4B76D0: mov 0xC(%eax),%eax;");
    asm("loc_4B76D3: push %eax;");
    asm("loc_4B76D4: calll *_import_5C632C;");
    asm("loc_4B76DA: add $4,%esp;");
    asm("loc_4B76DD: test $0x3FFFFFFF,%eax;");
    asm("loc_4B76E2: je loc_4B7716;");
    asm("loc_4B76E4: mov 0x1C(%esp),%edx;");
    asm("loc_4B76E8: mov 0x18(%edx),%ecx;");
    asm("loc_4B76EB: mov %ecx,0x8C(%esp);");
    asm("loc_4B76F2: mov 0x70(%esp),%ecx;");
    asm("loc_4B76F6: push %eax;");
    asm("loc_4B76F7: call _sub_438060;");
    asm("loc_4B76FC: fmuls 0x8C(%esp);");
    asm("loc_4B7703: call _sub_5B7EC0;");
    asm("loc_4B7708: mov 0x1C(%esp),%edx;");
    asm("loc_4B770C: mov 0x1C(%edx),%ecx;");
    asm("loc_4B770F: imul %eax,%ecx;");
    asm("loc_4B7712: add %ecx,0x20(%esp);");
    asm("loc_4B7716: mov 0x1C(%esp),%edx;");
    asm("loc_4B771A: mov (%edx),%eax;");
    asm("loc_4B771C: cmp 0x40(%esp),%eax;");
    asm("loc_4B7720: mov %eax,0x1C(%esp);");
    asm("loc_4B7724: jne loc_4B76C9;");
    asm("loc_4B7726: calll *_import_5C6158;");
    asm("loc_4B772C: test %eax,%eax;");
    asm("loc_4B772E: je loc_4B7819;");
    asm("loc_4B7734: mov 0x44(%esp),%ecx;");
    asm("loc_4B7738: mov 0x54(%ecx),%edx;");
    asm("loc_4B773B: push %edx;");
    asm("loc_4B773C: mov %eax,%ecx;");
    asm("loc_4B773E: calll *_import_5C6418;");
    asm("loc_4B7744: test %eax,%eax;");
    asm("loc_4B7746: mov %eax,0x44(%esp);");
    asm("loc_4B774A: je loc_4B7819;");
    asm("loc_4B7750: push %ebp;");
    asm("loc_4B7751: lea 0xC4(%esp),%eax;");
    asm("loc_4B7758: push $_data_5D58EC;");
    asm("loc_4B775D: push %eax;");
    asm("loc_4B775E: call *%ebx;");
    asm("loc_4B7760: fildl 0x78(%esp);");
    asm("loc_4B7764: add $0xC,%esp;");
    asm("loc_4B7767: mov 0x44(%esp),%ecx;");
    asm("loc_4B776B: mov 0x78(%ecx),%eax;");
    asm("loc_4B776E: fmuls _data_5D4958;");
    asm("loc_4B7774: lea 0x74(%esp),%edx;");
    asm("loc_4B7778: push %edx;");
    asm("loc_4B7779: push $0;");
    asm("loc_4B777B: fsubrs _data_5D0434;");
    asm("loc_4B7781: push $0;");
    asm("loc_4B7783: push $0x50;");
    asm("loc_4B7785: push $1;");
    asm("loc_4B7787: fstps 0xB4(%esp);");
    asm("loc_4B778E: push $1;");
    asm("loc_4B7790: push $1;");
    asm("loc_4B7792: push $1;");
    asm("loc_4B7794: push $0;");
    asm("loc_4B7796: push $0;");
    asm("loc_4B7798: push $0;");
    asm("loc_4B779A: lea 0x60(%esp),%ecx;");
    asm("loc_4B779E: push %ecx;");
    asm("loc_4B779F: push $0;");
    asm("loc_4B77A1: lea 0xD0(%esp),%edx;");
    asm("loc_4B77A8: push %edx;");
    asm("loc_4B77A9: push %eax;");
    asm("loc_4B77AA: lea 0xFC(%esp),%eax;");
    asm("loc_4B77B1: push %eax;");
    asm("loc_4B77B2: mov %esi,%ecx;");
    asm("loc_4B77B4: movl $0,0xB4(%esp);");
    asm("loc_4B77BF: movl $0,0xB8(%esp);");
    asm("loc_4B77CA: movl $0,0xBC(%esp);");
    asm("loc_4B77D5: movl $0x3D1374BC,0x74(%esp);");
    asm("loc_4B77DD: movl $0x3D27EF9E,0x78(%esp);");
    asm("loc_4B77E5: movl $0,0x7C(%esp);");
    asm("loc_4B77ED: movl $0x3E8DD2F2,0xDC(%esp);");
    asm("loc_4B77F8: movl $0xBFA4DD2F,0xE4(%esp);");
    asm("loc_4B7803: call _sub_5A0DB0;");
    asm("loc_4B7808: mov %eax,-0x68(%edi);");
    asm("loc_4B780B: andb $0xF7,0x6C(%eax);");
    asm("loc_4B780F: mov 0x44(%esp),%ecx;");
    asm("loc_4B7813: mov 0x78(%ecx),%edx;");
    asm("loc_4B7816: mov %edx,0x70(%edi);");
    asm("loc_4B7819: push %ebp;");
    asm("loc_4B781A: lea 0xC4(%esp),%eax;");
    asm("loc_4B7821: push $_data_5D58CC;");
    asm("loc_4B7826: push %eax;");
    asm("loc_4B7827: call *%ebx;");
    asm("loc_4B7829: fildl 0x78(%esp);");
    asm("loc_4B782D: add $0xC,%esp;");
    asm("loc_4B7830: push $0;");
    asm("loc_4B7832: fmuls _data_5D4958;");
    asm("loc_4B7838: push $0;");
    asm("loc_4B783A: push $0;");
    asm("loc_4B783C: push $0;");
    asm("loc_4B783E: push $0;");
    asm("loc_4B7840: fstps 0x30(%esp);");
    asm("loc_4B7844: flds _data_5D58C8;");
    asm("loc_4B784A: lea 0xA4(%esp),%ecx;");
    asm("loc_4B7851: fsubs 0x30(%esp);");
    asm("loc_4B7855: push %ecx;");
    asm("loc_4B7856: lea 0xC0(%esp),%edx;");
    asm("loc_4B785D: push %edx;");
    asm("loc_4B785E: push $_data_5CED30;");
    asm("loc_4B7863: fsts 0x60(%esp);");
    asm("loc_4B7867: lea 0xE0(%esp),%eax;");
    asm("loc_4B786E: fstps 0xCC(%esp);");
    asm("loc_4B7875: push %eax;");
    asm("loc_4B7876: mov %esi,%ecx;");
    asm("loc_4B7878: movl $0x3D0F5C29,0xB4(%esp);");
    asm("loc_4B7883: movl $0x3D09374C,0xB8(%esp);");
    asm("loc_4B788E: movl $0,0xBC(%esp);");
    asm("loc_4B7899: movl $0x3F6A7EFA,0xCC(%esp);");
    asm("loc_4B78A4: movl $0,0xD4(%esp);");
    asm("loc_4B78AF: call _sub_5A0D00;");
    asm("loc_4B78B4: push %ebp;");
    asm("loc_4B78B5: lea 0xC4(%esp),%ecx;");
    asm("loc_4B78BC: push $_data_5D58AC;");
    asm("loc_4B78C1: push %ecx;");
    asm("loc_4B78C2: mov %eax,-0x74(%edi);");
    asm("loc_4B78C5: call *%ebx;");
    asm("loc_4B78C7: mov 0x4C(%esp),%edx;");
    asm("loc_4B78CB: add $0xC,%esp;");
    asm("loc_4B78CE: push $0;");
    asm("loc_4B78D0: push $0;");
    asm("loc_4B78D2: push $0;");
    asm("loc_4B78D4: push $0;");
    asm("loc_4B78D6: push $0;");
    asm("loc_4B78D8: lea 0xC8(%esp),%eax;");
    asm("loc_4B78DF: push %eax;");
    asm("loc_4B78E0: lea 0x98(%esp),%ecx;");
    asm("loc_4B78E7: push %ecx;");
    asm("loc_4B78E8: mov %edx,0xA0(%esp);");
    asm("loc_4B78EF: push $_data_5CED30;");
    asm("loc_4B78F4: lea 0xE0(%esp),%edx;");
    asm("loc_4B78FB: push %edx;");
    asm("loc_4B78FC: mov %esi,%ecx;");
    asm("loc_4B78FE: movl $0x3E0D4FDF,0xD8(%esp);");
    asm("loc_4B7909: movl $0x3D0B4396,0xDC(%esp);");
    asm("loc_4B7914: movl $0,0xE0(%esp);");
    asm("loc_4B791F: movl $0x3F8C8B44,0xA4(%esp);");
    asm("loc_4B792A: movl $0,0xAC(%esp);");
    asm("loc_4B7935: call _sub_5A0D00;");
    asm("loc_4B793A: push %ebp;");
    asm("loc_4B793B: mov %eax,-0x80(%edi);");
    asm("loc_4B793E: lea 0xC4(%esp),%eax;");
    asm("loc_4B7945: push $_data_5D5894;");
    asm("loc_4B794A: push %eax;");
    asm("loc_4B794B: call *%ebx;");
    asm("loc_4B794D: flds _data_5D5890;");
    asm("loc_4B7953: mov 0x30(%esp),%ecx;");
    asm("loc_4B7957: fsubs 0x28(%esp);");
    asm("loc_4B795B: add $0xC,%esp;");
    asm("loc_4B795E: push $1;");
    asm("loc_4B7960: push $0;");
    asm("loc_4B7962: fstps 0x60(%esp);");
    asm("loc_4B7966: push $0;");
    asm("loc_4B7968: push %ecx;");
    asm("loc_4B7969: push $0x3FCCCCCD;");
    asm("loc_4B796E: push $0x3CF5C28F;");
    asm("loc_4B7973: push $0x3E872B02;");
    asm("loc_4B7978: movl $0x3F7851EC,0x70(%esp);");
    asm("loc_4B7980: movl $0,0x78(%esp);");
    asm("loc_4B7988: push $0;");
    asm("loc_4B798A: lea 0x74(%esp),%edx;");
    asm("loc_4B798E: push %edx;");
    asm("loc_4B798F: push $_data_5D010C;");
    asm("loc_4B7994: lea 0xE8(%esp),%eax;");
    asm("loc_4B799B: push %eax;");
    asm("loc_4B799C: mov %esi,%ecx;");
    asm("loc_4B799E: call _sub_5A0E30;");
    asm("loc_4B79A3: mov 0x24(%esp),%ecx;");
    asm("loc_4B79A7: push %ebp;");
    asm("loc_4B79A8: lea 0xC4(%esp),%edx;");
    asm("loc_4B79AF: push $_data_5D5878;");
    asm("loc_4B79B4: push %edx;");
    asm("loc_4B79B5: mov %eax,-0x5C(%edi);");
    asm("loc_4B79B8: mov %ecx,0x7C(%edi);");
    asm("loc_4B79BB: call *%ebx;");
    asm("loc_4B79BD: flds _data_5D5874;");
    asm("loc_4B79C3: mov 0x38(%edi),%eax;");
    asm("loc_4B79C6: fsubs 0x28(%esp);");
    asm("loc_4B79CA: mov _data_611F78(,%eax,4),%ecx;");
    asm("loc_4B79D1: add $0xC,%esp;");
    asm("loc_4B79D4: push $1;");
    asm("loc_4B79D6: fsts 0x44(%esp);");
    asm("loc_4B79DA: push $0;");
    asm("loc_4B79DC: fstps 0x34(%esp);");
    asm("loc_4B79E0: push $0;");
    asm("loc_4B79E2: push %ecx;");
    asm("loc_4B79E3: push $0x3FCCCCCD;");
    asm("loc_4B79E8: push $0x3CF5C28F;");
    asm("loc_4B79ED: push $0x3E19999A;");
    asm("loc_4B79F2: push $0;");
    asm("loc_4B79F4: lea 0x48(%esp),%edx;");
    asm("loc_4B79F8: push %edx;");
    asm("loc_4B79F9: push $_data_5D010C;");
    asm("loc_4B79FE: lea 0xE8(%esp),%eax;");
    asm("loc_4B7A05: push %eax;");
    asm("loc_4B7A06: mov %esi,%ecx;");
    asm("loc_4B7A08: movl $0x3F7851EC,0x54(%esp);");
    asm("loc_4B7A10: movl $0,0x5C(%esp);");
    asm("loc_4B7A18: call _sub_5A0E30;");
    asm("loc_4B7A1D: push %ebp;");
    asm("loc_4B7A1E: lea 0xC4(%esp),%ecx;");
    asm("loc_4B7A25: push $_data_5D585C;");
    asm("loc_4B7A2A: push %ecx;");
    asm("loc_4B7A2B: mov %eax,0x88(%edi);");
    asm("loc_4B7A31: call *%ebx;");
    asm("loc_4B7A33: mov 0x30(%esp),%eax;");
    asm("loc_4B7A37: mov 0x4C(%esp),%edx;");
    asm("loc_4B7A3B: add $0xC,%esp;");
    asm("loc_4B7A3E: push $1;");
    asm("loc_4B7A40: push $0;");
    asm("loc_4B7A42: push $2;");
    asm("loc_4B7A44: push %eax;");
    asm("loc_4B7A45: push $0x3FCCCCCD;");
    asm("loc_4B7A4A: push $0x3CF5C28F;");
    asm("loc_4B7A4F: push $0x3E1CAC08;");
    asm("loc_4B7A54: push $0;");
    asm("loc_4B7A56: lea 0x30(%esp),%ecx;");
    asm("loc_4B7A5A: push %ecx;");
    asm("loc_4B7A5B: mov %edx,0x38(%esp);");
    asm("loc_4B7A5F: push $_data_5D010C;");
    asm("loc_4B7A64: lea 0xE8(%esp),%edx;");
    asm("loc_4B7A6B: push %edx;");
    asm("loc_4B7A6C: mov %esi,%ecx;");
    asm("loc_4B7A6E: movl $0x3F89FBE7,0x3C(%esp);");
    asm("loc_4B7A76: movl $0,0x44(%esp);");
    asm("loc_4B7A7E: call _sub_5A0E30;");
    asm("loc_4B7A83: mov %eax,-0x50(%edi);");
    asm("loc_4B7A86: mov 0x20(%esp),%eax;");
    asm("loc_4B7A8A: push $0xFFFFFFFF;");
    asm("loc_4B7A8C: push %eax;");
    asm("loc_4B7A8D: lea 0x348(%esp),%ecx;");
    asm("loc_4B7A94: push %ecx;");
    asm("loc_4B7A95: call _sub_4779A0;");
    asm("loc_4B7A9A: mov -0x50(%edi),%ecx;");
    asm("loc_4B7A9D: mov (%ecx),%edx;");
    asm("loc_4B7A9F: add $0xC,%esp;");
    asm("loc_4B7AA2: push $0;");
    asm("loc_4B7AA4: lea 0x344(%esp),%eax;");
    asm("loc_4B7AAB: push %eax;");
    asm("loc_4B7AAC: push $0x1D;");
    asm("loc_4B7AAE: calll *0xA8(%edx);");
    asm("loc_4B7AB4: mov 0x20(%esp),%ecx;");
    asm("loc_4B7AB8: mov 0x64(%esp),%edx;");
    asm("loc_4B7ABC: mov %ecx,-0xC(%edi);");
    asm("loc_4B7ABF: mov (%edx),%eax;");
    asm("loc_4B7AC1: inc %ebp;");
    asm("loc_4B7AC2: mov %eax,0x64(%esp);");
    asm("loc_4B7AC6: mov 0x3CC(%esi),%eax;");
    asm("loc_4B7ACC: add $4,%edi;");
    asm("loc_4B7ACF: cmp %eax,%ebp;");
    asm("loc_4B7AD1: mov %ebp,0x6C(%esp);");
    asm("loc_4B7AD5: jl loc_4B7622;");
    asm("loc_4B7ADB: xor %ebx,%ebx;");
    asm("loc_4B7ADD: lea 0x24(%esp),%ecx;");
    asm("loc_4B7AE1: push %ecx;");
    asm("loc_4B7AE2: lea 0x24(%esp),%edx;");
    asm("loc_4B7AE6: push %edx;");
    asm("loc_4B7AE7: push %ebx;");
    asm("loc_4B7AE8: push %ebx;");
    asm("loc_4B7AE9: push %ebx;");
    asm("loc_4B7AEA: lea 0x24(%esp),%eax;");
    asm("loc_4B7AEE: push %eax;");
    asm("loc_4B7AEF: lea 0x40(%esp),%ecx;");
    asm("loc_4B7AF3: push %ecx;");
    asm("loc_4B7AF4: lea 0x70(%esp),%edx;");
    asm("loc_4B7AF8: push %edx;");
    asm("loc_4B7AF9: lea 0xA0(%esp),%eax;");
    asm("loc_4B7B00: push %eax;");
    asm("loc_4B7B01: push $_data_5D5848;");
    asm("loc_4B7B06: mov %esi,%ecx;");
    asm("loc_4B7B08: movb $0xFF,0x4C(%esp);");
    asm("loc_4B7B0D: movb $0xFF,0x4D(%esp);");
    asm("loc_4B7B12: movb $0xFF,0x4E(%esp);");
    asm("loc_4B7B17: movb $0xFF,0x4F(%esp);");
    asm("loc_4B7B1C: movb $0xC,0x48(%esp);");
    asm("loc_4B7B21: movb $0xDC,0x49(%esp);");
    asm("loc_4B7B26: movb $0xFF,0x4A(%esp);");
    asm("loc_4B7B2B: movb $0xFF,0x4B(%esp);");
    asm("loc_4B7B30: movl $0x3E3851EC,0x38(%esp);");
    asm("loc_4B7B38: movl $0xBE25E354,0x3C(%esp);");
    asm("loc_4B7B40: movl $0,0x40(%esp);");
    asm("loc_4B7B48: movl $0,0x50(%esp);");
    asm("loc_4B7B50: movl $0,0x54(%esp);");
    asm("loc_4B7B58: movl $0,0x58(%esp);");
    asm("loc_4B7B60: movl $0x3BA3D70A,0x7C(%esp);");
    asm("loc_4B7B68: movl $0x3D9FBE77,0x80(%esp);");
    asm("loc_4B7B73: movl $0xBFA4DD2F,0x84(%esp);");
    asm("loc_4B7B7E: movl $0,0xA8(%esp);");
    asm("loc_4B7B89: movl $0,0xAC(%esp);");
    asm("loc_4B7B94: movl $0,0xB0(%esp);");
    asm("loc_4B7B9F: call _sub_5A1020;");
    asm("loc_4B7BA4: push %ebx;");
    asm("loc_4B7BA5: push %ebx;");
    asm("loc_4B7BA6: push $1;");
    asm("loc_4B7BA8: push %ebx;");
    asm("loc_4B7BA9: push $0x3FCCCCCD;");
    asm("loc_4B7BAE: push $0x3CF5C28F;");
    asm("loc_4B7BB3: push $0x3EBBE76D;");
    asm("loc_4B7BB8: push %ebx;");
    asm("loc_4B7BB9: lea 0x30(%esp),%ecx;");
    asm("loc_4B7BBD: push %ecx;");
    asm("loc_4B7BBE: push $_data_5CE91C;");
    asm("loc_4B7BC3: push $_data_5D5834;");
    asm("loc_4B7BC8: mov %esi,%ecx;");
    asm("loc_4B7BCA: mov %eax,0x370(%esi);");
    asm("loc_4B7BD0: movl $0x3F25A1CB,0x3C(%esp);");
    asm("loc_4B7BD8: movl $0xBCFDF3B6,0x40(%esp);");
    asm("loc_4B7BE0: movl $0,0x44(%esp);");
    asm("loc_4B7BE8: call _sub_5A0E30;");
    asm("loc_4B7BED: push %ebx;");
    asm("loc_4B7BEE: push %ebx;");
    asm("loc_4B7BEF: push $1;");
    asm("loc_4B7BF1: push %ebx;");
    asm("loc_4B7BF2: push $0x3FCCCCCD;");
    asm("loc_4B7BF7: push $0x3CF5C28F;");
    asm("loc_4B7BFC: push $0x3EBBE76D;");
    asm("loc_4B7C01: push %ebx;");
    asm("loc_4B7C02: lea 0x30(%esp),%edx;");
    asm("loc_4B7C06: push %edx;");
    asm("loc_4B7C07: push $_data_5D01A8;");
    asm("loc_4B7C0C: push $_data_5D5820;");
    asm("loc_4B7C11: mov %esi,%ecx;");
    asm("loc_4B7C13: mov %eax,0x384(%esi);");
    asm("loc_4B7C19: movl $0x3F25A1CB,0x3C(%esp);");
    asm("loc_4B7C21: movl $0xBD8F5C29,0x40(%esp);");
    asm("loc_4B7C29: movl $0,0x44(%esp);");
    asm("loc_4B7C31: call _sub_5A0E30;");
    asm("loc_4B7C36: mov %eax,0x388(%esi);");
    asm("loc_4B7C3C: movl $0x3E19999A,0x10(%esp);");
    asm("loc_4B7C44: movl $0x3CD4FDF4,0x14(%esp);");
    asm("loc_4B7C4C: movl $0,0x18(%esp);");
    asm("loc_4B7C54: movl $0x3F245A1D,0x28(%esp);");
    asm("loc_4B7C5C: movl $0xBEF1A9FC,0x2C(%esp);");
    asm("loc_4B7C64: movl $0,0x30(%esp);");
    asm("loc_4B7C6C: push %ebx;");
    asm("loc_4B7C6D: push %ebx;");
    asm("loc_4B7C6E: push $0x325;");
    asm("loc_4B7C73: push %ebx;");
    asm("loc_4B7C74: push %ebx;");
    asm("loc_4B7C75: lea 0x24(%esp),%eax;");
    asm("loc_4B7C79: push %eax;");
    asm("loc_4B7C7A: lea 0x40(%esp),%ecx;");
    asm("loc_4B7C7E: push %ecx;");
    asm("loc_4B7C7F: push $_data_5CED30;");
    asm("loc_4B7C84: push $_data_5D580C;");
    asm("loc_4B7C89: mov %esi,%ecx;");
    asm("loc_4B7C8B: call _sub_5A0D00;");
    asm("loc_4B7C90: push %ebx;");
    asm("loc_4B7C91: push %ebx;");
    asm("loc_4B7C92: push $1;");
    asm("loc_4B7C94: push $0x39A;");
    asm("loc_4B7C99: push $0x3FCCCCCD;");
    asm("loc_4B7C9E: push $0x3CF5C28F;");
    asm("loc_4B7CA3: push $0x3E4AC083;");
    asm("loc_4B7CA8: push %ebx;");
    asm("loc_4B7CA9: lea 0x30(%esp),%edx;");
    asm("loc_4B7CAD: push %edx;");
    asm("loc_4B7CAE: push $_data_5D0410;");
    asm("loc_4B7CB3: push $_data_5D57F8;");
    asm("loc_4B7CB8: mov %esi,%ecx;");
    asm("loc_4B7CBA: mov %eax,0x380(%esi);");
    asm("loc_4B7CC0: movl $0x3F23D70A,0x3C(%esp);");
    asm("loc_4B7CC8: movl $0xBEEE147B,0x40(%esp);");
    asm("loc_4B7CD0: movl $0,0x44(%esp);");
    asm("loc_4B7CD8: call _sub_5A0E30;");
    asm("loc_4B7CDD: push $1;");
    asm("loc_4B7CDF: mov %eax,0x38C(%esi);");
    asm("loc_4B7CE5: lea 0x14(%esp),%eax;");
    asm("loc_4B7CE9: push %eax;");
    asm("loc_4B7CEA: push $0x3E4CCCCD;");
    asm("loc_4B7CEF: push $0x3ECCCCCD;");
    asm("loc_4B7CF4: push $_data_5D57E4;");
    asm("loc_4B7CF9: mov %esi,%ecx;");
    asm("loc_4B7CFB: movl $0xBED70A3D,0x24(%esp);");
    asm("loc_4B7D03: movl $0xBE27EF9E,0x28(%esp);");
    asm("loc_4B7D0B: movl $0xBF800000,0x2C(%esp);");
    asm("loc_4B7D13: call _sub_5A10E0;");
    asm("loc_4B7D18: push $1;");
    asm("loc_4B7D1A: lea 0x14(%esp),%ecx;");
    asm("loc_4B7D1E: push %ecx;");
    asm("loc_4B7D1F: push $0x3E4CCCCD;");
    asm("loc_4B7D24: push $0x3E75C28F;");
    asm("loc_4B7D29: push $_data_5D57D0;");
    asm("loc_4B7D2E: mov %esi,%ecx;");
    asm("loc_4B7D30: mov %eax,0x374(%esi);");
    asm("loc_4B7D36: movl $0x3C23D70A,0x24(%esp);");
    asm("loc_4B7D3E: movl $0xBE27EF9E,0x28(%esp);");
    asm("loc_4B7D46: movl $0xBF800000,0x2C(%esp);");
    asm("loc_4B7D4E: call _sub_5A10E0;");
    asm("loc_4B7D53: push $1;");
    asm("loc_4B7D55: lea 0x14(%esp),%edx;");
    asm("loc_4B7D59: push %edx;");
    asm("loc_4B7D5A: push $0x3E4CCCCD;");
    asm("loc_4B7D5F: push $0x3E0F5C29;");
    asm("loc_4B7D64: push $_data_5D57BC;");
    asm("loc_4B7D69: mov %esi,%ecx;");
    asm("loc_4B7D6B: mov %eax,0x378(%esi);");
    asm("loc_4B7D71: movl $0x3E8A3D71,0x24(%esp);");
    asm("loc_4B7D79: movl $0xBE27EF9E,0x28(%esp);");
    asm("loc_4B7D81: movl $0xBF800000,0x2C(%esp);");
    asm("loc_4B7D89: call _sub_5A10E0;");
    asm("loc_4B7D8E: push %ebx;");
    asm("loc_4B7D8F: push %ebx;");
    asm("loc_4B7D90: push $1;");
    asm("loc_4B7D92: push %ebx;");
    asm("loc_4B7D93: push $0x3FCCCCCD;");
    asm("loc_4B7D98: push $0x3CF5C28F;");
    asm("loc_4B7D9D: push $0x3ED374BC;");
    asm("loc_4B7DA2: mov %eax,0x37C(%esi);");
    asm("loc_4B7DA8: push %ebx;");
    asm("loc_4B7DA9: lea 0x30(%esp),%eax;");
    asm("loc_4B7DAD: movl $0x3E6B851F,0x30(%esp);");
    asm("loc_4B7DB5: movl $0xBE0C49BA,0x34(%esp);");
    asm("loc_4B7DBD: movl $0,0x38(%esp);");
    asm("loc_4B7DC5: push %eax;");
    asm("loc_4B7DC6: push $_data_5D0608;");
    asm("loc_4B7DCB: push $_data_5D1558;");
    asm("loc_4B7DD0: mov %esi,%ecx;");
    asm("loc_4B7DD2: call _sub_5A0E30;");
    asm("loc_4B7DD7: push $0x476;");
    asm("loc_4B7DDC: mov %eax,0x390(%esi);");
    asm("loc_4B7DE2: call _sub_4C4CE0;");
    asm("loc_4B7DE7: push %eax;");
    asm("loc_4B7DE8: lea 0x548(%esp),%ecx;");
    asm("loc_4B7DEF: push %ecx;");
    asm("loc_4B7DF0: call _sub_4779A0;");
    asm("loc_4B7DF5: mov 0x390(%esi),%ecx;");
    asm("loc_4B7DFB: mov (%ecx),%edx;");
    asm("loc_4B7DFD: add $0xC,%esp;");
    asm("loc_4B7E00: push %ebx;");
    asm("loc_4B7E01: lea 0x544(%esp),%eax;");
    asm("loc_4B7E08: push %eax;");
    asm("loc_4B7E09: push $0x1D;");
    asm("loc_4B7E0B: calll *0xA8(%edx);");
    asm("loc_4B7E11: push %ebx;");
    asm("loc_4B7E12: push %ebx;");
    asm("loc_4B7E13: push $1;");
    asm("loc_4B7E15: push $0x460;");
    asm("loc_4B7E1A: push $0x3FCCCCCD;");
    asm("loc_4B7E1F: push $0x3CF5C28F;");
    asm("loc_4B7E24: push $0x3ED81062;");
    asm("loc_4B7E29: push %ebx;");
    asm("loc_4B7E2A: lea 0x30(%esp),%ecx;");
    asm("loc_4B7E2E: push %ecx;");
    asm("loc_4B7E2F: push $_data_5CE91C;");
    asm("loc_4B7E34: push $_data_5D57AC;");
    asm("loc_4B7E39: mov %esi,%ecx;");
    asm("loc_4B7E3B: movl $0x3F88F5C3,0x3C(%esp);");
    asm("loc_4B7E43: movl $0xBDAE147B,0x40(%esp);");
    asm("loc_4B7E4B: movl $0,0x44(%esp);");
    asm("loc_4B7E53: call _sub_5A0E30;");
    asm("loc_4B7E58: mov %ebx,0x3D8(%esi);");
    asm("loc_4B7E5E: mov %ebx,0x3DC(%esi);");
    asm("loc_4B7E64: call _sub_4C3E10;");
    asm("loc_4B7E69: mov %eax,%edi;");
    asm("loc_4B7E6B: cmp %ebx,%edi;");
    asm("loc_4B7E6D: je loc_4B8153;");
    asm("loc_4B7E73: push %ebx;");
    asm("loc_4B7E74: push %ebx;");
    asm("loc_4B7E75: push $1;");
    asm("loc_4B7E77: push $0x62E;");
    asm("loc_4B7E7C: push $0x3FCCCCCD;");
    asm("loc_4B7E81: push $0x3CF5C28F;");
    asm("loc_4B7E86: push $0x3ED1EB85;");
    asm("loc_4B7E8B: push %ebx;");
    asm("loc_4B7E8C: lea 0x30(%esp),%edx;");
    asm("loc_4B7E90: push %edx;");
    asm("loc_4B7E91: push $_data_5CE91C;");
    asm("loc_4B7E96: push $_data_5D5790;");
    asm("loc_4B7E9B: mov %esi,%ecx;");
    asm("loc_4B7E9D: movl $0x3E70A3D7,0x3C(%esp);");
    asm("loc_4B7EA5: movl $0xBDAE147B,0x40(%esp);");
    asm("loc_4B7EAD: movl $0,0x44(%esp);");
    asm("loc_4B7EB5: call _sub_5A0E30;");
    asm("loc_4B7EBA: push %edi;");
    asm("loc_4B7EBB: calll *_import_5C61FC;");
    asm("loc_4B7EC1: mov %eax,%ebp;");
    asm("loc_4B7EC3: add $4,%esp;");
    asm("loc_4B7EC6: cmp %ebx,%ebp;");
    asm("loc_4B7EC8: je loc_4B8153;");
    asm("loc_4B7ECE: calll *_import_5C6158;");
    asm("loc_4B7ED4: cmp %ebx,%eax;");
    asm("loc_4B7ED6: je loc_4B7F7A;");
    asm("loc_4B7EDC: push %edi;");
    asm("loc_4B7EDD: mov %eax,%ecx;");
    asm("loc_4B7EDF: calll *_import_5C6418;");
    asm("loc_4B7EE5: cmp %ebx,%eax;");
    asm("loc_4B7EE7: je loc_4B7F7A;");
    asm("loc_4B7EED: mov 0x78(%eax),%eax;");
    asm("loc_4B7EF0: lea 0x10(%esp),%ecx;");
    asm("loc_4B7EF4: push %ecx;");
    asm("loc_4B7EF5: push %ebx;");
    asm("loc_4B7EF6: push %ebx;");
    asm("loc_4B7EF7: push $0x50;");
    asm("loc_4B7EF9: push $1;");
    asm("loc_4B7EFB: push $1;");
    asm("loc_4B7EFD: push $1;");
    asm("loc_4B7EFF: push $1;");
    asm("loc_4B7F01: push %ebx;");
    asm("loc_4B7F02: push %ebx;");
    asm("loc_4B7F03: push %ebx;");
    asm("loc_4B7F04: lea 0x54(%esp),%edx;");
    asm("loc_4B7F08: push %edx;");
    asm("loc_4B7F09: push %ebx;");
    asm("loc_4B7F0A: lea 0x88(%esp),%ecx;");
    asm("loc_4B7F11: push %ecx;");
    asm("loc_4B7F12: push %eax;");
    asm("loc_4B7F13: push $_data_5D5774;");
    asm("loc_4B7F18: mov %esi,%ecx;");
    asm("loc_4B7F1A: movl $0,0x50(%esp);");
    asm("loc_4B7F22: movl $0,0x54(%esp);");
    asm("loc_4B7F2A: movl $0,0x58(%esp);");
    asm("loc_4B7F32: movl $0x3D0F5C29,0x68(%esp);");
    asm("loc_4B7F3A: movl $0x3D27EF9E,0x6C(%esp);");
    asm("loc_4B7F42: movl $0,0x70(%esp);");
    asm("loc_4B7F4A: movl $0xBF0E978D,0x94(%esp);");
    asm("loc_4B7F55: movl $0x3E051EB8,0x98(%esp);");
    asm("loc_4B7F60: movl $0xBFA4DD2F,0x9C(%esp);");
    asm("loc_4B7F6B: call _sub_5A0DB0;");
    asm("loc_4B7F70: mov %eax,0x3E0(%esi);");
    asm("loc_4B7F76: andb $0xF7,0x6C(%eax);");
    asm("loc_4B7F7A: push %ebx;");
    asm("loc_4B7F7B: push %ebx;");
    asm("loc_4B7F7C: push %ebx;");
    asm("loc_4B7F7D: push %ebx;");
    asm("loc_4B7F7E: push %ebx;");
    asm("loc_4B7F7F: lea 0x24(%esp),%edx;");
    asm("loc_4B7F83: push %edx;");
    asm("loc_4B7F84: lea 0x40(%esp),%eax;");
    asm("loc_4B7F88: push %eax;");
    asm("loc_4B7F89: push $_data_5D1528;");
    asm("loc_4B7F8E: push $_data_5D575C;");
    asm("loc_4B7F93: mov %esi,%ecx;");
    asm("loc_4B7F95: movl $0x3D0F5C29,0x34(%esp);");
    asm("loc_4B7F9D: movl $0x3D09374C,0x38(%esp);");
    asm("loc_4B7FA5: movl $0,0x3C(%esp);");
    asm("loc_4B7FAD: movl $0x3DA7EF9E,0x4C(%esp);");
    asm("loc_4B7FB5: movl $0xBE4CCCCD,0x50(%esp);");
    asm("loc_4B7FBD: movl $0,0x54(%esp);");
    asm("loc_4B7FC5: call _sub_5A0D00;");
    asm("loc_4B7FCA: push %ebx;");
    asm("loc_4B7FCB: push %ebx;");
    asm("loc_4B7FCC: push %ebx;");
    asm("loc_4B7FCD: push %ebx;");
    asm("loc_4B7FCE: push %ebx;");
    asm("loc_4B7FCF: lea 0x24(%esp),%ecx;");
    asm("loc_4B7FD3: push %ecx;");
    asm("loc_4B7FD4: lea 0x40(%esp),%edx;");
    asm("loc_4B7FD8: push %edx;");
    asm("loc_4B7FD9: push $_data_5D1528;");
    asm("loc_4B7FDE: push $_data_5D5740;");
    asm("loc_4B7FE3: mov %esi,%ecx;");
    asm("loc_4B7FE5: mov %eax,0x3D8(%esi);");
    asm("loc_4B7FEB: movl $0x3E0D4FDF,0x34(%esp);");
    asm("loc_4B7FF3: movl $0x3D0B4396,0x38(%esp);");
    asm("loc_4B7FFB: movl $0,0x3C(%esp);");
    asm("loc_4B8003: movl $0x3E872B02,0x4C(%esp);");
    asm("loc_4B800B: movl $0xBE4CCCCD,0x50(%esp);");
    asm("loc_4B8013: movl $0,0x54(%esp);");
    asm("loc_4B801B: call _sub_5A0D00;");
    asm("loc_4B8020: push $1;");
    asm("loc_4B8022: push %ebx;");
    asm("loc_4B8023: push %ebx;");
    asm("loc_4B8024: mov %eax,0x3DC(%esi);");
    asm("loc_4B802A: mov 0x14(%ebp),%eax;");
    asm("loc_4B802D: push %eax;");
    asm("loc_4B802E: push $0x3FCCCCCD;");
    asm("loc_4B8033: push $0x3CF5C28F;");
    asm("loc_4B8038: push $0x3E851EB8;");
    asm("loc_4B803D: push %ebx;");
    asm("loc_4B803E: lea 0x30(%esp),%ecx;");
    asm("loc_4B8042: push %ecx;");
    asm("loc_4B8043: push $_data_5D010C;");
    asm("loc_4B8048: push $_data_5D5724;");
    asm("loc_4B804D: mov %esi,%ecx;");
    asm("loc_4B804F: movl $0x3E0A3D71,0x3C(%esp);");
    asm("loc_4B8057: movl $0xBE2B020C,0x40(%esp);");
    asm("loc_4B805F: movl $0,0x44(%esp);");
    asm("loc_4B8067: call _sub_5A0E30;");
    asm("loc_4B806C: mov 0xF8(%ebp),%eax;");
    asm("loc_4B8072: cmp %ebx,%eax;");
    asm("loc_4B8074: mov %eax,0x3E8(%esi);");
    asm("loc_4B807A: jl loc_4B8081;");
    asm("loc_4B807C: cmp $4,%eax;");
    asm("loc_4B807F: jl loc_4B8087;");
    asm("loc_4B8081: mov %ebx,0x3E8(%esi);");
    asm("loc_4B8087: mov 0x3E8(%esi),%edx;");
    asm("loc_4B808D: mov _data_611F78(,%edx,4),%eax;");
    asm("loc_4B8094: push $1;");
    asm("loc_4B8096: push %ebx;");
    asm("loc_4B8097: push %ebx;");
    asm("loc_4B8098: push %eax;");
    asm("loc_4B8099: push $0x3FCCCCCD;");
    asm("loc_4B809E: push $0x3CF5C28F;");
    asm("loc_4B80A3: push $0x3E158106;");
    asm("loc_4B80A8: push %ebx;");
    asm("loc_4B80A9: lea 0x30(%esp),%ecx;");
    asm("loc_4B80AD: push %ecx;");
    asm("loc_4B80AE: push $_data_5D010C;");
    asm("loc_4B80B3: push $_data_5D5708;");
    asm("loc_4B80B8: mov %esi,%ecx;");
    asm("loc_4B80BA: movl $0x3E0A3D71,0x3C(%esp);");
    asm("loc_4B80C2: movl $0xBE4AC083,0x40(%esp);");
    asm("loc_4B80CA: movl $0,0x44(%esp);");
    asm("loc_4B80D2: call _sub_5A0E30;");
    asm("loc_4B80D7: push $1;");
    asm("loc_4B80D9: push %edi;");
    asm("loc_4B80DA: call _sub_4C6E90;");
    asm("loc_4B80DF: add $8,%esp;");
    asm("loc_4B80E2: push $1;");
    asm("loc_4B80E4: push %ebx;");
    asm("loc_4B80E5: push $2;");
    asm("loc_4B80E7: push $1;");
    asm("loc_4B80E9: push $0x3FCCCCCD;");
    asm("loc_4B80EE: push $0x3CF5C28F;");
    asm("loc_4B80F3: push $0x3E0F5C29;");
    asm("loc_4B80F8: push %ebx;");
    asm("loc_4B80F9: lea 0x30(%esp),%edx;");
    asm("loc_4B80FD: push %edx;");
    asm("loc_4B80FE: push $_data_5D010C;");
    asm("loc_4B8103: push $_data_5D56EC;");
    asm("loc_4B8108: mov %esi,%ecx;");
    asm("loc_4B810A: mov %eax,%ebp;");
    asm("loc_4B810C: movl $0x3E841893,0x3C(%esp);");
    asm("loc_4B8114: movl $0xBE4AC083,0x40(%esp);");
    asm("loc_4B811C: movl $0,0x44(%esp);");
    asm("loc_4B8124: call _sub_5A0E30;");
    asm("loc_4B8129: push $0xFFFFFFFF;");
    asm("loc_4B812B: mov %eax,%edi;");
    asm("loc_4B812D: lea 0x344(%esp),%eax;");
    asm("loc_4B8134: push %ebp;");
    asm("loc_4B8135: push %eax;");
    asm("loc_4B8136: call _sub_4779A0;");
    asm("loc_4B813B: mov (%edi),%edx;");
    asm("loc_4B813D: add $0xC,%esp;");
    asm("loc_4B8140: push %ebx;");
    asm("loc_4B8141: lea 0x344(%esp),%eax;");
    asm("loc_4B8148: push %eax;");
    asm("loc_4B8149: push $0x1D;");
    asm("loc_4B814B: mov %edi,%ecx;");
    asm("loc_4B814D: calll *0xA8(%edx);");
    asm("loc_4B8153: mov 0x370(%esi),%ecx;");
    asm("loc_4B8159: mov (%ecx),%edx;");
    asm("loc_4B815B: push %ebx;");
    asm("loc_4B815C: push $1;");
    asm("loc_4B815E: push $1;");
    asm("loc_4B8160: calll *0xA8(%edx);");
    asm("loc_4B8166: mov 0x380(%esi),%ecx;");
    asm("loc_4B816C: mov (%ecx),%eax;");
    asm("loc_4B816E: push %ebx;");
    asm("loc_4B816F: push $1;");
    asm("loc_4B8171: push $1;");
    asm("loc_4B8173: calll *0xA8(%eax);");
    asm("loc_4B8179: mov 0x38C(%esi),%ecx;");
    asm("loc_4B817F: mov (%ecx),%edx;");
    asm("loc_4B8181: push %ebx;");
    asm("loc_4B8182: push $1;");
    asm("loc_4B8184: push $1;");
    asm("loc_4B8186: calll *0xA8(%edx);");
    asm("loc_4B818C: mov 0x384(%esi),%ecx;");
    asm("loc_4B8192: mov (%ecx),%eax;");
    asm("loc_4B8194: push %ebx;");
    asm("loc_4B8195: push $1;");
    asm("loc_4B8197: push $1;");
    asm("loc_4B8199: calll *0xA8(%eax);");
    asm("loc_4B819F: mov 0x388(%esi),%ecx;");
    asm("loc_4B81A5: mov (%ecx),%edx;");
    asm("loc_4B81A7: push %ebx;");
    asm("loc_4B81A8: push $1;");
    asm("loc_4B81AA: push $1;");
    asm("loc_4B81AC: calll *0xA8(%edx);");
    asm("loc_4B81B2: mov 0x370(%esi),%ecx;");
    asm("loc_4B81B8: push $1;");
    asm("loc_4B81BA: call _sub_53E4A0;");
    asm("loc_4B81BF: push %ebx;");
    asm("loc_4B81C0: push %ebx;");
    asm("loc_4B81C1: push $1;");
    asm("loc_4B81C3: push %ebx;");
    asm("loc_4B81C4: push $0x3FCCCCCD;");
    asm("loc_4B81C9: push $0x3D75C28F;");
    asm("loc_4B81CE: push $0x3EBD70A4;");
    asm("loc_4B81D3: push %ebx;");
    asm("loc_4B81D4: lea 0x30(%esp),%eax;");
    asm("loc_4B81D8: push %eax;");
    asm("loc_4B81D9: push $_data_5D01A8;");
    asm("loc_4B81DE: push $_data_5D1CB0;");
    asm("loc_4B81E3: mov %esi,%ecx;");
    asm("loc_4B81E5: movl $0x3F251EB8,0x3C(%esp);");
    asm("loc_4B81ED: movl $0xBD79DB23,0x40(%esp);");
    asm("loc_4B81F5: movl $0,0x44(%esp);");
    asm("loc_4B81FD: call _sub_5A0E30;");
    asm("loc_4B8202: mov %eax,0x394(%esi);");
    asm("loc_4B8208: mov 0x334(%eax),%eax;");
    asm("loc_4B820E: cmpb $1,0x30(%eax);");
    asm("loc_4B8212: je loc_4B821B;");
    asm("loc_4B8214: movb $1,0x30(%eax);");
    asm("loc_4B8218: mov %ebx,0x28(%eax);");
    asm("loc_4B821B: lea 0x10(%esp),%ecx;");
    asm("loc_4B821F: push %ecx;");
    asm("loc_4B8220: push %ebx;");
    asm("loc_4B8221: push %ebx;");
    asm("loc_4B8222: push %ebx;");
    asm("loc_4B8223: push $1;");
    asm("loc_4B8225: push %ebx;");
    asm("loc_4B8226: push %ebx;");
    asm("loc_4B8227: push $1;");
    asm("loc_4B8229: push %ebx;");
    asm("loc_4B822A: push %ebx;");
    asm("loc_4B822B: push %ebx;");
    asm("loc_4B822C: lea 0x54(%esp),%edx;");
    asm("loc_4B8230: push %edx;");
    asm("loc_4B8231: push %ebx;");
    asm("loc_4B8232: lea 0x88(%esp),%eax;");
    asm("loc_4B8239: push %eax;");
    asm("loc_4B823A: push $_data_5D1C78;");
    asm("loc_4B823F: push $_data_5D1C6C;");
    asm("loc_4B8244: mov %esi,%ecx;");
    asm("loc_4B8246: movl $0,0x50(%esp);");
    asm("loc_4B824E: movl $0,0x54(%esp);");
    asm("loc_4B8256: movl $0,0x58(%esp);");
    asm("loc_4B825E: movl $0,0x68(%esp);");
    asm("loc_4B8266: movl $0,0x6C(%esp);");
    asm("loc_4B826E: movl $0,0x70(%esp);");
    asm("loc_4B8276: movl $0,0x94(%esp);");
    asm("loc_4B8281: movl $0x3E22D0E5,0x98(%esp);");
    asm("loc_4B828C: movl $0xBFA4DD2F,0x9C(%esp);");
    asm("loc_4B8297: call _sub_5A0DB0;");
    asm("loc_4B829C: push %ebx;");
    asm("loc_4B829D: push %ebx;");
    asm("loc_4B829E: push %ebx;");
    asm("loc_4B829F: push $0x485;");
    asm("loc_4B82A4: push $0x3FB33333;");
    asm("loc_4B82A9: push $0x3D75C28F;");
    asm("loc_4B82AE: push $0x3EB33333;");
    asm("loc_4B82B3: push %ebx;");
    asm("loc_4B82B4: lea 0x30(%esp),%ecx;");
    asm("loc_4B82B8: push %ecx;");
    asm("loc_4B82B9: push $_data_5D0608;");
    asm("loc_4B82BE: push $_data_5D1C60;");
    asm("loc_4B82C3: mov %esi,%ecx;");
    asm("loc_4B82C5: mov %eax,0x398(%esi);");
    asm("loc_4B82CB: movl $0x3F283127,0x3C(%esp);");
    asm("loc_4B82D3: movl $0xBE5E353F,0x40(%esp);");
    asm("loc_4B82DB: movl $0,0x44(%esp);");
    asm("loc_4B82E3: call _sub_5A0E30;");
    asm("loc_4B82E8: mov %eax,0x39C(%esi);");
    asm("loc_4B82EE: mov 0x334(%eax),%eax;");
    asm("loc_4B82F4: cmpb $1,0x30(%eax);");
    asm("loc_4B82F8: je loc_4B8301;");
    asm("loc_4B82FA: movb $1,0x30(%eax);");
    asm("loc_4B82FE: mov %ebx,0x28(%eax);");
    asm("loc_4B8301: mov $_data_668708,%ecx;");
    asm("loc_4B8306: call _sub_43BBE0;");
    asm("loc_4B830B: mov %eax,%edi;");
    asm("loc_4B830D: cmp %ebx,%edi;");
    asm("loc_4B830F: je loc_4B83CF;");
    asm("loc_4B8315: mov _data_67ECA8,%eax;");
    asm("loc_4B831A: push $0x40;");
    asm("loc_4B831C: lea 0x244(%esp),%edx;");
    asm("loc_4B8323: push %edx;");
    asm("loc_4B8324: push $0x48D;");
    asm("loc_4B8329: push %eax;");
    asm("loc_4B832A: call _sub_4347E0;");
    asm("loc_4B832F: add $0x10,%esp;");
    asm("loc_4B8332: test %eax,%eax;");
    asm("loc_4B8334: jne loc_4B833E;");
    asm("loc_4B8336: mov %bx,0x240(%esp);");
    asm("loc_4B833E: mov _data_67ECA8,%edx;");
    asm("loc_4B8344: push $0x40;");
    asm("loc_4B8346: lea 0x1C4(%esp),%ecx;");
    asm("loc_4B834D: push %ecx;");
    asm("loc_4B834E: push %edi;");
    asm("loc_4B834F: push %edx;");
    asm("loc_4B8350: call _sub_4347E0;");
    asm("loc_4B8355: add $0x10,%esp;");
    asm("loc_4B8358: test %eax,%eax;");
    asm("loc_4B835A: jne loc_4B8364;");
    asm("loc_4B835C: mov %bx,0x1C0(%esp);");
    asm("loc_4B8364: mov _data_67ECA8,%ecx;");
    asm("loc_4B836A: push $0x3F;");
    asm("loc_4B836C: lea 0x2C4(%esp),%eax;");
    asm("loc_4B8373: push %eax;");
    asm("loc_4B8374: push $0x477;");
    asm("loc_4B8379: push %ecx;");
    asm("loc_4B837A: call _sub_4347E0;");
    asm("loc_4B837F: lea 0x250(%esp),%edx;");
    asm("loc_4B8386: push %edx;");
    asm("loc_4B8387: lea 0x1D4(%esp),%eax;");
    asm("loc_4B838E: push %eax;");
    asm("loc_4B838F: lea 0x2D8(%esp),%ecx;");
    asm("loc_4B8396: push %ecx;");
    asm("loc_4B8397: lea 0x35C(%esp),%edx;");
    asm("loc_4B839E: push %edx;");
    asm("loc_4B839F: calll *_import_5C70EC;");
    asm("loc_4B83A5: add $0x20,%esp;");
    asm("loc_4B83A8: lea 0x340(%esp),%eax;");
    asm("loc_4B83AF: push %eax;");
    asm("loc_4B83B0: calll *_off_616420;");
    asm("loc_4B83B6: mov 0x394(%esi),%ecx;");
    asm("loc_4B83BC: mov (%ecx),%edx;");
    asm("loc_4B83BE: push %ebx;");
    asm("loc_4B83BF: lea 0x344(%esp),%eax;");
    asm("loc_4B83C6: push %eax;");
    asm("loc_4B83C7: push $0x1D;");
    asm("loc_4B83C9: calll *0xA8(%edx);");
    asm("loc_4B83CF: push %ebx;");
    asm("loc_4B83D0: push %ebx;");
    asm("loc_4B83D1: push %ebx;");
    asm("loc_4B83D2: push $0x49A;");
    asm("loc_4B83D7: push $0x3FB33333;");
    asm("loc_4B83DC: push $0x3D75C28F;");
    asm("loc_4B83E1: push $0x3EBD70A4;");
    asm("loc_4B83E6: push %ebx;");
    asm("loc_4B83E7: lea 0x30(%esp),%ecx;");
    asm("loc_4B83EB: push %ecx;");
    asm("loc_4B83EC: push $_data_5D0608;");
    asm("loc_4B83F1: push $_data_5D1A88;");
    asm("loc_4B83F6: mov %esi,%ecx;");
    asm("loc_4B83F8: movl $0x3F283127,0x3C(%esp);");
    asm("loc_4B8400: movl $0xBEE04189,0x40(%esp);");
    asm("loc_4B8408: movl $0,0x44(%esp);");
    asm("loc_4B8410: call _sub_5A0E30;");
    asm("loc_4B8415: push %ebx;");
    asm("loc_4B8416: push $1;");
    asm("loc_4B8418: mov %eax,0x3A0(%esi);");
    asm("loc_4B841E: mov (%eax),%edx;");
    asm("loc_4B8420: push $1;");
    asm("loc_4B8422: mov %eax,%ecx;");
    asm("loc_4B8424: calll *0xA8(%edx);");
    asm("loc_4B842A: mov 0x3A0(%esi),%eax;");
    asm("loc_4B8430: mov 0x334(%eax),%eax;");
    asm("loc_4B8436: cmpb $1,0x30(%eax);");
    asm("loc_4B843A: je loc_4B8443;");
    asm("loc_4B843C: movb $1,0x30(%eax);");
    asm("loc_4B8440: mov %ebx,0x28(%eax);");
    asm("loc_4B8443: mov 0x3A0(%esi),%ecx;");
    asm("loc_4B8449: push $1;");
    asm("loc_4B844B: lea 0x64(%esp),%eax;");
    asm("loc_4B844F: push %eax;");
    asm("loc_4B8450: movb $0xFF,0x68(%esp);");
    asm("loc_4B8455: movb $0xFF,0x69(%esp);");
    asm("loc_4B845A: movb $0xFF,0x6A(%esp);");
    asm("loc_4B845F: movb $0xFF,0x6B(%esp);");
    asm("loc_4B8464: mov (%ecx),%edx;");
    asm("loc_4B8466: push $0x33;");
    asm("loc_4B8468: calll *0xA8(%edx);");
    asm("loc_4B846E: call _sub_4C4CE0;");
    asm("loc_4B8473: push %ebx;");
    asm("loc_4B8474: push %ebx;");
    asm("loc_4B8475: mov %eax,0x3A4(%esi);");
    asm("loc_4B847B: call _sub_4C4060;");
    asm("loc_4B8480: push %eax;");
    asm("loc_4B8481: call _sub_4C6F70;");
    asm("loc_4B8486: mov 0x3A4(%esi),%ecx;");
    asm("loc_4B848C: add $0xC,%esp;");
    asm("loc_4B848F: add %eax,%ecx;");
    asm("loc_4B8491: push $1;");
    asm("loc_4B8493: mov %ecx,0x3A4(%esi);");
    asm("loc_4B8499: call _sub_4C3E10;");
    asm("loc_4B849E: push %eax;");
    asm("loc_4B849F: call _sub_4C6E90;");
    asm("loc_4B84A4: mov 0x3A4(%esi),%ecx;");
    asm("loc_4B84AA: mov (%esi),%edx;");
    asm("loc_4B84AC: add %eax,%ecx;");
    asm("loc_4B84AE: push %ecx;");
    asm("loc_4B84AF: mov %ecx,0x3A4(%esi);");
    asm("loc_4B84B5: movl $0xBF23D70A,0x40(%esp);");
    asm("loc_4B84BD: mov 0x40(%esp),%ecx;");
    asm("loc_4B84C1: mov %esp,%eax;");
    asm("loc_4B84C3: mov %ecx,(%eax);");
    asm("loc_4B84C5: movl $0x3EA8F5C3,0x44(%esp);");
    asm("loc_4B84CD: mov 0x44(%esp),%ecx;");
    asm("loc_4B84D1: mov %ecx,4(%eax);");
    asm("loc_4B84D4: movl $0xBFA4DD2F,0x48(%esp);");
    asm("loc_4B84DC: mov 0x48(%esp),%ecx;");
    asm("loc_4B84E0: mov %ecx,8(%eax);");
    asm("loc_4B84E3: mov %esi,%ecx;");
    asm("loc_4B84E5: movl $0x64,0x70(%esi);");
    asm("loc_4B84EC: calll *0x7C(%edx);");
    asm("loc_4B84EF: mov (%esi),%edx;");
    asm("loc_4B84F1: lea 0x60(%esi),%eax;");
    asm("loc_4B84F4: push %eax;");
    asm("loc_4B84F5: mov %esi,%ecx;");
    asm("loc_4B84F7: calll *0x14(%edx);");
    asm("loc_4B84FA: call _sub_483DF0;");
    asm("loc_4B84FF: fstps 0x3F8(%esi);");
    asm("loc_4B8505: calll *_import_5C60D0;");
    asm("loc_4B850B: test %al,%al;");
    asm("loc_4B850D: je loc_4B8514;");
    asm("loc_4B850F: call _sub_4C55F0;");
    asm("loc_4B8514: mov %esi,%ecx;");
    asm("loc_4B8516: call _sub_4B93F0;");
    asm("loc_4B851B: push %ebx;");
    asm("loc_4B851C: lea 0x32C(%esi),%ecx;");
    asm("loc_4B8522: call _sub_576360;");
    asm("loc_4B8527: mov 0x754(%esp),%ecx;");
    asm("loc_4B852E: mov 0x750(%esp),%edx;");
    asm("loc_4B8535: push %ecx;");
    asm("loc_4B8536: push %edx;");
    asm("loc_4B8537: mov %esi,%ecx;");
    asm("loc_4B8539: call _sub_4B5060;");
    asm("loc_4B853E: test %al,%al;");
    asm("loc_4B8540: jne loc_4B858A;");
    asm("loc_4B8542: mov 0x4C(%esp),%edi;");
    asm("loc_4B8546: mov (%edi),%esi;");
    asm("loc_4B8548: cmp %edi,%esi;");
    asm("loc_4B854A: je loc_4B857D;");
    asm("loc_4B854C: lea (%esp),%esp;");
    asm("loc_4B8550: mov %esi,%eax;");
    asm("loc_4B8552: mov 4(%eax),%ecx;");
    asm("loc_4B8555: mov (%eax),%edx;");
    asm("loc_4B8557: mov (%esi),%esi;");
    asm("loc_4B8559: mov %edx,(%ecx);");
    asm("loc_4B855B: mov (%eax),%ecx;");
    asm("loc_4B855D: mov 4(%eax),%edx;");
    asm("loc_4B8560: push %eax;");
    asm("loc_4B8561: mov %edx,4(%ecx);");
    asm("loc_4B8564: call _sub_5B7E1D;");
    asm("loc_4B8569: mov 0x54(%esp),%ecx;");
    asm("loc_4B856D: add $4,%esp;");
    asm("loc_4B8570: dec %ecx;");
    asm("loc_4B8571: cmp %edi,%esi;");
    asm("loc_4B8573: mov %ecx,0x50(%esp);");
    asm("loc_4B8577: jne loc_4B8550;");
    asm("loc_4B8579: mov 0x4C(%esp),%edi;");
    asm("loc_4B857D: push %edi;");
    asm("loc_4B857E: call _sub_5B7E1D;");
    asm("loc_4B8583: add $4,%esp;");
    asm("loc_4B8586: xor %al,%al;");
    asm("loc_4B8588: jmp loc_4B85CE;");
    asm("loc_4B858A: mov 0x4C(%esp),%eax;");
    asm("loc_4B858E: mov (%eax),%esi;");
    asm("loc_4B8590: cmp %eax,%esi;");
    asm("loc_4B8592: mov %eax,%edi;");
    asm("loc_4B8594: je loc_4B85C3;");
    asm("loc_4B8596: mov %esi,%eax;");
    asm("loc_4B8598: mov 4(%eax),%ecx;");
    asm("loc_4B859B: mov (%eax),%edx;");
    asm("loc_4B859D: mov (%esi),%esi;");
    asm("loc_4B859F: mov %edx,(%ecx);");
    asm("loc_4B85A1: mov (%eax),%ecx;");
    asm("loc_4B85A3: mov 4(%eax),%edx;");
    asm("loc_4B85A6: push %eax;");
    asm("loc_4B85A7: mov %edx,4(%ecx);");
    asm("loc_4B85AA: call _sub_5B7E1D;");
    asm("loc_4B85AF: mov 0x54(%esp),%ecx;");
    asm("loc_4B85B3: add $4,%esp;");
    asm("loc_4B85B6: dec %ecx;");
    asm("loc_4B85B7: cmp %edi,%esi;");
    asm("loc_4B85B9: mov %ecx,0x50(%esp);");
    asm("loc_4B85BD: jne loc_4B8596;");
    asm("loc_4B85BF: mov 0x4C(%esp),%eax;");
    asm("loc_4B85C3: push %eax;");
    asm("loc_4B85C4: call _sub_5B7E1D;");
    asm("loc_4B85C9: add $4,%esp;");
    asm("loc_4B85CC: mov $1,%al;");
    asm("loc_4B85CE: mov 0x740(%esp),%ecx;");
    asm("loc_4B85D5: pop %edi;");
    asm("loc_4B85D6: pop %esi;");
    asm("loc_4B85D7: pop %ebp;");
    asm("loc_4B85D8: mov %ecx,%fs:0;");
    asm("loc_4B85DF: pop %ebx;");
    asm("loc_4B85E0: add $0x73C,%esp;");
    asm("loc_4B85E6: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B85F0() // _sub_4B85F0
{
    asm("jmp dgb_4B85F0;"); // jumptable skip
    asm(".long _jmp_4B8958;"); // jumptable address
    __DEBUG_ASM(4B85F0);
    // chunk 0x4B85F0 _sub_4B85F0
    asm("loc_4B85F0: mov 4(%esp),%eax;");
    asm("loc_4B85F4: push %ebx;");
    asm("loc_4B85F5: push %ebp;");
    asm("loc_4B85F6: push %esi;");
    asm("loc_4B85F7: add $0xFFFFFFDA,%eax;");
    asm("loc_4B85FA: cmp $0x28,%eax;");
    asm("loc_4B85FD: push %edi;");
    asm("loc_4B85FE: mov %ecx,%esi;");
    asm("loc_4B8600: ja loc_4B8651;");
    asm("loc_4B8602: movzbl _data_4B8970(%eax),%ecx;");
    asm("loc_4B8609: jmpl *_jmp_4B8958(,%ecx,4);");
    asm("loc_4B8610: mov 0x3D8(%esi),%ecx;");
    asm("loc_4B8616: mov 0x18(%esp),%ebx;");
    asm("loc_4B861A: cmp %ecx,%ebx;");
    asm("loc_4B861C: jne loc_4B863B;");
    asm("loc_4B861E: mov 0x3DC(%esi),%ecx;");
    asm("loc_4B8624: mov (%ecx),%edx;");
    asm("loc_4B8626: push $0;");
    asm("loc_4B8628: push $0;");
    asm("loc_4B862A: push $0x2C;");
    asm("loc_4B862C: calll *0xA8(%edx);");
    asm("loc_4B8632: pop %edi;");
    asm("loc_4B8633: pop %esi;");
    asm("loc_4B8634: pop %ebp;");
    asm("loc_4B8635: xor %eax,%eax;");
    asm("loc_4B8637: pop %ebx;");
    asm("loc_4B8638: ret $0xC;");
    asm("loc_4B863B: cmp 0x3DC(%esi),%ebx;");
    asm("loc_4B8641: jne loc_4B865A;");
    asm("loc_4B8643: mov (%ecx),%eax;");
    asm("loc_4B8645: push $0;");
    asm("loc_4B8647: push $0;");
    asm("loc_4B8649: push $0x2C;");
    asm("loc_4B864B: calll *0xA8(%eax);");
    asm("loc_4B8651: pop %edi;");
    asm("loc_4B8652: pop %esi;");
    asm("loc_4B8653: pop %ebp;");
    asm("loc_4B8654: xor %eax,%eax;");
    asm("loc_4B8656: pop %ebx;");
    asm("loc_4B8657: ret $0xC;");
    asm("loc_4B865A: mov 0x3CC(%esi),%eax;");
    asm("loc_4B8660: xor %ebp,%ebp;");
    asm("loc_4B8662: test %eax,%eax;");
    asm("loc_4B8664: jle loc_4B8651;");
    asm("loc_4B8666: lea 0x340(%esi),%edi;");
    asm("loc_4B866C: lea (%esp),%esp;");
    asm("loc_4B8670: mov -0xC(%edi),%ecx;");
    asm("loc_4B8673: cmp %ecx,%ebx;");
    asm("loc_4B8675: je loc_4B868D;");
    asm("loc_4B8677: cmp (%edi),%ebx;");
    asm("loc_4B8679: jne loc_4B86A7;");
    asm("loc_4B867B: cmp %ecx,%ebx;");
    asm("loc_4B867D: je loc_4B868D;");
    asm("loc_4B867F: mov (%ecx),%edx;");
    asm("loc_4B8681: push $0;");
    asm("loc_4B8683: push $0;");
    asm("loc_4B8685: push $0x2C;");
    asm("loc_4B8687: calll *0xA8(%edx);");
    asm("loc_4B868D: mov (%edi),%ecx;");
    asm("loc_4B868F: cmp %ecx,%ebx;");
    asm("loc_4B8691: je loc_4B86A1;");
    asm("loc_4B8693: mov (%ecx),%eax;");
    asm("loc_4B8695: push $0;");
    asm("loc_4B8697: push $0;");
    asm("loc_4B8699: push $0x2C;");
    asm("loc_4B869B: calll *0xA8(%eax);");
    asm("loc_4B86A1: mov %ebp,0x3D4(%esi);");
    asm("loc_4B86A7: mov 0x3CC(%esi),%eax;");
    asm("loc_4B86AD: inc %ebp;");
    asm("loc_4B86AE: add $4,%edi;");
    asm("loc_4B86B1: cmp %eax,%ebp;");
    asm("loc_4B86B3: jl loc_4B8670;");
    asm("loc_4B86B5: pop %edi;");
    asm("loc_4B86B6: pop %esi;");
    asm("loc_4B86B7: pop %ebp;");
    asm("loc_4B86B8: xor %eax,%eax;");
    asm("loc_4B86BA: pop %ebx;");
    asm("loc_4B86BB: ret $0xC;");
    asm("loc_4B86BE: mov 0x3D8(%esi),%ecx;");
    asm("loc_4B86C4: mov 0x18(%esp),%ebx;");
    asm("loc_4B86C8: cmp %ecx,%ebx;");
    asm("loc_4B86CA: jne loc_4B86E9;");
    asm("loc_4B86CC: mov 0x3DC(%esi),%ecx;");
    asm("loc_4B86D2: mov (%ecx),%edx;");
    asm("loc_4B86D4: push $0;");
    asm("loc_4B86D6: push $0;");
    asm("loc_4B86D8: push $0x2D;");
    asm("loc_4B86DA: calll *0xA8(%edx);");
    asm("loc_4B86E0: pop %edi;");
    asm("loc_4B86E1: pop %esi;");
    asm("loc_4B86E2: pop %ebp;");
    asm("loc_4B86E3: xor %eax,%eax;");
    asm("loc_4B86E5: pop %ebx;");
    asm("loc_4B86E6: ret $0xC;");
    asm("loc_4B86E9: cmp 0x3DC(%esi),%ebx;");
    asm("loc_4B86EF: jne loc_4B8708;");
    asm("loc_4B86F1: mov (%ecx),%eax;");
    asm("loc_4B86F3: push $0;");
    asm("loc_4B86F5: push $0;");
    asm("loc_4B86F7: push $0x2D;");
    asm("loc_4B86F9: calll *0xA8(%eax);");
    asm("loc_4B86FF: pop %edi;");
    asm("loc_4B8700: pop %esi;");
    asm("loc_4B8701: pop %ebp;");
    asm("loc_4B8702: xor %eax,%eax;");
    asm("loc_4B8704: pop %ebx;");
    asm("loc_4B8705: ret $0xC;");
    asm("loc_4B8708: mov 0x3CC(%esi),%eax;");
    asm("loc_4B870E: xor %ebp,%ebp;");
    asm("loc_4B8710: test %eax,%eax;");
    asm("loc_4B8712: jle loc_4B8651;");
    asm("loc_4B8718: lea 0x340(%esi),%edi;");
    asm("loc_4B871E: mov %edi,%edi;");
    asm("loc_4B8720: mov -0xC(%edi),%ecx;");
    asm("loc_4B8723: cmp %ecx,%ebx;");
    asm("loc_4B8725: je loc_4B873D;");
    asm("loc_4B8727: cmp (%edi),%ebx;");
    asm("loc_4B8729: jne loc_4B875B;");
    asm("loc_4B872B: cmp %ecx,%ebx;");
    asm("loc_4B872D: je loc_4B873D;");
    asm("loc_4B872F: mov (%ecx),%edx;");
    asm("loc_4B8731: push $0;");
    asm("loc_4B8733: push $0;");
    asm("loc_4B8735: push $0x2D;");
    asm("loc_4B8737: calll *0xA8(%edx);");
    asm("loc_4B873D: mov (%edi),%ecx;");
    asm("loc_4B873F: cmp %ecx,%ebx;");
    asm("loc_4B8741: je loc_4B8751;");
    asm("loc_4B8743: mov (%ecx),%eax;");
    asm("loc_4B8745: push $0;");
    asm("loc_4B8747: push $0;");
    asm("loc_4B8749: push $0x2D;");
    asm("loc_4B874B: calll *0xA8(%eax);");
    asm("loc_4B8751: movl $0xFFFFFFFF,0x3D4(%esi);");
    asm("loc_4B875B: mov 0x3CC(%esi),%eax;");
    asm("loc_4B8761: inc %ebp;");
    asm("loc_4B8762: add $4,%edi;");
    asm("loc_4B8765: cmp %eax,%ebp;");
    asm("loc_4B8767: jl loc_4B8720;");
    asm("loc_4B8769: pop %edi;");
    asm("loc_4B876A: pop %esi;");
    asm("loc_4B876B: pop %ebp;");
    asm("loc_4B876C: xor %eax,%eax;");
    asm("loc_4B876E: pop %ebx;");
    asm("loc_4B876F: ret $0xC;");
    asm("loc_4B8772: mov 0x3CC(%esi),%edx;");
    asm("loc_4B8778: xor %eax,%eax;");
    asm("loc_4B877A: test %edx,%edx;");
    asm("loc_4B877C: jle loc_4B8651;");
    asm("loc_4B8782: mov 0x18(%esp),%edi;");
    asm("loc_4B8786: lea 0x340(%esi),%ecx;");
    asm("loc_4B878C: lea (%esp),%esp;");
    asm("loc_4B8790: cmp %edi,-0xC(%ecx);");
    asm("loc_4B8793: je loc_4B87AA;");
    asm("loc_4B8795: cmp %edi,(%ecx);");
    asm("loc_4B8797: je loc_4B87AA;");
    asm("loc_4B8799: inc %eax;");
    asm("loc_4B879A: add $4,%ecx;");
    asm("loc_4B879D: cmp %edx,%eax;");
    asm("loc_4B879F: jl loc_4B8790;");
    asm("loc_4B87A1: pop %edi;");
    asm("loc_4B87A2: pop %esi;");
    asm("loc_4B87A3: pop %ebp;");
    asm("loc_4B87A4: xor %eax,%eax;");
    asm("loc_4B87A6: pop %ebx;");
    asm("loc_4B87A7: ret $0xC;");
    asm("loc_4B87AA: mov 0x3A8(%esi,%eax,4),%ecx;");
    asm("loc_4B87B1: cmp 0x3A4(%esi),%ecx;");
    asm("loc_4B87B7: jg loc_4B8651;");
    asm("loc_4B87BD: mov 0x3FC(%esi,%eax,4),%ecx;");
    asm("loc_4B87C4: test %ecx,%ecx;");
    asm("loc_4B87C6: jne loc_4B8651;");
    asm("loc_4B87CC: mov 0x414(%esi,%eax,4),%ebx;");
    asm("loc_4B87D3: push $0;");
    asm("loc_4B87D5: call _sub_4424F0;");
    asm("loc_4B87DA: add $4,%esp;");
    asm("loc_4B87DD: call _sub_442850;");
    asm("loc_4B87E2: mov 0xC(%esi),%eax;");
    asm("loc_4B87E5: test %eax,%eax;");
    asm("loc_4B87E7: je loc_4B88D2;");
    asm("loc_4B87ED: lea (%ecx),%ecx;");
    asm("loc_4B87F0: mov 8(%eax),%edi;");
    asm("loc_4B87F3: push %eax;");
    asm("loc_4B87F4: call _sub_43D2A0;");
    asm("loc_4B87F9: add $4,%esp;");
    asm("loc_4B87FC: test %edi,%edi;");
    asm("loc_4B87FE: mov %edi,%eax;");
    asm("loc_4B8800: jne loc_4B87F0;");
    asm("loc_4B8802: jmp loc_4B88D2;");
    asm("loc_4B8807: push $0;");
    asm("loc_4B8809: call _sub_4424F0;");
    asm("loc_4B880E: add $4,%esp;");
    asm("loc_4B8811: call _sub_442850;");
    asm("loc_4B8816: test %esi,%esi;");
    asm("loc_4B8818: je loc_4B8651;");
    asm("loc_4B881E: mov 0xC(%esi),%eax;");
    asm("loc_4B8821: test %eax,%eax;");
    asm("loc_4B8823: je loc_4B8837;");
    asm("loc_4B8825: mov 8(%eax),%edi;");
    asm("loc_4B8828: push %eax;");
    asm("loc_4B8829: call _sub_43D2A0;");
    asm("loc_4B882E: add $4,%esp;");
    asm("loc_4B8831: test %edi,%edi;");
    asm("loc_4B8833: mov %edi,%eax;");
    asm("loc_4B8835: jne loc_4B8825;");
    asm("loc_4B8837: mov (%esi),%edx;");
    asm("loc_4B8839: mov %esi,%ecx;");
    asm("loc_4B883B: calll *0x28(%edx);");
    asm("loc_4B883E: mov (%esi),%eax;");
    asm("loc_4B8840: push $1;");
    asm("loc_4B8842: mov %esi,%ecx;");
    asm("loc_4B8844: calll *(%eax);");
    asm("loc_4B8846: pop %edi;");
    asm("loc_4B8847: pop %esi;");
    asm("loc_4B8848: pop %ebp;");
    asm("loc_4B8849: xor %eax,%eax;");
    asm("loc_4B884B: pop %ebx;");
    asm("loc_4B884C: ret $0xC;");
    asm("loc_4B884F: mov 0x18(%esp),%edi;");
    asm("loc_4B8853: cmp 0x330(%esi),%edi;");
    asm("loc_4B8859: jne loc_4B889E;");
    asm("loc_4B885B: push $0;");
    asm("loc_4B885D: call _sub_4424F0;");
    asm("loc_4B8862: add $4,%esp;");
    asm("loc_4B8865: call _sub_442850;");
    asm("loc_4B886A: mov 0xC(%esi),%eax;");
    asm("loc_4B886D: test %eax,%eax;");
    asm("loc_4B886F: je loc_4B8883;");
    asm("loc_4B8871: mov 8(%eax),%edi;");
    asm("loc_4B8874: push %eax;");
    asm("loc_4B8875: call _sub_43D2A0;");
    asm("loc_4B887A: add $4,%esp;");
    asm("loc_4B887D: test %edi,%edi;");
    asm("loc_4B887F: mov %edi,%eax;");
    asm("loc_4B8881: jne loc_4B8871;");
    asm("loc_4B8883: mov (%esi),%edx;");
    asm("loc_4B8885: mov %esi,%ecx;");
    asm("loc_4B8887: calll *0x28(%edx);");
    asm("loc_4B888A: mov (%esi),%eax;");
    asm("loc_4B888C: push $1;");
    asm("loc_4B888E: mov %esi,%ecx;");
    asm("loc_4B8890: calll *(%eax);");
    asm("loc_4B8892: pop %edi;");
    asm("loc_4B8893: pop %esi;");
    asm("loc_4B8894: pop %ebp;");
    asm("loc_4B8895: mov $1,%eax;");
    asm("loc_4B889A: pop %ebx;");
    asm("loc_4B889B: ret $0xC;");
    asm("loc_4B889E: cmp 0x380(%esi),%edi;");
    asm("loc_4B88A4: jne loc_4B88F6;");
    asm("loc_4B88A6: mov 0xC(%esi),%eax;");
    asm("loc_4B88A9: test %eax,%eax;");
    asm("loc_4B88AB: mov 0x3D0(%esi),%ecx;");
    asm("loc_4B88B1: mov 0x414(%esi,%ecx,4),%ebx;");
    asm("loc_4B88B8: je loc_4B88D2;");
    asm("loc_4B88BA: lea (%ebx),%ebx;");
    asm("loc_4B88C0: mov 8(%eax),%edi;");
    asm("loc_4B88C3: push %eax;");
    asm("loc_4B88C4: call _sub_43D2A0;");
    asm("loc_4B88C9: add $4,%esp;");
    asm("loc_4B88CC: test %edi,%edi;");
    asm("loc_4B88CE: mov %edi,%eax;");
    asm("loc_4B88D0: jne loc_4B88C0;");
    asm("loc_4B88D2: mov (%esi),%edx;");
    asm("loc_4B88D4: mov %esi,%ecx;");
    asm("loc_4B88D6: calll *0x28(%edx);");
    asm("loc_4B88D9: mov (%esi),%eax;");
    asm("loc_4B88DB: push $1;");
    asm("loc_4B88DD: mov %esi,%ecx;");
    asm("loc_4B88DF: calll *(%eax);");
    asm("loc_4B88E1: push %ebx;");
    asm("loc_4B88E2: call _sub_4421A0;");
    asm("loc_4B88E7: add $4,%esp;");
    asm("loc_4B88EA: pop %edi;");
    asm("loc_4B88EB: pop %esi;");
    asm("loc_4B88EC: pop %ebp;");
    asm("loc_4B88ED: mov $1,%eax;");
    asm("loc_4B88F2: pop %ebx;");
    asm("loc_4B88F3: ret $0xC;");
    asm("loc_4B88F6: mov 0x3CC(%esi),%edx;");
    asm("loc_4B88FC: xor %ecx,%ecx;");
    asm("loc_4B88FE: test %edx,%edx;");
    asm("loc_4B8900: jle loc_4B8919;");
    asm("loc_4B8902: lea 0x340(%esi),%eax;");
    asm("loc_4B8908: cmp %edi,-0xC(%eax);");
    asm("loc_4B890B: je loc_4B8942;");
    asm("loc_4B890D: cmp %edi,(%eax);");
    asm("loc_4B890F: je loc_4B8942;");
    asm("loc_4B8911: inc %ecx;");
    asm("loc_4B8912: add $4,%eax;");
    asm("loc_4B8915: cmp %edx,%ecx;");
    asm("loc_4B8917: jl loc_4B8908;");
    asm("loc_4B8919: cmp 0x3D8(%esi),%edi;");
    asm("loc_4B891F: je loc_4B892D;");
    asm("loc_4B8921: cmp 0x3DC(%esi),%edi;");
    asm("loc_4B8927: jne loc_4B8651;");
    asm("loc_4B892D: push $0xFFFFFFFE;");
    asm("loc_4B892F: mov %esi,%ecx;");
    asm("loc_4B8931: call _sub_4B8A00;");
    asm("loc_4B8936: pop %edi;");
    asm("loc_4B8937: pop %esi;");
    asm("loc_4B8938: pop %ebp;");
    asm("loc_4B8939: mov $1,%eax;");
    asm("loc_4B893E: pop %ebx;");
    asm("loc_4B893F: ret $0xC;");
    asm("loc_4B8942: push %ecx;");
    asm("loc_4B8943: mov %esi,%ecx;");
    asm("loc_4B8945: call _sub_4B8A00;");
    asm("loc_4B894A: pop %edi;");
    asm("loc_4B894B: pop %esi;");
    asm("loc_4B894C: pop %ebp;");
    asm("loc_4B894D: mov $1,%eax;");
    asm("loc_4B8952: pop %ebx;");
    asm("loc_4B8953: ret $0xC;");
    asm("int3;"); // unreachable
    asm("_jmp_4B8958: .long loc_4B884F;");
    asm(".long loc_4B8772;");
    asm(".long loc_4B8610;");
    asm(".long loc_4B86BE;");
    asm(".long loc_4B8807;");
    asm(".long loc_4B8651;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4B85F0);
_naked _weak void _sub_4B89A0() // _sub_4B89A0
{
    __DEBUG_ASM(4B89A0);
    // chunk 0x4B89A0 _sub_4B89A0
    asm("loc_4B89A0: mov 8(%esp),%eax;");
    asm("loc_4B89A4: push %edi;");
    asm("loc_4B89A5: mov %ecx,%edi;");
    asm("loc_4B89A7: testb $2,(%eax);");
    asm("loc_4B89AA: je loc_4B89F2;");
    asm("loc_4B89AC: cmpl $0x1B,8(%esp);");
    asm("loc_4B89B1: jne loc_4B89F2;");
    asm("loc_4B89B3: push $0;");
    asm("loc_4B89B5: call _sub_4424F0;");
    asm("loc_4B89BA: add $4,%esp;");
    asm("loc_4B89BD: call _sub_442850;");
    asm("loc_4B89C2: test %edi,%edi;");
    asm("loc_4B89C4: je loc_4B89F2;");
    asm("loc_4B89C6: mov 0xC(%edi),%eax;");
    asm("loc_4B89C9: test %eax,%eax;");
    asm("loc_4B89CB: je loc_4B89E3;");
    asm("loc_4B89CD: push %esi;");
    asm("loc_4B89CE: mov %edi,%edi;");
    asm("loc_4B89D0: mov 8(%eax),%esi;");
    asm("loc_4B89D3: push %eax;");
    asm("loc_4B89D4: call _sub_43D2A0;");
    asm("loc_4B89D9: add $4,%esp;");
    asm("loc_4B89DC: test %esi,%esi;");
    asm("loc_4B89DE: mov %esi,%eax;");
    asm("loc_4B89E0: jne loc_4B89D0;");
    asm("loc_4B89E2: pop %esi;");
    asm("loc_4B89E3: mov (%edi),%edx;");
    asm("loc_4B89E5: mov %edi,%ecx;");
    asm("loc_4B89E7: calll *0x28(%edx);");
    asm("loc_4B89EA: mov (%edi),%eax;");
    asm("loc_4B89EC: push $1;");
    asm("loc_4B89EE: mov %edi,%ecx;");
    asm("loc_4B89F0: calll *(%eax);");
    asm("loc_4B89F2: xor %al,%al;");
    asm("loc_4B89F4: pop %edi;");
    asm("loc_4B89F5: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B8A00() // _sub_4B8A00
{
    __DEBUG_ASM(4B8A00);
    // chunk 0x4B8A00 _sub_4B8A00
    asm("loc_4B8A00: mov %fs:0,%eax;");
    asm("loc_4B8A06: push $0xFFFFFFFF;");
    asm("loc_4B8A08: push $_sub_5BD32F;");
    asm("loc_4B8A0D: push %eax;");
    asm("loc_4B8A0E: mov 0x10(%esp),%eax;");
    asm("loc_4B8A12: mov %esp,%fs:0;");
    asm("loc_4B8A19: sub $0x44,%esp;");
    asm("loc_4B8A1C: push %ebx;");
    asm("loc_4B8A1D: push %ebp;");
    asm("loc_4B8A1E: push %esi;");
    asm("loc_4B8A1F: mov %ecx,%esi;");
    asm("loc_4B8A21: mov %eax,0x3D0(%esi);");
    asm("loc_4B8A27: mov 0x3CC(%esi),%eax;");
    asm("loc_4B8A2D: xor %ebx,%ebx;");
    asm("loc_4B8A2F: xor %ebp,%ebp;");
    asm("loc_4B8A31: cmp %ebx,%eax;");
    asm("loc_4B8A33: push %edi;");
    asm("loc_4B8A34: jle loc_4B8A80;");
    asm("loc_4B8A36: lea 0x340(%esi),%edi;");
    asm("loc_4B8A3C: lea (%esp),%esp;");
    asm("loc_4B8A40: cmp 0x64(%esp),%ebp;");
    asm("loc_4B8A44: mov -0xC(%edi),%ecx;");
    asm("loc_4B8A47: mov (%ecx),%edx;");
    asm("loc_4B8A49: push %ebx;");
    asm("loc_4B8A4A: jne loc_4B8A5B;");
    asm("loc_4B8A4C: push $1;");
    asm("loc_4B8A4E: push $0xC;");
    asm("loc_4B8A50: calll *0xA8(%edx);");
    asm("loc_4B8A56: push %ebx;");
    asm("loc_4B8A57: push $1;");
    asm("loc_4B8A59: jmp loc_4B8A66;");
    asm("loc_4B8A5B: push %ebx;");
    asm("loc_4B8A5C: push $0xC;");
    asm("loc_4B8A5E: calll *0xA8(%edx);");
    asm("loc_4B8A64: push %ebx;");
    asm("loc_4B8A65: push %ebx;");
    asm("loc_4B8A66: mov (%edi),%ecx;");
    asm("loc_4B8A68: mov (%ecx),%eax;");
    asm("loc_4B8A6A: push $0xC;");
    asm("loc_4B8A6C: calll *0xA8(%eax);");
    asm("loc_4B8A72: mov 0x3CC(%esi),%eax;");
    asm("loc_4B8A78: inc %ebp;");
    asm("loc_4B8A79: add $4,%edi;");
    asm("loc_4B8A7C: cmp %eax,%ebp;");
    asm("loc_4B8A7E: jl loc_4B8A40;");
    asm("loc_4B8A80: mov 0x3D0(%esi),%eax;");
    asm("loc_4B8A86: mov 0x3D8(%esi),%ecx;");
    asm("loc_4B8A8C: mov $0xFFFFFFFE,%edi;");
    asm("loc_4B8A91: cmp %edi,%eax;");
    asm("loc_4B8A93: jne loc_4B8AA7;");
    asm("loc_4B8A95: mov (%ecx),%edx;");
    asm("loc_4B8A97: push %ebx;");
    asm("loc_4B8A98: push $1;");
    asm("loc_4B8A9A: push $0xC;");
    asm("loc_4B8A9C: calll *0xA8(%edx);");
    asm("loc_4B8AA2: push %ebx;");
    asm("loc_4B8AA3: push $1;");
    asm("loc_4B8AA5: jmp loc_4B8AB9;");
    asm("loc_4B8AA7: cmp %ebx,%ecx;");
    asm("loc_4B8AA9: je loc_4B8AC9;");
    asm("loc_4B8AAB: mov (%ecx),%edx;");
    asm("loc_4B8AAD: push %ebx;");
    asm("loc_4B8AAE: push %ebx;");
    asm("loc_4B8AAF: push $0xC;");
    asm("loc_4B8AB1: calll *0xA8(%edx);");
    asm("loc_4B8AB7: push %ebx;");
    asm("loc_4B8AB8: push %ebx;");
    asm("loc_4B8AB9: mov 0x3DC(%esi),%ecx;");
    asm("loc_4B8ABF: mov (%ecx),%eax;");
    asm("loc_4B8AC1: push $0xC;");
    asm("loc_4B8AC3: calll *0xA8(%eax);");
    asm("loc_4B8AC9: mov 0x370(%esi),%ecx;");
    asm("loc_4B8ACF: mov (%ecx),%edx;");
    asm("loc_4B8AD1: push %ebx;");
    asm("loc_4B8AD2: push %ebx;");
    asm("loc_4B8AD3: push $1;");
    asm("loc_4B8AD5: calll *0xA8(%edx);");
    asm("loc_4B8ADB: mov 0x380(%esi),%ecx;");
    asm("loc_4B8AE1: mov (%ecx),%eax;");
    asm("loc_4B8AE3: push %ebx;");
    asm("loc_4B8AE4: push %ebx;");
    asm("loc_4B8AE5: push $1;");
    asm("loc_4B8AE7: calll *0xA8(%eax);");
    asm("loc_4B8AED: mov 0x38C(%esi),%ecx;");
    asm("loc_4B8AF3: mov (%ecx),%edx;");
    asm("loc_4B8AF5: push %ebx;");
    asm("loc_4B8AF6: push %ebx;");
    asm("loc_4B8AF7: push $1;");
    asm("loc_4B8AF9: calll *0xA8(%edx);");
    asm("loc_4B8AFF: mov 0x384(%esi),%ecx;");
    asm("loc_4B8B05: mov (%ecx),%eax;");
    asm("loc_4B8B07: push %ebx;");
    asm("loc_4B8B08: push %ebx;");
    asm("loc_4B8B09: push $1;");
    asm("loc_4B8B0B: calll *0xA8(%eax);");
    asm("loc_4B8B11: mov 0x388(%esi),%ecx;");
    asm("loc_4B8B17: mov (%ecx),%edx;");
    asm("loc_4B8B19: push %ebx;");
    asm("loc_4B8B1A: push %ebx;");
    asm("loc_4B8B1B: push $1;");
    asm("loc_4B8B1D: calll *0xA8(%edx);");
    asm("loc_4B8B23: mov 0x394(%esi),%ecx;");
    asm("loc_4B8B29: mov (%ecx),%eax;");
    asm("loc_4B8B2B: push %ebx;");
    asm("loc_4B8B2C: push $1;");
    asm("loc_4B8B2E: push $1;");
    asm("loc_4B8B30: calll *0xA8(%eax);");
    asm("loc_4B8B36: mov 0x398(%esi),%ecx;");
    asm("loc_4B8B3C: mov (%ecx),%edx;");
    asm("loc_4B8B3E: push %ebx;");
    asm("loc_4B8B3F: push $1;");
    asm("loc_4B8B41: push $1;");
    asm("loc_4B8B43: calll *0xA8(%edx);");
    asm("loc_4B8B49: mov 0x39C(%esi),%ecx;");
    asm("loc_4B8B4F: mov (%ecx),%eax;");
    asm("loc_4B8B51: push %ebx;");
    asm("loc_4B8B52: push $1;");
    asm("loc_4B8B54: push $1;");
    asm("loc_4B8B56: calll *0xA8(%eax);");
    asm("loc_4B8B5C: mov 0x3D0(%esi),%eax;");
    asm("loc_4B8B62: xor %ebp,%ebp;");
    asm("loc_4B8B64: cmp %edi,%eax;");
    asm("loc_4B8B66: mov %ebx,0x10(%esp);");
    asm("loc_4B8B6A: mov %ebx,0x14(%esp);");
    asm("loc_4B8B6E: je loc_4B8F83;");
    asm("loc_4B8B74: mov 0x64(%esp),%ecx;");
    asm("loc_4B8B78: mov 0x3B4(%esi,%ecx,4),%ebx;");
    asm("loc_4B8B7F: test %ebx,%ebx;");
    asm("loc_4B8B81: je loc_4B8C1A;");
    asm("loc_4B8B87: mov 0x90(%ebx),%eax;");
    asm("loc_4B8B8D: push %eax;");
    asm("loc_4B8B8E: calll *_import_5C6088;");
    asm("loc_4B8B94: mov 0x54(%eax),%edx;");
    asm("loc_4B8B97: push %edx;");
    asm("loc_4B8B98: calll *_import_5C61FC;");
    asm("loc_4B8B9E: mov 0x370(%esi),%ecx;");
    asm("loc_4B8BA4: add $8,%esp;");
    asm("loc_4B8BA7: push %ebp;");
    asm("loc_4B8BA8: mov %eax,%edi;");
    asm("loc_4B8BAA: push $1;");
    asm("loc_4B8BAC: lea 8(%edi),%eax;");
    asm("loc_4B8BAF: push %eax;");
    asm("loc_4B8BB0: call _sub_585A90;");
    asm("loc_4B8BB5: mov 0x370(%esi),%ecx;");
    asm("loc_4B8BBB: add $0x94,%ebx;");
    asm("loc_4B8BC1: push %ebx;");
    asm("loc_4B8BC2: call _sub_5850F0;");
    asm("loc_4B8BC7: mov 0x14(%edi),%eax;");
    asm("loc_4B8BCA: mov 0x384(%esi),%ecx;");
    asm("loc_4B8BD0: mov (%ecx),%edx;");
    asm("loc_4B8BD2: push %ebp;");
    asm("loc_4B8BD3: push %eax;");
    asm("loc_4B8BD4: push $0x1E;");
    asm("loc_4B8BD6: calll *0xA8(%edx);");
    asm("loc_4B8BDC: mov 0x64(%esp),%eax;");
    asm("loc_4B8BE0: mov 0x3EC(%esi,%eax,4),%eax;");
    asm("loc_4B8BE7: mov _data_611F78(,%eax,4),%eax;");
    asm("loc_4B8BEE: mov 0x388(%esi),%ecx;");
    asm("loc_4B8BF4: mov (%ecx),%edx;");
    asm("loc_4B8BF6: push %ebp;");
    asm("loc_4B8BF7: push %eax;");
    asm("loc_4B8BF8: push $0x1E;");
    asm("loc_4B8BFA: calll *0xA8(%edx);");
    asm("loc_4B8C00: mov 0xF0(%edi),%ecx;");
    asm("loc_4B8C06: mov 0xF4(%edi),%edx;");
    asm("loc_4B8C0C: mov 0xEC(%edi),%ebp;");
    asm("loc_4B8C12: mov %ecx,0x10(%esp);");
    asm("loc_4B8C16: mov %edx,0x14(%esp);");
    asm("loc_4B8C1A: xor %ebx,%ebx;");
    asm("loc_4B8C1C: mov 0x64(%esp),%al;");
    asm("loc_4B8C20: push $0xC;");
    asm("loc_4B8C22: mov %al,0x40(%esp);");
    asm("loc_4B8C26: call _sub_5B7E84;");
    asm("loc_4B8C2B: mov %eax,(%eax);");
    asm("loc_4B8C2D: mov %eax,4(%eax);");
    asm("loc_4B8C30: add $4,%esp;");
    asm("loc_4B8C33: mov %eax,0x40(%esp);");
    asm("loc_4B8C37: mov %ebx,0x44(%esp);");
    asm("loc_4B8C3B: push $0x9CA4;");
    asm("loc_4B8C40: lea 0x20(%esp),%ecx;");
    asm("loc_4B8C44: mov %ebx,0x60(%esp);");
    asm("loc_4B8C48: calll *_import_5C62B8;");
    asm("loc_4B8C4E: mov (%eax),%edx;");
    asm("loc_4B8C50: mov %eax,%ecx;");
    asm("loc_4B8C52: movb $1,0x5C(%esp);");
    asm("loc_4B8C57: calll *0x1C(%edx);");
    asm("loc_4B8C5A: mov %eax,0x64(%esp);");
    asm("loc_4B8C5E: mov 0x40(%esp),%edi;");
    asm("loc_4B8C62: mov 4(%edi),%ebx;");
    asm("loc_4B8C65: mov %edi,0x18(%esp);");
    asm("loc_4B8C69: add $4,%edi;");
    asm("loc_4B8C6C: push $0xC;");
    asm("loc_4B8C6E: movb $2,0x60(%esp);");
    asm("loc_4B8C73: call _sub_5B7E84;");
    asm("loc_4B8C78: mov 0x1C(%esp),%ecx;");
    asm("loc_4B8C7C: add $4,%esp;");
    asm("loc_4B8C7F: test %ebx,%ebx;");
    asm("loc_4B8C81: mov %ecx,(%eax);");
    asm("loc_4B8C83: jne loc_4B8C87;");
    asm("loc_4B8C85: mov %eax,%ebx;");
    asm("loc_4B8C87: mov %ebx,4(%eax);");
    asm("loc_4B8C8A: mov %eax,(%edi);");
    asm("loc_4B8C8C: mov 4(%eax),%ecx;");
    asm("loc_4B8C8F: lea 0x64(%esp),%edx;");
    asm("loc_4B8C93: mov %eax,(%ecx);");
    asm("loc_4B8C95: push %edx;");
    asm("loc_4B8C96: add $8,%eax;");
    asm("loc_4B8C99: push %eax;");
    asm("loc_4B8C9A: call _sub_46EA00;");
    asm("loc_4B8C9F: mov 0x4C(%esp),%ecx;");
    asm("loc_4B8CA3: add $8,%esp;");
    asm("loc_4B8CA6: inc %ecx;");
    asm("loc_4B8CA7: mov %ecx,0x44(%esp);");
    asm("loc_4B8CAB: mov 0x64(%esp),%ecx;");
    asm("loc_4B8CAF: xor %ebx,%ebx;");
    asm("loc_4B8CB1: cmp %ebx,%ecx;");
    asm("loc_4B8CB3: movb $1,0x5C(%esp);");
    asm("loc_4B8CB8: je loc_4B8CC4;");
    asm("loc_4B8CBA: mov (%ecx),%eax;");
    asm("loc_4B8CBC: push $1;");
    asm("loc_4B8CBE: calll *(%eax);");
    asm("loc_4B8CC0: mov %ebx,0x64(%esp);");
    asm("loc_4B8CC4: lea 0x1C(%esp),%ecx;");
    asm("loc_4B8CC8: movb $0,0x5C(%esp);");
    asm("loc_4B8CCD: calll *_import_5C62B4;");
    asm("loc_4B8CD3: lea 0x3C(%esp),%ecx;");
    asm("loc_4B8CD7: push %ecx;");
    asm("loc_4B8CD8: push %ebp;");
    asm("loc_4B8CD9: call _sub_57DA40;");
    asm("loc_4B8CDE: mov 0x374(%esi),%edi;");
    asm("loc_4B8CE4: add $8,%esp;");
    asm("loc_4B8CE7: push %ebx;");
    asm("loc_4B8CE8: push %ebx;");
    asm("loc_4B8CE9: mov %edi,%ecx;");
    asm("loc_4B8CEB: call _sub_5798B0;");
    asm("loc_4B8CF0: mov %edi,%ecx;");
    asm("loc_4B8CF2: call _sub_57B370;");
    asm("loc_4B8CF7: lea 0x3C(%esp),%edx;");
    asm("loc_4B8CFB: push %edx;");
    asm("loc_4B8CFC: mov %edi,%ecx;");
    asm("loc_4B8CFE: call _sub_57B3E0;");
    asm("loc_4B8D03: mov 0x64(%esp),%al;");
    asm("loc_4B8D07: push $0xC;");
    asm("loc_4B8D09: mov %al,0x34(%esp);");
    asm("loc_4B8D0D: call _sub_5B7E84;");
    asm("loc_4B8D12: mov %eax,(%eax);");
    asm("loc_4B8D14: mov %eax,4(%eax);");
    asm("loc_4B8D17: add $4,%esp;");
    asm("loc_4B8D1A: mov %eax,0x34(%esp);");
    asm("loc_4B8D1E: mov %ebx,0x38(%esp);");
    asm("loc_4B8D22: push $0x9CA4;");
    asm("loc_4B8D27: lea 0x20(%esp),%ecx;");
    asm("loc_4B8D2B: movb $3,0x60(%esp);");
    asm("loc_4B8D30: calll *_import_5C62B8;");
    asm("loc_4B8D36: mov (%eax),%edx;");
    asm("loc_4B8D38: mov %eax,%ecx;");
    asm("loc_4B8D3A: movb $4,0x5C(%esp);");
    asm("loc_4B8D3F: calll *0x1C(%edx);");
    asm("loc_4B8D42: mov %eax,0x64(%esp);");
    asm("loc_4B8D46: mov 0x34(%esp),%edi;");
    asm("loc_4B8D4A: mov 4(%edi),%ebp;");
    asm("loc_4B8D4D: mov %edi,%ebx;");
    asm("loc_4B8D4F: add $4,%edi;");
    asm("loc_4B8D52: push $0xC;");
    asm("loc_4B8D54: movb $5,0x60(%esp);");
    asm("loc_4B8D59: call _sub_5B7E84;");
    asm("loc_4B8D5E: mov %ebx,(%eax);");
    asm("loc_4B8D60: xor %ebx,%ebx;");
    asm("loc_4B8D62: add $4,%esp;");
    asm("loc_4B8D65: cmp %ebx,%ebp;");
    asm("loc_4B8D67: jne loc_4B8D6B;");
    asm("loc_4B8D69: mov %eax,%ebp;");
    asm("loc_4B8D6B: mov %ebp,4(%eax);");
    asm("loc_4B8D6E: mov %eax,(%edi);");
    asm("loc_4B8D70: mov 4(%eax),%ecx;");
    asm("loc_4B8D73: mov %eax,(%ecx);");
    asm("loc_4B8D75: lea 0x64(%esp),%ecx;");
    asm("loc_4B8D79: push %ecx;");
    asm("loc_4B8D7A: add $8,%eax;");
    asm("loc_4B8D7D: push %eax;");
    asm("loc_4B8D7E: call _sub_46EA00;");
    asm("loc_4B8D83: mov 0x40(%esp),%ecx;");
    asm("loc_4B8D87: add $8,%esp;");
    asm("loc_4B8D8A: inc %ecx;");
    asm("loc_4B8D8B: mov %ecx,0x38(%esp);");
    asm("loc_4B8D8F: mov 0x64(%esp),%ecx;");
    asm("loc_4B8D93: cmp %ebx,%ecx;");
    asm("loc_4B8D95: movb $4,0x5C(%esp);");
    asm("loc_4B8D9A: je loc_4B8DA6;");
    asm("loc_4B8D9C: mov (%ecx),%edx;");
    asm("loc_4B8D9E: push $1;");
    asm("loc_4B8DA0: calll *(%edx);");
    asm("loc_4B8DA2: mov %ebx,0x64(%esp);");
    asm("loc_4B8DA6: lea 0x1C(%esp),%ecx;");
    asm("loc_4B8DAA: movb $3,0x5C(%esp);");
    asm("loc_4B8DAF: calll *_import_5C62B4;");
    asm("loc_4B8DB5: mov 0x10(%esp),%ecx;");
    asm("loc_4B8DB9: lea 0x30(%esp),%eax;");
    asm("loc_4B8DBD: push %eax;");
    asm("loc_4B8DBE: push %ecx;");
    asm("loc_4B8DBF: call _sub_57DA40;");
    asm("loc_4B8DC4: mov 0x378(%esi),%edi;");
    asm("loc_4B8DCA: add $8,%esp;");
    asm("loc_4B8DCD: push %ebx;");
    asm("loc_4B8DCE: push %ebx;");
    asm("loc_4B8DCF: mov %edi,%ecx;");
    asm("loc_4B8DD1: call _sub_5798B0;");
    asm("loc_4B8DD6: mov %edi,%ecx;");
    asm("loc_4B8DD8: call _sub_57B370;");
    asm("loc_4B8DDD: lea 0x30(%esp),%edx;");
    asm("loc_4B8DE1: push %edx;");
    asm("loc_4B8DE2: mov %edi,%ecx;");
    asm("loc_4B8DE4: call _sub_57B3E0;");
    asm("loc_4B8DE9: push %ebx;");
    asm("loc_4B8DEA: mov %edi,%ecx;");
    asm("loc_4B8DEC: call _sub_5799F0;");
    asm("loc_4B8DF1: mov 0x64(%esp),%al;");
    asm("loc_4B8DF5: push $0xC;");
    asm("loc_4B8DF7: mov %al,0x28(%esp);");
    asm("loc_4B8DFB: call _sub_5B7E84;");
    asm("loc_4B8E00: mov %eax,(%eax);");
    asm("loc_4B8E02: mov %eax,4(%eax);");
    asm("loc_4B8E05: add $4,%esp;");
    asm("loc_4B8E08: mov %eax,0x28(%esp);");
    asm("loc_4B8E0C: mov %ebx,0x2C(%esp);");
    asm("loc_4B8E10: push $0x9CA4;");
    asm("loc_4B8E15: lea 0x20(%esp),%ecx;");
    asm("loc_4B8E19: movb $6,0x60(%esp);");
    asm("loc_4B8E1E: calll *_import_5C62B8;");
    asm("loc_4B8E24: mov (%eax),%edx;");
    asm("loc_4B8E26: mov %eax,%ecx;");
    asm("loc_4B8E28: movb $7,0x5C(%esp);");
    asm("loc_4B8E2D: calll *0x1C(%edx);");
    asm("loc_4B8E30: mov %eax,0x64(%esp);");
    asm("loc_4B8E34: mov 0x28(%esp),%eax;");
    asm("loc_4B8E38: mov 4(%eax),%ebp;");
    asm("loc_4B8E3B: lea 4(%eax),%edi;");
    asm("loc_4B8E3E: push $0xC;");
    asm("loc_4B8E40: movb $8,0x60(%esp);");
    asm("loc_4B8E45: mov %eax,%ebx;");
    asm("loc_4B8E47: call _sub_5B7E84;");
    asm("loc_4B8E4C: mov %ebx,(%eax);");
    asm("loc_4B8E4E: xor %ebx,%ebx;");
    asm("loc_4B8E50: add $4,%esp;");
    asm("loc_4B8E53: cmp %ebx,%ebp;");
    asm("loc_4B8E55: jne loc_4B8E59;");
    asm("loc_4B8E57: mov %eax,%ebp;");
    asm("loc_4B8E59: mov %ebp,4(%eax);");
    asm("loc_4B8E5C: mov %eax,(%edi);");
    asm("loc_4B8E5E: mov 4(%eax),%ecx;");
    asm("loc_4B8E61: lea 8(%eax),%edi;");
    asm("loc_4B8E64: mov %eax,(%ecx);");
    asm("loc_4B8E66: mov %edi,0x18(%esp);");
    asm("loc_4B8E6A: mov %edi,0x10(%esp);");
    asm("loc_4B8E6E: cmp %ebx,%edi;");
    asm("loc_4B8E70: mov 0x64(%esp),%ebp;");
    asm("loc_4B8E74: movb $9,0x5C(%esp);");
    asm("loc_4B8E79: je loc_4B8E85;");
    asm("loc_4B8E7B: mov (%ebp),%eax;");
    asm("loc_4B8E7E: mov %ebp,%ecx;");
    asm("loc_4B8E80: calll *0x1C(%eax);");
    asm("loc_4B8E83: mov %eax,(%edi);");
    asm("loc_4B8E85: mov 0x2C(%esp),%ecx;");
    asm("loc_4B8E89: inc %ecx;");
    asm("loc_4B8E8A: cmp %ebx,%ebp;");
    asm("loc_4B8E8C: mov %ecx,0x2C(%esp);");
    asm("loc_4B8E90: movb $7,0x5C(%esp);");
    asm("loc_4B8E95: je loc_4B8EA0;");
    asm("loc_4B8E97: mov (%ebp),%edx;");
    asm("loc_4B8E9A: push $1;");
    asm("loc_4B8E9C: mov %ebp,%ecx;");
    asm("loc_4B8E9E: calll *(%edx);");
    asm("loc_4B8EA0: lea 0x1C(%esp),%ecx;");
    asm("loc_4B8EA4: movb $6,0x5C(%esp);");
    asm("loc_4B8EA9: calll *_import_5C62B4;");
    asm("loc_4B8EAF: mov 0x14(%esp),%ecx;");
    asm("loc_4B8EB3: lea 0x24(%esp),%eax;");
    asm("loc_4B8EB7: push %eax;");
    asm("loc_4B8EB8: push %ecx;");
    asm("loc_4B8EB9: call _sub_57DA40;");
    asm("loc_4B8EBE: mov 0x37C(%esi),%edi;");
    asm("loc_4B8EC4: add $8,%esp;");
    asm("loc_4B8EC7: push %ebx;");
    asm("loc_4B8EC8: push %ebx;");
    asm("loc_4B8EC9: mov %edi,%ecx;");
    asm("loc_4B8ECB: call _sub_5798B0;");
    asm("loc_4B8ED0: mov %edi,%ecx;");
    asm("loc_4B8ED2: call _sub_57B370;");
    asm("loc_4B8ED7: lea 0x24(%esp),%edx;");
    asm("loc_4B8EDB: push %edx;");
    asm("loc_4B8EDC: mov %edi,%ecx;");
    asm("loc_4B8EDE: call _sub_57B3E0;");
    asm("loc_4B8EE3: push %ebx;");
    asm("loc_4B8EE4: mov %edi,%ecx;");
    asm("loc_4B8EE6: call _sub_5799F0;");
    asm("loc_4B8EEB: mov 0x370(%esi),%ecx;");
    asm("loc_4B8EF1: lea 0x48(%esp),%eax;");
    asm("loc_4B8EF5: push %eax;");
    asm("loc_4B8EF6: movl $0x432294BC,0x4C(%esp);");
    asm("loc_4B8EFE: movl $0xC28F49D5,0x50(%esp);");
    asm("loc_4B8F06: movl $0,0x54(%esp);");
    asm("loc_4B8F0E: call _sub_586900;");
    asm("loc_4B8F13: lea 0x48(%esp),%ecx;");
    asm("loc_4B8F17: push %ecx;");
    asm("loc_4B8F18: mov 0x370(%esi),%ecx;");
    asm("loc_4B8F1E: call _sub_585070;");
    asm("loc_4B8F23: mov 0x3D0(%esi),%ecx;");
    asm("loc_4B8F29: mov 0x3FC(%esi,%ecx,4),%eax;");
    asm("loc_4B8F30: cmp $1,%eax;");
    asm("loc_4B8F33: jne loc_4B900A;");
    asm("loc_4B8F39: mov _data_6119F8,%edx;");
    asm("loc_4B8F3F: mov _data_67ECA8,%eax;");
    asm("loc_4B8F44: push %edx;");
    asm("loc_4B8F45: push $_data_66DC60;");
    asm("loc_4B8F4A: push $0x61B;");
    asm("loc_4B8F4F: push %eax;");
    asm("loc_4B8F50: call _sub_4347E0;");
    asm("loc_4B8F55: mov 0x3D0(%esi),%ecx;");
    asm("loc_4B8F5B: mov 0x408(%esi,%ecx,4),%edx;");
    asm("loc_4B8F62: push %edx;");
    asm("loc_4B8F63: push $_data_66DC60;");
    asm("loc_4B8F68: push $_data_66FC60;");
    asm("loc_4B8F6D: calll *_import_5C70EC;");
    asm("loc_4B8F73: add $0x1C,%esp;");
    asm("loc_4B8F76: push %ebx;");
    asm("loc_4B8F77: push $_data_66FC60;");
    asm("loc_4B8F7C: push $0x1D;");
    asm("loc_4B8F7E: jmp loc_4B9017;");
    asm("loc_4B8F83: call _sub_4C3E10;");
    asm("loc_4B8F88: push %eax;");
    asm("loc_4B8F89: calll *_import_5C61FC;");
    asm("loc_4B8F8F: mov 0x370(%esi),%ecx;");
    asm("loc_4B8F95: add $4,%esp;");
    asm("loc_4B8F98: push %ebx;");
    asm("loc_4B8F99: mov %eax,%edi;");
    asm("loc_4B8F9B: push $1;");
    asm("loc_4B8F9D: lea 8(%edi),%eax;");
    asm("loc_4B8FA0: push %eax;");
    asm("loc_4B8FA1: call _sub_585A90;");
    asm("loc_4B8FA6: call _sub_4C4060;");
    asm("loc_4B8FAB: mov 0x370(%esi),%ecx;");
    asm("loc_4B8FB1: push %eax;");
    asm("loc_4B8FB2: call _sub_5850F0;");
    asm("loc_4B8FB7: mov 0x14(%edi),%eax;");
    asm("loc_4B8FBA: mov 0x384(%esi),%ecx;");
    asm("loc_4B8FC0: mov (%ecx),%edx;");
    asm("loc_4B8FC2: push %ebx;");
    asm("loc_4B8FC3: push %eax;");
    asm("loc_4B8FC4: push $0x1E;");
    asm("loc_4B8FC6: calll *0xA8(%edx);");
    asm("loc_4B8FCC: mov 0x3E8(%esi),%eax;");
    asm("loc_4B8FD2: mov _data_611F78(,%eax,4),%eax;");
    asm("loc_4B8FD9: mov 0x388(%esi),%ecx;");
    asm("loc_4B8FDF: mov (%ecx),%edx;");
    asm("loc_4B8FE1: push %ebx;");
    asm("loc_4B8FE2: push %eax;");
    asm("loc_4B8FE3: push $0x1E;");
    asm("loc_4B8FE5: calll *0xA8(%edx);");
    asm("loc_4B8FEB: mov 0xF0(%edi),%ecx;");
    asm("loc_4B8FF1: mov 0xF4(%edi),%edx;");
    asm("loc_4B8FF7: mov 0xEC(%edi),%ebp;");
    asm("loc_4B8FFD: mov %ecx,0x10(%esp);");
    asm("loc_4B9001: mov %edx,0x14(%esp);");
    asm("loc_4B9005: jmp loc_4B8C1C;");
    asm("loc_4B900A: cmp $2,%eax;");
    asm("loc_4B900D: push %ebx;");
    asm("loc_4B900E: jne loc_4B904F;");
    asm("loc_4B9010: push $0x61C;");
    asm("loc_4B9015: push $0x1E;");
    asm("loc_4B9017: mov 0x3A0(%esi),%ecx;");
    asm("loc_4B901D: mov (%ecx),%eax;");
    asm("loc_4B901F: calll *0xA8(%eax);");
    asm("loc_4B9025: mov 0x3A0(%esi),%ecx;");
    asm("loc_4B902B: mov (%ecx),%edx;");
    asm("loc_4B902D: push %ebx;");
    asm("loc_4B902E: push %ebx;");
    asm("loc_4B902F: push $1;");
    asm("loc_4B9031: calll *0xA8(%edx);");
    asm("loc_4B9037: mov 0x380(%esi),%ecx;");
    asm("loc_4B903D: mov (%ecx),%eax;");
    asm("loc_4B903F: push %ebx;");
    asm("loc_4B9040: push $1;");
    asm("loc_4B9042: push $1;");
    asm("loc_4B9044: calll *0xA8(%eax);");
    asm("loc_4B904A: push %ebx;");
    asm("loc_4B904B: push $1;");
    asm("loc_4B904D: jmp loc_4B90CB;");
    asm("loc_4B904F: mov 0x3A8(%esi,%ecx,4),%eax;");
    asm("loc_4B9056: cmp 0x3A4(%esi),%eax;");
    asm("loc_4B905C: mov 0x3A0(%esi),%ecx;");
    asm("loc_4B9062: mov (%ecx),%edx;");
    asm("loc_4B9064: jle loc_4B90AD;");
    asm("loc_4B9066: push $0x49A;");
    asm("loc_4B906B: push $0x1E;");
    asm("loc_4B906D: calll *0xA8(%edx);");
    asm("loc_4B9073: mov 0x3A0(%esi),%ecx;");
    asm("loc_4B9079: mov (%ecx),%eax;");
    asm("loc_4B907B: push %ebx;");
    asm("loc_4B907C: push %ebx;");
    asm("loc_4B907D: push $1;");
    asm("loc_4B907F: calll *0xA8(%eax);");
    asm("loc_4B9085: mov 0x380(%esi),%ecx;");
    asm("loc_4B908B: mov (%ecx),%edx;");
    asm("loc_4B908D: push %ebx;");
    asm("loc_4B908E: push $1;");
    asm("loc_4B9090: push $1;");
    asm("loc_4B9092: calll *0xA8(%edx);");
    asm("loc_4B9098: mov 0x38C(%esi),%ecx;");
    asm("loc_4B909E: mov (%ecx),%eax;");
    asm("loc_4B90A0: push %ebx;");
    asm("loc_4B90A1: push $1;");
    asm("loc_4B90A3: push $1;");
    asm("loc_4B90A5: calll *0xA8(%eax);");
    asm("loc_4B90AB: jmp loc_4B90DB;");
    asm("loc_4B90AD: push $1;");
    asm("loc_4B90AF: push $1;");
    asm("loc_4B90B1: calll *0xA8(%edx);");
    asm("loc_4B90B7: mov 0x380(%esi),%ecx;");
    asm("loc_4B90BD: mov (%ecx),%eax;");
    asm("loc_4B90BF: push %ebx;");
    asm("loc_4B90C0: push %ebx;");
    asm("loc_4B90C1: push $1;");
    asm("loc_4B90C3: calll *0xA8(%eax);");
    asm("loc_4B90C9: push %ebx;");
    asm("loc_4B90CA: push %ebx;");
    asm("loc_4B90CB: mov 0x38C(%esi),%ecx;");
    asm("loc_4B90D1: mov (%ecx),%edx;");
    asm("loc_4B90D3: push $1;");
    asm("loc_4B90D5: calll *0xA8(%edx);");
    asm("loc_4B90DB: cmpl $0xFFFFFFFE,0x3D0(%esi);");
    asm("loc_4B90E2: jne loc_4B911F;");
    asm("loc_4B90E4: mov 0x380(%esi),%ecx;");
    asm("loc_4B90EA: mov (%ecx),%eax;");
    asm("loc_4B90EC: push %ebx;");
    asm("loc_4B90ED: push $1;");
    asm("loc_4B90EF: push $1;");
    asm("loc_4B90F1: calll *0xA8(%eax);");
    asm("loc_4B90F7: mov 0x38C(%esi),%ecx;");
    asm("loc_4B90FD: mov (%ecx),%edx;");
    asm("loc_4B90FF: push %ebx;");
    asm("loc_4B9100: push $1;");
    asm("loc_4B9102: push $1;");
    asm("loc_4B9104: calll *0xA8(%edx);");
    asm("loc_4B910A: mov 0x3A0(%esi),%esi;");
    asm("loc_4B9110: mov (%esi),%eax;");
    asm("loc_4B9112: push %ebx;");
    asm("loc_4B9113: push $1;");
    asm("loc_4B9115: push $1;");
    asm("loc_4B9117: mov %esi,%ecx;");
    asm("loc_4B9119: calll *0xA8(%eax);");
    asm("loc_4B911F: mov 0x28(%esp),%eax;");
    asm("loc_4B9123: mov (%eax),%edi;");
    asm("loc_4B9125: cmp %eax,%edi;");
    asm("loc_4B9127: movb $3,0x5C(%esp);");
    asm("loc_4B912C: mov %eax,%ebp;");
    asm("loc_4B912E: je loc_4B917B;");
    asm("loc_4B9130: push %ebx;");
    asm("loc_4B9131: lea 0x1C(%esp),%ecx;");
    asm("loc_4B9135: mov %edi,%eax;");
    asm("loc_4B9137: mov (%edi),%edi;");
    asm("loc_4B9139: push %ecx;");
    asm("loc_4B913A: lea 0x6C(%esp),%ecx;");
    asm("loc_4B913E: mov %eax,0x6C(%esp);");
    asm("loc_4B9142: call _sub_53AB20;");
    asm("loc_4B9147: mov (%eax),%esi;");
    asm("loc_4B9149: mov 4(%esi),%eax;");
    asm("loc_4B914C: mov (%esi),%edx;");
    asm("loc_4B914E: mov %edx,(%eax);");
    asm("loc_4B9150: mov 4(%esi),%ecx;");
    asm("loc_4B9153: mov (%esi),%eax;");
    asm("loc_4B9155: mov %ecx,4(%eax);");
    asm("loc_4B9158: push %ebx;");
    asm("loc_4B9159: lea 8(%esi),%ecx;");
    asm("loc_4B915C: call _sub_46EA80;");
    asm("loc_4B9161: push %esi;");
    asm("loc_4B9162: call _sub_5B7E1D;");
    asm("loc_4B9167: mov 0x30(%esp),%ecx;");
    asm("loc_4B916B: add $4,%esp;");
    asm("loc_4B916E: dec %ecx;");
    asm("loc_4B916F: cmp %ebp,%edi;");
    asm("loc_4B9171: mov %ecx,0x2C(%esp);");
    asm("loc_4B9175: jne loc_4B9130;");
    asm("loc_4B9177: mov 0x28(%esp),%eax;");
    asm("loc_4B917B: push %eax;");
    asm("loc_4B917C: call _sub_5B7E1D;");
    asm("loc_4B9181: mov 0x38(%esp),%eax;");
    asm("loc_4B9185: mov %ebx,0x2C(%esp);");
    asm("loc_4B9189: mov %ebx,0x30(%esp);");
    asm("loc_4B918D: mov (%eax),%edi;");
    asm("loc_4B918F: add $4,%esp;");
    asm("loc_4B9192: cmp %eax,%edi;");
    asm("loc_4B9194: movb $0,0x5C(%esp);");
    asm("loc_4B9199: mov %eax,%ebp;");
    asm("loc_4B919B: je loc_4B91D6;");
    asm("loc_4B919D: lea (%ecx),%ecx;");
    asm("loc_4B91A0: mov %edi,%esi;");
    asm("loc_4B91A2: mov 4(%esi),%eax;");
    asm("loc_4B91A5: mov (%esi),%edx;");
    asm("loc_4B91A7: mov (%edi),%edi;");
    asm("loc_4B91A9: mov %edx,(%eax);");
    asm("loc_4B91AB: mov 4(%esi),%ecx;");
    asm("loc_4B91AE: mov (%esi),%eax;");
    asm("loc_4B91B0: mov %ecx,4(%eax);");
    asm("loc_4B91B3: push %ebx;");
    asm("loc_4B91B4: lea 8(%esi),%ecx;");
    asm("loc_4B91B7: call _sub_46EA80;");
    asm("loc_4B91BC: push %esi;");
    asm("loc_4B91BD: call _sub_5B7E1D;");
    asm("loc_4B91C2: mov 0x3C(%esp),%ecx;");
    asm("loc_4B91C6: add $4,%esp;");
    asm("loc_4B91C9: dec %ecx;");
    asm("loc_4B91CA: cmp %ebp,%edi;");
    asm("loc_4B91CC: mov %ecx,0x38(%esp);");
    asm("loc_4B91D0: jne loc_4B91A0;");
    asm("loc_4B91D2: mov 0x34(%esp),%eax;");
    asm("loc_4B91D6: push %eax;");
    asm("loc_4B91D7: call _sub_5B7E1D;");
    asm("loc_4B91DC: mov 0x44(%esp),%eax;");
    asm("loc_4B91E0: mov %ebx,0x38(%esp);");
    asm("loc_4B91E4: mov %ebx,0x3C(%esp);");
    asm("loc_4B91E8: mov (%eax),%edi;");
    asm("loc_4B91EA: add $4,%esp;");
    asm("loc_4B91ED: cmp %eax,%edi;");
    asm("loc_4B91EF: movl $0xFFFFFFFF,0x5C(%esp);");
    asm("loc_4B91F7: mov %eax,%ebx;");
    asm("loc_4B91F9: je loc_4B9235;");
    asm("loc_4B91FB: nop;");
    asm("loc_4B91FC: lea (%esp),%esp;");
    asm("loc_4B9200: mov %edi,%esi;");
    asm("loc_4B9202: mov 4(%esi),%edx;");
    asm("loc_4B9205: mov (%esi),%eax;");
    asm("loc_4B9207: mov (%edi),%edi;");
    asm("loc_4B9209: mov %eax,(%edx);");
    asm("loc_4B920B: mov (%esi),%ecx;");
    asm("loc_4B920D: mov 4(%esi),%edx;");
    asm("loc_4B9210: mov %edx,4(%ecx);");
    asm("loc_4B9213: lea 8(%esi),%ecx;");
    asm("loc_4B9216: call _sub_45EEB0;");
    asm("loc_4B921B: push %esi;");
    asm("loc_4B921C: call _sub_5B7E1D;");
    asm("loc_4B9221: mov 0x48(%esp),%ecx;");
    asm("loc_4B9225: add $4,%esp;");
    asm("loc_4B9228: dec %ecx;");
    asm("loc_4B9229: cmp %ebx,%edi;");
    asm("loc_4B922B: mov %ecx,0x44(%esp);");
    asm("loc_4B922F: jne loc_4B9200;");
    asm("loc_4B9231: mov 0x40(%esp),%eax;");
    asm("loc_4B9235: push %eax;");
    asm("loc_4B9236: call _sub_5B7E1D;");
    asm("loc_4B923B: mov 0x58(%esp),%ecx;");
    asm("loc_4B923F: add $4,%esp;");
    asm("loc_4B9242: pop %edi;");
    asm("loc_4B9243: pop %esi;");
    asm("loc_4B9244: pop %ebp;");
    asm("loc_4B9245: pop %ebx;");
    asm("loc_4B9246: mov %ecx,%fs:0;");
    asm("loc_4B924D: add $0x50,%esp;");
    asm("loc_4B9250: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9260() // _sub_4B9260
{
    __DEBUG_ASM(4B9260);
    // chunk 0x4B9260 _sub_4B9260
    asm("loc_4B9260: sub $0xC,%esp;");
    asm("loc_4B9263: push %esi;");
    asm("loc_4B9264: mov %ecx,%esi;");
    asm("loc_4B9266: push %edi;");
    asm("loc_4B9267: mov 0xC(%esi),%edi;");
    asm("loc_4B926A: test %edi,%edi;");
    asm("loc_4B926C: je loc_4B92DE;");
    asm("loc_4B926E: mov %edi,%edi;");
    asm("loc_4B9270: movl $0,0x70(%edi);");
    asm("loc_4B9277: mov 0x3D4(%esi),%eax;");
    asm("loc_4B927D: test %eax,%eax;");
    asm("loc_4B927F: jl loc_4B92A7;");
    asm("loc_4B9281: mov (%edi),%eax;");
    asm("loc_4B9283: mov %edi,%ecx;");
    asm("loc_4B9285: calll *8(%eax);");
    asm("loc_4B9288: mov 0x3D4(%esi),%ecx;");
    asm("loc_4B928E: cmp 0x334(%esi,%ecx,4),%eax;");
    asm("loc_4B9295: je loc_4B92A0;");
    asm("loc_4B9297: cmp 0x340(%esi,%ecx,4),%eax;");
    asm("loc_4B929E: jne loc_4B92A7;");
    asm("loc_4B92A0: movl $1,0x70(%edi);");
    asm("loc_4B92A7: mov 0x3D0(%esi),%eax;");
    asm("loc_4B92AD: test %eax,%eax;");
    asm("loc_4B92AF: jl loc_4B92D7;");
    asm("loc_4B92B1: mov (%edi),%edx;");
    asm("loc_4B92B3: mov %edi,%ecx;");
    asm("loc_4B92B5: calll *8(%edx);");
    asm("loc_4B92B8: mov 0x3D0(%esi),%ecx;");
    asm("loc_4B92BE: cmp 0x334(%esi,%ecx,4),%eax;");
    asm("loc_4B92C5: je loc_4B92D0;");
    asm("loc_4B92C7: cmp 0x340(%esi,%ecx,4),%eax;");
    asm("loc_4B92CE: jne loc_4B92D7;");
    asm("loc_4B92D0: movl $2,0x70(%edi);");
    asm("loc_4B92D7: mov 8(%edi),%edi;");
    asm("loc_4B92DA: test %edi,%edi;");
    asm("loc_4B92DC: jne loc_4B9270;");
    asm("loc_4B92DE: mov 0x3CC(%esi),%eax;");
    asm("loc_4B92E4: push %eax;");
    asm("loc_4B92E5: lea 0x334(%esi),%ecx;");
    asm("loc_4B92EB: push %ecx;");
    asm("loc_4B92EC: call _sub_5A4B50;");
    asm("loc_4B92F1: mov 0x3CC(%esi),%edx;");
    asm("loc_4B92F7: push %edx;");
    asm("loc_4B92F8: lea 0x340(%esi),%eax;");
    asm("loc_4B92FE: push %eax;");
    asm("loc_4B92FF: call _sub_5A4B50;");
    asm("loc_4B9304: add $0x10,%esp;");
    asm("loc_4B9307: mov %esi,%ecx;");
    asm("loc_4B9309: call _sub_5A0760;");
    asm("loc_4B930E: mov 0x370(%esi),%ecx;");
    asm("loc_4B9314: mov (%ecx),%edi;");
    asm("loc_4B9316: lea 8(%esp),%edx;");
    asm("loc_4B931A: push %edx;");
    asm("loc_4B931B: call _sub_59DA70;");
    asm("loc_4B9320: mov 0x370(%esi),%ecx;");
    asm("loc_4B9326: add $4,%esp;");
    asm("loc_4B9329: push %eax;");
    asm("loc_4B932A: calll *0x10(%edi);");
    asm("loc_4B932D: test %al,%al;");
    asm("loc_4B932F: je loc_4B9362;");
    asm("loc_4B9331: testb $3,_data_616850;");
    asm("loc_4B9338: je loc_4B935B;");
    asm("loc_4B933A: mov 0x370(%esi),%ecx;");
    asm("loc_4B9340: xor %eax,%eax;");
    asm("loc_4B9342: mov 0x3E4(%esi),%al;");
    asm("loc_4B9348: push %eax;");
    asm("loc_4B9349: call _sub_584C80;");
    asm("loc_4B934E: pop %edi;");
    asm("loc_4B934F: movb $0,0x3E4(%esi);");
    asm("loc_4B9356: pop %esi;");
    asm("loc_4B9357: add $0xC,%esp;");
    asm("loc_4B935A: ret;");
    asm("loc_4B935B: movb $1,0x3E4(%esi);");
    asm("loc_4B9362: pop %edi;");
    asm("loc_4B9363: pop %esi;");
    asm("loc_4B9364: add $0xC,%esp;");
    asm("loc_4B9367: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9370() // _sub_4B9370
{
    __DEBUG_ASM(4B9370);
    // chunk 0x4B9370 _sub_4B9370
    asm("loc_4B9370: cmpl $0x10,4(%esp);");
    asm("loc_4B9375: jne loc_4B93C8;");
    asm("loc_4B9377: push %edi;");
    asm("loc_4B9378: push $0;");
    asm("loc_4B937A: lea -0x32C(%ecx),%edi;");
    asm("loc_4B9380: call _sub_4424F0;");
    asm("loc_4B9385: add $4,%esp;");
    asm("loc_4B9388: call _sub_442850;");
    asm("loc_4B938D: test %edi,%edi;");
    asm("loc_4B938F: je loc_4B93C2;");
    asm("loc_4B9391: mov 0xC(%edi),%eax;");
    asm("loc_4B9394: test %eax,%eax;");
    asm("loc_4B9396: je loc_4B93B3;");
    asm("loc_4B9398: push %esi;");
    asm("loc_4B9399: lea (%esp),%esp;");
    asm("loc_4B93A0: mov 8(%eax),%esi;");
    asm("loc_4B93A3: push %eax;");
    asm("loc_4B93A4: call _sub_43D2A0;");
    asm("loc_4B93A9: add $4,%esp;");
    asm("loc_4B93AC: test %esi,%esi;");
    asm("loc_4B93AE: mov %esi,%eax;");
    asm("loc_4B93B0: jne loc_4B93A0;");
    asm("loc_4B93B2: pop %esi;");
    asm("loc_4B93B3: mov (%edi),%eax;");
    asm("loc_4B93B5: mov %edi,%ecx;");
    asm("loc_4B93B7: calll *0x28(%eax);");
    asm("loc_4B93BA: mov (%edi),%edx;");
    asm("loc_4B93BC: push $1;");
    asm("loc_4B93BE: mov %edi,%ecx;");
    asm("loc_4B93C0: calll *(%edx);");
    asm("loc_4B93C2: mov $1,%al;");
    asm("loc_4B93C4: pop %edi;");
    asm("loc_4B93C5: ret $4;");
    asm("loc_4B93C8: xor %al,%al;");
    asm("loc_4B93CA: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B93D0() // _sub_4B93D0
{
    __DEBUG_ASM(4B93D0);
    // chunk 0x4B93D0 _sub_4B93D0
    asm("loc_4B93D0: push %esi;");
    asm("loc_4B93D1: mov %ecx,%esi;");
    asm("loc_4B93D3: call _sub_5A17B0;");
    asm("loc_4B93D8: call _sub_4C55D0;");
    asm("loc_4B93DD: cmp 0x420(%esi),%eax;");
    asm("loc_4B93E3: je loc_4B93ED;");
    asm("loc_4B93E5: mov %esi,%ecx;");
    asm("loc_4B93E7: pop %esi;");
    asm("loc_4B93E8: jmp _sub_4B93F0;");
    asm("loc_4B93ED: pop %esi;");
    asm("loc_4B93EE: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B93F0() // _sub_4B93F0
{
    __DEBUG_ASM(4B93F0);
    // chunk 0x4B93F0 _sub_4B93F0
    asm("loc_4B93F0: sub $0x20C,%esp;");
    asm("loc_4B93F6: push %ebx;");
    asm("loc_4B93F7: push %ebp;");
    asm("loc_4B93F8: push %esi;");
    asm("loc_4B93F9: push %edi;");
    asm("loc_4B93FA: mov %ecx,%ebx;");
    asm("loc_4B93FC: call _sub_4C55D0;");
    asm("loc_4B9401: mov %eax,0x10(%esp);");
    asm("loc_4B9405: mov %eax,0x420(%ebx);");
    asm("loc_4B940B: mov _data_66873C,%eax;");
    asm("loc_4B9410: push %eax;");
    asm("loc_4B9411: mov $_data_668708,%ecx;");
    asm("loc_4B9416: call _sub_43A510;");
    asm("loc_4B941B: mov %eax,0x14(%esp);");
    asm("loc_4B941F: mov 0x3CC(%ebx),%eax;");
    asm("loc_4B9425: xor %ebp,%ebp;");
    asm("loc_4B9427: test %eax,%eax;");
    asm("loc_4B9429: jle loc_4B94C0;");
    asm("loc_4B942F: lea 0x3FC(%ebx),%esi;");
    asm("loc_4B9435: mov -0x3C(%esi),%edi;");
    asm("loc_4B9438: mov 0x14(%esp),%ecx;");
    asm("loc_4B943C: push %edi;");
    asm("loc_4B943D: mov %ebp,0x18(%esi);");
    asm("loc_4B9440: movl $0,(%esi);");
    asm("loc_4B9446: call _sub_438160;");
    asm("loc_4B944B: fstps 0x18(%esp);");
    asm("loc_4B944F: mov 0x14(%esp),%ecx;");
    asm("loc_4B9453: push %edi;");
    asm("loc_4B9454: call _sub_4381C0;");
    asm("loc_4B9459: flds 0x18(%esp);");
    asm("loc_4B945D: call _sub_5B7EC0;");
    asm("loc_4B9462: mov %eax,0xC(%esi);");
    asm("loc_4B9465: mov 0x10(%esp),%eax;");
    asm("loc_4B9469: test %eax,%eax;");
    asm("loc_4B946B: jl loc_4B9497;");
    asm("loc_4B946D: cmp $0x3E7,%eax;");
    asm("loc_4B9472: jge loc_4B9497;");
    asm("loc_4B9474: fildl 0x10(%esp);");
    asm("loc_4B9478: fcomps 0x18(%esp);");
    asm("loc_4B947C: fnstsw %ax;");
    asm("loc_4B947E: test $5,%ah;");
    asm("loc_4B9481: jp loc_4B9497;");
    asm("loc_4B9483: fstp %st(0);");
    asm("loc_4B9485: calll *_import_5C60D0;");
    asm("loc_4B948B: test %al,%al;");
    asm("loc_4B948D: je loc_4B94AA;");
    asm("loc_4B948F: movl $1,(%esi);");
    asm("loc_4B9495: jmp loc_4B94AA;");
    asm("loc_4B9497: fcomps 0x3F8(%ebx);");
    asm("loc_4B949D: fnstsw %ax;");
    asm("loc_4B949F: test $0x41,%ah;");
    asm("loc_4B94A2: jne loc_4B94AA;");
    asm("loc_4B94A4: movl $2,(%esi);");
    asm("loc_4B94AA: mov 0x3CC(%ebx),%eax;");
    asm("loc_4B94B0: inc %ebp;");
    asm("loc_4B94B1: add $4,%esi;");
    asm("loc_4B94B4: cmp %eax,%ebp;");
    asm("loc_4B94B6: jl loc_4B9435;");
    asm("loc_4B94BC: lea (%esp),%esp;");
    asm("loc_4B94C0: mov 0x3CC(%ebx),%eax;");
    asm("loc_4B94C6: xor %edi,%edi;");
    asm("loc_4B94C8: dec %eax;");
    asm("loc_4B94C9: test %eax,%eax;");
    asm("loc_4B94CB: mov $1,%dl;");
    asm("loc_4B94CD: jle loc_4B9567;");
    asm("loc_4B94D3: lea 0x400(%ebx),%eax;");
    asm("loc_4B94D9: lea (%esp),%esp;");
    asm("loc_4B94E0: mov -4(%eax),%ecx;");
    asm("loc_4B94E3: mov (%eax),%esi;");
    asm("loc_4B94E5: cmp %esi,%ecx;");
    asm("loc_4B94E7: jle loc_4B9550;");
    asm("loc_4B94E9: mov %esi,-4(%eax);");
    asm("loc_4B94EC: mov 0xC(%eax),%esi;");
    asm("loc_4B94EF: mov %ecx,(%eax);");
    asm("loc_4B94F1: mov 8(%eax),%ecx;");
    asm("loc_4B94F4: mov %esi,8(%eax);");
    asm("loc_4B94F7: mov -0x10(%eax),%esi;");
    asm("loc_4B94FA: mov %ecx,0xC(%eax);");
    asm("loc_4B94FD: mov -0x14(%eax),%ecx;");
    asm("loc_4B9500: mov %esi,-0x14(%eax);");
    asm("loc_4B9503: mov -0x54(%eax),%esi;");
    asm("loc_4B9506: mov %ecx,-0x10(%eax);");
    asm("loc_4B9509: mov -0x58(%eax),%ecx;");
    asm("loc_4B950C: mov %esi,-0x58(%eax);");
    asm("loc_4B950F: mov -0x48(%eax),%esi;");
    asm("loc_4B9512: mov %ecx,-0x54(%eax);");
    asm("loc_4B9515: mov -0x4C(%eax),%ecx;");
    asm("loc_4B9518: mov %esi,-0x4C(%eax);");
    asm("loc_4B951B: mov -0x3C(%eax),%esi;");
    asm("loc_4B951E: mov %ecx,-0x48(%eax);");
    asm("loc_4B9521: mov -0x40(%eax),%ecx;");
    asm("loc_4B9524: mov %esi,-0x40(%eax);");
    asm("loc_4B9527: mov 0x28(%eax),%esi;");
    asm("loc_4B952A: mov %ecx,-0x3C(%eax);");
    asm("loc_4B952D: mov 0x24(%eax),%ecx;");
    asm("loc_4B9530: mov %esi,0x24(%eax);");
    asm("loc_4B9533: mov 0x34(%eax),%esi;");
    asm("loc_4B9536: mov %ecx,0x28(%eax);");
    asm("loc_4B9539: mov 0x30(%eax),%ecx;");
    asm("loc_4B953C: mov %esi,0x30(%eax);");
    asm("loc_4B953F: mov 0x18(%eax),%esi;");
    asm("loc_4B9542: mov %ecx,0x34(%eax);");
    asm("loc_4B9545: mov 0x14(%eax),%ecx;");
    asm("loc_4B9548: xor %dl,%dl;");
    asm("loc_4B954A: mov %esi,0x14(%eax);");
    asm("loc_4B954D: mov %ecx,0x18(%eax);");
    asm("loc_4B9550: mov 0x3CC(%ebx),%ecx;");
    asm("loc_4B9556: inc %edi;");
    asm("loc_4B9557: add $4,%eax;");
    asm("loc_4B955A: dec %ecx;");
    asm("loc_4B955B: cmp %ecx,%edi;");
    asm("loc_4B955D: jl loc_4B94E0;");
    asm("loc_4B955F: test %dl,%dl;");
    asm("loc_4B9561: je loc_4B94C0;");
    asm("loc_4B9567: mov 0x3CC(%ebx),%eax;");
    asm("loc_4B956D: xor %ebp,%ebp;");
    asm("loc_4B956F: test %eax,%eax;");
    asm("loc_4B9571: jle loc_4B969F;");
    asm("loc_4B9577: lea 0x34C(%ebx),%esi;");
    asm("loc_4B957D: lea (%ecx),%ecx;");
    asm("loc_4B9580: mov 0xD8(%esi),%eax;");
    asm("loc_4B9586: mov (%esi),%ecx;");
    asm("loc_4B9588: mov (%ecx),%edx;");
    asm("loc_4B958A: push $0;");
    asm("loc_4B958C: push %eax;");
    asm("loc_4B958D: push $4;");
    asm("loc_4B958F: calll *0xA8(%edx);");
    asm("loc_4B9595: mov 0xE4(%esi),%eax;");
    asm("loc_4B959B: mov 0xC(%esi),%ecx;");
    asm("loc_4B959E: mov (%ecx),%edx;");
    asm("loc_4B95A0: push $0;");
    asm("loc_4B95A2: push %eax;");
    asm("loc_4B95A3: push $0x1E;");
    asm("loc_4B95A5: calll *0xA8(%edx);");
    asm("loc_4B95AB: mov 0xA0(%esi),%eax;");
    asm("loc_4B95B1: mov _data_611F78(,%eax,4),%eax;");
    asm("loc_4B95B8: mov 0xF0(%esi),%ecx;");
    asm("loc_4B95BE: mov (%ecx),%edx;");
    asm("loc_4B95C0: push $0;");
    asm("loc_4B95C2: push %eax;");
    asm("loc_4B95C3: push $0x1E;");
    asm("loc_4B95C5: calll *0xA8(%edx);");
    asm("loc_4B95CB: mov 0x5C(%esi),%ecx;");
    asm("loc_4B95CE: push $0xFFFFFFFF;");
    asm("loc_4B95D0: push %ecx;");
    asm("loc_4B95D1: lea 0x24(%esp),%edx;");
    asm("loc_4B95D5: push %edx;");
    asm("loc_4B95D6: call _sub_4779A0;");
    asm("loc_4B95DB: mov 0x18(%esi),%ecx;");
    asm("loc_4B95DE: mov (%ecx),%eax;");
    asm("loc_4B95E0: add $0xC,%esp;");
    asm("loc_4B95E3: push $0;");
    asm("loc_4B95E5: lea 0x20(%esp),%edx;");
    asm("loc_4B95E9: push %edx;");
    asm("loc_4B95EA: push $0x1D;");
    asm("loc_4B95EC: calll *0xA8(%eax);");
    asm("loc_4B95F2: mov 0xB0(%esi),%ecx;");
    asm("loc_4B95F8: xor %al,%al;");
    asm("loc_4B95FA: test %ecx,%ecx;");
    asm("loc_4B95FC: je loc_4B9600;");
    asm("loc_4B95FE: mov $1,%al;");
    asm("loc_4B9600: mov -0x18(%esi),%ecx;");
    asm("loc_4B9603: movzbl %al,%edi;");
    asm("loc_4B9606: push %edi;");
    asm("loc_4B9607: lea 0x18(%esp),%edx;");
    asm("loc_4B960B: push %edx;");
    asm("loc_4B960C: movb $0x80,0x1C(%esp);");
    asm("loc_4B9611: movb $0x80,0x1D(%esp);");
    asm("loc_4B9616: movb $0x80,0x1E(%esp);");
    asm("loc_4B961B: movb $0xFF,0x1F(%esp);");
    asm("loc_4B9620: mov (%ecx),%eax;");
    asm("loc_4B9622: push $0x33;");
    asm("loc_4B9624: calll *0xA8(%eax);");
    asm("loc_4B962A: mov -0xC(%esi),%ecx;");
    asm("loc_4B962D: mov (%ecx),%eax;");
    asm("loc_4B962F: push %edi;");
    asm("loc_4B9630: lea 0x18(%esp),%edx;");
    asm("loc_4B9634: push %edx;");
    asm("loc_4B9635: push $0x33;");
    asm("loc_4B9637: calll *0xA8(%eax);");
    asm("loc_4B963D: mov 0xC(%esi),%ecx;");
    asm("loc_4B9640: push %edi;");
    asm("loc_4B9641: lea 0x14(%esp),%edx;");
    asm("loc_4B9645: push %edx;");
    asm("loc_4B9646: movb $0xC0,0x18(%esp);");
    asm("loc_4B964B: movb $0xC0,0x19(%esp);");
    asm("loc_4B9650: movb $0xC0,0x1A(%esp);");
    asm("loc_4B9655: movb $0xFF,0x1B(%esp);");
    asm("loc_4B965A: mov (%ecx),%eax;");
    asm("loc_4B965C: push $0x33;");
    asm("loc_4B965E: calll *0xA8(%eax);");
    asm("loc_4B9664: mov 0xF0(%esi),%ecx;");
    asm("loc_4B966A: mov (%ecx),%eax;");
    asm("loc_4B966C: push %edi;");
    asm("loc_4B966D: lea 0x14(%esp),%edx;");
    asm("loc_4B9671: push %edx;");
    asm("loc_4B9672: push $0x33;");
    asm("loc_4B9674: calll *0xA8(%eax);");
    asm("loc_4B967A: mov 0x18(%esi),%ecx;");
    asm("loc_4B967D: mov (%ecx),%eax;");
    asm("loc_4B967F: push %edi;");
    asm("loc_4B9680: lea 0x14(%esp),%edx;");
    asm("loc_4B9684: push %edx;");
    asm("loc_4B9685: push $0x33;");
    asm("loc_4B9687: calll *0xA8(%eax);");
    asm("loc_4B968D: mov 0x3CC(%ebx),%eax;");
    asm("loc_4B9693: inc %ebp;");
    asm("loc_4B9694: add $4,%esi;");
    asm("loc_4B9697: cmp %eax,%ebp;");
    asm("loc_4B9699: jl loc_4B9580;");
    asm("loc_4B969F: pop %edi;");
    asm("loc_4B96A0: pop %esi;");
    asm("loc_4B96A1: pop %ebp;");
    asm("loc_4B96A2: pop %ebx;");
    asm("loc_4B96A3: add $0x20C,%esp;");
    asm("loc_4B96A9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B96B0() // _sub_4B96B0
{
    __DEBUG_ASM(4B96B0);
    // chunk 0x4B96B0 _sub_4B96B0
    asm("loc_4B96B0: push %ebx;");
    asm("loc_4B96B1: mov %ecx,%ebx;");
    asm("loc_4B96B3: xor %eax,%eax;");
    asm("loc_4B96B5: push %esi;");
    asm("loc_4B96B6: mov 0xC(%esp),%esi;");
    asm("loc_4B96BA: cmp %eax,%esi;");
    asm("loc_4B96BC: mov %eax,8(%ebx);");
    asm("loc_4B96BF: mov %al,0xC(%ebx);");
    asm("loc_4B96C2: movl $_off_5CB554,(%ebx);");
    asm("loc_4B96C8: mov %eax,4(%ebx);");
    asm("loc_4B96CB: jne loc_4B96D2;");
    asm("loc_4B96CD: mov %al,0xC(%ebx);");
    asm("loc_4B96D0: jmp loc_4B9707;");
    asm("loc_4B96D2: push %ebp;");
    asm("loc_4B96D3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4B96D6: xor %eax,%eax;");
    asm("loc_4B96D8: push %edi;");
    asm("loc_4B96D9: mov %esi,%edi;");
    asm("loc_4B96DB: repne scas (%edi),%al;");
    asm("loc_4B96DD: not %ecx;");
    asm("loc_4B96DF: dec %ecx;");
    asm("loc_4B96E0: mov %ecx,%eax;");
    asm("loc_4B96E2: cmp $0x20,%eax;");
    asm("loc_4B96E5: lea 0xC(%ebx),%ebp;");
    asm("loc_4B96E8: jb loc_4B96EF;");
    asm("loc_4B96EA: mov $0x1F,%eax;");
    asm("loc_4B96EF: mov %eax,%ecx;");
    asm("loc_4B96F1: mov %ecx,%edx;");
    asm("loc_4B96F3: shr $2,%ecx;");
    asm("loc_4B96F6: mov %ebp,%edi;");
    asm("loc_4B96F8: rep movsl (%esi),(%edi);");
    asm("loc_4B96FA: mov %edx,%ecx;");
    asm("loc_4B96FC: and $3,%ecx;");
    asm("loc_4B96FF: rep movsb (%esi),(%edi);");
    asm("loc_4B9701: pop %edi;");
    asm("loc_4B9702: movb $0,(%eax,%ebp);");
    asm("loc_4B9706: pop %ebp;");
    asm("loc_4B9707: push %ebx;");
    asm("loc_4B9708: mov %eax,8(%ebx);");
    asm("loc_4B970B: call _sub_59DAB0;");
    asm("loc_4B9710: add $4,%esp;");
    asm("loc_4B9713: pop %esi;");
    asm("loc_4B9714: movl $_off_5D5920,(%ebx);");
    asm("loc_4B971A: mov %ebx,%eax;");
    asm("loc_4B971C: pop %ebx;");
    asm("loc_4B971D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9720() // _sub_4B9720
{
    __DEBUG_ASM(4B9720);
    // chunk 0x4B9720 _sub_4B9720
    asm("loc_4B9720: push $0xFFFFFFFF;");
    asm("loc_4B9722: push $_sub_5BD34B;");
    asm("loc_4B9727: mov %fs:0,%eax;");
    asm("loc_4B972D: push %eax;");
    asm("loc_4B972E: mov %esp,%fs:0;");
    asm("loc_4B9735: push %ecx;");
    asm("loc_4B9736: push %esi;");
    asm("loc_4B9737: push %edi;");
    asm("loc_4B9738: push $0x448;");
    asm("loc_4B973D: mov %ecx,%edi;");
    asm("loc_4B973F: call _sub_5B7E84;");
    asm("loc_4B9744: mov %eax,%esi;");
    asm("loc_4B9746: add $4,%esp;");
    asm("loc_4B9749: mov %esi,8(%esp);");
    asm("loc_4B974D: test %esi,%esi;");
    asm("loc_4B974F: movl $0,0x14(%esp);");
    asm("loc_4B9757: je loc_4B9783;");
    asm("loc_4B9759: mov %esi,%ecx;");
    asm("loc_4B975B: call _sub_59F860;");
    asm("loc_4B9760: movl $_off_5CBED8,0x32C(%esi);");
    asm("loc_4B976A: movl $_off_5D593C,(%esi);");
    asm("loc_4B9770: movl $_off_5D5930,0x7C(%esi);");
    asm("loc_4B9777: movl $_off_5D5928,0x32C(%esi);");
    asm("loc_4B9781: jmp loc_4B9785;");
    asm("loc_4B9783: xor %esi,%esi;");
    asm("loc_4B9785: mov 0x20(%esp),%ecx;");
    asm("loc_4B9789: mov 0x1C(%esp),%edx;");
    asm("loc_4B978D: mov (%esi),%eax;");
    asm("loc_4B978F: push %ecx;");
    asm("loc_4B9790: add $0xC,%edi;");
    asm("loc_4B9793: push %edx;");
    asm("loc_4B9794: mov %esi,%ecx;");
    asm("loc_4B9796: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4B979E: mov %edi,0x10(%esi);");
    asm("loc_4B97A1: calll *0x24(%eax);");
    asm("loc_4B97A4: test %al,%al;");
    asm("loc_4B97A6: jne loc_4B97C5;");
    asm("loc_4B97A8: mov (%esi),%eax;");
    asm("loc_4B97AA: push $1;");
    asm("loc_4B97AC: mov %esi,%ecx;");
    asm("loc_4B97AE: calll *(%eax);");
    asm("loc_4B97B0: pop %edi;");
    asm("loc_4B97B1: xor %eax,%eax;");
    asm("loc_4B97B3: pop %esi;");
    asm("loc_4B97B4: mov 4(%esp),%ecx;");
    asm("loc_4B97B8: mov %ecx,%fs:0;");
    asm("loc_4B97BF: add $0x10,%esp;");
    asm("loc_4B97C2: ret $8;");
    asm("loc_4B97C5: mov 0xC(%esp),%ecx;");
    asm("loc_4B97C9: pop %edi;");
    asm("loc_4B97CA: mov %esi,%eax;");
    asm("loc_4B97CC: pop %esi;");
    asm("loc_4B97CD: mov %ecx,%fs:0;");
    asm("loc_4B97D4: add $0x10,%esp;");
    asm("loc_4B97D7: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B97E0() // _sub_4B97E0
{
    __DEBUG_ASM(4B97E0);
    // chunk 0x4B97E0 _sub_4B97E0
    asm("loc_4B97E0: push %esi;");
    asm("loc_4B97E1: mov %ecx,%esi;");
    asm("loc_4B97E3: call _sub_4B9800;");
    asm("loc_4B97E8: testb $1,8(%esp);");
    asm("loc_4B97ED: je loc_4B97F8;");
    asm("loc_4B97EF: push %esi;");
    asm("loc_4B97F0: call _sub_5B7E1D;");
    asm("loc_4B97F5: add $4,%esp;");
    asm("loc_4B97F8: mov %esi,%eax;");
    asm("loc_4B97FA: pop %esi;");
    asm("loc_4B97FB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9800() // _sub_4B9800
{
    __DEBUG_ASM(4B9800);
    // chunk 0x4B9800 _sub_4B9800
    asm("loc_4B9800: push $0xFFFFFFFF;");
    asm("loc_4B9802: push $_sub_5BD368;");
    asm("loc_4B9807: mov %fs:0,%eax;");
    asm("loc_4B980D: push %eax;");
    asm("loc_4B980E: mov %esp,%fs:0;");
    asm("loc_4B9815: push %ecx;");
    asm("loc_4B9816: push %esi;");
    asm("loc_4B9817: mov %ecx,%esi;");
    asm("loc_4B9819: mov %esi,4(%esp);");
    asm("loc_4B981D: xor %ecx,%ecx;");
    asm("loc_4B981F: cmp %ecx,%esi;");
    asm("loc_4B9821: mov %ecx,0x10(%esp);");
    asm("loc_4B9825: je loc_4B982D;");
    asm("loc_4B9827: lea 0x32C(%esi),%ecx;");
    asm("loc_4B982D: call _sub_576010;");
    asm("loc_4B9832: mov %esi,%ecx;");
    asm("loc_4B9834: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4B983C: call _sub_59FA50;");
    asm("loc_4B9841: mov 8(%esp),%ecx;");
    asm("loc_4B9845: pop %esi;");
    asm("loc_4B9846: mov %ecx,%fs:0;");
    asm("loc_4B984D: add $0x10,%esp;");
    asm("loc_4B9850: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9860() // _sub_4B9860
{
    __DEBUG_ASM(4B9860);
    // chunk 0x4B9860 _sub_4B9860
    asm("loc_4B9860: mov _data_5D59F0,%eax;");
    asm("loc_4B9865: mov %eax,_data_6723F4;");
    asm("loc_4B986A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9870() // _sub_4B9870
{
    __DEBUG_ASM(4B9870);
    // chunk 0x4B9870 _sub_4B9870
    asm("loc_4B9870: mov _data_5D59F0,%eax;");
    asm("loc_4B9875: mov %eax,_data_6723F0;");
    asm("loc_4B987A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9880() // _sub_4B9880
{
    __DEBUG_ASM(4B9880);
    // chunk 0x4B9880 _sub_4B9880
    asm("loc_4B9880: mov _data_5D59F4,%eax;");
    asm("loc_4B9885: mov %eax,_data_6723EC;");
    asm("loc_4B988A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9890() // _sub_4B9890
{
    __DEBUG_ASM(4B9890);
    // chunk 0x4B9890 _sub_4B9890
    asm("loc_4B9890: push $_data_5CEDC4;");
    asm("loc_4B9895: mov $_data_6723C0,%ecx;");
    asm("loc_4B989A: call _sub_4BCFC0;");
    asm("loc_4B989F: push $_sub_4B98B0;");
    asm("loc_4B98A4: call _sub_5B7E6C;");
    asm("loc_4B98A9: pop %ecx;");
    asm("loc_4B98AA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B98B0() // _unknown_libname_38
{
    __DEBUG_ASM(4B98B0);
    // chunk 0x4B98B0 _sub_4B98B0
    asm("loc_4B98B0: mov $_data_6723C0,%ecx;");
    asm("loc_4B98B5: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B98C0() // _sub_4B98C0
{
    __DEBUG_ASM(4B98C0);
    // chunk 0x4B98C0 _sub_4B98C0
    asm("loc_4B98C0: push $_data_5D59FC;");
    asm("loc_4B98C5: mov $_data_672394,%ecx;");
    asm("loc_4B98CA: call _sub_4BD100;");
    asm("loc_4B98CF: push $_sub_4B98E0;");
    asm("loc_4B98D4: call _sub_5B7E6C;");
    asm("loc_4B98D9: pop %ecx;");
    asm("loc_4B98DA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B98E0() // _unknown_libname_39
{
    __DEBUG_ASM(4B98E0);
    // chunk 0x4B98E0 _sub_4B98E0
    asm("loc_4B98E0: mov $_data_672394,%ecx;");
    asm("loc_4B98E5: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B98F0() // _sub_4B98F0
{
    __DEBUG_ASM(4B98F0);
    // chunk 0x4B98F0 _sub_4B98F0
    asm("loc_4B98F0: push $_data_5D5A14;");
    asm("loc_4B98F5: mov $_data_672368,%ecx;");
    asm("loc_4B98FA: call _sub_4BD250;");
    asm("loc_4B98FF: push $_sub_4B9910;");
    asm("loc_4B9904: call _sub_5B7E6C;");
    asm("loc_4B9909: pop %ecx;");
    asm("loc_4B990A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9910() // _unknown_libname_40
{
    __DEBUG_ASM(4B9910);
    // chunk 0x4B9910 _sub_4B9910
    asm("loc_4B9910: mov $_data_672368,%ecx;");
    asm("loc_4B9915: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9920() // _sub_4B9920
{
    __DEBUG_ASM(4B9920);
    // chunk 0x4B9920 _sub_4B9920
    asm("loc_4B9920: push $_data_5D5A30;");
    asm("loc_4B9925: mov $_data_67233C,%ecx;");
    asm("loc_4B992A: call _sub_4BD380;");
    asm("loc_4B992F: push $_sub_4B9940;");
    asm("loc_4B9934: call _sub_5B7E6C;");
    asm("loc_4B9939: pop %ecx;");
    asm("loc_4B993A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9940() // _unknown_libname_41
{
    __DEBUG_ASM(4B9940);
    // chunk 0x4B9940 _sub_4B9940
    asm("loc_4B9940: mov $_data_67233C,%ecx;");
    asm("loc_4B9945: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9950() // _sub_4B9950
{
    __DEBUG_ASM(4B9950);
    // chunk 0x4B9950 _sub_4B9950
    asm("loc_4B9950: push %ecx;");
    asm("loc_4B9951: mov 3(%esp),%al;");
    asm("loc_4B9955: push $0x20;");
    asm("loc_4B9957: mov %al,_data_672330;");
    asm("loc_4B995C: call _sub_5B7E84;");
    asm("loc_4B9961: mov %eax,(%eax);");
    asm("loc_4B9963: mov %eax,4(%eax);");
    asm("loc_4B9966: push $_sub_4B9990;");
    asm("loc_4B996B: mov %eax,_data_672334;");
    asm("loc_4B9970: movl $0,_data_672338;");
    asm("loc_4B997A: call _sub_5B7E6C;");
    asm("loc_4B997F: add $0xC,%esp;");
    asm("loc_4B9982: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9990() // _sub_4B9990
{
    __DEBUG_ASM(4B9990);
    // chunk 0x4B9990 _sub_4B9990
    asm("loc_4B9990: push %ebx;");
    asm("loc_4B9991: mov _data_672334,%ebx;");
    asm("loc_4B9997: push %edi;");
    asm("loc_4B9998: mov (%ebx),%edi;");
    asm("loc_4B999A: cmp %ebx,%edi;");
    asm("loc_4B999C: je loc_4B99E0;");
    asm("loc_4B999E: push %ebp;");
    asm("loc_4B999F: mov _import_5C6098,%ebp;");
    asm("loc_4B99A5: push %esi;");
    asm("loc_4B99A6: mov %edi,%esi;");
    asm("loc_4B99A8: mov 4(%esi),%eax;");
    asm("loc_4B99AB: mov (%esi),%ecx;");
    asm("loc_4B99AD: mov (%edi),%edi;");
    asm("loc_4B99AF: mov %ecx,(%eax);");
    asm("loc_4B99B1: mov (%esi),%edx;");
    asm("loc_4B99B3: mov 4(%esi),%eax;");
    asm("loc_4B99B6: lea 8(%esi),%ecx;");
    asm("loc_4B99B9: mov %eax,4(%edx);");
    asm("loc_4B99BC: call *%ebp;");
    asm("loc_4B99BE: push %esi;");
    asm("loc_4B99BF: call _sub_5B7E1D;");
    asm("loc_4B99C4: mov _data_672338,%ecx;");
    asm("loc_4B99CA: add $4,%esp;");
    asm("loc_4B99CD: dec %ecx;");
    asm("loc_4B99CE: cmp %ebx,%edi;");
    asm("loc_4B99D0: mov %ecx,_data_672338;");
    asm("loc_4B99D6: jne loc_4B99A6;");
    asm("loc_4B99D8: mov _data_672334,%ebx;");
    asm("loc_4B99DE: pop %esi;");
    asm("loc_4B99DF: pop %ebp;");
    asm("loc_4B99E0: push %ebx;");
    asm("loc_4B99E1: call _sub_5B7E1D;");
    asm("loc_4B99E6: add $4,%esp;");
    asm("loc_4B99E9: xor %eax,%eax;");
    asm("loc_4B99EB: pop %edi;");
    asm("loc_4B99EC: mov %eax,_data_672334;");
    asm("loc_4B99F1: mov %eax,_data_672338;");
    asm("loc_4B99F6: pop %ebx;");
    asm("loc_4B99F7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9A00() // _sub_4B9A00
{
    __DEBUG_ASM(4B9A00);
    // chunk 0x4B9A00 _sub_4B9A00
    asm("loc_4B9A00: push %ecx;");
    asm("loc_4B9A01: mov 3(%esp),%al;");
    asm("loc_4B9A05: push $0x20;");
    asm("loc_4B9A07: mov %al,_data_672324;");
    asm("loc_4B9A0C: call _sub_5B7E84;");
    asm("loc_4B9A11: mov %eax,(%eax);");
    asm("loc_4B9A13: mov %eax,4(%eax);");
    asm("loc_4B9A16: push $_sub_4B9A40;");
    asm("loc_4B9A1B: mov %eax,_data_672328;");
    asm("loc_4B9A20: movl $0,_data_67232C;");
    asm("loc_4B9A2A: call _sub_5B7E6C;");
    asm("loc_4B9A2F: add $0xC,%esp;");
    asm("loc_4B9A32: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9A40() // _sub_4B9A40
{
    __DEBUG_ASM(4B9A40);
    // chunk 0x4B9A40 _sub_4B9A40
    asm("loc_4B9A40: push %ebx;");
    asm("loc_4B9A41: mov _data_672328,%ebx;");
    asm("loc_4B9A47: push %edi;");
    asm("loc_4B9A48: mov (%ebx),%edi;");
    asm("loc_4B9A4A: cmp %ebx,%edi;");
    asm("loc_4B9A4C: je loc_4B9A90;");
    asm("loc_4B9A4E: push %ebp;");
    asm("loc_4B9A4F: mov _import_5C6098,%ebp;");
    asm("loc_4B9A55: push %esi;");
    asm("loc_4B9A56: mov %edi,%esi;");
    asm("loc_4B9A58: mov 4(%esi),%eax;");
    asm("loc_4B9A5B: mov (%esi),%ecx;");
    asm("loc_4B9A5D: mov (%edi),%edi;");
    asm("loc_4B9A5F: mov %ecx,(%eax);");
    asm("loc_4B9A61: mov (%esi),%edx;");
    asm("loc_4B9A63: mov 4(%esi),%eax;");
    asm("loc_4B9A66: lea 8(%esi),%ecx;");
    asm("loc_4B9A69: mov %eax,4(%edx);");
    asm("loc_4B9A6C: call *%ebp;");
    asm("loc_4B9A6E: push %esi;");
    asm("loc_4B9A6F: call _sub_5B7E1D;");
    asm("loc_4B9A74: mov _data_67232C,%ecx;");
    asm("loc_4B9A7A: add $4,%esp;");
    asm("loc_4B9A7D: dec %ecx;");
    asm("loc_4B9A7E: cmp %ebx,%edi;");
    asm("loc_4B9A80: mov %ecx,_data_67232C;");
    asm("loc_4B9A86: jne loc_4B9A56;");
    asm("loc_4B9A88: mov _data_672328,%ebx;");
    asm("loc_4B9A8E: pop %esi;");
    asm("loc_4B9A8F: pop %ebp;");
    asm("loc_4B9A90: push %ebx;");
    asm("loc_4B9A91: call _sub_5B7E1D;");
    asm("loc_4B9A96: add $4,%esp;");
    asm("loc_4B9A99: xor %eax,%eax;");
    asm("loc_4B9A9B: pop %edi;");
    asm("loc_4B9A9C: mov %eax,_data_672328;");
    asm("loc_4B9AA1: mov %eax,_data_67232C;");
    asm("loc_4B9AA6: pop %ebx;");
    asm("loc_4B9AA7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9AB0() // _sub_4B9AB0
{
    __DEBUG_ASM(4B9AB0);
    // chunk 0x4B9AB0 _sub_4B9AB0
    asm("loc_4B9AB0: xor %eax,%eax;");
    asm("loc_4B9AB2: push $_sub_4B9B10;");
    asm("loc_4B9AB7: mov %eax,_data_67230C;");
    asm("loc_4B9ABC: mov %eax,_data_672310;");
    asm("loc_4B9AC1: mov %al,_data_672314;");
    asm("loc_4B9AC6: mov %al,_data_672315;");
    asm("loc_4B9ACB: mov %al,_data_672316;");
    asm("loc_4B9AD0: mov %al,_data_672317;");
    asm("loc_4B9AD5: mov %al,_data_672318;");
    asm("loc_4B9ADA: mov %al,_data_672319;");
    asm("loc_4B9ADF: mov %al,_data_67231A;");
    asm("loc_4B9AE4: mov %al,_data_67231B;");
    asm("loc_4B9AE9: mov %al,_data_67231C;");
    asm("loc_4B9AEE: mov %al,_data_67231D;");
    asm("loc_4B9AF3: mov %al,_data_67231E;");
    asm("loc_4B9AF8: mov %al,_data_67231F;");
    asm("loc_4B9AFD: mov %al,_data_672320;");
    asm("loc_4B9B02: mov %al,_data_672321;");
    asm("loc_4B9B07: call _sub_5B7E6C;");
    asm("loc_4B9B0C: pop %ecx;");
    asm("loc_4B9B0D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9B10() // _sub_4B9B10
{
    __DEBUG_ASM(4B9B10);
    // chunk 0x4B9B10 _sub_4B9B10
    asm("loc_4B9B10: mov $_data_67230C,%ecx;");
    asm("loc_4B9B15: jmpl *_import_5C6098;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9B20() // _sub_4B9B20
{
    __DEBUG_ASM(4B9B20);
    // chunk 0x4B9B20 _sub_4B9B20
    asm("loc_4B9B20: mov 4(%esp),%eax;");
    asm("loc_4B9B24: mov %eax,_data_67240C;");
    asm("loc_4B9B29: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9B30() // _sub_4B9B30
{
    __DEBUG_ASM(4B9B30);
    // chunk 0x4B9B30 _sub_4B9B30
    asm("loc_4B9B30: movb $0,_data_672404;");
    asm("loc_4B9B37: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9B40() // _sub_4B9B40
{
    __DEBUG_ASM(4B9B40);
    // chunk 0x4B9B40 _sub_4B9B40
    asm("loc_4B9B40: mov _data_672404,%al;");
    asm("loc_4B9B45: test %al,%al;");
    asm("loc_4B9B47: je loc_4B9BA9;");
    asm("loc_4B9B49: mov _data_67232C,%eax;");
    asm("loc_4B9B4E: test %eax,%eax;");
    asm("loc_4B9B50: jne loc_4B9BA9;");
    asm("loc_4B9B52: push $_data_5D59FC;");
    asm("loc_4B9B57: call _sub_59DA10;");
    asm("loc_4B9B5C: add $4,%esp;");
    asm("loc_4B9B5F: test %eax,%eax;");
    asm("loc_4B9B61: jne loc_4B9BA9;");
    asm("loc_4B9B63: push %esi;");
    asm("loc_4B9B64: mov _data_672328,%esi;");
    asm("loc_4B9B6A: push %edi;");
    asm("loc_4B9B6B: mov 4(%esi),%edi;");
    asm("loc_4B9B6E: push $0x20;");
    asm("loc_4B9B70: call _sub_5B7E84;");
    asm("loc_4B9B75: add $4,%esp;");
    asm("loc_4B9B78: test %edi,%edi;");
    asm("loc_4B9B7A: mov %esi,(%eax);");
    asm("loc_4B9B7C: jne loc_4B9B80;");
    asm("loc_4B9B7E: mov %eax,%edi;");
    asm("loc_4B9B80: mov %edi,4(%eax);");
    asm("loc_4B9B83: mov %eax,4(%esi);");
    asm("loc_4B9B86: mov 4(%eax),%ecx;");
    asm("loc_4B9B89: mov %eax,(%ecx);");
    asm("loc_4B9B8B: add $8,%eax;");
    asm("loc_4B9B8E: push $_data_67230C;");
    asm("loc_4B9B93: push %eax;");
    asm("loc_4B9B94: call _sub_4BD5D0;");
    asm("loc_4B9B99: mov _data_67232C,%eax;");
    asm("loc_4B9B9E: add $8,%esp;");
    asm("loc_4B9BA1: inc %eax;");
    asm("loc_4B9BA2: pop %edi;");
    asm("loc_4B9BA3: mov %eax,_data_67232C;");
    asm("loc_4B9BA8: pop %esi;");
    asm("loc_4B9BA9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9BB0() // _sub_4B9BB0
{
    __DEBUG_ASM(4B9BB0);
    // chunk 0x4B9BB0 _sub_4B9BB0
    asm("loc_4B9BB0: mov _data_66D35A,%al;");
    asm("loc_4B9BB5: test %al,%al;");
    asm("loc_4B9BB7: push %esi;");
    asm("loc_4B9BB8: push %edi;");
    asm("loc_4B9BB9: jne loc_4B9C0B;");
    asm("loc_4B9BBB: push %ebx;");
    asm("loc_4B9BBC: mov _data_672328,%ebx;");
    asm("loc_4B9BC2: mov (%ebx),%edi;");
    asm("loc_4B9BC4: cmp %ebx,%edi;");
    asm("loc_4B9BC6: je loc_4B9C03;");
    asm("loc_4B9BC8: push %ebp;");
    asm("loc_4B9BC9: mov _import_5C6098,%ebp;");
    asm("loc_4B9BCF: nop;");
    asm("loc_4B9BD0: mov %edi,%esi;");
    asm("loc_4B9BD2: mov 4(%esi),%eax;");
    asm("loc_4B9BD5: mov (%esi),%ecx;");
    asm("loc_4B9BD7: mov (%edi),%edi;");
    asm("loc_4B9BD9: mov %ecx,(%eax);");
    asm("loc_4B9BDB: mov (%esi),%edx;");
    asm("loc_4B9BDD: mov 4(%esi),%eax;");
    asm("loc_4B9BE0: lea 8(%esi),%ecx;");
    asm("loc_4B9BE3: mov %eax,4(%edx);");
    asm("loc_4B9BE6: call *%ebp;");
    asm("loc_4B9BE8: push %esi;");
    asm("loc_4B9BE9: call _sub_5B7E1D;");
    asm("loc_4B9BEE: mov _data_67232C,%ecx;");
    asm("loc_4B9BF4: add $4,%esp;");
    asm("loc_4B9BF7: dec %ecx;");
    asm("loc_4B9BF8: cmp %ebx,%edi;");
    asm("loc_4B9BFA: mov %ecx,_data_67232C;");
    asm("loc_4B9C00: jne loc_4B9BD0;");
    asm("loc_4B9C02: pop %ebp;");
    asm("loc_4B9C03: movb $0,_data_672404;");
    asm("loc_4B9C0A: pop %ebx;");
    asm("loc_4B9C0B: mov _data_672400,%eax;");
    asm("loc_4B9C10: test %eax,%eax;");
    asm("loc_4B9C12: je loc_4B9C51;");
    asm("loc_4B9C14: push $0;");
    asm("loc_4B9C16: push %eax;");
    asm("loc_4B9C17: call _sub_59DD00;");
    asm("loc_4B9C1C: mov _data_672400,%edi;");
    asm("loc_4B9C22: add $8,%esp;");
    asm("loc_4B9C25: test %edi,%edi;");
    asm("loc_4B9C27: je loc_4B9C51;");
    asm("loc_4B9C29: mov 0xC(%edi),%eax;");
    asm("loc_4B9C2C: test %eax,%eax;");
    asm("loc_4B9C2E: je loc_4B9C42;");
    asm("loc_4B9C30: mov 8(%eax),%esi;");
    asm("loc_4B9C33: push %eax;");
    asm("loc_4B9C34: call _sub_43D2A0;");
    asm("loc_4B9C39: add $4,%esp;");
    asm("loc_4B9C3C: test %esi,%esi;");
    asm("loc_4B9C3E: mov %esi,%eax;");
    asm("loc_4B9C40: jne loc_4B9C30;");
    asm("loc_4B9C42: mov (%edi),%edx;");
    asm("loc_4B9C44: mov %edi,%ecx;");
    asm("loc_4B9C46: calll *0x28(%edx);");
    asm("loc_4B9C49: mov (%edi),%eax;");
    asm("loc_4B9C4B: push $1;");
    asm("loc_4B9C4D: mov %edi,%ecx;");
    asm("loc_4B9C4F: calll *(%eax);");
    asm("loc_4B9C51: pop %edi;");
    asm("loc_4B9C52: pop %esi;");
    asm("loc_4B9C53: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4B9C60() // _sub_4B9C60
{
    asm("jmp dgb_4B9C60;"); // jumptable skip
    asm(".long _jmp_4B9F7C;"); // jumptable address
    __DEBUG_ASM(4B9C60);
    // chunk 0x4B9C60 _sub_4B9C60
    asm("loc_4B9C60: mov %fs:0,%eax;");
    asm("loc_4B9C66: push $0xFFFFFFFF;");
    asm("loc_4B9C68: push $_sub_5BD459;");
    asm("loc_4B9C6D: push %eax;");
    asm("loc_4B9C6E: mov %esp,%fs:0;");
    asm("loc_4B9C75: sub $0x18,%esp;");
    asm("loc_4B9C78: push %ebx;");
    asm("loc_4B9C79: push %esi;");
    asm("loc_4B9C7A: mov 0x34(%esp),%esi;");
    asm("loc_4B9C7E: cmp $0xA,%esi;");
    asm("loc_4B9C81: push %edi;");
    asm("loc_4B9C82: jne loc_4B9C9B;");
    asm("loc_4B9C84: call _sub_4BA0F0;");
    asm("loc_4B9C89: pop %edi;");
    asm("loc_4B9C8A: pop %esi;");
    asm("loc_4B9C8B: pop %ebx;");
    asm("loc_4B9C8C: mov 0x18(%esp),%ecx;");
    asm("loc_4B9C90: mov %ecx,%fs:0;");
    asm("loc_4B9C97: add $0x24,%esp;");
    asm("loc_4B9C9A: ret;");
    asm("loc_4B9C9B: xor %ebx,%ebx;");
    asm("loc_4B9C9D: cmp %ebx,%esi;");
    asm("loc_4B9C9F: je loc_4B9CF5;");
    asm("loc_4B9CA1: cmp $1,%esi;");
    asm("loc_4B9CA4: je loc_4B9CF5;");
    asm("loc_4B9CA6: cmp $2,%esi;");
    asm("loc_4B9CA9: je loc_4B9CF5;");
    asm("loc_4B9CAB: cmp $3,%esi;");
    asm("loc_4B9CAE: je loc_4B9CF5;");
    asm("loc_4B9CB0: cmp $5,%esi;");
    asm("loc_4B9CB3: je loc_4B9CFA;");
    asm("loc_4B9CB5: cmp $7,%esi;");
    asm("loc_4B9CB8: mov 0x34(%esp),%edi;");
    asm("loc_4B9CBC: je loc_4B9CC3;");
    asm("loc_4B9CBE: cmp $9,%esi;");
    asm("loc_4B9CC1: jne loc_4B9CCC;");
    asm("loc_4B9CC3: push %edi;");
    asm("loc_4B9CC4: call _sub_4B9F90;");
    asm("loc_4B9CC9: add $4,%esp;");
    asm("loc_4B9CCC: cmp $8,%esi;");
    asm("loc_4B9CCF: je loc_4B9CDA;");
    asm("loc_4B9CD1: cmp $9,%esi;");
    asm("loc_4B9CD4: jne loc_4B9F69;");
    asm("loc_4B9CDA: push %edi;");
    asm("loc_4B9CDB: call _sub_4BA2A0;");
    asm("loc_4B9CE0: add $4,%esp;");
    asm("loc_4B9CE3: pop %edi;");
    asm("loc_4B9CE4: pop %esi;");
    asm("loc_4B9CE5: pop %ebx;");
    asm("loc_4B9CE6: mov 0x18(%esp),%ecx;");
    asm("loc_4B9CEA: mov %ecx,%fs:0;");
    asm("loc_4B9CF1: add $0x24,%esp;");
    asm("loc_4B9CF4: ret;");
    asm("loc_4B9CF5: cmp $5,%esi;");
    asm("loc_4B9CF8: jne loc_4B9D0C;");
    asm("loc_4B9CFA: mov 0x34(%esp),%eax;");
    asm("loc_4B9CFE: push %eax;");
    asm("loc_4B9CFF: call _sub_4BA2A0;");
    asm("loc_4B9D04: add $4,%esp;");
    asm("loc_4B9D07: jmp loc_4B9E8B;");
    asm("loc_4B9D0C: mov %ebx,0xC(%esp);");
    asm("loc_4B9D10: mov %ebx,0x10(%esp);");
    asm("loc_4B9D14: mov %bl,0x14(%esp);");
    asm("loc_4B9D18: mov %bl,0x15(%esp);");
    asm("loc_4B9D1C: mov %bl,0x16(%esp);");
    asm("loc_4B9D20: mov %bl,0x17(%esp);");
    asm("loc_4B9D24: mov %bl,0x18(%esp);");
    asm("loc_4B9D28: mov %bl,0x19(%esp);");
    asm("loc_4B9D2C: mov %bl,0x1A(%esp);");
    asm("loc_4B9D30: mov %bl,0x1B(%esp);");
    asm("loc_4B9D34: mov %bl,0x1C(%esp);");
    asm("loc_4B9D38: mov %bl,0x1D(%esp);");
    asm("loc_4B9D3C: mov %bl,0x1E(%esp);");
    asm("loc_4B9D40: mov %bl,0x1F(%esp);");
    asm("loc_4B9D44: mov %bl,0x20(%esp);");
    asm("loc_4B9D48: mov %bl,0x21(%esp);");
    asm("loc_4B9D4C: cmp $3,%esi;");
    asm("loc_4B9D4F: mov 0x34(%esp),%edi;");
    asm("loc_4B9D53: mov %ebx,0x2C(%esp);");
    asm("loc_4B9D57: ja loc_4B9E2B;");
    asm("loc_4B9D5D: jmpl *_jmp_4B9F7C(,%esi,4);");
    asm("loc_4B9D64: mov 4(%edi),%eax;");
    asm("loc_4B9D67: cmp $1,%eax;");
    asm("loc_4B9D6A: lea 0xC(%esp),%ecx;");
    asm("loc_4B9D6E: jne loc_4B9D8A;");
    asm("loc_4B9D70: push $0x412;");
    asm("loc_4B9D75: jmp loc_4B9E25;");
    asm("loc_4B9D7A: mov 4(%edi),%eax;");
    asm("loc_4B9D7D: cmp $1,%eax;");
    asm("loc_4B9D80: lea 0xC(%esp),%ecx;");
    asm("loc_4B9D84: je loc_4B9E20;");
    asm("loc_4B9D8A: push %eax;");
    asm("loc_4B9D8B: jmp loc_4B9E25;");
    asm("loc_4B9D90: cmp %bl,_data_66D35A;");
    asm("loc_4B9D96: jne loc_4B9DB6;");
    asm("loc_4B9D98: mov _data_672328,%eax;");
    asm("loc_4B9D9D: mov (%eax),%ecx;");
    asm("loc_4B9D9F: push %eax;");
    asm("loc_4B9DA0: push %ecx;");
    asm("loc_4B9DA1: lea 0x3C(%esp),%ecx;");
    asm("loc_4B9DA5: push %ecx;");
    asm("loc_4B9DA6: mov $_data_672324,%ecx;");
    asm("loc_4B9DAB: call _sub_4BD550;");
    asm("loc_4B9DB0: mov %bl,_data_672404;");
    asm("loc_4B9DB6: mov _data_672400,%eax;");
    asm("loc_4B9DBB: cmp %ebx,%eax;");
    asm("loc_4B9DBD: je loc_4B9E2B;");
    asm("loc_4B9DBF: push %ebx;");
    asm("loc_4B9DC0: push %eax;");
    asm("loc_4B9DC1: call _sub_59DD00;");
    asm("loc_4B9DC6: mov _data_672400,%edx;");
    asm("loc_4B9DCC: push %edx;");
    asm("loc_4B9DCD: call _sub_43D2A0;");
    asm("loc_4B9DD2: add $0xC,%esp;");
    asm("loc_4B9DD5: jmp loc_4B9E2B;");
    asm("loc_4B9DD7: cmp %bl,_data_66D35A;");
    asm("loc_4B9DDD: jne loc_4B9DFD;");
    asm("loc_4B9DDF: mov _data_672328,%eax;");
    asm("loc_4B9DE4: mov (%eax),%ecx;");
    asm("loc_4B9DE6: push %eax;");
    asm("loc_4B9DE7: push %ecx;");
    asm("loc_4B9DE8: lea 0x3C(%esp),%eax;");
    asm("loc_4B9DEC: push %eax;");
    asm("loc_4B9DED: mov $_data_672324,%ecx;");
    asm("loc_4B9DF2: call _sub_4BD550;");
    asm("loc_4B9DF7: mov %bl,_data_672404;");
    asm("loc_4B9DFD: mov _data_672400,%eax;");
    asm("loc_4B9E02: cmp %ebx,%eax;");
    asm("loc_4B9E04: je loc_4B9E1C;");
    asm("loc_4B9E06: push %ebx;");
    asm("loc_4B9E07: push %eax;");
    asm("loc_4B9E08: call _sub_59DD00;");
    asm("loc_4B9E0D: mov _data_672400,%ecx;");
    asm("loc_4B9E13: push %ecx;");
    asm("loc_4B9E14: call _sub_43D2A0;");
    asm("loc_4B9E19: add $0xC,%esp;");
    asm("loc_4B9E1C: lea 0xC(%esp),%ecx;");
    asm("loc_4B9E20: push $0x4CF;");
    asm("loc_4B9E25: calll *_import_5C633C;");
    asm("loc_4B9E2B: lea 0xC(%esp),%ecx;");
    asm("loc_4B9E2F: calll *_import_5C6338;");
    asm("loc_4B9E35: cmp %ebx,0x10(%esp);");
    asm("loc_4B9E39: je loc_4B9E6A;");
    asm("loc_4B9E3B: lea 0xC(%esp),%edx;");
    asm("loc_4B9E3F: push %edx;");
    asm("loc_4B9E40: call _sub_4B9F90;");
    asm("loc_4B9E45: add $4,%esp;");
    asm("loc_4B9E48: cmp $2,%esi;");
    asm("loc_4B9E4B: je loc_4B9E52;");
    asm("loc_4B9E4D: cmp $3,%esi;");
    asm("loc_4B9E50: jne loc_4B9E5B;");
    asm("loc_4B9E52: push %edi;");
    asm("loc_4B9E53: call _sub_4BA2A0;");
    asm("loc_4B9E58: add $4,%esp;");
    asm("loc_4B9E5B: lea 0xC(%esp),%eax;");
    asm("loc_4B9E5F: push %eax;");
    asm("loc_4B9E60: call _sub_4BA2A0;");
    asm("loc_4B9E65: add $4,%esp;");
    asm("loc_4B9E68: jmp loc_4B9E79;");
    asm("loc_4B9E6A: push %edi;");
    asm("loc_4B9E6B: call _sub_4B9F90;");
    asm("loc_4B9E70: push %edi;");
    asm("loc_4B9E71: call _sub_4BA2A0;");
    asm("loc_4B9E76: add $8,%esp;");
    asm("loc_4B9E79: lea 0xC(%esp),%ecx;");
    asm("loc_4B9E7D: movl $0xFFFFFFFF,0x2C(%esp);");
    asm("loc_4B9E85: calll *_import_5C6098;");
    asm("loc_4B9E8B: cmp %ebx,%esi;");
    asm("loc_4B9E8D: je loc_4B9E98;");
    asm("loc_4B9E8F: cmp $5,%esi;");
    asm("loc_4B9E92: jne loc_4B9F69;");
    asm("loc_4B9E98: calll *_import_5C60D0;");
    asm("loc_4B9E9E: test %al,%al;");
    asm("loc_4B9EA0: jne loc_4B9ED4;");
    asm("loc_4B9EA2: call _sub_59E6A0;");
    asm("loc_4B9EA7: test %al,%al;");
    asm("loc_4B9EA9: je loc_4B9ED4;");
    asm("loc_4B9EAB: mov _data_66D3F0,%ecx;");
    asm("loc_4B9EB1: push $1;");
    asm("loc_4B9EB3: call _sub_45DCC0;");
    asm("loc_4B9EB8: push $1;");
    asm("loc_4B9EBA: call _sub_41DDA0;");
    asm("loc_4B9EBF: add $4,%esp;");
    asm("loc_4B9EC2: pop %edi;");
    asm("loc_4B9EC3: pop %esi;");
    asm("loc_4B9EC4: pop %ebx;");
    asm("loc_4B9EC5: mov 0x18(%esp),%ecx;");
    asm("loc_4B9EC9: mov %ecx,%fs:0;");
    asm("loc_4B9ED0: add $0x24,%esp;");
    asm("loc_4B9ED3: ret;");
    asm("loc_4B9ED4: push $0x40400000;");
    asm("loc_4B9ED9: push %ebx;");
    asm("loc_4B9EDA: call _sub_41A0F0;");
    asm("loc_4B9EDF: push $1;");
    asm("loc_4B9EE1: call _sub_41DDA0;");
    asm("loc_4B9EE6: push %ebx;");
    asm("loc_4B9EE7: push $_data_5C95FC;");
    asm("loc_4B9EEC: call _sub_41DDE0;");
    asm("loc_4B9EF1: mov _data_6723FC,%eax;");
    asm("loc_4B9EF6: add $0x14,%esp;");
    asm("loc_4B9EF9: cmp %ebx,%eax;");
    asm("loc_4B9EFB: je loc_4B9F44;");
    asm("loc_4B9EFD: push %ebx;");
    asm("loc_4B9EFE: push %eax;");
    asm("loc_4B9EFF: call _sub_59DD00;");
    asm("loc_4B9F04: mov _data_6723FC,%edi;");
    asm("loc_4B9F0A: add $8,%esp;");
    asm("loc_4B9F0D: cmp %ebx,%edi;");
    asm("loc_4B9F0F: je loc_4B9F39;");
    asm("loc_4B9F11: mov 0xC(%edi),%eax;");
    asm("loc_4B9F14: cmp %ebx,%eax;");
    asm("loc_4B9F16: je loc_4B9F2A;");
    asm("loc_4B9F18: mov 8(%eax),%esi;");
    asm("loc_4B9F1B: push %eax;");
    asm("loc_4B9F1C: call _sub_43D2A0;");
    asm("loc_4B9F21: add $4,%esp;");
    asm("loc_4B9F24: cmp %ebx,%esi;");
    asm("loc_4B9F26: mov %esi,%eax;");
    asm("loc_4B9F28: jne loc_4B9F18;");
    asm("loc_4B9F2A: mov (%edi),%edx;");
    asm("loc_4B9F2C: mov %edi,%ecx;");
    asm("loc_4B9F2E: calll *0x28(%edx);");
    asm("loc_4B9F31: mov (%edi),%eax;");
    asm("loc_4B9F33: push $1;");
    asm("loc_4B9F35: mov %edi,%ecx;");
    asm("loc_4B9F37: calll *(%eax);");
    asm("loc_4B9F39: mov _data_66D3F0,%ecx;");
    asm("loc_4B9F3F: call _sub_45CEF0;");
    asm("loc_4B9F44: mov _data_66D3F0,%ecx;");
    asm("loc_4B9F4A: push $1;");
    asm("loc_4B9F4C: call _sub_45DCC0;");
    asm("loc_4B9F51: push %ebx;");
    asm("loc_4B9F52: push $0x67;");
    asm("loc_4B9F54: mov %bl,_data_67DCC8;");
    asm("loc_4B9F5A: call _sub_5763B0;");
    asm("loc_4B9F5F: add $8,%esp;");
    asm("loc_4B9F62: movb $1,_data_67DCC8;");
    asm("loc_4B9F69: mov 0x24(%esp),%ecx;");
    asm("loc_4B9F6D: pop %edi;");
    asm("loc_4B9F6E: pop %esi;");
    asm("loc_4B9F6F: pop %ebx;");
    asm("loc_4B9F70: mov %ecx,%fs:0;");
    asm("loc_4B9F77: add $0x24,%esp;");
    asm("loc_4B9F7A: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_4B9F7C: .long loc_4B9D64;");
    asm(".long loc_4B9D7A;");
    asm(".long loc_4B9D90;");
    asm(".long loc_4B9DD7;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4B9C60);
_naked _weak void _sub_4B9F90() // _sub_4B9F90
{
    __DEBUG_ASM(4B9F90);
    // chunk 0x4B9F90 _sub_4B9F90
    asm("loc_4B9F90: sub $8,%esp;");
    asm("loc_4B9F93: push %ebp;");
    asm("loc_4B9F94: mov 0x10(%esp),%ebp;");
    asm("loc_4B9F98: cmpl $0x549C,4(%ebp);");
    asm("loc_4B9F9F: push %esi;");
    asm("loc_4B9FA0: push %edi;");
    asm("loc_4B9FA1: jne loc_4B9FBD;");
    asm("loc_4B9FA3: push %ebp;");
    asm("loc_4B9FA4: mov $_data_67230C,%ecx;");
    asm("loc_4B9FA9: calll *_import_5C628C;");
    asm("loc_4B9FAF: pop %edi;");
    asm("loc_4B9FB0: pop %esi;");
    asm("loc_4B9FB1: movb $1,_data_672404;");
    asm("loc_4B9FB8: pop %ebp;");
    asm("loc_4B9FB9: add $8,%esp;");
    asm("loc_4B9FBC: ret;");
    asm("loc_4B9FBD: call _sub_41A3E0;");
    asm("loc_4B9FC2: test %al,%al;");
    asm("loc_4B9FC4: mov _data_672328,%esi;");
    asm("loc_4B9FCA: je loc_4BA004;");
    asm("loc_4B9FCC: mov (%esi),%eax;");
    asm("loc_4B9FCE: cmp %esi,%eax;");
    asm("loc_4B9FD0: mov %eax,0x18(%esp);");
    asm("loc_4B9FD4: je loc_4BA004;");
    asm("loc_4B9FD6: push $0;");
    asm("loc_4B9FD8: lea 0x10(%esp),%eax;");
    asm("loc_4B9FDC: push %eax;");
    asm("loc_4B9FDD: lea 0x20(%esp),%ecx;");
    asm("loc_4B9FE1: call _sub_53AB20;");
    asm("loc_4B9FE6: mov (%eax),%ecx;");
    asm("loc_4B9FE8: push %ecx;");
    asm("loc_4B9FE9: lea 0x14(%esp),%edx;");
    asm("loc_4B9FED: push %edx;");
    asm("loc_4B9FEE: mov $_data_672324,%ecx;");
    asm("loc_4B9FF3: call _sub_4BD4B0;");
    asm("loc_4B9FF8: cmp %esi,0x18(%esp);");
    asm("loc_4B9FFC: jne loc_4B9FD6;");
    asm("loc_4B9FFE: mov _data_672328,%esi;");
    asm("loc_4BA004: mov _data_67232C,%eax;");
    asm("loc_4BA009: xor %edi,%edi;");
    asm("loc_4BA00B: test %eax,%eax;");
    asm("loc_4BA00D: jbe loc_4BA015;");
    asm("loc_4BA00F: mov 4(%esi),%edi;");
    asm("loc_4BA012: add $8,%edi;");
    asm("loc_4BA015: push %ebx;");
    asm("loc_4BA016: mov 4(%esi),%ebx;");
    asm("loc_4BA019: push $0x20;");
    asm("loc_4BA01B: call _sub_5B7E84;");
    asm("loc_4BA020: add $4,%esp;");
    asm("loc_4BA023: test %ebx,%ebx;");
    asm("loc_4BA025: mov %esi,(%eax);");
    asm("loc_4BA027: mov %ebx,%ecx;");
    asm("loc_4BA029: jne loc_4BA02D;");
    asm("loc_4BA02B: mov %eax,%ecx;");
    asm("loc_4BA02D: mov %ecx,4(%eax);");
    asm("loc_4BA030: mov %eax,4(%esi);");
    asm("loc_4BA033: mov 4(%eax),%ecx;");
    asm("loc_4BA036: mov %eax,(%ecx);");
    asm("loc_4BA038: add $8,%eax;");
    asm("loc_4BA03B: push %ebp;");
    asm("loc_4BA03C: push %eax;");
    asm("loc_4BA03D: call _sub_4BD5D0;");
    asm("loc_4BA042: mov _data_67232C,%ecx;");
    asm("loc_4BA048: inc %ecx;");
    asm("loc_4BA049: push %ebp;");
    asm("loc_4BA04A: mov %ecx,_data_67232C;");
    asm("loc_4BA050: call _sub_459950;");
    asm("loc_4BA055: mov _data_672328,%edx;");
    asm("loc_4BA05B: mov 4(%edx),%esi;");
    asm("loc_4BA05E: add $8,%esi;");
    asm("loc_4BA061: push %esi;");
    asm("loc_4BA062: call _sub_4BA5A0;");
    asm("loc_4BA067: add $0x10,%esp;");
    asm("loc_4BA06A: test %edi,%edi;");
    asm("loc_4BA06C: pop %ebx;");
    asm("loc_4BA06D: je loc_4BA0E2;");
    asm("loc_4BA06F: mov _data_6119F8,%eax;");
    asm("loc_4BA074: push $1;");
    asm("loc_4BA076: push %eax;");
    asm("loc_4BA077: push $_data_66FC60;");
    asm("loc_4BA07C: push %esi;");
    asm("loc_4BA07D: call _sub_4BA860;");
    asm("loc_4BA082: mov _data_6119F8,%ecx;");
    asm("loc_4BA088: push $1;");
    asm("loc_4BA08A: push %ecx;");
    asm("loc_4BA08B: push $_data_66DC60;");
    asm("loc_4BA090: push %edi;");
    asm("loc_4BA091: call _sub_4BA860;");
    asm("loc_4BA096: push $_data_66DC60;");
    asm("loc_4BA09B: push $_data_66FC60;");
    asm("loc_4BA0A0: calll *_import_5C71D4;");
    asm("loc_4BA0A6: add $0x28,%esp;");
    asm("loc_4BA0A9: test %eax,%eax;");
    asm("loc_4BA0AB: jne loc_4BA0E2;");
    asm("loc_4BA0AD: mov _data_672328,%edx;");
    asm("loc_4BA0B3: mov 4(%edx),%esi;");
    asm("loc_4BA0B6: mov 4(%esi),%eax;");
    asm("loc_4BA0B9: mov (%esi),%ecx;");
    asm("loc_4BA0BB: mov %ecx,(%eax);");
    asm("loc_4BA0BD: mov (%esi),%edx;");
    asm("loc_4BA0BF: mov 4(%esi),%eax;");
    asm("loc_4BA0C2: lea 8(%esi),%ecx;");
    asm("loc_4BA0C5: mov %eax,4(%edx);");
    asm("loc_4BA0C8: calll *_import_5C6098;");
    asm("loc_4BA0CE: push %esi;");
    asm("loc_4BA0CF: call _sub_5B7E1D;");
    asm("loc_4BA0D4: mov _data_67232C,%eax;");
    asm("loc_4BA0D9: add $4,%esp;");
    asm("loc_4BA0DC: dec %eax;");
    asm("loc_4BA0DD: mov %eax,_data_67232C;");
    asm("loc_4BA0E2: pop %edi;");
    asm("loc_4BA0E3: pop %esi;");
    asm("loc_4BA0E4: pop %ebp;");
    asm("loc_4BA0E5: add $8,%esp;");
    asm("loc_4BA0E8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BA0F0() // _sub_4BA0F0
{
    __DEBUG_ASM(4BA0F0);
    // chunk 0x4BA0F0 _sub_4BA0F0
    asm("loc_4BA0F0: push %ecx;");
    asm("loc_4BA0F1: push %ebx;");
    asm("loc_4BA0F2: push %esi;");
    asm("loc_4BA0F3: push %edi;");
    asm("loc_4BA0F4: calll *_import_5C60D0;");
    asm("loc_4BA0FA: test %al,%al;");
    asm("loc_4BA0FC: mov _import_5C641C,%ebx;");
    asm("loc_4BA102: je loc_4BA135;");
    asm("loc_4BA104: mov _data_6119F8,%eax;");
    asm("loc_4BA109: lea (%eax,%eax),%ecx;");
    asm("loc_4BA10C: push %ecx;");
    asm("loc_4BA10D: push $_data_66FC60;");
    asm("loc_4BA112: push $0;");
    asm("loc_4BA114: push $0;");
    asm("loc_4BA116: call *%ebx;");
    asm("loc_4BA118: mov _data_67ECD0,%ecx;");
    asm("loc_4BA11E: mov (%ecx),%edx;");
    asm("loc_4BA120: add $0x10,%esp;");
    asm("loc_4BA123: push %eax;");
    asm("loc_4BA124: mov _data_673344,%eax;");
    asm("loc_4BA129: push $_data_66FC60;");
    asm("loc_4BA12E: push %eax;");
    asm("loc_4BA12F: calll *0x130(%edx);");
    asm("loc_4BA135: mov _data_672334,%eax;");
    asm("loc_4BA13A: mov (%eax),%edi;");
    asm("loc_4BA13C: cmp %eax,%edi;");
    asm("loc_4BA13E: je loc_4BA1A0;");
    asm("loc_4BA140: mov _data_6119F8,%ecx;");
    asm("loc_4BA146: push $1;");
    asm("loc_4BA148: push %ecx;");
    asm("loc_4BA149: lea 8(%edi),%edx;");
    asm("loc_4BA14C: push $_data_66FC60;");
    asm("loc_4BA151: push %edx;");
    asm("loc_4BA152: call _sub_4BA860;");
    asm("loc_4BA157: add $0x10,%esp;");
    asm("loc_4BA15A: cmpw $0x2A,_data_66FC60;");
    asm("loc_4BA162: je loc_4BA196;");
    asm("loc_4BA164: lea 4(%edi),%eax;");
    asm("loc_4BA167: mov %edi,%esi;");
    asm("loc_4BA169: mov (%eax),%edi;");
    asm("loc_4BA16B: mov (%esi),%edx;");
    asm("loc_4BA16D: mov %edi,%ecx;");
    asm("loc_4BA16F: mov %edx,(%ecx);");
    asm("loc_4BA171: mov (%esi),%ecx;");
    asm("loc_4BA173: mov (%eax),%edx;");
    asm("loc_4BA175: mov %edx,4(%ecx);");
    asm("loc_4BA178: push $0;");
    asm("loc_4BA17A: lea 8(%esi),%ecx;");
    asm("loc_4BA17D: call _sub_4BD620;");
    asm("loc_4BA182: push %esi;");
    asm("loc_4BA183: call _sub_5B7E1D;");
    asm("loc_4BA188: mov _data_672338,%eax;");
    asm("loc_4BA18D: add $4,%esp;");
    asm("loc_4BA190: dec %eax;");
    asm("loc_4BA191: mov %eax,_data_672338;");
    asm("loc_4BA196: mov (%edi),%edi;");
    asm("loc_4BA198: cmp _data_672334,%edi;");
    asm("loc_4BA19E: jne loc_4BA140;");
    asm("loc_4BA1A0: calll *_import_5C60D0;");
    asm("loc_4BA1A6: test %al,%al;");
    asm("loc_4BA1A8: je loc_4BA20B;");
    asm("loc_4BA1AA: mov _data_672334,%edi;");
    asm("loc_4BA1B0: cmp (%edi),%edi;");
    asm("loc_4BA1B2: je loc_4BA20B;");
    asm("loc_4BA1B4: mov _data_6119F8,%eax;");
    asm("loc_4BA1B9: mov 4(%edi),%esi;");
    asm("loc_4BA1BC: push $1;");
    asm("loc_4BA1BE: push %eax;");
    asm("loc_4BA1BF: add $8,%esi;");
    asm("loc_4BA1C2: push $_data_66FC60;");
    asm("loc_4BA1C7: push %esi;");
    asm("loc_4BA1C8: call _sub_4BA860;");
    asm("loc_4BA1CD: mov _data_6119F8,%ecx;");
    asm("loc_4BA1D3: lea (%ecx,%ecx),%edx;");
    asm("loc_4BA1D6: push %edx;");
    asm("loc_4BA1D7: push $_data_66FC60;");
    asm("loc_4BA1DC: push %esi;");
    asm("loc_4BA1DD: push $1;");
    asm("loc_4BA1DF: call *%ebx;");
    asm("loc_4BA1E1: mov _data_67ECD0,%ecx;");
    asm("loc_4BA1E7: mov (%ecx),%edx;");
    asm("loc_4BA1E9: add $0x20,%esp;");
    asm("loc_4BA1EC: push %eax;");
    asm("loc_4BA1ED: mov _data_673344,%eax;");
    asm("loc_4BA1F2: push $_data_66FC60;");
    asm("loc_4BA1F7: push %eax;");
    asm("loc_4BA1F8: calll *0x130(%edx);");
    asm("loc_4BA1FE: mov _data_672334,%ecx;");
    asm("loc_4BA204: mov 4(%edi),%edi;");
    asm("loc_4BA207: cmp (%ecx),%edi;");
    asm("loc_4BA209: jne loc_4BA1B4;");
    asm("loc_4BA20B: mov _data_672400,%ecx;");
    asm("loc_4BA211: test %ecx,%ecx;");
    asm("loc_4BA213: je loc_4BA271;");
    asm("loc_4BA215: mov _data_67232C,%eax;");
    asm("loc_4BA21A: test %eax,%eax;");
    asm("loc_4BA21C: jbe loc_4BA271;");
    asm("loc_4BA21E: mov _data_672328,%edx;");
    asm("loc_4BA224: mov (%edx),%eax;");
    asm("loc_4BA226: add $8,%eax;");
    asm("loc_4BA229: je loc_4BA234;");
    asm("loc_4BA22B: cmpl $0x3D3,4(%eax);");
    asm("loc_4BA232: je loc_4BA271;");
    asm("loc_4BA234: push $0;");
    asm("loc_4BA236: push %ecx;");
    asm("loc_4BA237: call _sub_59DD00;");
    asm("loc_4BA23C: mov _data_672400,%edi;");
    asm("loc_4BA242: add $8,%esp;");
    asm("loc_4BA245: test %edi,%edi;");
    asm("loc_4BA247: je loc_4BA271;");
    asm("loc_4BA249: mov 0xC(%edi),%eax;");
    asm("loc_4BA24C: test %eax,%eax;");
    asm("loc_4BA24E: je loc_4BA262;");
    asm("loc_4BA250: mov 8(%eax),%esi;");
    asm("loc_4BA253: push %eax;");
    asm("loc_4BA254: call _sub_43D2A0;");
    asm("loc_4BA259: add $4,%esp;");
    asm("loc_4BA25C: test %esi,%esi;");
    asm("loc_4BA25E: mov %esi,%eax;");
    asm("loc_4BA260: jne loc_4BA250;");
    asm("loc_4BA262: mov (%edi),%eax;");
    asm("loc_4BA264: mov %edi,%ecx;");
    asm("loc_4BA266: calll *0x28(%eax);");
    asm("loc_4BA269: mov (%edi),%edx;");
    asm("loc_4BA26B: push $1;");
    asm("loc_4BA26D: mov %edi,%ecx;");
    asm("loc_4BA26F: calll *(%edx);");
    asm("loc_4BA271: mov _data_672328,%edi;");
    asm("loc_4BA277: mov (%edi),%esi;");
    asm("loc_4BA279: cmp %edi,%esi;");
    asm("loc_4BA27B: je loc_4BA298;");
    asm("loc_4BA27D: lea (%ecx),%ecx;");
    asm("loc_4BA280: mov %esi,%eax;");
    asm("loc_4BA282: mov (%esi),%esi;");
    asm("loc_4BA284: push %eax;");
    asm("loc_4BA285: lea 0x10(%esp),%eax;");
    asm("loc_4BA289: push %eax;");
    asm("loc_4BA28A: mov $_data_672324,%ecx;");
    asm("loc_4BA28F: call _sub_4BD4B0;");
    asm("loc_4BA294: cmp %edi,%esi;");
    asm("loc_4BA296: jne loc_4BA280;");
    asm("loc_4BA298: pop %edi;");
    asm("loc_4BA299: pop %esi;");
    asm("loc_4BA29A: pop %ebx;");
    asm("loc_4BA29B: pop %ecx;");
    asm("loc_4BA29C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BA2A0() // _sub_4BA2A0
{
    __DEBUG_ASM(4BA2A0);
    // chunk 0x4BA2A0 _sub_4BA2A0
    asm("loc_4BA2A0: push %ecx;");
    asm("loc_4BA2A1: mov 8(%esp),%eax;");
    asm("loc_4BA2A5: test %eax,%eax;");
    asm("loc_4BA2A7: push %ebx;");
    asm("loc_4BA2A8: push %esi;");
    asm("loc_4BA2A9: je loc_4BA424;");
    asm("loc_4BA2AF: mov _data_672338,%eax;");
    asm("loc_4BA2B4: test %eax,%eax;");
    asm("loc_4BA2B6: mov _data_672334,%eax;");
    asm("loc_4BA2BB: jbe loc_4BA2DF;");
    asm("loc_4BA2BD: mov (%eax),%ecx;");
    asm("loc_4BA2BF: cmpl $0x549C,0xC(%ecx);");
    asm("loc_4BA2C6: jne loc_4BA2DF;");
    asm("loc_4BA2C8: mov %ecx,%eax;");
    asm("loc_4BA2CA: push %eax;");
    asm("loc_4BA2CB: lea 0xC(%esp),%edx;");
    asm("loc_4BA2CF: push %edx;");
    asm("loc_4BA2D0: mov $_data_672330,%ecx;");
    asm("loc_4BA2D5: call _sub_4BD4B0;");
    asm("loc_4BA2DA: mov _data_672334,%eax;");
    asm("loc_4BA2DF: mov _data_672338,%ecx;");
    asm("loc_4BA2E5: xor %ebx,%ebx;");
    asm("loc_4BA2E7: test %ecx,%ecx;");
    asm("loc_4BA2E9: push %edi;");
    asm("loc_4BA2EA: jbe loc_4BA324;");
    asm("loc_4BA2EC: mov (%eax),%esi;");
    asm("loc_4BA2EE: cmp %eax,%esi;");
    asm("loc_4BA2F0: je loc_4BA324;");
    asm("loc_4BA2F2: mov _data_6119F8,%eax;");
    asm("loc_4BA2F7: push $1;");
    asm("loc_4BA2F9: push %eax;");
    asm("loc_4BA2FA: lea 8(%esi),%edi;");
    asm("loc_4BA2FD: push $_data_66DC60;");
    asm("loc_4BA302: push %edi;");
    asm("loc_4BA303: call _sub_4BA860;");
    asm("loc_4BA308: mov _data_672334,%eax;");
    asm("loc_4BA30D: add $0x10,%esp;");
    asm("loc_4BA310: cmpw $0x2A,_data_66DC60;");
    asm("loc_4BA318: jne loc_4BA322;");
    asm("loc_4BA31A: mov (%esi),%esi;");
    asm("loc_4BA31C: cmp %eax,%esi;");
    asm("loc_4BA31E: jne loc_4BA2F2;");
    asm("loc_4BA320: jmp loc_4BA324;");
    asm("loc_4BA322: mov %edi,%ebx;");
    asm("loc_4BA324: mov (%eax),%esi;");
    asm("loc_4BA326: mov 4(%esi),%ecx;");
    asm("loc_4BA329: push %ecx;");
    asm("loc_4BA32A: push %esi;");
    asm("loc_4BA32B: mov $_data_672330,%ecx;");
    asm("loc_4BA330: call _sub_4BD5A0;");
    asm("loc_4BA335: mov 0x14(%esp),%ecx;");
    asm("loc_4BA339: mov %eax,4(%esi);");
    asm("loc_4BA33C: mov 4(%eax),%edx;");
    asm("loc_4BA33F: mov %eax,(%edx);");
    asm("loc_4BA341: push %ecx;");
    asm("loc_4BA342: add $8,%eax;");
    asm("loc_4BA345: push %eax;");
    asm("loc_4BA346: call _sub_4BD5D0;");
    asm("loc_4BA34B: mov _data_672338,%eax;");
    asm("loc_4BA350: mov _data_672334,%edx;");
    asm("loc_4BA356: inc %eax;");
    asm("loc_4BA357: mov %eax,_data_672338;");
    asm("loc_4BA35C: mov (%edx),%esi;");
    asm("loc_4BA35E: add $8,%esi;");
    asm("loc_4BA361: push %esi;");
    asm("loc_4BA362: call _sub_4BA5A0;");
    asm("loc_4BA367: add $0xC,%esp;");
    asm("loc_4BA36A: test %ebx,%ebx;");
    asm("loc_4BA36C: pop %edi;");
    asm("loc_4BA36D: je loc_4BA3E5;");
    asm("loc_4BA36F: mov _data_6119F8,%eax;");
    asm("loc_4BA374: push $1;");
    asm("loc_4BA376: push %eax;");
    asm("loc_4BA377: push $_data_66FC60;");
    asm("loc_4BA37C: push %esi;");
    asm("loc_4BA37D: call _sub_4BA860;");
    asm("loc_4BA382: mov _data_6119F8,%ecx;");
    asm("loc_4BA388: push $1;");
    asm("loc_4BA38A: push %ecx;");
    asm("loc_4BA38B: push $_data_66DC60;");
    asm("loc_4BA390: push %ebx;");
    asm("loc_4BA391: call _sub_4BA860;");
    asm("loc_4BA396: push $_data_66DC60;");
    asm("loc_4BA39B: push $_data_66FC60;");
    asm("loc_4BA3A0: calll *_import_5C71D4;");
    asm("loc_4BA3A6: add $0x28,%esp;");
    asm("loc_4BA3A9: test %eax,%eax;");
    asm("loc_4BA3AB: jne loc_4BA3E5;");
    asm("loc_4BA3AD: mov _data_672334,%edx;");
    asm("loc_4BA3B3: mov (%edx),%esi;");
    asm("loc_4BA3B5: mov 4(%esi),%eax;");
    asm("loc_4BA3B8: mov (%esi),%ecx;");
    asm("loc_4BA3BA: mov %ecx,(%eax);");
    asm("loc_4BA3BC: mov (%esi),%edx;");
    asm("loc_4BA3BE: mov 4(%esi),%eax;");
    asm("loc_4BA3C1: lea 8(%esi),%ecx;");
    asm("loc_4BA3C4: mov %eax,4(%edx);");
    asm("loc_4BA3C7: calll *_import_5C6098;");
    asm("loc_4BA3CD: push %esi;");
    asm("loc_4BA3CE: call _sub_5B7E1D;");
    asm("loc_4BA3D3: mov _data_672338,%eax;");
    asm("loc_4BA3D8: add $4,%esp;");
    asm("loc_4BA3DB: dec %eax;");
    asm("loc_4BA3DC: pop %esi;");
    asm("loc_4BA3DD: mov %eax,_data_672338;");
    asm("loc_4BA3E2: pop %ebx;");
    asm("loc_4BA3E3: pop %ecx;");
    asm("loc_4BA3E4: ret;");
    asm("loc_4BA3E5: calll *_import_5C60D0;");
    asm("loc_4BA3EB: test %al,%al;");
    asm("loc_4BA3ED: je loc_4BA424;");
    asm("loc_4BA3EF: mov _data_6119F8,%ecx;");
    asm("loc_4BA3F5: lea (%ecx,%ecx),%edx;");
    asm("loc_4BA3F8: push %edx;");
    asm("loc_4BA3F9: push $_data_66FC60;");
    asm("loc_4BA3FE: push %esi;");
    asm("loc_4BA3FF: push $1;");
    asm("loc_4BA401: calll *_import_5C641C;");
    asm("loc_4BA407: mov _data_67ECD0,%ecx;");
    asm("loc_4BA40D: mov (%ecx),%edx;");
    asm("loc_4BA40F: add $0x10,%esp;");
    asm("loc_4BA412: push %eax;");
    asm("loc_4BA413: mov _data_673344,%eax;");
    asm("loc_4BA418: push $_data_66FC60;");
    asm("loc_4BA41D: push %eax;");
    asm("loc_4BA41E: calll *0x130(%edx);");
    asm("loc_4BA424: pop %esi;");
    asm("loc_4BA425: pop %ebx;");
    asm("loc_4BA426: pop %ecx;");
    asm("loc_4BA427: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BA430() // _sub_4BA430
{
    __DEBUG_ASM(4BA430);
    // chunk 0x4BA430 _sub_4BA430
    asm("loc_4BA430: mov %fs:0,%eax;");
    asm("loc_4BA436: push $0xFFFFFFFF;");
    asm("loc_4BA438: push $_sub_5BD39A;");
    asm("loc_4BA43D: push %eax;");
    asm("loc_4BA43E: mov %esp,%fs:0;");
    asm("loc_4BA445: sub $0x24,%esp;");
    asm("loc_4BA448: push %ebx;");
    asm("loc_4BA449: push %esi;");
    asm("loc_4BA44A: push %edi;");
    asm("loc_4BA44B: mov _data_672334,%edi;");
    asm("loc_4BA451: mov (%edi),%esi;");
    asm("loc_4BA453: cmp %edi,%esi;");
    asm("loc_4BA455: je loc_4BA46F;");
    asm("loc_4BA457: mov %esi,%eax;");
    asm("loc_4BA459: mov (%esi),%esi;");
    asm("loc_4BA45B: push %eax;");
    asm("loc_4BA45C: lea 0x10(%esp),%eax;");
    asm("loc_4BA460: push %eax;");
    asm("loc_4BA461: mov $_data_672330,%ecx;");
    asm("loc_4BA466: call _sub_4BD4B0;");
    asm("loc_4BA46B: cmp %edi,%esi;");
    asm("loc_4BA46D: jne loc_4BA457;");
    asm("loc_4BA46F: mov _data_66D35A,%al;");
    asm("loc_4BA474: xor %ebx,%ebx;");
    asm("loc_4BA476: cmp %bl,%al;");
    asm("loc_4BA478: jne loc_4BA4A4;");
    asm("loc_4BA47A: mov _data_672328,%edi;");
    asm("loc_4BA480: mov (%edi),%esi;");
    asm("loc_4BA482: cmp %edi,%esi;");
    asm("loc_4BA484: je loc_4BA49E;");
    asm("loc_4BA486: mov %esi,%eax;");
    asm("loc_4BA488: mov (%esi),%esi;");
    asm("loc_4BA48A: push %eax;");
    asm("loc_4BA48B: lea 0x10(%esp),%ecx;");
    asm("loc_4BA48F: push %ecx;");
    asm("loc_4BA490: mov $_data_672324,%ecx;");
    asm("loc_4BA495: call _sub_4BD4B0;");
    asm("loc_4BA49A: cmp %edi,%esi;");
    asm("loc_4BA49C: jne loc_4BA486;");
    asm("loc_4BA49E: mov %bl,_data_672404;");
    asm("loc_4BA4A4: mov 0x44(%esp),%esi;");
    asm("loc_4BA4A8: mov 0x40(%esp),%ecx;");
    asm("loc_4BA4AC: sub $8,%esi;");
    asm("loc_4BA4AF: mov %esi,0x44(%esp);");
    asm("loc_4BA4B3: mov 4(%ecx),%eax;");
    asm("loc_4BA4B6: add $8,%ecx;");
    asm("loc_4BA4B9: cmp %ebx,%eax;");
    asm("loc_4BA4BB: mov %ecx,0x40(%esp);");
    asm("loc_4BA4BF: jle loc_4BA58D;");
    asm("loc_4BA4C5: push %ebp;");
    asm("loc_4BA4C6: mov _import_5C6424,%ebp;");
    asm("loc_4BA4CC: mov %eax,0x10(%esp);");
    asm("loc_4BA4D0: mov %ebx,0x1C(%esp);");
    asm("loc_4BA4D4: mov %ebx,0x20(%esp);");
    asm("loc_4BA4D8: mov %bl,0x24(%esp);");
    asm("loc_4BA4DC: mov %bl,0x25(%esp);");
    asm("loc_4BA4E0: mov %bl,0x26(%esp);");
    asm("loc_4BA4E4: mov %bl,0x27(%esp);");
    asm("loc_4BA4E8: mov %bl,0x28(%esp);");
    asm("loc_4BA4EC: mov %bl,0x29(%esp);");
    asm("loc_4BA4F0: mov %bl,0x2A(%esp);");
    asm("loc_4BA4F4: mov %bl,0x2B(%esp);");
    asm("loc_4BA4F8: mov %bl,0x2C(%esp);");
    asm("loc_4BA4FC: mov %bl,0x2D(%esp);");
    asm("loc_4BA500: mov %bl,0x2E(%esp);");
    asm("loc_4BA504: mov %bl,0x2F(%esp);");
    asm("loc_4BA508: mov %bl,0x30(%esp);");
    asm("loc_4BA50C: mov %bl,0x31(%esp);");
    asm("loc_4BA510: lea 0x48(%esp),%edx;");
    asm("loc_4BA514: push %edx;");
    asm("loc_4BA515: lea 0x48(%esp),%eax;");
    asm("loc_4BA519: push %eax;");
    asm("loc_4BA51A: lea 0x24(%esp),%ecx;");
    asm("loc_4BA51E: push %ecx;");
    asm("loc_4BA51F: mov %ebx,0x48(%esp);");
    asm("loc_4BA523: call *%ebp;");
    asm("loc_4BA525: mov _data_672334,%esi;");
    asm("loc_4BA52B: mov 4(%esi),%edi;");
    asm("loc_4BA52E: push $0x20;");
    asm("loc_4BA530: call _sub_5B7E84;");
    asm("loc_4BA535: add $0x10,%esp;");
    asm("loc_4BA538: cmp %ebx,%edi;");
    asm("loc_4BA53A: mov %esi,(%eax);");
    asm("loc_4BA53C: jne loc_4BA540;");
    asm("loc_4BA53E: mov %eax,%edi;");
    asm("loc_4BA540: mov %edi,4(%eax);");
    asm("loc_4BA543: mov %eax,4(%esi);");
    asm("loc_4BA546: mov 4(%eax),%ecx;");
    asm("loc_4BA549: mov %eax,(%ecx);");
    asm("loc_4BA54B: lea 8(%eax),%ecx;");
    asm("loc_4BA54E: mov %ecx,0x14(%esp);");
    asm("loc_4BA552: mov %ecx,0x18(%esp);");
    asm("loc_4BA556: cmp %ebx,%ecx;");
    asm("loc_4BA558: movb $1,0x3C(%esp);");
    asm("loc_4BA55D: je loc_4BA56A;");
    asm("loc_4BA55F: lea 0x1C(%esp),%edx;");
    asm("loc_4BA563: push %edx;");
    asm("loc_4BA564: calll *_import_5C6420;");
    asm("loc_4BA56A: incl _data_672338;");
    asm("loc_4BA570: lea 0x1C(%esp),%ecx;");
    asm("loc_4BA574: movl $0xFFFFFFFF,0x3C(%esp);");
    asm("loc_4BA57C: calll *_import_5C6098;");
    asm("loc_4BA582: decl 0x10(%esp);");
    asm("loc_4BA586: jne loc_4BA4D0;");
    asm("loc_4BA58C: pop %ebp;");
    asm("loc_4BA58D: mov 0x30(%esp),%ecx;");
    asm("loc_4BA591: pop %edi;");
    asm("loc_4BA592: pop %esi;");
    asm("loc_4BA593: pop %ebx;");
    asm("loc_4BA594: mov %ecx,%fs:0;");
    asm("loc_4BA59B: add $0x30,%esp;");
    asm("loc_4BA59E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BA5A0() // _sub_4BA5A0
{
    asm("jmp dgb_4BA5A0;"); // jumptable skip
    asm(".long _jmp_4BA7C4;"); // jumptable address
    __DEBUG_ASM(4BA5A0);
    // chunk 0x4BA5A0 _sub_4BA5A0
    asm("loc_4BA5A0: mov %fs:0,%eax;");
    asm("loc_4BA5A6: push $0xFFFFFFFF;");
    asm("loc_4BA5A8: push $_sub_5BD3C2;");
    asm("loc_4BA5AD: push %eax;");
    asm("loc_4BA5AE: mov 0x10(%esp),%eax;");
    asm("loc_4BA5B2: mov %esp,%fs:0;");
    asm("loc_4BA5B9: sub $0x34,%esp;");
    asm("loc_4BA5BC: push %ebx;");
    asm("loc_4BA5BD: push %esi;");
    asm("loc_4BA5BE: mov (%eax),%esi;");
    asm("loc_4BA5C0: xor %ebx,%ebx;");
    asm("loc_4BA5C2: cmp %ebx,%esi;");
    asm("loc_4BA5C4: je loc_4BA7B2;");
    asm("loc_4BA5CA: push %ebp;");
    asm("loc_4BA5CB: mov _import_5C6098,%ebp;");
    asm("loc_4BA5D1: push %edi;");
    asm("loc_4BA5D2: movzwl 8(%esi),%eax;");
    asm("loc_4BA5D6: add $0xFFFFFFDF,%eax;");
    asm("loc_4BA5D9: cmp $0x39,%eax;");
    asm("loc_4BA5DC: ja loc_4BA7A6;");
    asm("loc_4BA5E2: movzbl _data_4BA7E8(%eax),%ecx;");
    asm("loc_4BA5E9: jmpl *_jmp_4BA7C4(,%ecx,4);");
    asm("loc_4BA5F0: mov 4(%esi),%edx;");
    asm("loc_4BA5F3: push %edx;");
    asm("loc_4BA5F4: calll *_import_5C6094;");
    asm("loc_4BA5FA: add $4,%esp;");
    asm("loc_4BA5FD: cmp %ebx,%eax;");
    asm("loc_4BA5FF: jne loc_4BA609;");
    asm("loc_4BA601: mov %ebx,4(%esi);");
    asm("loc_4BA604: jmp loc_4BA7A6;");
    asm("loc_4BA609: mov (%eax),%edx;");
    asm("loc_4BA60B: mov %eax,%ecx;");
    asm("loc_4BA60D: calll *0xC(%edx);");
    asm("loc_4BA610: mov %eax,4(%esi);");
    asm("loc_4BA613: jmp loc_4BA7A6;");
    asm("loc_4BA618: mov 4(%esi),%eax;");
    asm("loc_4BA61B: push %eax;");
    asm("loc_4BA61C: calll *_import_5C6090;");
    asm("loc_4BA622: add $4,%esp;");
    asm("loc_4BA625: cmp %ebx,%eax;");
    asm("loc_4BA627: jne loc_4BA631;");
    asm("loc_4BA629: mov %ebx,4(%esi);");
    asm("loc_4BA62C: jmp loc_4BA7A6;");
    asm("loc_4BA631: mov (%eax),%edx;");
    asm("loc_4BA633: mov %eax,%ecx;");
    asm("loc_4BA635: calll *8(%edx);");
    asm("loc_4BA638: mov %eax,4(%esi);");
    asm("loc_4BA63B: jmp loc_4BA7A6;");
    asm("loc_4BA640: mov 4(%esi),%eax;");
    asm("loc_4BA643: push %eax;");
    asm("loc_4BA644: calll *_import_5C6088;");
    asm("loc_4BA64A: add $4,%esp;");
    asm("loc_4BA64D: cmp %ebx,%eax;");
    asm("loc_4BA64F: jne loc_4BA659;");
    asm("loc_4BA651: mov %ebx,4(%esi);");
    asm("loc_4BA654: jmp loc_4BA7A6;");
    asm("loc_4BA659: mov 0x88(%eax),%ecx;");
    asm("loc_4BA65F: mov %ecx,4(%esi);");
    asm("loc_4BA662: jmp loc_4BA7A6;");
    asm("loc_4BA667: mov 4(%esi),%eax;");
    asm("loc_4BA66A: cmp %ebx,%eax;");
    asm("loc_4BA66C: je loc_4BA7A6;");
    asm("loc_4BA672: mov 4(%eax),%edi;");
    asm("loc_4BA675: push %eax;");
    asm("loc_4BA676: call _sub_5B7E1D;");
    asm("loc_4BA67B: mov %edi,4(%esi);");
    asm("loc_4BA67E: movw $0x4D,8(%esi);");
    asm("loc_4BA684: jmp loc_4BA7A3;");
    asm("loc_4BA689: mov 4(%esi),%edx;");
    asm("loc_4BA68C: mov %edx,0x54(%esp);");
    asm("loc_4BA690: mov %ebx,0x14(%esp);");
    asm("loc_4BA694: mov %ebx,0x18(%esp);");
    asm("loc_4BA698: mov %bl,0x1C(%esp);");
    asm("loc_4BA69C: mov %bl,0x1D(%esp);");
    asm("loc_4BA6A0: mov %bl,0x1E(%esp);");
    asm("loc_4BA6A4: mov %bl,0x1F(%esp);");
    asm("loc_4BA6A8: mov %bl,0x20(%esp);");
    asm("loc_4BA6AC: mov %bl,0x21(%esp);");
    asm("loc_4BA6B0: mov %bl,0x22(%esp);");
    asm("loc_4BA6B4: mov %bl,0x23(%esp);");
    asm("loc_4BA6B8: mov %bl,0x24(%esp);");
    asm("loc_4BA6BC: mov %bl,0x25(%esp);");
    asm("loc_4BA6C0: mov %bl,0x26(%esp);");
    asm("loc_4BA6C4: mov %bl,0x27(%esp);");
    asm("loc_4BA6C8: mov %bl,0x28(%esp);");
    asm("loc_4BA6CC: mov %bl,0x29(%esp);");
    asm("loc_4BA6D0: mov %ebx,0x4C(%esp);");
    asm("loc_4BA6D4: mov %ebx,0x2C(%esp);");
    asm("loc_4BA6D8: mov %ebx,0x30(%esp);");
    asm("loc_4BA6DC: mov %bl,0x34(%esp);");
    asm("loc_4BA6E0: mov %bl,0x35(%esp);");
    asm("loc_4BA6E4: mov %bl,0x36(%esp);");
    asm("loc_4BA6E8: mov %bl,0x37(%esp);");
    asm("loc_4BA6EC: mov %bl,0x38(%esp);");
    asm("loc_4BA6F0: mov %bl,0x39(%esp);");
    asm("loc_4BA6F4: mov %bl,0x3A(%esp);");
    asm("loc_4BA6F8: mov %bl,0x3B(%esp);");
    asm("loc_4BA6FC: mov %bl,0x3C(%esp);");
    asm("loc_4BA700: mov %bl,0x3D(%esp);");
    asm("loc_4BA704: mov %bl,0x3E(%esp);");
    asm("loc_4BA708: mov %bl,0x3F(%esp);");
    asm("loc_4BA70C: mov %bl,0x40(%esp);");
    asm("loc_4BA710: mov %bl,0x41(%esp);");
    asm("loc_4BA714: lea 0x10(%esp),%eax;");
    asm("loc_4BA718: push %eax;");
    asm("loc_4BA719: lea 0x30(%esp),%ecx;");
    asm("loc_4BA71D: push %ecx;");
    asm("loc_4BA71E: lea 0x1C(%esp),%edx;");
    asm("loc_4BA722: push %edx;");
    asm("loc_4BA723: lea 0x60(%esp),%eax;");
    asm("loc_4BA727: push %eax;");
    asm("loc_4BA728: movb $1,0x5C(%esp);");
    asm("loc_4BA72D: calll *_import_5C60A0;");
    asm("loc_4BA733: mov 0x28(%esp),%ecx;");
    asm("loc_4BA737: add $0x10,%esp;");
    asm("loc_4BA73A: neg %eax;");
    asm("loc_4BA73C: sbb %eax,%eax;");
    asm("loc_4BA73E: and %ecx,%eax;");
    asm("loc_4BA740: lea 0x2C(%esp),%ecx;");
    asm("loc_4BA744: mov %eax,4(%esi);");
    asm("loc_4BA747: mov %bl,0x4C(%esp);");
    asm("loc_4BA74B: call *%ebp;");
    asm("loc_4BA74D: lea 0x14(%esp),%ecx;");
    asm("loc_4BA751: movl $0xFFFFFFFF,0x4C(%esp);");
    asm("loc_4BA759: call *%ebp;");
    asm("loc_4BA75B: jmp loc_4BA7A6;");
    asm("loc_4BA75D: mov 4(%esi),%ecx;");
    asm("loc_4BA760: push %ecx;");
    asm("loc_4BA761: calll *_import_5C608C;");
    asm("loc_4BA767: xor %edx,%edx;");
    asm("loc_4BA769: add $4,%esp;");
    asm("loc_4BA76C: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4BA76F: sete %dl;");
    asm("loc_4BA772: dec %edx;");
    asm("loc_4BA773: and %eax,%edx;");
    asm("loc_4BA775: mov %edx,4(%esi);");
    asm("loc_4BA778: jmp loc_4BA7A6;");
    asm("loc_4BA77A: mov 4(%esi),%eax;");
    asm("loc_4BA77D: push %eax;");
    asm("loc_4BA77E: calll *_import_5C6084;");
    asm("loc_4BA784: add $4,%esp;");
    asm("loc_4BA787: cmp %ebx,%eax;");
    asm("loc_4BA789: je loc_4BA7A6;");
    asm("loc_4BA78B: mov (%eax),%edx;");
    asm("loc_4BA78D: mov %eax,%ecx;");
    asm("loc_4BA78F: calll *0x84(%edx);");
    asm("loc_4BA795: mov %eax,4(%esi);");
    asm("loc_4BA798: jmp loc_4BA7A6;");
    asm("loc_4BA79A: mov 4(%esi),%eax;");
    asm("loc_4BA79D: push %eax;");
    asm("loc_4BA79E: call _sub_4BA5A0;");
    asm("loc_4BA7A3: add $4,%esp;");
    asm("loc_4BA7A6: mov (%esi),%esi;");
    asm("loc_4BA7A8: cmp %ebx,%esi;");
    asm("loc_4BA7AA: jne loc_4BA5D2;");
    asm("loc_4BA7B0: pop %edi;");
    asm("loc_4BA7B1: pop %ebp;");
    asm("loc_4BA7B2: mov 0x3C(%esp),%ecx;");
    asm("loc_4BA7B6: pop %esi;");
    asm("loc_4BA7B7: pop %ebx;");
    asm("loc_4BA7B8: mov %ecx,%fs:0;");
    asm("loc_4BA7BF: add $0x40,%esp;");
    asm("loc_4BA7C2: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_4BA7C4: .long loc_4BA79A;");
    asm(".long loc_4BA618;");
    asm(".long loc_4BA75D;");
    asm(".long loc_4BA640;");
    asm(".long loc_4BA667;");
    asm(".long loc_4BA689;");
    asm(".long loc_4BA5F0;");
    asm(".long loc_4BA77A;");
    asm(".long loc_4BA7A6;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4BA5A0);
_naked _weak void _sub_4BA830() // _sub_4BA830
{
    __DEBUG_ASM(4BA830);
    // chunk 0x4BA830 _sub_4BA830
    asm("loc_4BA830: mov 4(%esp),%eax;");
    asm("loc_4BA834: mov (%eax),%eax;");
    asm("loc_4BA836: test %eax,%eax;");
    asm("loc_4BA838: je loc_4BA854;");
    asm("loc_4BA83A: mov 0xC(%esp),%cx;");
    asm("loc_4BA83F: mov 8(%esp),%dl;");
    asm("loc_4BA843: cmp %cx,8(%eax);");
    asm("loc_4BA847: jne loc_4BA84E;");
    asm("loc_4BA849: cmp %dl,0xA(%eax);");
    asm("loc_4BA84C: je loc_4BA856;");
    asm("loc_4BA84E: mov (%eax),%eax;");
    asm("loc_4BA850: test %eax,%eax;");
    asm("loc_4BA852: jne loc_4BA843;");
    asm("loc_4BA854: xor %eax,%eax;");
    asm("loc_4BA856: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BA860() // _sub_4BA860
{
    asm("jmp dgb_4BA860;"); // jumptable skip
    asm(".long _jmp_4BB0C8;"); // jumptable address
    __DEBUG_ASM(4BA860);
    // chunk 0x4BA860 _sub_4BA860
    asm("loc_4BA860: mov $0x20DC,%eax;");
    asm("loc_4BA865: call _sub_5B7E90;");
    asm("loc_4BA86A: mov 0x20E8(%esp),%eax;");
    asm("loc_4BA871: mov 0x20E0(%esp),%edx;");
    asm("loc_4BA878: mov 0x20E4(%esp),%ecx;");
    asm("loc_4BA87F: push %ebx;");
    asm("loc_4BA880: push %esi;");
    asm("loc_4BA881: lea (%eax,%eax),%esi;");
    asm("loc_4BA884: mov 4(%edx),%eax;");
    asm("loc_4BA887: test %eax,%eax;");
    asm("loc_4BA889: lea (%esi,%ecx),%ebx;");
    asm("loc_4BA88C: mov %esi,0x14(%esp);");
    asm("loc_4BA890: mov %ebx,0xC(%esp);");
    asm("loc_4BA894: jne loc_4BA8A2;");
    asm("loc_4BA896: pop %esi;");
    asm("loc_4BA897: mov %ax,(%ecx);");
    asm("loc_4BA89A: pop %ebx;");
    asm("loc_4BA89B: add $0x20DC,%esp;");
    asm("loc_4BA8A1: ret;");
    asm("loc_4BA8A2: mov _data_67ECA8,%edx;");
    asm("loc_4BA8A8: push %ebp;");
    asm("loc_4BA8A9: push %edi;");
    asm("loc_4BA8AA: push $0x1000;");
    asm("loc_4BA8AF: lea 0xF0(%esp),%ecx;");
    asm("loc_4BA8B6: push %ecx;");
    asm("loc_4BA8B7: push %eax;");
    asm("loc_4BA8B8: push %edx;");
    asm("loc_4BA8B9: lea 0xFC(%esp),%ebp;");
    asm("loc_4BA8C0: call _sub_4347E0;");
    asm("loc_4BA8C5: mov 0xFC(%esp),%eax;");
    asm("loc_4BA8CC: add $0x10,%esp;");
    asm("loc_4BA8CF: xor %cl,%cl;");
    asm("loc_4BA8D1: test %ax,%ax;");
    asm("loc_4BA8D4: mov %eax,%edi;");
    asm("loc_4BA8D6: je loc_4BB094;");
    asm("loc_4BA8DC: lea (%esp),%esp;");
    asm("loc_4BA8E0: add $2,%ebp;");
    asm("loc_4BA8E3: cmp $0x25,%di;");
    asm("loc_4BA8E7: mov %ebp,0x10(%esp);");
    asm("loc_4BA8EB: jne loc_4BA8F4;");
    asm("loc_4BA8ED: mov $1,%cl;");
    asm("loc_4BA8EF: jmp loc_4BB083;");
    asm("loc_4BA8F4: test %cl,%cl;");
    asm("loc_4BA8F6: je loc_4BB05D;");
    asm("loc_4BA8FC: mov (%ebp),%ax;");
    asm("loc_4BA900: xor %ecx,%ecx;");
    asm("loc_4BA902: cmp $0x30,%ax;");
    asm("loc_4BA906: jb loc_4BA92C;");
    asm("loc_4BA908: cmp $0x39,%ax;");
    asm("loc_4BA90C: ja loc_4BA928;");
    asm("loc_4BA90E: cmp $0x40,%ecx;");
    asm("loc_4BA911: jge loc_4BA928;");
    asm("loc_4BA913: mov %ax,0x6C(%esp,%ecx,2);");
    asm("loc_4BA918: add $2,%ebp;");
    asm("loc_4BA91B: xor %eax,%eax;");
    asm("loc_4BA91D: mov (%ebp),%ax;");
    asm("loc_4BA921: inc %ecx;");
    asm("loc_4BA922: cmp $0x30,%ax;");
    asm("loc_4BA926: jae loc_4BA908;");
    asm("loc_4BA928: mov %ebp,0x10(%esp);");
    asm("loc_4BA92C: lea 0x6C(%esp),%eax;");
    asm("loc_4BA930: push %eax;");
    asm("loc_4BA931: movw $0,0x70(%esp,%ecx,2);");
    asm("loc_4BA938: calll *_import_5C70B0;");
    asm("loc_4BA93E: add $4,%esp;");
    asm("loc_4BA941: or $0xFFFFFFFF,%esi;");
    asm("loc_4BA944: cmpw $0x76,(%ebp);");
    asm("loc_4BA949: mov %al,0x18(%esp);");
    asm("loc_4BA94D: jne loc_4BA969;");
    asm("loc_4BA94F: mov 2(%ebp),%cl;");
    asm("loc_4BA952: cmp $0x30,%cl;");
    asm("loc_4BA955: jl loc_4BA969;");
    asm("loc_4BA957: cmp $0x39,%cl;");
    asm("loc_4BA95A: jg loc_4BA969;");
    asm("loc_4BA95C: movsbl %cl,%esi;");
    asm("loc_4BA95F: add $4,%ebp;");
    asm("loc_4BA962: mov %ebp,0x10(%esp);");
    asm("loc_4BA966: sub $0x30,%esi;");
    asm("loc_4BA969: xor %ecx,%ecx;");
    asm("loc_4BA96B: mov %di,%cx;");
    asm("loc_4BA96E: add $0xFFFFFFDF,%ecx;");
    asm("loc_4BA971: cmp $0x52,%ecx;");
    asm("loc_4BA974: ja loc_4BB07D;");
    asm("loc_4BA97A: movzbl _data_4BB0EC(%ecx),%ecx;");
    asm("loc_4BA981: jmpl *_jmp_4BB0C8(,%ecx,4);");
    asm("loc_4BA988: mov 0x20FC(%esp),%cl;");
    asm("loc_4BA98F: test %cl,%cl;");
    asm("loc_4BA991: je loc_4BB07D;");
    asm("loc_4BA997: mov 0x20F0(%esp),%edx;");
    asm("loc_4BA99E: mov (%edx),%ecx;");
    asm("loc_4BA9A0: test %ecx,%ecx;");
    asm("loc_4BA9A2: je loc_4BB07D;");
    asm("loc_4BA9A8: cmp %di,8(%ecx);");
    asm("loc_4BA9AC: jne loc_4BA9B3;");
    asm("loc_4BA9AE: cmp %al,0xA(%ecx);");
    asm("loc_4BA9B1: je loc_4BA9BE;");
    asm("loc_4BA9B3: mov (%ecx),%ecx;");
    asm("loc_4BA9B5: test %ecx,%ecx;");
    asm("loc_4BA9B7: jne loc_4BA9A8;");
    asm("loc_4BA9B9: jmp loc_4BB07D;");
    asm("loc_4BA9BE: mov 4(%ecx),%esi;");
    asm("loc_4BA9C1: cmp $2,%esi;");
    asm("loc_4BA9C4: je loc_4BB07D;");
    asm("loc_4BA9CA: mov 0x20F4(%esp),%eax;");
    asm("loc_4BA9D1: mov _data_67ECA8,%edx;");
    asm("loc_4BA9D7: mov %ebx,%ecx;");
    asm("loc_4BA9D9: sub %eax,%ecx;");
    asm("loc_4BA9DB: sar $1,%ecx;");
    asm("loc_4BA9DD: push %ecx;");
    asm("loc_4BA9DE: push %eax;");
    asm("loc_4BA9DF: push %esi;");
    asm("loc_4BA9E0: push %edx;");
    asm("loc_4BA9E1: call _sub_4347E0;");
    asm("loc_4BA9E6: mov %eax,%edi;");
    asm("loc_4BA9E8: add $0x10,%esp;");
    asm("loc_4BA9EB: test %edi,%edi;");
    asm("loc_4BA9ED: jne loc_4BAA0F;");
    asm("loc_4BA9EF: push %esi;");
    asm("loc_4BA9F0: push $0x2B3;");
    asm("loc_4BA9F5: push $_data_5D5A4C;");
    asm("loc_4BA9FA: mov $0x100002,%eax;");
    asm("loc_4BA9FF: push $_data_5C94A8;");
    asm("loc_4BAA04: push %eax;");
    asm("loc_4BAA05: mov _import_5C6D18,%eax;");
    asm("loc_4BAA0A: calll *(%eax);");
    asm("loc_4BAA0C: add $0x14,%esp;");
    asm("loc_4BAA0F: mov 0x20F4(%esp),%ecx;");
    asm("loc_4BAA16: lea (%ecx,%edi,2),%edi;");
    asm("loc_4BAA19: cmp %edi,%ebx;");
    asm("loc_4BAA1B: mov %edi,0x20F4(%esp);");
    asm("loc_4BAA22: jne loc_4BB07D;");
    asm("loc_4BAA28: sub $2,%edi;");
    asm("loc_4BAA2B: mov %edi,0x20F4(%esp);");
    asm("loc_4BAA32: movw $0,(%edi);");
    asm("loc_4BAA37: addl $2,0x20F4(%esp);");
    asm("loc_4BAA3F: jmp loc_4BB07D;");
    asm("loc_4BAA44: mov 0x20F0(%esp),%edx;");
    asm("loc_4BAA4B: mov (%edx),%ecx;");
    asm("loc_4BAA4D: test %ecx,%ecx;");
    asm("loc_4BAA4F: je loc_4BB07D;");
    asm("loc_4BAA55: cmp %di,8(%ecx);");
    asm("loc_4BAA59: jne loc_4BAA60;");
    asm("loc_4BAA5B: cmp %al,0xA(%ecx);");
    asm("loc_4BAA5E: je loc_4BAA6B;");
    asm("loc_4BAA60: mov (%ecx),%ecx;");
    asm("loc_4BAA62: test %ecx,%ecx;");
    asm("loc_4BAA64: jne loc_4BAA55;");
    asm("loc_4BAA66: jmp loc_4BB07D;");
    asm("loc_4BAA6B: test %esi,%esi;");
    asm("loc_4BAA6D: mov 4(%ecx),%edi;");
    asm("loc_4BAA70: mov 0x20F4(%esp),%eax;");
    asm("loc_4BAA77: jl loc_4BACCB;");
    asm("loc_4BAA7D: imul $0x64,%esi;");
    asm("loc_4BAA80: lea 0x202FA(%edi,%esi),%esi;");
    asm("loc_4BAA87: jmp loc_4BAD5A;");
    asm("loc_4BAA8C: mov 0x20F0(%esp),%ecx;");
    asm("loc_4BAA93: mov (%ecx),%ecx;");
    asm("loc_4BAA95: test %ecx,%ecx;");
    asm("loc_4BAA97: je loc_4BB07D;");
    asm("loc_4BAA9D: lea (%ecx),%ecx;");
    asm("loc_4BAAA0: cmp %di,8(%ecx);");
    asm("loc_4BAAA4: jne loc_4BAAAB;");
    asm("loc_4BAAA6: cmp %al,0xA(%ecx);");
    asm("loc_4BAAA9: je loc_4BAAB6;");
    asm("loc_4BAAAB: mov (%ecx),%ecx;");
    asm("loc_4BAAAD: test %ecx,%ecx;");
    asm("loc_4BAAAF: jne loc_4BAAA0;");
    asm("loc_4BAAB1: jmp loc_4BB07D;");
    asm("loc_4BAAB6: mov 4(%ecx),%edx;");
    asm("loc_4BAAB9: push $0x1F;");
    asm("loc_4BAABB: push %edx;");
    asm("loc_4BAABC: lea 0x34(%esp),%eax;");
    asm("loc_4BAAC0: push %eax;");
    asm("loc_4BAAC1: call _sub_4779A0;");
    asm("loc_4BAAC6: lea 0x38(%esp),%ecx;");
    asm("loc_4BAACA: push %ecx;");
    asm("loc_4BAACB: calll *_import_5C71C8;");
    asm("loc_4BAAD1: lea (%eax,%eax),%esi;");
    asm("loc_4BAAD4: mov 0x2104(%esp),%eax;");
    asm("loc_4BAADB: lea (%esi,%eax),%edx;");
    asm("loc_4BAADE: add $0x10,%esp;");
    asm("loc_4BAAE1: cmp %ebx,%edx;");
    asm("loc_4BAAE3: jae loc_4BB07D;");
    asm("loc_4BAAE9: lea 0x2C(%esp),%ecx;");
    asm("loc_4BAAED: push %ecx;");
    asm("loc_4BAAEE: push %eax;");
    asm("loc_4BAAEF: calll *_import_5C70AC;");
    asm("loc_4BAAF5: mov 0x20FC(%esp),%eax;");
    asm("loc_4BAAFC: add $8,%esp;");
    asm("loc_4BAAFF: add %esi,%eax;");
    asm("loc_4BAB01: mov %eax,0x20F4(%esp);");
    asm("loc_4BAB08: jmp loc_4BB07D;");
    asm("loc_4BAB0D: mov 0x20F0(%esp),%edx;");
    asm("loc_4BAB14: mov (%edx),%ecx;");
    asm("loc_4BAB16: test %ecx,%ecx;");
    asm("loc_4BAB18: je loc_4BB07D;");
    asm("loc_4BAB1E: mov %edi,%edi;");
    asm("loc_4BAB20: cmp %di,8(%ecx);");
    asm("loc_4BAB24: jne loc_4BAB2B;");
    asm("loc_4BAB26: cmp %al,0xA(%ecx);");
    asm("loc_4BAB29: je loc_4BAB36;");
    asm("loc_4BAB2B: mov (%ecx),%ecx;");
    asm("loc_4BAB2D: test %ecx,%ecx;");
    asm("loc_4BAB2F: jne loc_4BAB20;");
    asm("loc_4BAB31: jmp loc_4BB07D;");
    asm("loc_4BAB36: test %esi,%esi;");
    asm("loc_4BAB38: jge loc_4BAD3E;");
    asm("loc_4BAB3E: mov 4(%ecx),%esi;");
    asm("loc_4BAB41: cmp $0x40,%esi;");
    asm("loc_4BAB44: mov 0x20F4(%esp),%eax;");
    asm("loc_4BAB4B: jae loc_4BA9D1;");
    asm("loc_4BAB51: mov %ebx,%edx;");
    asm("loc_4BAB53: sub %eax,%edx;");
    asm("loc_4BAB55: sar $1,%edx;");
    asm("loc_4BAB57: push %edx;");
    asm("loc_4BAB58: mov %esi,%edi;");
    asm("loc_4BAB5A: push %eax;");
    asm("loc_4BAB5B: mov _data_67ECA8,%eax;");
    asm("loc_4BAB60: shr $3,%edi;");
    asm("loc_4BAB63: push $0x331B;");
    asm("loc_4BAB68: and $7,%edi;");
    asm("loc_4BAB6B: and $7,%esi;");
    asm("loc_4BAB6E: push %eax;");
    asm("loc_4BAB6F: add $0x506,%edi;");
    asm("loc_4BAB75: add $0x514,%esi;");
    asm("loc_4BAB7B: call _sub_4347E0;");
    asm("loc_4BAB80: mov %eax,%ebp;");
    asm("loc_4BAB82: add $0x10,%esp;");
    asm("loc_4BAB85: test %ebp,%ebp;");
    asm("loc_4BAB87: jne loc_4BABAE;");
    asm("loc_4BAB89: mov _import_5C6D18,%ecx;");
    asm("loc_4BAB8F: push $0x331B;");
    asm("loc_4BAB94: push $0x2B3;");
    asm("loc_4BAB99: push $_data_5D5A4C;");
    asm("loc_4BAB9E: mov $0x100002,%eax;");
    asm("loc_4BABA3: push $_data_5C94A8;");
    asm("loc_4BABA8: push %eax;");
    asm("loc_4BABA9: calll *(%ecx);");
    asm("loc_4BABAB: add $0x14,%esp;");
    asm("loc_4BABAE: mov 0x20F4(%esp),%edx;");
    asm("loc_4BABB5: lea (%edx,%ebp,2),%eax;");
    asm("loc_4BABB8: cmp %eax,%ebx;");
    asm("loc_4BABBA: mov %eax,0x20F4(%esp);");
    asm("loc_4BABC1: jne loc_4BABE3;");
    asm("loc_4BABC3: sub $2,%eax;");
    asm("loc_4BABC6: mov %eax,0x20F4(%esp);");
    asm("loc_4BABCD: movw $0,(%eax);");
    asm("loc_4BABD2: mov 0x20F4(%esp),%eax;");
    asm("loc_4BABD9: add $2,%eax;");
    asm("loc_4BABDC: mov %eax,0x20F4(%esp);");
    asm("loc_4BABE3: mov _data_67ECA8,%edx;");
    asm("loc_4BABE9: mov %ebx,%ecx;");
    asm("loc_4BABEB: sub %eax,%ecx;");
    asm("loc_4BABED: sar $1,%ecx;");
    asm("loc_4BABEF: push %ecx;");
    asm("loc_4BABF0: push %eax;");
    asm("loc_4BABF1: push $1;");
    asm("loc_4BABF3: push %edx;");
    asm("loc_4BABF4: call _sub_4347E0;");
    asm("loc_4BABF9: mov %eax,%ebp;");
    asm("loc_4BABFB: add $0x10,%esp;");
    asm("loc_4BABFE: test %ebp,%ebp;");
    asm("loc_4BAC00: jne loc_4BAC23;");
    asm("loc_4BAC02: push $1;");
    asm("loc_4BAC04: push $0x2B3;");
    asm("loc_4BAC09: push $_data_5D5A4C;");
    asm("loc_4BAC0E: mov $0x100002,%eax;");
    asm("loc_4BAC13: push $_data_5C94A8;");
    asm("loc_4BAC18: push %eax;");
    asm("loc_4BAC19: mov _import_5C6D18,%eax;");
    asm("loc_4BAC1E: calll *(%eax);");
    asm("loc_4BAC20: add $0x14,%esp;");
    asm("loc_4BAC23: mov 0x20F4(%esp),%ecx;");
    asm("loc_4BAC2A: lea (%ecx,%ebp,2),%eax;");
    asm("loc_4BAC2D: cmp %eax,%ebx;");
    asm("loc_4BAC2F: mov %eax,0x20F4(%esp);");
    asm("loc_4BAC36: jne loc_4BAC58;");
    asm("loc_4BAC38: sub $2,%eax;");
    asm("loc_4BAC3B: mov %eax,0x20F4(%esp);");
    asm("loc_4BAC42: movw $0,(%eax);");
    asm("loc_4BAC47: mov 0x20F4(%esp),%eax;");
    asm("loc_4BAC4E: add $2,%eax;");
    asm("loc_4BAC51: mov %eax,0x20F4(%esp);");
    asm("loc_4BAC58: mov %ebx,%edx;");
    asm("loc_4BAC5A: sub %eax,%edx;");
    asm("loc_4BAC5C: sar $1,%edx;");
    asm("loc_4BAC5E: push %edx;");
    asm("loc_4BAC5F: push %eax;");
    asm("loc_4BAC60: mov _data_67ECA8,%eax;");
    asm("loc_4BAC65: push %esi;");
    asm("loc_4BAC66: push %eax;");
    asm("loc_4BAC67: call _sub_4347E0;");
    asm("loc_4BAC6C: mov %eax,%ebp;");
    asm("loc_4BAC6E: add $0x10,%esp;");
    asm("loc_4BAC71: test %ebp,%ebp;");
    asm("loc_4BAC73: jne loc_4BAC96;");
    asm("loc_4BAC75: mov _import_5C6D18,%ecx;");
    asm("loc_4BAC7B: push %esi;");
    asm("loc_4BAC7C: push $0x2B3;");
    asm("loc_4BAC81: push $_data_5D5A4C;");
    asm("loc_4BAC86: mov $0x100002,%eax;");
    asm("loc_4BAC8B: push $_data_5C94A8;");
    asm("loc_4BAC90: push %eax;");
    asm("loc_4BAC91: calll *(%ecx);");
    asm("loc_4BAC93: add $0x14,%esp;");
    asm("loc_4BAC96: mov 0x20F4(%esp),%edx;");
    asm("loc_4BAC9D: lea (%edx,%ebp,2),%eax;");
    asm("loc_4BACA0: cmp %eax,%ebx;");
    asm("loc_4BACA2: mov %eax,0x20F4(%esp);");
    asm("loc_4BACA9: jne loc_4BACCB;");
    asm("loc_4BACAB: sub $2,%eax;");
    asm("loc_4BACAE: mov %eax,0x20F4(%esp);");
    asm("loc_4BACB5: movw $0,(%eax);");
    asm("loc_4BACBA: mov 0x20F4(%esp),%eax;");
    asm("loc_4BACC1: add $2,%eax;");
    asm("loc_4BACC4: mov %eax,0x20F4(%esp);");
    asm("loc_4BACCB: mov _data_67ECA8,%edx;");
    asm("loc_4BACD1: mov %ebx,%ecx;");
    asm("loc_4BACD3: sub %eax,%ecx;");
    asm("loc_4BACD5: sar $1,%ecx;");
    asm("loc_4BACD7: push %ecx;");
    asm("loc_4BACD8: push %eax;");
    asm("loc_4BACD9: push %edi;");
    asm("loc_4BACDA: push %edx;");
    asm("loc_4BACDB: call _sub_4347E0;");
    asm("loc_4BACE0: mov %eax,%esi;");
    asm("loc_4BACE2: add $0x10,%esp;");
    asm("loc_4BACE5: test %esi,%esi;");
    asm("loc_4BACE7: jne loc_4BAD09;");
    asm("loc_4BACE9: push %edi;");
    asm("loc_4BACEA: push $0x2B3;");
    asm("loc_4BACEF: push $_data_5D5A4C;");
    asm("loc_4BACF4: mov $0x100002,%eax;");
    asm("loc_4BACF9: push $_data_5C94A8;");
    asm("loc_4BACFE: push %eax;");
    asm("loc_4BACFF: mov _import_5C6D18,%eax;");
    asm("loc_4BAD04: calll *(%eax);");
    asm("loc_4BAD06: add $0x14,%esp;");
    asm("loc_4BAD09: mov 0x20F4(%esp),%ecx;");
    asm("loc_4BAD10: lea (%ecx,%esi,2),%esi;");
    asm("loc_4BAD13: cmp %esi,%ebx;");
    asm("loc_4BAD15: mov %esi,0x20F4(%esp);");
    asm("loc_4BAD1C: jne loc_4BB07D;");
    asm("loc_4BAD22: sub $2,%esi;");
    asm("loc_4BAD25: mov %esi,0x20F4(%esp);");
    asm("loc_4BAD2C: movw $0,(%esi);");
    asm("loc_4BAD31: addl $2,0x20F4(%esp);");
    asm("loc_4BAD39: jmp loc_4BB07D;");
    asm("loc_4BAD3E: mov 4(%ecx),%eax;");
    asm("loc_4BAD41: imul $0xC8,%esi;");
    asm("loc_4BAD47: cmp $0x40,%eax;");
    asm("loc_4BAD4A: jb loc_4BADA7;");
    asm("loc_4BAD4C: lea 0x11349(%eax,%esi),%esi;");
    asm("loc_4BAD53: mov 0x20F4(%esp),%eax;");
    asm("loc_4BAD5A: mov %ebx,%edx;");
    asm("loc_4BAD5C: sub %eax,%edx;");
    asm("loc_4BAD5E: sar $1,%edx;");
    asm("loc_4BAD60: push %edx;");
    asm("loc_4BAD61: push %eax;");
    asm("loc_4BAD62: mov _data_67ECA8,%eax;");
    asm("loc_4BAD67: push %esi;");
    asm("loc_4BAD68: push %eax;");
    asm("loc_4BAD69: call _sub_4347E0;");
    asm("loc_4BAD6E: mov %eax,%edi;");
    asm("loc_4BAD70: add $0x10,%esp;");
    asm("loc_4BAD73: test %edi,%edi;");
    asm("loc_4BAD75: jne loc_4BAD98;");
    asm("loc_4BAD77: mov _import_5C6D18,%ecx;");
    asm("loc_4BAD7D: push %esi;");
    asm("loc_4BAD7E: push $0x2B3;");
    asm("loc_4BAD83: push $_data_5D5A4C;");
    asm("loc_4BAD88: mov $0x100002,%eax;");
    asm("loc_4BAD8D: push $_data_5C94A8;");
    asm("loc_4BAD92: push %eax;");
    asm("loc_4BAD93: calll *(%ecx);");
    asm("loc_4BAD95: add $0x14,%esp;");
    asm("loc_4BAD98: mov 0x20F4(%esp),%edx;");
    asm("loc_4BAD9F: lea (%edx,%edi,2),%edi;");
    asm("loc_4BADA2: jmp loc_4BAA19;");
    asm("loc_4BADA7: mov 0x14(%esp),%ecx;");
    asm("loc_4BADAB: mov _data_67ECA8,%edx;");
    asm("loc_4BADB1: mov %eax,%edi;");
    asm("loc_4BADB3: and $7,%eax;");
    asm("loc_4BADB6: add $0x514,%eax;");
    asm("loc_4BADBB: mov %eax,%ebx;");
    asm("loc_4BADBD: mov 0x20F4(%esp),%eax;");
    asm("loc_4BADC4: sub %eax,%ecx;");
    asm("loc_4BADC6: sar $1,%ecx;");
    asm("loc_4BADC8: push %ecx;");
    asm("loc_4BADC9: push %eax;");
    asm("loc_4BADCA: shr $3,%edi;");
    asm("loc_4BADCD: add $0x50FA0,%esi;");
    asm("loc_4BADD3: push %esi;");
    asm("loc_4BADD4: and $7,%edi;");
    asm("loc_4BADD7: push %edx;");
    asm("loc_4BADD8: add $0x506,%edi;");
    asm("loc_4BADDE: call _sub_4347E0;");
    asm("loc_4BADE3: mov %eax,%ebp;");
    asm("loc_4BADE5: add $0x10,%esp;");
    asm("loc_4BADE8: test %ebp,%ebp;");
    asm("loc_4BADEA: jne loc_4BAE1A;");
    asm("loc_4BADEC: push $2;");
    asm("loc_4BADEE: push $0x10000;");
    asm("loc_4BADF3: lea 0x28(%esp),%ecx;");
    asm("loc_4BADF7: call _sub_411C50;");
    asm("loc_4BADFC: mov (%eax),%eax;");
    asm("loc_4BADFE: mov _import_5C6D18,%ecx;");
    asm("loc_4BAE04: push %esi;");
    asm("loc_4BAE05: push $0x2B3;");
    asm("loc_4BAE0A: push $_data_5D5A4C;");
    asm("loc_4BAE0F: push $_data_5C94A8;");
    asm("loc_4BAE14: push %eax;");
    asm("loc_4BAE15: calll *(%ecx);");
    asm("loc_4BAE17: add $0x14,%esp;");
    asm("loc_4BAE1A: mov 0x20F4(%esp),%edx;");
    asm("loc_4BAE21: mov 0x14(%esp),%ecx;");
    asm("loc_4BAE25: lea (%edx,%ebp,2),%eax;");
    asm("loc_4BAE28: cmp %eax,%ecx;");
    asm("loc_4BAE2A: mov %eax,0x20F4(%esp);");
    asm("loc_4BAE31: jne loc_4BAE53;");
    asm("loc_4BAE33: sub $2,%eax;");
    asm("loc_4BAE36: mov %eax,0x20F4(%esp);");
    asm("loc_4BAE3D: movw $0,(%eax);");
    asm("loc_4BAE42: mov 0x20F4(%esp),%eax;");
    asm("loc_4BAE49: add $2,%eax;");
    asm("loc_4BAE4C: mov %eax,0x20F4(%esp);");
    asm("loc_4BAE53: mov 0x14(%esp),%ebp;");
    asm("loc_4BAE57: mov _data_67ECA8,%edx;");
    asm("loc_4BAE5D: mov %ebp,%ecx;");
    asm("loc_4BAE5F: sub %eax,%ecx;");
    asm("loc_4BAE61: sar $1,%ecx;");
    asm("loc_4BAE63: push %ecx;");
    asm("loc_4BAE64: push %eax;");
    asm("loc_4BAE65: push $1;");
    asm("loc_4BAE67: push %edx;");
    asm("loc_4BAE68: call _sub_4347E0;");
    asm("loc_4BAE6D: mov %eax,%esi;");
    asm("loc_4BAE6F: add $0x10,%esp;");
    asm("loc_4BAE72: test %esi,%esi;");
    asm("loc_4BAE74: jne loc_4BAEA5;");
    asm("loc_4BAE76: push $2;");
    asm("loc_4BAE78: push $0x10000;");
    asm("loc_4BAE7D: lea 0x2C(%esp),%ecx;");
    asm("loc_4BAE81: call _sub_411C50;");
    asm("loc_4BAE86: mov (%eax),%eax;");
    asm("loc_4BAE88: mov _import_5C6D18,%ecx;");
    asm("loc_4BAE8E: push $1;");
    asm("loc_4BAE90: push $0x2B3;");
    asm("loc_4BAE95: push $_data_5D5A4C;");
    asm("loc_4BAE9A: push $_data_5C94A8;");
    asm("loc_4BAE9F: push %eax;");
    asm("loc_4BAEA0: calll *(%ecx);");
    asm("loc_4BAEA2: add $0x14,%esp;");
    asm("loc_4BAEA5: mov 0x20F4(%esp),%edx;");
    asm("loc_4BAEAC: lea (%edx,%esi,2),%eax;");
    asm("loc_4BAEAF: cmp %eax,%ebp;");
    asm("loc_4BAEB1: mov %eax,0x20F4(%esp);");
    asm("loc_4BAEB8: jne loc_4BAEDA;");
    asm("loc_4BAEBA: sub $2,%eax;");
    asm("loc_4BAEBD: mov %eax,0x20F4(%esp);");
    asm("loc_4BAEC4: movw $0,(%eax);");
    asm("loc_4BAEC9: mov 0x20F4(%esp),%eax;");
    asm("loc_4BAED0: add $2,%eax;");
    asm("loc_4BAED3: mov %eax,0x20F4(%esp);");
    asm("loc_4BAEDA: mov _data_67ECA8,%edx;");
    asm("loc_4BAEE0: mov %ebp,%ecx;");
    asm("loc_4BAEE2: sub %eax,%ecx;");
    asm("loc_4BAEE4: sar $1,%ecx;");
    asm("loc_4BAEE6: push %ecx;");
    asm("loc_4BAEE7: push %eax;");
    asm("loc_4BAEE8: push %ebx;");
    asm("loc_4BAEE9: push %edx;");
    asm("loc_4BAEEA: call _sub_4347E0;");
    asm("loc_4BAEEF: mov %eax,%esi;");
    asm("loc_4BAEF1: add $0x10,%esp;");
    asm("loc_4BAEF4: test %esi,%esi;");
    asm("loc_4BAEF6: jne loc_4BAF26;");
    asm("loc_4BAEF8: push $2;");
    asm("loc_4BAEFA: push $0x10000;");
    asm("loc_4BAEFF: lea 0x30(%esp),%ecx;");
    asm("loc_4BAF03: call _sub_411C50;");
    asm("loc_4BAF08: mov (%eax),%eax;");
    asm("loc_4BAF0A: mov _import_5C6D18,%ecx;");
    asm("loc_4BAF10: push %ebx;");
    asm("loc_4BAF11: push $0x2B3;");
    asm("loc_4BAF16: push $_data_5D5A4C;");
    asm("loc_4BAF1B: push $_data_5C94A8;");
    asm("loc_4BAF20: push %eax;");
    asm("loc_4BAF21: calll *(%ecx);");
    asm("loc_4BAF23: add $0x14,%esp;");
    asm("loc_4BAF26: mov 0x20F4(%esp),%edx;");
    asm("loc_4BAF2D: lea (%edx,%esi,2),%eax;");
    asm("loc_4BAF30: cmp %eax,%ebp;");
    asm("loc_4BAF32: mov %eax,0x20F4(%esp);");
    asm("loc_4BAF39: jne loc_4BAF52;");
    asm("loc_4BAF3B: sub $2,%eax;");
    asm("loc_4BAF3E: mov %eax,0x20F4(%esp);");
    asm("loc_4BAF45: movw $0,(%eax);");
    asm("loc_4BAF4A: addl $2,0x20F4(%esp);");
    asm("loc_4BAF52: push %edi;");
    asm("loc_4BAF53: lea 0x20F8(%esp),%eax;");
    asm("loc_4BAF5A: push %ebp;");
    asm("loc_4BAF5B: push %eax;");
    asm("loc_4BAF5C: call _sub_4BB140;");
    asm("loc_4BAF61: mov 0x20(%esp),%ebx;");
    asm("loc_4BAF65: add $0xC,%esp;");
    asm("loc_4BAF68: jmp loc_4BB07D;");
    asm("loc_4BAF6D: mov 0x20F0(%esp),%ecx;");
    asm("loc_4BAF74: mov (%ecx),%ecx;");
    asm("loc_4BAF76: test %ecx,%ecx;");
    asm("loc_4BAF78: je loc_4BB07D;");
    asm("loc_4BAF7E: mov %edi,%edi;");
    asm("loc_4BAF80: cmp %di,8(%ecx);");
    asm("loc_4BAF84: jne loc_4BAF8B;");
    asm("loc_4BAF86: cmp %al,0xA(%ecx);");
    asm("loc_4BAF89: je loc_4BAF96;");
    asm("loc_4BAF8B: mov (%ecx),%ecx;");
    asm("loc_4BAF8D: test %ecx,%ecx;");
    asm("loc_4BAF8F: jne loc_4BAF80;");
    asm("loc_4BAF91: jmp loc_4BB07D;");
    asm("loc_4BAF96: mov 4(%ecx),%eax;");
    asm("loc_4BAF99: xor %edx,%edx;");
    asm("loc_4BAF9B: test %esi,%esi;");
    asm("loc_4BAF9D: setle %dl;");
    asm("loc_4BAFA0: dec %edx;");
    asm("loc_4BAFA1: and %esi,%edx;");
    asm("loc_4BAFA3: imul $0x64,%edx;");
    asm("loc_4BAFA6: lea 0x507D0(%edx,%eax),%ecx;");
    asm("loc_4BAFAD: push %ecx;");
    asm("loc_4BAFAE: lea 0x20F8(%esp),%edx;");
    asm("loc_4BAFB5: push %ebx;");
    asm("loc_4BAFB6: push %edx;");
    asm("loc_4BAFB7: call _sub_4BB140;");
    asm("loc_4BAFBC: add $0xC,%esp;");
    asm("loc_4BAFBF: jmp loc_4BB07D;");
    asm("loc_4BAFC4: mov 0x18(%esp),%eax;");
    asm("loc_4BAFC8: mov 0x20F0(%esp),%ecx;");
    asm("loc_4BAFCF: push %edi;");
    asm("loc_4BAFD0: push %eax;");
    asm("loc_4BAFD1: push %ecx;");
    asm("loc_4BAFD2: call _sub_4BA830;");
    asm("loc_4BAFD7: add $0xC,%esp;");
    asm("loc_4BAFDA: test %eax,%eax;");
    asm("loc_4BAFDC: je loc_4BB07D;");
    asm("loc_4BAFE2: mov 4(%eax),%eax;");
    asm("loc_4BAFE5: xor %edx,%edx;");
    asm("loc_4BAFE7: test %esi,%esi;");
    asm("loc_4BAFE9: setle %dl;");
    asm("loc_4BAFEC: dec %edx;");
    asm("loc_4BAFED: and %esi,%edx;");
    asm("loc_4BAFEF: imul $0x64,%edx;");
    asm("loc_4BAFF2: lea 0x50BB8(%edx,%eax),%ecx;");
    asm("loc_4BAFF9: push %ecx;");
    asm("loc_4BAFFA: lea 0x20F8(%esp),%edx;");
    asm("loc_4BB001: push %ebx;");
    asm("loc_4BB002: push %edx;");
    asm("loc_4BB003: call _sub_4BB140;");
    asm("loc_4BB008: add $0xC,%esp;");
    asm("loc_4BB00B: jmp loc_4BB07D;");
    asm("loc_4BB00D: mov 0x18(%esp),%eax;");
    asm("loc_4BB011: mov 0x20F0(%esp),%ecx;");
    asm("loc_4BB018: push %edi;");
    asm("loc_4BB019: push %eax;");
    asm("loc_4BB01A: push %ecx;");
    asm("loc_4BB01B: call _sub_4BA830;");
    asm("loc_4BB020: add $0xC,%esp;");
    asm("loc_4BB023: test %eax,%eax;");
    asm("loc_4BB025: je loc_4BB07D;");
    asm("loc_4BB027: mov 0x20FC(%esp),%edx;");
    asm("loc_4BB02E: mov 0x20F4(%esp),%ecx;");
    asm("loc_4BB035: mov 4(%eax),%eax;");
    asm("loc_4BB038: push %edx;");
    asm("loc_4BB039: mov %ebx,%edx;");
    asm("loc_4BB03B: sub %ecx,%edx;");
    asm("loc_4BB03D: sar $1,%edx;");
    asm("loc_4BB03F: push %edx;");
    asm("loc_4BB040: push %ecx;");
    asm("loc_4BB041: push %eax;");
    asm("loc_4BB042: call _sub_4BA860;");
    asm("loc_4BB047: mov 0x2104(%esp),%ecx;");
    asm("loc_4BB04E: lea (%ecx,%eax,2),%edx;");
    asm("loc_4BB051: add $0x10,%esp;");
    asm("loc_4BB054: mov %edx,0x20F4(%esp);");
    asm("loc_4BB05B: jmp loc_4BB07D;");
    asm("loc_4BB05D: mov 0x20F4(%esp),%eax;");
    asm("loc_4BB064: mov %di,(%eax);");
    asm("loc_4BB067: mov 0x20F4(%esp),%eax;");
    asm("loc_4BB06E: add $2,%eax;");
    asm("loc_4BB071: mov %eax,0x20F4(%esp);");
    asm("loc_4BB078: movw $0,(%eax);");
    asm("loc_4BB07D: mov 0x10(%esp),%ebp;");
    asm("loc_4BB081: xor %cl,%cl;");
    asm("loc_4BB083: mov (%ebp),%di;");
    asm("loc_4BB087: test %di,%di;");
    asm("loc_4BB08A: jne loc_4BA8E0;");
    asm("loc_4BB090: mov 0x1C(%esp),%esi;");
    asm("loc_4BB094: mov 0x20F4(%esp),%eax;");
    asm("loc_4BB09B: cmp %ebx,%eax;");
    asm("loc_4BB09D: pop %edi;");
    asm("loc_4BB09E: pop %ebp;");
    asm("loc_4BB09F: jne loc_4BB0B0;");
    asm("loc_4BB0A1: sub $2,%eax;");
    asm("loc_4BB0A4: mov %eax,0x20EC(%esp);");
    asm("loc_4BB0AB: movw $0,(%eax);");
    asm("loc_4BB0B0: mov 0x20EC(%esp),%edx;");
    asm("loc_4BB0B7: mov %esi,%eax;");
    asm("loc_4BB0B9: sub %ebx,%eax;");
    asm("loc_4BB0BB: add %edx,%eax;");
    asm("loc_4BB0BD: pop %esi;");
    asm("loc_4BB0BE: sar $1,%eax;");
    asm("loc_4BB0C0: pop %ebx;");
    asm("loc_4BB0C1: add $0x20DC,%esp;");
    asm("loc_4BB0C7: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_4BB0C8: .long loc_4BB00D;");
    asm(".long loc_4BA997;");
    asm(".long loc_4BAA44;");
    asm(".long loc_4BAF6D;");
    asm(".long loc_4BAFC4;");
    asm(".long loc_4BA988;");
    asm(".long loc_4BAB0D;");
    asm(".long loc_4BAA8C;");
    asm(".long loc_4BB07D;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4BA860);
_naked _weak void _sub_4BB140() // _sub_4BB140
{
    __DEBUG_ASM(4BB140);
    // chunk 0x4BB140 _sub_4BB140
    asm("loc_4BB140: mov _data_67ECA8,%edx;");
    asm("loc_4BB146: push %ebx;");
    asm("loc_4BB147: mov 0xC(%esp),%ebx;");
    asm("loc_4BB14B: push %ebp;");
    asm("loc_4BB14C: mov 0x14(%esp),%ebp;");
    asm("loc_4BB150: push %esi;");
    asm("loc_4BB151: mov 0x10(%esp),%esi;");
    asm("loc_4BB155: mov (%esi),%eax;");
    asm("loc_4BB157: mov %ebx,%ecx;");
    asm("loc_4BB159: push %edi;");
    asm("loc_4BB15A: sub %eax,%ecx;");
    asm("loc_4BB15C: sar $1,%ecx;");
    asm("loc_4BB15E: push %ecx;");
    asm("loc_4BB15F: push %eax;");
    asm("loc_4BB160: push %ebp;");
    asm("loc_4BB161: push %edx;");
    asm("loc_4BB162: call _sub_4347E0;");
    asm("loc_4BB167: mov %eax,%edi;");
    asm("loc_4BB169: add $0x10,%esp;");
    asm("loc_4BB16C: test %edi,%edi;");
    asm("loc_4BB16E: jne loc_4BB190;");
    asm("loc_4BB170: push %ebp;");
    asm("loc_4BB171: push $0x2B3;");
    asm("loc_4BB176: push $_data_5D5A4C;");
    asm("loc_4BB17B: mov $0x100002,%eax;");
    asm("loc_4BB180: push $_data_5C94A8;");
    asm("loc_4BB185: push %eax;");
    asm("loc_4BB186: mov _import_5C6D18,%eax;");
    asm("loc_4BB18B: calll *(%eax);");
    asm("loc_4BB18D: add $0x14,%esp;");
    asm("loc_4BB190: mov (%esi),%edx;");
    asm("loc_4BB192: lea (%edi,%edi),%ecx;");
    asm("loc_4BB195: add %ecx,%edx;");
    asm("loc_4BB197: mov %edx,%eax;");
    asm("loc_4BB199: cmp %eax,%ebx;");
    asm("loc_4BB19B: mov %edx,(%esi);");
    asm("loc_4BB19D: jne loc_4BB1AC;");
    asm("loc_4BB19F: add $0xFFFFFFFE,%eax;");
    asm("loc_4BB1A2: mov %eax,(%esi);");
    asm("loc_4BB1A4: movw $0,(%eax);");
    asm("loc_4BB1A9: addl $2,(%esi);");
    asm("loc_4BB1AC: pop %edi;");
    asm("loc_4BB1AD: pop %esi;");
    asm("loc_4BB1AE: pop %ebp;");
    asm("loc_4BB1AF: pop %ebx;");
    asm("loc_4BB1B0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB1C0() // _sub_4BB1C0
{
    __DEBUG_ASM(4BB1C0);
    // chunk 0x4BB1C0 _sub_4BB1C0
    asm("loc_4BB1C0: push %esi;");
    asm("loc_4BB1C1: mov %ecx,%esi;");
    asm("loc_4BB1C3: call _sub_4BB1E0;");
    asm("loc_4BB1C8: testb $1,8(%esp);");
    asm("loc_4BB1CD: je loc_4BB1D8;");
    asm("loc_4BB1CF: push %esi;");
    asm("loc_4BB1D0: call _sub_5B7E1D;");
    asm("loc_4BB1D5: add $4,%esp;");
    asm("loc_4BB1D8: mov %esi,%eax;");
    asm("loc_4BB1DA: pop %esi;");
    asm("loc_4BB1DB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB1E0() // _sub_4BB1E0
{
    __DEBUG_ASM(4BB1E0);
    // chunk 0x4BB1E0 _sub_4BB1E0
    asm("loc_4BB1E0: push $0xFFFFFFFF;");
    asm("loc_4BB1E2: push $_sub_5BD3D8;");
    asm("loc_4BB1E7: mov %fs:0,%eax;");
    asm("loc_4BB1ED: push %eax;");
    asm("loc_4BB1EE: mov %esp,%fs:0;");
    asm("loc_4BB1F5: push %ecx;");
    asm("loc_4BB1F6: push %esi;");
    asm("loc_4BB1F7: mov %ecx,%esi;");
    asm("loc_4BB1F9: mov %esi,4(%esp);");
    asm("loc_4BB1FD: movl $_off_5D5A8C,(%esi);");
    asm("loc_4BB203: movl $_off_5D5A80,0x7C(%esi);");
    asm("loc_4BB20A: mov _data_67232C,%eax;");
    asm("loc_4BB20F: test %eax,%eax;");
    asm("loc_4BB211: movl $0,0x10(%esp);");
    asm("loc_4BB219: movl $0,_data_672400;");
    asm("loc_4BB223: jne loc_4BB24A;");
    asm("loc_4BB225: push $_data_5D5A14;");
    asm("loc_4BB22A: call _sub_59DA10;");
    asm("loc_4BB22F: add $4,%esp;");
    asm("loc_4BB232: test %eax,%eax;");
    asm("loc_4BB234: jne loc_4BB24A;");
    asm("loc_4BB236: push %eax;");
    asm("loc_4BB237: push %eax;");
    asm("loc_4BB238: push $_data_5D5A14;");
    asm("loc_4BB23D: push $_data_5D5A14;");
    asm("loc_4BB242: call _sub_59DB20;");
    asm("loc_4BB247: add $0x10,%esp;");
    asm("loc_4BB24A: mov %esi,%ecx;");
    asm("loc_4BB24C: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4BB254: call _sub_59FA50;");
    asm("loc_4BB259: mov 8(%esp),%ecx;");
    asm("loc_4BB25D: pop %esi;");
    asm("loc_4BB25E: mov %ecx,%fs:0;");
    asm("loc_4BB265: add $0x10,%esp;");
    asm("loc_4BB268: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB270() // _sub_4BB270
{
    __DEBUG_ASM(4BB270);
    // chunk 0x4BB270 _sub_4BB270
    asm("loc_4BB270: sub $0xC,%esp;");
    asm("loc_4BB273: push %esi;");
    asm("loc_4BB274: push $1;");
    asm("loc_4BB276: push $0;");
    asm("loc_4BB278: push $1;");
    asm("loc_4BB27A: push $0;");
    asm("loc_4BB27C: push $0x40000000;");
    asm("loc_4BB281: push $0x3CF5C28F;");
    asm("loc_4BB286: push $0x3F82F1AA;");
    asm("loc_4BB28B: push $0;");
    asm("loc_4BB28D: lea 0x24(%esp),%eax;");
    asm("loc_4BB291: push %eax;");
    asm("loc_4BB292: push $_data_5D3A78;");
    asm("loc_4BB297: push $_data_5D5B40;");
    asm("loc_4BB29C: mov %ecx,%esi;");
    asm("loc_4BB29E: movl $0xBF041893,0x30(%esp);");
    asm("loc_4BB2A6: movl $0x3E83126F,0x34(%esp);");
    asm("loc_4BB2AE: movl $0,0x38(%esp);");
    asm("loc_4BB2B6: call _sub_5A0E30;");
    asm("loc_4BB2BB: mov %eax,0x33C(%esi);");
    asm("loc_4BB2C1: mov 0x334(%eax),%eax;");
    asm("loc_4BB2C7: cmpb $1,0x30(%eax);");
    asm("loc_4BB2CB: je loc_4BB2D8;");
    asm("loc_4BB2CD: movb $1,0x30(%eax);");
    asm("loc_4BB2D1: movl $0,0x28(%eax);");
    asm("loc_4BB2D8: mov _data_672328,%ecx;");
    asm("loc_4BB2DE: mov (%ecx),%eax;");
    asm("loc_4BB2E0: add $8,%eax;");
    asm("loc_4BB2E3: je loc_4BB2EE;");
    asm("loc_4BB2E5: cmpl $0x3D3,4(%eax);");
    asm("loc_4BB2EC: je loc_4BB2F8;");
    asm("loc_4BB2EE: push $0xF;");
    asm("loc_4BB2F0: call _sub_5645C0;");
    asm("loc_4BB2F5: add $4,%esp;");
    asm("loc_4BB2F8: flds _data_672408;");
    asm("loc_4BB2FE: fcomps _data_5C75E0;");
    asm("loc_4BB304: fnstsw %ax;");
    asm("loc_4BB306: test $0x41,%ah;");
    asm("loc_4BB309: jne loc_4BB330;");
    asm("loc_4BB30B: push $_data_5D5A30;");
    asm("loc_4BB310: call _sub_59DA10;");
    asm("loc_4BB315: add $4,%esp;");
    asm("loc_4BB318: test %eax,%eax;");
    asm("loc_4BB31A: jne loc_4BB330;");
    asm("loc_4BB31C: push %eax;");
    asm("loc_4BB31D: push %eax;");
    asm("loc_4BB31E: push $_data_5D5A30;");
    asm("loc_4BB323: push $_data_5D5A30;");
    asm("loc_4BB328: call _sub_59DB20;");
    asm("loc_4BB32D: add $0x10,%esp;");
    asm("loc_4BB330: mov (%esi),%edx;");
    asm("loc_4BB332: sub $0xC,%esp;");
    asm("loc_4BB335: movl $0,0x10(%esp);");
    asm("loc_4BB33D: mov 0x10(%esp),%ecx;");
    asm("loc_4BB341: mov %esp,%eax;");
    asm("loc_4BB343: mov %ecx,(%eax);");
    asm("loc_4BB345: movl $0,0x14(%esp);");
    asm("loc_4BB34D: mov 0x14(%esp),%ecx;");
    asm("loc_4BB351: mov %ecx,4(%eax);");
    asm("loc_4BB354: movl $0xBF800000,0x18(%esp);");
    asm("loc_4BB35C: mov 0x18(%esp),%ecx;");
    asm("loc_4BB360: mov %ecx,8(%eax);");
    asm("loc_4BB363: mov %esi,%ecx;");
    asm("loc_4BB365: calll *0x7C(%edx);");
    asm("loc_4BB368: mov 0x18(%esp),%edx;");
    asm("loc_4BB36C: mov 0x14(%esp),%eax;");
    asm("loc_4BB370: push %edx;");
    asm("loc_4BB371: push %eax;");
    asm("loc_4BB372: mov %esi,%ecx;");
    asm("loc_4BB374: call _sub_4B5060;");
    asm("loc_4BB379: test %al,%al;");
    asm("loc_4BB37B: setne %al;");
    asm("loc_4BB37E: pop %esi;");
    asm("loc_4BB37F: add $0xC,%esp;");
    asm("loc_4BB382: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB390() // _sub_4BB390
{
    __DEBUG_ASM(4BB390);
    // chunk 0x4BB390 _sub_4BB390
    asm("loc_4BB390: sub $0xC,%esp;");
    asm("loc_4BB393: push %ebx;");
    asm("loc_4BB394: push %esi;");
    asm("loc_4BB395: push %edi;");
    asm("loc_4BB396: mov %ecx,%esi;");
    asm("loc_4BB398: call _sub_45A740;");
    asm("loc_4BB39D: test %al,%al;");
    asm("loc_4BB39F: jne loc_4BB3AE;");
    asm("loc_4BB3A1: call _sub_42D740;");
    asm("loc_4BB3A6: test %al,%al;");
    asm("loc_4BB3A8: je loc_4BB458;");
    asm("loc_4BB3AE: push $_data_5D0234;");
    asm("loc_4BB3B3: call _sub_59DA10;");
    asm("loc_4BB3B8: add $4,%esp;");
    asm("loc_4BB3BB: test %eax,%eax;");
    asm("loc_4BB3BD: jne loc_4BB458;");
    asm("loc_4BB3C3: mov 0x331(%esi),%al;");
    asm("loc_4BB3C9: xor %ebx,%ebx;");
    asm("loc_4BB3CB: cmp %bl,%al;");
    asm("loc_4BB3CD: jne loc_4BB676;");
    asm("loc_4BB3D3: cmp %bl,0x338(%esi);");
    asm("loc_4BB3D9: jne loc_4BB423;");
    asm("loc_4BB3DB: mov _data_672328,%eax;");
    asm("loc_4BB3E0: mov (%eax),%ecx;");
    asm("loc_4BB3E2: push %ebx;");
    asm("loc_4BB3E3: lea 0x18(%esp),%edx;");
    asm("loc_4BB3E7: mov %ecx,0x14(%esp);");
    asm("loc_4BB3EB: push %edx;");
    asm("loc_4BB3EC: lea 0x18(%esp),%ecx;");
    asm("loc_4BB3F0: call _sub_53AB20;");
    asm("loc_4BB3F5: mov (%eax),%edi;");
    asm("loc_4BB3F7: mov 4(%edi),%eax;");
    asm("loc_4BB3FA: mov (%edi),%ecx;");
    asm("loc_4BB3FC: mov %ecx,(%eax);");
    asm("loc_4BB3FE: mov (%edi),%edx;");
    asm("loc_4BB400: mov 4(%edi),%eax;");
    asm("loc_4BB403: push %ebx;");
    asm("loc_4BB404: lea 8(%edi),%ecx;");
    asm("loc_4BB407: mov %eax,4(%edx);");
    asm("loc_4BB40A: call _sub_4BD620;");
    asm("loc_4BB40F: push %edi;");
    asm("loc_4BB410: call _sub_5B7E1D;");
    asm("loc_4BB415: mov _data_67232C,%eax;");
    asm("loc_4BB41A: add $4,%esp;");
    asm("loc_4BB41D: dec %eax;");
    asm("loc_4BB41E: mov %eax,_data_67232C;");
    asm("loc_4BB423: mov 0xC(%esi),%eax;");
    asm("loc_4BB426: cmp %ebx,%eax;");
    asm("loc_4BB428: je loc_4BB442;");
    asm("loc_4BB42A: lea (%ebx),%ebx;");
    asm("loc_4BB430: mov 8(%eax),%edi;");
    asm("loc_4BB433: push %eax;");
    asm("loc_4BB434: call _sub_43D2A0;");
    asm("loc_4BB439: add $4,%esp;");
    asm("loc_4BB43C: cmp %ebx,%edi;");
    asm("loc_4BB43E: mov %edi,%eax;");
    asm("loc_4BB440: jne loc_4BB430;");
    asm("loc_4BB442: mov (%esi),%edx;");
    asm("loc_4BB444: mov %esi,%ecx;");
    asm("loc_4BB446: calll *0x28(%edx);");
    asm("loc_4BB449: mov (%esi),%eax;");
    asm("loc_4BB44B: push $1;");
    asm("loc_4BB44D: mov %esi,%ecx;");
    asm("loc_4BB44F: calll *(%eax);");
    asm("loc_4BB451: pop %edi;");
    asm("loc_4BB452: pop %esi;");
    asm("loc_4BB453: pop %ebx;");
    asm("loc_4BB454: add $0xC,%esp;");
    asm("loc_4BB457: ret;");
    asm("loc_4BB458: call _sub_45A470;");
    asm("loc_4BB45D: xor %ebx,%ebx;");
    asm("loc_4BB45F: test %al,%al;");
    asm("loc_4BB461: jne loc_4BB4B0;");
    asm("loc_4BB463: call _sub_442720;");
    asm("loc_4BB468: test %al,%al;");
    asm("loc_4BB46A: jne loc_4BB4B0;");
    asm("loc_4BB46C: push $_data_5D0234;");
    asm("loc_4BB471: call _sub_59DA10;");
    asm("loc_4BB476: add $4,%esp;");
    asm("loc_4BB479: test %eax,%eax;");
    asm("loc_4BB47B: jne loc_4BB4B0;");
    asm("loc_4BB47D: push $_data_5D0228;");
    asm("loc_4BB482: call _sub_59DA10;");
    asm("loc_4BB487: add $4,%esp;");
    asm("loc_4BB48A: test %eax,%eax;");
    asm("loc_4BB48C: jne loc_4BB4B0;");
    asm("loc_4BB48E: push $_data_5D021C;");
    asm("loc_4BB493: call _sub_59DA10;");
    asm("loc_4BB498: add $4,%esp;");
    asm("loc_4BB49B: test %eax,%eax;");
    asm("loc_4BB49D: jne loc_4BB4B0;");
    asm("loc_4BB49F: push $_data_5D0094;");
    asm("loc_4BB4A4: call _sub_59DA10;");
    asm("loc_4BB4A9: add $4,%esp;");
    asm("loc_4BB4AC: test %eax,%eax;");
    asm("loc_4BB4AE: je loc_4BB4F2;");
    asm("loc_4BB4B0: cmp %bl,0x330(%esi);");
    asm("loc_4BB4B6: jne loc_4BB4C0;");
    asm("loc_4BB4B8: cmp %bl,0x331(%esi);");
    asm("loc_4BB4BE: je loc_4BB4F2;");
    asm("loc_4BB4C0: flds 0x334(%esi);");
    asm("loc_4BB4C6: fmuls _data_5C75E0;");
    asm("loc_4BB4CC: fcomps 0x32C(%esi);");
    asm("loc_4BB4D2: fnstsw %ax;");
    asm("loc_4BB4D4: test $0x41,%ah;");
    asm("loc_4BB4D7: jne loc_4BB4F2;");
    asm("loc_4BB4D9: mov %bl,0x331(%esi);");
    asm("loc_4BB4DF: mov %bl,0x330(%esi);");
    asm("loc_4BB4E5: mov %ebx,0x32C(%esi);");
    asm("loc_4BB4EB: movb $1,0x338(%esi);");
    asm("loc_4BB4F2: call _sub_42D680;");
    asm("loc_4BB4F7: fcoml _data_5D5B58;");
    asm("loc_4BB4FD: fnstsw %ax;");
    asm("loc_4BB4FF: test $0x41,%ah;");
    asm("loc_4BB502: jne loc_4BB50C;");
    asm("loc_4BB504: fstp %st(0);");
    asm("loc_4BB506: flds _data_5CB88C;");
    asm("loc_4BB50C: mov 0x331(%esi),%cl;");
    asm("loc_4BB512: cmp %bl,%cl;");
    asm("loc_4BB514: je loc_4BB51A;");
    asm("loc_4BB516: fld %st(0);");
    asm("loc_4BB518: faddp;");
    asm("loc_4BB51A: fadds 0x32C(%esi);");
    asm("loc_4BB520: mov 0x330(%esi),%al;");
    asm("loc_4BB526: cmp %bl,%al;");
    asm("loc_4BB528: fstps 0xC(%esp);");
    asm("loc_4BB52C: mov 0xC(%esp),%edx;");
    asm("loc_4BB530: mov %edx,0x32C(%esi);");
    asm("loc_4BB536: je loc_4BB563;");
    asm("loc_4BB538: flds 0xC(%esp);");
    asm("loc_4BB53C: fcomps 0x334(%esi);");
    asm("loc_4BB542: fnstsw %ax;");
    asm("loc_4BB544: test $5,%ah;");
    asm("loc_4BB547: jnp loc_4BB676;");
    asm("loc_4BB54D: flds 0xC(%esp);");
    asm("loc_4BB551: mov %bl,0x330(%esi);");
    asm("loc_4BB557: fsubs 0x334(%esi);");
    asm("loc_4BB55D: fstps 0x32C(%esi);");
    asm("loc_4BB563: cmp %bl,%cl;");
    asm("loc_4BB565: flds 0x32C(%esi);");
    asm("loc_4BB56B: fcomps _data_5C75DC;");
    asm("loc_4BB571: mov _data_679BB0,%eax;");
    asm("loc_4BB576: mov %eax,0xC(%esp);");
    asm("loc_4BB57A: fnstsw %ax;");
    asm("loc_4BB57C: je loc_4BB5C5;");
    asm("loc_4BB57E: test $0x41,%ah;");
    asm("loc_4BB581: flds 0x32C(%esi);");
    asm("loc_4BB587: jne loc_4BB5A8;");
    asm("loc_4BB589: fsubs _data_5C75DC;");
    asm("loc_4BB58F: mov %bl,0x331(%esi);");
    asm("loc_4BB595: movb $1,0x330(%esi);");
    asm("loc_4BB59C: fstps 0x32C(%esi);");
    asm("loc_4BB5A2: flds _data_5C75DC;");
    asm("loc_4BB5A8: movzbl 0xF(%esp),%ecx;");
    asm("loc_4BB5AD: mov %ecx,0x10(%esp);");
    asm("loc_4BB5B1: fildl 0x10(%esp);");
    asm("loc_4BB5B5: fmul %st(1),%st;");
    asm("loc_4BB5B7: call _sub_5B7EC0;");
    asm("loc_4BB5BC: fstp %st(0);");
    asm("loc_4BB5BE: mov %al,%bl;");
    asm("loc_4BB5C0: jmp loc_4BB655;");
    asm("loc_4BB5C5: test $0x41,%ah;");
    asm("loc_4BB5C8: jne loc_4BB638;");
    asm("loc_4BB5CA: cmp %bl,0x338(%esi);");
    asm("loc_4BB5D0: jne loc_4BB606;");
    asm("loc_4BB5D2: mov _data_672328,%edx;");
    asm("loc_4BB5D8: mov (%edx),%edi;");
    asm("loc_4BB5DA: mov 4(%edi),%eax;");
    asm("loc_4BB5DD: mov (%edi),%ecx;");
    asm("loc_4BB5DF: mov %ecx,(%eax);");
    asm("loc_4BB5E1: mov (%edi),%edx;");
    asm("loc_4BB5E3: mov 4(%edi),%eax;");
    asm("loc_4BB5E6: push %ebx;");
    asm("loc_4BB5E7: lea 8(%edi),%ecx;");
    asm("loc_4BB5EA: mov %eax,4(%edx);");
    asm("loc_4BB5ED: call _sub_4BD620;");
    asm("loc_4BB5F2: push %edi;");
    asm("loc_4BB5F3: call _sub_5B7E1D;");
    asm("loc_4BB5F8: mov _data_67232C,%eax;");
    asm("loc_4BB5FD: add $4,%esp;");
    asm("loc_4BB600: dec %eax;");
    asm("loc_4BB601: mov %eax,_data_67232C;");
    asm("loc_4BB606: mov 0xC(%esi),%eax;");
    asm("loc_4BB609: cmp %ebx,%eax;");
    asm("loc_4BB60B: je loc_4BB622;");
    asm("loc_4BB60D: lea (%ecx),%ecx;");
    asm("loc_4BB610: mov 8(%eax),%edi;");
    asm("loc_4BB613: push %eax;");
    asm("loc_4BB614: call _sub_43D2A0;");
    asm("loc_4BB619: add $4,%esp;");
    asm("loc_4BB61C: cmp %ebx,%edi;");
    asm("loc_4BB61E: mov %edi,%eax;");
    asm("loc_4BB620: jne loc_4BB610;");
    asm("loc_4BB622: mov (%esi),%edx;");
    asm("loc_4BB624: mov %esi,%ecx;");
    asm("loc_4BB626: calll *0x28(%edx);");
    asm("loc_4BB629: mov (%esi),%eax;");
    asm("loc_4BB62B: push $1;");
    asm("loc_4BB62D: mov %esi,%ecx;");
    asm("loc_4BB62F: calll *(%eax);");
    asm("loc_4BB631: pop %edi;");
    asm("loc_4BB632: pop %esi;");
    asm("loc_4BB633: pop %ebx;");
    asm("loc_4BB634: add $0xC,%esp;");
    asm("loc_4BB637: ret;");
    asm("loc_4BB638: mov 0xF(%esp),%bl;");
    asm("loc_4BB63C: xor %ecx,%ecx;");
    asm("loc_4BB63E: mov %bl,%cl;");
    asm("loc_4BB640: mov %ecx,0x10(%esp);");
    asm("loc_4BB644: fildl 0x10(%esp);");
    asm("loc_4BB648: fmuls 0x32C(%esi);");
    asm("loc_4BB64E: call _sub_5B7EC0;");
    asm("loc_4BB653: sub %al,%bl;");
    asm("loc_4BB655: mov 0x33C(%esi),%ecx;");
    asm("loc_4BB65B: push $1;");
    asm("loc_4BB65D: lea 0x10(%esp),%eax;");
    asm("loc_4BB661: push %eax;");
    asm("loc_4BB662: mov %bl,0x17(%esp);");
    asm("loc_4BB666: mov %bl,0x332(%esi);");
    asm("loc_4BB66C: mov (%ecx),%edx;");
    asm("loc_4BB66E: push $0x33;");
    asm("loc_4BB670: calll *0xA8(%edx);");
    asm("loc_4BB676: pop %edi;");
    asm("loc_4BB677: pop %esi;");
    asm("loc_4BB678: pop %ebx;");
    asm("loc_4BB679: add $0xC,%esp;");
    asm("loc_4BB67C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB680() // _sub_4BB680
{
    __DEBUG_ASM(4BB680);
    // chunk 0x4BB680 _sub_4BB680
    asm("loc_4BB680: push %esi;");
    asm("loc_4BB681: mov %ecx,%esi;");
    asm("loc_4BB683: call _sub_45A740;");
    asm("loc_4BB688: test %al,%al;");
    asm("loc_4BB68A: jne loc_4BB695;");
    asm("loc_4BB68C: call _sub_42D740;");
    asm("loc_4BB691: test %al,%al;");
    asm("loc_4BB693: je loc_4BB6A6;");
    asm("loc_4BB695: push $_data_5D0234;");
    asm("loc_4BB69A: call _sub_59DA10;");
    asm("loc_4BB69F: add $4,%esp;");
    asm("loc_4BB6A2: test %eax,%eax;");
    asm("loc_4BB6A4: je loc_4BB6AE;");
    asm("loc_4BB6A6: mov %esi,%ecx;");
    asm("loc_4BB6A8: pop %esi;");
    asm("loc_4BB6A9: jmp _sub_5A0760;");
    asm("loc_4BB6AE: pop %esi;");
    asm("loc_4BB6AF: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB6B0() // _sub_4BB6B0
{
    __DEBUG_ASM(4BB6B0);
    // chunk 0x4BB6B0 _sub_4BB6B0
    asm("loc_4BB6B0: mov _data_67232C,%eax;");
    asm("loc_4BB6B5: test %eax,%eax;");
    asm("loc_4BB6B7: push %edi;");
    asm("loc_4BB6B8: mov %ecx,%edi;");
    asm("loc_4BB6BA: je loc_4BB75A;");
    asm("loc_4BB6C0: mov _data_672328,%eax;");
    asm("loc_4BB6C5: push %esi;");
    asm("loc_4BB6C6: mov (%eax),%esi;");
    asm("loc_4BB6C8: mov 0xC(%esi),%eax;");
    asm("loc_4BB6CB: add $8,%esi;");
    asm("loc_4BB6CE: cmp $0x762,%eax;");
    asm("loc_4BB6D3: je loc_4BB6E8;");
    asm("loc_4BB6D5: push %esi;");
    asm("loc_4BB6D6: mov $_data_67230C,%ecx;");
    asm("loc_4BB6DB: calll *_import_5C628C;");
    asm("loc_4BB6E1: movb $1,_data_672404;");
    asm("loc_4BB6E8: mov _data_6119F8,%ecx;");
    asm("loc_4BB6EE: push $0;");
    asm("loc_4BB6F0: push %ecx;");
    asm("loc_4BB6F1: push $_data_66DC60;");
    asm("loc_4BB6F6: push %esi;");
    asm("loc_4BB6F7: call _sub_4BA860;");
    asm("loc_4BB6FC: add $0x10,%esp;");
    asm("loc_4BB6FF: push $_data_66DC60;");
    asm("loc_4BB704: calll *_off_616420;");
    asm("loc_4BB70A: push $_data_66DC60;");
    asm("loc_4BB70F: calll *_import_5C71C8;");
    asm("loc_4BB715: add $4,%esp;");
    asm("loc_4BB718: test %eax,%eax;");
    asm("loc_4BB71A: mov $_data_66DC60,%edx;");
    asm("loc_4BB71F: mov $_data_66FC60,%ecx;");
    asm("loc_4BB724: jle loc_4BB73D;");
    asm("loc_4BB726: mov %eax,%esi;");
    asm("loc_4BB728: mov (%edx),%ax;");
    asm("loc_4BB72B: cmp $0xA,%ax;");
    asm("loc_4BB72F: je loc_4BB737;");
    asm("loc_4BB731: mov %ax,(%ecx);");
    asm("loc_4BB734: add $2,%ecx;");
    asm("loc_4BB737: add $2,%edx;");
    asm("loc_4BB73A: dec %esi;");
    asm("loc_4BB73B: jne loc_4BB728;");
    asm("loc_4BB73D: push $0;");
    asm("loc_4BB73F: movw $0,(%ecx);");
    asm("loc_4BB744: mov 0x33C(%edi),%ecx;");
    asm("loc_4BB74A: mov (%ecx),%edx;");
    asm("loc_4BB74C: push $_data_66FC60;");
    asm("loc_4BB751: push $0x1D;");
    asm("loc_4BB753: calll *0xA8(%edx);");
    asm("loc_4BB759: pop %esi;");
    asm("loc_4BB75A: pop %edi;");
    asm("loc_4BB75B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB760() // _sub_4BB760
{
    __DEBUG_ASM(4BB760);
    // chunk 0x4BB760 _sub_4BB760
    asm("loc_4BB760: push %esi;");
    asm("loc_4BB761: mov %ecx,%esi;");
    asm("loc_4BB763: call _sub_4BB780;");
    asm("loc_4BB768: testb $1,8(%esp);");
    asm("loc_4BB76D: je loc_4BB778;");
    asm("loc_4BB76F: push %esi;");
    asm("loc_4BB770: call _sub_5B7E1D;");
    asm("loc_4BB775: add $4,%esp;");
    asm("loc_4BB778: mov %esi,%eax;");
    asm("loc_4BB77A: pop %esi;");
    asm("loc_4BB77B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB780() // _sub_4BB780
{
    __DEBUG_ASM(4BB780);
    // chunk 0x4BB780 _sub_4BB780
    asm("loc_4BB780: push $0xFFFFFFFF;");
    asm("loc_4BB782: push $_sub_5BD3D8;");
    asm("loc_4BB787: mov %fs:0,%eax;");
    asm("loc_4BB78D: push %eax;");
    asm("loc_4BB78E: mov %esp,%fs:0;");
    asm("loc_4BB795: push %ecx;");
    asm("loc_4BB796: push %ebx;");
    asm("loc_4BB797: push %esi;");
    asm("loc_4BB798: mov %ecx,%esi;");
    asm("loc_4BB79A: mov %esi,8(%esp);");
    asm("loc_4BB79E: movl $_off_5D5B74,(%esi);");
    asm("loc_4BB7A4: movl $_off_5D5B64,0x7C(%esi);");
    asm("loc_4BB7AB: xor %ebx,%ebx;");
    asm("loc_4BB7AD: mov %ebx,_data_6723FC;");
    asm("loc_4BB7B3: mov %bl,_data_66D359;");
    asm("loc_4BB7B9: cmp %bl,0x38C(%esi);");
    asm("loc_4BB7BF: mov %ebx,0x14(%esp);");
    asm("loc_4BB7C3: je loc_4BB7E2;");
    asm("loc_4BB7C5: xor %eax,%eax;");
    asm("loc_4BB7C7: mov 0x37D(%esi),%al;");
    asm("loc_4BB7CD: push %eax;");
    asm("loc_4BB7CE: call _sub_4A7690;");
    asm("loc_4BB7D3: mov %bl,0x38C(%esi);");
    asm("loc_4BB7D9: add $4,%esp;");
    asm("loc_4BB7DC: mov %bl,_data_67DCC8;");
    asm("loc_4BB7E2: mov %esi,%ecx;");
    asm("loc_4BB7E4: movl $0xFFFFFFFF,0x14(%esp);");
    asm("loc_4BB7EC: call _sub_59FA50;");
    asm("loc_4BB7F1: mov 0xC(%esp),%ecx;");
    asm("loc_4BB7F5: pop %esi;");
    asm("loc_4BB7F6: pop %ebx;");
    asm("loc_4BB7F7: mov %ecx,%fs:0;");
    asm("loc_4BB7FE: add $0x10,%esp;");
    asm("loc_4BB801: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BB810() // _sub_4BB810
{
    __DEBUG_ASM(4BB810);
    // chunk 0x4BB810 _sub_4BB810
    asm("loc_4BB810: sub $0x1C,%esp;");
    asm("loc_4BB813: push %esi;");
    asm("loc_4BB814: push %edi;");
    asm("loc_4BB815: push $1;");
    asm("loc_4BB817: mov %ecx,%esi;");
    asm("loc_4BB819: call _sub_4424F0;");
    asm("loc_4BB81E: mov (%esi),%eax;");
    asm("loc_4BB820: add $4,%esp;");
    asm("loc_4BB823: push $0;");
    asm("loc_4BB825: push $_data_5CE994;");
    asm("loc_4BB82A: mov %esi,%ecx;");
    asm("loc_4BB82C: calll *0x98(%eax);");
    asm("loc_4BB832: lea 0x80(%esi),%ecx;");
    asm("loc_4BB838: push %ecx;");
    asm("loc_4BB839: lea 0xB4(%esi),%ecx;");
    asm("loc_4BB83F: call _sub_5A1340;");
    asm("loc_4BB844: mov _data_66D3F0,%ecx;");
    asm("loc_4BB84A: call _sub_45DCD0;");
    asm("loc_4BB84F: test %al,%al;");
    asm("loc_4BB851: jne loc_4BB8C2;");
    asm("loc_4BB853: push $0;");
    asm("loc_4BB855: push $0;");
    asm("loc_4BB857: push $0x409;");
    asm("loc_4BB85C: push $0;");
    asm("loc_4BB85E: push $0;");
    asm("loc_4BB860: push $0;");
    asm("loc_4BB862: push $0;");
    asm("loc_4BB864: lea 0x28(%esp),%edx;");
    asm("loc_4BB868: push %edx;");
    asm("loc_4BB869: push $0;");
    asm("loc_4BB86B: lea 0x3C(%esp),%eax;");
    asm("loc_4BB86F: push %eax;");
    asm("loc_4BB870: push $0;");
    asm("loc_4BB872: push $_data_5CED30;");
    asm("loc_4BB877: push $0;");
    asm("loc_4BB879: push $_data_5D01D0;");
    asm("loc_4BB87E: push $_data_5D5D5C;");
    asm("loc_4BB883: mov %esi,%ecx;");
    asm("loc_4BB885: movl $0x3C9374BC,0x48(%esp);");
    asm("loc_4BB88D: movl $0x3C9374BC,0x4C(%esp);");
    asm("loc_4BB895: movl $0,0x50(%esp);");
    asm("loc_4BB89D: movl $0x3ECF5C29,0x54(%esp);");
    asm("loc_4BB8A5: movl $0x3E74BC6A,0x58(%esp);");
    asm("loc_4BB8AD: movl $0,0x5C(%esp);");
    asm("loc_4BB8B5: call _sub_5A0C90;");
    asm("loc_4BB8BA: mov %eax,0x330(%esi);");
    asm("loc_4BB8C0: jmp loc_4BB8DB;");
    asm("loc_4BB8C2: movb $1,_data_67DCC8;");
    asm("loc_4BB8C9: call _sub_4A7670;");
    asm("loc_4BB8CE: mov %al,0x37D(%esi);");
    asm("loc_4BB8D4: movb $1,0x38C(%esi);");
    asm("loc_4BB8DB: mov _import_5C60D0,%edi;");
    asm("loc_4BB8E1: call *%edi;");
    asm("loc_4BB8E3: test %al,%al;");
    asm("loc_4BB8E5: push $1;");
    asm("loc_4BB8E7: push $0;");
    asm("loc_4BB8E9: movl $0,0x28(%esp);");
    asm("loc_4BB8F1: movl $0x3E808312,0x24(%esp);");
    asm("loc_4BB8F9: movl $0xBED70A3D,0x20(%esp);");
    asm("loc_4BB901: push $1;");
    asm("loc_4BB903: je loc_4BB922;");
    asm("loc_4BB905: push $0x610;");
    asm("loc_4BB90A: push $0x40000000;");
    asm("loc_4BB90F: push $0x3CF5C28F;");
    asm("loc_4BB914: push $0x3F59DB23;");
    asm("loc_4BB919: push $0;");
    asm("loc_4BB91B: lea 0x38(%esp),%ecx;");
    asm("loc_4BB91F: push %ecx;");
    asm("loc_4BB920: jmp loc_4BB93D;");
    asm("loc_4BB922: push $0x62F;");
    asm("loc_4BB927: push $0x40000000;");
    asm("loc_4BB92C: push $0x3CF5C28F;");
    asm("loc_4BB931: push $0x3F59DB23;");
    asm("loc_4BB936: push $0;");
    asm("loc_4BB938: lea 0x38(%esp),%edx;");
    asm("loc_4BB93C: push %edx;");
    asm("loc_4BB93D: push $_data_5CE91C;");
    asm("loc_4BB942: mov %esi,%ecx;");
    asm("loc_4BB944: push $_data_5D5D4C;");
    asm("loc_4BB949: call _sub_5A0E30;");
    asm("loc_4BB94E: mov _data_66D3F0,%ecx;");
    asm("loc_4BB954: call _sub_45DCD0;");
    asm("loc_4BB959: test %al,%al;");
    asm("loc_4BB95B: je loc_4BB96B;");
    asm("loc_4BB95D: call *%edi;");
    asm("loc_4BB95F: test %al,%al;");
    asm("loc_4BB961: movl $0x3E9E353F,8(%esp);");
    asm("loc_4BB969: je loc_4BB973;");
    asm("loc_4BB96B: movl $0x3EBC6A7F,8(%esp);");
    asm("loc_4BB973: mov 8(%esp),%ecx;");
    asm("loc_4BB977: push $1;");
    asm("loc_4BB979: lea 0x1C(%esp),%eax;");
    asm("loc_4BB97D: push %eax;");
    asm("loc_4BB97E: push %ecx;");
    asm("loc_4BB97F: push $0x3F451EB8;");
    asm("loc_4BB984: push $_data_5D5D34;");
    asm("loc_4BB989: mov %esi,%ecx;");
    asm("loc_4BB98B: movl $0xBEC7AE14,0x2C(%esp);");
    asm("loc_4BB993: movl $0x3E4CCCCD,0x30(%esp);");
    asm("loc_4BB99B: movl $0,0x34(%esp);");
    asm("loc_4BB9A3: call _sub_5A10E0;");
    asm("loc_4BB9A8: mov %eax,0x334(%esi);");
    asm("loc_4BB9AE: movl $0,0x380(%esi);");
    asm("loc_4BB9B8: movl $0,0x384(%esi);");
    asm("loc_4BB9C2: movl $0xFFFFFFFF,0x388(%esi);");
    asm("loc_4BB9CC: mov _data_66D3F0,%ecx;");
    asm("loc_4BB9D2: call _sub_45DCD0;");
    asm("loc_4BB9D7: test %al,%al;");
    asm("loc_4BB9D9: je loc_4BBDAF;");
    asm("loc_4BB9DF: movb $1,_data_66D359;");
    asm("loc_4BB9E6: movl $0x3E083127,0xC(%esp);");
    asm("loc_4BB9EE: movl $0x3CD4FDF4,0x10(%esp);");
    asm("loc_4BB9F6: movl $0,0x14(%esp);");
    asm("loc_4BB9FE: call *%edi;");
    asm("loc_4BBA00: test %al,%al;");
    asm("loc_4BBA02: je loc_4BBA94;");
    asm("loc_4BBA08: push $0;");
    asm("loc_4BBA0A: push $0;");
    asm("loc_4BBA0C: push $0x320;");
    asm("loc_4BBA11: push $0;");
    asm("loc_4BBA13: push $0;");
    asm("loc_4BBA15: lea 0x20(%esp),%edx;");
    asm("loc_4BBA19: push %edx;");
    asm("loc_4BBA1A: lea 0x30(%esp),%eax;");
    asm("loc_4BBA1E: push %eax;");
    asm("loc_4BBA1F: push $_data_5CED30;");
    asm("loc_4BBA24: push $_data_5D5D20;");
    asm("loc_4BBA29: mov %esi,%ecx;");
    asm("loc_4BBA2B: movl $0xBE8E5604,0x3C(%esp);");
    asm("loc_4BBA33: movl $0xBE570A3D,0x40(%esp);");
    asm("loc_4BBA3B: movl $0,0x44(%esp);");
    asm("loc_4BBA43: call _sub_5A0D00;");
    asm("loc_4BBA48: push $0;");
    asm("loc_4BBA4A: push $0;");
    asm("loc_4BBA4C: push $0x321;");
    asm("loc_4BBA51: push $0;");
    asm("loc_4BBA53: push $0;");
    asm("loc_4BBA55: lea 0x20(%esp),%ecx;");
    asm("loc_4BBA59: push %ecx;");
    asm("loc_4BBA5A: lea 0x30(%esp),%edx;");
    asm("loc_4BBA5E: push %edx;");
    asm("loc_4BBA5F: push $_data_5CED30;");
    asm("loc_4BBA64: push $_data_5D5D0C;");
    asm("loc_4BBA69: mov %esi,%ecx;");
    asm("loc_4BBA6B: mov %eax,0x33C(%esi);");
    asm("loc_4BBA71: movl $0x3E8C49BA,0x3C(%esp);");
    asm("loc_4BBA79: movl $0xBE570A3D,0x40(%esp);");
    asm("loc_4BBA81: movl $0,0x44(%esp);");
    asm("loc_4BBA89: call _sub_5A0D00;");
    asm("loc_4BBA8E: mov %eax,0x340(%esi);");
    asm("loc_4BBA94: push $0;");
    asm("loc_4BBA96: push $0;");
    asm("loc_4BBA98: push $0x322;");
    asm("loc_4BBA9D: push $0;");
    asm("loc_4BBA9F: push $0;");
    asm("loc_4BBAA1: lea 0x20(%esp),%eax;");
    asm("loc_4BBAA5: push %eax;");
    asm("loc_4BBAA6: lea 0x30(%esp),%ecx;");
    asm("loc_4BBAAA: push %ecx;");
    asm("loc_4BBAAB: push $_data_5CED30;");
    asm("loc_4BBAB0: push $_data_5D4EF8;");
    asm("loc_4BBAB5: mov %esi,%ecx;");
    asm("loc_4BBAB7: movl $0xBA83126F,0x3C(%esp);");
    asm("loc_4BBABF: movl $0xBE570A3D,0x40(%esp);");
    asm("loc_4BBAC7: movl $0,0x44(%esp);");
    asm("loc_4BBACF: call _sub_5A0D00;");
    asm("loc_4BBAD4: mov %eax,0x344(%esi);");
    asm("loc_4BBADA: call *%edi;");
    asm("loc_4BBADC: test %al,%al;");
    asm("loc_4BBADE: jne loc_4BBBB6;");
    asm("loc_4BBAE4: push $0;");
    asm("loc_4BBAE6: push $0;");
    asm("loc_4BBAE8: push $0x5D0;");
    asm("loc_4BBAED: push $0;");
    asm("loc_4BBAEF: push $0;");
    asm("loc_4BBAF1: lea 0x20(%esp),%edx;");
    asm("loc_4BBAF5: push %edx;");
    asm("loc_4BBAF6: lea 0x30(%esp),%eax;");
    asm("loc_4BBAFA: push %eax;");
    asm("loc_4BBAFB: push $_data_5CED30;");
    asm("loc_4BBB00: push $_data_5D5CF8;");
    asm("loc_4BBB05: mov %esi,%ecx;");
    asm("loc_4BBB07: movl $0xBE8E5604,0x3C(%esp);");
    asm("loc_4BBB0F: movl $0xBE178D50,0x40(%esp);");
    asm("loc_4BBB17: movl $0,0x44(%esp);");
    asm("loc_4BBB1F: call _sub_5A0D00;");
    asm("loc_4BBB24: push $0;");
    asm("loc_4BBB26: push $0;");
    asm("loc_4BBB28: push $0x5D1;");
    asm("loc_4BBB2D: push $0;");
    asm("loc_4BBB2F: push $0;");
    asm("loc_4BBB31: lea 0x20(%esp),%ecx;");
    asm("loc_4BBB35: push %ecx;");
    asm("loc_4BBB36: lea 0x30(%esp),%edx;");
    asm("loc_4BBB3A: push %edx;");
    asm("loc_4BBB3B: push $_data_5CED30;");
    asm("loc_4BBB40: push $_data_5D5CE0;");
    asm("loc_4BBB45: mov %esi,%ecx;");
    asm("loc_4BBB47: mov %eax,0x354(%esi);");
    asm("loc_4BBB4D: movl $0xBA83126F,0x3C(%esp);");
    asm("loc_4BBB55: movl $0xBE178D50,0x40(%esp);");
    asm("loc_4BBB5D: movl $0,0x44(%esp);");
    asm("loc_4BBB65: call _sub_5A0D00;");
    asm("loc_4BBB6A: push $0;");
    asm("loc_4BBB6C: push $0;");
    asm("loc_4BBB6E: push $0x5D2;");
    asm("loc_4BBB73: push $0;");
    asm("loc_4BBB75: push $0;");
    asm("loc_4BBB77: mov %eax,0x358(%esi);");
    asm("loc_4BBB7D: lea 0x20(%esp),%eax;");
    asm("loc_4BBB81: push %eax;");
    asm("loc_4BBB82: lea 0x30(%esp),%ecx;");
    asm("loc_4BBB86: push %ecx;");
    asm("loc_4BBB87: push $_data_5CED30;");
    asm("loc_4BBB8C: push $_data_5D5CC8;");
    asm("loc_4BBB91: mov %esi,%ecx;");
    asm("loc_4BBB93: movl $0x3E8C49BA,0x3C(%esp);");
    asm("loc_4BBB9B: movl $0xBE178D50,0x40(%esp);");
    asm("loc_4BBBA3: movl $0,0x44(%esp);");
    asm("loc_4BBBAB: call _sub_5A0D00;");
    asm("loc_4BBBB0: mov %eax,0x35C(%esi);");
    asm("loc_4BBBB6: call *%edi;");
    asm("loc_4BBBB8: test %al,%al;");
    asm("loc_4BBBBA: je loc_4BBC60;");
    asm("loc_4BBBC0: push $1;");
    asm("loc_4BBBC2: push $0;");
    asm("loc_4BBBC4: push $1;");
    asm("loc_4BBBC6: push $0x652;");
    asm("loc_4BBBCB: push $0x3FF33333;");
    asm("loc_4BBBD0: push $0x3CF5C28F;");
    asm("loc_4BBBD5: push $0x3E8624DD;");
    asm("loc_4BBBDA: push $0;");
    asm("loc_4BBBDC: lea 0x38(%esp),%edx;");
    asm("loc_4BBBE0: push %edx;");
    asm("loc_4BBBE1: push $_data_5D0410;");
    asm("loc_4BBBE6: push $_data_5D5CB4;");
    asm("loc_4BBBEB: mov %esi,%ecx;");
    asm("loc_4BBBED: movl $0xBED16873,0x44(%esp);");
    asm("loc_4BBBF5: movl $0xBE428F5C,0x48(%esp);");
    asm("loc_4BBBFD: movl $0,0x4C(%esp);");
    asm("loc_4BBC05: call _sub_5A0E30;");
    asm("loc_4BBC0A: push $1;");
    asm("loc_4BBC0C: push $0;");
    asm("loc_4BBC0E: push $1;");
    asm("loc_4BBC10: push $0x653;");
    asm("loc_4BBC15: push $0x3FF33333;");
    asm("loc_4BBC1A: push $0x3CF5C28F;");
    asm("loc_4BBC1F: push $0x3E8624DD;");
    asm("loc_4BBC24: push $0;");
    asm("loc_4BBC26: mov %eax,0x348(%esi);");
    asm("loc_4BBC2C: lea 0x38(%esp),%eax;");
    asm("loc_4BBC30: push %eax;");
    asm("loc_4BBC31: push $_data_5D0410;");
    asm("loc_4BBC36: push $_data_5D5CA0;");
    asm("loc_4BBC3B: mov %esi,%ecx;");
    asm("loc_4BBC3D: movl $0x3E126E98,0x44(%esp);");
    asm("loc_4BBC45: movl $0xBE428F5C,0x48(%esp);");
    asm("loc_4BBC4D: movl $0,0x4C(%esp);");
    asm("loc_4BBC55: call _sub_5A0E30;");
    asm("loc_4BBC5A: mov %eax,0x34C(%esi);");
    asm("loc_4BBC60: push $1;");
    asm("loc_4BBC62: push $0;");
    asm("loc_4BBC64: push $1;");
    asm("loc_4BBC66: push $0x655;");
    asm("loc_4BBC6B: push $0x3FF33333;");
    asm("loc_4BBC70: push $0x3CF5C28F;");
    asm("loc_4BBC75: push $0x3E8624DD;");
    asm("loc_4BBC7A: push $0;");
    asm("loc_4BBC7C: lea 0x38(%esp),%ecx;");
    asm("loc_4BBC80: push %ecx;");
    asm("loc_4BBC81: push $_data_5D0410;");
    asm("loc_4BBC86: push $_data_5D5C90;");
    asm("loc_4BBC8B: mov %esi,%ecx;");
    asm("loc_4BBC8D: movl $0xBE051EB8,0x44(%esp);");
    asm("loc_4BBC95: movl $0xBE428F5C,0x48(%esp);");
    asm("loc_4BBC9D: movl $0,0x4C(%esp);");
    asm("loc_4BBCA5: call _sub_5A0E30;");
    asm("loc_4BBCAA: mov %eax,0x350(%esi);");
    asm("loc_4BBCB0: call *%edi;");
    asm("loc_4BBCB2: test %al,%al;");
    asm("loc_4BBCB4: jne loc_4BBF15;");
    asm("loc_4BBCBA: push $1;");
    asm("loc_4BBCBC: push $0;");
    asm("loc_4BBCBE: push $1;");
    asm("loc_4BBCC0: push $0x751;");
    asm("loc_4BBCC5: push $0x3FF33333;");
    asm("loc_4BBCCA: push $0x3CF5C28F;");
    asm("loc_4BBCCF: push $0x3E8624DD;");
    asm("loc_4BBCD4: push $0;");
    asm("loc_4BBCD6: lea 0x38(%esp),%edx;");
    asm("loc_4BBCDA: push %edx;");
    asm("loc_4BBCDB: push $_data_5D0410;");
    asm("loc_4BBCE0: push $_data_5D5C80;");
    asm("loc_4BBCE5: mov %esi,%ecx;");
    asm("loc_4BBCE7: movl $0xBED16873,0x44(%esp);");
    asm("loc_4BBCEF: movl $0xBE03126F,0x48(%esp);");
    asm("loc_4BBCF7: movl $0,0x4C(%esp);");
    asm("loc_4BBCFF: call _sub_5A0E30;");
    asm("loc_4BBD04: push $1;");
    asm("loc_4BBD06: push $0;");
    asm("loc_4BBD08: push $1;");
    asm("loc_4BBD0A: push $0x5CE;");
    asm("loc_4BBD0F: push $0x3FF33333;");
    asm("loc_4BBD14: push $0x3CF5C28F;");
    asm("loc_4BBD19: push $0x3E8624DD;");
    asm("loc_4BBD1E: push $0;");
    asm("loc_4BBD20: mov %eax,0x360(%esi);");
    asm("loc_4BBD26: lea 0x38(%esp),%eax;");
    asm("loc_4BBD2A: push %eax;");
    asm("loc_4BBD2B: push $_data_5D0410;");
    asm("loc_4BBD30: push $_data_5D5C6C;");
    asm("loc_4BBD35: mov %esi,%ecx;");
    asm("loc_4BBD37: movl $0xBE051EB8,0x44(%esp);");
    asm("loc_4BBD3F: movl $0xBE03126F,0x48(%esp);");
    asm("loc_4BBD47: movl $0,0x4C(%esp);");
    asm("loc_4BBD4F: call _sub_5A0E30;");
    asm("loc_4BBD54: push $1;");
    asm("loc_4BBD56: push $0;");
    asm("loc_4BBD58: push $1;");
    asm("loc_4BBD5A: push $0x5CF;");
    asm("loc_4BBD5F: push $0x3FF33333;");
    asm("loc_4BBD64: push $0x3CF5C28F;");
    asm("loc_4BBD69: push $0x3E8624DD;");
    asm("loc_4BBD6E: push $0;");
    asm("loc_4BBD70: lea 0x38(%esp),%ecx;");
    asm("loc_4BBD74: push %ecx;");
    asm("loc_4BBD75: push $_data_5D0410;");
    asm("loc_4BBD7A: push $_data_5D5C58;");
    asm("loc_4BBD7F: mov %esi,%ecx;");
    asm("loc_4BBD81: mov %eax,0x364(%esi);");
    asm("loc_4BBD87: movl $0x3E126E98,0x44(%esp);");
    asm("loc_4BBD8F: movl $0xBE03126F,0x48(%esp);");
    asm("loc_4BBD97: movl $0,0x4C(%esp);");
    asm("loc_4BBD9F: call _sub_5A0E30;");
    asm("loc_4BBDA4: mov %eax,0x368(%esi);");
    asm("loc_4BBDAA: jmp loc_4BBF15;");
    asm("loc_4BBDAF: call *%edi;");
    asm("loc_4BBDB1: test %al,%al;");
    asm("loc_4BBDB3: je loc_4BBF15;");
    asm("loc_4BBDB9: push $0;");
    asm("loc_4BBDBB: push $0;");
    asm("loc_4BBDBD: push $0x323;");
    asm("loc_4BBDC2: push $0;");
    asm("loc_4BBDC4: push $0;");
    asm("loc_4BBDC6: lea 0x2C(%esp),%edx;");
    asm("loc_4BBDCA: push %edx;");
    asm("loc_4BBDCB: lea 0x24(%esp),%eax;");
    asm("loc_4BBDCF: push %eax;");
    asm("loc_4BBDD0: push $_data_5CED30;");
    asm("loc_4BBDD5: push $_data_5D5C48;");
    asm("loc_4BBDDA: mov %esi,%ecx;");
    asm("loc_4BBDDC: movl $0x3E083127,0x3C(%esp);");
    asm("loc_4BBDE4: movl $0x3CD4FDF4,0x40(%esp);");
    asm("loc_4BBDEC: movl $0,0x44(%esp);");
    asm("loc_4BBDF4: movl $0xBE4FDF3B,0x30(%esp);");
    asm("loc_4BBDFC: movl $0xBE570A3D,0x34(%esp);");
    asm("loc_4BBE04: movl $0,0x38(%esp);");
    asm("loc_4BBE0C: call _sub_5A0D00;");
    asm("loc_4BBE11: push $1;");
    asm("loc_4BBE13: push $0;");
    asm("loc_4BBE15: push $1;");
    asm("loc_4BBE17: push $0x628;");
    asm("loc_4BBE1C: push $0x40000000;");
    asm("loc_4BBE21: push $0x3CF5C28F;");
    asm("loc_4BBE26: push $0x3E883127;");
    asm("loc_4BBE2B: push $0;");
    asm("loc_4BBE2D: lea 0x38(%esp),%ecx;");
    asm("loc_4BBE31: push %ecx;");
    asm("loc_4BBE32: push $_data_5D0410;");
    asm("loc_4BBE37: push $_data_5D5C3C;");
    asm("loc_4BBE3C: mov %esi,%ecx;");
    asm("loc_4BBE3E: mov %eax,0x36C(%esi);");
    asm("loc_4BBE44: movl $0xBEAB020C,0x44(%esp);");
    asm("loc_4BBE4C: movl $0xBE408312,0x48(%esp);");
    asm("loc_4BBE54: movl $0,0x4C(%esp);");
    asm("loc_4BBE5C: call _sub_5A0E30;");
    asm("loc_4BBE61: push $0;");
    asm("loc_4BBE63: push $0;");
    asm("loc_4BBE65: push $0x324;");
    asm("loc_4BBE6A: push $0;");
    asm("loc_4BBE6C: push $0;");
    asm("loc_4BBE6E: lea 0x2C(%esp),%edx;");
    asm("loc_4BBE72: push %edx;");
    asm("loc_4BBE73: mov %eax,0x370(%esi);");
    asm("loc_4BBE79: lea 0x24(%esp),%eax;");
    asm("loc_4BBE7D: push %eax;");
    asm("loc_4BBE7E: push $_data_5CED30;");
    asm("loc_4BBE83: push $_data_5D5C30;");
    asm("loc_4BBE88: mov %esi,%ecx;");
    asm("loc_4BBE8A: movl $0x3E083127,0x3C(%esp);");
    asm("loc_4BBE92: movl $0x3CD4FDF4,0x40(%esp);");
    asm("loc_4BBE9A: movl $0,0x44(%esp);");
    asm("loc_4BBEA2: movl $0x3E4DD2F2,0x30(%esp);");
    asm("loc_4BBEAA: movl $0xBE570A3D,0x34(%esp);");
    asm("loc_4BBEB2: movl $0,0x38(%esp);");
    asm("loc_4BBEBA: call _sub_5A0D00;");
    asm("loc_4BBEBF: push $1;");
    asm("loc_4BBEC1: push $0;");
    asm("loc_4BBEC3: push $1;");
    asm("loc_4BBEC5: push $0x629;");
    asm("loc_4BBECA: push $0x40000000;");
    asm("loc_4BBECF: push $0x3CF5C28F;");
    asm("loc_4BBED4: push $0x3E89374C;");
    asm("loc_4BBED9: push $0;");
    asm("loc_4BBEDB: lea 0x38(%esp),%ecx;");
    asm("loc_4BBEDF: push %ecx;");
    asm("loc_4BBEE0: push $_data_5D0410;");
    asm("loc_4BBEE5: push $_data_5D5C28;");
    asm("loc_4BBEEA: mov %esi,%ecx;");
    asm("loc_4BBEEC: mov %eax,0x374(%esi);");
    asm("loc_4BBEF2: movl $0x3D8B4396,0x44(%esp);");
    asm("loc_4BBEFA: movl $0xBE408312,0x48(%esp);");
    asm("loc_4BBF02: movl $0,0x4C(%esp);");
    asm("loc_4BBF0A: call _sub_5A0E30;");
    asm("loc_4BBF0F: mov %eax,0x378(%esi);");
    asm("loc_4BBF15: mov _data_672950,%eax;");
    asm("loc_4BBF1A: cmp %eax,(%eax);");
    asm("loc_4BBF1C: jne loc_4BBF3E;");
    asm("loc_4BBF1E: mov _data_66D3F0,%ecx;");
    asm("loc_4BBF24: call _sub_45DCD0;");
    asm("loc_4BBF29: test %al,%al;");
    asm("loc_4BBF2B: jne loc_4BBF3E;");
    asm("loc_4BBF2D: call *%edi;");
    asm("loc_4BBF2F: test %al,%al;");
    asm("loc_4BBF31: je loc_4BBF3E;");
    asm("loc_4BBF33: movb $0,0x37C(%esi);");
    asm("loc_4BBF3A: push $0;");
    asm("loc_4BBF3C: jmp loc_4BBF40;");
    asm("loc_4BBF3E: push $1;");
    asm("loc_4BBF40: mov %esi,%ecx;");
    asm("loc_4BBF42: call _sub_4BBFB0;");
    asm("loc_4BBF47: mov (%esi),%edx;");
    asm("loc_4BBF49: sub $0xC,%esp;");
    asm("loc_4BBF4C: movl $0,0x18(%esp);");
    asm("loc_4BBF54: mov 0x18(%esp),%ecx;");
    asm("loc_4BBF58: mov %esp,%eax;");
    asm("loc_4BBF5A: mov %ecx,(%eax);");
    asm("loc_4BBF5C: movl $0,0x1C(%esp);");
    asm("loc_4BBF64: mov 0x1C(%esp),%ecx;");
    asm("loc_4BBF68: mov %ecx,4(%eax);");
    asm("loc_4BBF6B: movl $0,0x20(%esp);");
    asm("loc_4BBF73: mov 0x20(%esp),%ecx;");
    asm("loc_4BBF77: mov %ecx,8(%eax);");
    asm("loc_4BBF7A: mov %esi,%ecx;");
    asm("loc_4BBF7C: calll *0x7C(%edx);");
    asm("loc_4BBF7F: mov 0x6C(%esi),%al;");
    asm("loc_4BBF82: mov 0x2C(%esp),%edx;");
    asm("loc_4BBF86: and $0xFC,%al;");
    asm("loc_4BBF88: mov %al,0x6C(%esi);");
    asm("loc_4BBF8B: mov 0x28(%esp),%eax;");
    asm("loc_4BBF8F: push %edx;");
    asm("loc_4BBF90: push %eax;");
    asm("loc_4BBF91: mov %esi,%ecx;");
    asm("loc_4BBF93: call _sub_4B5060;");
    asm("loc_4BBF98: test %al,%al;");
    asm("loc_4BBF9A: pop %edi;");
    asm("loc_4BBF9B: setne %al;");
    asm("loc_4BBF9E: pop %esi;");
    asm("loc_4BBF9F: add $0x1C,%esp;");
    asm("loc_4BBFA2: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BBFB0() // _sub_4BBFB0
{
    __DEBUG_ASM(4BBFB0);
    // chunk 0x4BBFB0 _sub_4BBFB0
    asm("loc_4BBFB0: sub $8,%esp;");
    asm("loc_4BBFB3: push %ebx;");
    asm("loc_4BBFB4: push %esi;");
    asm("loc_4BBFB5: mov %ecx,%esi;");
    asm("loc_4BBFB7: lea 8(%esp),%eax;");
    asm("loc_4BBFBB: push %eax;");
    asm("loc_4BBFBC: lea 0x10(%esp),%ecx;");
    asm("loc_4BBFC0: push %ecx;");
    asm("loc_4BBFC1: mov 0x334(%esi),%ecx;");
    asm("loc_4BBFC7: call _sub_579970;");
    asm("loc_4BBFCC: mov 0x37C(%esi),%al;");
    asm("loc_4BBFD2: test %al,%al;");
    asm("loc_4BBFD4: je loc_4BBFE2;");
    asm("loc_4BBFD6: mov 8(%esp),%edx;");
    asm("loc_4BBFDA: mov %edx,0x380(%esi);");
    asm("loc_4BBFE0: jmp loc_4BBFEC;");
    asm("loc_4BBFE2: mov 8(%esp),%eax;");
    asm("loc_4BBFE6: mov %eax,0x384(%esi);");
    asm("loc_4BBFEC: mov 0x14(%esp),%bl;");
    asm("loc_4BBFF0: test %bl,%bl;");
    asm("loc_4BBFF2: mov %bl,0x37C(%esi);");
    asm("loc_4BBFF8: je loc_4BC008;");
    asm("loc_4BBFFA: mov 0x380(%esi),%ecx;");
    asm("loc_4BC000: mov %ecx,0x388(%esi);");
    asm("loc_4BC006: jmp loc_4BC014;");
    asm("loc_4BC008: mov 0x384(%esi),%edx;");
    asm("loc_4BC00E: mov %edx,0x388(%esi);");
    asm("loc_4BC014: mov 0x36C(%esi),%ecx;");
    asm("loc_4BC01A: test %ecx,%ecx;");
    asm("loc_4BC01C: je loc_4BC07C;");
    asm("loc_4BC01E: mov 0x374(%esi),%eax;");
    asm("loc_4BC024: test %eax,%eax;");
    asm("loc_4BC026: je loc_4BC07C;");
    asm("loc_4BC028: mov (%ecx),%eax;");
    asm("loc_4BC02A: push %edi;");
    asm("loc_4BC02B: movzbl %bl,%edi;");
    asm("loc_4BC02E: push $0;");
    asm("loc_4BC030: push %edi;");
    asm("loc_4BC031: push $0xC;");
    asm("loc_4BC033: calll *0xA8(%eax);");
    asm("loc_4BC039: mov 0x370(%esi),%ecx;");
    asm("loc_4BC03F: mov (%ecx),%edx;");
    asm("loc_4BC041: push $0;");
    asm("loc_4BC043: push %edi;");
    asm("loc_4BC044: push $0xC;");
    asm("loc_4BC046: calll *0xA8(%edx);");
    asm("loc_4BC04C: mov 0x374(%esi),%ecx;");
    asm("loc_4BC052: mov (%ecx),%edx;");
    asm("loc_4BC054: xor %eax,%eax;");
    asm("loc_4BC056: test %bl,%bl;");
    asm("loc_4BC058: sete %al;");
    asm("loc_4BC05B: push $0;");
    asm("loc_4BC05D: mov %eax,%edi;");
    asm("loc_4BC05F: push %edi;");
    asm("loc_4BC060: push $0xC;");
    asm("loc_4BC062: calll *0xA8(%edx);");
    asm("loc_4BC068: mov 0x378(%esi),%ecx;");
    asm("loc_4BC06E: mov (%ecx),%eax;");
    asm("loc_4BC070: push $0;");
    asm("loc_4BC072: push %edi;");
    asm("loc_4BC073: push $0xC;");
    asm("loc_4BC075: calll *0xA8(%eax);");
    asm("loc_4BC07B: pop %edi;");
    asm("loc_4BC07C: mov %esi,%ecx;");
    asm("loc_4BC07E: call _sub_4BC2A0;");
    asm("loc_4BC083: pop %esi;");
    asm("loc_4BC084: pop %ebx;");
    asm("loc_4BC085: add $8,%esp;");
    asm("loc_4BC088: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BC090() // _sub_4BC090
{
    __DEBUG_ASM(4BC090);
    // chunk 0x4BC090 _sub_4BC090
    asm("loc_4BC090: mov 4(%esp),%eax;");
    asm("loc_4BC094: cmp $0xEF01,%eax;");
    asm("loc_4BC099: push %esi;");
    asm("loc_4BC09A: mov %ecx,%esi;");
    asm("loc_4BC09C: jne loc_4BC0B8;");
    asm("loc_4BC09E: mov 4(%esi),%eax;");
    asm("loc_4BC0A1: test %eax,%eax;");
    asm("loc_4BC0A3: je loc_4BC0AE;");
    asm("loc_4BC0A5: mov (%esi),%edx;");
    asm("loc_4BC0A7: add $0x60,%eax;");
    asm("loc_4BC0AA: push %eax;");
    asm("loc_4BC0AB: calll *0x14(%edx);");
    asm("loc_4BC0AE: orb $3,0x6C(%esi);");
    asm("loc_4BC0B2: mov $1,%al;");
    asm("loc_4BC0B4: pop %esi;");
    asm("loc_4BC0B5: ret $0xC;");
    asm("loc_4BC0B8: cmp $0xEF02,%eax;");
    asm("loc_4BC0BD: jne loc_4BC0FE;");
    asm("loc_4BC0BF: push $0;");
    asm("loc_4BC0C1: push %esi;");
    asm("loc_4BC0C2: call _sub_59DD00;");
    asm("loc_4BC0C7: add $8,%esp;");
    asm("loc_4BC0CA: test %esi,%esi;");
    asm("loc_4BC0CC: je loc_4BC0F8;");
    asm("loc_4BC0CE: mov 0xC(%esi),%eax;");
    asm("loc_4BC0D1: test %eax,%eax;");
    asm("loc_4BC0D3: je loc_4BC0E9;");
    asm("loc_4BC0D5: push %edi;");
    asm("loc_4BC0D6: mov 8(%eax),%edi;");
    asm("loc_4BC0D9: push %eax;");
    asm("loc_4BC0DA: call _sub_43D2A0;");
    asm("loc_4BC0DF: add $4,%esp;");
    asm("loc_4BC0E2: test %edi,%edi;");
    asm("loc_4BC0E4: mov %edi,%eax;");
    asm("loc_4BC0E6: jne loc_4BC0D6;");
    asm("loc_4BC0E8: pop %edi;");
    asm("loc_4BC0E9: mov (%esi),%eax;");
    asm("loc_4BC0EB: mov %esi,%ecx;");
    asm("loc_4BC0ED: calll *0x28(%eax);");
    asm("loc_4BC0F0: mov (%esi),%edx;");
    asm("loc_4BC0F2: push $1;");
    asm("loc_4BC0F4: mov %esi,%ecx;");
    asm("loc_4BC0F6: calll *(%edx);");
    asm("loc_4BC0F8: mov $1,%al;");
    asm("loc_4BC0FA: pop %esi;");
    asm("loc_4BC0FB: ret $0xC;");
    asm("loc_4BC0FE: xor %al,%al;");
    asm("loc_4BC100: pop %esi;");
    asm("loc_4BC101: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BC110() // _sub_4BC110
{
    __DEBUG_ASM(4BC110);
    // chunk 0x4BC110 _sub_4BC110
    asm("loc_4BC110: cmpl $0x26,4(%esp);");
    asm("loc_4BC115: push %esi;");
    asm("loc_4BC116: mov %ecx,%esi;");
    asm("loc_4BC118: jne loc_4BC28E;");
    asm("loc_4BC11E: mov 0xC(%esp),%eax;");
    asm("loc_4BC122: cmp 0x330(%esi),%eax;");
    asm("loc_4BC128: jne loc_4BC142;");
    asm("loc_4BC12A: call _sub_45A460;");
    asm("loc_4BC12F: push $1;");
    asm("loc_4BC131: call _sub_4424F0;");
    asm("loc_4BC136: add $4,%esp;");
    asm("loc_4BC139: mov $1,%eax;");
    asm("loc_4BC13E: pop %esi;");
    asm("loc_4BC13F: ret $0xC;");
    asm("loc_4BC142: cmp 0x36C(%esi),%eax;");
    asm("loc_4BC148: jne loc_4BC15C;");
    asm("loc_4BC14A: push $1;");
    asm("loc_4BC14C: mov %esi,%ecx;");
    asm("loc_4BC14E: call _sub_4BBFB0;");
    asm("loc_4BC153: mov $1,%eax;");
    asm("loc_4BC158: pop %esi;");
    asm("loc_4BC159: ret $0xC;");
    asm("loc_4BC15C: cmp 0x374(%esi),%eax;");
    asm("loc_4BC162: jne loc_4BC176;");
    asm("loc_4BC164: push $0;");
    asm("loc_4BC166: mov %esi,%ecx;");
    asm("loc_4BC168: call _sub_4BBFB0;");
    asm("loc_4BC16D: mov $1,%eax;");
    asm("loc_4BC172: pop %esi;");
    asm("loc_4BC173: ret $0xC;");
    asm("loc_4BC176: cmp 0x33C(%esi),%eax;");
    asm("loc_4BC17C: jne loc_4BC19D;");
    asm("loc_4BC17E: call _sub_45A460;");
    asm("loc_4BC183: push $1;");
    asm("loc_4BC185: call _sub_4424F0;");
    asm("loc_4BC18A: add $4,%esp;");
    asm("loc_4BC18D: mov %esi,%ecx;");
    asm("loc_4BC18F: call _sub_4BC830;");
    asm("loc_4BC194: mov $1,%eax;");
    asm("loc_4BC199: pop %esi;");
    asm("loc_4BC19A: ret $0xC;");
    asm("loc_4BC19D: cmp 0x340(%esi),%eax;");
    asm("loc_4BC1A3: jne loc_4BC1C4;");
    asm("loc_4BC1A5: call _sub_45A460;");
    asm("loc_4BC1AA: push $1;");
    asm("loc_4BC1AC: call _sub_4424F0;");
    asm("loc_4BC1B1: push $3;");
    asm("loc_4BC1B3: call _sub_488970;");
    asm("loc_4BC1B8: add $8,%esp;");
    asm("loc_4BC1BB: mov $1,%eax;");
    asm("loc_4BC1C0: pop %esi;");
    asm("loc_4BC1C1: ret $0xC;");
    asm("loc_4BC1C4: cmp 0x344(%esi),%eax;");
    asm("loc_4BC1CA: jne loc_4BC1E9;");
    asm("loc_4BC1CC: call _sub_45A460;");
    asm("loc_4BC1D1: push $1;");
    asm("loc_4BC1D3: call _sub_4424F0;");
    asm("loc_4BC1D8: add $4,%esp;");
    asm("loc_4BC1DB: call _sub_5B2C50;");
    asm("loc_4BC1E0: mov $1,%eax;");
    asm("loc_4BC1E5: pop %esi;");
    asm("loc_4BC1E6: ret $0xC;");
    asm("loc_4BC1E9: cmp 0x354(%esi),%eax;");
    asm("loc_4BC1EF: jne loc_4BC223;");
    asm("loc_4BC1F1: call _sub_45A460;");
    asm("loc_4BC1F6: push $1;");
    asm("loc_4BC1F8: call _sub_4424F0;");
    asm("loc_4BC1FD: push $4;");
    asm("loc_4BC1FF: movb $1,_data_66D35A;");
    asm("loc_4BC206: call _sub_564B10;");
    asm("loc_4BC20B: push $0;");
    asm("loc_4BC20D: push $0xC5;");
    asm("loc_4BC212: call _sub_5763B0;");
    asm("loc_4BC217: add $0x10,%esp;");
    asm("loc_4BC21A: mov $1,%eax;");
    asm("loc_4BC21F: pop %esi;");
    asm("loc_4BC220: ret $0xC;");
    asm("loc_4BC223: cmp 0x358(%esi),%eax;");
    asm("loc_4BC229: jne loc_4BC256;");
    asm("loc_4BC22B: call _sub_45A460;");
    asm("loc_4BC230: push $1;");
    asm("loc_4BC232: call _sub_4424F0;");
    asm("loc_4BC237: push $2;");
    asm("loc_4BC239: call _sub_564B10;");
    asm("loc_4BC23E: push $0;");
    asm("loc_4BC240: push $0xC5;");
    asm("loc_4BC245: call _sub_5763B0;");
    asm("loc_4BC24A: add $0x10,%esp;");
    asm("loc_4BC24D: mov $1,%eax;");
    asm("loc_4BC252: pop %esi;");
    asm("loc_4BC253: ret $0xC;");
    asm("loc_4BC256: cmp 0x35C(%esi),%eax;");
    asm("loc_4BC25C: jne loc_4BC28E;");
    asm("loc_4BC25E: call _sub_45A460;");
    asm("loc_4BC263: push $1;");
    asm("loc_4BC265: call _sub_4424F0;");
    asm("loc_4BC26A: call _sub_5A8260;");
    asm("loc_4BC26F: push $3;");
    asm("loc_4BC271: call _sub_564B10;");
    asm("loc_4BC276: push $0;");
    asm("loc_4BC278: push $0xC5;");
    asm("loc_4BC27D: call _sub_5763B0;");
    asm("loc_4BC282: add $0x10,%esp;");
    asm("loc_4BC285: mov $1,%eax;");
    asm("loc_4BC28A: pop %esi;");
    asm("loc_4BC28B: ret $0xC;");
    asm("loc_4BC28E: xor %eax,%eax;");
    asm("loc_4BC290: pop %esi;");
    asm("loc_4BC291: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BC2A0() // _sub_4BC2A0
{
    __DEBUG_ASM(4BC2A0);
    // chunk 0x4BC2A0 _sub_4BC2A0
    asm("loc_4BC2A0: push $0xFFFFFFFF;");
    asm("loc_4BC2A2: push $_sub_5BD446;");
    asm("loc_4BC2A7: mov %fs:0,%eax;");
    asm("loc_4BC2AD: push %eax;");
    asm("loc_4BC2AE: mov %esp,%fs:0;");
    asm("loc_4BC2B5: sub $0x68,%esp;");
    asm("loc_4BC2B8: push %ebx;");
    asm("loc_4BC2B9: push %esi;");
    asm("loc_4BC2BA: mov %ecx,%esi;");
    asm("loc_4BC2BC: push %edi;");
    asm("loc_4BC2BD: mov 0x334(%esi),%edi;");
    asm("loc_4BC2C3: mov %edi,%ecx;");
    asm("loc_4BC2C5: mov %esi,0x24(%esp);");
    asm("loc_4BC2C9: mov %edi,0x2C(%esp);");
    asm("loc_4BC2CD: call _sub_57B370;");
    asm("loc_4BC2D2: mov 0xF(%esp),%al;");
    asm("loc_4BC2D6: xor %ebx,%ebx;");
    asm("loc_4BC2D8: push %ebx;");
    asm("loc_4BC2D9: push %ebx;");
    asm("loc_4BC2DA: lea 0x58(%esp),%ecx;");
    asm("loc_4BC2DE: mov %al,0x58(%esp);");
    asm("loc_4BC2E2: call _sub_42A7E0;");
    asm("loc_4BC2E7: mov %eax,0x54(%esp);");
    asm("loc_4BC2EB: mov %ebx,0x58(%esp);");
    asm("loc_4BC2EF: push $0x9CA4;");
    asm("loc_4BC2F4: lea 0x34(%esp),%ecx;");
    asm("loc_4BC2F8: mov %ebx,0x80(%esp);");
    asm("loc_4BC2FF: calll *_import_5C62B8;");
    asm("loc_4BC305: mov (%eax),%edx;");
    asm("loc_4BC307: mov %eax,%ecx;");
    asm("loc_4BC309: movb $1,0x7C(%esp);");
    asm("loc_4BC30E: calll *0x1C(%edx);");
    asm("loc_4BC311: mov %eax,0x10(%esp);");
    asm("loc_4BC315: mov 0x54(%esp),%ecx;");
    asm("loc_4BC319: lea 0x10(%esp),%eax;");
    asm("loc_4BC31D: push %eax;");
    asm("loc_4BC31E: push %ecx;");
    asm("loc_4BC31F: lea 0x30(%esp),%edx;");
    asm("loc_4BC323: push %edx;");
    asm("loc_4BC324: lea 0x5C(%esp),%ecx;");
    asm("loc_4BC328: movb $2,0x88(%esp);");
    asm("loc_4BC330: call _sub_46C800;");
    asm("loc_4BC335: mov 0x10(%esp),%ecx;");
    asm("loc_4BC339: cmp %ebx,%ecx;");
    asm("loc_4BC33B: movb $1,0x7C(%esp);");
    asm("loc_4BC340: je loc_4BC34C;");
    asm("loc_4BC342: mov (%ecx),%eax;");
    asm("loc_4BC344: push $1;");
    asm("loc_4BC346: calll *(%eax);");
    asm("loc_4BC348: mov %ebx,0x10(%esp);");
    asm("loc_4BC34C: lea 0x30(%esp),%ecx;");
    asm("loc_4BC350: movb $0,0x7C(%esp);");
    asm("loc_4BC355: calll *_import_5C62B4;");
    asm("loc_4BC35B: mov _data_672338,%eax;");
    asm("loc_4BC360: cmp %ebx,%eax;");
    asm("loc_4BC362: mov %eax,0x338(%esi);");
    asm("loc_4BC368: jne loc_4BC381;");
    asm("loc_4BC36A: lea 0x50(%esp),%ecx;");
    asm("loc_4BC36E: push %ecx;");
    asm("loc_4BC36F: push $0x40F;");
    asm("loc_4BC374: call _sub_57DA40;");
    asm("loc_4BC379: add $8,%esp;");
    asm("loc_4BC37C: jmp loc_4BC7B6;");
    asm("loc_4BC381: mov _data_672334,%eax;");
    asm("loc_4BC386: mov (%eax),%ecx;");
    asm("loc_4BC388: cmp %eax,%ecx;");
    asm("loc_4BC38A: movb $0,0xE(%esp);");
    asm("loc_4BC38F: movb $0,0xF(%esp);");
    asm("loc_4BC394: mov %ecx,0x20(%esp);");
    asm("loc_4BC398: je loc_4BC7B6;");
    asm("loc_4BC39E: push %ebp;");
    asm("loc_4BC39F: nop;");
    asm("loc_4BC3A0: mov _data_6119F8,%eax;");
    asm("loc_4BC3A5: mov 0x24(%esp),%edx;");
    asm("loc_4BC3A9: push $1;");
    asm("loc_4BC3AB: push %eax;");
    asm("loc_4BC3AC: lea 8(%edx),%ebp;");
    asm("loc_4BC3AF: push $_data_66FC60;");
    asm("loc_4BC3B4: push %ebp;");
    asm("loc_4BC3B5: call _sub_4BA860;");
    asm("loc_4BC3BA: mov 0x37C(%esi),%al;");
    asm("loc_4BC3C0: add $0x10,%esp;");
    asm("loc_4BC3C3: test %al,%al;");
    asm("loc_4BC3C5: movl $_data_66FC60,0x20(%esp);");
    asm("loc_4BC3CD: je loc_4BC5A5;");
    asm("loc_4BC3D3: cmpw $0x2A,_data_66FC60;");
    asm("loc_4BC3DB: je loc_4BC79B;");
    asm("loc_4BC3E1: mov 0x13(%esp),%al;");
    asm("loc_4BC3E5: test %al,%al;");
    asm("loc_4BC3E7: jne loc_4BC491;");
    asm("loc_4BC3ED: call _sub_4C4FB0;");
    asm("loc_4BC3F2: mov %eax,%esi;");
    asm("loc_4BC3F4: xor %ebx,%ebx;");
    asm("loc_4BC3F6: test %esi,%esi;");
    asm("loc_4BC3F8: mov %esi,0x2C(%esp);");
    asm("loc_4BC3FC: jle loc_4BC491;");
    asm("loc_4BC402: push %ebx;");
    asm("loc_4BC403: call _sub_4C4FF0;");
    asm("loc_4BC408: add $4,%esp;");
    asm("loc_4BC40B: test %eax,%eax;");
    asm("loc_4BC40D: je loc_4BC488;");
    asm("loc_4BC40F: push %eax;");
    asm("loc_4BC410: lea 0x64(%esp),%ecx;");
    asm("loc_4BC414: calll *_import_5C6420;");
    asm("loc_4BC41A: lea 0x60(%esp),%ecx;");
    asm("loc_4BC41E: push %ecx;");
    asm("loc_4BC41F: movb $3,0x84(%esp);");
    asm("loc_4BC427: call _sub_4BA5A0;");
    asm("loc_4BC42C: mov _data_6119F8,%eax;");
    asm("loc_4BC431: cltd;");
    asm("loc_4BC432: sub %edx,%eax;");
    asm("loc_4BC434: mov %eax,%esi;");
    asm("loc_4BC436: push $0;");
    asm("loc_4BC438: sar $1,%esi;");
    asm("loc_4BC43A: push %esi;");
    asm("loc_4BC43B: lea 0x6C(%esp),%edx;");
    asm("loc_4BC43F: push $_data_66DC60;");
    asm("loc_4BC444: push %edx;");
    asm("loc_4BC445: call _sub_4BA860;");
    asm("loc_4BC44A: push $0;");
    asm("loc_4BC44C: push %esi;");
    asm("loc_4BC44D: lea _data_66DC60(,%esi,2),%edi;");
    asm("loc_4BC454: push %edi;");
    asm("loc_4BC455: push %ebp;");
    asm("loc_4BC456: call _sub_4BA860;");
    asm("loc_4BC45B: push $_data_66DC60;");
    asm("loc_4BC460: push %edi;");
    asm("loc_4BC461: calll *_import_5C71D4;");
    asm("loc_4BC467: add $0x2C,%esp;");
    asm("loc_4BC46A: test %eax,%eax;");
    asm("loc_4BC46C: lea 0x60(%esp),%ecx;");
    asm("loc_4BC470: movb $0,0x80(%esp);");
    asm("loc_4BC478: je loc_4BC526;");
    asm("loc_4BC47E: calll *_import_5C6098;");
    asm("loc_4BC484: mov 0x2C(%esp),%esi;");
    asm("loc_4BC488: inc %ebx;");
    asm("loc_4BC489: cmp %esi,%ebx;");
    asm("loc_4BC48B: jl loc_4BC402;");
    asm("loc_4BC491: push $0x9CA4;");
    asm("loc_4BC496: lea 0x48(%esp),%ecx;");
    asm("loc_4BC49A: calll *_import_5C62B8;");
    asm("loc_4BC4A0: mov (%eax),%edx;");
    asm("loc_4BC4A2: mov %eax,%ecx;");
    asm("loc_4BC4A4: movb $6,0x80(%esp);");
    asm("loc_4BC4AC: calll *0x1C(%edx);");
    asm("loc_4BC4AF: mov %eax,0x18(%esp);");
    asm("loc_4BC4B3: mov 0x58(%esp),%eax;");
    asm("loc_4BC4B7: mov 4(%eax),%ecx;");
    asm("loc_4BC4BA: lea 4(%eax),%esi;");
    asm("loc_4BC4BD: push %ecx;");
    asm("loc_4BC4BE: push %eax;");
    asm("loc_4BC4BF: lea 0x5C(%esp),%ecx;");
    asm("loc_4BC4C3: movb $7,0x88(%esp);");
    asm("loc_4BC4CB: call _sub_42A7E0;");
    asm("loc_4BC4D0: mov %eax,(%esi);");
    asm("loc_4BC4D2: mov 4(%eax),%ecx;");
    asm("loc_4BC4D5: lea 0x18(%esp),%edx;");
    asm("loc_4BC4D9: mov %eax,(%ecx);");
    asm("loc_4BC4DB: push %edx;");
    asm("loc_4BC4DC: add $8,%eax;");
    asm("loc_4BC4DF: push %eax;");
    asm("loc_4BC4E0: call _sub_46EA00;");
    asm("loc_4BC4E5: mov 0x64(%esp),%ecx;");
    asm("loc_4BC4E9: add $8,%esp;");
    asm("loc_4BC4EC: inc %ecx;");
    asm("loc_4BC4ED: mov %ecx,0x5C(%esp);");
    asm("loc_4BC4F1: mov 0x18(%esp),%ecx;");
    asm("loc_4BC4F5: test %ecx,%ecx;");
    asm("loc_4BC4F7: movb $6,0x80(%esp);");
    asm("loc_4BC4FF: je loc_4BC50F;");
    asm("loc_4BC501: mov (%ecx),%eax;");
    asm("loc_4BC503: push $1;");
    asm("loc_4BC505: calll *(%eax);");
    asm("loc_4BC507: movl $0,0x18(%esp);");
    asm("loc_4BC50F: lea 0x44(%esp),%ecx;");
    asm("loc_4BC513: movb $0,0x80(%esp);");
    asm("loc_4BC51B: calll *_import_5C62B4;");
    asm("loc_4BC521: jmp loc_4BC5BB;");
    asm("loc_4BC526: movb $1,0x13(%esp);");
    asm("loc_4BC52B: calll *_import_5C6098;");
    asm("loc_4BC531: push $0x3D0A;");
    asm("loc_4BC536: lea 0x40(%esp),%ecx;");
    asm("loc_4BC53A: calll *_import_5C62B8;");
    asm("loc_4BC540: mov (%eax),%edx;");
    asm("loc_4BC542: mov %eax,%ecx;");
    asm("loc_4BC544: movb $4,0x80(%esp);");
    asm("loc_4BC54C: calll *0x1C(%edx);");
    asm("loc_4BC54F: mov %eax,0x14(%esp);");
    asm("loc_4BC553: mov 0x58(%esp),%ecx;");
    asm("loc_4BC557: lea 0x14(%esp),%eax;");
    asm("loc_4BC55B: push %eax;");
    asm("loc_4BC55C: push %ecx;");
    asm("loc_4BC55D: lea 0x3C(%esp),%edx;");
    asm("loc_4BC561: push %edx;");
    asm("loc_4BC562: lea 0x60(%esp),%ecx;");
    asm("loc_4BC566: movb $5,0x8C(%esp);");
    asm("loc_4BC56E: call _sub_46C800;");
    asm("loc_4BC573: mov 0x14(%esp),%ecx;");
    asm("loc_4BC577: test %ecx,%ecx;");
    asm("loc_4BC579: movb $4,0x80(%esp);");
    asm("loc_4BC581: je loc_4BC591;");
    asm("loc_4BC583: mov (%ecx),%eax;");
    asm("loc_4BC585: push $1;");
    asm("loc_4BC587: calll *(%eax);");
    asm("loc_4BC589: movl $0,0x14(%esp);");
    asm("loc_4BC591: lea 0x3C(%esp),%ecx;");
    asm("loc_4BC595: movb $0,0x80(%esp);");
    asm("loc_4BC59D: calll *_import_5C62B4;");
    asm("loc_4BC5A3: jmp loc_4BC5BB;");
    asm("loc_4BC5A5: cmpw $0x2A,_data_66FC60;");
    asm("loc_4BC5AD: jne loc_4BC79B;");
    asm("loc_4BC5B3: movl $_data_66FC62,0x20(%esp);");
    asm("loc_4BC5BB: mov 0x12(%esp),%al;");
    asm("loc_4BC5BF: test %al,%al;");
    asm("loc_4BC5C1: je loc_4BC5F9;");
    asm("loc_4BC5C3: push $_data_5D0A08;");
    asm("loc_4BC5C8: push $_data_66DC60;");
    asm("loc_4BC5CD: calll *_import_5C70B4;");
    asm("loc_4BC5D3: add $8,%esp;");
    asm("loc_4BC5D6: push $0;");
    asm("loc_4BC5D8: lea 0x58(%esp),%ecx;");
    asm("loc_4BC5DC: push %ecx;");
    asm("loc_4BC5DD: push $_data_66DC60;");
    asm("loc_4BC5E2: calll *_import_5C71C8;");
    asm("loc_4BC5E8: add $4,%esp;");
    asm("loc_4BC5EB: push %eax;");
    asm("loc_4BC5EC: push $_data_66DC60;");
    asm("loc_4BC5F1: call _sub_57E2C0;");
    asm("loc_4BC5F6: add $0x10,%esp;");
    asm("loc_4BC5F9: mov 4(%ebp),%eax;");
    asm("loc_4BC5FC: xor %bl,%bl;");
    asm("loc_4BC5FE: cmp $0x723,%eax;");
    asm("loc_4BC603: jne loc_4BC6A7;");
    asm("loc_4BC609: push $0x3D0A;");
    asm("loc_4BC60E: lea 0x50(%esp),%ecx;");
    asm("loc_4BC612: mov $1,%bl;");
    asm("loc_4BC614: calll *_import_5C62B8;");
    asm("loc_4BC61A: mov (%eax),%edx;");
    asm("loc_4BC61C: mov %eax,%ecx;");
    asm("loc_4BC61E: movb $8,0x80(%esp);");
    asm("loc_4BC626: calll *0x1C(%edx);");
    asm("loc_4BC629: mov %eax,0x1C(%esp);");
    asm("loc_4BC62D: mov 0x58(%esp),%eax;");
    asm("loc_4BC631: mov 4(%eax),%edi;");
    asm("loc_4BC634: lea 4(%eax),%esi;");
    asm("loc_4BC637: push $0xC;");
    asm("loc_4BC639: movb $9,0x84(%esp);");
    asm("loc_4BC641: mov %eax,%ebp;");
    asm("loc_4BC643: call _sub_5B7E84;");
    asm("loc_4BC648: add $4,%esp;");
    asm("loc_4BC64B: test %edi,%edi;");
    asm("loc_4BC64D: mov %ebp,(%eax);");
    asm("loc_4BC64F: jne loc_4BC653;");
    asm("loc_4BC651: mov %eax,%edi;");
    asm("loc_4BC653: mov %edi,4(%eax);");
    asm("loc_4BC656: mov %eax,(%esi);");
    asm("loc_4BC658: mov 4(%eax),%ecx;");
    asm("loc_4BC65B: mov %eax,(%ecx);");
    asm("loc_4BC65D: lea 0x1C(%esp),%ecx;");
    asm("loc_4BC661: push %ecx;");
    asm("loc_4BC662: add $8,%eax;");
    asm("loc_4BC665: push %eax;");
    asm("loc_4BC666: call _sub_46EA00;");
    asm("loc_4BC66B: mov 0x64(%esp),%ecx;");
    asm("loc_4BC66F: add $8,%esp;");
    asm("loc_4BC672: inc %ecx;");
    asm("loc_4BC673: mov %ecx,0x5C(%esp);");
    asm("loc_4BC677: mov 0x1C(%esp),%ecx;");
    asm("loc_4BC67B: test %ecx,%ecx;");
    asm("loc_4BC67D: movb $8,0x80(%esp);");
    asm("loc_4BC685: je loc_4BC695;");
    asm("loc_4BC687: mov (%ecx),%edx;");
    asm("loc_4BC689: push $1;");
    asm("loc_4BC68B: calll *(%edx);");
    asm("loc_4BC68D: movl $0,0x1C(%esp);");
    asm("loc_4BC695: lea 0x4C(%esp),%ecx;");
    asm("loc_4BC699: movb $0,0x80(%esp);");
    asm("loc_4BC6A1: calll *_import_5C62B4;");
    asm("loc_4BC6A7: push $0x3A;");
    asm("loc_4BC6A9: push $_data_66FC60;");
    asm("loc_4BC6AE: calll *_import_5C7118;");
    asm("loc_4BC6B4: add $8,%esp;");
    asm("loc_4BC6B7: test %eax,%eax;");
    asm("loc_4BC6B9: jne loc_4BC773;");
    asm("loc_4BC6BF: test %bl,%bl;");
    asm("loc_4BC6C1: jne loc_4BC773;");
    asm("loc_4BC6C7: mov 0x28(%esp),%esi;");
    asm("loc_4BC6CB: mov 0x37C(%esi),%al;");
    asm("loc_4BC6D1: test %al,%al;");
    asm("loc_4BC6D3: je loc_4BC71E;");
    asm("loc_4BC6D5: mov _data_66D3F0,%ecx;");
    asm("loc_4BC6DB: call _sub_45DCD0;");
    asm("loc_4BC6E0: test %al,%al;");
    asm("loc_4BC6E2: je loc_4BC705;");
    asm("loc_4BC6E4: mov 0x12(%esp),%al;");
    asm("loc_4BC6E8: test %al,%al;");
    asm("loc_4BC6EA: jne loc_4BC705;");
    asm("loc_4BC6EC: mov _data_6119F8,%eax;");
    asm("loc_4BC6F1: mov _data_67ECA8,%ecx;");
    asm("loc_4BC6F7: push %eax;");
    asm("loc_4BC6F8: push $_data_66DC60;");
    asm("loc_4BC6FD: push $0x3DB;");
    asm("loc_4BC702: push %ecx;");
    asm("loc_4BC703: jmp loc_4BC736;");
    asm("loc_4BC705: mov _data_6119F8,%edx;");
    asm("loc_4BC70B: mov _data_67ECA8,%eax;");
    asm("loc_4BC710: push %edx;");
    asm("loc_4BC711: push $_data_66DC60;");
    asm("loc_4BC716: push $0x626;");
    asm("loc_4BC71B: push %eax;");
    asm("loc_4BC71C: jmp loc_4BC736;");
    asm("loc_4BC71E: mov _data_6119F8,%ecx;");
    asm("loc_4BC724: mov _data_67ECA8,%edx;");
    asm("loc_4BC72A: push %ecx;");
    asm("loc_4BC72B: push $_data_66DC60;");
    asm("loc_4BC730: push $0x63C;");
    asm("loc_4BC735: push %edx;");
    asm("loc_4BC736: call _sub_4347E0;");
    asm("loc_4BC73B: mov 0x30(%esp),%eax;");
    asm("loc_4BC73F: add $0x10,%esp;");
    asm("loc_4BC742: push %eax;");
    asm("loc_4BC743: push $_data_66DC60;");
    asm("loc_4BC748: calll *_import_5C70AC;");
    asm("loc_4BC74E: add $8,%esp;");
    asm("loc_4BC751: push $0;");
    asm("loc_4BC753: lea 0x58(%esp),%ecx;");
    asm("loc_4BC757: push %ecx;");
    asm("loc_4BC758: push $_data_66DC60;");
    asm("loc_4BC75D: calll *_import_5C71C8;");
    asm("loc_4BC763: add $4,%esp;");
    asm("loc_4BC766: push %eax;");
    asm("loc_4BC767: push $_data_66DC60;");
    asm("loc_4BC76C: call _sub_57E2C0;");
    asm("loc_4BC771: jmp loc_4BC793;");
    asm("loc_4BC773: mov 0x20(%esp),%esi;");
    asm("loc_4BC777: push $0;");
    asm("loc_4BC779: lea 0x58(%esp),%edx;");
    asm("loc_4BC77D: push %edx;");
    asm("loc_4BC77E: push %esi;");
    asm("loc_4BC77F: calll *_import_5C71C8;");
    asm("loc_4BC785: add $4,%esp;");
    asm("loc_4BC788: push %eax;");
    asm("loc_4BC789: push %esi;");
    asm("loc_4BC78A: call _sub_57E2C0;");
    asm("loc_4BC78F: mov 0x38(%esp),%esi;");
    asm("loc_4BC793: add $0x10,%esp;");
    asm("loc_4BC796: movb $1,0x12(%esp);");
    asm("loc_4BC79B: mov 0x24(%esp),%eax;");
    asm("loc_4BC79F: mov (%eax),%eax;");
    asm("loc_4BC7A1: cmp _data_672334,%eax;");
    asm("loc_4BC7A7: mov %eax,0x24(%esp);");
    asm("loc_4BC7AB: jne loc_4BC3A0;");
    asm("loc_4BC7B1: mov 0x30(%esp),%edi;");
    asm("loc_4BC7B5: pop %ebp;");
    asm("loc_4BC7B6: lea 0x50(%esp),%ecx;");
    asm("loc_4BC7BA: push %ecx;");
    asm("loc_4BC7BB: mov %edi,%ecx;");
    asm("loc_4BC7BD: call _sub_57B3E0;");
    asm("loc_4BC7C2: mov 0x54(%esp),%ebx;");
    asm("loc_4BC7C6: mov (%ebx),%edi;");
    asm("loc_4BC7C8: cmp %ebx,%edi;");
    asm("loc_4BC7CA: movl $0xFFFFFFFF,0x7C(%esp);");
    asm("loc_4BC7D2: je loc_4BC80B;");
    asm("loc_4BC7D4: mov %edi,%esi;");
    asm("loc_4BC7D6: mov 4(%esi),%edx;");
    asm("loc_4BC7D9: mov (%esi),%eax;");
    asm("loc_4BC7DB: mov (%edi),%edi;");
    asm("loc_4BC7DD: mov %eax,(%edx);");
    asm("loc_4BC7DF: mov (%esi),%ecx;");
    asm("loc_4BC7E1: mov 4(%esi),%edx;");
    asm("loc_4BC7E4: mov %edx,4(%ecx);");
    asm("loc_4BC7E7: push $0;");
    asm("loc_4BC7E9: lea 8(%esi),%ecx;");
    asm("loc_4BC7EC: call _sub_46EA80;");
    asm("loc_4BC7F1: push %esi;");
    asm("loc_4BC7F2: call _sub_5B7E1D;");
    asm("loc_4BC7F7: mov 0x5C(%esp),%ecx;");
    asm("loc_4BC7FB: add $4,%esp;");
    asm("loc_4BC7FE: dec %ecx;");
    asm("loc_4BC7FF: cmp %ebx,%edi;");
    asm("loc_4BC801: mov %ecx,0x58(%esp);");
    asm("loc_4BC805: jne loc_4BC7D4;");
    asm("loc_4BC807: mov 0x54(%esp),%ebx;");
    asm("loc_4BC80B: push %ebx;");
    asm("loc_4BC80C: call _sub_5B7E1D;");
    asm("loc_4BC811: mov 0x78(%esp),%ecx;");
    asm("loc_4BC815: add $4,%esp;");
    asm("loc_4BC818: pop %edi;");
    asm("loc_4BC819: pop %esi;");
    asm("loc_4BC81A: pop %ebx;");
    asm("loc_4BC81B: mov %ecx,%fs:0;");
    asm("loc_4BC822: add $0x74,%esp;");
    asm("loc_4BC825: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BC830() // _sub_4BC830
{
    __DEBUG_ASM(4BC830);
    // chunk 0x4BC830 _sub_4BC830
    asm("loc_4BC830: sub $0x200,%esp;");
    asm("loc_4BC836: movb $0,(%esp);");
    asm("loc_4BC83B: calll *_import_5C60D0;");
    asm("loc_4BC841: test %al,%al;");
    asm("loc_4BC843: je loc_4BC917;");
    asm("loc_4BC849: push %esi;");
    asm("loc_4BC84A: push %edi;");
    asm("loc_4BC84B: mov $_data_67E7B8,%ecx;");
    asm("loc_4BC850: call _sub_5AA680;");
    asm("loc_4BC855: cmp $1,%eax;");
    asm("loc_4BC858: jne loc_4BC8A0;");
    asm("loc_4BC85A: mov _data_67E970,%eax;");
    asm("loc_4BC85F: xor %edi,%edi;");
    asm("loc_4BC861: test %eax,%eax;");
    asm("loc_4BC863: je loc_4BC86C;");
    asm("loc_4BC865: mov (%eax),%eax;");
    asm("loc_4BC867: inc %edi;");
    asm("loc_4BC868: test %eax,%eax;");
    asm("loc_4BC86A: jne loc_4BC865;");
    asm("loc_4BC86C: xor %esi,%esi;");
    asm("loc_4BC86E: test %edi,%edi;");
    asm("loc_4BC870: jle loc_4BC8C4;");
    asm("loc_4BC872: push %esi;");
    asm("loc_4BC873: mov $_data_67E7B8,%ecx;");
    asm("loc_4BC878: call _sub_5AACA0;");
    asm("loc_4BC87D: mov 0x201(%eax),%cl;");
    asm("loc_4BC883: test %cl,%cl;");
    asm("loc_4BC885: jne loc_4BC88E;");
    asm("loc_4BC887: inc %esi;");
    asm("loc_4BC888: cmp %edi,%esi;");
    asm("loc_4BC88A: jl loc_4BC872;");
    asm("loc_4BC88C: jmp loc_4BC8C4;");
    asm("loc_4BC88E: push %eax;");
    asm("loc_4BC88F: lea 0xC(%esp),%ecx;");
    asm("loc_4BC893: calll *_import_5C63CC;");
    asm("loc_4BC899: jmp loc_4BC8C4;");
    asm("loc_4BC89B: nop;");
    asm("loc_4BC89C: lea (%esp),%esp;");
    asm("loc_4BC8A0: push $_data_5D22A0;");
    asm("loc_4BC8A5: push $0x6D1;");
    asm("loc_4BC8AA: push $_data_5D5A4C;");
    asm("loc_4BC8AF: mov $0x100001,%eax;");
    asm("loc_4BC8B4: push $_data_5C747C;");
    asm("loc_4BC8B9: push %eax;");
    asm("loc_4BC8BA: mov _import_5C6D18,%eax;");
    asm("loc_4BC8BF: calll *(%eax);");
    asm("loc_4BC8C1: add $0x14,%esp;");
    asm("loc_4BC8C4: mov 8(%esp),%al;");
    asm("loc_4BC8C8: test %al,%al;");
    asm("loc_4BC8CA: pop %edi;");
    asm("loc_4BC8CB: pop %esi;");
    asm("loc_4BC8CC: je loc_4BC8E4;");
    asm("loc_4BC8CE: lea (%esp),%ecx;");
    asm("loc_4BC8D2: push $1;");
    asm("loc_4BC8D4: push %ecx;");
    asm("loc_4BC8D5: call _sub_5B2C70;");
    asm("loc_4BC8DA: add $8,%esp;");
    asm("loc_4BC8DD: add $0x200,%esp;");
    asm("loc_4BC8E3: ret;");
    asm("loc_4BC8E4: mov _import_5C6D18,%edx;");
    asm("loc_4BC8EA: push $_data_5D5D74;");
    asm("loc_4BC8EF: push $0x6DB;");
    asm("loc_4BC8F4: push $_data_5D5A4C;");
    asm("loc_4BC8F9: mov $0x100001,%eax;");
    asm("loc_4BC8FE: push $_data_5C747C;");
    asm("loc_4BC903: push %eax;");
    asm("loc_4BC904: calll *(%edx);");
    asm("loc_4BC906: push $3;");
    asm("loc_4BC908: call _sub_488970;");
    asm("loc_4BC90D: add $0x18,%esp;");
    asm("loc_4BC910: add $0x200,%esp;");
    asm("loc_4BC916: ret;");
    asm("loc_4BC917: push $4;");
    asm("loc_4BC919: call _sub_564B10;");
    asm("loc_4BC91E: push $0;");
    asm("loc_4BC920: push $0xC5;");
    asm("loc_4BC925: call _sub_5763B0;");
    asm("loc_4BC92A: add $0xC,%esp;");
    asm("loc_4BC92D: add $0x200,%esp;");
    asm("loc_4BC933: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BC940() // _sub_4BC940
{
    __DEBUG_ASM(4BC940);
    // chunk 0x4BC940 _sub_4BC940
    asm("loc_4BC940: push %esi;");
    asm("loc_4BC941: mov %ecx,%esi;");
    asm("loc_4BC943: call _sub_5A0760;");
    asm("loc_4BC948: mov 0x388(%esi),%eax;");
    asm("loc_4BC94E: test %eax,%eax;");
    asm("loc_4BC950: jl loc_4BC96A;");
    asm("loc_4BC952: mov 0x334(%esi),%ecx;");
    asm("loc_4BC958: push %eax;");
    asm("loc_4BC959: push $0;");
    asm("loc_4BC95B: call _sub_5798B0;");
    asm("loc_4BC960: movl $0xFFFFFFFF,0x388(%esi);");
    asm("loc_4BC96A: pop %esi;");
    asm("loc_4BC96B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BC970() // _sub_4BC970
{
    __DEBUG_ASM(4BC970);
    // chunk 0x4BC970 _sub_4BC970
    asm("loc_4BC970: push %esi;");
    asm("loc_4BC971: mov %ecx,%esi;");
    asm("loc_4BC973: call _sub_5A17B0;");
    asm("loc_4BC978: mov 0x338(%esi),%eax;");
    asm("loc_4BC97E: cmp _data_672338,%eax;");
    asm("loc_4BC984: je loc_4BC98E;");
    asm("loc_4BC986: mov %esi,%ecx;");
    asm("loc_4BC988: pop %esi;");
    asm("loc_4BC989: jmp _sub_4BC2A0;");
    asm("loc_4BC98E: pop %esi;");
    asm("loc_4BC98F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BC990() // _sub_4BC990
{
    __DEBUG_ASM(4BC990);
    // chunk 0x4BC990 _sub_4BC990
    asm("loc_4BC990: mov %fs:0,%eax;");
    asm("loc_4BC996: mov _data_66D398,%ecx;");
    asm("loc_4BC99C: push $0xFFFFFFFF;");
    asm("loc_4BC99E: push $_sub_5BD459;");
    asm("loc_4BC9A3: push %eax;");
    asm("loc_4BC9A4: mov %esp,%fs:0;");
    asm("loc_4BC9AB: sub $0x1C,%esp;");
    asm("loc_4BC9AE: push %ebx;");
    asm("loc_4BC9AF: xor %ebx,%ebx;");
    asm("loc_4BC9B1: cmp %ebx,%ecx;");
    asm("loc_4BC9B3: je loc_4BC9C2;");
    asm("loc_4BC9B5: call _sub_45B2C0;");
    asm("loc_4BC9BA: test %al,%al;");
    asm("loc_4BC9BC: jne loc_4BCBCA;");
    asm("loc_4BC9C2: cmp %ebx,_data_672400;");
    asm("loc_4BC9C8: jne loc_4BCBCA;");
    asm("loc_4BC9CE: cmp %ebx,_data_67232C;");
    asm("loc_4BC9D4: jne loc_4BC9FF;");
    asm("loc_4BC9D6: cmp %ebx,_data_67240C;");
    asm("loc_4BC9DC: jne loc_4BC9FF;");
    asm("loc_4BC9DE: call _sub_42D680;");
    asm("loc_4BC9E3: fadds _data_672408;");
    asm("loc_4BC9E9: pop %ebx;");
    asm("loc_4BC9EA: fstps _data_672408;");
    asm("loc_4BC9F0: mov 0x1C(%esp),%ecx;");
    asm("loc_4BC9F4: mov %ecx,%fs:0;");
    asm("loc_4BC9FB: add $0x28,%esp;");
    asm("loc_4BC9FE: ret;");
    asm("loc_4BC9FF: cmp %bl,_data_67DCC8;");
    asm("loc_4BCA05: movb $1,7(%esp);");
    asm("loc_4BCA0A: jne loc_4BCA15;");
    asm("loc_4BCA0C: call _sub_42D740;");
    asm("loc_4BCA11: test %al,%al;");
    asm("loc_4BCA13: je loc_4BCA19;");
    asm("loc_4BCA15: mov %bl,7(%esp);");
    asm("loc_4BCA19: call _sub_45A470;");
    asm("loc_4BCA1E: test %al,%al;");
    asm("loc_4BCA20: jne loc_4BCBD4;");
    asm("loc_4BCA26: call _sub_442720;");
    asm("loc_4BCA2B: test %al,%al;");
    asm("loc_4BCA2D: jne loc_4BCBD4;");
    asm("loc_4BCA33: call _sub_41DD90;");
    asm("loc_4BCA38: test %al,%al;");
    asm("loc_4BCA3A: je loc_4BCBD4;");
    asm("loc_4BCA40: cmp %bl,7(%esp);");
    asm("loc_4BCA44: je loc_4BCBD4;");
    asm("loc_4BCA4A: push $_data_5D0234;");
    asm("loc_4BCA4F: call _sub_59DA10;");
    asm("loc_4BCA54: add $4,%esp;");
    asm("loc_4BCA57: cmp %ebx,%eax;");
    asm("loc_4BCA59: jne loc_4BCBD4;");
    asm("loc_4BCA5F: push $_data_5D0228;");
    asm("loc_4BCA64: call _sub_59DA10;");
    asm("loc_4BCA69: add $4,%esp;");
    asm("loc_4BCA6C: cmp %ebx,%eax;");
    asm("loc_4BCA6E: jne loc_4BCBD4;");
    asm("loc_4BCA74: push $_data_5D021C;");
    asm("loc_4BCA79: call _sub_59DA10;");
    asm("loc_4BCA7E: add $4,%esp;");
    asm("loc_4BCA81: cmp %ebx,%eax;");
    asm("loc_4BCA83: jne loc_4BCBD4;");
    asm("loc_4BCA89: push $_data_5D0094;");
    asm("loc_4BCA8E: call _sub_59DA10;");
    asm("loc_4BCA93: add $4,%esp;");
    asm("loc_4BCA96: cmp %ebx,%eax;");
    asm("loc_4BCA98: jne loc_4BCBD4;");
    asm("loc_4BCA9E: cmp %ebx,_data_67240C;");
    asm("loc_4BCAA4: je loc_4BCB91;");
    asm("loc_4BCAAA: push %esi;");
    asm("loc_4BCAAB: push %edi;");
    asm("loc_4BCAAC: mov %ebx,0x10(%esp);");
    asm("loc_4BCAB0: mov %ebx,0x14(%esp);");
    asm("loc_4BCAB4: mov %bl,0x18(%esp);");
    asm("loc_4BCAB8: mov %bl,0x19(%esp);");
    asm("loc_4BCABC: mov %bl,0x1A(%esp);");
    asm("loc_4BCAC0: mov %bl,0x1B(%esp);");
    asm("loc_4BCAC4: mov %bl,0x1C(%esp);");
    asm("loc_4BCAC8: mov %bl,0x1D(%esp);");
    asm("loc_4BCACC: mov %bl,0x1E(%esp);");
    asm("loc_4BCAD0: mov %bl,0x1F(%esp);");
    asm("loc_4BCAD4: mov %bl,0x20(%esp);");
    asm("loc_4BCAD8: mov %bl,0x21(%esp);");
    asm("loc_4BCADC: mov %bl,0x22(%esp);");
    asm("loc_4BCAE0: mov %bl,0x23(%esp);");
    asm("loc_4BCAE4: mov %bl,0x24(%esp);");
    asm("loc_4BCAE8: mov %bl,0x25(%esp);");
    asm("loc_4BCAEC: push $0x3D3;");
    asm("loc_4BCAF1: lea 0x14(%esp),%ecx;");
    asm("loc_4BCAF5: mov %ebx,0x34(%esp);");
    asm("loc_4BCAF9: calll *_import_5C633C;");
    asm("loc_4BCAFF: mov _data_67240C,%eax;");
    asm("loc_4BCB04: push %eax;");
    asm("loc_4BCB05: lea 0x14(%esp),%ecx;");
    asm("loc_4BCB09: calll *_import_5C63D4;");
    asm("loc_4BCB0F: lea 0x10(%esp),%ecx;");
    asm("loc_4BCB13: calll *_import_5C6338;");
    asm("loc_4BCB19: mov _data_672328,%eax;");
    asm("loc_4BCB1E: mov %ebx,_data_67240C;");
    asm("loc_4BCB24: mov (%eax),%esi;");
    asm("loc_4BCB26: mov 4(%esi),%edi;");
    asm("loc_4BCB29: push $0x20;");
    asm("loc_4BCB2B: call _sub_5B7E84;");
    asm("loc_4BCB30: add $4,%esp;");
    asm("loc_4BCB33: cmp %ebx,%edi;");
    asm("loc_4BCB35: mov %esi,(%eax);");
    asm("loc_4BCB37: mov %edi,%ecx;");
    asm("loc_4BCB39: jne loc_4BCB3D;");
    asm("loc_4BCB3B: mov %eax,%ecx;");
    asm("loc_4BCB3D: mov %ecx,4(%eax);");
    asm("loc_4BCB40: mov %eax,4(%esi);");
    asm("loc_4BCB43: mov 4(%eax),%ecx;");
    asm("loc_4BCB46: mov %eax,(%ecx);");
    asm("loc_4BCB48: lea 0x10(%esp),%ecx;");
    asm("loc_4BCB4C: push %ecx;");
    asm("loc_4BCB4D: add $8,%eax;");
    asm("loc_4BCB50: push %eax;");
    asm("loc_4BCB51: call _sub_4BD5D0;");
    asm("loc_4BCB56: mov _data_67232C,%edi;");
    asm("loc_4BCB5C: mov _data_672328,%eax;");
    asm("loc_4BCB61: inc %edi;");
    asm("loc_4BCB62: mov %edi,_data_67232C;");
    asm("loc_4BCB68: mov (%eax),%eax;");
    asm("loc_4BCB6A: add $8,%eax;");
    asm("loc_4BCB6D: push %eax;");
    asm("loc_4BCB6E: call _sub_4BA5A0;");
    asm("loc_4BCB73: push $0x27;");
    asm("loc_4BCB75: call _sub_5645C0;");
    asm("loc_4BCB7A: add $0x10,%esp;");
    asm("loc_4BCB7D: lea 0x10(%esp),%ecx;");
    asm("loc_4BCB81: movl $0xFFFFFFFF,0x30(%esp);");
    asm("loc_4BCB89: calll *_import_5C6098;");
    asm("loc_4BCB8F: pop %edi;");
    asm("loc_4BCB90: pop %esi;");
    asm("loc_4BCB91: push %ebx;");
    asm("loc_4BCB92: push %ebx;");
    asm("loc_4BCB93: push $_data_5D59FC;");
    asm("loc_4BCB98: push $_data_5D59FC;");
    asm("loc_4BCB9D: call _sub_59DB20;");
    asm("loc_4BCBA2: add $0x10,%esp;");
    asm("loc_4BCBA5: cmp %ebx,%eax;");
    asm("loc_4BCBA7: movl $0,_data_672408;");
    asm("loc_4BCBB1: je loc_4BCBD4;");
    asm("loc_4BCBB3: mov %eax,%ecx;");
    asm("loc_4BCBB5: call _sub_4BB6B0;");
    asm("loc_4BCBBA: pop %ebx;");
    asm("loc_4BCBBB: mov 0x1C(%esp),%ecx;");
    asm("loc_4BCBBF: mov %ecx,%fs:0;");
    asm("loc_4BCBC6: add $0x28,%esp;");
    asm("loc_4BCBC9: ret;");
    asm("loc_4BCBCA: movl $0,_data_672408;");
    asm("loc_4BCBD4: mov 0x20(%esp),%ecx;");
    asm("loc_4BCBD8: pop %ebx;");
    asm("loc_4BCBD9: mov %ecx,%fs:0;");
    asm("loc_4BCBE0: add $0x28,%esp;");
    asm("loc_4BCBE3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BCBF0() // _sub_4BCBF0
{
    __DEBUG_ASM(4BCBF0);
    // chunk 0x4BCBF0 _sub_4BCBF0
    asm("loc_4BCBF0: mov _data_672950,%eax;");
    asm("loc_4BCBF5: movb $1,_data_6720C9;");
    asm("loc_4BCBFC: movb $1,_data_67494C;");
    asm("loc_4BCC03: mov (%eax),%ecx;");
    asm("loc_4BCC05: sub $8,%esp;");
    asm("loc_4BCC08: cmp %eax,%ecx;");
    asm("loc_4BCC0A: je loc_4BCD28;");
    asm("loc_4BCC10: call _sub_4C46C0;");
    asm("loc_4BCC15: call _sub_4C4FB0;");
    asm("loc_4BCC1A: xor %ecx,%ecx;");
    asm("loc_4BCC1C: test %eax,%eax;");
    asm("loc_4BCC1E: mov %eax,4(%esp);");
    asm("loc_4BCC22: mov %ecx,(%esp);");
    asm("loc_4BCC26: jle loc_4BCD28;");
    asm("loc_4BCC2C: push %ebx;");
    asm("loc_4BCC2D: push %ebp;");
    asm("loc_4BCC2E: push %esi;");
    asm("loc_4BCC2F: push %edi;");
    asm("loc_4BCC30: push %ecx;");
    asm("loc_4BCC31: call _sub_4C4FF0;");
    asm("loc_4BCC36: mov %eax,%ebx;");
    asm("loc_4BCC38: add $4,%esp;");
    asm("loc_4BCC3B: test %ebx,%ebx;");
    asm("loc_4BCC3D: je loc_4BCD06;");
    asm("loc_4BCC43: mov 0x18(%ebx),%al;");
    asm("loc_4BCC46: test %al,%al;");
    asm("loc_4BCC48: jns loc_4BCCE8;");
    asm("loc_4BCC4E: mov _data_66D35A,%al;");
    asm("loc_4BCC53: test %al,%al;");
    asm("loc_4BCC55: jne loc_4BCCA2;");
    asm("loc_4BCC57: mov _data_672328,%ebp;");
    asm("loc_4BCC5D: mov (%ebp),%edi;");
    asm("loc_4BCC60: cmp %ebp,%edi;");
    asm("loc_4BCC62: je loc_4BCC9B;");
    asm("loc_4BCC64: mov %edi,%esi;");
    asm("loc_4BCC66: mov 4(%esi),%eax;");
    asm("loc_4BCC69: mov (%esi),%ecx;");
    asm("loc_4BCC6B: mov (%edi),%edi;");
    asm("loc_4BCC6D: mov %ecx,(%eax);");
    asm("loc_4BCC6F: mov (%esi),%edx;");
    asm("loc_4BCC71: mov 4(%esi),%eax;");
    asm("loc_4BCC74: push $0;");
    asm("loc_4BCC76: lea 8(%esi),%ecx;");
    asm("loc_4BCC79: mov %eax,4(%edx);");
    asm("loc_4BCC7C: call _sub_4BD620;");
    asm("loc_4BCC81: push %esi;");
    asm("loc_4BCC82: call _sub_5B7E1D;");
    asm("loc_4BCC87: mov _data_67232C,%ecx;");
    asm("loc_4BCC8D: add $4,%esp;");
    asm("loc_4BCC90: dec %ecx;");
    asm("loc_4BCC91: cmp %ebp,%edi;");
    asm("loc_4BCC93: mov %ecx,_data_67232C;");
    asm("loc_4BCC99: jne loc_4BCC64;");
    asm("loc_4BCC9B: movb $0,_data_672404;");
    asm("loc_4BCCA2: mov _data_672400,%eax;");
    asm("loc_4BCCA7: test %eax,%eax;");
    asm("loc_4BCCA9: je loc_4BCCE8;");
    asm("loc_4BCCAB: push $0;");
    asm("loc_4BCCAD: push %eax;");
    asm("loc_4BCCAE: call _sub_59DD00;");
    asm("loc_4BCCB3: mov _data_672400,%edi;");
    asm("loc_4BCCB9: add $8,%esp;");
    asm("loc_4BCCBC: test %edi,%edi;");
    asm("loc_4BCCBE: je loc_4BCCE8;");
    asm("loc_4BCCC0: mov 0xC(%edi),%eax;");
    asm("loc_4BCCC3: test %eax,%eax;");
    asm("loc_4BCCC5: je loc_4BCCD9;");
    asm("loc_4BCCC7: mov 8(%eax),%esi;");
    asm("loc_4BCCCA: push %eax;");
    asm("loc_4BCCCB: call _sub_43D2A0;");
    asm("loc_4BCCD0: add $4,%esp;");
    asm("loc_4BCCD3: test %esi,%esi;");
    asm("loc_4BCCD5: mov %esi,%eax;");
    asm("loc_4BCCD7: jne loc_4BCCC7;");
    asm("loc_4BCCD9: mov (%edi),%edx;");
    asm("loc_4BCCDB: mov %edi,%ecx;");
    asm("loc_4BCCDD: calll *0x28(%edx);");
    asm("loc_4BCCE0: mov (%edi),%eax;");
    asm("loc_4BCCE2: push $1;");
    asm("loc_4BCCE4: mov %edi,%ecx;");
    asm("loc_4BCCE6: calll *(%eax);");
    asm("loc_4BCCE8: testb $0x20,0x18(%ebx);");
    asm("loc_4BCCEC: je loc_4BCCF7;");
    asm("loc_4BCCEE: push %ebx;");
    asm("loc_4BCCEF: call _sub_4BA2A0;");
    asm("loc_4BCCF4: add $4,%esp;");
    asm("loc_4BCCF7: testb $0x10,0x18(%ebx);");
    asm("loc_4BCCFB: je loc_4BCD06;");
    asm("loc_4BCCFD: push %ebx;");
    asm("loc_4BCCFE: call _sub_4B9F90;");
    asm("loc_4BCD03: add $4,%esp;");
    asm("loc_4BCD06: mov 0x18(%ebx),%esi;");
    asm("loc_4BCD09: mov 0x10(%esp),%ecx;");
    asm("loc_4BCD0D: mov 0x14(%esp),%eax;");
    asm("loc_4BCD11: and $0xF,%esi;");
    asm("loc_4BCD14: inc %ecx;");
    asm("loc_4BCD15: cmp %eax,%ecx;");
    asm("loc_4BCD17: mov %esi,0x18(%ebx);");
    asm("loc_4BCD1A: mov %ecx,0x10(%esp);");
    asm("loc_4BCD1E: jl loc_4BCC30;");
    asm("loc_4BCD24: pop %edi;");
    asm("loc_4BCD25: pop %esi;");
    asm("loc_4BCD26: pop %ebp;");
    asm("loc_4BCD27: pop %ebx;");
    asm("loc_4BCD28: add $8,%esp;");
    asm("loc_4BCD2B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BCD30() // _sub_4BCD30
{
    __DEBUG_ASM(4BCD30);
    // chunk 0x4BCD30 _sub_4BCD30
    asm("loc_4BCD30: sub $0x24,%esp;");
    asm("loc_4BCD33: push %esi;");
    asm("loc_4BCD34: push %edi;");
    asm("loc_4BCD35: push $0;");
    asm("loc_4BCD37: push $0;");
    asm("loc_4BCD39: push $0;");
    asm("loc_4BCD3B: push $0;");
    asm("loc_4BCD3D: push $0;");
    asm("loc_4BCD3F: push $0;");
    asm("loc_4BCD41: push $0;");
    asm("loc_4BCD43: lea 0x24(%esp),%eax;");
    asm("loc_4BCD47: push %eax;");
    asm("loc_4BCD48: push $0;");
    asm("loc_4BCD4A: mov %ecx,%esi;");
    asm("loc_4BCD4C: lea 0x38(%esp),%ecx;");
    asm("loc_4BCD50: push %ecx;");
    asm("loc_4BCD51: push $0;");
    asm("loc_4BCD53: push $0;");
    asm("loc_4BCD55: push $0;");
    asm("loc_4BCD57: push $_data_5CEC64;");
    asm("loc_4BCD5C: push $_data_5D5D98;");
    asm("loc_4BCD61: mov %esi,%ecx;");
    asm("loc_4BCD63: movl $0,0x44(%esp);");
    asm("loc_4BCD6B: movl $0,0x48(%esp);");
    asm("loc_4BCD73: movl $0,0x4C(%esp);");
    asm("loc_4BCD7B: movl $0,0x50(%esp);");
    asm("loc_4BCD83: movl $0x3E947AE1,0x54(%esp);");
    asm("loc_4BCD8B: movl $0xBFA00000,0x58(%esp);");
    asm("loc_4BCD93: call _sub_5A0C90;");
    asm("loc_4BCD98: lea 0x32C(%esi),%edi;");
    asm("loc_4BCD9E: push $0x3E99999A;");
    asm("loc_4BCDA3: mov %edi,%ecx;");
    asm("loc_4BCDA5: mov %eax,0x34C(%esi);");
    asm("loc_4BCDAB: call _sub_55E120;");
    asm("loc_4BCDB0: mov 0x34C(%esi),%ecx;");
    asm("loc_4BCDB6: lea 0x20(%esp),%edx;");
    asm("loc_4BCDBA: push %edx;");
    asm("loc_4BCDBB: lea 0x18(%esp),%eax;");
    asm("loc_4BCDBF: push %eax;");
    asm("loc_4BCDC0: push %ecx;");
    asm("loc_4BCDC1: mov %edi,%ecx;");
    asm("loc_4BCDC3: movl $0x3ED0E561,0x2C(%esp);");
    asm("loc_4BCDCB: movl $0x3EEB020C,0x30(%esp);");
    asm("loc_4BCDD3: movl $0xBFA00000,0x34(%esp);");
    asm("loc_4BCDDB: movl $0,0x20(%esp);");
    asm("loc_4BCDE3: movl $0x3E947AE1,0x24(%esp);");
    asm("loc_4BCDEB: movl $0xBFA00000,0x28(%esp);");
    asm("loc_4BCDF3: call _sub_55DEE0;");
    asm("loc_4BCDF8: mov (%esi),%edx;");
    asm("loc_4BCDFA: sub $0xC,%esp;");
    asm("loc_4BCDFD: movl $0,0x14(%esp);");
    asm("loc_4BCE05: mov 0x14(%esp),%ecx;");
    asm("loc_4BCE09: mov %esp,%eax;");
    asm("loc_4BCE0B: mov %ecx,(%eax);");
    asm("loc_4BCE0D: movl $0,0x18(%esp);");
    asm("loc_4BCE15: mov 0x18(%esp),%ecx;");
    asm("loc_4BCE19: mov %ecx,4(%eax);");
    asm("loc_4BCE1C: movl $0,0x1C(%esp);");
    asm("loc_4BCE24: mov 0x1C(%esp),%ecx;");
    asm("loc_4BCE28: mov %ecx,8(%eax);");
    asm("loc_4BCE2B: mov %esi,%ecx;");
    asm("loc_4BCE2D: calll *0x7C(%edx);");
    asm("loc_4BCE30: mov 0x34(%esp),%edx;");
    asm("loc_4BCE34: mov 0x30(%esp),%eax;");
    asm("loc_4BCE38: push %edx;");
    asm("loc_4BCE39: push %eax;");
    asm("loc_4BCE3A: mov %esi,%ecx;");
    asm("loc_4BCE3C: call _sub_4B5060;");
    asm("loc_4BCE41: test %al,%al;");
    asm("loc_4BCE43: pop %edi;");
    asm("loc_4BCE44: setne %al;");
    asm("loc_4BCE47: pop %esi;");
    asm("loc_4BCE48: add $0x24,%esp;");
    asm("loc_4BCE4B: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BCE50() // _sub_4BCE50
{
    __DEBUG_ASM(4BCE50);
    // chunk 0x4BCE50 _sub_4BCE50
    asm("loc_4BCE50: push %esi;");
    asm("loc_4BCE51: push %edi;");
    asm("loc_4BCE52: mov %ecx,%edi;");
    asm("loc_4BCE54: lea 0x32C(%edi),%esi;");
    asm("loc_4BCE5A: mov %esi,%ecx;");
    asm("loc_4BCE5C: call _sub_55E280;");
    asm("loc_4BCE61: test %al,%al;");
    asm("loc_4BCE63: jne loc_4BCE94;");
    asm("loc_4BCE65: test %edi,%edi;");
    asm("loc_4BCE67: je loc_4BCE91;");
    asm("loc_4BCE69: mov 0xC(%edi),%eax;");
    asm("loc_4BCE6C: test %eax,%eax;");
    asm("loc_4BCE6E: je loc_4BCE82;");
    asm("loc_4BCE70: mov 8(%eax),%esi;");
    asm("loc_4BCE73: push %eax;");
    asm("loc_4BCE74: call _sub_43D2A0;");
    asm("loc_4BCE79: add $4,%esp;");
    asm("loc_4BCE7C: test %esi,%esi;");
    asm("loc_4BCE7E: mov %esi,%eax;");
    asm("loc_4BCE80: jne loc_4BCE70;");
    asm("loc_4BCE82: mov (%edi),%eax;");
    asm("loc_4BCE84: mov %edi,%ecx;");
    asm("loc_4BCE86: calll *0x28(%eax);");
    asm("loc_4BCE89: mov (%edi),%edx;");
    asm("loc_4BCE8B: push $1;");
    asm("loc_4BCE8D: mov %edi,%ecx;");
    asm("loc_4BCE8F: calll *(%edx);");
    asm("loc_4BCE91: pop %edi;");
    asm("loc_4BCE92: pop %esi;");
    asm("loc_4BCE93: ret;");
    asm("loc_4BCE94: mov %edi,%ecx;");
    asm("loc_4BCE96: call _sub_5A17B0;");
    asm("loc_4BCE9B: pop %edi;");
    asm("loc_4BCE9C: mov %esi,%ecx;");
    asm("loc_4BCE9E: pop %esi;");
    asm("loc_4BCE9F: jmp _sub_55E170;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BCEB0() // _sub_4BCEB0
{
    __DEBUG_ASM(4BCEB0);
    // chunk 0x4BCEB0 _sub_4BCEB0
    asm("loc_4BCEB0: sub $0x18,%esp;");
    asm("loc_4BCEB3: push %esi;");
    asm("loc_4BCEB4: push %edi;");
    asm("loc_4BCEB5: push $0;");
    asm("loc_4BCEB7: push $0;");
    asm("loc_4BCEB9: push $0;");
    asm("loc_4BCEBB: push $0;");
    asm("loc_4BCEBD: push $0;");
    asm("loc_4BCEBF: push $0;");
    asm("loc_4BCEC1: push $0;");
    asm("loc_4BCEC3: lea 0x24(%esp),%eax;");
    asm("loc_4BCEC7: push %eax;");
    asm("loc_4BCEC8: push $0;");
    asm("loc_4BCECA: mov %ecx,%esi;");
    asm("loc_4BCECC: lea 0x38(%esp),%ecx;");
    asm("loc_4BCED0: push %ecx;");
    asm("loc_4BCED1: push $0;");
    asm("loc_4BCED3: push $0;");
    asm("loc_4BCED5: push $0;");
    asm("loc_4BCED7: push $_data_5CEC64;");
    asm("loc_4BCEDC: push $_data_5D5D98;");
    asm("loc_4BCEE1: mov %esi,%ecx;");
    asm("loc_4BCEE3: movl $0x3ED0E561,0x50(%esp);");
    asm("loc_4BCEEB: movl $0x3EEB020C,0x54(%esp);");
    asm("loc_4BCEF3: movl $0xBFA00000,0x58(%esp);");
    asm("loc_4BCEFB: movl $0,0x44(%esp);");
    asm("loc_4BCF03: movl $0,0x48(%esp);");
    asm("loc_4BCF0B: movl $0,0x4C(%esp);");
    asm("loc_4BCF13: call _sub_5A0C90;");
    asm("loc_4BCF18: lea 0x32C(%esi),%edi;");
    asm("loc_4BCF1E: push $0x3E4CCCCD;");
    asm("loc_4BCF23: mov %edi,%ecx;");
    asm("loc_4BCF25: mov %eax,0x34C(%esi);");
    asm("loc_4BCF2B: call _sub_55E120;");
    asm("loc_4BCF30: mov 0x34C(%esi),%ecx;");
    asm("loc_4BCF36: lea 8(%esp),%edx;");
    asm("loc_4BCF3A: push %edx;");
    asm("loc_4BCF3B: lea 0x18(%esp),%eax;");
    asm("loc_4BCF3F: push %eax;");
    asm("loc_4BCF40: push %ecx;");
    asm("loc_4BCF41: mov %edi,%ecx;");
    asm("loc_4BCF43: movl $0,0x14(%esp);");
    asm("loc_4BCF4B: movl $0x3E947AE1,0x18(%esp);");
    asm("loc_4BCF53: movl $0xBFA00000,0x1C(%esp);");
    asm("loc_4BCF5B: call _sub_55DEE0;");
    asm("loc_4BCF60: mov (%esi),%edx;");
    asm("loc_4BCF62: sub $0xC,%esp;");
    asm("loc_4BCF65: movl $0,0x14(%esp);");
    asm("loc_4BCF6D: mov 0x14(%esp),%ecx;");
    asm("loc_4BCF71: mov %esp,%eax;");
    asm("loc_4BCF73: mov %ecx,(%eax);");
    asm("loc_4BCF75: movl $0,0x18(%esp);");
    asm("loc_4BCF7D: mov 0x18(%esp),%ecx;");
    asm("loc_4BCF81: mov %ecx,4(%eax);");
    asm("loc_4BCF84: movl $0,0x1C(%esp);");
    asm("loc_4BCF8C: mov 0x1C(%esp),%ecx;");
    asm("loc_4BCF90: mov %ecx,8(%eax);");
    asm("loc_4BCF93: mov %esi,%ecx;");
    asm("loc_4BCF95: calll *0x7C(%edx);");
    asm("loc_4BCF98: mov 0x28(%esp),%edx;");
    asm("loc_4BCF9C: mov 0x24(%esp),%eax;");
    asm("loc_4BCFA0: push %edx;");
    asm("loc_4BCFA1: push %eax;");
    asm("loc_4BCFA2: mov %esi,%ecx;");
    asm("loc_4BCFA4: call _sub_4B5060;");
    asm("loc_4BCFA9: test %al,%al;");
    asm("loc_4BCFAB: pop %edi;");
    asm("loc_4BCFAC: setne %al;");
    asm("loc_4BCFAF: pop %esi;");
    asm("loc_4BCFB0: add $0x18,%esp;");
    asm("loc_4BCFB3: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BCFC0() // _sub_4BCFC0
{
    __DEBUG_ASM(4BCFC0);
    // chunk 0x4BCFC0 _sub_4BCFC0
    asm("loc_4BCFC0: push %ebx;");
    asm("loc_4BCFC1: mov %ecx,%ebx;");
    asm("loc_4BCFC3: xor %eax,%eax;");
    asm("loc_4BCFC5: push %esi;");
    asm("loc_4BCFC6: mov 0xC(%esp),%esi;");
    asm("loc_4BCFCA: cmp %eax,%esi;");
    asm("loc_4BCFCC: mov %eax,8(%ebx);");
    asm("loc_4BCFCF: mov %al,0xC(%ebx);");
    asm("loc_4BCFD2: movl $_off_5CB554,(%ebx);");
    asm("loc_4BCFD8: mov %eax,4(%ebx);");
    asm("loc_4BCFDB: jne loc_4BCFE2;");
    asm("loc_4BCFDD: mov %al,0xC(%ebx);");
    asm("loc_4BCFE0: jmp loc_4BD017;");
    asm("loc_4BCFE2: push %ebp;");
    asm("loc_4BCFE3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4BCFE6: xor %eax,%eax;");
    asm("loc_4BCFE8: push %edi;");
    asm("loc_4BCFE9: mov %esi,%edi;");
    asm("loc_4BCFEB: repne scas (%edi),%al;");
    asm("loc_4BCFED: not %ecx;");
    asm("loc_4BCFEF: dec %ecx;");
    asm("loc_4BCFF0: mov %ecx,%eax;");
    asm("loc_4BCFF2: cmp $0x20,%eax;");
    asm("loc_4BCFF5: lea 0xC(%ebx),%ebp;");
    asm("loc_4BCFF8: jb loc_4BCFFF;");
    asm("loc_4BCFFA: mov $0x1F,%eax;");
    asm("loc_4BCFFF: mov %eax,%ecx;");
    asm("loc_4BD001: mov %ecx,%edx;");
    asm("loc_4BD003: shr $2,%ecx;");
    asm("loc_4BD006: mov %ebp,%edi;");
    asm("loc_4BD008: rep movsl (%esi),(%edi);");
    asm("loc_4BD00A: mov %edx,%ecx;");
    asm("loc_4BD00C: and $3,%ecx;");
    asm("loc_4BD00F: rep movsb (%esi),(%edi);");
    asm("loc_4BD011: pop %edi;");
    asm("loc_4BD012: movb $0,(%eax,%ebp);");
    asm("loc_4BD016: pop %ebp;");
    asm("loc_4BD017: push %ebx;");
    asm("loc_4BD018: mov %eax,8(%ebx);");
    asm("loc_4BD01B: call _sub_59DAB0;");
    asm("loc_4BD020: add $4,%esp;");
    asm("loc_4BD023: pop %esi;");
    asm("loc_4BD024: movl $_off_5D5DAC,(%ebx);");
    asm("loc_4BD02A: mov %ebx,%eax;");
    asm("loc_4BD02C: pop %ebx;");
    asm("loc_4BD02D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD030() // _sub_4BD030
{
    __DEBUG_ASM(4BD030);
    // chunk 0x4BD030 _sub_4BD030
    asm("loc_4BD030: push $0xFFFFFFFF;");
    asm("loc_4BD032: push $_sub_5BD47B;");
    asm("loc_4BD037: mov %fs:0,%eax;");
    asm("loc_4BD03D: push %eax;");
    asm("loc_4BD03E: mov %esp,%fs:0;");
    asm("loc_4BD045: push %ecx;");
    asm("loc_4BD046: push %ebx;");
    asm("loc_4BD047: push %esi;");
    asm("loc_4BD048: push %edi;");
    asm("loc_4BD049: push $0x390;");
    asm("loc_4BD04E: mov %ecx,%edi;");
    asm("loc_4BD050: call _sub_5B7E84;");
    asm("loc_4BD055: mov %eax,%esi;");
    asm("loc_4BD057: add $4,%esp;");
    asm("loc_4BD05A: mov %esi,0xC(%esp);");
    asm("loc_4BD05E: xor %ebx,%ebx;");
    asm("loc_4BD060: cmp %ebx,%esi;");
    asm("loc_4BD062: mov %ebx,0x18(%esp);");
    asm("loc_4BD066: je loc_4BD0A3;");
    asm("loc_4BD068: mov %esi,%ecx;");
    asm("loc_4BD06A: call _sub_59F860;");
    asm("loc_4BD06F: movl $_off_5D5B74,(%esi);");
    asm("loc_4BD075: movl $_off_5D5B64,0x7C(%esi);");
    asm("loc_4BD07C: mov %esi,_data_6723FC;");
    asm("loc_4BD082: mov %ebx,0x338(%esi);");
    asm("loc_4BD088: movb $1,0x37C(%esi);");
    asm("loc_4BD08F: mov %ebx,0x36C(%esi);");
    asm("loc_4BD095: mov %ebx,0x374(%esi);");
    asm("loc_4BD09B: mov %bl,0x38C(%esi);");
    asm("loc_4BD0A1: jmp loc_4BD0A5;");
    asm("loc_4BD0A3: xor %esi,%esi;");
    asm("loc_4BD0A5: mov 0x24(%esp),%ecx;");
    asm("loc_4BD0A9: mov 0x20(%esp),%edx;");
    asm("loc_4BD0AD: mov (%esi),%eax;");
    asm("loc_4BD0AF: push %ecx;");
    asm("loc_4BD0B0: add $0xC,%edi;");
    asm("loc_4BD0B3: push %edx;");
    asm("loc_4BD0B4: mov %esi,%ecx;");
    asm("loc_4BD0B6: movl $0xFFFFFFFF,0x20(%esp);");
    asm("loc_4BD0BE: mov %edi,0x10(%esi);");
    asm("loc_4BD0C1: calll *0x24(%eax);");
    asm("loc_4BD0C4: test %al,%al;");
    asm("loc_4BD0C6: jne loc_4BD0E6;");
    asm("loc_4BD0C8: mov (%esi),%eax;");
    asm("loc_4BD0CA: push $1;");
    asm("loc_4BD0CC: mov %esi,%ecx;");
    asm("loc_4BD0CE: calll *(%eax);");
    asm("loc_4BD0D0: pop %edi;");
    asm("loc_4BD0D1: pop %esi;");
    asm("loc_4BD0D2: xor %eax,%eax;");
    asm("loc_4BD0D4: pop %ebx;");
    asm("loc_4BD0D5: mov 4(%esp),%ecx;");
    asm("loc_4BD0D9: mov %ecx,%fs:0;");
    asm("loc_4BD0E0: add $0x10,%esp;");
    asm("loc_4BD0E3: ret $8;");
    asm("loc_4BD0E6: mov 0x10(%esp),%ecx;");
    asm("loc_4BD0EA: pop %edi;");
    asm("loc_4BD0EB: mov %esi,%eax;");
    asm("loc_4BD0ED: pop %esi;");
    asm("loc_4BD0EE: pop %ebx;");
    asm("loc_4BD0EF: mov %ecx,%fs:0;");
    asm("loc_4BD0F6: add $0x10,%esp;");
    asm("loc_4BD0F9: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD100() // _sub_4BD100
{
    __DEBUG_ASM(4BD100);
    // chunk 0x4BD100 _sub_4BD100
    asm("loc_4BD100: push %ebx;");
    asm("loc_4BD101: mov %ecx,%ebx;");
    asm("loc_4BD103: xor %eax,%eax;");
    asm("loc_4BD105: push %esi;");
    asm("loc_4BD106: mov 0xC(%esp),%esi;");
    asm("loc_4BD10A: cmp %eax,%esi;");
    asm("loc_4BD10C: mov %eax,8(%ebx);");
    asm("loc_4BD10F: mov %al,0xC(%ebx);");
    asm("loc_4BD112: movl $_off_5CB554,(%ebx);");
    asm("loc_4BD118: mov %eax,4(%ebx);");
    asm("loc_4BD11B: jne loc_4BD122;");
    asm("loc_4BD11D: mov %al,0xC(%ebx);");
    asm("loc_4BD120: jmp loc_4BD157;");
    asm("loc_4BD122: push %ebp;");
    asm("loc_4BD123: or $0xFFFFFFFF,%ecx;");
    asm("loc_4BD126: xor %eax,%eax;");
    asm("loc_4BD128: push %edi;");
    asm("loc_4BD129: mov %esi,%edi;");
    asm("loc_4BD12B: repne scas (%edi),%al;");
    asm("loc_4BD12D: not %ecx;");
    asm("loc_4BD12F: dec %ecx;");
    asm("loc_4BD130: mov %ecx,%eax;");
    asm("loc_4BD132: cmp $0x20,%eax;");
    asm("loc_4BD135: lea 0xC(%ebx),%ebp;");
    asm("loc_4BD138: jb loc_4BD13F;");
    asm("loc_4BD13A: mov $0x1F,%eax;");
    asm("loc_4BD13F: mov %eax,%ecx;");
    asm("loc_4BD141: mov %ecx,%edx;");
    asm("loc_4BD143: shr $2,%ecx;");
    asm("loc_4BD146: mov %ebp,%edi;");
    asm("loc_4BD148: rep movsl (%esi),(%edi);");
    asm("loc_4BD14A: mov %edx,%ecx;");
    asm("loc_4BD14C: and $3,%ecx;");
    asm("loc_4BD14F: rep movsb (%esi),(%edi);");
    asm("loc_4BD151: pop %edi;");
    asm("loc_4BD152: movb $0,(%eax,%ebp);");
    asm("loc_4BD156: pop %ebp;");
    asm("loc_4BD157: push %ebx;");
    asm("loc_4BD158: mov %eax,8(%ebx);");
    asm("loc_4BD15B: call _sub_59DAB0;");
    asm("loc_4BD160: add $4,%esp;");
    asm("loc_4BD163: pop %esi;");
    asm("loc_4BD164: movl $_off_5D5DB4,(%ebx);");
    asm("loc_4BD16A: mov %ebx,%eax;");
    asm("loc_4BD16C: pop %ebx;");
    asm("loc_4BD16D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD170() // _sub_4BD170
{
    __DEBUG_ASM(4BD170);
    // chunk 0x4BD170 _sub_4BD170
    asm("loc_4BD170: push $0xFFFFFFFF;");
    asm("loc_4BD172: push $_sub_5BD47B;");
    asm("loc_4BD177: mov %fs:0,%eax;");
    asm("loc_4BD17D: push %eax;");
    asm("loc_4BD17E: mov %esp,%fs:0;");
    asm("loc_4BD185: push %ecx;");
    asm("loc_4BD186: push %ebx;");
    asm("loc_4BD187: push %esi;");
    asm("loc_4BD188: push %edi;");
    asm("loc_4BD189: push $0x340;");
    asm("loc_4BD18E: mov %ecx,%edi;");
    asm("loc_4BD190: call _sub_5B7E84;");
    asm("loc_4BD195: mov %eax,%esi;");
    asm("loc_4BD197: add $4,%esp;");
    asm("loc_4BD19A: mov %esi,0xC(%esp);");
    asm("loc_4BD19E: xor %ebx,%ebx;");
    asm("loc_4BD1A0: cmp %ebx,%esi;");
    asm("loc_4BD1A2: mov %ebx,0x18(%esp);");
    asm("loc_4BD1A6: je loc_4BD1EE;");
    asm("loc_4BD1A8: mov %esi,%ecx;");
    asm("loc_4BD1AA: call _sub_59F860;");
    asm("loc_4BD1AF: movl $_off_5D5A8C,(%esi);");
    asm("loc_4BD1B5: movl $_off_5D5A80,0x7C(%esi);");
    asm("loc_4BD1BC: mov %esi,_data_672400;");
    asm("loc_4BD1C2: mov %ebx,0x32C(%esi);");
    asm("loc_4BD1C8: movb $1,0x331(%esi);");
    asm("loc_4BD1CF: movb $0xFF,0x332(%esi);");
    asm("loc_4BD1D6: movl $0x40200000,0x334(%esi);");
    asm("loc_4BD1E0: mov %bl,0x330(%esi);");
    asm("loc_4BD1E6: mov %bl,0x338(%esi);");
    asm("loc_4BD1EC: jmp loc_4BD1F0;");
    asm("loc_4BD1EE: xor %esi,%esi;");
    asm("loc_4BD1F0: mov 0x24(%esp),%ecx;");
    asm("loc_4BD1F4: mov 0x20(%esp),%edx;");
    asm("loc_4BD1F8: mov (%esi),%eax;");
    asm("loc_4BD1FA: push %ecx;");
    asm("loc_4BD1FB: add $0xC,%edi;");
    asm("loc_4BD1FE: push %edx;");
    asm("loc_4BD1FF: mov %esi,%ecx;");
    asm("loc_4BD201: movl $0xFFFFFFFF,0x20(%esp);");
    asm("loc_4BD209: mov %edi,0x10(%esi);");
    asm("loc_4BD20C: calll *0x24(%eax);");
    asm("loc_4BD20F: test %al,%al;");
    asm("loc_4BD211: jne loc_4BD231;");
    asm("loc_4BD213: mov (%esi),%eax;");
    asm("loc_4BD215: push $1;");
    asm("loc_4BD217: mov %esi,%ecx;");
    asm("loc_4BD219: calll *(%eax);");
    asm("loc_4BD21B: pop %edi;");
    asm("loc_4BD21C: pop %esi;");
    asm("loc_4BD21D: xor %eax,%eax;");
    asm("loc_4BD21F: pop %ebx;");
    asm("loc_4BD220: mov 4(%esp),%ecx;");
    asm("loc_4BD224: mov %ecx,%fs:0;");
    asm("loc_4BD22B: add $0x10,%esp;");
    asm("loc_4BD22E: ret $8;");
    asm("loc_4BD231: mov 0x10(%esp),%ecx;");
    asm("loc_4BD235: pop %edi;");
    asm("loc_4BD236: mov %esi,%eax;");
    asm("loc_4BD238: pop %esi;");
    asm("loc_4BD239: pop %ebx;");
    asm("loc_4BD23A: mov %ecx,%fs:0;");
    asm("loc_4BD241: add $0x10,%esp;");
    asm("loc_4BD244: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD250() // _sub_4BD250
{
    __DEBUG_ASM(4BD250);
    // chunk 0x4BD250 _sub_4BD250
    asm("loc_4BD250: push %ebx;");
    asm("loc_4BD251: mov %ecx,%ebx;");
    asm("loc_4BD253: xor %eax,%eax;");
    asm("loc_4BD255: push %esi;");
    asm("loc_4BD256: mov 0xC(%esp),%esi;");
    asm("loc_4BD25A: cmp %eax,%esi;");
    asm("loc_4BD25C: mov %eax,8(%ebx);");
    asm("loc_4BD25F: mov %al,0xC(%ebx);");
    asm("loc_4BD262: movl $_off_5CB554,(%ebx);");
    asm("loc_4BD268: mov %eax,4(%ebx);");
    asm("loc_4BD26B: jne loc_4BD272;");
    asm("loc_4BD26D: mov %al,0xC(%ebx);");
    asm("loc_4BD270: jmp loc_4BD2A7;");
    asm("loc_4BD272: push %ebp;");
    asm("loc_4BD273: or $0xFFFFFFFF,%ecx;");
    asm("loc_4BD276: xor %eax,%eax;");
    asm("loc_4BD278: push %edi;");
    asm("loc_4BD279: mov %esi,%edi;");
    asm("loc_4BD27B: repne scas (%edi),%al;");
    asm("loc_4BD27D: not %ecx;");
    asm("loc_4BD27F: dec %ecx;");
    asm("loc_4BD280: mov %ecx,%eax;");
    asm("loc_4BD282: cmp $0x20,%eax;");
    asm("loc_4BD285: lea 0xC(%ebx),%ebp;");
    asm("loc_4BD288: jb loc_4BD28F;");
    asm("loc_4BD28A: mov $0x1F,%eax;");
    asm("loc_4BD28F: mov %eax,%ecx;");
    asm("loc_4BD291: mov %ecx,%edx;");
    asm("loc_4BD293: shr $2,%ecx;");
    asm("loc_4BD296: mov %ebp,%edi;");
    asm("loc_4BD298: rep movsl (%esi),(%edi);");
    asm("loc_4BD29A: mov %edx,%ecx;");
    asm("loc_4BD29C: and $3,%ecx;");
    asm("loc_4BD29F: rep movsb (%esi),(%edi);");
    asm("loc_4BD2A1: pop %edi;");
    asm("loc_4BD2A2: movb $0,(%eax,%ebp);");
    asm("loc_4BD2A6: pop %ebp;");
    asm("loc_4BD2A7: push %ebx;");
    asm("loc_4BD2A8: mov %eax,8(%ebx);");
    asm("loc_4BD2AB: call _sub_59DAB0;");
    asm("loc_4BD2B0: add $4,%esp;");
    asm("loc_4BD2B3: pop %esi;");
    asm("loc_4BD2B4: movl $_off_5D5DBC,(%ebx);");
    asm("loc_4BD2BA: mov %ebx,%eax;");
    asm("loc_4BD2BC: pop %ebx;");
    asm("loc_4BD2BD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD2C0() // _sub_4BD2C0
{
    __DEBUG_ASM(4BD2C0);
    // chunk 0x4BD2C0 _sub_4BD2C0
    asm("loc_4BD2C0: push $0xFFFFFFFF;");
    asm("loc_4BD2C2: push $_sub_5BD4A3;");
    asm("loc_4BD2C7: mov %fs:0,%eax;");
    asm("loc_4BD2CD: push %eax;");
    asm("loc_4BD2CE: mov %esp,%fs:0;");
    asm("loc_4BD2D5: push %ecx;");
    asm("loc_4BD2D6: push %ebx;");
    asm("loc_4BD2D7: push %esi;");
    asm("loc_4BD2D8: push $0x350;");
    asm("loc_4BD2DD: mov %ecx,%ebx;");
    asm("loc_4BD2DF: call _sub_5B7E84;");
    asm("loc_4BD2E4: mov %eax,%esi;");
    asm("loc_4BD2E6: add $4,%esp;");
    asm("loc_4BD2E9: mov %esi,8(%esp);");
    asm("loc_4BD2ED: test %esi,%esi;");
    asm("loc_4BD2EF: movl $0,0x14(%esp);");
    asm("loc_4BD2F7: je loc_4BD329;");
    asm("loc_4BD2F9: push %edi;");
    asm("loc_4BD2FA: mov %esi,%ecx;");
    asm("loc_4BD2FC: call _sub_59F860;");
    asm("loc_4BD301: lea 0x32C(%esi),%edi;");
    asm("loc_4BD307: mov %edi,%ecx;");
    asm("loc_4BD309: movb $1,0x18(%esp);");
    asm("loc_4BD30E: call _sub_55DEC0;");
    asm("loc_4BD313: movl $_off_5D5E8C,(%edi);");
    asm("loc_4BD319: movl $_off_5D5DD4,(%esi);");
    asm("loc_4BD31F: movl $_off_5D5DC4,0x7C(%esi);");
    asm("loc_4BD326: pop %edi;");
    asm("loc_4BD327: jmp loc_4BD32B;");
    asm("loc_4BD329: xor %esi,%esi;");
    asm("loc_4BD32B: mov 0x20(%esp),%ecx;");
    asm("loc_4BD32F: mov 0x1C(%esp),%edx;");
    asm("loc_4BD333: mov (%esi),%eax;");
    asm("loc_4BD335: push %ecx;");
    asm("loc_4BD336: add $0xC,%ebx;");
    asm("loc_4BD339: push %edx;");
    asm("loc_4BD33A: mov %esi,%ecx;");
    asm("loc_4BD33C: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4BD344: mov %ebx,0x10(%esi);");
    asm("loc_4BD347: calll *0x24(%eax);");
    asm("loc_4BD34A: test %al,%al;");
    asm("loc_4BD34C: jne loc_4BD36B;");
    asm("loc_4BD34E: mov (%esi),%eax;");
    asm("loc_4BD350: push $1;");
    asm("loc_4BD352: mov %esi,%ecx;");
    asm("loc_4BD354: calll *(%eax);");
    asm("loc_4BD356: pop %esi;");
    asm("loc_4BD357: xor %eax,%eax;");
    asm("loc_4BD359: pop %ebx;");
    asm("loc_4BD35A: mov 4(%esp),%ecx;");
    asm("loc_4BD35E: mov %ecx,%fs:0;");
    asm("loc_4BD365: add $0x10,%esp;");
    asm("loc_4BD368: ret $8;");
    asm("loc_4BD36B: mov 0xC(%esp),%ecx;");
    asm("loc_4BD36F: mov %esi,%eax;");
    asm("loc_4BD371: pop %esi;");
    asm("loc_4BD372: pop %ebx;");
    asm("loc_4BD373: mov %ecx,%fs:0;");
    asm("loc_4BD37A: add $0x10,%esp;");
    asm("loc_4BD37D: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD380() // _sub_4BD380
{
    __DEBUG_ASM(4BD380);
    // chunk 0x4BD380 _sub_4BD380
    asm("loc_4BD380: push %ebx;");
    asm("loc_4BD381: mov %ecx,%ebx;");
    asm("loc_4BD383: xor %eax,%eax;");
    asm("loc_4BD385: push %esi;");
    asm("loc_4BD386: mov 0xC(%esp),%esi;");
    asm("loc_4BD38A: cmp %eax,%esi;");
    asm("loc_4BD38C: mov %eax,8(%ebx);");
    asm("loc_4BD38F: mov %al,0xC(%ebx);");
    asm("loc_4BD392: movl $_off_5CB554,(%ebx);");
    asm("loc_4BD398: mov %eax,4(%ebx);");
    asm("loc_4BD39B: jne loc_4BD3A2;");
    asm("loc_4BD39D: mov %al,0xC(%ebx);");
    asm("loc_4BD3A0: jmp loc_4BD3D7;");
    asm("loc_4BD3A2: push %ebp;");
    asm("loc_4BD3A3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4BD3A6: xor %eax,%eax;");
    asm("loc_4BD3A8: push %edi;");
    asm("loc_4BD3A9: mov %esi,%edi;");
    asm("loc_4BD3AB: repne scas (%edi),%al;");
    asm("loc_4BD3AD: not %ecx;");
    asm("loc_4BD3AF: dec %ecx;");
    asm("loc_4BD3B0: mov %ecx,%eax;");
    asm("loc_4BD3B2: cmp $0x20,%eax;");
    asm("loc_4BD3B5: lea 0xC(%ebx),%ebp;");
    asm("loc_4BD3B8: jb loc_4BD3BF;");
    asm("loc_4BD3BA: mov $0x1F,%eax;");
    asm("loc_4BD3BF: mov %eax,%ecx;");
    asm("loc_4BD3C1: mov %ecx,%edx;");
    asm("loc_4BD3C3: shr $2,%ecx;");
    asm("loc_4BD3C6: mov %ebp,%edi;");
    asm("loc_4BD3C8: rep movsl (%esi),(%edi);");
    asm("loc_4BD3CA: mov %edx,%ecx;");
    asm("loc_4BD3CC: and $3,%ecx;");
    asm("loc_4BD3CF: rep movsb (%esi),(%edi);");
    asm("loc_4BD3D1: pop %edi;");
    asm("loc_4BD3D2: movb $0,(%eax,%ebp);");
    asm("loc_4BD3D6: pop %ebp;");
    asm("loc_4BD3D7: push %ebx;");
    asm("loc_4BD3D8: mov %eax,8(%ebx);");
    asm("loc_4BD3DB: call _sub_59DAB0;");
    asm("loc_4BD3E0: add $4,%esp;");
    asm("loc_4BD3E3: pop %esi;");
    asm("loc_4BD3E4: movl $_off_5D5E98,(%ebx);");
    asm("loc_4BD3EA: mov %ebx,%eax;");
    asm("loc_4BD3EC: pop %ebx;");
    asm("loc_4BD3ED: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD3F0() // _sub_4BD3F0
{
    __DEBUG_ASM(4BD3F0);
    // chunk 0x4BD3F0 _sub_4BD3F0
    asm("loc_4BD3F0: push $0xFFFFFFFF;");
    asm("loc_4BD3F2: push $_sub_5BD4A3;");
    asm("loc_4BD3F7: mov %fs:0,%eax;");
    asm("loc_4BD3FD: push %eax;");
    asm("loc_4BD3FE: mov %esp,%fs:0;");
    asm("loc_4BD405: push %ecx;");
    asm("loc_4BD406: push %ebx;");
    asm("loc_4BD407: push %esi;");
    asm("loc_4BD408: push $0x350;");
    asm("loc_4BD40D: mov %ecx,%ebx;");
    asm("loc_4BD40F: call _sub_5B7E84;");
    asm("loc_4BD414: mov %eax,%esi;");
    asm("loc_4BD416: add $4,%esp;");
    asm("loc_4BD419: mov %esi,8(%esp);");
    asm("loc_4BD41D: test %esi,%esi;");
    asm("loc_4BD41F: movl $0,0x14(%esp);");
    asm("loc_4BD427: je loc_4BD459;");
    asm("loc_4BD429: push %edi;");
    asm("loc_4BD42A: mov %esi,%ecx;");
    asm("loc_4BD42C: call _sub_59F860;");
    asm("loc_4BD431: lea 0x32C(%esi),%edi;");
    asm("loc_4BD437: mov %edi,%ecx;");
    asm("loc_4BD439: movb $1,0x18(%esp);");
    asm("loc_4BD43E: call _sub_55DEC0;");
    asm("loc_4BD443: movl $_off_5D5F64,(%edi);");
    asm("loc_4BD449: movl $_off_5D5EAC,(%esi);");
    asm("loc_4BD44F: movl $_off_5D5EA0,0x7C(%esi);");
    asm("loc_4BD456: pop %edi;");
    asm("loc_4BD457: jmp loc_4BD45B;");
    asm("loc_4BD459: xor %esi,%esi;");
    asm("loc_4BD45B: mov 0x20(%esp),%ecx;");
    asm("loc_4BD45F: mov 0x1C(%esp),%edx;");
    asm("loc_4BD463: mov (%esi),%eax;");
    asm("loc_4BD465: push %ecx;");
    asm("loc_4BD466: add $0xC,%ebx;");
    asm("loc_4BD469: push %edx;");
    asm("loc_4BD46A: mov %esi,%ecx;");
    asm("loc_4BD46C: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4BD474: mov %ebx,0x10(%esi);");
    asm("loc_4BD477: calll *0x24(%eax);");
    asm("loc_4BD47A: test %al,%al;");
    asm("loc_4BD47C: jne loc_4BD49B;");
    asm("loc_4BD47E: mov (%esi),%eax;");
    asm("loc_4BD480: push $1;");
    asm("loc_4BD482: mov %esi,%ecx;");
    asm("loc_4BD484: calll *(%eax);");
    asm("loc_4BD486: pop %esi;");
    asm("loc_4BD487: xor %eax,%eax;");
    asm("loc_4BD489: pop %ebx;");
    asm("loc_4BD48A: mov 4(%esp),%ecx;");
    asm("loc_4BD48E: mov %ecx,%fs:0;");
    asm("loc_4BD495: add $0x10,%esp;");
    asm("loc_4BD498: ret $8;");
    asm("loc_4BD49B: mov 0xC(%esp),%ecx;");
    asm("loc_4BD49F: mov %esi,%eax;");
    asm("loc_4BD4A1: pop %esi;");
    asm("loc_4BD4A2: pop %ebx;");
    asm("loc_4BD4A3: mov %ecx,%fs:0;");
    asm("loc_4BD4AA: add $0x10,%esp;");
    asm("loc_4BD4AD: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD4B0() // _sub_4BD4B0
{
    __DEBUG_ASM(4BD4B0);
    // chunk 0x4BD4B0 _sub_4BD4B0
    asm("loc_4BD4B0: push %ebx;");
    asm("loc_4BD4B1: push %esi;");
    asm("loc_4BD4B2: mov 0x10(%esp),%esi;");
    asm("loc_4BD4B6: mov 4(%esi),%eax;");
    asm("loc_4BD4B9: mov (%esi),%ebx;");
    asm("loc_4BD4BB: push %edi;");
    asm("loc_4BD4BC: mov %ecx,%edi;");
    asm("loc_4BD4BE: mov (%esi),%ecx;");
    asm("loc_4BD4C0: mov %ecx,(%eax);");
    asm("loc_4BD4C2: mov (%esi),%edx;");
    asm("loc_4BD4C4: mov 4(%esi),%eax;");
    asm("loc_4BD4C7: lea 8(%esi),%ecx;");
    asm("loc_4BD4CA: mov %eax,4(%edx);");
    asm("loc_4BD4CD: calll *_import_5C6098;");
    asm("loc_4BD4D3: push %esi;");
    asm("loc_4BD4D4: call _sub_5B7E1D;");
    asm("loc_4BD4D9: mov 8(%edi),%eax;");
    asm("loc_4BD4DC: add $4,%esp;");
    asm("loc_4BD4DF: dec %eax;");
    asm("loc_4BD4E0: mov %eax,8(%edi);");
    asm("loc_4BD4E3: mov 0x10(%esp),%eax;");
    asm("loc_4BD4E7: pop %edi;");
    asm("loc_4BD4E8: pop %esi;");
    asm("loc_4BD4E9: mov %ebx,(%eax);");
    asm("loc_4BD4EB: pop %ebx;");
    asm("loc_4BD4EC: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD4F0() // _sub_4BD4F0
{
    __DEBUG_ASM(4BD4F0);
    // chunk 0x4BD4F0 _sub_4BD4F0
    asm("loc_4BD4F0: push %esi;");
    asm("loc_4BD4F1: mov %ecx,%esi;");
    asm("loc_4BD4F3: call _sub_4BD510;");
    asm("loc_4BD4F8: testb $1,8(%esp);");
    asm("loc_4BD4FD: je loc_4BD508;");
    asm("loc_4BD4FF: push %esi;");
    asm("loc_4BD500: call _sub_5B7E1D;");
    asm("loc_4BD505: add $4,%esp;");
    asm("loc_4BD508: mov %esi,%eax;");
    asm("loc_4BD50A: pop %esi;");
    asm("loc_4BD50B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD510() // _sub_4BD510
{
    __DEBUG_ASM(4BD510);
    // chunk 0x4BD510 _sub_4BD510
    asm("loc_4BD510: push %esi;");
    asm("loc_4BD511: push %edi;");
    asm("loc_4BD512: mov %ecx,%edi;");
    asm("loc_4BD514: test %edi,%edi;");
    asm("loc_4BD516: je loc_4BD520;");
    asm("loc_4BD518: lea 0x32C(%edi),%esi;");
    asm("loc_4BD51E: jmp loc_4BD522;");
    asm("loc_4BD520: xor %esi,%esi;");
    asm("loc_4BD522: mov 8(%esi),%eax;");
    asm("loc_4BD525: push %eax;");
    asm("loc_4BD526: call _sub_5B7E1D;");
    asm("loc_4BD52B: add $4,%esp;");
    asm("loc_4BD52E: mov %edi,%ecx;");
    asm("loc_4BD530: pop %edi;");
    asm("loc_4BD531: movl $0,8(%esi);");
    asm("loc_4BD538: movl $0,0xC(%esi);");
    asm("loc_4BD53F: movl $0,0x10(%esi);");
    asm("loc_4BD546: pop %esi;");
    asm("loc_4BD547: jmp _sub_59FA50;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD550() // _sub_4BD550
{
    __DEBUG_ASM(4BD550);
    // chunk 0x4BD550 _sub_4BD550
    asm("loc_4BD550: push %ebx;");
    asm("loc_4BD551: push %ebp;");
    asm("loc_4BD552: mov 0x14(%esp),%ebp;");
    asm("loc_4BD556: push %edi;");
    asm("loc_4BD557: mov 0x14(%esp),%edi;");
    asm("loc_4BD55B: cmp %ebp,%edi;");
    asm("loc_4BD55D: mov %ecx,%ebx;");
    asm("loc_4BD55F: je loc_4BD593;");
    asm("loc_4BD561: push %esi;");
    asm("loc_4BD562: mov %edi,%esi;");
    asm("loc_4BD564: mov 4(%esi),%eax;");
    asm("loc_4BD567: mov (%esi),%ecx;");
    asm("loc_4BD569: mov (%edi),%edi;");
    asm("loc_4BD56B: mov %ecx,(%eax);");
    asm("loc_4BD56D: mov (%esi),%edx;");
    asm("loc_4BD56F: mov 4(%esi),%eax;");
    asm("loc_4BD572: lea 8(%esi),%ecx;");
    asm("loc_4BD575: mov %eax,4(%edx);");
    asm("loc_4BD578: calll *_import_5C6098;");
    asm("loc_4BD57E: push %esi;");
    asm("loc_4BD57F: call _sub_5B7E1D;");
    asm("loc_4BD584: mov 8(%ebx),%ecx;");
    asm("loc_4BD587: add $4,%esp;");
    asm("loc_4BD58A: dec %ecx;");
    asm("loc_4BD58B: cmp %ebp,%edi;");
    asm("loc_4BD58D: mov %ecx,8(%ebx);");
    asm("loc_4BD590: jne loc_4BD562;");
    asm("loc_4BD592: pop %esi;");
    asm("loc_4BD593: mov 0x10(%esp),%eax;");
    asm("loc_4BD597: mov %edi,(%eax);");
    asm("loc_4BD599: pop %edi;");
    asm("loc_4BD59A: pop %ebp;");
    asm("loc_4BD59B: pop %ebx;");
    asm("loc_4BD59C: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD5A0() // _sub_4BD5A0
{
    __DEBUG_ASM(4BD5A0);
    // chunk 0x4BD5A0 _sub_4BD5A0
    asm("loc_4BD5A0: push $0x20;");
    asm("loc_4BD5A2: call _sub_5B7E84;");
    asm("loc_4BD5A7: mov 8(%esp),%ecx;");
    asm("loc_4BD5AB: add $4,%esp;");
    asm("loc_4BD5AE: test %ecx,%ecx;");
    asm("loc_4BD5B0: jne loc_4BD5B4;");
    asm("loc_4BD5B2: mov %eax,%ecx;");
    asm("loc_4BD5B4: mov %ecx,(%eax);");
    asm("loc_4BD5B6: mov 8(%esp),%ecx;");
    asm("loc_4BD5BA: test %ecx,%ecx;");
    asm("loc_4BD5BC: je loc_4BD5C4;");
    asm("loc_4BD5BE: mov %ecx,4(%eax);");
    asm("loc_4BD5C1: ret $8;");
    asm("loc_4BD5C4: mov %eax,4(%eax);");
    asm("loc_4BD5C7: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD5D0() // _sub_4BD5D0
{
    __DEBUG_ASM(4BD5D0);
    // chunk 0x4BD5D0 _sub_4BD5D0
    asm("loc_4BD5D0: push $0xFFFFFFFF;");
    asm("loc_4BD5D2: push $_sub_5BD4C1;");
    asm("loc_4BD5D7: mov %fs:0,%eax;");
    asm("loc_4BD5DD: push %eax;");
    asm("loc_4BD5DE: mov %esp,%fs:0;");
    asm("loc_4BD5E5: push %ecx;");
    asm("loc_4BD5E6: mov 0x14(%esp),%ecx;");
    asm("loc_4BD5EA: mov %ecx,(%esp);");
    asm("loc_4BD5EE: test %ecx,%ecx;");
    asm("loc_4BD5F0: movl $0,0xC(%esp);");
    asm("loc_4BD5F8: je loc_4BD605;");
    asm("loc_4BD5FA: mov 0x18(%esp),%eax;");
    asm("loc_4BD5FE: push %eax;");
    asm("loc_4BD5FF: calll *_import_5C6420;");
    asm("loc_4BD605: mov 4(%esp),%ecx;");
    asm("loc_4BD609: mov %ecx,%fs:0;");
    asm("loc_4BD610: add $0x10,%esp;");
    asm("loc_4BD613: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD620() // _sub_4BD620
{
    __DEBUG_ASM(4BD620);
    // chunk 0x4BD620 _sub_4BD620
    asm("loc_4BD620: push %esi;");
    asm("loc_4BD621: mov %ecx,%esi;");
    asm("loc_4BD623: calll *_import_5C6098;");
    asm("loc_4BD629: testb $1,8(%esp);");
    asm("loc_4BD62E: je loc_4BD639;");
    asm("loc_4BD630: push %esi;");
    asm("loc_4BD631: call _sub_5B7E1D;");
    asm("loc_4BD636: add $4,%esp;");
    asm("loc_4BD639: mov %esi,%eax;");
    asm("loc_4BD63B: pop %esi;");
    asm("loc_4BD63C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD640() // _sub_4BD640
{
    __DEBUG_ASM(4BD640);
    // chunk 0x4BD640 _sub_4BD640
    asm("loc_4BD640: mov _data_5D5F6C,%eax;");
    asm("loc_4BD645: mov %eax,_data_672444;");
    asm("loc_4BD64A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD650() // _sub_4BD650
{
    __DEBUG_ASM(4BD650);
    // chunk 0x4BD650 _sub_4BD650
    asm("loc_4BD650: mov _data_5D5F6C,%eax;");
    asm("loc_4BD655: mov %eax,_data_672440;");
    asm("loc_4BD65A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD660() // _sub_4BD660
{
    __DEBUG_ASM(4BD660);
    // chunk 0x4BD660 _sub_4BD660
    asm("loc_4BD660: mov _data_5D5F70,%eax;");
    asm("loc_4BD665: mov %eax,_data_67243C;");
    asm("loc_4BD66A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD670() // _sub_4BD670
{
    __DEBUG_ASM(4BD670);
    // chunk 0x4BD670 _sub_4BD670
    asm("loc_4BD670: push %esi;");
    asm("loc_4BD671: mov %ecx,%esi;");
    asm("loc_4BD673: call _sub_4BD690;");
    asm("loc_4BD678: testb $1,8(%esp);");
    asm("loc_4BD67D: je loc_4BD688;");
    asm("loc_4BD67F: push %esi;");
    asm("loc_4BD680: call _sub_5B7E1D;");
    asm("loc_4BD685: add $4,%esp;");
    asm("loc_4BD688: mov %esi,%eax;");
    asm("loc_4BD68A: pop %esi;");
    asm("loc_4BD68B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD690() // _sub_4BD690
{
    __DEBUG_ASM(4BD690);
    // chunk 0x4BD690 _sub_4BD690
    asm("loc_4BD690: push $0xFFFFFFFF;");
    asm("loc_4BD692: push $_sub_5BD4F6;");
    asm("loc_4BD697: mov %fs:0,%eax;");
    asm("loc_4BD69D: push %eax;");
    asm("loc_4BD69E: mov %esp,%fs:0;");
    asm("loc_4BD6A5: sub $0xC,%esp;");
    asm("loc_4BD6A8: mov %ecx,(%esp);");
    asm("loc_4BD6AC: movl $_off_5D5F7C,(%ecx);");
    asm("loc_4BD6B2: mov _data_67244C,%edx;");
    asm("loc_4BD6B8: xor %eax,%eax;");
    asm("loc_4BD6BA: cmp %ecx,%edx;");
    asm("loc_4BD6BC: mov %eax,0x14(%esp);");
    asm("loc_4BD6C0: jne loc_4BD6C7;");
    asm("loc_4BD6C2: mov %eax,_data_67244C;");
    asm("loc_4BD6C7: push %ebx;");
    asm("loc_4BD6C8: push %ebp;");
    asm("loc_4BD6C9: push %esi;");
    asm("loc_4BD6CA: lea 0xF4(%ecx),%ebp;");
    asm("loc_4BD6D0: push %edi;");
    asm("loc_4BD6D1: mov %ebp,0x14(%esp);");
    asm("loc_4BD6D5: lea 0x10(%ebp),%esi;");
    asm("loc_4BD6D8: mov %esi,0x18(%esp);");
    asm("loc_4BD6DC: mov %esi,%ecx;");
    asm("loc_4BD6DE: movb $3,0x24(%esp);");
    asm("loc_4BD6E3: call _sub_4144F0;");
    asm("loc_4BD6E8: mov 0x14(%esi),%ebx;");
    asm("loc_4BD6EB: mov 0x10(%esi),%edi;");
    asm("loc_4BD6EE: cmp %ebx,%edi;");
    asm("loc_4BD6F0: movb $2,0x24(%esp);");
    asm("loc_4BD6F5: je loc_4BD709;");
    asm("loc_4BD6F7: mov (%edi),%ecx;");
    asm("loc_4BD6F9: test %ecx,%ecx;");
    asm("loc_4BD6FB: je loc_4BD702;");
    asm("loc_4BD6FD: mov (%ecx),%eax;");
    asm("loc_4BD6FF: calll *4(%eax);");
    asm("loc_4BD702: add $8,%edi;");
    asm("loc_4BD705: cmp %ebx,%edi;");
    asm("loc_4BD707: jne loc_4BD6F7;");
    asm("loc_4BD709: mov 0x10(%esi),%eax;");
    asm("loc_4BD70C: push %eax;");
    asm("loc_4BD70D: call _sub_5B7E1D;");
    asm("loc_4BD712: mov _import_5C71D8,%ebx;");
    asm("loc_4BD718: xor %edi,%edi;");
    asm("loc_4BD71A: mov %edi,0x10(%esi);");
    asm("loc_4BD71D: mov %edi,0x14(%esi);");
    asm("loc_4BD720: mov %edi,0x18(%esi);");
    asm("loc_4BD723: mov (%esi),%eax;");
    asm("loc_4BD725: add $4,%esp;");
    asm("loc_4BD728: cmp %edi,%eax;");
    asm("loc_4BD72A: je loc_4BD737;");
    asm("loc_4BD72C: push %eax;");
    asm("loc_4BD72D: call *%ebx;");
    asm("loc_4BD72F: add $4,%esp;");
    asm("loc_4BD732: mov %edi,(%esi);");
    asm("loc_4BD734: mov %edi,4(%esi);");
    asm("loc_4BD737: mov 8(%ebp),%eax;");
    asm("loc_4BD73A: cmp %edi,%eax;");
    asm("loc_4BD73C: je loc_4BD74A;");
    asm("loc_4BD73E: push %eax;");
    asm("loc_4BD73F: call *%ebx;");
    asm("loc_4BD741: add $4,%esp;");
    asm("loc_4BD744: mov %edi,8(%ebp);");
    asm("loc_4BD747: mov %edi,0xC(%ebp);");
    asm("loc_4BD74A: mov 0x10(%esp),%ecx;");
    asm("loc_4BD74E: movl $0xFFFFFFFF,0x24(%esp);");
    asm("loc_4BD756: call _sub_5A1AF0;");
    asm("loc_4BD75B: mov 0x1C(%esp),%ecx;");
    asm("loc_4BD75F: pop %edi;");
    asm("loc_4BD760: pop %esi;");
    asm("loc_4BD761: pop %ebp;");
    asm("loc_4BD762: pop %ebx;");
    asm("loc_4BD763: mov %ecx,%fs:0;");
    asm("loc_4BD76A: add $0x18,%esp;");
    asm("loc_4BD76D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD770() // _sub_4BD770
{
    __DEBUG_ASM(4BD770);
    // chunk 0x4BD770 _sub_4BD770
    asm("loc_4BD770: push %ebx;");
    asm("loc_4BD771: xor %ebx,%ebx;");
    asm("loc_4BD773: push %esi;");
    asm("loc_4BD774: mov %ecx,%esi;");
    asm("loc_4BD776: push $_data_5D4DBC;");
    asm("loc_4BD77B: movl $0xA,0x70(%esi);");
    asm("loc_4BD782: mov %ebx,0x15C(%esi);");
    asm("loc_4BD788: mov %ebx,0x160(%esi);");
    asm("loc_4BD78E: mov %bl,0x158(%esi);");
    asm("loc_4BD794: mov %bl,0x159(%esi);");
    asm("loc_4BD79A: mov %bl,0x164(%esi);");
    asm("loc_4BD7A0: movl $0x3E800000,0x168(%esi);");
    asm("loc_4BD7AA: movl $0x40800000,0xEC(%esi);");
    asm("loc_4BD7B4: movl $0xC2280000,0xF0(%esi);");
    asm("loc_4BD7BE: call _sub_4177B0;");
    asm("loc_4BD7C3: mov 0x98(%esi),%ecx;");
    asm("loc_4BD7C9: add $4,%esp;");
    asm("loc_4BD7CC: cmp %eax,%ecx;");
    asm("loc_4BD7CE: je loc_4BD814;");
    asm("loc_4BD7D0: push %edi;");
    asm("loc_4BD7D1: mov %eax,0x98(%esi);");
    asm("loc_4BD7D7: xor %edi,%edi;");
    asm("loc_4BD7D9: lea (%esp),%esp;");
    asm("loc_4BD7E0: mov 0x8C(%esi),%ecx;");
    asm("loc_4BD7E6: cmp %ebx,%ecx;");
    asm("loc_4BD7E8: je loc_4BD80D;");
    asm("loc_4BD7EA: mov 0x90(%esi),%eax;");
    asm("loc_4BD7F0: sub %ecx,%eax;");
    asm("loc_4BD7F2: sar $3,%eax;");
    asm("loc_4BD7F5: cmp %eax,%edi;");
    asm("loc_4BD7F7: jae loc_4BD80D;");
    asm("loc_4BD7F9: mov %ecx,%eax;");
    asm("loc_4BD7FB: mov (%eax,%edi,8),%ecx;");
    asm("loc_4BD7FE: mov 0x98(%esi),%eax;");
    asm("loc_4BD804: mov (%ecx),%edx;");
    asm("loc_4BD806: push %eax;");
    asm("loc_4BD807: calll *8(%edx);");
    asm("loc_4BD80A: inc %edi;");
    asm("loc_4BD80B: jmp loc_4BD7E0;");
    asm("loc_4BD80D: mov %ebx,0xA4(%esi);");
    asm("loc_4BD813: pop %edi;");
    asm("loc_4BD814: mov 0xAC(%esi),%cl;");
    asm("loc_4BD81A: mov $1,%al;");
    asm("loc_4BD81C: cmp %al,%cl;");
    asm("loc_4BD81E: je loc_4BD82C;");
    asm("loc_4BD820: mov %al,0xAC(%esi);");
    asm("loc_4BD826: mov %ebx,0xA4(%esi);");
    asm("loc_4BD82C: pop %esi;");
    asm("loc_4BD82D: pop %ebx;");
    asm("loc_4BD82E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD830() // _sub_4BD830
{
    __DEBUG_ASM(4BD830);
    // chunk 0x4BD830 _sub_4BD830
    asm("loc_4BD830: mov 4(%esp),%eax;");
    asm("loc_4BD834: push %esi;");
    asm("loc_4BD835: mov %ecx,%esi;");
    asm("loc_4BD837: push %eax;");
    asm("loc_4BD838: push %esi;");
    asm("loc_4BD839: call _sub_59DD00;");
    asm("loc_4BD83E: push %esi;");
    asm("loc_4BD83F: call _sub_59DBF0;");
    asm("loc_4BD844: mov 0x6C(%esi),%cl;");
    asm("loc_4BD847: and $0xFB,%cl;");
    asm("loc_4BD84A: or $3,%cl;");
    asm("loc_4BD84D: mov %cl,0x6C(%esi);");
    asm("loc_4BD850: add $0xC,%esp;");
    asm("loc_4BD853: mov %esi,%ecx;");
    asm("loc_4BD855: call _sub_5A1C50;");
    asm("loc_4BD85A: mov $0x3DCCCCCD,%eax;");
    asm("loc_4BD85F: mov %eax,0xB4(%esi);");
    asm("loc_4BD865: mov %eax,0xB8(%esi);");
    asm("loc_4BD86B: andb $0xFD,0x6C(%esi);");
    asm("loc_4BD86F: movl $7,0x78(%esi);");
    asm("loc_4BD876: mov $1,%al;");
    asm("loc_4BD878: pop %esi;");
    asm("loc_4BD879: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BD880() // _sub_4BD880
{
    __DEBUG_ASM(4BD880);
    // chunk 0x4BD880 _sub_4BD880
    asm("loc_4BD880: mov $0x1210,%eax;");
    asm("loc_4BD885: call _sub_5B7E90;");
    asm("loc_4BD88A: push %ebx;");
    asm("loc_4BD88B: push %esi;");
    asm("loc_4BD88C: mov %ecx,%esi;");
    asm("loc_4BD88E: push %edi;");
    asm("loc_4BD88F: mov 0x1220(%esp),%edi;");
    asm("loc_4BD896: mov (%edi),%eax;");
    asm("loc_4BD898: mov %eax,0xF4(%esi);");
    asm("loc_4BD89E: mov 4(%edi),%ecx;");
    asm("loc_4BD8A1: mov %ecx,0xF8(%esi);");
    asm("loc_4BD8A7: lea 0x48(%edi),%edx;");
    asm("loc_4BD8AA: mov (%edx),%ecx;");
    asm("loc_4BD8AC: lea 0x13C(%esi),%eax;");
    asm("loc_4BD8B2: mov %ecx,(%eax);");
    asm("loc_4BD8B4: mov 4(%edx),%ecx;");
    asm("loc_4BD8B7: mov %ecx,4(%eax);");
    asm("loc_4BD8BA: mov 8(%edx),%edx;");
    asm("loc_4BD8BD: mov %edx,8(%eax);");
    asm("loc_4BD8C0: lea 0x54(%edi),%eax;");
    asm("loc_4BD8C3: mov (%eax),%edx;");
    asm("loc_4BD8C5: lea 0x148(%esi),%ecx;");
    asm("loc_4BD8CB: mov %edx,(%ecx);");
    asm("loc_4BD8CD: mov 4(%eax),%edx;");
    asm("loc_4BD8D0: mov %edx,4(%ecx);");
    asm("loc_4BD8D3: mov 8(%eax),%eax;");
    asm("loc_4BD8D6: mov %eax,8(%ecx);");
    asm("loc_4BD8D9: mov 0x60(%edi),%cl;");
    asm("loc_4BD8DC: mov $0xFF,%al;");
    asm("loc_4BD8DE: mov %al,0xF(%esp);");
    asm("loc_4BD8E2: mov %cl,0x154(%esi);");
    asm("loc_4BD8E8: movb $0x43,0xC(%esp);");
    asm("loc_4BD8ED: movb $0x61,0xD(%esp);");
    asm("loc_4BD8F2: movb $0x70,0xE(%esp);");
    asm("loc_4BD8F7: mov 0xC(%esp),%edx;");
    asm("loc_4BD8FB: mov $1,%cl;");
    asm("loc_4BD8FD: movb $0x87,0xC(%esp);");
    asm("loc_4BD902: movb $0xC3,0xD(%esp);");
    asm("loc_4BD907: movb $0xE0,0xE(%esp);");
    asm("loc_4BD90C: movb $0x19,0xF(%esp);");
    asm("loc_4BD911: mov %cl,0xE1(%esi);");
    asm("loc_4BD917: mov %cl,0xE0(%esi);");
    asm("loc_4BD91D: mov 0xC(%esp),%ecx;");
    asm("loc_4BD921: mov %edx,0xD8(%esi);");
    asm("loc_4BD927: mov %al,0xE(%esp);");
    asm("loc_4BD92B: mov %al,0xF(%esp);");
    asm("loc_4BD92F: movb $0xB9,0xC(%esp);");
    asm("loc_4BD934: movb $0xF7,0xD(%esp);");
    asm("loc_4BD939: mov 0xC(%esp),%edx;");
    asm("loc_4BD93D: mov %ecx,0xD4(%esi);");
    asm("loc_4BD943: mov %edx,0xCC(%esi);");
    asm("loc_4BD949: movl $0x3A902DE0,0xB0(%esi);");
    asm("loc_4BD953: mov 8(%edi),%eax;");
    asm("loc_4BD956: xor %ebx,%ebx;");
    asm("loc_4BD958: cmp %ebx,%eax;");
    asm("loc_4BD95A: jne loc_4BD994;");
    asm("loc_4BD95C: mov 0xF8(%esi),%eax;");
    asm("loc_4BD962: mov _data_67ECA8,%edx;");
    asm("loc_4BD968: push $0x80;");
    asm("loc_4BD96D: lea 0x20(%esp),%ecx;");
    asm("loc_4BD971: push %ecx;");
    asm("loc_4BD972: push %eax;");
    asm("loc_4BD973: push %edx;");
    asm("loc_4BD974: call _sub_4347E0;");
    asm("loc_4BD979: add $0x10,%esp;");
    asm("loc_4BD97C: test %eax,%eax;");
    asm("loc_4BD97E: jne loc_4BD985;");
    asm("loc_4BD980: mov %bx,0x1C(%esp);");
    asm("loc_4BD985: lea 0x1C(%esp),%eax;");
    asm("loc_4BD989: push %eax;");
    asm("loc_4BD98A: lea 0x220(%esp),%ecx;");
    asm("loc_4BD991: push %ecx;");
    asm("loc_4BD992: jmp loc_4BD99D;");
    asm("loc_4BD994: push %eax;");
    asm("loc_4BD995: lea 0x220(%esp),%edx;");
    asm("loc_4BD99C: push %edx;");
    asm("loc_4BD99D: calll *_import_5C70B4;");
    asm("loc_4BD9A3: add $8,%esp;");
    asm("loc_4BD9A6: lea 0x21C(%esp),%eax;");
    asm("loc_4BD9AD: push $_data_5CEF90;");
    asm("loc_4BD9B2: push %eax;");
    asm("loc_4BD9B3: calll *_import_5C7200;");
    asm("loc_4BD9B9: add $8,%esp;");
    asm("loc_4BD9BC: test %eax,%eax;");
    asm("loc_4BD9BE: jne loc_4BD9DA;");
    asm("loc_4BD9C0: mov 0x6C(%esi),%al;");
    asm("loc_4BD9C3: and $0xFD,%al;");
    asm("loc_4BD9C5: pop %edi;");
    asm("loc_4BD9C6: mov %bl,0x159(%esi);");
    asm("loc_4BD9CC: mov %al,0x6C(%esi);");
    asm("loc_4BD9CF: pop %esi;");
    asm("loc_4BD9D0: pop %ebx;");
    asm("loc_4BD9D1: add $0x1210,%esp;");
    asm("loc_4BD9D7: ret $4;");
    asm("loc_4BD9DA: mov 0x44(%edi),%eax;");
    asm("loc_4BD9DD: cmp %ebx,%eax;");
    asm("loc_4BD9DF: je loc_4BDA43;");
    asm("loc_4BD9E1: lea 0x10(%esp),%ecx;");
    asm("loc_4BD9E5: push %ecx;");
    asm("loc_4BD9E6: push %eax;");
    asm("loc_4BD9E7: call _sub_577DD0;");
    asm("loc_4BD9EC: add $8,%esp;");
    asm("loc_4BD9EF: test %al,%al;");
    asm("loc_4BD9F1: je loc_4BDA43;");
    asm("loc_4BD9F3: cmp %ebx,0x14(%esp);");
    asm("loc_4BD9F7: je loc_4BDA43;");
    asm("loc_4BD9F9: push $0x100;");
    asm("loc_4BD9FE: lea 0x20(%esp),%edx;");
    asm("loc_4BDA02: push %edx;");
    asm("loc_4BDA03: lea 0x18(%esp),%eax;");
    asm("loc_4BDA07: push %eax;");
    asm("loc_4BDA08: call _sub_577F50;");
    asm("loc_4BDA0D: mov _import_5C70AC,%ebx;");
    asm("loc_4BDA13: lea 0x228(%esp),%ecx;");
    asm("loc_4BDA1A: push $_data_5D5FF4;");
    asm("loc_4BDA1F: push %ecx;");
    asm("loc_4BDA20: call *%ebx;");
    asm("loc_4BDA22: lea 0x30(%esp),%edx;");
    asm("loc_4BDA26: push %edx;");
    asm("loc_4BDA27: lea 0x234(%esp),%eax;");
    asm("loc_4BDA2E: push %eax;");
    asm("loc_4BDA2F: call *%ebx;");
    asm("loc_4BDA31: lea 0x238(%esp),%ecx;");
    asm("loc_4BDA38: push $_data_5D5FF0;");
    asm("loc_4BDA3D: push %ecx;");
    asm("loc_4BDA3E: call *%ebx;");
    asm("loc_4BDA40: add $0x24,%esp;");
    asm("loc_4BDA43: mov (%esi),%edx;");
    asm("loc_4BDA45: lea 0x21C(%esp),%eax;");
    asm("loc_4BDA4C: push %eax;");
    asm("loc_4BDA4D: mov %esi,%ecx;");
    asm("loc_4BDA4F: calll *0x70(%edx);");
    asm("loc_4BDA52: push %edi;");
    asm("loc_4BDA53: mov %esi,%ecx;");
    asm("loc_4BDA55: call _sub_4BDA70;");
    asm("loc_4BDA5A: pop %edi;");
    asm("loc_4BDA5B: pop %esi;");
    asm("loc_4BDA5C: pop %ebx;");
    asm("loc_4BDA5D: add $0x1210,%esp;");
    asm("loc_4BDA63: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BDA70() // _sub_4BDA70
{
    __DEBUG_ASM(4BDA70);
    // chunk 0x4BDA70 _sub_4BDA70
    asm("loc_4BDA70: fildl _data_67DCA8;");
    asm("loc_4BDA76: sub $0x60,%esp;");
    asm("loc_4BDA79: push %ebx;");
    asm("loc_4BDA7A: push %esi;");
    asm("loc_4BDA7B: push %edi;");
    asm("loc_4BDA7C: sub $8,%esp;");
    asm("loc_4BDA7F: fstps 4(%esp);");
    asm("loc_4BDA83: fildl _data_67DCA4;");
    asm("loc_4BDA89: lea 0x38(%esp),%eax;");
    asm("loc_4BDA8D: mov %ecx,%ebx;");
    asm("loc_4BDA8F: mov $_data_67DBF8,%ecx;");
    asm("loc_4BDA94: fstps (%esp);");
    asm("loc_4BDA97: push %eax;");
    asm("loc_4BDA98: call _sub_4BDD40;");
    asm("loc_4BDA9D: mov _data_672448,%eax;");
    asm("loc_4BDAA2: test %eax,%eax;");
    asm("loc_4BDAA4: mov $9,%ecx;");
    asm("loc_4BDAA9: mov $_data_67DBFC,%esi;");
    asm("loc_4BDAAE: lea 0x48(%esp),%edi;");
    asm("loc_4BDAB2: rep movsl (%esi),(%edi);");
    asm("loc_4BDAB4: jne loc_4BDAC0;");
    asm("loc_4BDAB6: call _sub_5B73E0;");
    asm("loc_4BDABB: mov %eax,_data_672448;");
    asm("loc_4BDAC0: mov (%eax),%ecx;");
    asm("loc_4BDAC2: lea 0x30(%esp),%edx;");
    asm("loc_4BDAC6: push %edx;");
    asm("loc_4BDAC7: lea 0x4C(%esp),%edx;");
    asm("loc_4BDACB: push %edx;");
    asm("loc_4BDACC: lea 0x44(%esp),%edx;");
    asm("loc_4BDAD0: push %edx;");
    asm("loc_4BDAD1: push %eax;");
    asm("loc_4BDAD2: calll *0x2C(%ecx);");
    asm("loc_4BDAD5: fildl _data_67DCAC;");
    asm("loc_4BDADB: mov $_data_67DBFC,%esi;");
    asm("loc_4BDAE0: lea 0x48(%esp),%edi;");
    asm("loc_4BDAE4: fsubs _data_67DC60;");
    asm("loc_4BDAEA: fdivs _data_67DC70;");
    asm("loc_4BDAF0: fmuls _data_67DC9C;");
    asm("loc_4BDAF6: fstps 0xC(%esp);");
    asm("loc_4BDAFA: mov 0xC(%esp),%eax;");
    asm("loc_4BDAFE: fildl _data_67DCB0;");
    asm("loc_4BDB04: mov %eax,0x24(%esp);");
    asm("loc_4BDB08: lea 0x24(%esp),%eax;");
    asm("loc_4BDB0C: push %eax;");
    asm("loc_4BDB0D: fsubs _data_67DC64;");
    asm("loc_4BDB13: fdivs _data_67DC74;");
    asm("loc_4BDB19: fmuls _data_67DC9C;");
    asm("loc_4BDB1F: fstps 0x14(%esp);");
    asm("loc_4BDB23: mov 0x14(%esp),%ecx;");
    asm("loc_4BDB27: flds _data_67DC9C;");
    asm("loc_4BDB2D: mov %ecx,0x2C(%esp);");
    asm("loc_4BDB31: fchs;");
    asm("loc_4BDB33: mov $9,%ecx;");
    asm("loc_4BDB38: fstps 0x18(%esp);");
    asm("loc_4BDB3C: mov 0x18(%esp),%edx;");
    asm("loc_4BDB40: rep movsl (%esi),(%edi);");
    asm("loc_4BDB42: lea 0x4C(%esp),%ecx;");
    asm("loc_4BDB46: mov %edx,0x30(%esp);");
    asm("loc_4BDB4A: push %ecx;");
    asm("loc_4BDB4B: lea 0x38(%esp),%edx;");
    asm("loc_4BDB4F: push %edx;");
    asm("loc_4BDB50: call _sub_423B90;");
    asm("loc_4BDB55: lea 0x24(%esp),%eax;");
    asm("loc_4BDB59: push %eax;");
    asm("loc_4BDB5A: call _sub_59DA70;");
    asm("loc_4BDB5F: flds _data_5C7500;");
    asm("loc_4BDB65: add $0x10,%esp;");
    asm("loc_4BDB68: fdivs 0x20(%esp);");
    asm("loc_4BDB6C: flds 0x18(%esp);");
    asm("loc_4BDB70: fmul %st(1),%st;");
    asm("loc_4BDB72: fstps 0xC(%esp);");
    asm("loc_4BDB76: flds 0x1C(%esp);");
    asm("loc_4BDB7A: mov 0xC(%esp),%ecx;");
    asm("loc_4BDB7E: fmul %st(1),%st;");
    asm("loc_4BDB80: mov %ecx,0x18(%esp);");
    asm("loc_4BDB84: fstps 0x10(%esp);");
    asm("loc_4BDB88: mov 0x10(%esp),%edx;");
    asm("loc_4BDB8C: fmuls 0x20(%esp);");
    asm("loc_4BDB90: mov %edx,0x1C(%esp);");
    asm("loc_4BDB94: fstps 0x14(%esp);");
    asm("loc_4BDB98: flds _data_5C7500;");
    asm("loc_4BDB9E: mov 0x14(%esp),%eax;");
    asm("loc_4BDBA2: fdivs 0x44(%esp);");
    asm("loc_4BDBA6: mov %eax,0x20(%esp);");
    asm("loc_4BDBAA: flds 0x3C(%esp);");
    asm("loc_4BDBAE: fmul %st(1),%st;");
    asm("loc_4BDBB0: fstps 0x3C(%esp);");
    asm("loc_4BDBB4: fstp %st(0);");
    asm("loc_4BDBB6: flds _data_5C7500;");
    asm("loc_4BDBBC: fdivs 0x38(%esp);");
    asm("loc_4BDBC0: flds 0x30(%esp);");
    asm("loc_4BDBC4: fmul %st(1),%st;");
    asm("loc_4BDBC6: mov 0x70(%esp),%eax;");
    asm("loc_4BDBCA: fstps 0x24(%esp);");
    asm("loc_4BDBCE: flds 0x34(%esp);");
    asm("loc_4BDBD2: mov 0x60(%eax),%cl;");
    asm("loc_4BDBD5: test %cl,%cl;");
    asm("loc_4BDBD7: fmul %st(1),%st;");
    asm("loc_4BDBD9: fstps 0x28(%esp);");
    asm("loc_4BDBDD: fstp %st(0);");
    asm("loc_4BDBDF: je loc_4BDC6C;");
    asm("loc_4BDBE5: lea 0x48(%eax),%ecx;");
    asm("loc_4BDBE8: mov (%ecx),%edx;");
    asm("loc_4BDBEA: mov %edx,0x18(%esp);");
    asm("loc_4BDBEE: flds 0x18(%esp);");
    asm("loc_4BDBF2: fsubs 0x54(%eax);");
    asm("loc_4BDBF5: mov 4(%ecx),%edx;");
    asm("loc_4BDBF8: mov 8(%ecx),%ecx;");
    asm("loc_4BDBFB: mov %edx,0x1C(%esp);");
    asm("loc_4BDBFF: flds 0x1C(%esp);");
    asm("loc_4BDC03: fsubs 0x58(%eax);");
    asm("loc_4BDC06: mov %ecx,0x20(%esp);");
    asm("loc_4BDC0A: flds _data_5C7500;");
    asm("loc_4BDC10: fdivs 0x20(%esp);");
    asm("loc_4BDC14: fsts 0x70(%esp);");
    asm("loc_4BDC18: fmul %st(2),%st;");
    asm("loc_4BDC1A: fstps 0xC(%esp);");
    asm("loc_4BDC1E: flds 0x70(%esp);");
    asm("loc_4BDC22: mov 0xC(%esp),%edx;");
    asm("loc_4BDC26: fmul %st(1),%st;");
    asm("loc_4BDC28: mov %edx,0x18(%esp);");
    asm("loc_4BDC2C: fstps 0x10(%esp);");
    asm("loc_4BDC30: mov 0x10(%esp),%eax;");
    asm("loc_4BDC34: fstp %st(0);");
    asm("loc_4BDC36: mov %eax,0x1C(%esp);");
    asm("loc_4BDC3A: fstp %st(0);");
    asm("loc_4BDC3C: flds 0x70(%esp);");
    asm("loc_4BDC40: fmuls 0x20(%esp);");
    asm("loc_4BDC44: fstps 0x14(%esp);");
    asm("loc_4BDC48: flds 0xC(%esp);");
    asm("loc_4BDC4C: mov 0x14(%esp),%ecx;");
    asm("loc_4BDC50: fadds _data_5D29B4;");
    asm("loc_4BDC56: mov %ecx,0x20(%esp);");
    asm("loc_4BDC5A: fstps 0x18(%esp);");
    asm("loc_4BDC5E: flds 0x1C(%esp);");
    asm("loc_4BDC62: fsubs _data_5D011C;");
    asm("loc_4BDC68: fstps 0x1C(%esp);");
    asm("loc_4BDC6C: mov 0x68(%ebx),%edx;");
    asm("loc_4BDC6F: push %edx;");
    asm("loc_4BDC70: lea 0x7C(%ebx),%esi;");
    asm("loc_4BDC73: push $0x3EB33333;");
    asm("loc_4BDC78: mov %esi,%ecx;");
    asm("loc_4BDC7A: call _sub_4145D0;");
    asm("loc_4BDC7F: lea 0xC(%esp),%eax;");
    asm("loc_4BDC83: push %eax;");
    asm("loc_4BDC84: mov %esi,%ecx;");
    asm("loc_4BDC86: call _sub_414570;");
    asm("loc_4BDC8B: mov (%eax),%eax;");
    asm("loc_4BDC8D: add $4,%eax;");
    asm("loc_4BDC90: mov %eax,0xC(%esp);");
    asm("loc_4BDC94: movl $0,0x10(%esp);");
    asm("loc_4BDC9C: fildll 0xC(%esp);");
    asm("loc_4BDCA0: flds _data_67DC9C;");
    asm("loc_4BDCA6: fdivs _data_67DC9C;");
    asm("loc_4BDCAC: fmuls _data_67DC70;");
    asm("loc_4BDCB2: fdivrp;");
    asm("loc_4BDCB4: flds 0x18(%esp);");
    asm("loc_4BDCB8: fadd %st(1),%st;");
    asm("loc_4BDCBA: fcomps 0x24(%esp);");
    asm("loc_4BDCBE: fnstsw %ax;");
    asm("loc_4BDCC0: test $0x41,%ah;");
    asm("loc_4BDCC3: jne loc_4BDCCF;");
    asm("loc_4BDCC5: flds 0x24(%esp);");
    asm("loc_4BDCC9: fsub %st(1),%st;");
    asm("loc_4BDCCB: fstps 0x18(%esp);");
    asm("loc_4BDCCF: fstp %st(0);");
    asm("loc_4BDCD1: flds 0x18(%esp);");
    asm("loc_4BDCD5: fcomps 0x3C(%esp);");
    asm("loc_4BDCD9: fnstsw %ax;");
    asm("loc_4BDCDB: test $5,%ah;");
    asm("loc_4BDCDE: jp loc_4BDCEE;");
    asm("loc_4BDCE0: flds 0x3C(%esp);");
    asm("loc_4BDCE4: fadds _data_5D29B4;");
    asm("loc_4BDCEA: fstps 0x18(%esp);");
    asm("loc_4BDCEE: flds 0xF0(%ebx);");
    asm("loc_4BDCF4: fmuls 0xB0(%ebx);");
    asm("loc_4BDCFA: flds 0x1C(%esp);");
    asm("loc_4BDCFE: fadd %st(1),%st;");
    asm("loc_4BDD00: fcomps 0x28(%esp);");
    asm("loc_4BDD04: fnstsw %ax;");
    asm("loc_4BDD06: test $5,%ah;");
    asm("loc_4BDD09: jp loc_4BDD1B;");
    asm("loc_4BDD0B: fmuls _data_5CA220;");
    asm("loc_4BDD11: fsubrs 0x1C(%esp);");
    asm("loc_4BDD15: fstps 0x1C(%esp);");
    asm("loc_4BDD19: jmp loc_4BDD1D;");
    asm("loc_4BDD1B: fstp %st(0);");
    asm("loc_4BDD1D: mov (%ebx),%edx;");
    asm("loc_4BDD1F: lea 0x18(%esp),%eax;");
    asm("loc_4BDD23: push %eax;");
    asm("loc_4BDD24: mov %ebx,%ecx;");
    asm("loc_4BDD26: calll *0x14(%edx);");
    asm("loc_4BDD29: pop %edi;");
    asm("loc_4BDD2A: pop %esi;");
    asm("loc_4BDD2B: pop %ebx;");
    asm("loc_4BDD2C: add $0x60,%esp;");
    asm("loc_4BDD2F: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BDD40() // _sub_4BDD40
{
    __DEBUG_ASM(4BDD40);
    // chunk 0x4BDD40 _sub_4BDD40
    asm("loc_4BDD40: sub $0xC,%esp;");
    asm("loc_4BDD43: flds 0x14(%esp);");
    asm("loc_4BDD47: mov 0x10(%esp),%eax;");
    asm("loc_4BDD4B: fsubs 0x68(%ecx);");
    asm("loc_4BDD4E: flds 0xA4(%ecx);");
    asm("loc_4BDD54: fdivs 0x78(%ecx);");
    asm("loc_4BDD57: fmulp;");
    asm("loc_4BDD59: fstps (%esp);");
    asm("loc_4BDD5D: mov (%esp),%edx;");
    asm("loc_4BDD61: flds 0x18(%esp);");
    asm("loc_4BDD65: fsubs 0x6C(%ecx);");
    asm("loc_4BDD68: flds 0xA4(%ecx);");
    asm("loc_4BDD6E: fdivs 0x7C(%ecx);");
    asm("loc_4BDD71: fmulp;");
    asm("loc_4BDD73: fstps 4(%esp);");
    asm("loc_4BDD77: flds 0xA4(%ecx);");
    asm("loc_4BDD7D: mov %eax,%ecx;");
    asm("loc_4BDD7F: mov %edx,(%ecx);");
    asm("loc_4BDD81: fchs;");
    asm("loc_4BDD83: mov 4(%esp),%edx;");
    asm("loc_4BDD87: fstps 8(%esp);");
    asm("loc_4BDD8B: mov %edx,4(%ecx);");
    asm("loc_4BDD8E: mov 8(%esp),%edx;");
    asm("loc_4BDD92: mov %edx,8(%ecx);");
    asm("loc_4BDD95: add $0xC,%esp;");
    asm("loc_4BDD98: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BDDA0() // _sub_4BDDA0
{
    __DEBUG_ASM(4BDDA0);
    // chunk 0x4BDDA0 _sub_4BDDA0
    asm("loc_4BDDA0: push %ebx;");
    asm("loc_4BDDA1: push %esi;");
    asm("loc_4BDDA2: mov %ecx,%esi;");
    asm("loc_4BDDA4: mov 0x164(%esi),%al;");
    asm("loc_4BDDAA: xor %ebx,%ebx;");
    asm("loc_4BDDAC: cmp %bl,%al;");
    asm("loc_4BDDAE: jne loc_4BDDBA;");
    asm("loc_4BDDB0: andb $0xFD,0x6C(%esi);");
    asm("loc_4BDDB4: mov %bl,0x159(%esi);");
    asm("loc_4BDDBA: mov %bl,0x164(%esi);");
    asm("loc_4BDDC0: call _sub_41DD90;");
    asm("loc_4BDDC5: test %al,%al;");
    asm("loc_4BDDC7: mov 0x6C(%esi),%al;");
    asm("loc_4BDDCA: jne loc_4BDDDC;");
    asm("loc_4BDDCC: and $0xFD,%al;");
    asm("loc_4BDDCE: mov %bl,0x159(%esi);");
    asm("loc_4BDDD4: mov %al,0x6C(%esi);");
    asm("loc_4BDDD7: pop %esi;");
    asm("loc_4BDDD8: pop %ebx;");
    asm("loc_4BDDD9: ret $8;");
    asm("loc_4BDDDC: test $2,%al;");
    asm("loc_4BDDDE: jne loc_4BDE1D;");
    asm("loc_4BDDE0: flds 0x15C(%esi);");
    asm("loc_4BDDE6: and $0xFE,%al;");
    asm("loc_4BDDE8: fcomps _data_5C7474;");
    asm("loc_4BDDEE: mov %al,0x6C(%esi);");
    asm("loc_4BDDF1: fnstsw %ax;");
    asm("loc_4BDDF3: test $0x41,%ah;");
    asm("loc_4BDDF6: jne loc_4BDE29;");
    asm("loc_4BDDF8: flds 0x15C(%esi);");
    asm("loc_4BDDFE: fsubl 0xC(%esp);");
    asm("loc_4BDE02: fsts 0x15C(%esi);");
    asm("loc_4BDE08: fcomps _data_5C7474;");
    asm("loc_4BDE0E: fnstsw %ax;");
    asm("loc_4BDE10: test $5,%ah;");
    asm("loc_4BDE13: jp loc_4BDE29;");
    asm("loc_4BDE15: mov %ebx,0x15C(%esi);");
    asm("loc_4BDE1B: jmp loc_4BDE29;");
    asm("loc_4BDE1D: mov 0x168(%esi),%eax;");
    asm("loc_4BDE23: mov %eax,0x15C(%esi);");
    asm("loc_4BDE29: mov 0x6C(%esi),%al;");
    asm("loc_4BDE2C: mov %al,%cl;");
    asm("loc_4BDE2E: shr $1,%cl;");
    asm("loc_4BDE30: and $1,%cl;");
    asm("loc_4BDE33: and $0xFD,%al;");
    asm("loc_4BDE35: mov %cl,0x158(%esi);");
    asm("loc_4BDE3B: mov %al,0x6C(%esi);");
    asm("loc_4BDE3E: mov _data_672450,%ecx;");
    asm("loc_4BDE44: mov _data_616840,%eax;");
    asm("loc_4BDE49: cmp %eax,%ecx;");
    asm("loc_4BDE4B: mov _data_616844,%ecx;");
    asm("loc_4BDE51: jne loc_4BDE6D;");
    asm("loc_4BDE53: cmp %ecx,_data_672454;");
    asm("loc_4BDE59: jne loc_4BDE6D;");
    asm("loc_4BDE5B: flds 0x160(%esi);");
    asm("loc_4BDE61: faddl 0xC(%esp);");
    asm("loc_4BDE65: fstps 0x160(%esi);");
    asm("loc_4BDE6B: jmp loc_4BDE7E;");
    asm("loc_4BDE6D: mov %eax,_data_672450;");
    asm("loc_4BDE72: mov %ecx,_data_672454;");
    asm("loc_4BDE78: mov %ebx,0x160(%esi);");
    asm("loc_4BDE7E: testb $3,_data_616850;");
    asm("loc_4BDE85: je loc_4BDE8E;");
    asm("loc_4BDE87: movb $1,0x159(%esi);");
    asm("loc_4BDE8E: pop %esi;");
    asm("loc_4BDE8F: pop %ebx;");
    asm("loc_4BDE90: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BDEA0() // _sub_4BDEA0
{
    __DEBUG_ASM(4BDEA0);
    // chunk 0x4BDEA0 _sub_4BDEA0
    asm("loc_4BDEA0: push %esi;");
    asm("loc_4BDEA1: mov %ecx,%esi;");
    asm("loc_4BDEA3: push %edi;");
    asm("loc_4BDEA4: movb $1,0x164(%esi);");
    asm("loc_4BDEAB: call _sub_41DD90;");
    asm("loc_4BDEB0: test %al,%al;");
    asm("loc_4BDEB2: jne loc_4BDEC8;");
    asm("loc_4BDEB4: mov 0x6C(%esi),%al;");
    asm("loc_4BDEB7: and $0xFD,%al;");
    asm("loc_4BDEB9: pop %edi;");
    asm("loc_4BDEBA: movb $0,0x159(%esi);");
    asm("loc_4BDEC1: mov %al,0x6C(%esi);");
    asm("loc_4BDEC4: pop %esi;");
    asm("loc_4BDEC5: ret $4;");
    asm("loc_4BDEC8: mov 0xC(%esp),%edi;");
    asm("loc_4BDECC: push %edi;");
    asm("loc_4BDECD: call _sub_4B62B0;");
    asm("loc_4BDED2: push $_data_5D5FFC;");
    asm("loc_4BDED7: call _sub_5B36B0;");
    asm("loc_4BDEDC: flds 0x14(%eax);");
    asm("loc_4BDEDF: fcompl _data_5C8B68;");
    asm("loc_4BDEE5: add $8,%esp;");
    asm("loc_4BDEE8: fnstsw %ax;");
    asm("loc_4BDEEA: test $5,%ah;");
    asm("loc_4BDEED: jnp loc_4BDFCE;");
    asm("loc_4BDEF3: mov 0x159(%esi),%cl;");
    asm("loc_4BDEF9: xor %edx,%edx;");
    asm("loc_4BDEFB: cmp %dl,%cl;");
    asm("loc_4BDEFD: je loc_4BDF5B;");
    asm("loc_4BDEFF: mov 0xF4(%esi),%eax;");
    asm("loc_4BDF05: cmp (%edi),%eax;");
    asm("loc_4BDF07: jne loc_4BDF45;");
    asm("loc_4BDF09: mov 0x154(%esi),%al;");
    asm("loc_4BDF0F: cmp 0x60(%edi),%al;");
    asm("loc_4BDF12: jne loc_4BDF45;");
    asm("loc_4BDF14: cmp %dl,%al;");
    asm("loc_4BDF16: je loc_4BDF38;");
    asm("loc_4BDF18: flds 0x13C(%esi);");
    asm("loc_4BDF1E: fcomps 0x48(%edi);");
    asm("loc_4BDF21: fnstsw %ax;");
    asm("loc_4BDF23: test $0x44,%ah;");
    asm("loc_4BDF26: jp loc_4BDF45;");
    asm("loc_4BDF28: flds 0x140(%esi);");
    asm("loc_4BDF2E: fcomps 0x4C(%edi);");
    asm("loc_4BDF31: fnstsw %ax;");
    asm("loc_4BDF33: test $0x44,%ah;");
    asm("loc_4BDF36: jp loc_4BDF45;");
    asm("loc_4BDF38: mov 0x6C(%esi),%al;");
    asm("loc_4BDF3B: and $0xFD,%al;");
    asm("loc_4BDF3D: pop %edi;");
    asm("loc_4BDF3E: mov %al,0x6C(%esi);");
    asm("loc_4BDF41: pop %esi;");
    asm("loc_4BDF42: ret $4;");
    asm("loc_4BDF45: cmp %dl,%cl;");
    asm("loc_4BDF47: je loc_4BDF5B;");
    asm("loc_4BDF49: mov %dl,0x159(%esi);");
    asm("loc_4BDF4F: mov %edx,0x15C(%esi);");
    asm("loc_4BDF55: mov %edx,0x160(%esi);");
    asm("loc_4BDF5B: mov 0xF4(%esi),%ecx;");
    asm("loc_4BDF61: cmp (%edi),%ecx;");
    asm("loc_4BDF63: jne loc_4BDF9C;");
    asm("loc_4BDF65: mov 0x154(%esi),%al;");
    asm("loc_4BDF6B: cmp 0x60(%edi),%al;");
    asm("loc_4BDF6E: jne loc_4BDF9C;");
    asm("loc_4BDF70: cmp %dl,%al;");
    asm("loc_4BDF72: je loc_4BDF94;");
    asm("loc_4BDF74: flds 0x13C(%esi);");
    asm("loc_4BDF7A: fcomps 0x48(%edi);");
    asm("loc_4BDF7D: fnstsw %ax;");
    asm("loc_4BDF7F: test $0x44,%ah;");
    asm("loc_4BDF82: jp loc_4BDF9C;");
    asm("loc_4BDF84: flds 0x140(%esi);");
    asm("loc_4BDF8A: fcomps 0x4C(%edi);");
    asm("loc_4BDF8D: fnstsw %ax;");
    asm("loc_4BDF8F: test $0x44,%ah;");
    asm("loc_4BDF92: jp loc_4BDF9C;");
    asm("loc_4BDF94: cmp %dl,0x158(%esi);");
    asm("loc_4BDF9A: jne loc_4BDFCA;");
    asm("loc_4BDF9C: flds 0x15C(%esi);");
    asm("loc_4BDFA2: fcomps _data_5C7474;");
    asm("loc_4BDFA8: fnstsw %ax;");
    asm("loc_4BDFAA: test $0x41,%ah;");
    asm("loc_4BDFAD: je loc_4BDFC2;");
    asm("loc_4BDFAF: flds 0x160(%esi);");
    asm("loc_4BDFB5: fcomps 0x168(%esi);");
    asm("loc_4BDFBB: fnstsw %ax;");
    asm("loc_4BDFBD: test $1,%ah;");
    asm("loc_4BDFC0: jne loc_4BDFCE;");
    asm("loc_4BDFC2: mov %esi,%ecx;");
    asm("loc_4BDFC4: push %edi;");
    asm("loc_4BDFC5: call _sub_4BD880;");
    asm("loc_4BDFCA: orb $3,0x6C(%esi);");
    asm("loc_4BDFCE: pop %edi;");
    asm("loc_4BDFCF: pop %esi;");
    asm("loc_4BDFD0: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BDFE0() // _sub_4BDFE0
{
    __DEBUG_ASM(4BDFE0);
    // chunk 0x4BDFE0 _sub_4BDFE0
    asm("loc_4BDFE0: sub $0x44,%esp;");
    asm("loc_4BDFE3: push %esi;");
    asm("loc_4BDFE4: push $6;");
    asm("loc_4BDFE6: mov %ecx,%esi;");
    asm("loc_4BDFE8: call _sub_5792B0;");
    asm("loc_4BDFED: add $4,%esp;");
    asm("loc_4BDFF0: test %eax,%eax;");
    asm("loc_4BDFF2: je loc_4BE275;");
    asm("loc_4BDFF8: push $0x13;");
    asm("loc_4BDFFA: call _sub_5792B0;");
    asm("loc_4BDFFF: add $4,%esp;");
    asm("loc_4BE002: test %eax,%eax;");
    asm("loc_4BE004: je loc_4BE275;");
    asm("loc_4BE00A: testb $2,0x6C(%esi);");
    asm("loc_4BE00E: je loc_4BE275;");
    asm("loc_4BE014: call _sub_41A3E0;");
    asm("loc_4BE019: test %al,%al;");
    asm("loc_4BE01B: jne loc_4BE275;");
    asm("loc_4BE021: push %ebx;");
    asm("loc_4BE022: push %edi;");
    asm("loc_4BE023: call _sub_45A9F0;");
    asm("loc_4BE028: xor %ebx,%ebx;");
    asm("loc_4BE02A: push %ebx;");
    asm("loc_4BE02B: call _sub_422190;");
    asm("loc_4BE030: push $0xB71;");
    asm("loc_4BE035: call _sub_421ED0;");
    asm("loc_4BE03A: push $0xB44;");
    asm("loc_4BE03F: call _sub_421ED0;");
    asm("loc_4BE044: mov 0x68(%esi),%eax;");
    asm("loc_4BE047: add $0xC,%esp;");
    asm("loc_4BE04A: lea 0x7C(%esi),%edi;");
    asm("loc_4BE04D: push %eax;");
    asm("loc_4BE04E: push $0x3EB33333;");
    asm("loc_4BE053: mov %edi,%ecx;");
    asm("loc_4BE055: mov %edi,0x2C(%esp);");
    asm("loc_4BE059: call _sub_4145D0;");
    asm("loc_4BE05E: flds 0xB8(%esi);");
    asm("loc_4BE064: mov 0xB4(%esi),%ecx;");
    asm("loc_4BE06A: fchs;");
    asm("loc_4BE06C: lea 0x30(%esp),%edx;");
    asm("loc_4BE070: fstps 0xC8(%esi);");
    asm("loc_4BE076: mov %ecx,0xC4(%esi);");
    asm("loc_4BE07C: push %edx;");
    asm("loc_4BE07D: mov %edi,%ecx;");
    asm("loc_4BE07F: mov %ebx,0xBC(%esi);");
    asm("loc_4BE085: mov %ebx,0xC0(%esi);");
    asm("loc_4BE08B: call _sub_414570;");
    asm("loc_4BE090: mov 0x30(%esp),%eax;");
    asm("loc_4BE094: mov 0x34(%esp),%ecx;");
    asm("loc_4BE098: mov %eax,0x28(%esp);");
    asm("loc_4BE09C: mov %ebx,0x2C(%esp);");
    asm("loc_4BE0A0: fildll 0x28(%esp);");
    asm("loc_4BE0A4: mov %ecx,0x28(%esp);");
    asm("loc_4BE0A8: mov %ebx,0x2C(%esp);");
    asm("loc_4BE0AC: fstps 0xB4(%esi);");
    asm("loc_4BE0B2: lea 0x60(%esi),%edx;");
    asm("loc_4BE0B5: fildll 0x28(%esp);");
    asm("loc_4BE0B9: push %edx;");
    asm("loc_4BE0BA: fstps 0xB8(%esi);");
    asm("loc_4BE0C0: call _sub_417730;");
    asm("loc_4BE0C5: mov %eax,0x2C(%esp);");
    asm("loc_4BE0C9: mov 0xE1(%esi),%al;");
    asm("loc_4BE0CF: add $4,%esp;");
    asm("loc_4BE0D2: test %al,%al;");
    asm("loc_4BE0D4: mov %edx,0x2C(%esp);");
    asm("loc_4BE0D8: je loc_4BE20E;");
    asm("loc_4BE0DE: flds 0x28(%esp);");
    asm("loc_4BE0E2: push %ebp;");
    asm("loc_4BE0E3: sub $8,%esp;");
    asm("loc_4BE0E6: fstpl (%esp);");
    asm("loc_4BE0E9: calll *_import_5C71C4;");
    asm("loc_4BE0EF: fstps 0x18(%esp);");
    asm("loc_4BE0F3: flds 0x38(%esp);");
    asm("loc_4BE0F7: fstpl (%esp);");
    asm("loc_4BE0FA: calll *_import_5C71C4;");
    asm("loc_4BE100: fstps 0x1C(%esp);");
    asm("loc_4BE104: push $0x1701;");
    asm("loc_4BE109: flds 0xB4(%esi);");
    asm("loc_4BE10F: fadds _data_5D4F28;");
    asm("loc_4BE115: fstps 0x2C(%esp);");
    asm("loc_4BE119: flds 0xB8(%esi);");
    asm("loc_4BE11F: fadds _data_5D55B4;");
    asm("loc_4BE125: fstps 0x30(%esp);");
    asm("loc_4BE129: call _sub_401E90;");
    asm("loc_4BE12E: call _sub_422A70;");
    asm("loc_4BE133: call _sub_4225E0;");
    asm("loc_4BE138: lea 0xD8(%esi),%eax;");
    asm("loc_4BE13E: push %eax;");
    asm("loc_4BE13F: call _sub_421BA0;");
    asm("loc_4BE144: push $0xDE1;");
    asm("loc_4BE149: call _sub_421ED0;");
    asm("loc_4BE14E: push $8;");
    asm("loc_4BE150: call _sub_421670;");
    asm("loc_4BE155: mov 0x2C(%esp),%ecx;");
    asm("loc_4BE159: mov 0x28(%esp),%edx;");
    asm("loc_4BE15D: push %ebx;");
    asm("loc_4BE15E: mov %ecx,%edi;");
    asm("loc_4BE160: mov %edx,%ebp;");
    asm("loc_4BE162: push %edi;");
    asm("loc_4BE163: push %ebp;");
    asm("loc_4BE164: mov %ecx,0x3C(%esp);");
    asm("loc_4BE168: mov %edx,0x40(%esp);");
    asm("loc_4BE16C: call _sub_421CC0;");
    asm("loc_4BE171: flds 0x44(%esp);");
    asm("loc_4BE175: fadds 0x34(%esp);");
    asm("loc_4BE179: push %ebx;");
    asm("loc_4BE17A: push %edi;");
    asm("loc_4BE17B: fstps 0x4C(%esp);");
    asm("loc_4BE17F: mov 0x4C(%esp),%ebx;");
    asm("loc_4BE183: push %ebx;");
    asm("loc_4BE184: call _sub_421CC0;");
    asm("loc_4BE189: flds 0x54(%esp);");
    asm("loc_4BE18D: fadds 0x44(%esp);");
    asm("loc_4BE191: push $0;");
    asm("loc_4BE193: fstps 0x44(%esp);");
    asm("loc_4BE197: mov 0x44(%esp),%eax;");
    asm("loc_4BE19B: push %eax;");
    asm("loc_4BE19C: push %ebx;");
    asm("loc_4BE19D: call _sub_421CC0;");
    asm("loc_4BE1A2: mov 0x4C(%esp),%ecx;");
    asm("loc_4BE1A6: push $0;");
    asm("loc_4BE1A8: push %ecx;");
    asm("loc_4BE1A9: push %ebp;");
    asm("loc_4BE1AA: call _sub_421CC0;");
    asm("loc_4BE1AF: add $0x48,%esp;");
    asm("loc_4BE1B2: call _sub_421690;");
    asm("loc_4BE1B7: push $_data_679BB4;");
    asm("loc_4BE1BC: call _sub_421BA0;");
    asm("loc_4BE1C1: push $7;");
    asm("loc_4BE1C3: call _sub_421670;");
    asm("loc_4BE1C8: push $0;");
    asm("loc_4BE1CA: push %edi;");
    asm("loc_4BE1CB: push %ebp;");
    asm("loc_4BE1CC: call _sub_421CC0;");
    asm("loc_4BE1D1: push $0;");
    asm("loc_4BE1D3: push %edi;");
    asm("loc_4BE1D4: push %ebx;");
    asm("loc_4BE1D5: call _sub_421CC0;");
    asm("loc_4BE1DA: mov 0x30(%esp),%edi;");
    asm("loc_4BE1DE: push $0;");
    asm("loc_4BE1E0: push %edi;");
    asm("loc_4BE1E1: push %ebx;");
    asm("loc_4BE1E2: call _sub_421CC0;");
    asm("loc_4BE1E7: push $0;");
    asm("loc_4BE1E9: push %edi;");
    asm("loc_4BE1EA: push %ebp;");
    asm("loc_4BE1EB: call _sub_421CC0;");
    asm("loc_4BE1F0: call _sub_421690;");
    asm("loc_4BE1F5: push $0x1701;");
    asm("loc_4BE1FA: call _sub_401E90;");
    asm("loc_4BE1FF: add $0x3C,%esp;");
    asm("loc_4BE202: call _sub_422AB0;");
    asm("loc_4BE207: mov 0x28(%esp),%edi;");
    asm("loc_4BE20B: xor %ebx,%ebx;");
    asm("loc_4BE20D: pop %ebp;");
    asm("loc_4BE20E: lea 0xCC(%esi),%edx;");
    asm("loc_4BE214: push %edx;");
    asm("loc_4BE215: call _sub_417780;");
    asm("loc_4BE21A: flds 0x2C(%esp);");
    asm("loc_4BE21E: fadds _data_5C75DC;");
    asm("loc_4BE224: mov 0x30(%esp),%eax;");
    asm("loc_4BE228: add $4,%esp;");
    asm("loc_4BE22B: push %ebx;");
    asm("loc_4BE22C: fstps 0x3C(%esp);");
    asm("loc_4BE230: push %ebx;");
    asm("loc_4BE231: flds 0xB4(%esi);");
    asm("loc_4BE237: push %edi;");
    asm("loc_4BE238: fstps 0x4C(%esp);");
    asm("loc_4BE23C: flds 0xB8(%esi);");
    asm("loc_4BE242: lea 0x44(%esp),%ecx;");
    asm("loc_4BE246: fstps 0x50(%esp);");
    asm("loc_4BE24A: mov %ebx,0x58(%esp);");
    asm("loc_4BE24E: mov %eax,0x48(%esp);");
    asm("loc_4BE252: movl $1,0x54(%esp);");
    asm("loc_4BE25A: call _sub_4143C0;");
    asm("loc_4BE25F: push $0xB71;");
    asm("loc_4BE264: call _sub_421DD0;");
    asm("loc_4BE269: push $1;");
    asm("loc_4BE26B: call _sub_422190;");
    asm("loc_4BE270: add $8,%esp;");
    asm("loc_4BE273: pop %edi;");
    asm("loc_4BE274: pop %ebx;");
    asm("loc_4BE275: pop %esi;");
    asm("loc_4BE276: add $0x44,%esp;");
    asm("loc_4BE279: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE280() // _sub_4BE280
{
    __DEBUG_ASM(4BE280);
    // chunk 0x4BE280 _sub_4BE280
    asm("loc_4BE280: push $_data_5D4DBC;");
    asm("loc_4BE285: mov $_data_672410,%ecx;");
    asm("loc_4BE28A: call _sub_4BE3B0;");
    asm("loc_4BE28F: push $_sub_4BE2A0;");
    asm("loc_4BE294: call _sub_5B7E6C;");
    asm("loc_4BE299: pop %ecx;");
    asm("loc_4BE29A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE2A0() // _unknown_libname_42
{
    __DEBUG_ASM(4BE2A0);
    // chunk 0x4BE2A0 _sub_4BE2A0
    asm("loc_4BE2A0: mov $_data_672410,%ecx;");
    asm("loc_4BE2A5: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE2B0() // _sub_4BE2B0
{
    __DEBUG_ASM(4BE2B0);
    // chunk 0x4BE2B0 _sub_4BE2B0
    asm("loc_4BE2B0: mov _data_67244C,%ecx;");
    asm("loc_4BE2B6: test %ecx,%ecx;");
    asm("loc_4BE2B8: je loc_4BE2C9;");
    asm("loc_4BE2BA: mov 8(%esp),%eax;");
    asm("loc_4BE2BE: mov 4(%esp),%edx;");
    asm("loc_4BE2C2: push %eax;");
    asm("loc_4BE2C3: push %edx;");
    asm("loc_4BE2C4: call _sub_4BDDA0;");
    asm("loc_4BE2C9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE2D0() // _sub_4BE2D0
{
    __DEBUG_ASM(4BE2D0);
    // chunk 0x4BE2D0 _sub_4BE2D0
    asm("loc_4BE2D0: mov _data_67244C,%eax;");
    asm("loc_4BE2D5: test %eax,%eax;");
    asm("loc_4BE2D7: je loc_4BE2E0;");
    asm("loc_4BE2D9: mov 0x164(%eax),%al;");
    asm("loc_4BE2DF: ret;");
    asm("loc_4BE2E0: xor %al,%al;");
    asm("loc_4BE2E2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE2F0() // _sub_4BE2F0
{
    __DEBUG_ASM(4BE2F0);
    // chunk 0x4BE2F0 _sub_4BE2F0
    asm("loc_4BE2F0: mov _data_67244C,%eax;");
    asm("loc_4BE2F5: test %eax,%eax;");
    asm("loc_4BE2F7: je loc_4BE366;");
    asm("loc_4BE2F9: mov 0xF4(%eax),%ecx;");
    asm("loc_4BE2FF: mov 4(%esp),%eax;");
    asm("loc_4BE303: mov %ecx,(%eax);");
    asm("loc_4BE305: mov _data_67244C,%edx;");
    asm("loc_4BE30B: mov 0xF8(%edx),%ecx;");
    asm("loc_4BE311: mov %ecx,4(%eax);");
    asm("loc_4BE314: mov _data_67244C,%edx;");
    asm("loc_4BE31A: add $0x13C,%edx;");
    asm("loc_4BE320: push %esi;");
    asm("loc_4BE321: mov (%edx),%esi;");
    asm("loc_4BE323: lea 0x48(%eax),%ecx;");
    asm("loc_4BE326: mov %esi,(%ecx);");
    asm("loc_4BE328: mov 4(%edx),%esi;");
    asm("loc_4BE32B: mov %esi,4(%ecx);");
    asm("loc_4BE32E: mov 8(%edx),%edx;");
    asm("loc_4BE331: mov %edx,8(%ecx);");
    asm("loc_4BE334: mov _data_67244C,%ecx;");
    asm("loc_4BE33A: add $0x148,%ecx;");
    asm("loc_4BE340: mov (%ecx),%esi;");
    asm("loc_4BE342: lea 0x54(%eax),%edx;");
    asm("loc_4BE345: mov %esi,(%edx);");
    asm("loc_4BE347: mov 4(%ecx),%esi;");
    asm("loc_4BE34A: mov %esi,4(%edx);");
    asm("loc_4BE34D: mov 8(%ecx),%ecx;");
    asm("loc_4BE350: mov %ecx,8(%edx);");
    asm("loc_4BE353: mov _data_67244C,%edx;");
    asm("loc_4BE359: mov 0x154(%edx),%cl;");
    asm("loc_4BE35F: mov %cl,0x60(%eax);");
    asm("loc_4BE362: mov $1,%al;");
    asm("loc_4BE364: pop %esi;");
    asm("loc_4BE365: ret;");
    asm("loc_4BE366: xor %al,%al;");
    asm("loc_4BE368: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE370() // _sub_4BE370
{
    __DEBUG_ASM(4BE370);
    // chunk 0x4BE370 _sub_4BE370
    asm("loc_4BE370: mov _data_67244C,%ecx;");
    asm("loc_4BE376: test %ecx,%ecx;");
    asm("loc_4BE378: je loc_4BE384;");
    asm("loc_4BE37A: mov 4(%esp),%eax;");
    asm("loc_4BE37E: push %eax;");
    asm("loc_4BE37F: call _sub_4BDEA0;");
    asm("loc_4BE384: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE390() // _sub_4BE390
{
    __DEBUG_ASM(4BE390);
    // chunk 0x4BE390 _sub_4BE390
    asm("loc_4BE390: mov _data_67244C,%eax;");
    asm("loc_4BE395: test %eax,%eax;");
    asm("loc_4BE397: je loc_4BE3A4;");
    asm("loc_4BE399: andb $0xFD,0x6C(%eax);");
    asm("loc_4BE39D: movb $0,0x159(%eax);");
    asm("loc_4BE3A4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE3B0() // _sub_4BE3B0
{
    __DEBUG_ASM(4BE3B0);
    // chunk 0x4BE3B0 _sub_4BE3B0
    asm("loc_4BE3B0: push %ebx;");
    asm("loc_4BE3B1: mov %ecx,%ebx;");
    asm("loc_4BE3B3: xor %eax,%eax;");
    asm("loc_4BE3B5: push %esi;");
    asm("loc_4BE3B6: mov 0xC(%esp),%esi;");
    asm("loc_4BE3BA: cmp %eax,%esi;");
    asm("loc_4BE3BC: mov %eax,8(%ebx);");
    asm("loc_4BE3BF: mov %al,0xC(%ebx);");
    asm("loc_4BE3C2: movl $_off_5CB554,(%ebx);");
    asm("loc_4BE3C8: mov %eax,4(%ebx);");
    asm("loc_4BE3CB: jne loc_4BE3D2;");
    asm("loc_4BE3CD: mov %al,0xC(%ebx);");
    asm("loc_4BE3D0: jmp loc_4BE407;");
    asm("loc_4BE3D2: push %ebp;");
    asm("loc_4BE3D3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4BE3D6: xor %eax,%eax;");
    asm("loc_4BE3D8: push %edi;");
    asm("loc_4BE3D9: mov %esi,%edi;");
    asm("loc_4BE3DB: repne scas (%edi),%al;");
    asm("loc_4BE3DD: not %ecx;");
    asm("loc_4BE3DF: dec %ecx;");
    asm("loc_4BE3E0: mov %ecx,%eax;");
    asm("loc_4BE3E2: cmp $0x20,%eax;");
    asm("loc_4BE3E5: lea 0xC(%ebx),%ebp;");
    asm("loc_4BE3E8: jb loc_4BE3EF;");
    asm("loc_4BE3EA: mov $0x1F,%eax;");
    asm("loc_4BE3EF: mov %eax,%ecx;");
    asm("loc_4BE3F1: mov %ecx,%edx;");
    asm("loc_4BE3F3: shr $2,%ecx;");
    asm("loc_4BE3F6: mov %ebp,%edi;");
    asm("loc_4BE3F8: rep movsl (%esi),(%edi);");
    asm("loc_4BE3FA: mov %edx,%ecx;");
    asm("loc_4BE3FC: and $3,%ecx;");
    asm("loc_4BE3FF: rep movsb (%esi),(%edi);");
    asm("loc_4BE401: pop %edi;");
    asm("loc_4BE402: movb $0,(%eax,%ebp);");
    asm("loc_4BE406: pop %ebp;");
    asm("loc_4BE407: push %ebx;");
    asm("loc_4BE408: mov %eax,8(%ebx);");
    asm("loc_4BE40B: call _sub_59DAB0;");
    asm("loc_4BE410: add $4,%esp;");
    asm("loc_4BE413: pop %esi;");
    asm("loc_4BE414: movl $_off_5D6010,(%ebx);");
    asm("loc_4BE41A: mov %ebx,%eax;");
    asm("loc_4BE41C: pop %ebx;");
    asm("loc_4BE41D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE420() // _sub_4BE420
{
    __DEBUG_ASM(4BE420);
    // chunk 0x4BE420 _sub_4BE420
    asm("loc_4BE420: push $0xFFFFFFFF;");
    asm("loc_4BE422: push $_sub_5BD53F;");
    asm("loc_4BE427: mov %fs:0,%eax;");
    asm("loc_4BE42D: push %eax;");
    asm("loc_4BE42E: mov %esp,%fs:0;");
    asm("loc_4BE435: sub $0xC,%esp;");
    asm("loc_4BE438: push %ebx;");
    asm("loc_4BE439: push %esi;");
    asm("loc_4BE43A: push $0x170;");
    asm("loc_4BE43F: mov %ecx,0xC(%esp);");
    asm("loc_4BE443: call _sub_5B7E84;");
    asm("loc_4BE448: mov %eax,%esi;");
    asm("loc_4BE44A: add $4,%esp;");
    asm("loc_4BE44D: mov %esi,0xC(%esp);");
    asm("loc_4BE451: xor %ebx,%ebx;");
    asm("loc_4BE453: cmp %ebx,%esi;");
    asm("loc_4BE455: mov %ebx,0x1C(%esp);");
    asm("loc_4BE459: je loc_4BE52E;");
    asm("loc_4BE45F: push %ebp;");
    asm("loc_4BE460: push %edi;");
    asm("loc_4BE461: mov %esi,%ecx;");
    asm("loc_4BE463: call _sub_4B6790;");
    asm("loc_4BE468: lea 0x7C(%esi),%ecx;");
    asm("loc_4BE46B: movb $1,0x24(%esp);");
    asm("loc_4BE470: call _sub_4144B0;");
    asm("loc_4BE475: mov %bl,0xCF(%esi);");
    asm("loc_4BE47B: mov %bl,0xCE(%esi);");
    asm("loc_4BE481: mov %bl,0xCD(%esi);");
    asm("loc_4BE487: mov %bl,0xCC(%esi);");
    asm("loc_4BE48D: lea 0xD4(%esi),%ecx;");
    asm("loc_4BE493: mov %bl,0xD3(%esi);");
    asm("loc_4BE499: mov %bl,0xD2(%esi);");
    asm("loc_4BE49F: mov %bl,0xD1(%esi);");
    asm("loc_4BE4A5: mov %bl,0xD0(%esi);");
    asm("loc_4BE4AB: call _sub_4B5140;");
    asm("loc_4BE4B0: lea 0xD8(%esi),%ecx;");
    asm("loc_4BE4B6: call _sub_4B5140;");
    asm("loc_4BE4BB: lea 0xDC(%esi),%ecx;");
    asm("loc_4BE4C1: call _sub_4B5140;");
    asm("loc_4BE4C6: movl $_off_5D54CC,(%esi);");
    asm("loc_4BE4CC: lea 0xF4(%esi),%edi;");
    asm("loc_4BE4D2: lea 8(%edi),%ebp;");
    asm("loc_4BE4D5: mov %edi,0x18(%esp);");
    asm("loc_4BE4D9: mov %ebx,(%ebp);");
    asm("loc_4BE4DC: mov %ebx,4(%ebp);");
    asm("loc_4BE4DF: lea 0x10(%edi),%ecx;");
    asm("loc_4BE4E2: movb $3,0x24(%esp);");
    asm("loc_4BE4E7: call _sub_4144B0;");
    asm("loc_4BE4EC: push $0xFFFFFFFF;");
    asm("loc_4BE4EE: push %ebx;");
    asm("loc_4BE4EF: mov %ebp,%ecx;");
    asm("loc_4BE4F1: movb $4,0x2C(%esp);");
    asm("loc_4BE4F6: mov %ebx,4(%edi);");
    asm("loc_4BE4F9: movl $0xFFFFFFFF,(%edi);");
    asm("loc_4BE4FF: mov %ebx,0x44(%edi);");
    asm("loc_4BE502: call _sub_413DF0;");
    asm("loc_4BE507: mov %bl,0x60(%edi);");
    asm("loc_4BE50A: mov %esi,%ecx;");
    asm("loc_4BE50C: movb $5,0x24(%esp);");
    asm("loc_4BE511: movl $_off_5D5F7C,(%esi);");
    asm("loc_4BE517: call _sub_4BD770;");
    asm("loc_4BE51C: mov 0x6C(%esi),%al;");
    asm("loc_4BE51F: and $0xFD,%al;");
    asm("loc_4BE521: pop %edi;");
    asm("loc_4BE522: mov %al,0x6C(%esi);");
    asm("loc_4BE525: mov %esi,_data_67244C;");
    asm("loc_4BE52B: pop %ebp;");
    asm("loc_4BE52C: jmp loc_4BE530;");
    asm("loc_4BE52E: xor %esi,%esi;");
    asm("loc_4BE530: mov 8(%esp),%eax;");
    asm("loc_4BE534: mov 0x24(%esp),%ecx;");
    asm("loc_4BE538: mov (%esi),%edx;");
    asm("loc_4BE53A: add $0xC,%eax;");
    asm("loc_4BE53D: mov %eax,0x10(%esi);");
    asm("loc_4BE540: mov 0x28(%esp),%eax;");
    asm("loc_4BE544: push %eax;");
    asm("loc_4BE545: push %ecx;");
    asm("loc_4BE546: mov %esi,%ecx;");
    asm("loc_4BE548: movl $0xFFFFFFFF,0x24(%esp);");
    asm("loc_4BE550: calll *0x24(%edx);");
    asm("loc_4BE553: test %al,%al;");
    asm("loc_4BE555: jne loc_4BE574;");
    asm("loc_4BE557: mov (%esi),%edx;");
    asm("loc_4BE559: push $1;");
    asm("loc_4BE55B: mov %esi,%ecx;");
    asm("loc_4BE55D: calll *(%edx);");
    asm("loc_4BE55F: pop %esi;");
    asm("loc_4BE560: xor %eax,%eax;");
    asm("loc_4BE562: pop %ebx;");
    asm("loc_4BE563: mov 0xC(%esp),%ecx;");
    asm("loc_4BE567: mov %ecx,%fs:0;");
    asm("loc_4BE56E: add $0x18,%esp;");
    asm("loc_4BE571: ret $8;");
    asm("loc_4BE574: mov 0x14(%esp),%ecx;");
    asm("loc_4BE578: mov %esi,%eax;");
    asm("loc_4BE57A: pop %esi;");
    asm("loc_4BE57B: pop %ebx;");
    asm("loc_4BE57C: mov %ecx,%fs:0;");
    asm("loc_4BE583: add $0x18,%esp;");
    asm("loc_4BE586: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE590() // _sub_4BE590
{
    __DEBUG_ASM(4BE590);
    // chunk 0x4BE590 _sub_4BE590
    asm("loc_4BE590: mov _data_5D6014,%eax;");
    asm("loc_4BE595: mov %eax,_data_6724A8;");
    asm("loc_4BE59A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE5A0() // _sub_4BE5A0
{
    __DEBUG_ASM(4BE5A0);
    // chunk 0x4BE5A0 _sub_4BE5A0
    asm("loc_4BE5A0: mov _data_5D6014,%eax;");
    asm("loc_4BE5A5: mov %eax,_data_6724A4;");
    asm("loc_4BE5AA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE5B0() // _sub_4BE5B0
{
    __DEBUG_ASM(4BE5B0);
    // chunk 0x4BE5B0 _sub_4BE5B0
    asm("loc_4BE5B0: mov _data_5D6018,%eax;");
    asm("loc_4BE5B5: mov %eax,_data_6724A0;");
    asm("loc_4BE5BA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE5C0() // _sub_4BE5C0
{
    __DEBUG_ASM(4BE5C0);
    // chunk 0x4BE5C0 _sub_4BE5C0
    asm("loc_4BE5C0: xor %eax,%eax;");
    asm("loc_4BE5C2: mov %ax,_data_67249C;");
    asm("loc_4BE5C8: mov %al,_data_67249E;");
    asm("loc_4BE5CD: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE5D0() // _sub_4BE5D0
{
    __DEBUG_ASM(4BE5D0);
    // chunk 0x4BE5D0 _sub_4BE5D0
    asm("loc_4BE5D0: movw $0,_data_672498;");
    asm("loc_4BE5D9: movb $1,_data_67249A;");
    asm("loc_4BE5E0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE5F0() // _sub_4BE5F0
{
    __DEBUG_ASM(4BE5F0);
    // chunk 0x4BE5F0 _sub_4BE5F0
    asm("loc_4BE5F0: mov $1,%eax;");
    asm("loc_4BE5F5: mov %ax,_data_672494;");
    asm("loc_4BE5FB: mov %al,_data_672496;");
    asm("loc_4BE600: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE610() // _sub_4BE610
{
    __DEBUG_ASM(4BE610);
    // chunk 0x4BE610 _sub_4BE610
    asm("loc_4BE610: movw $2,_data_672490;");
    asm("loc_4BE619: movb $1,_data_672492;");
    asm("loc_4BE620: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE630() // _sub_4BE630
{
    __DEBUG_ASM(4BE630);
    // chunk 0x4BE630 _sub_4BE630
    asm("loc_4BE630: movw $3,_data_67248C;");
    asm("loc_4BE639: movb $1,_data_67248E;");
    asm("loc_4BE640: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE650() // _sub_4BE650
{
    __DEBUG_ASM(4BE650);
    // chunk 0x4BE650 _sub_4BE650
    asm("loc_4BE650: movw $4,_data_672488;");
    asm("loc_4BE659: movb $1,_data_67248A;");
    asm("loc_4BE660: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE670() // _sub_4BE670
{
    __DEBUG_ASM(4BE670);
    // chunk 0x4BE670 _sub_4BE670
    asm("loc_4BE670: push $_data_5D0228;");
    asm("loc_4BE675: mov $_data_67245C,%ecx;");
    asm("loc_4BE67A: call _sub_4C37A0;");
    asm("loc_4BE67F: push $_sub_4BE690;");
    asm("loc_4BE684: call _sub_5B7E6C;");
    asm("loc_4BE689: pop %ecx;");
    asm("loc_4BE68A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE690() // _unknown_libname_43
{
    __DEBUG_ASM(4BE690);
    // chunk 0x4BE690 _sub_4BE690
    asm("loc_4BE690: mov $_data_67245C,%ecx;");
    asm("loc_4BE695: jmp _sub_579380;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE6A0() // _sub_4BE6A0
{
    __DEBUG_ASM(4BE6A0);
    // chunk 0x4BE6A0 _sub_4BE6A0
    asm("loc_4BE6A0: push $_data_5D0E30;");
    asm("loc_4BE6A5: calll *_import_5C6020;");
    asm("loc_4BE6AB: add $4,%esp;");
    asm("loc_4BE6AE: mov %eax,_data_672458;");
    asm("loc_4BE6B3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE6C0() // _sub_4BE6C0
{
    __DEBUG_ASM(4BE6C0);
    // chunk 0x4BE6C0 _sub_4BE6C0
    asm("loc_4BE6C0: push %ebx;");
    asm("loc_4BE6C1: push %ebp;");
    asm("loc_4BE6C2: mov 0xC(%esp),%ebp;");
    asm("loc_4BE6C6: mov 4(%ebp),%eax;");
    asm("loc_4BE6C9: push %esi;");
    asm("loc_4BE6CA: push %edi;");
    asm("loc_4BE6CB: push %eax;");
    asm("loc_4BE6CC: calll *_import_5C629C;");
    asm("loc_4BE6D2: mov 0x1C(%esp),%ebx;");
    asm("loc_4BE6D6: mov _import_5C69A0,%edi;");
    asm("loc_4BE6DC: add $4,%esp;");
    asm("loc_4BE6DF: mov %ebx,%ecx;");
    asm("loc_4BE6E1: mov %eax,%esi;");
    asm("loc_4BE6E3: call *%edi;");
    asm("loc_4BE6E5: mov 0x1C(%esp),%ecx;");
    asm("loc_4BE6E9: call *%edi;");
    asm("loc_4BE6EB: test %esi,%esi;");
    asm("loc_4BE6ED: je loc_4BE762;");
    asm("loc_4BE6EF: mov 0x78(%esi),%eax;");
    asm("loc_4BE6F2: test %eax,%eax;");
    asm("loc_4BE6F4: je loc_4BE702;");
    asm("loc_4BE6F6: mov 0x28(%esp),%cl;");
    asm("loc_4BE6FA: test %cl,%cl;");
    asm("loc_4BE6FC: jne loc_4BE702;");
    asm("loc_4BE6FE: mov %eax,(%ebx);");
    asm("loc_4BE700: jmp loc_4BE745;");
    asm("loc_4BE702: mov 0x74(%esi),%eax;");
    asm("loc_4BE705: mov %eax,(%ebx);");
    asm("loc_4BE707: mov 0x1C(%esp),%ebx;");
    asm("loc_4BE70B: mov %ebx,%ecx;");
    asm("loc_4BE70D: call *%edi;");
    asm("loc_4BE70F: mov 4(%ebp),%eax;");
    asm("loc_4BE712: push %eax;");
    asm("loc_4BE713: calll *_import_5C603C;");
    asm("loc_4BE719: mov 0x7C(%esi),%ecx;");
    asm("loc_4BE71C: add $4,%esp;");
    asm("loc_4BE71F: test %ecx,%ecx;");
    asm("loc_4BE721: jne loc_4BE743;");
    asm("loc_4BE723: test %eax,%eax;");
    asm("loc_4BE725: je loc_4BE745;");
    asm("loc_4BE727: mov 4(%eax),%eax;");
    asm("loc_4BE72A: test %eax,%eax;");
    asm("loc_4BE72C: je loc_4BE745;");
    asm("loc_4BE72E: mov 0x24(%eax),%ecx;");
    asm("loc_4BE731: test %ecx,%ecx;");
    asm("loc_4BE733: je loc_4BE745;");
    asm("loc_4BE735: mov 0x28(%eax),%eax;");
    asm("loc_4BE738: sub %ecx,%eax;");
    asm("loc_4BE73A: sar $3,%eax;");
    asm("loc_4BE73D: test %eax,%eax;");
    asm("loc_4BE73F: jbe loc_4BE745;");
    asm("loc_4BE741: mov (%ecx),%ecx;");
    asm("loc_4BE743: mov %ecx,(%ebx);");
    asm("loc_4BE745: mov 0x88(%esi),%edx;");
    asm("loc_4BE74B: mov 0x20(%esp),%eax;");
    asm("loc_4BE74F: mov %edx,(%eax);");
    asm("loc_4BE751: mov 0x8C(%esi),%ecx;");
    asm("loc_4BE757: mov 0x24(%esp),%edx;");
    asm("loc_4BE75B: pop %edi;");
    asm("loc_4BE75C: pop %esi;");
    asm("loc_4BE75D: pop %ebp;");
    asm("loc_4BE75E: mov %ecx,(%edx);");
    asm("loc_4BE760: pop %ebx;");
    asm("loc_4BE761: ret;");
    asm("loc_4BE762: mov 4(%ebp),%ebp;");
    asm("loc_4BE765: push %ebp;");
    asm("loc_4BE766: calll *_import_5C603C;");
    asm("loc_4BE76C: mov %eax,%esi;");
    asm("loc_4BE76E: add $4,%esp;");
    asm("loc_4BE771: test %esi,%esi;");
    asm("loc_4BE773: je loc_4BE7B2;");
    asm("loc_4BE775: mov 0xC(%esi),%eax;");
    asm("loc_4BE778: mov %eax,(%ebx);");
    asm("loc_4BE77A: mov 0x1C(%esp),%ebx;");
    asm("loc_4BE77E: mov %ebx,%ecx;");
    asm("loc_4BE780: call *%edi;");
    asm("loc_4BE782: mov 4(%esi),%eax;");
    asm("loc_4BE785: test %eax,%eax;");
    asm("loc_4BE787: je loc_4BE7A0;");
    asm("loc_4BE789: mov 0x24(%eax),%ecx;");
    asm("loc_4BE78C: test %ecx,%ecx;");
    asm("loc_4BE78E: je loc_4BE7A0;");
    asm("loc_4BE790: mov 0x28(%eax),%eax;");
    asm("loc_4BE793: sub %ecx,%eax;");
    asm("loc_4BE795: sar $3,%eax;");
    asm("loc_4BE798: test %eax,%eax;");
    asm("loc_4BE79A: jbe loc_4BE7A0;");
    asm("loc_4BE79C: mov (%ecx),%ecx;");
    asm("loc_4BE79E: mov %ecx,(%ebx);");
    asm("loc_4BE7A0: mov 0x14(%esi),%edx;");
    asm("loc_4BE7A3: mov 0x20(%esp),%eax;");
    asm("loc_4BE7A7: mov %edx,(%eax);");
    asm("loc_4BE7A9: mov 0x18(%esi),%ecx;");
    asm("loc_4BE7AC: mov 0x24(%esp),%edx;");
    asm("loc_4BE7B0: mov %ecx,(%edx);");
    asm("loc_4BE7B2: pop %edi;");
    asm("loc_4BE7B3: pop %esi;");
    asm("loc_4BE7B4: pop %ebp;");
    asm("loc_4BE7B5: pop %ebx;");
    asm("loc_4BE7B6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE7C0() // _sub_4BE7C0
{
    __DEBUG_ASM(4BE7C0);
    // chunk 0x4BE7C0 _sub_4BE7C0
    asm("loc_4BE7C0: testb $1,4(%esp);");
    asm("loc_4BE7C5: push %esi;");
    asm("loc_4BE7C6: mov %ecx,%esi;");
    asm("loc_4BE7C8: movl $_off_5D6028,(%esi);");
    asm("loc_4BE7CE: je loc_4BE7D9;");
    asm("loc_4BE7D0: push %esi;");
    asm("loc_4BE7D1: call _sub_5B7E1D;");
    asm("loc_4BE7D6: add $4,%esp;");
    asm("loc_4BE7D9: mov %esi,%eax;");
    asm("loc_4BE7DB: pop %esi;");
    asm("loc_4BE7DC: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BE7E0() // _sub_4BE7E0
{
    __DEBUG_ASM(4BE7E0);
    // chunk 0x4BE7E0 _sub_4BE7E0
    asm("loc_4BE7E0: sub $0x30,%esp;");
    asm("loc_4BE7E3: mov 0x38(%esp),%eax;");
    asm("loc_4BE7E7: flds (%eax);");
    asm("loc_4BE7E9: mov 8(%eax),%edx;");
    asm("loc_4BE7EC: fadds _data_5D6130;");
    asm("loc_4BE7F2: push %ebp;");
    asm("loc_4BE7F3: mov _import_5C71EC,%ebp;");
    asm("loc_4BE7F9: push %esi;");
    asm("loc_4BE7FA: mov %ecx,%esi;");
    asm("loc_4BE7FC: fstps 8(%esp);");
    asm("loc_4BE800: mov 4(%eax),%ecx;");
    asm("loc_4BE803: mov 4(%esi),%eax;");
    asm("loc_4BE806: test %eax,%eax;");
    asm("loc_4BE808: push %edi;");
    asm("loc_4BE809: mov 0x40(%esp),%edi;");
    asm("loc_4BE80D: mov %ecx,0x10(%esp);");
    asm("loc_4BE811: mov %edx,0x14(%esp);");
    asm("loc_4BE815: je loc_4BE8FD;");
    asm("loc_4BE81B: mov 0x5C(%eax),%cl;");
    asm("loc_4BE81E: test %cl,%cl;");
    asm("loc_4BE820: je loc_4BE8FD;");
    asm("loc_4BE826: flds 0x10(%esp);");
    asm("loc_4BE82A: mov %edx,%eax;");
    asm("loc_4BE82C: fadds _data_5D612C;");
    asm("loc_4BE832: push %eax;");
    asm("loc_4BE833: sub $8,%esp;");
    asm("loc_4BE836: lea 0x30(%esp),%ecx;");
    asm("loc_4BE83A: fstps 4(%esp);");
    asm("loc_4BE83E: movl $0,0x24(%esp);");
    asm("loc_4BE846: flds 0x18(%esp);");
    asm("loc_4BE84A: movl $0,0x28(%esp);");
    asm("loc_4BE852: fadds _data_5D6128;");
    asm("loc_4BE858: movl $0,0x2C(%esp);");
    asm("loc_4BE860: fstps (%esp);");
    asm("loc_4BE863: call _sub_422B80;");
    asm("loc_4BE868: mov _data_6728B8,%ecx;");
    asm("loc_4BE86E: push %ecx;");
    asm("loc_4BE86F: push $_data_5D611C;");
    asm("loc_4BE874: push $_data_5D601C;");
    asm("loc_4BE879: push $_data_6724B8;");
    asm("loc_4BE87E: call *%ebp;");
    asm("loc_4BE880: mov _data_6728B8,%eax;");
    asm("loc_4BE885: add $0x10,%esp;");
    asm("loc_4BE888: push $0;");
    asm("loc_4BE88A: push $0;");
    asm("loc_4BE88C: push $0;");
    asm("loc_4BE88E: push $1;");
    asm("loc_4BE890: push $0;");
    asm("loc_4BE892: push $0;");
    asm("loc_4BE894: push $0;");
    asm("loc_4BE896: inc %eax;");
    asm("loc_4BE897: lea 0x34(%esp),%edx;");
    asm("loc_4BE89B: push %edx;");
    asm("loc_4BE89C: push $0;");
    asm("loc_4BE89E: mov %eax,_data_6728B8;");
    asm("loc_4BE8A3: lea 0x48(%esp),%eax;");
    asm("loc_4BE8A7: push %eax;");
    asm("loc_4BE8A8: push $0;");
    asm("loc_4BE8AA: push $0;");
    asm("loc_4BE8AC: push $_data_5D60EC;");
    asm("loc_4BE8B1: push $_data_5D60EC;");
    asm("loc_4BE8B6: push $_data_6724B8;");
    asm("loc_4BE8BB: mov %edi,%ecx;");
    asm("loc_4BE8BD: call _sub_5A0C90;");
    asm("loc_4BE8C2: mov %eax,0x10(%esi);");
    asm("loc_4BE8C5: mov %esi,0x2F0(%eax);");
    asm("loc_4BE8CB: mov 0x10(%esi),%eax;");
    asm("loc_4BE8CE: lea 0x80(%eax),%ecx;");
    asm("loc_4BE8D4: push %ecx;");
    asm("loc_4BE8D5: lea 0xB4(%eax),%ecx;");
    asm("loc_4BE8DB: call _sub_5A1340;");
    asm("loc_4BE8E0: mov 0x10(%esi),%edx;");
    asm("loc_4BE8E3: push $0;");
    asm("loc_4BE8E5: movl $0x3E8,0x74(%edx);");
    asm("loc_4BE8EC: mov 0x10(%esi),%ecx;");
    asm("loc_4BE8EF: mov (%ecx),%eax;");
    asm("loc_4BE8F1: push $1;");
    asm("loc_4BE8F3: push $1;");
    asm("loc_4BE8F5: calll *0xA8(%eax);");
    asm("loc_4BE8FB: jmp loc_4BE904;");
    asm("loc_4BE8FD: movl $0,0x10(%esi);");
    asm("loc_4BE904: mov _data_6728B8,%ecx;");
    asm("loc_4BE90A: push %ecx;");
    asm("loc_4BE90B: push $_data_5D60E0;");
    asm("loc_4BE910: push $_data_5D601C;");
    asm("loc_4BE915: push $_data_6724B8;");
    asm("loc_4BE91A: movl $0,0x28(%esp);");
    asm("loc_4BE922: movl $0,0x2C(%esp);");
    asm("loc_4BE92A: movl $0,0x30(%esp);");
    asm("loc_4BE932: call *%ebp;");
    asm("loc_4BE934: mov _data_6728B8,%eax;");
    asm("loc_4BE939: add $0x10,%esp;");
    asm("loc_4BE93C: push $0;");
    asm("loc_4BE93E: push $0;");
    asm("loc_4BE940: push $0;");
    asm("loc_4BE942: push $1;");
    asm("loc_4BE944: push $0;");
    asm("loc_4BE946: push $0;");
    asm("loc_4BE948: push $1;");
    asm("loc_4BE94A: inc %eax;");
    asm("loc_4BE94B: lea 0x34(%esp),%edx;");
    asm("loc_4BE94F: push %edx;");
    asm("loc_4BE950: push $0;");
    asm("loc_4BE952: mov %eax,_data_6728B8;");
    asm("loc_4BE957: lea 0x30(%esp),%eax;");
    asm("loc_4BE95B: push %eax;");
    asm("loc_4BE95C: push $0;");
    asm("loc_4BE95E: push $0;");
    asm("loc_4BE960: push $_data_5D60A8;");
    asm("loc_4BE965: push $_data_5D60A8;");
    asm("loc_4BE96A: push $_data_6724B8;");
    asm("loc_4BE96F: mov %edi,%ecx;");
    asm("loc_4BE971: call _sub_5A0C90;");
    asm("loc_4BE976: mov %eax,0xC(%esi);");
    asm("loc_4BE979: mov %esi,0x2F0(%eax);");
    asm("loc_4BE97F: mov 0xC(%esi),%eax;");
    asm("loc_4BE982: lea 0x80(%eax),%ecx;");
    asm("loc_4BE988: push %ecx;");
    asm("loc_4BE989: lea 0xB4(%eax),%ecx;");
    asm("loc_4BE98F: call _sub_5A1340;");
    asm("loc_4BE994: flds 0xC(%esp);");
    asm("loc_4BE998: mov 0x14(%esp),%edx;");
    asm("loc_4BE99C: fsubs _data_5D60A4;");
    asm("loc_4BE9A2: mov 0x10(%esp),%eax;");
    asm("loc_4BE9A6: push %edx;");
    asm("loc_4BE9A7: push %eax;");
    asm("loc_4BE9A8: push %ecx;");
    asm("loc_4BE9A9: lea 0x30(%esp),%ecx;");
    asm("loc_4BE9AD: fstps (%esp);");
    asm("loc_4BE9B0: movl $0,0x24(%esp);");
    asm("loc_4BE9B8: movl $0,0x28(%esp);");
    asm("loc_4BE9C0: movl $0,0x2C(%esp);");
    asm("loc_4BE9C8: call _sub_422B80;");
    asm("loc_4BE9CD: mov _data_6728B8,%ecx;");
    asm("loc_4BE9D3: push %ecx;");
    asm("loc_4BE9D4: push $_data_5D6098;");
    asm("loc_4BE9D9: push $_data_5D601C;");
    asm("loc_4BE9DE: push $_data_6724B8;");
    asm("loc_4BE9E3: call *%ebp;");
    asm("loc_4BE9E5: mov _data_6728B8,%edx;");
    asm("loc_4BE9EB: add $0x10,%esp;");
    asm("loc_4BE9EE: push $0;");
    asm("loc_4BE9F0: push $0;");
    asm("loc_4BE9F2: push $0;");
    asm("loc_4BE9F4: push $1;");
    asm("loc_4BE9F6: push $0;");
    asm("loc_4BE9F8: push $0;");
    asm("loc_4BE9FA: push $1;");
    asm("loc_4BE9FC: inc %edx;");
    asm("loc_4BE9FD: mov %edx,_data_6728B8;");
    asm("loc_4BEA03: lea 0x34(%esp),%edx;");
    asm("loc_4BEA07: push %edx;");
    asm("loc_4BEA08: push $0;");
    asm("loc_4BEA0A: lea 0x48(%esp),%eax;");
    asm("loc_4BEA0E: push %eax;");
    asm("loc_4BEA0F: push $0;");
    asm("loc_4BEA11: push $0;");
    asm("loc_4BEA13: push $_data_5D6068;");
    asm("loc_4BEA18: push $_data_5D6068;");
    asm("loc_4BEA1D: push $_data_6724B8;");
    asm("loc_4BEA22: mov %edi,%ecx;");
    asm("loc_4BEA24: call _sub_5A0C90;");
    asm("loc_4BEA29: mov %eax,8(%esi);");
    asm("loc_4BEA2C: mov %esi,0x2F0(%eax);");
    asm("loc_4BEA32: mov 8(%esi),%ecx;");
    asm("loc_4BEA35: movb $1,0x337(%ecx);");
    asm("loc_4BEA3C: mov 8(%esi),%eax;");
    asm("loc_4BEA3F: lea 0x80(%eax),%edx;");
    asm("loc_4BEA45: push %edx;");
    asm("loc_4BEA46: lea 0xB4(%eax),%ecx;");
    asm("loc_4BEA4C: call _sub_5A1340;");
    asm("loc_4BEA51: flds 0xC(%esp);");
    asm("loc_4BEA55: mov 0x14(%esp),%eax;");
    asm("loc_4BEA59: fsubs _data_5D60A4;");
    asm("loc_4BEA5F: mov 0x10(%esp),%ecx;");
    asm("loc_4BEA63: push %eax;");
    asm("loc_4BEA64: push %ecx;");
    asm("loc_4BEA65: push %ecx;");
    asm("loc_4BEA66: lea 0x3C(%esp),%ecx;");
    asm("loc_4BEA6A: fstps (%esp);");
    asm("loc_4BEA6D: movl $0,0x24(%esp);");
    asm("loc_4BEA75: movl $0,0x28(%esp);");
    asm("loc_4BEA7D: movl $0,0x2C(%esp);");
    asm("loc_4BEA85: movl $0,0x30(%esp);");
    asm("loc_4BEA8D: movl $0,0x34(%esp);");
    asm("loc_4BEA95: movl $0,0x38(%esp);");
    asm("loc_4BEA9D: call _sub_422B80;");
    asm("loc_4BEAA2: mov _data_6728B8,%edx;");
    asm("loc_4BEAA8: push %edx;");
    asm("loc_4BEAA9: push $_data_5D605C;");
    asm("loc_4BEAAE: push $_data_5D601C;");
    asm("loc_4BEAB3: push $_data_6724B8;");
    asm("loc_4BEAB8: call *%ebp;");
    asm("loc_4BEABA: add $0x10,%esp;");
    asm("loc_4BEABD: mov _data_6728B8,%edx;");
    asm("loc_4BEAC3: lea 0x18(%esp),%eax;");
    asm("loc_4BEAC7: push %eax;");
    asm("loc_4BEAC8: push $0;");
    asm("loc_4BEACA: push $0;");
    asm("loc_4BEACC: push $0x64;");
    asm("loc_4BEACE: push $1;");
    asm("loc_4BEAD0: push $1;");
    asm("loc_4BEAD2: push $0;");
    asm("loc_4BEAD4: push $1;");
    asm("loc_4BEAD6: push $0;");
    asm("loc_4BEAD8: push $0;");
    asm("loc_4BEADA: push $0;");
    asm("loc_4BEADC: inc %edx;");
    asm("loc_4BEADD: lea 0x50(%esp),%ecx;");
    asm("loc_4BEAE1: push %ecx;");
    asm("loc_4BEAE2: push $0;");
    asm("loc_4BEAE4: mov %edx,_data_6728B8;");
    asm("loc_4BEAEA: lea 0x64(%esp),%edx;");
    asm("loc_4BEAEE: push %edx;");
    asm("loc_4BEAEF: push $_data_5D6068;");
    asm("loc_4BEAF4: push $_data_6724B8;");
    asm("loc_4BEAF9: mov %edi,%ecx;");
    asm("loc_4BEAFB: call _sub_5A0DB0;");
    asm("loc_4BEB00: mov %eax,0x14(%esi);");
    asm("loc_4BEB03: mov %eax,0x2EC(%eax);");
    asm("loc_4BEB09: mov 0x14(%esi),%eax;");
    asm("loc_4BEB0C: mov %esi,0x2F0(%eax);");
    asm("loc_4BEB12: mov 0x14(%esi),%eax;");
    asm("loc_4BEB15: lea 0x80(%eax),%ecx;");
    asm("loc_4BEB1B: push %ecx;");
    asm("loc_4BEB1C: lea 0xB4(%eax),%ecx;");
    asm("loc_4BEB22: call _sub_5A1340;");
    asm("loc_4BEB27: mov 0xC(%esi),%edx;");
    asm("loc_4BEB2A: mov 0x14(%esi),%eax;");
    asm("loc_4BEB2D: mov %eax,0x2EC(%edx);");
    asm("loc_4BEB33: flds 0xC(%esp);");
    asm("loc_4BEB37: mov 0x14(%esp),%ecx;");
    asm("loc_4BEB3B: fsubs _data_5C99C8;");
    asm("loc_4BEB41: mov 0x10(%esp),%edx;");
    asm("loc_4BEB45: push %ecx;");
    asm("loc_4BEB46: push %edx;");
    asm("loc_4BEB47: push %ecx;");
    asm("loc_4BEB48: lea 0x3C(%esp),%ecx;");
    asm("loc_4BEB4C: fstps (%esp);");
    asm("loc_4BEB4F: call _sub_422B80;");
    asm("loc_4BEB54: mov _data_6728B8,%eax;");
    asm("loc_4BEB59: push %eax;");
    asm("loc_4BEB5A: push $_data_5D010C;");
    asm("loc_4BEB5F: push $_data_5D601C;");
    asm("loc_4BEB64: push $_data_6724B8;");
    asm("loc_4BEB69: call *%ebp;");
    asm("loc_4BEB6B: mov _data_6728B8,%eax;");
    asm("loc_4BEB70: add $0x10,%esp;");
    asm("loc_4BEB73: push $0;");
    asm("loc_4BEB75: push $0;");
    asm("loc_4BEB77: push $0;");
    asm("loc_4BEB79: push $0;");
    asm("loc_4BEB7B: push $0x3FC00000;");
    asm("loc_4BEB80: push $0x3D872B02;");
    asm("loc_4BEB85: push $0x3E6B851F;");
    asm("loc_4BEB8A: push $0;");
    asm("loc_4BEB8C: lea 0x50(%esp),%ecx;");
    asm("loc_4BEB90: push %ecx;");
    asm("loc_4BEB91: push $_data_5D010C;");
    asm("loc_4BEB96: inc %eax;");
    asm("loc_4BEB97: push $_data_6724B8;");
    asm("loc_4BEB9C: mov %edi,%ecx;");
    asm("loc_4BEB9E: mov %eax,_data_6728B8;");
    asm("loc_4BEBA3: call _sub_5A0E30;");
    asm("loc_4BEBA8: flds 0x10(%esp);");
    asm("loc_4BEBAC: mov 0x14(%esp),%edx;");
    asm("loc_4BEBB0: fsubs _data_5C99C8;");
    asm("loc_4BEBB6: push %edx;");
    asm("loc_4BEBB7: sub $8,%esp;");
    asm("loc_4BEBBA: fstps 4(%esp);");
    asm("loc_4BEBBE: lea 0x3C(%esp),%ecx;");
    asm("loc_4BEBC2: flds 0x18(%esp);");
    asm("loc_4BEBC6: mov %eax,0x18(%esi);");
    asm("loc_4BEBC9: fadds _data_5D011C;");
    asm("loc_4BEBCF: fstps (%esp);");
    asm("loc_4BEBD2: call _sub_422B80;");
    asm("loc_4BEBD7: mov _data_6728B8,%eax;");
    asm("loc_4BEBDC: push %eax;");
    asm("loc_4BEBDD: push $_data_5D6050;");
    asm("loc_4BEBE2: push $_data_5D601C;");
    asm("loc_4BEBE7: push $_data_6724B8;");
    asm("loc_4BEBEC: call *%ebp;");
    asm("loc_4BEBEE: mov _data_6728B8,%eax;");
    asm("loc_4BEBF3: add $0x10,%esp;");
    asm("loc_4BEBF6: push $0;");
    asm("loc_4BEBF8: push $0;");
    asm("loc_4BEBFA: push $2;");
    asm("loc_4BEBFC: push $0;");
    asm("loc_4BEBFE: push $0x3FC00000;");
    asm("loc_4BEC03: push $0x3CCCCCCD;");
    asm("loc_4BEC08: push $0x3E428F5C;");
    asm("loc_4BEC0D: push $0;");
    asm("loc_4BEC0F: lea 0x50(%esp),%ecx;");
    asm("loc_4BEC13: push %ecx;");
    asm("loc_4BEC14: push $_data_5D010C;");
    asm("loc_4BEC19: inc %eax;");
    asm("loc_4BEC1A: push $_data_6724B8;");
    asm("loc_4BEC1F: mov %edi,%ecx;");
    asm("loc_4BEC21: mov %eax,_data_6728B8;");
    asm("loc_4BEC26: call _sub_5A0E30;");
    asm("loc_4BEC2B: mov %eax,0x1C(%esi);");
    asm("loc_4BEC2E: mov _data_6728B8,%edx;");
    asm("loc_4BEC34: push %edx;");
    asm("loc_4BEC35: push $_data_5D6044;");
    asm("loc_4BEC3A: push $_data_5D601C;");
    asm("loc_4BEC3F: push $_data_6724B8;");
    asm("loc_4BEC44: call *%ebp;");
    asm("loc_4BEC46: mov _data_6728B8,%ecx;");
    asm("loc_4BEC4C: push $0;");
    asm("loc_4BEC4E: push %edi;");
    asm("loc_4BEC4F: inc %ecx;");
    asm("loc_4BEC50: push $_data_5D6034;");
    asm("loc_4BEC55: push $_data_6724B8;");
    asm("loc_4BEC5A: mov %ecx,_data_6728B8;");
    asm("loc_4BEC60: call _sub_59DB20;");
    asm("loc_4BEC65: mov %eax,0x20(%esi);");
    asm("loc_4BEC68: add $0x20,%esp;");
    asm("loc_4BEC6B: movl $0x3CD844D0,0x18(%esp);");
    asm("loc_4BEC73: mov 0x18(%esp),%ecx;");
    asm("loc_4BEC77: add $0xB4,%eax;");
    asm("loc_4BEC7C: movl $0x3B51B717,0x1C(%esp);");
    asm("loc_4BEC84: mov 0x1C(%esp),%edx;");
    asm("loc_4BEC88: movl $0,0x20(%esp);");
    asm("loc_4BEC90: mov %ecx,(%eax);");
    asm("loc_4BEC92: mov 0x20(%esp),%ecx;");
    asm("loc_4BEC96: mov %edx,4(%eax);");
    asm("loc_4BEC99: mov %ecx,8(%eax);");
    asm("loc_4BEC9C: mov 0x20(%esi),%edx;");
    asm("loc_4BEC9F: movb $1,0x348(%edx);");
    asm("loc_4BECA6: flds 0xC(%esp);");
    asm("loc_4BECAA: fsubs _data_5D6030;");
    asm("loc_4BECB0: mov 0x20(%esi),%eax;");
    asm("loc_4BECB3: add $0xA8,%eax;");
    asm("loc_4BECB8: movb $0,0x44(%esp);");
    asm("loc_4BECBD: fstps 0x18(%esp);");
    asm("loc_4BECC1: flds 0x10(%esp);");
    asm("loc_4BECC5: mov 0x18(%esp),%ecx;");
    asm("loc_4BECC9: fsubs _data_5D602C;");
    asm("loc_4BECCF: movb $0xC8,0x45(%esp);");
    asm("loc_4BECD4: movb $0,0x46(%esp);");
    asm("loc_4BECD9: movb $0xFF,0x47(%esp);");
    asm("loc_4BECDE: fstps 0x1C(%esp);");
    asm("loc_4BECE2: flds 0x14(%esp);");
    asm("loc_4BECE6: mov 0x1C(%esp),%edx;");
    asm("loc_4BECEA: mov %ecx,(%eax);");
    asm("loc_4BECEC: mov %edx,4(%eax);");
    asm("loc_4BECEF: fstps 0x20(%esp);");
    asm("loc_4BECF3: mov 0x20(%esp),%ecx;");
    asm("loc_4BECF7: mov %ecx,8(%eax);");
    asm("loc_4BECFA: mov 0x20(%esi),%edx;");
    asm("loc_4BECFD: mov $0x42C80000,%eax;");
    asm("loc_4BED02: mov %eax,0x330(%edx);");
    asm("loc_4BED08: mov 0x20(%esi),%ecx;");
    asm("loc_4BED0B: mov %eax,0x334(%ecx);");
    asm("loc_4BED11: mov 0x20(%esi),%edx;");
    asm("loc_4BED14: mov 0x44(%esp),%eax;");
    asm("loc_4BED18: push $0;");
    asm("loc_4BED1A: mov %eax,0x340(%edx);");
    asm("loc_4BED20: mov 0x20(%esi),%ecx;");
    asm("loc_4BED23: mov (%ecx),%edx;");
    asm("loc_4BED25: push $0x10000;");
    asm("loc_4BED2A: push $0x19;");
    asm("loc_4BED2C: calll *0xA8(%edx);");
    asm("loc_4BED32: pop %edi;");
    asm("loc_4BED33: pop %esi;");
    asm("loc_4BED34: pop %ebp;");
    asm("loc_4BED35: add $0x30,%esp;");
    asm("loc_4BED38: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BED40() // _sub_4BED40
{
    __DEBUG_ASM(4BED40);
    // chunk 0x4BED40 _sub_4BED40
    asm("loc_4BED40: push %esi;");
    asm("loc_4BED41: push $0;");
    asm("loc_4BED43: mov %ecx,%esi;");
    asm("loc_4BED45: mov 8(%esi),%ecx;");
    asm("loc_4BED48: mov (%ecx),%eax;");
    asm("loc_4BED4A: push $1;");
    asm("loc_4BED4C: push $1;");
    asm("loc_4BED4E: calll *0xA8(%eax);");
    asm("loc_4BED54: mov 0x14(%esi),%ecx;");
    asm("loc_4BED57: mov (%ecx),%edx;");
    asm("loc_4BED59: push $0;");
    asm("loc_4BED5B: push $1;");
    asm("loc_4BED5D: push $1;");
    asm("loc_4BED5F: calll *0xA8(%edx);");
    asm("loc_4BED65: mov 0xC(%esi),%ecx;");
    asm("loc_4BED68: mov (%ecx),%eax;");
    asm("loc_4BED6A: push $0;");
    asm("loc_4BED6C: push $1;");
    asm("loc_4BED6E: push $1;");
    asm("loc_4BED70: calll *0xA8(%eax);");
    asm("loc_4BED76: mov 0x20(%esi),%ecx;");
    asm("loc_4BED79: mov (%ecx),%edx;");
    asm("loc_4BED7B: push $0;");
    asm("loc_4BED7D: push $1;");
    asm("loc_4BED7F: push $1;");
    asm("loc_4BED81: calll *0xA8(%edx);");
    asm("loc_4BED87: mov 0x18(%esi),%ecx;");
    asm("loc_4BED8A: mov (%ecx),%eax;");
    asm("loc_4BED8C: push $0;");
    asm("loc_4BED8E: push $1;");
    asm("loc_4BED90: push $1;");
    asm("loc_4BED92: calll *0xA8(%eax);");
    asm("loc_4BED98: mov 0x1C(%esi),%ecx;");
    asm("loc_4BED9B: mov (%ecx),%edx;");
    asm("loc_4BED9D: push $0;");
    asm("loc_4BED9F: push $1;");
    asm("loc_4BEDA1: push $1;");
    asm("loc_4BEDA3: calll *0xA8(%edx);");
    asm("loc_4BEDA9: mov 0x10(%esi),%ecx;");
    asm("loc_4BEDAC: test %ecx,%ecx;");
    asm("loc_4BEDAE: pop %esi;");
    asm("loc_4BEDAF: je loc_4BEDBF;");
    asm("loc_4BEDB1: mov (%ecx),%eax;");
    asm("loc_4BEDB3: push $0;");
    asm("loc_4BEDB5: push $1;");
    asm("loc_4BEDB7: push $1;");
    asm("loc_4BEDB9: calll *0xA8(%eax);");
    asm("loc_4BEDBF: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BEDC0() // _sub_4BEDC0
{
    __DEBUG_ASM(4BEDC0);
    // chunk 0x4BEDC0 _sub_4BEDC0
    asm("loc_4BEDC0: push %esi;");
    asm("loc_4BEDC1: push $0;");
    asm("loc_4BEDC3: mov %ecx,%esi;");
    asm("loc_4BEDC5: mov 8(%esi),%ecx;");
    asm("loc_4BEDC8: mov (%ecx),%eax;");
    asm("loc_4BEDCA: push $0;");
    asm("loc_4BEDCC: push $1;");
    asm("loc_4BEDCE: calll *0xA8(%eax);");
    asm("loc_4BEDD4: mov 8(%esi),%ecx;");
    asm("loc_4BEDD7: mov (%ecx),%edx;");
    asm("loc_4BEDD9: push $0;");
    asm("loc_4BEDDB: push $0;");
    asm("loc_4BEDDD: push $2;");
    asm("loc_4BEDDF: calll *0xA8(%edx);");
    asm("loc_4BEDE5: mov 0x14(%esi),%ecx;");
    asm("loc_4BEDE8: mov (%ecx),%eax;");
    asm("loc_4BEDEA: push $0;");
    asm("loc_4BEDEC: push $0;");
    asm("loc_4BEDEE: push $1;");
    asm("loc_4BEDF0: calll *0xA8(%eax);");
    asm("loc_4BEDF6: mov 0x14(%esi),%ecx;");
    asm("loc_4BEDF9: mov (%ecx),%edx;");
    asm("loc_4BEDFB: push $0;");
    asm("loc_4BEDFD: push $0;");
    asm("loc_4BEDFF: push $2;");
    asm("loc_4BEE01: calll *0xA8(%edx);");
    asm("loc_4BEE07: mov 0xC(%esi),%ecx;");
    asm("loc_4BEE0A: mov (%ecx),%eax;");
    asm("loc_4BEE0C: push $0;");
    asm("loc_4BEE0E: push $0;");
    asm("loc_4BEE10: push $1;");
    asm("loc_4BEE12: calll *0xA8(%eax);");
    asm("loc_4BEE18: mov 0x20(%esi),%ecx;");
    asm("loc_4BEE1B: mov (%ecx),%edx;");
    asm("loc_4BEE1D: push $0;");
    asm("loc_4BEE1F: push $0;");
    asm("loc_4BEE21: push $1;");
    asm("loc_4BEE23: calll *0xA8(%edx);");
    asm("loc_4BEE29: mov 0x18(%esi),%ecx;");
    asm("loc_4BEE2C: mov (%ecx),%eax;");
    asm("loc_4BEE2E: push $0;");
    asm("loc_4BEE30: push $0;");
    asm("loc_4BEE32: push $1;");
    asm("loc_4BEE34: calll *0xA8(%eax);");
    asm("loc_4BEE3A: mov 0x1C(%esi),%ecx;");
    asm("loc_4BEE3D: mov (%ecx),%edx;");
    asm("loc_4BEE3F: push $0;");
    asm("loc_4BEE41: push $0;");
    asm("loc_4BEE43: push $1;");
    asm("loc_4BEE45: calll *0xA8(%edx);");
    asm("loc_4BEE4B: mov 0x10(%esi),%ecx;");
    asm("loc_4BEE4E: test %ecx,%ecx;");
    asm("loc_4BEE50: pop %esi;");
    asm("loc_4BEE51: je loc_4BEE61;");
    asm("loc_4BEE53: mov (%ecx),%eax;");
    asm("loc_4BEE55: push $0;");
    asm("loc_4BEE57: push $1;");
    asm("loc_4BEE59: push $1;");
    asm("loc_4BEE5B: calll *0xA8(%eax);");
    asm("loc_4BEE61: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BEE70() // _sub_4BEE70
{
    __DEBUG_ASM(4BEE70);
    // chunk 0x4BEE70 _sub_4BEE70
    asm("loc_4BEE70: push %ecx;");
    asm("loc_4BEE71: mov 8(%esp),%al;");
    asm("loc_4BEE75: push %ebx;");
    asm("loc_4BEE76: push %esi;");
    asm("loc_4BEE77: mov 8(%ecx),%esi;");
    asm("loc_4BEE7A: mov 0x331(%esi),%dl;");
    asm("loc_4BEE80: mov %dl,%bl;");
    asm("loc_4BEE82: shl $2,%al;");
    asm("loc_4BEE85: xor %al,%bl;");
    asm("loc_4BEE87: and $4,%bl;");
    asm("loc_4BEE8A: xor %dl,%bl;");
    asm("loc_4BEE8C: mov 0x10(%esp),%dl;");
    asm("loc_4BEE90: mov %bl,0x331(%esi);");
    asm("loc_4BEE96: mov 8(%ecx),%esi;");
    asm("loc_4BEE99: mov 0x331(%esi),%bl;");
    asm("loc_4BEE9F: mov %bl,0x10(%esp);");
    asm("loc_4BEEA3: shl $3,%dl;");
    asm("loc_4BEEA6: mov %dl,%bl;");
    asm("loc_4BEEA8: mov %dl,0xB(%esp);");
    asm("loc_4BEEAC: mov 0x10(%esp),%dl;");
    asm("loc_4BEEB0: xor %dl,%bl;");
    asm("loc_4BEEB2: and $8,%bl;");
    asm("loc_4BEEB5: xor %dl,%bl;");
    asm("loc_4BEEB7: mov %bl,0x331(%esi);");
    asm("loc_4BEEBD: mov 0xC(%ecx),%esi;");
    asm("loc_4BEEC0: mov 0x331(%esi),%dl;");
    asm("loc_4BEEC6: mov %dl,%bl;");
    asm("loc_4BEEC8: xor %al,%bl;");
    asm("loc_4BEECA: and $4,%bl;");
    asm("loc_4BEECD: xor %dl,%bl;");
    asm("loc_4BEECF: mov %bl,0x331(%esi);");
    asm("loc_4BEED5: mov 0xC(%ecx),%ecx;");
    asm("loc_4BEED8: mov 0x331(%ecx),%al;");
    asm("loc_4BEEDE: mov 0xB(%esp),%bl;");
    asm("loc_4BEEE2: mov %al,%dl;");
    asm("loc_4BEEE4: xor %bl,%dl;");
    asm("loc_4BEEE6: and $8,%dl;");
    asm("loc_4BEEE9: xor %al,%dl;");
    asm("loc_4BEEEB: pop %esi;");
    asm("loc_4BEEEC: mov %dl,0x331(%ecx);");
    asm("loc_4BEEF2: pop %ebx;");
    asm("loc_4BEEF3: pop %ecx;");
    asm("loc_4BEEF4: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BEF00() // _sub_4BEF00
{
    __DEBUG_ASM(4BEF00);
    // chunk 0x4BEF00 _sub_4BEF00
    asm("loc_4BEF00: sub $0x90,%esp;");
    asm("loc_4BEF06: push %ebx;");
    asm("loc_4BEF07: push %esi;");
    asm("loc_4BEF08: push %edi;");
    asm("loc_4BEF09: mov %ecx,%esi;");
    asm("loc_4BEF0B: call _sub_4BEDC0;");
    asm("loc_4BEF10: mov 0xA0(%esp),%edi;");
    asm("loc_4BEF17: mov 4(%edi),%eax;");
    asm("loc_4BEF1A: test %eax,%eax;");
    asm("loc_4BEF1C: jne loc_4BEF6D;");
    asm("loc_4BEF1E: mov 0x14(%esi),%ecx;");
    asm("loc_4BEF21: mov (%ecx),%eax;");
    asm("loc_4BEF23: push $0;");
    asm("loc_4BEF25: push $_data_5D6134;");
    asm("loc_4BEF2A: push $4;");
    asm("loc_4BEF2C: calll *0xA8(%eax);");
    asm("loc_4BEF32: mov 0x18(%esi),%ecx;");
    asm("loc_4BEF35: mov (%ecx),%edx;");
    asm("loc_4BEF37: push $0;");
    asm("loc_4BEF39: push $0x476;");
    asm("loc_4BEF3E: push $0x1E;");
    asm("loc_4BEF40: calll *0xA8(%edx);");
    asm("loc_4BEF46: mov 0x10(%esi),%ecx;");
    asm("loc_4BEF49: test %ecx,%ecx;");
    asm("loc_4BEF4B: je loc_4BEF5B;");
    asm("loc_4BEF4D: mov (%ecx),%eax;");
    asm("loc_4BEF4F: push $0;");
    asm("loc_4BEF51: push $1;");
    asm("loc_4BEF53: push $1;");
    asm("loc_4BEF55: calll *0xA8(%eax);");
    asm("loc_4BEF5B: mov 0x20(%esi),%ecx;");
    asm("loc_4BEF5E: movl $0,0x334(%ecx);");
    asm("loc_4BEF68: jmp loc_4BEFF4;");
    asm("loc_4BEF6D: mov _import_5C69A0,%ebx;");
    asm("loc_4BEF73: lea 0x10(%esp),%ecx;");
    asm("loc_4BEF77: call *%ebx;");
    asm("loc_4BEF79: lea 0x14(%esp),%ecx;");
    asm("loc_4BEF7D: call *%ebx;");
    asm("loc_4BEF7F: push $0;");
    asm("loc_4BEF81: lea 0x1C(%esp),%edx;");
    asm("loc_4BEF85: push %edx;");
    asm("loc_4BEF86: lea 0x14(%esp),%eax;");
    asm("loc_4BEF8A: push %eax;");
    asm("loc_4BEF8B: lea 0x20(%esp),%ecx;");
    asm("loc_4BEF8F: push %ecx;");
    asm("loc_4BEF90: lea 0x20(%esp),%edx;");
    asm("loc_4BEF94: push %edx;");
    asm("loc_4BEF95: push %edi;");
    asm("loc_4BEF96: movl $0,0x24(%esp);");
    asm("loc_4BEF9E: call _sub_4BE6C0;");
    asm("loc_4BEFA3: mov 0x28(%esp),%eax;");
    asm("loc_4BEFA7: add $0x18,%esp;");
    asm("loc_4BEFAA: test %eax,%eax;");
    asm("loc_4BEFAC: je loc_4BEFC1;");
    asm("loc_4BEFAE: mov 0x14(%esp),%ebx;");
    asm("loc_4BEFB2: mov 0x14(%esi),%ecx;");
    asm("loc_4BEFB5: mov (%ecx),%edx;");
    asm("loc_4BEFB7: push %ebx;");
    asm("loc_4BEFB8: push %eax;");
    asm("loc_4BEFB9: push $4;");
    asm("loc_4BEFBB: calll *0xA8(%edx);");
    asm("loc_4BEFC1: mov 0xC(%esp),%edx;");
    asm("loc_4BEFC5: mov 0x18(%esi),%ecx;");
    asm("loc_4BEFC8: mov (%ecx),%eax;");
    asm("loc_4BEFCA: push $0;");
    asm("loc_4BEFCC: push %edx;");
    asm("loc_4BEFCD: push $0x1E;");
    asm("loc_4BEFCF: calll *0xA8(%eax);");
    asm("loc_4BEFD5: flds 0x10(%edi);");
    asm("loc_4BEFD8: fmull _data_5CA320;");
    asm("loc_4BEFDE: call _sub_5B7EC0;");
    asm("loc_4BEFE3: mov %eax,0xC(%esp);");
    asm("loc_4BEFE7: fildl 0xC(%esp);");
    asm("loc_4BEFEB: mov 0x20(%esi),%eax;");
    asm("loc_4BEFEE: fstps 0x334(%eax);");
    asm("loc_4BEFF4: mov 0x14(%edi),%ecx;");
    asm("loc_4BEFF7: push %ecx;");
    asm("loc_4BEFF8: lea 0x20(%esp),%edx;");
    asm("loc_4BEFFC: push $_data_5D0EC4;");
    asm("loc_4BF001: push %edx;");
    asm("loc_4BF002: calll *_import_5C70EC;");
    asm("loc_4BF008: mov 0x1C(%esi),%ecx;");
    asm("loc_4BF00B: mov (%ecx),%eax;");
    asm("loc_4BF00D: add $0xC,%esp;");
    asm("loc_4BF010: push $0;");
    asm("loc_4BF012: lea 0x20(%esp),%edx;");
    asm("loc_4BF016: push %edx;");
    asm("loc_4BF017: push $0x1D;");
    asm("loc_4BF019: calll *0xA8(%eax);");
    asm("loc_4BF01F: mov %edi,0x24(%esi);");
    asm("loc_4BF022: mov (%edi),%cl;");
    asm("loc_4BF024: mov 8(%esi),%edi;");
    asm("loc_4BF027: mov 0x330(%edi),%dl;");
    asm("loc_4BF02D: mov %cl,%al;");
    asm("loc_4BF02F: shl $6,%al;");
    asm("loc_4BF032: mov %dl,%bl;");
    asm("loc_4BF034: xor %al,%bl;");
    asm("loc_4BF036: and $0x40,%bl;");
    asm("loc_4BF039: xor %dl,%bl;");
    asm("loc_4BF03B: mov %bl,0x330(%edi);");
    asm("loc_4BF041: mov 0xC(%esi),%edi;");
    asm("loc_4BF044: mov 0x330(%edi),%dl;");
    asm("loc_4BF04A: mov %dl,%bl;");
    asm("loc_4BF04C: xor %al,%bl;");
    asm("loc_4BF04E: and $0x40,%bl;");
    asm("loc_4BF051: xor %dl,%bl;");
    asm("loc_4BF053: xor %edx,%edx;");
    asm("loc_4BF055: cmp %dl,%cl;");
    asm("loc_4BF057: mov %bl,0x330(%edi);");
    asm("loc_4BF05D: je loc_4BF09C;");
    asm("loc_4BF05F: mov 8(%esi),%eax;");
    asm("loc_4BF062: mov $2,%ecx;");
    asm("loc_4BF067: mov %ecx,0x70(%eax);");
    asm("loc_4BF06A: mov 0x14(%esi),%eax;");
    asm("loc_4BF06D: mov %ecx,0x70(%eax);");
    asm("loc_4BF070: mov 0xC(%esi),%eax;");
    asm("loc_4BF073: mov %ecx,0x70(%eax);");
    asm("loc_4BF076: mov 0x20(%esi),%eax;");
    asm("loc_4BF079: mov %ecx,0x70(%eax);");
    asm("loc_4BF07C: mov 0x1C(%esi),%eax;");
    asm("loc_4BF07F: mov %ecx,0x70(%eax);");
    asm("loc_4BF082: mov 0x10(%esi),%eax;");
    asm("loc_4BF085: cmp %edx,%eax;");
    asm("loc_4BF087: je loc_4BF08C;");
    asm("loc_4BF089: mov %ecx,0x70(%eax);");
    asm("loc_4BF08C: pop %edi;");
    asm("loc_4BF08D: movb $1,0x28(%esi);");
    asm("loc_4BF091: pop %esi;");
    asm("loc_4BF092: pop %ebx;");
    asm("loc_4BF093: add $0x90,%esp;");
    asm("loc_4BF099: ret $4;");
    asm("loc_4BF09C: mov 8(%esi),%ecx;");
    asm("loc_4BF09F: mov 0x330(%ecx),%bl;");
    asm("loc_4BF0A5: mov $1,%eax;");
    asm("loc_4BF0AA: test %bl,%al;");
    asm("loc_4BF0AC: je loc_4BF0E2;");
    asm("loc_4BF0AE: mov %eax,0x70(%ecx);");
    asm("loc_4BF0B1: mov 0x14(%esi),%ecx;");
    asm("loc_4BF0B4: mov %eax,0x70(%ecx);");
    asm("loc_4BF0B7: mov 0xC(%esi),%ecx;");
    asm("loc_4BF0BA: mov %eax,0x70(%ecx);");
    asm("loc_4BF0BD: mov 0x20(%esi),%ecx;");
    asm("loc_4BF0C0: mov %eax,0x70(%ecx);");
    asm("loc_4BF0C3: mov 0x1C(%esi),%ecx;");
    asm("loc_4BF0C6: mov %eax,0x70(%ecx);");
    asm("loc_4BF0C9: mov 0x10(%esi),%ecx;");
    asm("loc_4BF0CC: cmp %edx,%ecx;");
    asm("loc_4BF0CE: je loc_4BF107;");
    asm("loc_4BF0D0: pop %edi;");
    asm("loc_4BF0D1: mov %eax,0x70(%ecx);");
    asm("loc_4BF0D4: mov %al,0x28(%esi);");
    asm("loc_4BF0D7: pop %esi;");
    asm("loc_4BF0D8: pop %ebx;");
    asm("loc_4BF0D9: add $0x90,%esp;");
    asm("loc_4BF0DF: ret $4;");
    asm("loc_4BF0E2: mov %edx,0x70(%ecx);");
    asm("loc_4BF0E5: mov 0x14(%esi),%ecx;");
    asm("loc_4BF0E8: mov %edx,0x70(%ecx);");
    asm("loc_4BF0EB: mov 0xC(%esi),%ecx;");
    asm("loc_4BF0EE: mov %edx,0x70(%ecx);");
    asm("loc_4BF0F1: mov 0x20(%esi),%ecx;");
    asm("loc_4BF0F4: mov %edx,0x70(%ecx);");
    asm("loc_4BF0F7: mov 0x1C(%esi),%ecx;");
    asm("loc_4BF0FA: mov %edx,0x70(%ecx);");
    asm("loc_4BF0FD: mov 0x10(%esi),%ecx;");
    asm("loc_4BF100: cmp %edx,%ecx;");
    asm("loc_4BF102: je loc_4BF107;");
    asm("loc_4BF104: mov %edx,0x70(%ecx);");
    asm("loc_4BF107: pop %edi;");
    asm("loc_4BF108: mov %al,0x28(%esi);");
    asm("loc_4BF10B: pop %esi;");
    asm("loc_4BF10C: pop %ebx;");
    asm("loc_4BF10D: add $0x90,%esp;");
    asm("loc_4BF113: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BF120() // _sub_4BF120
{
    __DEBUG_ASM(4BF120);
    // chunk 0x4BF120 _sub_4BF120
    asm("loc_4BF120: push $0xFFFFFFFF;");
    asm("loc_4BF122: push $_sub_5BD580;");
    asm("loc_4BF127: mov %fs:0,%eax;");
    asm("loc_4BF12D: push %eax;");
    asm("loc_4BF12E: mov %esp,%fs:0;");
    asm("loc_4BF135: sub $0xB8,%esp;");
    asm("loc_4BF13B: mov 3(%esp),%al;");
    asm("loc_4BF13F: push %ebx;");
    asm("loc_4BF140: push %ebp;");
    asm("loc_4BF141: push %esi;");
    asm("loc_4BF142: mov %ecx,%esi;");
    asm("loc_4BF144: lea 0x10(%esi),%ebp;");
    asm("loc_4BF147: xor %ebx,%ebx;");
    asm("loc_4BF149: push %edi;");
    asm("loc_4BF14A: mov %esi,0x94(%esp);");
    asm("loc_4BF151: mov %al,(%ebp);");
    asm("loc_4BF154: mov %ebx,4(%ebp);");
    asm("loc_4BF157: mov %ebx,8(%ebp);");
    asm("loc_4BF15A: mov %ebx,0xC(%ebp);");
    asm("loc_4BF15D: mov 0x13(%esp),%cl;");
    asm("loc_4BF161: lea 0x20(%esi),%edi;");
    asm("loc_4BF164: push %ebx;");
    asm("loc_4BF165: mov %cl,(%edi);");
    asm("loc_4BF167: push %ebx;");
    asm("loc_4BF168: mov %edi,%ecx;");
    asm("loc_4BF16A: mov %ebx,0xD8(%esp);");
    asm("loc_4BF171: calll *_import_5C6414;");
    asm("loc_4BF177: mov %eax,4(%edi);");
    asm("loc_4BF17A: mov %ebx,8(%edi);");
    asm("loc_4BF17D: lea 0x38(%esi),%edi;");
    asm("loc_4BF180: mov %edi,%ecx;");
    asm("loc_4BF182: movb $1,0xD0(%esp);");
    asm("loc_4BF18A: calll *_import_5C6364;");
    asm("loc_4BF190: mov 0xD8(%esp),%edx;");
    asm("loc_4BF197: mov 0xF8(%esp),%cl;");
    asm("loc_4BF19E: mov 0xF4(%esp),%eax;");
    asm("loc_4BF1A5: mov %edx,0xC(%esi);");
    asm("loc_4BF1A8: mov 0xFC(%esp),%dl;");
    asm("loc_4BF1AF: mov %cl,0x5C(%esi);");
    asm("loc_4BF1B2: push %ebx;");
    asm("loc_4BF1B3: mov %edi,%ecx;");
    asm("loc_4BF1B5: movl $_off_5D628C,(%esi);");
    asm("loc_4BF1BB: mov %ebx,0x2C(%esi);");
    asm("loc_4BF1BE: mov %eax,0x30(%esi);");
    asm("loc_4BF1C1: mov %bl,0x5D(%esi);");
    asm("loc_4BF1C4: mov %ebx,0x60(%esi);");
    asm("loc_4BF1C7: mov %ebx,0x64(%esi);");
    asm("loc_4BF1CA: mov %dl,0x5E(%esi);");
    asm("loc_4BF1CD: calll *_import_5C6428;");
    asm("loc_4BF1D3: lea 0x98(%esp),%ecx;");
    asm("loc_4BF1DA: mov %ebx,0x58(%esi);");
    asm("loc_4BF1DD: call _sub_4215B0;");
    asm("loc_4BF1E2: mov 0xD8(%esp),%ecx;");
    asm("loc_4BF1E9: mov (%ecx),%eax;");
    asm("loc_4BF1EB: lea 0x98(%esp),%edx;");
    asm("loc_4BF1F2: push %edx;");
    asm("loc_4BF1F3: mov 0xE0(%esp),%edx;");
    asm("loc_4BF1FA: push %edx;");
    asm("loc_4BF1FB: mov %ebx,0xCC(%esp);");
    asm("loc_4BF202: mov %ebx,0xC8(%esp);");
    asm("loc_4BF209: mov %ebx,0xC4(%esp);");
    asm("loc_4BF210: calll *0x90(%eax);");
    asm("loc_4BF216: mov 0xBC(%esp),%eax;");
    asm("loc_4BF21D: mov 0xC0(%esp),%ecx;");
    asm("loc_4BF224: mov 0xC4(%esp),%edx;");
    asm("loc_4BF22B: push $0x2C;");
    asm("loc_4BF22D: mov %eax,0x18(%esp);");
    asm("loc_4BF231: mov %ecx,0x1C(%esp);");
    asm("loc_4BF235: mov %edx,0x20(%esp);");
    asm("loc_4BF239: call _sub_5B7E84;");
    asm("loc_4BF23E: mov %eax,%edi;");
    asm("loc_4BF240: add $4,%esp;");
    asm("loc_4BF243: mov %edi,0x24(%esp);");
    asm("loc_4BF247: cmp %ebx,%edi;");
    asm("loc_4BF249: movb $2,0xD0(%esp);");
    asm("loc_4BF251: je loc_4BF271;");
    asm("loc_4BF253: lea 0x14(%esp),%ecx;");
    asm("loc_4BF257: movl $_off_5D6028,(%edi);");
    asm("loc_4BF25D: mov %esi,4(%edi);");
    asm("loc_4BF260: mov %ebx,0x24(%edi);");
    asm("loc_4BF263: mov 0xC(%esi),%eax;");
    asm("loc_4BF266: push %ecx;");
    asm("loc_4BF267: push %eax;");
    asm("loc_4BF268: mov %edi,%ecx;");
    asm("loc_4BF26A: call _sub_4BE7E0;");
    asm("loc_4BF26F: jmp loc_4BF273;");
    asm("loc_4BF271: xor %edi,%edi;");
    asm("loc_4BF273: mov 8(%ebp),%eax;");
    asm("loc_4BF276: lea 0x2C(%esp),%edx;");
    asm("loc_4BF27A: push %edx;");
    asm("loc_4BF27B: push $1;");
    asm("loc_4BF27D: push %eax;");
    asm("loc_4BF27E: mov %ebp,%ecx;");
    asm("loc_4BF280: movb $1,0xDC(%esp);");
    asm("loc_4BF288: mov %edi,0x38(%esp);");
    asm("loc_4BF28C: call _sub_537260;");
    asm("loc_4BF291: mov 0x2C(%esp),%eax;");
    asm("loc_4BF295: mov 0xC(%eax),%eax;");
    asm("loc_4BF298: cmp %ebx,%eax;");
    asm("loc_4BF29A: je loc_4BF2AA;");
    asm("loc_4BF29C: flds 0xB8(%eax);");
    asm("loc_4BF2A2: fadd %st,%st(0);");
    asm("loc_4BF2A4: fstps 0x20(%esp);");
    asm("loc_4BF2A8: jmp loc_4BF2B2;");
    asm("loc_4BF2AA: movl $0,0x20(%esp);");
    asm("loc_4BF2B2: mov 0xF4(%esp),%edi;");
    asm("loc_4BF2B9: cmp $1,%edi;");
    asm("loc_4BF2BC: jle loc_4BF339;");
    asm("loc_4BF2BE: dec %edi;");
    asm("loc_4BF2BF: mov %edi,0x28(%esp);");
    asm("loc_4BF2C3: flds 0x18(%esp);");
    asm("loc_4BF2C7: push $0x2C;");
    asm("loc_4BF2C9: fsubs 0x24(%esp);");
    asm("loc_4BF2CD: fstps 0x1C(%esp);");
    asm("loc_4BF2D1: call _sub_5B7E84;");
    asm("loc_4BF2D6: mov %eax,%edi;");
    asm("loc_4BF2D8: add $4,%esp;");
    asm("loc_4BF2DB: mov %edi,0x90(%esp);");
    asm("loc_4BF2E2: cmp %ebx,%edi;");
    asm("loc_4BF2E4: movb $3,0xD0(%esp);");
    asm("loc_4BF2EC: je loc_4BF30C;");
    asm("loc_4BF2EE: lea 0x14(%esp),%ecx;");
    asm("loc_4BF2F2: movl $_off_5D6028,(%edi);");
    asm("loc_4BF2F8: mov %esi,4(%edi);");
    asm("loc_4BF2FB: mov %ebx,0x24(%edi);");
    asm("loc_4BF2FE: mov 0xC(%esi),%eax;");
    asm("loc_4BF301: push %ecx;");
    asm("loc_4BF302: push %eax;");
    asm("loc_4BF303: mov %edi,%ecx;");
    asm("loc_4BF305: call _sub_4BE7E0;");
    asm("loc_4BF30A: jmp loc_4BF30E;");
    asm("loc_4BF30C: xor %edi,%edi;");
    asm("loc_4BF30E: mov 8(%ebp),%eax;");
    asm("loc_4BF311: lea 0x24(%esp),%edx;");
    asm("loc_4BF315: push %edx;");
    asm("loc_4BF316: push $1;");
    asm("loc_4BF318: push %eax;");
    asm("loc_4BF319: mov %ebp,%ecx;");
    asm("loc_4BF31B: movb $1,0xDC(%esp);");
    asm("loc_4BF323: mov %edi,0x30(%esp);");
    asm("loc_4BF327: call _sub_537260;");
    asm("loc_4BF32C: decl 0x28(%esp);");
    asm("loc_4BF330: jne loc_4BF2C3;");
    asm("loc_4BF332: mov 0xF4(%esp),%edi;");
    asm("loc_4BF339: cmp $4,%edi;");
    asm("loc_4BF33C: mov $_data_5D6250,%ebp;");
    asm("loc_4BF341: je loc_4BF348;");
    asm("loc_4BF343: mov $_data_5D6214,%ebp;");
    asm("loc_4BF348: mov _data_6728B8,%ecx;");
    asm("loc_4BF34E: push %ecx;");
    asm("loc_4BF34F: push $_data_5D6208;");
    asm("loc_4BF354: push $_data_5D601C;");
    asm("loc_4BF359: push $_data_6724B8;");
    asm("loc_4BF35E: movl $0x3C23D70A,0x24(%esp);");
    asm("loc_4BF366: movl $0x3C9374BC,0x28(%esp);");
    asm("loc_4BF36E: movl $0,0x2C(%esp);");
    asm("loc_4BF376: movl $0,0x40(%esp);");
    asm("loc_4BF37E: movl $0,0x44(%esp);");
    asm("loc_4BF386: movl $0,0x48(%esp);");
    asm("loc_4BF38E: movl $0,0x64(%esp);");
    asm("loc_4BF396: movl $0,0x68(%esp);");
    asm("loc_4BF39E: movl $0,0x6C(%esp);");
    asm("loc_4BF3A6: movl $0x3C449BA6,0x88(%esp);");
    asm("loc_4BF3B1: movl $0x3C1374BC,0x8C(%esp);");
    asm("loc_4BF3BC: movl $0,0x90(%esp);");
    asm("loc_4BF3C7: movl $0,0x4C(%esp);");
    asm("loc_4BF3CF: movl $0,0x50(%esp);");
    asm("loc_4BF3D7: movl $0,0x54(%esp);");
    asm("loc_4BF3DF: movl $0x3C449BA6,0x58(%esp);");
    asm("loc_4BF3E7: movl $0x3C1374BC,0x5C(%esp);");
    asm("loc_4BF3EF: movl $0,0x60(%esp);");
    asm("loc_4BF3F7: movl $0,0x7C(%esp);");
    asm("loc_4BF3FF: movl $0,0x80(%esp);");
    asm("loc_4BF40A: movl $0,0x84(%esp);");
    asm("loc_4BF415: movl $0x3C23D70A,0x94(%esp);");
    asm("loc_4BF420: movl $0x3E0F5C29,0x98(%esp);");
    asm("loc_4BF42B: movl $0,0x9C(%esp);");
    asm("loc_4BF436: movl $0,0x70(%esp);");
    asm("loc_4BF43E: movl $0,0x74(%esp);");
    asm("loc_4BF446: movl $0,0x78(%esp);");
    asm("loc_4BF44E: calll *_import_5C71EC;");
    asm("loc_4BF454: add $0x10,%esp;");
    asm("loc_4BF457: mov _data_6728B8,%eax;");
    asm("loc_4BF45C: push %ebx;");
    asm("loc_4BF45D: push %ebx;");
    asm("loc_4BF45E: push %edi;");
    asm("loc_4BF45F: mov 0xF8(%esp),%ecx;");
    asm("loc_4BF466: push %ebx;");
    asm("loc_4BF467: push %ebx;");
    asm("loc_4BF468: push %ebx;");
    asm("loc_4BF469: inc %eax;");
    asm("loc_4BF46A: mov %eax,_data_6728B8;");
    asm("loc_4BF46F: mov 0x108(%esp),%eax;");
    asm("loc_4BF476: lea 0x2C(%esp),%edx;");
    asm("loc_4BF47A: push %edx;");
    asm("loc_4BF47B: push %eax;");
    asm("loc_4BF47C: push %ecx;");
    asm("loc_4BF47D: lea 0x54(%esp),%edx;");
    asm("loc_4BF481: push %edx;");
    asm("loc_4BF482: mov 0x10C(%esp),%edx;");
    asm("loc_4BF489: lea 0x7C(%esp),%eax;");
    asm("loc_4BF48D: push %eax;");
    asm("loc_4BF48E: push $_data_5D61D4;");
    asm("loc_4BF493: push %ebx;");
    asm("loc_4BF494: lea 0xAC(%esp),%ecx;");
    asm("loc_4BF49B: push %ecx;");
    asm("loc_4BF49C: push %edx;");
    asm("loc_4BF49D: mov 0x124(%esp),%edx;");
    asm("loc_4BF4A4: lea 0x78(%esp),%eax;");
    asm("loc_4BF4A8: push %eax;");
    asm("loc_4BF4A9: push $_data_5D61A4;");
    asm("loc_4BF4AE: push %ebx;");
    asm("loc_4BF4AF: lea 0x90(%esp),%ecx;");
    asm("loc_4BF4B6: push %ecx;");
    asm("loc_4BF4B7: push %edx;");
    asm("loc_4BF4B8: mov 0x130(%esp),%edx;");
    asm("loc_4BF4BF: lea 0xBC(%esp),%eax;");
    asm("loc_4BF4C6: push %eax;");
    asm("loc_4BF4C7: push $_data_5D6170;");
    asm("loc_4BF4CC: push $1;");
    asm("loc_4BF4CE: lea 0xE0(%esp),%ecx;");
    asm("loc_4BF4D5: push %ecx;");
    asm("loc_4BF4D6: mov 0x138(%esp),%ecx;");
    asm("loc_4BF4DD: push %edx;");
    asm("loc_4BF4DE: lea 0xC4(%esp),%eax;");
    asm("loc_4BF4E5: push %eax;");
    asm("loc_4BF4E6: push %ebp;");
    asm("loc_4BF4E7: push $_data_6724B8;");
    asm("loc_4BF4EC: call _sub_5A0EF0;");
    asm("loc_4BF4F1: mov %eax,8(%esi);");
    asm("loc_4BF4F4: push $0xFFFFFFFF;");
    asm("loc_4BF4F6: mov %esi,%ecx;");
    asm("loc_4BF4F8: mov %esi,0x2F0(%eax);");
    asm("loc_4BF4FE: call _sub_4BF850;");
    asm("loc_4BF503: mov 0xC8(%esp),%ecx;");
    asm("loc_4BF50A: pop %edi;");
    asm("loc_4BF50B: mov %esi,%eax;");
    asm("loc_4BF50D: pop %esi;");
    asm("loc_4BF50E: pop %ebp;");
    asm("loc_4BF50F: pop %ebx;");
    asm("loc_4BF510: mov %ecx,%fs:0;");
    asm("loc_4BF517: add $0xC4,%esp;");
    asm("loc_4BF51D: ret $0x28;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BF520() // _sub_4BF520
{
    __DEBUG_ASM(4BF520);
    // chunk 0x4BF520 _sub_4BF520
    asm("loc_4BF520: push %esi;");
    asm("loc_4BF521: mov %ecx,%esi;");
    asm("loc_4BF523: call _sub_4BF540;");
    asm("loc_4BF528: testb $1,8(%esp);");
    asm("loc_4BF52D: je loc_4BF538;");
    asm("loc_4BF52F: push %esi;");
    asm("loc_4BF530: call _sub_5B7E1D;");
    asm("loc_4BF535: add $4,%esp;");
    asm("loc_4BF538: mov %esi,%eax;");
    asm("loc_4BF53A: pop %esi;");
    asm("loc_4BF53B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BF540() // _sub_4BF540
{
    __DEBUG_ASM(4BF540);
    // chunk 0x4BF540 _sub_4BF540
    asm("loc_4BF540: push $0xFFFFFFFF;");
    asm("loc_4BF542: push $_sub_5BD5A7;");
    asm("loc_4BF547: mov %fs:0,%eax;");
    asm("loc_4BF54D: push %eax;");
    asm("loc_4BF54E: mov %esp,%fs:0;");
    asm("loc_4BF555: sub $8,%esp;");
    asm("loc_4BF558: push %ebx;");
    asm("loc_4BF559: push %ebp;");
    asm("loc_4BF55A: push %esi;");
    asm("loc_4BF55B: mov %ecx,%esi;");
    asm("loc_4BF55D: push %edi;");
    asm("loc_4BF55E: mov %esi,0x10(%esp);");
    asm("loc_4BF562: movl $_off_5D628C,(%esi);");
    asm("loc_4BF568: mov 0x14(%esi),%edi;");
    asm("loc_4BF56B: mov 0x18(%esi),%eax;");
    asm("loc_4BF56E: cmp %eax,%edi;");
    asm("loc_4BF570: movl $1,0x20(%esp);");
    asm("loc_4BF578: je loc_4BF596;");
    asm("loc_4BF57A: lea (%ebx),%ebx;");
    asm("loc_4BF580: mov (%edi),%ecx;");
    asm("loc_4BF582: test %ecx,%ecx;");
    asm("loc_4BF584: je loc_4BF58C;");
    asm("loc_4BF586: mov (%ecx),%eax;");
    asm("loc_4BF588: push $1;");
    asm("loc_4BF58A: calll *(%eax);");
    asm("loc_4BF58C: mov 0x18(%esi),%eax;");
    asm("loc_4BF58F: add $4,%edi;");
    asm("loc_4BF592: cmp %eax,%edi;");
    asm("loc_4BF594: jne loc_4BF580;");
    asm("loc_4BF596: mov 0x18(%esi),%ecx;");
    asm("loc_4BF599: cmp %ecx,%ecx;");
    asm("loc_4BF59B: mov 0x14(%esi),%edx;");
    asm("loc_4BF59E: mov %ecx,%eax;");
    asm("loc_4BF5A0: je loc_4BF5B0;");
    asm("loc_4BF5A2: mov (%eax),%edi;");
    asm("loc_4BF5A4: mov %edi,(%edx);");
    asm("loc_4BF5A6: add $4,%eax;");
    asm("loc_4BF5A9: add $4,%edx;");
    asm("loc_4BF5AC: cmp %ecx,%eax;");
    asm("loc_4BF5AE: jne loc_4BF5A2;");
    asm("loc_4BF5B0: mov %edx,0x18(%esi);");
    asm("loc_4BF5B3: mov 0x24(%esi),%ebx;");
    asm("loc_4BF5B6: mov (%ebx),%edi;");
    asm("loc_4BF5B8: cmp %ebx,%edi;");
    asm("loc_4BF5BA: lea 0x20(%esi),%ebp;");
    asm("loc_4BF5BD: movb $0,0x20(%esp);");
    asm("loc_4BF5C2: je loc_4BF5DA;");
    asm("loc_4BF5C4: mov %edi,%eax;");
    asm("loc_4BF5C6: mov (%edi),%edi;");
    asm("loc_4BF5C8: push %eax;");
    asm("loc_4BF5C9: lea 0x18(%esp),%ecx;");
    asm("loc_4BF5CD: push %ecx;");
    asm("loc_4BF5CE: mov %ebp,%ecx;");
    asm("loc_4BF5D0: calll *_import_5C6188;");
    asm("loc_4BF5D6: cmp %ebx,%edi;");
    asm("loc_4BF5D8: jne loc_4BF5C4;");
    asm("loc_4BF5DA: mov 4(%ebp),%edx;");
    asm("loc_4BF5DD: push %edx;");
    asm("loc_4BF5DE: call _sub_5B7E1D;");
    asm("loc_4BF5E3: xor %edi,%edi;");
    asm("loc_4BF5E5: mov %edi,4(%ebp);");
    asm("loc_4BF5E8: mov %edi,8(%ebp);");
    asm("loc_4BF5EB: mov 0x14(%esi),%eax;");
    asm("loc_4BF5EE: push %eax;");
    asm("loc_4BF5EF: call _sub_5B7E1D;");
    asm("loc_4BF5F4: mov 0x20(%esp),%ecx;");
    asm("loc_4BF5F8: add $8,%esp;");
    asm("loc_4BF5FB: mov %edi,0x14(%esi);");
    asm("loc_4BF5FE: mov %edi,0x18(%esi);");
    asm("loc_4BF601: mov %edi,0x1C(%esi);");
    asm("loc_4BF604: pop %edi;");
    asm("loc_4BF605: pop %esi;");
    asm("loc_4BF606: pop %ebp;");
    asm("loc_4BF607: pop %ebx;");
    asm("loc_4BF608: mov %ecx,%fs:0;");
    asm("loc_4BF60F: add $0x14,%esp;");
    asm("loc_4BF612: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BF620() // _sub_4BF620
{
    __DEBUG_ASM(4BF620);
    // chunk 0x4BF620 _sub_4BF620
    asm("loc_4BF620: push %ecx;");
    asm("loc_4BF621: push %ebx;");
    asm("loc_4BF622: push %ebp;");
    asm("loc_4BF623: mov _import_5C642C,%ebp;");
    asm("loc_4BF629: push %esi;");
    asm("loc_4BF62A: push %edi;");
    asm("loc_4BF62B: lea 0x20(%ecx),%esi;");
    asm("loc_4BF62E: push $0;");
    asm("loc_4BF630: mov %ecx,0x14(%esp);");
    asm("loc_4BF634: push $0;");
    asm("loc_4BF636: mov %esi,%ecx;");
    asm("loc_4BF638: call *%ebp;");
    asm("loc_4BF63A: mov %eax,%ebx;");
    asm("loc_4BF63C: test %ebx,%ebx;");
    asm("loc_4BF63E: mov 0x18(%esp),%eax;");
    asm("loc_4BF642: je loc_4BF697;");
    asm("loc_4BF644: test %eax,%eax;");
    asm("loc_4BF646: jne loc_4BF6E5;");
    asm("loc_4BF64C: mov 4(%esi),%ebp;");
    asm("loc_4BF64F: mov (%ebp),%edi;");
    asm("loc_4BF652: cmp %ebp,%edi;");
    asm("loc_4BF654: je loc_4BF6F6;");
    asm("loc_4BF65A: lea (%ebx),%ebx;");
    asm("loc_4BF660: mov 0xA(%edi),%ax;");
    asm("loc_4BF664: cmp 2(%ebx),%ax;");
    asm("loc_4BF668: jne loc_4BF68F;");
    asm("loc_4BF66A: mov %edi,%eax;");
    asm("loc_4BF66C: mov 4(%eax),%ecx;");
    asm("loc_4BF66F: mov (%eax),%edx;");
    asm("loc_4BF671: mov (%edi),%edi;");
    asm("loc_4BF673: mov %edx,(%ecx);");
    asm("loc_4BF675: mov (%eax),%ecx;");
    asm("loc_4BF677: mov 4(%eax),%edx;");
    asm("loc_4BF67A: push %eax;");
    asm("loc_4BF67B: mov %edx,4(%ecx);");
    asm("loc_4BF67E: call _sub_5B7E1D;");
    asm("loc_4BF683: mov 8(%esi),%eax;");
    asm("loc_4BF686: add $4,%esp;");
    asm("loc_4BF689: dec %eax;");
    asm("loc_4BF68A: mov %eax,8(%esi);");
    asm("loc_4BF68D: jmp loc_4BF691;");
    asm("loc_4BF68F: mov (%edi),%edi;");
    asm("loc_4BF691: cmp %ebp,%edi;");
    asm("loc_4BF693: jne loc_4BF660;");
    asm("loc_4BF695: jmp loc_4BF6F6;");
    asm("loc_4BF697: test %eax,%eax;");
    asm("loc_4BF699: je loc_4BF6F6;");
    asm("loc_4BF69B: mov 4(%esi),%edi;");
    asm("loc_4BF69E: mov 4(%edi),%ebx;");
    asm("loc_4BF6A1: push $0x28;");
    asm("loc_4BF6A3: call _sub_5B7E84;");
    asm("loc_4BF6A8: add $4,%esp;");
    asm("loc_4BF6AB: test %ebx,%ebx;");
    asm("loc_4BF6AD: mov %edi,(%eax);");
    asm("loc_4BF6AF: mov %ebx,%ecx;");
    asm("loc_4BF6B1: jne loc_4BF6B5;");
    asm("loc_4BF6B3: mov %eax,%ecx;");
    asm("loc_4BF6B5: mov 0x10(%esp),%edx;");
    asm("loc_4BF6B9: mov %ecx,4(%eax);");
    asm("loc_4BF6BC: mov %eax,4(%edi);");
    asm("loc_4BF6BF: mov 4(%eax),%ecx;");
    asm("loc_4BF6C2: add $0x38,%edx;");
    asm("loc_4BF6C5: mov %eax,(%ecx);");
    asm("loc_4BF6C7: push %edx;");
    asm("loc_4BF6C8: add $8,%eax;");
    asm("loc_4BF6CB: push %eax;");
    asm("loc_4BF6CC: call _sub_4B7390;");
    asm("loc_4BF6D1: mov 8(%esi),%edx;");
    asm("loc_4BF6D4: add $8,%esp;");
    asm("loc_4BF6D7: push $0;");
    asm("loc_4BF6D9: inc %edx;");
    asm("loc_4BF6DA: push $0;");
    asm("loc_4BF6DC: mov %esi,%ecx;");
    asm("loc_4BF6DE: mov %edx,8(%esi);");
    asm("loc_4BF6E1: call *%ebp;");
    asm("loc_4BF6E3: mov %eax,%ebx;");
    asm("loc_4BF6E5: test %ebx,%ebx;");
    asm("loc_4BF6E7: je loc_4BF6F6;");
    asm("loc_4BF6E9: mov 0x18(%esp),%eax;");
    asm("loc_4BF6ED: push %eax;");
    asm("loc_4BF6EE: mov %ebx,%ecx;");
    asm("loc_4BF6F0: calll *_import_5C6428;");
    asm("loc_4BF6F6: mov 0x18(%esp),%ecx;");
    asm("loc_4BF6FA: mov 0x10(%esp),%esi;");
    asm("loc_4BF6FE: push %ecx;");
    asm("loc_4BF6FF: lea 0x38(%esi),%ecx;");
    asm("loc_4BF702: calll *_import_5C6428;");
    asm("loc_4BF708: push $0xFFFFFFFF;");
    asm("loc_4BF70A: mov %esi,%ecx;");
    asm("loc_4BF70C: call _sub_4BF850;");
    asm("loc_4BF711: mov 0x18(%esp),%eax;");
    asm("loc_4BF715: pop %edi;");
    asm("loc_4BF716: pop %esi;");
    asm("loc_4BF717: pop %ebp;");
    asm("loc_4BF718: pop %ebx;");
    asm("loc_4BF719: pop %ecx;");
    asm("loc_4BF71A: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BF720() // _sub_4BF720
{
    __DEBUG_ASM(4BF720);
    // chunk 0x4BF720 _sub_4BF720
    asm("loc_4BF720: sub $0x2C,%esp;");
    asm("loc_4BF723: push %ebx;");
    asm("loc_4BF724: push %ebp;");
    asm("loc_4BF725: push %esi;");
    asm("loc_4BF726: push %edi;");
    asm("loc_4BF727: mov %ecx,%edi;");
    asm("loc_4BF729: mov %edi,0x10(%esp);");
    asm("loc_4BF72D: call _sub_4C4060;");
    asm("loc_4BF732: mov %eax,%ebp;");
    asm("loc_4BF734: mov 0x24(%edi),%eax;");
    asm("loc_4BF737: mov (%eax),%ecx;");
    asm("loc_4BF739: lea 0x20(%edi),%ebx;");
    asm("loc_4BF73C: push %eax;");
    asm("loc_4BF73D: push %ecx;");
    asm("loc_4BF73E: lea 0x20(%esp),%eax;");
    asm("loc_4BF742: push %eax;");
    asm("loc_4BF743: mov %ebx,%ecx;");
    asm("loc_4BF745: mov %ebp,0x20(%esp);");
    asm("loc_4BF749: calll *_import_5C618C;");
    asm("loc_4BF74F: call _sub_4C4CE0;");
    asm("loc_4BF754: test %eax,%eax;");
    asm("loc_4BF756: je loc_4BF77B;");
    asm("loc_4BF758: lea 0x38(%edi),%esi;");
    asm("loc_4BF75B: call _sub_4C4CE0;");
    asm("loc_4BF760: push %eax;");
    asm("loc_4BF761: mov %esi,%ecx;");
    asm("loc_4BF763: calll *_import_5C6428;");
    asm("loc_4BF769: mov 4(%ebx),%eax;");
    asm("loc_4BF76C: push %esi;");
    asm("loc_4BF76D: push %eax;");
    asm("loc_4BF76E: lea 0x20(%esp),%ecx;");
    asm("loc_4BF772: push %ecx;");
    asm("loc_4BF773: mov %ebx,%ecx;");
    asm("loc_4BF775: calll *_import_5C6228;");
    asm("loc_4BF77B: mov 4(%ebp),%eax;");
    asm("loc_4BF77E: mov (%eax),%esi;");
    asm("loc_4BF780: cmp %eax,%esi;");
    asm("loc_4BF782: je loc_4BF81F;");
    asm("loc_4BF788: mov 8(%esi),%dl;");
    asm("loc_4BF78B: mov 0xC(%esi),%ecx;");
    asm("loc_4BF78E: mov 0xA(%esi),%ax;");
    asm("loc_4BF792: mov %dl,0x1C(%esp);");
    asm("loc_4BF796: mov 0x10(%esi),%edx;");
    asm("loc_4BF799: mov %ecx,0x20(%esp);");
    asm("loc_4BF79D: mov 0x18(%esi),%ecx;");
    asm("loc_4BF7A0: mov %edx,0x24(%esp);");
    asm("loc_4BF7A4: mov 0x1C(%esi),%edx;");
    asm("loc_4BF7A7: mov %ax,0x1E(%esp);");
    asm("loc_4BF7AC: mov 0x14(%esi),%al;");
    asm("loc_4BF7AF: test %al,%al;");
    asm("loc_4BF7B1: mov %ecx,0x2C(%esp);");
    asm("loc_4BF7B5: mov 0x20(%esi),%cl;");
    asm("loc_4BF7B8: mov %edx,0x30(%esp);");
    asm("loc_4BF7BC: mov 0x24(%esi),%edx;");
    asm("loc_4BF7BF: mov %al,0x28(%esp);");
    asm("loc_4BF7C3: mov %cl,0x34(%esp);");
    asm("loc_4BF7C7: mov %edx,0x38(%esp);");
    asm("loc_4BF7CB: jne loc_4BF814;");
    asm("loc_4BF7CD: test %cl,%cl;");
    asm("loc_4BF7CF: jne loc_4BF814;");
    asm("loc_4BF7D1: mov 4(%ebx),%edi;");
    asm("loc_4BF7D4: mov 4(%edi),%ebp;");
    asm("loc_4BF7D7: push $0x28;");
    asm("loc_4BF7D9: call _sub_5B7E84;");
    asm("loc_4BF7DE: add $4,%esp;");
    asm("loc_4BF7E1: test %ebp,%ebp;");
    asm("loc_4BF7E3: mov %edi,(%eax);");
    asm("loc_4BF7E5: jne loc_4BF7E9;");
    asm("loc_4BF7E7: mov %eax,%ebp;");
    asm("loc_4BF7E9: mov %ebp,4(%eax);");
    asm("loc_4BF7EC: mov %eax,4(%edi);");
    asm("loc_4BF7EF: mov 4(%eax),%ecx;");
    asm("loc_4BF7F2: lea 0x1C(%esp),%edx;");
    asm("loc_4BF7F6: mov %eax,(%ecx);");
    asm("loc_4BF7F8: push %edx;");
    asm("loc_4BF7F9: add $8,%eax;");
    asm("loc_4BF7FC: push %eax;");
    asm("loc_4BF7FD: call _sub_4B7390;");
    asm("loc_4BF802: mov 8(%ebx),%eax;");
    asm("loc_4BF805: mov 0x18(%esp),%edi;");
    asm("loc_4BF809: mov 0x1C(%esp),%ebp;");
    asm("loc_4BF80D: add $8,%esp;");
    asm("loc_4BF810: inc %eax;");
    asm("loc_4BF811: mov %eax,8(%ebx);");
    asm("loc_4BF814: mov (%esi),%esi;");
    asm("loc_4BF816: cmp 4(%ebp),%esi;");
    asm("loc_4BF819: jne loc_4BF788;");
    asm("loc_4BF81F: push $0xFFFFFFFF;");
    asm("loc_4BF821: mov %edi,%ecx;");
    asm("loc_4BF823: call _sub_4BF850;");
    asm("loc_4BF828: mov 0x28(%edi),%eax;");
    asm("loc_4BF82B: sub 0x30(%edi),%eax;");
    asm("loc_4BF82E: jns loc_4BF832;");
    asm("loc_4BF830: xor %eax,%eax;");
    asm("loc_4BF832: mov 8(%edi),%ecx;");
    asm("loc_4BF835: mov (%ecx),%edx;");
    asm("loc_4BF837: push %eax;");
    asm("loc_4BF838: push $0;");
    asm("loc_4BF83A: push $0x37;");
    asm("loc_4BF83C: calll *0xA8(%edx);");
    asm("loc_4BF842: pop %edi;");
    asm("loc_4BF843: pop %esi;");
    asm("loc_4BF844: pop %ebp;");
    asm("loc_4BF845: pop %ebx;");
    asm("loc_4BF846: add $0x2C,%esp;");
    asm("loc_4BF849: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BF850() // _sub_4BF850
{
    __DEBUG_ASM(4BF850);
    // chunk 0x4BF850 _sub_4BF850
    asm("loc_4BF850: mov 4(%esp),%eax;");
    asm("loc_4BF854: sub $8,%esp;");
    asm("loc_4BF857: test %eax,%eax;");
    asm("loc_4BF859: push %ebx;");
    asm("loc_4BF85A: push %ebp;");
    asm("loc_4BF85B: push %esi;");
    asm("loc_4BF85C: push %edi;");
    asm("loc_4BF85D: mov %ecx,%ebp;");
    asm("loc_4BF85F: jge loc_4BFA27;");
    asm("loc_4BF865: mov 0x24(%ebp),%eax;");
    asm("loc_4BF868: mov (%eax),%ebx;");
    asm("loc_4BF86A: mov 0x2C(%ebp),%eax;");
    asm("loc_4BF86D: test %eax,%eax;");
    asm("loc_4BF86F: mov 0x14(%ebp),%esi;");
    asm("loc_4BF872: mov %ebx,0x14(%esp);");
    asm("loc_4BF876: jle loc_4BF883;");
    asm("loc_4BF878: dec %eax;");
    asm("loc_4BF879: mov (%ebx),%ecx;");
    asm("loc_4BF87B: mov %ecx,0x14(%esp);");
    asm("loc_4BF87F: mov %ecx,%ebx;");
    asm("loc_4BF881: jne loc_4BF878;");
    asm("loc_4BF883: cmp 0x18(%ebp),%esi;");
    asm("loc_4BF886: je loc_4BFB4C;");
    asm("loc_4BF88C: jmp loc_4BF892;");
    asm("loc_4BF88E: mov 0x14(%esp),%ebx;");
    asm("loc_4BF892: cmp 0x24(%ebp),%ebx;");
    asm("loc_4BF895: je loc_4BF9C2;");
    asm("loc_4BF89B: mov (%esi),%ecx;");
    asm("loc_4BF89D: lea 8(%ebx),%edx;");
    asm("loc_4BF8A0: push %edx;");
    asm("loc_4BF8A1: call _sub_4BEF00;");
    asm("loc_4BF8A6: mov 0x5D(%ebp),%al;");
    asm("loc_4BF8A9: test %al,%al;");
    asm("loc_4BF8AB: je loc_4BF927;");
    asm("loc_4BF8AD: mov (%esi),%edi;");
    asm("loc_4BF8AF: mov %edi,%ecx;");
    asm("loc_4BF8B1: call _sub_4BED40;");
    asm("loc_4BF8B6: mov 8(%edi),%ecx;");
    asm("loc_4BF8B9: mov (%ecx),%eax;");
    asm("loc_4BF8BB: push $0;");
    asm("loc_4BF8BD: push $0;");
    asm("loc_4BF8BF: push $1;");
    asm("loc_4BF8C1: calll *0xA8(%eax);");
    asm("loc_4BF8C7: mov 0x14(%edi),%ecx;");
    asm("loc_4BF8CA: mov (%ecx),%edx;");
    asm("loc_4BF8CC: push $0;");
    asm("loc_4BF8CE: push $0;");
    asm("loc_4BF8D0: push $1;");
    asm("loc_4BF8D2: calll *0xA8(%edx);");
    asm("loc_4BF8D8: mov 0x20(%edi),%ecx;");
    asm("loc_4BF8DB: mov (%ecx),%eax;");
    asm("loc_4BF8DD: push $0;");
    asm("loc_4BF8DF: push $0;");
    asm("loc_4BF8E1: push $1;");
    asm("loc_4BF8E3: calll *0xA8(%eax);");
    asm("loc_4BF8E9: mov 0x24(%edi),%eax;");
    asm("loc_4BF8EC: test %eax,%eax;");
    asm("loc_4BF8EE: je loc_4BF919;");
    asm("loc_4BF8F0: mov 4(%eax),%ecx;");
    asm("loc_4BF8F3: test %ecx,%ecx;");
    asm("loc_4BF8F5: jne loc_4BF919;");
    asm("loc_4BF8F7: mov 8(%edi),%ecx;");
    asm("loc_4BF8FA: mov (%ecx),%edx;");
    asm("loc_4BF8FC: push $0;");
    asm("loc_4BF8FE: push $1;");
    asm("loc_4BF900: push $2;");
    asm("loc_4BF902: calll *0xA8(%edx);");
    asm("loc_4BF908: mov 0x14(%edi),%ecx;");
    asm("loc_4BF90B: mov (%ecx),%eax;");
    asm("loc_4BF90D: push $0;");
    asm("loc_4BF90F: push $1;");
    asm("loc_4BF911: push $2;");
    asm("loc_4BF913: calll *0xA8(%eax);");
    asm("loc_4BF919: push $1;");
    asm("loc_4BF91B: mov %edi,%ecx;");
    asm("loc_4BF91D: call _sub_4BEE70;");
    asm("loc_4BF922: jmp loc_4BF9AE;");
    asm("loc_4BF927: mov (%esi),%eax;");
    asm("loc_4BF929: mov 8(%eax),%edi;");
    asm("loc_4BF92C: mov 0x331(%edi),%dl;");
    asm("loc_4BF932: mov 0x5E(%ebp),%cl;");
    asm("loc_4BF935: mov %dl,%bl;");
    asm("loc_4BF937: mov %cl,0x1C(%esp);");
    asm("loc_4BF93B: shl $2,%cl;");
    asm("loc_4BF93E: xor %cl,%bl;");
    asm("loc_4BF940: and $4,%bl;");
    asm("loc_4BF943: xor %dl,%bl;");
    asm("loc_4BF945: mov 0x1C(%esp),%dl;");
    asm("loc_4BF949: mov %bl,0x331(%edi);");
    asm("loc_4BF94F: mov 8(%eax),%edi;");
    asm("loc_4BF952: mov 0x331(%edi),%bl;");
    asm("loc_4BF958: mov %bl,0x1C(%esp);");
    asm("loc_4BF95C: shl $3,%dl;");
    asm("loc_4BF95F: mov %dl,%bl;");
    asm("loc_4BF961: mov %dl,0x13(%esp);");
    asm("loc_4BF965: mov 0x1C(%esp),%dl;");
    asm("loc_4BF969: xor %dl,%bl;");
    asm("loc_4BF96B: and $8,%bl;");
    asm("loc_4BF96E: xor %dl,%bl;");
    asm("loc_4BF970: mov %bl,0x331(%edi);");
    asm("loc_4BF976: mov 0xC(%eax),%edi;");
    asm("loc_4BF979: mov 0x331(%edi),%dl;");
    asm("loc_4BF97F: mov %dl,%bl;");
    asm("loc_4BF981: xor %cl,%bl;");
    asm("loc_4BF983: and $4,%bl;");
    asm("loc_4BF986: xor %dl,%bl;");
    asm("loc_4BF988: mov %bl,0x331(%edi);");
    asm("loc_4BF98E: mov 0xC(%eax),%eax;");
    asm("loc_4BF991: mov 0x331(%eax),%cl;");
    asm("loc_4BF997: mov 0x13(%esp),%bl;");
    asm("loc_4BF99B: mov %cl,%dl;");
    asm("loc_4BF99D: xor %bl,%dl;");
    asm("loc_4BF99F: mov 0x14(%esp),%ebx;");
    asm("loc_4BF9A3: and $8,%dl;");
    asm("loc_4BF9A6: xor %cl,%dl;");
    asm("loc_4BF9A8: mov %dl,0x331(%eax);");
    asm("loc_4BF9AE: mov (%ebx),%eax;");
    asm("loc_4BF9B0: mov %eax,0x14(%esp);");
    asm("loc_4BF9B4: mov 0x18(%ebp),%eax;");
    asm("loc_4BF9B7: add $4,%esi;");
    asm("loc_4BF9BA: cmp %eax,%esi;");
    asm("loc_4BF9BC: jne loc_4BF88E;");
    asm("loc_4BF9C2: cmp 0x18(%ebp),%esi;");
    asm("loc_4BF9C5: je loc_4BFB4C;");
    asm("loc_4BF9CB: nop;");
    asm("loc_4BF9CC: lea (%esp),%esp;");
    asm("loc_4BF9D0: mov (%esi),%edi;");
    asm("loc_4BF9D2: mov 0x14(%edi),%ecx;");
    asm("loc_4BF9D5: mov (%ecx),%edx;");
    asm("loc_4BF9D7: push $0;");
    asm("loc_4BF9D9: push $_data_5D6068;");
    asm("loc_4BF9DE: push $4;");
    asm("loc_4BF9E0: calll *0xA8(%edx);");
    asm("loc_4BF9E6: mov 0x18(%edi),%ecx;");
    asm("loc_4BF9E9: mov (%ecx),%eax;");
    asm("loc_4BF9EB: push $0;");
    asm("loc_4BF9ED: push $0;");
    asm("loc_4BF9EF: push $0x1E;");
    asm("loc_4BF9F1: calll *0xA8(%eax);");
    asm("loc_4BF9F7: mov 0x1C(%edi),%ecx;");
    asm("loc_4BF9FA: mov (%ecx),%edx;");
    asm("loc_4BF9FC: push $0;");
    asm("loc_4BF9FE: push $0;");
    asm("loc_4BFA00: push $0x1E;");
    asm("loc_4BFA02: calll *0xA8(%edx);");
    asm("loc_4BFA08: mov %edi,%ecx;");
    asm("loc_4BFA0A: movb $0,0x28(%edi);");
    asm("loc_4BFA0E: call _sub_4BED40;");
    asm("loc_4BFA13: mov 0x18(%ebp),%eax;");
    asm("loc_4BFA16: add $4,%esi;");
    asm("loc_4BFA19: cmp %eax,%esi;");
    asm("loc_4BFA1B: jne loc_4BF9D0;");
    asm("loc_4BFA1D: pop %edi;");
    asm("loc_4BFA1E: pop %esi;");
    asm("loc_4BFA1F: pop %ebp;");
    asm("loc_4BFA20: pop %ebx;");
    asm("loc_4BFA21: add $8,%esp;");
    asm("loc_4BFA24: ret $4;");
    asm("loc_4BFA27: mov 0x24(%ebp),%ecx;");
    asm("loc_4BFA2A: mov 0x2C(%ebp),%edx;");
    asm("loc_4BFA2D: mov (%ecx),%ebx;");
    asm("loc_4BFA2F: mov 0x30(%ebp),%ecx;");
    asm("loc_4BFA32: mov %eax,%edi;");
    asm("loc_4BFA34: sub %edx,%edi;");
    asm("loc_4BFA36: cmp %ecx,%edi;");
    asm("loc_4BFA38: jge loc_4BFB4C;");
    asm("loc_4BFA3E: test %edi,%edi;");
    asm("loc_4BFA40: jl loc_4BFB4C;");
    asm("loc_4BFA46: test %eax,%eax;");
    asm("loc_4BFA48: jle loc_4BFA55;");
    asm("loc_4BFA4A: lea (%ebx),%ebx;");
    asm("loc_4BFA50: dec %eax;");
    asm("loc_4BFA51: mov (%ebx),%ebx;");
    asm("loc_4BFA53: jne loc_4BFA50;");
    asm("loc_4BFA55: mov 0x14(%ebp),%ecx;");
    asm("loc_4BFA58: test %ecx,%ecx;");
    asm("loc_4BFA5A: lea 0x10(%ebp),%esi;");
    asm("loc_4BFA5D: je loc_4BFA6B;");
    asm("loc_4BFA5F: mov 8(%esi),%eax;");
    asm("loc_4BFA62: sub %ecx,%eax;");
    asm("loc_4BFA64: sar $2,%eax;");
    asm("loc_4BFA67: cmp %edi,%eax;");
    asm("loc_4BFA69: ja loc_4BFA72;");
    asm("loc_4BFA6B: mov %esi,%ecx;");
    asm("loc_4BFA6D: call _sub_4C38B0;");
    asm("loc_4BFA72: mov 4(%esi),%edx;");
    asm("loc_4BFA75: mov (%edx,%edi,4),%ecx;");
    asm("loc_4BFA78: add $8,%ebx;");
    asm("loc_4BFA7B: push %ebx;");
    asm("loc_4BFA7C: call _sub_4BEF00;");
    asm("loc_4BFA81: mov 0x5D(%ebp),%al;");
    asm("loc_4BFA84: test %al,%al;");
    asm("loc_4BFA86: je loc_4BFB29;");
    asm("loc_4BFA8C: mov 4(%esi),%ecx;");
    asm("loc_4BFA8F: test %ecx,%ecx;");
    asm("loc_4BFA91: je loc_4BFA9F;");
    asm("loc_4BFA93: mov 8(%esi),%eax;");
    asm("loc_4BFA96: sub %ecx,%eax;");
    asm("loc_4BFA98: sar $2,%eax;");
    asm("loc_4BFA9B: cmp %edi,%eax;");
    asm("loc_4BFA9D: ja loc_4BFAA6;");
    asm("loc_4BFA9F: mov %esi,%ecx;");
    asm("loc_4BFAA1: call _sub_4C38B0;");
    asm("loc_4BFAA6: mov 4(%esi),%eax;");
    asm("loc_4BFAA9: mov (%eax,%edi,4),%esi;");
    asm("loc_4BFAAC: mov %esi,%ecx;");
    asm("loc_4BFAAE: call _sub_4BED40;");
    asm("loc_4BFAB3: mov 8(%esi),%ecx;");
    asm("loc_4BFAB6: mov (%ecx),%edx;");
    asm("loc_4BFAB8: push $0;");
    asm("loc_4BFABA: push $0;");
    asm("loc_4BFABC: push $1;");
    asm("loc_4BFABE: calll *0xA8(%edx);");
    asm("loc_4BFAC4: mov 0x14(%esi),%ecx;");
    asm("loc_4BFAC7: mov (%ecx),%eax;");
    asm("loc_4BFAC9: push $0;");
    asm("loc_4BFACB: push $0;");
    asm("loc_4BFACD: push $1;");
    asm("loc_4BFACF: calll *0xA8(%eax);");
    asm("loc_4BFAD5: mov 0x20(%esi),%ecx;");
    asm("loc_4BFAD8: mov (%ecx),%edx;");
    asm("loc_4BFADA: push $0;");
    asm("loc_4BFADC: push $0;");
    asm("loc_4BFADE: push $1;");
    asm("loc_4BFAE0: calll *0xA8(%edx);");
    asm("loc_4BFAE6: mov 0x24(%esi),%eax;");
    asm("loc_4BFAE9: test %eax,%eax;");
    asm("loc_4BFAEB: je loc_4BFB16;");
    asm("loc_4BFAED: mov 4(%eax),%ecx;");
    asm("loc_4BFAF0: test %ecx,%ecx;");
    asm("loc_4BFAF2: jne loc_4BFB16;");
    asm("loc_4BFAF4: mov 8(%esi),%ecx;");
    asm("loc_4BFAF7: mov (%ecx),%eax;");
    asm("loc_4BFAF9: push $0;");
    asm("loc_4BFAFB: push $1;");
    asm("loc_4BFAFD: push $2;");
    asm("loc_4BFAFF: calll *0xA8(%eax);");
    asm("loc_4BFB05: mov 0x14(%esi),%ecx;");
    asm("loc_4BFB08: mov (%ecx),%edx;");
    asm("loc_4BFB0A: push $0;");
    asm("loc_4BFB0C: push $1;");
    asm("loc_4BFB0E: push $2;");
    asm("loc_4BFB10: calll *0xA8(%edx);");
    asm("loc_4BFB16: push $1;");
    asm("loc_4BFB18: mov %esi,%ecx;");
    asm("loc_4BFB1A: call _sub_4BEE70;");
    asm("loc_4BFB1F: pop %edi;");
    asm("loc_4BFB20: pop %esi;");
    asm("loc_4BFB21: pop %ebp;");
    asm("loc_4BFB22: pop %ebx;");
    asm("loc_4BFB23: add $8,%esp;");
    asm("loc_4BFB26: ret $4;");
    asm("loc_4BFB29: mov %esi,%ecx;");
    asm("loc_4BFB2B: call _sub_5AD970;");
    asm("loc_4BFB30: cmp %edi,%eax;");
    asm("loc_4BFB32: ja loc_4BFB3B;");
    asm("loc_4BFB34: mov %esi,%ecx;");
    asm("loc_4BFB36: call _sub_4C38B0;");
    asm("loc_4BFB3B: mov 4(%esi),%ecx;");
    asm("loc_4BFB3E: mov (%ecx,%edi,4),%ecx;");
    asm("loc_4BFB41: xor %eax,%eax;");
    asm("loc_4BFB43: mov 0x5E(%ebp),%al;");
    asm("loc_4BFB46: push %eax;");
    asm("loc_4BFB47: call _sub_4BEE70;");
    asm("loc_4BFB4C: pop %edi;");
    asm("loc_4BFB4D: pop %esi;");
    asm("loc_4BFB4E: pop %ebp;");
    asm("loc_4BFB4F: pop %ebx;");
    asm("loc_4BFB50: add $8,%esp;");
    asm("loc_4BFB53: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BFB60() // _sub_4BFB60
{
    __DEBUG_ASM(4BFB60);
    // chunk 0x4BFB60 _sub_4BFB60
    asm("loc_4BFB60: push %esi;");
    asm("loc_4BFB61: mov %ecx,%esi;");
    asm("loc_4BFB63: call _sub_59F860;");
    asm("loc_4BFB68: movl $_off_5CBED8,0x32C(%esi);");
    asm("loc_4BFB72: xor %eax,%eax;");
    asm("loc_4BFB74: movl $_off_5D62AC,(%esi);");
    asm("loc_4BFB7A: movl $_off_5D629C,0x7C(%esi);");
    asm("loc_4BFB81: movl $_off_5D6294,0x32C(%esi);");
    asm("loc_4BFB8B: mov %esi,_data_6724B4;");
    asm("loc_4BFB91: mov %eax,0x330(%esi);");
    asm("loc_4BFB97: mov %eax,0x334(%esi);");
    asm("loc_4BFB9D: mov %eax,0x338(%esi);");
    asm("loc_4BFBA3: mov %eax,0x424(%esi);");
    asm("loc_4BFBA9: mov %eax,0x428(%esi);");
    asm("loc_4BFBAF: mov %eax,0x3A0(%esi);");
    asm("loc_4BFBB5: mov %eax,0x3A4(%esi);");
    asm("loc_4BFBBB: mov %eax,0x3A8(%esi);");
    asm("loc_4BFBC1: mov %eax,0x398(%esi);");
    asm("loc_4BFBC7: mov %eax,0x39C(%esi);");
    asm("loc_4BFBCD: mov %eax,0x430(%esi);");
    asm("loc_4BFBD3: mov %eax,0x3B4(%esi);");
    asm("loc_4BFBD9: mov %eax,0x3B8(%esi);");
    asm("loc_4BFBDF: mov %eax,0x3BC(%esi);");
    asm("loc_4BFBE5: mov %eax,0x3D8(%esi);");
    asm("loc_4BFBEB: mov %eax,0x3DC(%esi);");
    asm("loc_4BFBF1: mov %eax,0x3E0(%esi);");
    asm("loc_4BFBF7: mov %eax,0x3C0(%esi);");
    asm("loc_4BFBFD: mov %eax,0x3C4(%esi);");
    asm("loc_4BFC03: mov %eax,0x3E8(%esi);");
    asm("loc_4BFC09: mov %eax,0x3EC(%esi);");
    asm("loc_4BFC0F: mov %eax,0x3F0(%esi);");
    asm("loc_4BFC15: mov %eax,0x3F4(%esi);");
    asm("loc_4BFC1B: mov %al,0x418(%esi);");
    asm("loc_4BFC21: mov %al,0x419(%esi);");
    asm("loc_4BFC27: mov %eax,0x410(%esi);");
    asm("loc_4BFC2D: mov %eax,0x414(%esi);");
    asm("loc_4BFC33: mov %eax,0x3AC(%esi);");
    asm("loc_4BFC39: mov %eax,0x3B0(%esi);");
    asm("loc_4BFC3F: mov %eax,0x390(%esi);");
    asm("loc_4BFC45: mov %eax,0x33C(%esi);");
    asm("loc_4BFC4B: mov %eax,0x344(%esi);");
    asm("loc_4BFC51: mov %eax,0x348(%esi);");
    asm("loc_4BFC57: mov %eax,0x34C(%esi);");
    asm("loc_4BFC5D: mov %eax,0x350(%esi);");
    asm("loc_4BFC63: mov %eax,0x354(%esi);");
    asm("loc_4BFC69: mov %eax,0x358(%esi);");
    asm("loc_4BFC6F: mov %eax,0x364(%esi);");
    asm("loc_4BFC75: mov %al,0x360(%esi);");
    asm("loc_4BFC7B: mov %eax,0x41C(%esi);");
    asm("loc_4BFC81: mov %eax,0x420(%esi);");
    asm("loc_4BFC87: mov %eax,0x368(%esi);");
    asm("loc_4BFC8D: mov %eax,0x36C(%esi);");
    asm("loc_4BFC93: mov %eax,0x370(%esi);");
    asm("loc_4BFC99: mov %eax,0x374(%esi);");
    asm("loc_4BFC9F: mov %eax,0x378(%esi);");
    asm("loc_4BFCA5: mov %eax,0x37C(%esi);");
    asm("loc_4BFCAB: mov %eax,0x380(%esi);");
    asm("loc_4BFCB1: mov %eax,0x384(%esi);");
    asm("loc_4BFCB7: mov %eax,0x388(%esi);");
    asm("loc_4BFCBD: mov %eax,0x38C(%esi);");
    asm("loc_4BFCC3: mov %eax,0x340(%esi);");
    asm("loc_4BFCC9: mov %al,0x434(%esi);");
    asm("loc_4BFCCF: mov %al,0x435(%esi);");
    asm("loc_4BFCD5: mov %eax,0x3C8(%esi);");
    asm("loc_4BFCDB: mov %eax,0x3CC(%esi);");
    asm("loc_4BFCE1: mov %eax,0x3F8(%esi);");
    asm("loc_4BFCE7: mov %eax,0x3FC(%esi);");
    asm("loc_4BFCED: mov %eax,0x3D0(%esi);");
    asm("loc_4BFCF3: mov %eax,0x3D4(%esi);");
    asm("loc_4BFCF9: mov %eax,0x400(%esi);");
    asm("loc_4BFCFF: mov %eax,0x404(%esi);");
    asm("loc_4BFD05: mov %eax,0x408(%esi);");
    asm("loc_4BFD0B: mov %eax,0x40C(%esi);");
    asm("loc_4BFD11: movl $0xFFFFFFFF,0x42C(%esi);");
    asm("loc_4BFD1B: mov %esi,%eax;");
    asm("loc_4BFD1D: pop %esi;");
    asm("loc_4BFD1E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BFD20() // _sub_4BFD20
{
    __DEBUG_ASM(4BFD20);
    // chunk 0x4BFD20 _sub_4BFD20
    asm("loc_4BFD20: push %esi;");
    asm("loc_4BFD21: mov %ecx,%esi;");
    asm("loc_4BFD23: call _sub_4BFD40;");
    asm("loc_4BFD28: testb $1,8(%esp);");
    asm("loc_4BFD2D: je loc_4BFD38;");
    asm("loc_4BFD2F: push %esi;");
    asm("loc_4BFD30: call _sub_5B7E1D;");
    asm("loc_4BFD35: add $4,%esp;");
    asm("loc_4BFD38: mov %esi,%eax;");
    asm("loc_4BFD3A: pop %esi;");
    asm("loc_4BFD3B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BFD40() // _sub_4BFD40
{
    __DEBUG_ASM(4BFD40);
    // chunk 0x4BFD40 _sub_4BFD40
    asm("loc_4BFD40: push $0xFFFFFFFF;");
    asm("loc_4BFD42: push $_sub_5BD5F1;");
    asm("loc_4BFD47: mov %fs:0,%eax;");
    asm("loc_4BFD4D: push %eax;");
    asm("loc_4BFD4E: mov %esp,%fs:0;");
    asm("loc_4BFD55: sub $8,%esp;");
    asm("loc_4BFD58: push %ebx;");
    asm("loc_4BFD59: push %esi;");
    asm("loc_4BFD5A: mov %ecx,%esi;");
    asm("loc_4BFD5C: push %edi;");
    asm("loc_4BFD5D: lea 0x32C(%esi),%edi;");
    asm("loc_4BFD63: mov %esi,0x10(%esp);");
    asm("loc_4BFD67: movl $_off_5D62AC,(%esi);");
    asm("loc_4BFD6D: movl $_off_5D629C,0x7C(%esi);");
    asm("loc_4BFD74: movl $_off_5D6294,(%edi);");
    asm("loc_4BFD7A: mov 0x330(%esi),%ecx;");
    asm("loc_4BFD80: xor %ebx,%ebx;");
    asm("loc_4BFD82: cmp %ebx,%ecx;");
    asm("loc_4BFD84: movl $1,0x1C(%esp);");
    asm("loc_4BFD8C: je loc_4BFD9A;");
    asm("loc_4BFD8E: mov (%ecx),%eax;");
    asm("loc_4BFD90: push $1;");
    asm("loc_4BFD92: calll *(%eax);");
    asm("loc_4BFD94: mov %ebx,0x330(%esi);");
    asm("loc_4BFD9A: mov 0x334(%esi),%ecx;");
    asm("loc_4BFDA0: cmp %ebx,%ecx;");
    asm("loc_4BFDA2: je loc_4BFDB0;");
    asm("loc_4BFDA4: mov (%ecx),%edx;");
    asm("loc_4BFDA6: push $1;");
    asm("loc_4BFDA8: calll *(%edx);");
    asm("loc_4BFDAA: mov %ebx,0x334(%esi);");
    asm("loc_4BFDB0: mov 0x338(%esi),%ecx;");
    asm("loc_4BFDB6: cmp %ebx,%ecx;");
    asm("loc_4BFDB8: je loc_4BFDC6;");
    asm("loc_4BFDBA: mov (%ecx),%eax;");
    asm("loc_4BFDBC: push $1;");
    asm("loc_4BFDBE: calll *(%eax);");
    asm("loc_4BFDC0: mov %ebx,0x338(%esi);");
    asm("loc_4BFDC6: mov %edi,%ecx;");
    asm("loc_4BFDC8: mov %ebx,_data_6724B4;");
    asm("loc_4BFDCE: mov %bl,0x1C(%esp);");
    asm("loc_4BFDD2: call _sub_576010;");
    asm("loc_4BFDD7: mov %esi,%ecx;");
    asm("loc_4BFDD9: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4BFDE1: call _sub_59FA50;");
    asm("loc_4BFDE6: mov 0x14(%esp),%ecx;");
    asm("loc_4BFDEA: pop %edi;");
    asm("loc_4BFDEB: pop %esi;");
    asm("loc_4BFDEC: pop %ebx;");
    asm("loc_4BFDED: mov %ecx,%fs:0;");
    asm("loc_4BFDF4: add $0x14,%esp;");
    asm("loc_4BFDF7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BFE00() // _sub_4BFE00
{
    __DEBUG_ASM(4BFE00);
    // chunk 0x4BFE00 _sub_4BFE00
    asm("loc_4BFE00: sub $0x80,%esp;");
    asm("loc_4BFE06: push %ebx;");
    asm("loc_4BFE07: mov %ecx,%ebx;");
    asm("loc_4BFE09: push %esi;");
    asm("loc_4BFE0A: lea 0x80(%ebx),%ecx;");
    asm("loc_4BFE10: call _sub_420D60;");
    asm("loc_4BFE15: test %al,%al;");
    asm("loc_4BFE17: je loc_4BFEEC;");
    asm("loc_4BFE1D: mov _import_5C6D90,%eax;");
    asm("loc_4BFE22: mov 0x84(%ebx),%edx;");
    asm("loc_4BFE28: mov (%eax),%eax;");
    asm("loc_4BFE2A: mov (%eax),%ecx;");
    asm("loc_4BFE2C: push %edx;");
    asm("loc_4BFE2D: push %eax;");
    asm("loc_4BFE2E: calll *0x64(%ecx);");
    asm("loc_4BFE31: mov %eax,%esi;");
    asm("loc_4BFE33: mov _import_5C6D90,%eax;");
    asm("loc_4BFE38: mov (%eax),%eax;");
    asm("loc_4BFE3A: mov (%eax),%ecx;");
    asm("loc_4BFE3C: push %esi;");
    asm("loc_4BFE3D: push %eax;");
    asm("loc_4BFE3E: calll *0x3C(%ecx);");
    asm("loc_4BFE41: mov 0x8C(%esp),%eax;");
    asm("loc_4BFE48: push %eax;");
    asm("loc_4BFE49: mov %eax,0xC(%esp);");
    asm("loc_4BFE4D: calll *_import_5C6D14;");
    asm("loc_4BFE53: mov _import_5C6D5C,%edx;");
    asm("loc_4BFE59: add $4,%esp;");
    asm("loc_4BFE5C: mov %eax,0xC(%esp);");
    asm("loc_4BFE60: mov (%edx),%eax;");
    asm("loc_4BFE62: mov (%eax),%ecx;");
    asm("loc_4BFE64: lea 0x40(%esp),%edx;");
    asm("loc_4BFE68: push %edx;");
    asm("loc_4BFE69: lea 0xC(%esp),%edx;");
    asm("loc_4BFE6D: push %edx;");
    asm("loc_4BFE6E: push %esi;");
    asm("loc_4BFE6F: push %eax;");
    asm("loc_4BFE70: calll *0xC(%ecx);");
    asm("loc_4BFE73: test %al,%al;");
    asm("loc_4BFE75: je loc_4BFEEC;");
    asm("loc_4BFE77: mov 0x44(%esp),%eax;");
    asm("loc_4BFE7B: mov 0x4C(%esp),%edx;");
    asm("loc_4BFE7F: push %edi;");
    asm("loc_4BFE80: mov $9,%ecx;");
    asm("loc_4BFE85: lea 0x54(%esp),%esi;");
    asm("loc_4BFE89: lea 0x14(%esp),%edi;");
    asm("loc_4BFE8D: rep movsl (%esi),(%edi);");
    asm("loc_4BFE8F: mov 0x4C(%esp),%ecx;");
    asm("loc_4BFE93: mov %eax,0x38(%esp);");
    asm("loc_4BFE97: mov 0x94(%esp),%eax;");
    asm("loc_4BFE9E: mov %ecx,0x3C(%esp);");
    asm("loc_4BFEA2: mov %eax,%edi;");
    asm("loc_4BFEA4: mov $0xC,%ecx;");
    asm("loc_4BFEA9: lea 0x14(%esp),%esi;");
    asm("loc_4BFEAD: mov %edx,0x40(%esp);");
    asm("loc_4BFEB1: rep movsl (%esi),(%edi);");
    asm("loc_4BFEB3: flds 0xA8(%ebx);");
    asm("loc_4BFEB9: fadds 0x24(%eax);");
    asm("loc_4BFEBC: fstps 0x24(%eax);");
    asm("loc_4BFEBF: flds 0xAC(%ebx);");
    asm("loc_4BFEC5: fadds 0x28(%eax);");
    asm("loc_4BFEC8: fstps 0x28(%eax);");
    asm("loc_4BFECB: flds 0xB0(%ebx);");
    asm("loc_4BFED1: fadds 0x2C(%eax);");
    asm("loc_4BFED4: pop %edi;");
    asm("loc_4BFED5: pop %esi;");
    asm("loc_4BFED6: pop %ebx;");
    asm("loc_4BFED7: fstps 0x2C(%eax);");
    asm("loc_4BFEDA: movl $0,0x2C(%eax);");
    asm("loc_4BFEE1: mov $1,%al;");
    asm("loc_4BFEE3: add $0x80,%esp;");
    asm("loc_4BFEE9: ret $8;");
    asm("loc_4BFEEC: mov 0x90(%esp),%eax;");
    asm("loc_4BFEF3: mov $0x3F800000,%ecx;");
    asm("loc_4BFEF8: mov %ecx,0x20(%eax);");
    asm("loc_4BFEFB: mov %ecx,0x10(%eax);");
    asm("loc_4BFEFE: mov %ecx,(%eax);");
    asm("loc_4BFF00: xor %ecx,%ecx;");
    asm("loc_4BFF02: mov %ecx,0x1C(%eax);");
    asm("loc_4BFF05: mov %ecx,0x18(%eax);");
    asm("loc_4BFF08: mov %ecx,0x14(%eax);");
    asm("loc_4BFF0B: mov %ecx,0xC(%eax);");
    asm("loc_4BFF0E: mov %ecx,8(%eax);");
    asm("loc_4BFF11: mov %ecx,4(%eax);");
    asm("loc_4BFF14: pop %esi;");
    asm("loc_4BFF15: mov %ecx,0x2C(%eax);");
    asm("loc_4BFF18: mov %ecx,0x28(%eax);");
    asm("loc_4BFF1B: mov %ecx,0x24(%eax);");
    asm("loc_4BFF1E: xor %al,%al;");
    asm("loc_4BFF20: pop %ebx;");
    asm("loc_4BFF21: add $0x80,%esp;");
    asm("loc_4BFF27: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4BFF30() // _sub_4BFF30
{
    __DEBUG_ASM(4BFF30);
    // chunk 0x4BFF30 _sub_4BFF30
    asm("loc_4BFF30: mov %fs:0,%eax;");
    asm("loc_4BFF36: push $0xFFFFFFFF;");
    asm("loc_4BFF38: push $_sub_5BD608;");
    asm("loc_4BFF3D: push %eax;");
    asm("loc_4BFF3E: mov %esp,%fs:0;");
    asm("loc_4BFF45: sub $0xC,%esp;");
    asm("loc_4BFF48: call _sub_42D680;");
    asm("loc_4BFF4D: fadds _data_6728C0;");
    asm("loc_4BFF53: fsts _data_6728C0;");
    asm("loc_4BFF59: fcompl _data_5C75E8;");
    asm("loc_4BFF5F: fnstsw %ax;");
    asm("loc_4BFF61: test $0x41,%ah;");
    asm("loc_4BFF64: jne loc_4BFF7F;");
    asm("loc_4BFF66: mov _data_61218C,%al;");
    asm("loc_4BFF6B: test %al,%al;");
    asm("loc_4BFF6D: sete %al;");
    asm("loc_4BFF70: movl $0,_data_6728C0;");
    asm("loc_4BFF7A: mov %al,_data_61218C;");
    asm("loc_4BFF7F: mov 0x1C(%esp),%ecx;");
    asm("loc_4BFF83: push %ebp;");
    asm("loc_4BFF84: push %esi;");
    asm("loc_4BFF85: call _sub_58A520;");
    asm("loc_4BFF8A: mov _import_5C71C8,%ebp;");
    asm("loc_4BFF90: mov %eax,%esi;");
    asm("loc_4BFF92: push %esi;");
    asm("loc_4BFF93: call *%ebp;");
    asm("loc_4BFF95: add $4,%esp;");
    asm("loc_4BFF98: dec %eax;");
    asm("loc_4BFF99: js loc_4C010A;");
    asm("loc_4BFF9F: cmpw $0x7C,(%esi,%eax,2);");
    asm("loc_4BFFA4: mov _data_61218C,%cl;");
    asm("loc_4BFFAA: sete %al;");
    asm("loc_4BFFAD: cmp %cl,%al;");
    asm("loc_4BFFAF: je loc_4C010A;");
    asm("loc_4BFFB5: push %ebx;");
    asm("loc_4BFFB6: xor %ebx,%ebx;");
    asm("loc_4BFFB8: push %edi;");
    asm("loc_4BFFB9: mov %ebx,0x14(%esp);");
    asm("loc_4BFFBD: mov %ebx,0x18(%esp);");
    asm("loc_4BFFC1: cmp %ebx,%esi;");
    asm("loc_4BFFC3: mov %ebx,0x24(%esp);");
    asm("loc_4BFFC7: je loc_4BFFF8;");
    asm("loc_4BFFC9: push %esi;");
    asm("loc_4BFFCA: call *%ebp;");
    asm("loc_4BFFCC: mov %eax,%edi;");
    asm("loc_4BFFCE: add $4,%esp;");
    asm("loc_4BFFD1: lea 1(%edi),%ecx;");
    asm("loc_4BFFD4: push %ecx;");
    asm("loc_4BFFD5: lea 0x18(%esp),%ecx;");
    asm("loc_4BFFD9: call _sub_4142A0;");
    asm("loc_4BFFDE: mov 0x14(%esp),%edx;");
    asm("loc_4BFFE2: push %edi;");
    asm("loc_4BFFE3: push %esi;");
    asm("loc_4BFFE4: push %edx;");
    asm("loc_4BFFE5: calll *_import_5C71C0;");
    asm("loc_4BFFEB: mov 0x20(%esp),%eax;");
    asm("loc_4BFFEF: add $0xC,%esp;");
    asm("loc_4BFFF2: mov %bx,(%eax,%edi,2);");
    asm("loc_4BFFF6: jmp loc_4C0001;");
    asm("loc_4BFFF8: lea 0x14(%esp),%ecx;");
    asm("loc_4BFFFC: call _sub_414280;");
    asm("loc_4C0001: mov _data_61218C,%al;");
    asm("loc_4C0006: test %al,%al;");
    asm("loc_4C0008: mov 0x14(%esp),%eax;");
    asm("loc_4C000C: je loc_4C0061;");
    asm("loc_4C000E: cmp %ebx,%eax;");
    asm("loc_4C0010: movw $0x7C,0x10(%esp);");
    asm("loc_4C0017: mov %bx,0x12(%esp);");
    asm("loc_4C001C: je loc_4C0028;");
    asm("loc_4C001E: push %eax;");
    asm("loc_4C001F: call *%ebp;");
    asm("loc_4C0021: add $4,%esp;");
    asm("loc_4C0024: mov %eax,%esi;");
    asm("loc_4C0026: jmp loc_4C002A;");
    asm("loc_4C0028: xor %esi,%esi;");
    asm("loc_4C002A: lea 2(%esi),%ecx;");
    asm("loc_4C002D: push %ecx;");
    asm("loc_4C002E: lea 0x18(%esp),%ecx;");
    asm("loc_4C0032: call _sub_4142A0;");
    asm("loc_4C0037: mov 0x14(%esp),%eax;");
    asm("loc_4C003B: push $1;");
    asm("loc_4C003D: lea 0x14(%esp),%edx;");
    asm("loc_4C0041: push %edx;");
    asm("loc_4C0042: lea (%eax,%esi,2),%ecx;");
    asm("loc_4C0045: push %ecx;");
    asm("loc_4C0046: calll *_import_5C71C0;");
    asm("loc_4C004C: mov 0x20(%esp),%edx;");
    asm("loc_4C0050: mov %bx,2(%edx,%esi,2);");
    asm("loc_4C0055: mov 0x20(%esp),%eax;");
    asm("loc_4C0059: add $0xC,%esp;");
    asm("loc_4C005C: jmp loc_4C00EC;");
    asm("loc_4C0061: cmp %ebx,%eax;");
    asm("loc_4C0063: je loc_4C0073;");
    asm("loc_4C0065: push %eax;");
    asm("loc_4C0066: call *%ebp;");
    asm("loc_4C0068: mov %eax,%ecx;");
    asm("loc_4C006A: mov 0x18(%esp),%eax;");
    asm("loc_4C006E: add $4,%esp;");
    asm("loc_4C0071: jmp loc_4C0075;");
    asm("loc_4C0073: xor %ecx,%ecx;");
    asm("loc_4C0075: test %eax,%eax;");
    asm("loc_4C0077: lea -1(%ecx),%esi;");
    asm("loc_4C007A: mov %eax,%ebx;");
    asm("loc_4C007C: je loc_4C00EA;");
    asm("loc_4C007E: cmp $0xFFFFFFFF,%esi;");
    asm("loc_4C0081: jne loc_4C008F;");
    asm("loc_4C0083: push %eax;");
    asm("loc_4C0084: call *%ebp;");
    asm("loc_4C0086: mov %eax,%esi;");
    asm("loc_4C0088: mov 0x18(%esp),%eax;");
    asm("loc_4C008C: add $4,%esp;");
    asm("loc_4C008F: mov 0x18(%esp),%ecx;");
    asm("loc_4C0093: lea 1(%esi),%edi;");
    asm("loc_4C0096: cmp %ecx,%edi;");
    asm("loc_4C0098: jbe loc_4C00D0;");
    asm("loc_4C009A: test %eax,%eax;");
    asm("loc_4C009C: je loc_4C00B2;");
    asm("loc_4C009E: lea (%edi,%edi),%ecx;");
    asm("loc_4C00A1: push %ecx;");
    asm("loc_4C00A2: push %eax;");
    asm("loc_4C00A3: calll *_import_5C71BC;");
    asm("loc_4C00A9: add $8,%esp;");
    asm("loc_4C00AC: mov %eax,0x14(%esp);");
    asm("loc_4C00B0: jmp loc_4C00CC;");
    asm("loc_4C00B2: lea (%edi,%edi),%edx;");
    asm("loc_4C00B5: push %edx;");
    asm("loc_4C00B6: calll *_import_5C71CC;");
    asm("loc_4C00BC: mov %eax,0x18(%esp);");
    asm("loc_4C00C0: movw $0,(%eax);");
    asm("loc_4C00C5: mov 0x18(%esp),%eax;");
    asm("loc_4C00C9: add $4,%esp;");
    asm("loc_4C00CC: mov %edi,0x18(%esp);");
    asm("loc_4C00D0: push %esi;");
    asm("loc_4C00D1: push %ebx;");
    asm("loc_4C00D2: push %eax;");
    asm("loc_4C00D3: calll *_import_5C71C0;");
    asm("loc_4C00D9: mov 0x20(%esp),%eax;");
    asm("loc_4C00DD: movw $0,(%eax,%esi,2);");
    asm("loc_4C00E3: mov 0x20(%esp),%eax;");
    asm("loc_4C00E7: add $0xC,%esp;");
    asm("loc_4C00EA: xor %ebx,%ebx;");
    asm("loc_4C00EC: mov 0x2C(%esp),%ecx;");
    asm("loc_4C00F0: push %eax;");
    asm("loc_4C00F1: call _sub_58A530;");
    asm("loc_4C00F6: mov 0x14(%esp),%eax;");
    asm("loc_4C00FA: pop %edi;");
    asm("loc_4C00FB: cmp %ebx,%eax;");
    asm("loc_4C00FD: pop %ebx;");
    asm("loc_4C00FE: je loc_4C010A;");
    asm("loc_4C0100: push %eax;");
    asm("loc_4C0101: calll *_import_5C71D8;");
    asm("loc_4C0107: add $4,%esp;");
    asm("loc_4C010A: mov 0x14(%esp),%ecx;");
    asm("loc_4C010E: pop %esi;");
    asm("loc_4C010F: pop %ebp;");
    asm("loc_4C0110: mov %ecx,%fs:0;");
    asm("loc_4C0117: add $0x18,%esp;");
    asm("loc_4C011A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C0120() // _sub_4C0120
{
    __DEBUG_ASM(4C0120);
    // chunk 0x4C0120 _sub_4C0120
    asm("loc_4C0120: sub $0x38,%esp;");
    asm("loc_4C0123: push %ebx;");
    asm("loc_4C0124: push %ebp;");
    asm("loc_4C0125: push %esi;");
    asm("loc_4C0126: push %edi;");
    asm("loc_4C0127: mov %ecx,%ebx;");
    asm("loc_4C0129: call _sub_45A9F0;");
    asm("loc_4C012E: mov 0x35C(%ebx),%eax;");
    asm("loc_4C0134: push %eax;");
    asm("loc_4C0135: call _sub_4BFF30;");
    asm("loc_4C013A: add $4,%esp;");
    asm("loc_4C013D: mov %ebx,%ecx;");
    asm("loc_4C013F: call _sub_5A0760;");
    asm("loc_4C0144: mov 0x3B8(%ebx),%eax;");
    asm("loc_4C014A: test %eax,%eax;");
    asm("loc_4C014C: je loc_4C0315;");
    asm("loc_4C0152: call _sub_4C4610;");
    asm("loc_4C0157: fldl 0x3C0(%ebx);");
    asm("loc_4C015D: fcompl _data_5CBFB0;");
    asm("loc_4C0163: fnstsw %ax;");
    asm("loc_4C0165: test $0x41,%ah;");
    asm("loc_4C0168: jne loc_4C0194;");
    asm("loc_4C016A: fdivrl 0x3C0(%ebx);");
    asm("loc_4C0170: fcoml _data_5C89B8;");
    asm("loc_4C0176: fnstsw %ax;");
    asm("loc_4C0178: test $0x41,%ah;");
    asm("loc_4C017B: jne loc_4C019C;");
    asm("loc_4C017D: mov 0x3B8(%ebx),%ecx;");
    asm("loc_4C0183: fstp %st(0);");
    asm("loc_4C0185: fldl _data_5C89B8;");
    asm("loc_4C018B: movb $1,0x348(%ecx);");
    asm("loc_4C0192: jmp loc_4C01A9;");
    asm("loc_4C0194: fstp %st(0);");
    asm("loc_4C0196: fldl _data_5C8BA8;");
    asm("loc_4C019C: mov 0x3B8(%ebx),%edx;");
    asm("loc_4C01A2: movb $1,0x348(%edx);");
    asm("loc_4C01A9: mov 0x3B8(%ebx),%ebp;");
    asm("loc_4C01AF: flds 0xB4(%ebp);");
    asm("loc_4C01B5: mov _import_5C6DE0,%eax;");
    asm("loc_4C01BA: mov (%eax),%eax;");
    asm("loc_4C01BC: fmul %st(1),%st;");
    asm("loc_4C01BE: mov (%eax),%ecx;");
    asm("loc_4C01C0: add $0xB4,%ebp;");
    asm("loc_4C01C6: fadd %st,%st(0);");
    asm("loc_4C01C8: push $1;");
    asm("loc_4C01CA: fsubs (%ebp);");
    asm("loc_4C01CD: push $7;");
    asm("loc_4C01CF: push %eax;");
    asm("loc_4C01D0: fstpl 0x1C(%esp);");
    asm("loc_4C01D4: fstp %st(0);");
    asm("loc_4C01D6: calll *0xF0(%ecx);");
    asm("loc_4C01DC: mov _import_5C6DE0,%edx;");
    asm("loc_4C01E2: mov (%edx),%eax;");
    asm("loc_4C01E4: mov (%eax),%ecx;");
    asm("loc_4C01E6: push $8;");
    asm("loc_4C01E8: push $0x17;");
    asm("loc_4C01EA: push %eax;");
    asm("loc_4C01EB: calll *0xF0(%ecx);");
    asm("loc_4C01F1: mov _import_5C6DE0,%edx;");
    asm("loc_4C01F7: mov (%edx),%eax;");
    asm("loc_4C01F9: mov (%eax),%ecx;");
    asm("loc_4C01FB: push $1;");
    asm("loc_4C01FD: push $0xE;");
    asm("loc_4C01FF: push %eax;");
    asm("loc_4C0200: calll *0xF0(%ecx);");
    asm("loc_4C0206: mov _import_5C6D90,%edx;");
    asm("loc_4C020C: mov (%edx),%eax;");
    asm("loc_4C020E: mov 0x3B8(%ebx),%edx;");
    asm("loc_4C0214: mov 0x84(%edx),%edx;");
    asm("loc_4C021A: mov (%eax),%ecx;");
    asm("loc_4C021C: push %edx;");
    asm("loc_4C021D: push %eax;");
    asm("loc_4C021E: calll *0xA0(%ecx);");
    asm("loc_4C0224: mov %eax,%esi;");
    asm("loc_4C0226: lea 0x18(%esp),%eax;");
    asm("loc_4C022A: push %eax;");
    asm("loc_4C022B: mov $0xC,%ecx;");
    asm("loc_4C0230: lea 0x1C(%esp),%edi;");
    asm("loc_4C0234: push $0;");
    asm("loc_4C0236: rep movsl (%esi),(%edi);");
    asm("loc_4C0238: call _sub_422690;");
    asm("loc_4C023D: push $0xDE1;");
    asm("loc_4C0242: call _sub_421ED0;");
    asm("loc_4C0247: push $0xBE2;");
    asm("loc_4C024C: call _sub_421DD0;");
    asm("loc_4C0251: push $4;");
    asm("loc_4C0253: push $2;");
    asm("loc_4C0255: call _sub_4220C0;");
    asm("loc_4C025A: push $0xA;");
    asm("loc_4C025C: push $0;");
    asm("loc_4C025E: push $0;");
    asm("loc_4C0260: push $0;");
    asm("loc_4C0262: call _sub_421B70;");
    asm("loc_4C0267: push $8;");
    asm("loc_4C0269: call _sub_421670;");
    asm("loc_4C026E: mov 4(%ebp),%ecx;");
    asm("loc_4C0271: mov (%ebp),%edx;");
    asm("loc_4C0274: push $0;");
    asm("loc_4C0276: push %ecx;");
    asm("loc_4C0277: push %edx;");
    asm("loc_4C0278: call _sub_421CC0;");
    asm("loc_4C027D: flds 4(%ebp);");
    asm("loc_4C0280: mov (%ebp),%eax;");
    asm("loc_4C0283: fchs;");
    asm("loc_4C0285: add $0x38,%esp;");
    asm("loc_4C0288: push $0;");
    asm("loc_4C028A: push %ecx;");
    asm("loc_4C028B: fstps (%esp);");
    asm("loc_4C028E: push %eax;");
    asm("loc_4C028F: call _sub_421CC0;");
    asm("loc_4C0294: fldl 0x1C(%esp);");
    asm("loc_4C0298: fstps 0x1C(%esp);");
    asm("loc_4C029C: add $0xC,%esp;");
    asm("loc_4C029F: flds 4(%ebp);");
    asm("loc_4C02A2: push $0;");
    asm("loc_4C02A4: fchs;");
    asm("loc_4C02A6: mov 0x14(%esp),%esi;");
    asm("loc_4C02AA: push %ecx;");
    asm("loc_4C02AB: fstps (%esp);");
    asm("loc_4C02AE: push %esi;");
    asm("loc_4C02AF: call _sub_421CC0;");
    asm("loc_4C02B4: mov 4(%ebp),%ecx;");
    asm("loc_4C02B7: push $0;");
    asm("loc_4C02B9: push %ecx;");
    asm("loc_4C02BA: push %esi;");
    asm("loc_4C02BB: call _sub_421CC0;");
    asm("loc_4C02C0: add $0x18,%esp;");
    asm("loc_4C02C3: call _sub_421690;");
    asm("loc_4C02C8: mov _import_5C6DE0,%edx;");
    asm("loc_4C02CE: mov (%edx),%eax;");
    asm("loc_4C02D0: mov (%eax),%ecx;");
    asm("loc_4C02D2: push $4;");
    asm("loc_4C02D4: push $0x17;");
    asm("loc_4C02D6: push %eax;");
    asm("loc_4C02D7: calll *0xF0(%ecx);");
    asm("loc_4C02DD: mov _import_5C6DF0,%edx;");
    asm("loc_4C02E3: mov (%edx),%eax;");
    asm("loc_4C02E5: mov 0x3B8(%ebx),%edx;");
    asm("loc_4C02EB: mov 0x84(%edx),%edx;");
    asm("loc_4C02F1: mov (%eax),%ecx;");
    asm("loc_4C02F3: push $0;");
    asm("loc_4C02F5: push $0;");
    asm("loc_4C02F7: push $0;");
    asm("loc_4C02F9: push $0x3F800000;");
    asm("loc_4C02FE: push %edx;");
    asm("loc_4C02FF: push $_data_67DBF8;");
    asm("loc_4C0304: push %eax;");
    asm("loc_4C0305: calll *0x1C(%ecx);");
    asm("loc_4C0308: push $0xBE2;");
    asm("loc_4C030D: call _sub_421ED0;");
    asm("loc_4C0312: add $4,%esp;");
    asm("loc_4C0315: mov 0x3DC(%ebx),%ecx;");
    asm("loc_4C031B: test %ecx,%ecx;");
    asm("loc_4C031D: je loc_4C04CE;");
    asm("loc_4C0323: fldl 0x3E8(%ebx);");
    asm("loc_4C0329: fcompl _data_5CBFB0;");
    asm("loc_4C032F: fnstsw %ax;");
    asm("loc_4C0331: test $0x41,%ah;");
    asm("loc_4C0334: jne loc_4C04D6;");
    asm("loc_4C033A: fldl 0x3E8(%ebx);");
    asm("loc_4C0340: fdivl 0x3F0(%ebx);");
    asm("loc_4C0346: fcoml _data_5C89B8;");
    asm("loc_4C034C: fnstsw %ax;");
    asm("loc_4C034E: test $0x41,%ah;");
    asm("loc_4C0351: jne loc_4C035B;");
    asm("loc_4C0353: fstp %st(0);");
    asm("loc_4C0355: fldl _data_5C89B8;");
    asm("loc_4C035B: movb $1,0x348(%ecx);");
    asm("loc_4C0362: mov 0x3DC(%ebx),%ebp;");
    asm("loc_4C0368: flds 0xB4(%ebp);");
    asm("loc_4C036E: mov _import_5C6DE0,%eax;");
    asm("loc_4C0373: mov (%eax),%eax;");
    asm("loc_4C0375: fmul %st(1),%st;");
    asm("loc_4C0377: mov (%eax),%ecx;");
    asm("loc_4C0379: add $0xB4,%ebp;");
    asm("loc_4C037F: fadd %st,%st(0);");
    asm("loc_4C0381: push $1;");
    asm("loc_4C0383: fsubs (%ebp);");
    asm("loc_4C0386: push $7;");
    asm("loc_4C0388: push %eax;");
    asm("loc_4C0389: fstpl 0x1C(%esp);");
    asm("loc_4C038D: fstp %st(0);");
    asm("loc_4C038F: calll *0xF0(%ecx);");
    asm("loc_4C0395: mov _import_5C6DE0,%edx;");
    asm("loc_4C039B: mov (%edx),%eax;");
    asm("loc_4C039D: mov (%eax),%ecx;");
    asm("loc_4C039F: push $8;");
    asm("loc_4C03A1: push $0x17;");
    asm("loc_4C03A3: push %eax;");
    asm("loc_4C03A4: calll *0xF0(%ecx);");
    asm("loc_4C03AA: mov _import_5C6DE0,%edx;");
    asm("loc_4C03B0: mov (%edx),%eax;");
    asm("loc_4C03B2: mov (%eax),%ecx;");
    asm("loc_4C03B4: push $1;");
    asm("loc_4C03B6: push $0xE;");
    asm("loc_4C03B8: push %eax;");
    asm("loc_4C03B9: calll *0xF0(%ecx);");
    asm("loc_4C03BF: mov _import_5C6D90,%edx;");
    asm("loc_4C03C5: mov (%edx),%eax;");
    asm("loc_4C03C7: mov 0x3DC(%ebx),%edx;");
    asm("loc_4C03CD: mov 0x84(%edx),%edx;");
    asm("loc_4C03D3: mov (%eax),%ecx;");
    asm("loc_4C03D5: push %edx;");
    asm("loc_4C03D6: push %eax;");
    asm("loc_4C03D7: calll *0xA0(%ecx);");
    asm("loc_4C03DD: mov %eax,%esi;");
    asm("loc_4C03DF: lea 0x18(%esp),%eax;");
    asm("loc_4C03E3: push %eax;");
    asm("loc_4C03E4: mov $0xC,%ecx;");
    asm("loc_4C03E9: lea 0x1C(%esp),%edi;");
    asm("loc_4C03ED: push $0;");
    asm("loc_4C03EF: rep movsl (%esi),(%edi);");
    asm("loc_4C03F1: call _sub_422690;");
    asm("loc_4C03F6: push $0xDE1;");
    asm("loc_4C03FB: call _sub_421ED0;");
    asm("loc_4C0400: push $0xBE2;");
    asm("loc_4C0405: call _sub_421DD0;");
    asm("loc_4C040A: push $4;");
    asm("loc_4C040C: push $2;");
    asm("loc_4C040E: call _sub_4220C0;");
    asm("loc_4C0413: push $0xA;");
    asm("loc_4C0415: push $0;");
    asm("loc_4C0417: push $0;");
    asm("loc_4C0419: push $0;");
    asm("loc_4C041B: call _sub_421B70;");
    asm("loc_4C0420: push $8;");
    asm("loc_4C0422: call _sub_421670;");
    asm("loc_4C0427: mov 4(%ebp),%ecx;");
    asm("loc_4C042A: mov (%ebp),%edx;");
    asm("loc_4C042D: push $0;");
    asm("loc_4C042F: push %ecx;");
    asm("loc_4C0430: push %edx;");
    asm("loc_4C0431: call _sub_421CC0;");
    asm("loc_4C0436: flds 4(%ebp);");
    asm("loc_4C0439: mov (%ebp),%eax;");
    asm("loc_4C043C: fchs;");
    asm("loc_4C043E: add $0x38,%esp;");
    asm("loc_4C0441: push $0;");
    asm("loc_4C0443: push %ecx;");
    asm("loc_4C0444: fstps (%esp);");
    asm("loc_4C0447: push %eax;");
    asm("loc_4C0448: call _sub_421CC0;");
    asm("loc_4C044D: fldl 0x1C(%esp);");
    asm("loc_4C0451: add $0xC,%esp;");
    asm("loc_4C0454: fstps 0x10(%esp);");
    asm("loc_4C0458: flds 4(%ebp);");
    asm("loc_4C045B: push $0;");
    asm("loc_4C045D: mov 0x14(%esp),%esi;");
    asm("loc_4C0461: fchs;");
    asm("loc_4C0463: push %ecx;");
    asm("loc_4C0464: fstps (%esp);");
    asm("loc_4C0467: push %esi;");
    asm("loc_4C0468: call _sub_421CC0;");
    asm("loc_4C046D: mov 4(%ebp),%ecx;");
    asm("loc_4C0470: push $0;");
    asm("loc_4C0472: push %ecx;");
    asm("loc_4C0473: push %esi;");
    asm("loc_4C0474: call _sub_421CC0;");
    asm("loc_4C0479: add $0x18,%esp;");
    asm("loc_4C047C: call _sub_421690;");
    asm("loc_4C0481: mov _import_5C6DE0,%edx;");
    asm("loc_4C0487: mov (%edx),%eax;");
    asm("loc_4C0489: mov (%eax),%ecx;");
    asm("loc_4C048B: push $4;");
    asm("loc_4C048D: push $0x17;");
    asm("loc_4C048F: push %eax;");
    asm("loc_4C0490: calll *0xF0(%ecx);");
    asm("loc_4C0496: mov _import_5C6DF0,%edx;");
    asm("loc_4C049C: mov (%edx),%eax;");
    asm("loc_4C049E: mov 0x3DC(%ebx),%edx;");
    asm("loc_4C04A4: mov 0x84(%edx),%edx;");
    asm("loc_4C04AA: mov (%eax),%ecx;");
    asm("loc_4C04AC: push $0;");
    asm("loc_4C04AE: push $0;");
    asm("loc_4C04B0: push $0;");
    asm("loc_4C04B2: push $0x3F800000;");
    asm("loc_4C04B7: push %edx;");
    asm("loc_4C04B8: push $_data_67DBF8;");
    asm("loc_4C04BD: push %eax;");
    asm("loc_4C04BE: calll *0x1C(%ecx);");
    asm("loc_4C04C1: push $0xBE2;");
    asm("loc_4C04C6: call _sub_421ED0;");
    asm("loc_4C04CB: add $4,%esp;");
    asm("loc_4C04CE: pop %edi;");
    asm("loc_4C04CF: pop %esi;");
    asm("loc_4C04D0: pop %ebp;");
    asm("loc_4C04D1: pop %ebx;");
    asm("loc_4C04D2: add $0x38,%esp;");
    asm("loc_4C04D5: ret;");
    asm("loc_4C04D6: fldl _data_5C8BA8;");
    asm("loc_4C04DC: jmp loc_4C035B;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C04F0() // _sub_4C04F0
{
    __DEBUG_ASM(4C04F0);
    // chunk 0x4C04F0 _sub_4C04F0
    asm("loc_4C04F0: mov %fs:0,%eax;");
    asm("loc_4C04F6: push $0xFFFFFFFF;");
    asm("loc_4C04F8: push $_sub_5BD658;");
    asm("loc_4C04FD: push %eax;");
    asm("loc_4C04FE: mov 0x14(%esp),%eax;");
    asm("loc_4C0502: mov %esp,%fs:0;");
    asm("loc_4C0509: sub $0x80,%esp;");
    asm("loc_4C050F: push %esi;");
    asm("loc_4C0510: mov %ecx,%esi;");
    asm("loc_4C0512: mov 0x94(%esp),%ecx;");
    asm("loc_4C0519: push %eax;");
    asm("loc_4C051A: push %ecx;");
    asm("loc_4C051B: mov %esi,%ecx;");
    asm("loc_4C051D: call _sub_4B5060;");
    asm("loc_4C0522: test %al,%al;");
    asm("loc_4C0524: je loc_4C19F0;");
    asm("loc_4C052A: mov _data_674A8C,%edx;");
    asm("loc_4C0530: push %ebx;");
    asm("loc_4C0531: push %edi;");
    asm("loc_4C0532: push %edx;");
    asm("loc_4C0533: call _sub_4C45D0;");
    asm("loc_4C0538: mov %eax,%edi;");
    asm("loc_4C053A: mov _data_674A88,%eax;");
    asm("loc_4C053F: push %eax;");
    asm("loc_4C0540: call _sub_4C45D0;");
    asm("loc_4C0545: xor %ebx,%ebx;");
    asm("loc_4C0547: add $8,%esp;");
    asm("loc_4C054A: cmp %ebx,%edi;");
    asm("loc_4C054C: je loc_4C0557;");
    asm("loc_4C054E: mov 0x14(%edi),%edi;");
    asm("loc_4C0551: mov %edi,0x3C8(%esi);");
    asm("loc_4C0557: cmp %ebx,%eax;");
    asm("loc_4C0559: je loc_4C0564;");
    asm("loc_4C055B: mov 0x14(%eax),%eax;");
    asm("loc_4C055E: mov %eax,0x3D0(%esi);");
    asm("loc_4C0564: call _sub_54BAF0;");
    asm("loc_4C0569: cmp %ebx,%eax;");
    asm("loc_4C056B: je loc_4C058C;");
    asm("loc_4C056D: add $0xC,%eax;");
    asm("loc_4C0570: cmp %ebx,%eax;");
    asm("loc_4C0572: je loc_4C058C;");
    asm("loc_4C0574: mov 4(%eax),%eax;");
    asm("loc_4C0577: cmp %ebx,%eax;");
    asm("loc_4C0579: je loc_4C058C;");
    asm("loc_4C057B: mov 0x4C(%eax),%ecx;");
    asm("loc_4C057E: and $0x503,%ecx;");
    asm("loc_4C0584: cmp $0x503,%ecx;");
    asm("loc_4C058A: je loc_4C0590;");
    asm("loc_4C058C: xor %eax,%eax;");
    asm("loc_4C058E: jmp loc_4C05D3;");
    asm("loc_4C0590: mov 0x88(%eax),%ecx;");
    asm("loc_4C0596: mov 0x140(%ecx),%edx;");
    asm("loc_4C059C: mov %edx,0x3CC(%esi);");
    asm("loc_4C05A2: mov 0x88(%eax),%ecx;");
    asm("loc_4C05A8: mov 0x144(%ecx),%ecx;");
    asm("loc_4C05AE: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_4C05B1: mov %ecx,0x3D4(%esi);");
    asm("loc_4C05B7: mov $0x2FAF080,%edx;");
    asm("loc_4C05BC: jne loc_4C05C4;");
    asm("loc_4C05BE: mov %edx,0x3D4(%esi);");
    asm("loc_4C05C4: cmpl $0xFFFFFFFF,0x3CC(%esi);");
    asm("loc_4C05CB: jne loc_4C05D3;");
    asm("loc_4C05CD: mov %edx,0x3CC(%esi);");
    asm("loc_4C05D3: push %ebp;");
    asm("loc_4C05D4: mov %eax,0x438(%esi);");
    asm("loc_4C05DA: call _sub_4C4640;");
    asm("loc_4C05DF: fstpl 0x3C0(%esi);");
    asm("loc_4C05E5: flds _data_6728BC;");
    asm("loc_4C05EB: lea 0xA8(%esi),%eax;");
    asm("loc_4C05F1: fstps 0x24(%esp);");
    asm("loc_4C05F5: flds _data_612188;");
    asm("loc_4C05FB: mov 0x24(%esp),%ecx;");
    asm("loc_4C05FF: mov %ecx,(%eax);");
    asm("loc_4C0601: fstps 0x28(%esp);");
    asm("loc_4C0605: mov 0x28(%esp),%edx;");
    asm("loc_4C0609: mov %edx,4(%eax);");
    asm("loc_4C060C: mov (%esi),%edx;");
    asm("loc_4C060E: movl $0,0x2C(%esp);");
    asm("loc_4C0616: mov 0x2C(%esp),%ecx;");
    asm("loc_4C061A: push %ebx;");
    asm("loc_4C061B: mov %ecx,8(%eax);");
    asm("loc_4C061E: push $_data_5D6C68;");
    asm("loc_4C0623: mov %esi,%ecx;");
    asm("loc_4C0625: movl $0,0x20(%esp);");
    asm("loc_4C062D: movl $0,0x24(%esp);");
    asm("loc_4C0635: movl $0,0x28(%esp);");
    asm("loc_4C063D: calll *0x98(%edx);");
    asm("loc_4C0643: lea 0x80(%esi),%eax;");
    asm("loc_4C0649: push %eax;");
    asm("loc_4C064A: lea 0xB4(%esi),%ecx;");
    asm("loc_4C0650: call _sub_5A1340;");
    asm("loc_4C0655: mov _data_6728B8,%ecx;");
    asm("loc_4C065B: mov _import_5C71EC,%edi;");
    asm("loc_4C0661: push %ecx;");
    asm("loc_4C0662: push $_data_5D6C5C;");
    asm("loc_4C0667: push $_data_5D601C;");
    asm("loc_4C066C: push $_data_6724B8;");
    asm("loc_4C0671: call *%edi;");
    asm("loc_4C0673: add $0x10,%esp;");
    asm("loc_4C0676: mov _data_6728B8,%ecx;");
    asm("loc_4C067C: lea 0x18(%esp),%edx;");
    asm("loc_4C0680: push %edx;");
    asm("loc_4C0681: push %ebx;");
    asm("loc_4C0682: push %ebx;");
    asm("loc_4C0683: push %ebx;");
    asm("loc_4C0684: push $1;");
    asm("loc_4C0686: push %ebx;");
    asm("loc_4C0687: push %ebx;");
    asm("loc_4C0688: push %ebx;");
    asm("loc_4C0689: push $1;");
    asm("loc_4C068B: push $1;");
    asm("loc_4C068D: push $1;");
    asm("loc_4C068F: inc %ecx;");
    asm("loc_4C0690: lea 0x44(%esp),%eax;");
    asm("loc_4C0694: push %eax;");
    asm("loc_4C0695: mov %ecx,_data_6728B8;");
    asm("loc_4C069B: push $_data_5D6C4C;");
    asm("loc_4C06A0: lea 0x4C(%esp),%ecx;");
    asm("loc_4C06A4: push %ecx;");
    asm("loc_4C06A5: push $_data_5D6C18;");
    asm("loc_4C06AA: push $_data_6724B8;");
    asm("loc_4C06AF: mov %esi,%ecx;");
    asm("loc_4C06B1: call _sub_5A0DB0;");
    asm("loc_4C06B6: push %ebx;");
    asm("loc_4C06B7: push $1;");
    asm("loc_4C06B9: mov %eax,0x3A0(%esi);");
    asm("loc_4C06BF: mov (%eax),%edx;");
    asm("loc_4C06C1: push $1;");
    asm("loc_4C06C3: mov %eax,%ecx;");
    asm("loc_4C06C5: calll *0xA8(%edx);");
    asm("loc_4C06CB: mov _data_6728B8,%eax;");
    asm("loc_4C06D0: push %eax;");
    asm("loc_4C06D1: push $_data_5D6C0C;");
    asm("loc_4C06D6: push $_data_5D601C;");
    asm("loc_4C06DB: push $_data_6724B8;");
    asm("loc_4C06E0: call *%edi;");
    asm("loc_4C06E2: mov _data_6728B8,%eax;");
    asm("loc_4C06E7: add $0x10,%esp;");
    asm("loc_4C06EA: inc %eax;");
    asm("loc_4C06EB: lea 0x18(%esp),%ecx;");
    asm("loc_4C06EF: mov %eax,_data_6728B8;");
    asm("loc_4C06F4: push %ecx;");
    asm("loc_4C06F5: push %ebx;");
    asm("loc_4C06F6: push %ebx;");
    asm("loc_4C06F7: push %ebx;");
    asm("loc_4C06F8: push $1;");
    asm("loc_4C06FA: push %ebx;");
    asm("loc_4C06FB: push %ebx;");
    asm("loc_4C06FC: push $1;");
    asm("loc_4C06FE: push %ebx;");
    asm("loc_4C06FF: push $1;");
    asm("loc_4C0701: push $1;");
    asm("loc_4C0703: lea 0x44(%esp),%edx;");
    asm("loc_4C0707: push %edx;");
    asm("loc_4C0708: push $_data_5D6BFC;");
    asm("loc_4C070D: lea 0x4C(%esp),%eax;");
    asm("loc_4C0711: push %eax;");
    asm("loc_4C0712: push $_data_5D6BC0;");
    asm("loc_4C0717: push $_data_6724B8;");
    asm("loc_4C071C: mov %esi,%ecx;");
    asm("loc_4C071E: call _sub_5A0DB0;");
    asm("loc_4C0723: mov %eax,0x3A4(%esi);");
    asm("loc_4C0729: mov _data_6728B8,%ecx;");
    asm("loc_4C072F: push %ecx;");
    asm("loc_4C0730: push $_data_5D6BB4;");
    asm("loc_4C0735: push $_data_5D601C;");
    asm("loc_4C073A: push $_data_6724B8;");
    asm("loc_4C073F: call *%edi;");
    asm("loc_4C0741: mov _data_6728B8,%edx;");
    asm("loc_4C0747: add $0x10,%esp;");
    asm("loc_4C074A: push %ebx;");
    asm("loc_4C074B: push %ebx;");
    asm("loc_4C074C: push $1;");
    asm("loc_4C074E: push $0x754;");
    asm("loc_4C0753: push $0x40000000;");
    asm("loc_4C0758: push $0x3D50E560;");
    asm("loc_4C075D: push $0x3E3020C5;");
    asm("loc_4C0762: inc %edx;");
    asm("loc_4C0763: push $_data_5D6BA4;");
    asm("loc_4C0768: mov %edx,_data_6728B8;");
    asm("loc_4C076E: lea 0x38(%esp),%edx;");
    asm("loc_4C0772: push %edx;");
    asm("loc_4C0773: push $_data_5CE91C;");
    asm("loc_4C0778: push $_data_6724B8;");
    asm("loc_4C077D: mov %esi,%ecx;");
    asm("loc_4C077F: call _sub_5A0E30;");
    asm("loc_4C0784: mov %eax,0x3A8(%esi);");
    asm("loc_4C078A: mov _data_6728B8,%eax;");
    asm("loc_4C078F: push %eax;");
    asm("loc_4C0790: push $_data_5D6B98;");
    asm("loc_4C0795: push $_data_5D601C;");
    asm("loc_4C079A: push $_data_6724B8;");
    asm("loc_4C079F: call *%edi;");
    asm("loc_4C07A1: mov _data_6728B8,%ecx;");
    asm("loc_4C07A7: add $0x10,%esp;");
    asm("loc_4C07AA: push %ebx;");
    asm("loc_4C07AB: push %ebx;");
    asm("loc_4C07AC: push $1;");
    asm("loc_4C07AE: push %ebx;");
    asm("loc_4C07AF: push $0x40000000;");
    asm("loc_4C07B4: push $0x3D1FBE77;");
    asm("loc_4C07B9: inc %ecx;");
    asm("loc_4C07BA: push $0x3ED47AE1;");
    asm("loc_4C07BF: mov %ecx,_data_6728B8;");
    asm("loc_4C07C5: push $_data_5D6B88;");
    asm("loc_4C07CA: lea 0x38(%esp),%ecx;");
    asm("loc_4C07CE: push %ecx;");
    asm("loc_4C07CF: push $_data_5D6B78;");
    asm("loc_4C07D4: push $_data_6724B8;");
    asm("loc_4C07D9: mov %esi,%ecx;");
    asm("loc_4C07DB: call _sub_5A0E30;");
    asm("loc_4C07E0: mov %eax,0x398(%esi);");
    asm("loc_4C07E6: mov _data_6728B8,%edx;");
    asm("loc_4C07EC: push %edx;");
    asm("loc_4C07ED: push $_data_5D6B6C;");
    asm("loc_4C07F2: push $_data_5D601C;");
    asm("loc_4C07F7: push $_data_6724B8;");
    asm("loc_4C07FC: call *%edi;");
    asm("loc_4C07FE: mov _data_6728B8,%eax;");
    asm("loc_4C0803: add $0x10,%esp;");
    asm("loc_4C0806: inc %eax;");
    asm("loc_4C0807: mov %eax,_data_6728B8;");
    asm("loc_4C080C: push %ebx;");
    asm("loc_4C080D: push %ebx;");
    asm("loc_4C080E: push $1;");
    asm("loc_4C0810: push %ebx;");
    asm("loc_4C0811: push $0x40000000;");
    asm("loc_4C0816: push $0x3D1FBE77;");
    asm("loc_4C081B: push $0x3ED47AE1;");
    asm("loc_4C0820: push $_data_5D6B5C;");
    asm("loc_4C0825: lea 0x38(%esp),%eax;");
    asm("loc_4C0829: push %eax;");
    asm("loc_4C082A: push $_data_5D6B78;");
    asm("loc_4C082F: push $_data_6724B8;");
    asm("loc_4C0834: mov %esi,%ecx;");
    asm("loc_4C0836: call _sub_5A0E30;");
    asm("loc_4C083B: mov 0x398(%esi),%ecx;");
    asm("loc_4C0841: push %ebx;");
    asm("loc_4C0842: push $_data_6732F0;");
    asm("loc_4C0847: mov %eax,0x39C(%esi);");
    asm("loc_4C084D: mov (%ecx),%edx;");
    asm("loc_4C084F: push $0x1D;");
    asm("loc_4C0851: calll *0xA8(%edx);");
    asm("loc_4C0857: mov 0x39C(%esi),%ecx;");
    asm("loc_4C085D: mov (%ecx),%eax;");
    asm("loc_4C085F: push %ebx;");
    asm("loc_4C0860: push $_data_5D6B44;");
    asm("loc_4C0865: push $0x1D;");
    asm("loc_4C0867: calll *0xA8(%eax);");
    asm("loc_4C086D: mov _data_6728B8,%ecx;");
    asm("loc_4C0873: push %ecx;");
    asm("loc_4C0874: push $_data_5D6B30;");
    asm("loc_4C0879: push $_data_5D601C;");
    asm("loc_4C087E: push $_data_6724B8;");
    asm("loc_4C0883: call *%edi;");
    asm("loc_4C0885: mov _data_6728B8,%ecx;");
    asm("loc_4C088B: add $0x10,%esp;");
    asm("loc_4C088E: push %ebx;");
    asm("loc_4C088F: push %ebx;");
    asm("loc_4C0890: push $1;");
    asm("loc_4C0892: push %ebx;");
    asm("loc_4C0893: push $0x3FC00000;");
    asm("loc_4C0898: push $0x3CED9168;");
    asm("loc_4C089D: push $0x3ED47AE1;");
    asm("loc_4C08A2: push $_data_5D6B1C;");
    asm("loc_4C08A7: lea 0x38(%esp),%edx;");
    asm("loc_4C08AB: push %edx;");
    asm("loc_4C08AC: inc %ecx;");
    asm("loc_4C08AD: push $_data_5D01A8;");
    asm("loc_4C08B2: mov %ecx,_data_6728B8;");
    asm("loc_4C08B8: push $_data_6724B8;");
    asm("loc_4C08BD: mov %esi,%ecx;");
    asm("loc_4C08BF: call _sub_5A0E30;");
    asm("loc_4C08C4: mov %eax,0x410(%esi);");
    asm("loc_4C08CA: mov _data_6728B8,%eax;");
    asm("loc_4C08CF: push %eax;");
    asm("loc_4C08D0: push $_data_5D6B08;");
    asm("loc_4C08D5: push $_data_5D601C;");
    asm("loc_4C08DA: push $_data_6724B8;");
    asm("loc_4C08DF: call *%edi;");
    asm("loc_4C08E1: mov _data_6728B8,%ebp;");
    asm("loc_4C08E7: add $0x10,%esp;");
    asm("loc_4C08EA: push %ebx;");
    asm("loc_4C08EB: push %ebx;");
    asm("loc_4C08EC: push $1;");
    asm("loc_4C08EE: push %ebx;");
    asm("loc_4C08EF: push $0x3FC00000;");
    asm("loc_4C08F4: push $0x3CED9168;");
    asm("loc_4C08F9: push $0x3ED47AE1;");
    asm("loc_4C08FE: push $_data_5D6AF4;");
    asm("loc_4C0903: lea 0x38(%esp),%ecx;");
    asm("loc_4C0907: push %ecx;");
    asm("loc_4C0908: push $_data_5D01A8;");
    asm("loc_4C090D: inc %ebp;");
    asm("loc_4C090E: push $_data_6724B8;");
    asm("loc_4C0913: mov %esi,%ecx;");
    asm("loc_4C0915: mov %ebp,_data_6728B8;");
    asm("loc_4C091B: call _sub_5A0E30;");
    asm("loc_4C0920: mov 0x410(%esi),%ecx;");
    asm("loc_4C0926: push %ebx;");
    asm("loc_4C0927: push $0x75A;");
    asm("loc_4C092C: mov %eax,0x414(%esi);");
    asm("loc_4C0932: mov (%ecx),%edx;");
    asm("loc_4C0934: push $0x1E;");
    asm("loc_4C0936: calll *0xA8(%edx);");
    asm("loc_4C093C: push $0xC0;");
    asm("loc_4C0941: push %ebx;");
    asm("loc_4C0942: push %ebx;");
    asm("loc_4C0943: push $0xFF;");
    asm("loc_4C0948: lea 0x24(%esp),%ecx;");
    asm("loc_4C094C: call _sub_4A1AD0;");
    asm("loc_4C0951: mov 0x410(%esi),%eax;");
    asm("loc_4C0957: mov 0x14(%esp),%ecx;");
    asm("loc_4C095B: push %ebx;");
    asm("loc_4C095C: mov %ecx,0x348(%eax);");
    asm("loc_4C0962: mov 0x414(%esi),%ecx;");
    asm("loc_4C0968: mov (%ecx),%edx;");
    asm("loc_4C096A: push $0x75A;");
    asm("loc_4C096F: push $0x1E;");
    asm("loc_4C0971: calll *0xA8(%edx);");
    asm("loc_4C0977: push $0xC0;");
    asm("loc_4C097C: push %ebx;");
    asm("loc_4C097D: push %ebx;");
    asm("loc_4C097E: push $0xFF;");
    asm("loc_4C0983: lea 0x24(%esp),%ecx;");
    asm("loc_4C0987: call _sub_4A1AD0;");
    asm("loc_4C098C: mov 0x414(%esi),%eax;");
    asm("loc_4C0992: mov 0x14(%esp),%ecx;");
    asm("loc_4C0996: mov %ecx,0x348(%eax);");
    asm("loc_4C099C: mov _data_6728B8,%edx;");
    asm("loc_4C09A2: push %edx;");
    asm("loc_4C09A3: push $_data_5D6AE0;");
    asm("loc_4C09A8: push $_data_5D601C;");
    asm("loc_4C09AD: push $_data_6724B8;");
    asm("loc_4C09B2: call *%edi;");
    asm("loc_4C09B4: add $0x10,%esp;");
    asm("loc_4C09B7: mov _data_6728B8,%edx;");
    asm("loc_4C09BD: lea 0x18(%esp),%eax;");
    asm("loc_4C09C1: push %eax;");
    asm("loc_4C09C2: push %ebx;");
    asm("loc_4C09C3: push %ebx;");
    asm("loc_4C09C4: push %ebx;");
    asm("loc_4C09C5: push $1;");
    asm("loc_4C09C7: push %ebx;");
    asm("loc_4C09C8: push %ebx;");
    asm("loc_4C09C9: push $1;");
    asm("loc_4C09CB: push %ebx;");
    asm("loc_4C09CC: push $1;");
    asm("loc_4C09CE: push $1;");
    asm("loc_4C09D0: inc %edx;");
    asm("loc_4C09D1: lea 0x44(%esp),%ecx;");
    asm("loc_4C09D5: push %ecx;");
    asm("loc_4C09D6: push $_data_5D6AC4;");
    asm("loc_4C09DB: mov %edx,_data_6728B8;");
    asm("loc_4C09E1: lea 0x4C(%esp),%edx;");
    asm("loc_4C09E5: push %edx;");
    asm("loc_4C09E6: push $_data_5D6A94;");
    asm("loc_4C09EB: push $_data_6724B8;");
    asm("loc_4C09F0: mov %esi,%ecx;");
    asm("loc_4C09F2: call _sub_5A0DB0;");
    asm("loc_4C09F7: lea 0x80(%eax),%ecx;");
    asm("loc_4C09FD: push %ecx;");
    asm("loc_4C09FE: lea 0xB4(%eax),%ecx;");
    asm("loc_4C0A04: mov %eax,0x3B8(%esi);");
    asm("loc_4C0A0A: call _sub_5A1340;");
    asm("loc_4C0A0F: mov 0x3B8(%esi),%edx;");
    asm("loc_4C0A15: movb $0xFF,0x10(%esp);");
    asm("loc_4C0A1A: mov %bl,0x11(%esp);");
    asm("loc_4C0A1E: mov %bl,0x12(%esp);");
    asm("loc_4C0A22: movb $0xC0,0x13(%esp);");
    asm("loc_4C0A27: mov 0x10(%esp),%eax;");
    asm("loc_4C0A2B: mov %eax,0x410(%edx);");
    asm("loc_4C0A31: mov 0x3B8(%esi),%ecx;");
    asm("loc_4C0A37: movb $0xFF,0x10(%esp);");
    asm("loc_4C0A3C: mov %bl,0x11(%esp);");
    asm("loc_4C0A40: mov %bl,0x12(%esp);");
    asm("loc_4C0A44: movb $0xC0,0x13(%esp);");
    asm("loc_4C0A49: mov 0x10(%esp),%edx;");
    asm("loc_4C0A4D: mov %edx,0x414(%ecx);");
    asm("loc_4C0A53: mov _data_6728B8,%eax;");
    asm("loc_4C0A58: push %eax;");
    asm("loc_4C0A59: push $_data_5D6A84;");
    asm("loc_4C0A5E: push $_data_5D601C;");
    asm("loc_4C0A63: push $_data_6724B8;");
    asm("loc_4C0A68: call *%edi;");
    asm("loc_4C0A6A: mov _data_6728B8,%ecx;");
    asm("loc_4C0A70: add $0x10,%esp;");
    asm("loc_4C0A73: push %ebx;");
    asm("loc_4C0A74: push %ebx;");
    asm("loc_4C0A75: push $1;");
    asm("loc_4C0A77: push $0x755;");
    asm("loc_4C0A7C: inc %ecx;");
    asm("loc_4C0A7D: mov %ecx,_data_6728B8;");
    asm("loc_4C0A83: mov 0x3B8(%esi),%ecx;");
    asm("loc_4C0A89: flds 0xB4(%ecx);");
    asm("loc_4C0A8F: push $0x3FA00000;");
    asm("loc_4C0A94: push $0x3D50E560;");
    asm("loc_4C0A99: fadd %st,%st(0);");
    asm("loc_4C0A9B: push %ecx;");
    asm("loc_4C0A9C: lea 0x34(%esp),%edx;");
    asm("loc_4C0AA0: fstps (%esp);");
    asm("loc_4C0AA3: push $_data_5D6A6C;");
    asm("loc_4C0AA8: push %edx;");
    asm("loc_4C0AA9: push $_data_5D01A8;");
    asm("loc_4C0AAE: push $_data_6724B8;");
    asm("loc_4C0AB3: mov %esi,%ecx;");
    asm("loc_4C0AB5: call _sub_5A0E30;");
    asm("loc_4C0ABA: mov %eax,0x3B4(%esi);");
    asm("loc_4C0AC0: mov _data_6728B8,%eax;");
    asm("loc_4C0AC5: push %eax;");
    asm("loc_4C0AC6: push $_data_5D6AE0;");
    asm("loc_4C0ACB: push $_data_5D601C;");
    asm("loc_4C0AD0: push $_data_6724B8;");
    asm("loc_4C0AD5: call *%edi;");
    asm("loc_4C0AD7: add $0x10,%esp;");
    asm("loc_4C0ADA: mov _data_6728B8,%eax;");
    asm("loc_4C0ADF: lea 0x18(%esp),%ecx;");
    asm("loc_4C0AE3: push %ecx;");
    asm("loc_4C0AE4: push %ebx;");
    asm("loc_4C0AE5: push %ebx;");
    asm("loc_4C0AE6: push %ebx;");
    asm("loc_4C0AE7: push $1;");
    asm("loc_4C0AE9: push %ebx;");
    asm("loc_4C0AEA: push %ebx;");
    asm("loc_4C0AEB: push $1;");
    asm("loc_4C0AED: push %ebx;");
    asm("loc_4C0AEE: push $1;");
    asm("loc_4C0AF0: push $1;");
    asm("loc_4C0AF2: inc %eax;");
    asm("loc_4C0AF3: lea 0x44(%esp),%edx;");
    asm("loc_4C0AF7: push %edx;");
    asm("loc_4C0AF8: push $_data_5D6AC4;");
    asm("loc_4C0AFD: mov %eax,_data_6728B8;");
    asm("loc_4C0B02: lea 0x4C(%esp),%eax;");
    asm("loc_4C0B06: push %eax;");
    asm("loc_4C0B07: push $_data_5D6A38;");
    asm("loc_4C0B0C: push $_data_6724B8;");
    asm("loc_4C0B11: mov %esi,%ecx;");
    asm("loc_4C0B13: call _sub_5A0DB0;");
    asm("loc_4C0B18: mov 0x3B8(%esi),%ecx;");
    asm("loc_4C0B1E: push %ebx;");
    asm("loc_4C0B1F: push $1;");
    asm("loc_4C0B21: mov %eax,0x3BC(%esi);");
    asm("loc_4C0B27: mov (%ecx),%edx;");
    asm("loc_4C0B29: push $1;");
    asm("loc_4C0B2B: calll *0xA8(%edx);");
    asm("loc_4C0B31: mov _data_6728B8,%eax;");
    asm("loc_4C0B36: push %eax;");
    asm("loc_4C0B37: push $_data_5D6A24;");
    asm("loc_4C0B3C: push $_data_5D601C;");
    asm("loc_4C0B41: push $_data_6724B8;");
    asm("loc_4C0B46: call *%edi;");
    asm("loc_4C0B48: mov _data_6728B8,%eax;");
    asm("loc_4C0B4D: add $0x10,%esp;");
    asm("loc_4C0B50: lea 0x18(%esp),%ecx;");
    asm("loc_4C0B54: push %ecx;");
    asm("loc_4C0B55: push %ebx;");
    asm("loc_4C0B56: push %ebx;");
    asm("loc_4C0B57: push %ebx;");
    asm("loc_4C0B58: push $1;");
    asm("loc_4C0B5A: push %ebx;");
    asm("loc_4C0B5B: push %ebx;");
    asm("loc_4C0B5C: inc %eax;");
    asm("loc_4C0B5D: push $1;");
    asm("loc_4C0B5F: mov %eax,_data_6728B8;");
    asm("loc_4C0B64: push %ebx;");
    asm("loc_4C0B65: push $1;");
    asm("loc_4C0B67: push $1;");
    asm("loc_4C0B69: lea 0x44(%esp),%edx;");
    asm("loc_4C0B6D: push %edx;");
    asm("loc_4C0B6E: push $_data_5D6A08;");
    asm("loc_4C0B73: lea 0x4C(%esp),%eax;");
    asm("loc_4C0B77: push %eax;");
    asm("loc_4C0B78: push $_data_5D6A94;");
    asm("loc_4C0B7D: push $_data_6724B8;");
    asm("loc_4C0B82: mov %esi,%ecx;");
    asm("loc_4C0B84: call _sub_5A0DB0;");
    asm("loc_4C0B89: lea 0x80(%eax),%ecx;");
    asm("loc_4C0B8F: push %ecx;");
    asm("loc_4C0B90: lea 0xB4(%eax),%ecx;");
    asm("loc_4C0B96: mov %eax,0x3DC(%esi);");
    asm("loc_4C0B9C: call _sub_5A1340;");
    asm("loc_4C0BA1: mov 0x3DC(%esi),%edx;");
    asm("loc_4C0BA7: movb $0xFF,0x10(%esp);");
    asm("loc_4C0BAC: mov %bl,0x11(%esp);");
    asm("loc_4C0BB0: mov %bl,0x12(%esp);");
    asm("loc_4C0BB4: movb $0xC0,0x13(%esp);");
    asm("loc_4C0BB9: mov 0x10(%esp),%eax;");
    asm("loc_4C0BBD: mov %eax,0x410(%edx);");
    asm("loc_4C0BC3: mov 0x3DC(%esi),%ecx;");
    asm("loc_4C0BC9: movb $0xFF,0x10(%esp);");
    asm("loc_4C0BCE: mov %bl,0x11(%esp);");
    asm("loc_4C0BD2: mov %bl,0x12(%esp);");
    asm("loc_4C0BD6: movb $0xC0,0x13(%esp);");
    asm("loc_4C0BDB: mov 0x10(%esp),%edx;");
    asm("loc_4C0BDF: push %ebx;");
    asm("loc_4C0BE0: mov %edx,0x414(%ecx);");
    asm("loc_4C0BE6: mov 0x3DC(%esi),%ecx;");
    asm("loc_4C0BEC: mov (%ecx),%eax;");
    asm("loc_4C0BEE: push $1;");
    asm("loc_4C0BF0: push $1;");
    asm("loc_4C0BF2: calll *0xA8(%eax);");
    asm("loc_4C0BF8: mov _data_6728B8,%ecx;");
    asm("loc_4C0BFE: push %ecx;");
    asm("loc_4C0BFF: push $_data_5D69F8;");
    asm("loc_4C0C04: push $_data_5D601C;");
    asm("loc_4C0C09: push $_data_6724B8;");
    asm("loc_4C0C0E: call *%edi;");
    asm("loc_4C0C10: mov _data_6728B8,%ebp;");
    asm("loc_4C0C16: add $0x10,%esp;");
    asm("loc_4C0C19: push %ebx;");
    asm("loc_4C0C1A: push %ebx;");
    asm("loc_4C0C1B: push $1;");
    asm("loc_4C0C1D: push $0x755;");
    asm("loc_4C0C22: push $0x3FA00000;");
    asm("loc_4C0C27: inc %ebp;");
    asm("loc_4C0C28: mov %ebp,_data_6728B8;");
    asm("loc_4C0C2E: mov 0x3DC(%esi),%edx;");
    asm("loc_4C0C34: flds 0xB4(%edx);");
    asm("loc_4C0C3A: push $0x3D50E560;");
    asm("loc_4C0C3F: push %ecx;");
    asm("loc_4C0C40: fadd %st,%st(0);");
    asm("loc_4C0C42: lea 0x34(%esp),%eax;");
    asm("loc_4C0C46: mov %esi,%ecx;");
    asm("loc_4C0C48: fstps (%esp);");
    asm("loc_4C0C4B: push $_data_5D69E0;");
    asm("loc_4C0C50: push %eax;");
    asm("loc_4C0C51: push $_data_5D01A8;");
    asm("loc_4C0C56: push $_data_6724B8;");
    asm("loc_4C0C5B: call _sub_5A0E30;");
    asm("loc_4C0C60: mov %eax,0x3D8(%esi);");
    asm("loc_4C0C66: mov _data_6728B8,%ecx;");
    asm("loc_4C0C6C: push %ecx;");
    asm("loc_4C0C6D: push $_data_5D6A24;");
    asm("loc_4C0C72: push $_data_5D601C;");
    asm("loc_4C0C77: push $_data_6724B8;");
    asm("loc_4C0C7C: call *%edi;");
    asm("loc_4C0C7E: mov _data_6728B8,%edx;");
    asm("loc_4C0C84: add $0x10,%esp;");
    asm("loc_4C0C87: inc %edx;");
    asm("loc_4C0C88: mov %edx,_data_6728B8;");
    asm("loc_4C0C8E: lea 0x18(%esp),%edx;");
    asm("loc_4C0C92: push %edx;");
    asm("loc_4C0C93: push %ebx;");
    asm("loc_4C0C94: push %ebx;");
    asm("loc_4C0C95: push %ebx;");
    asm("loc_4C0C96: push $1;");
    asm("loc_4C0C98: push %ebx;");
    asm("loc_4C0C99: push %ebx;");
    asm("loc_4C0C9A: push $1;");
    asm("loc_4C0C9C: push %ebx;");
    asm("loc_4C0C9D: push $1;");
    asm("loc_4C0C9F: push $1;");
    asm("loc_4C0CA1: lea 0x44(%esp),%eax;");
    asm("loc_4C0CA5: push %eax;");
    asm("loc_4C0CA6: push $_data_5D6A08;");
    asm("loc_4C0CAB: lea 0x4C(%esp),%ecx;");
    asm("loc_4C0CAF: push %ecx;");
    asm("loc_4C0CB0: push $_data_5D6A38;");
    asm("loc_4C0CB5: push $_data_6724B8;");
    asm("loc_4C0CBA: mov %esi,%ecx;");
    asm("loc_4C0CBC: call _sub_5A0DB0;");
    asm("loc_4C0CC1: mov (%esi),%edx;");
    asm("loc_4C0CC3: mov %eax,0x3E0(%esi);");
    asm("loc_4C0CC9: lea 0x60(%esp),%eax;");
    asm("loc_4C0CCD: push %eax;");
    asm("loc_4C0CCE: push $_data_5D69C4;");
    asm("loc_4C0CD3: mov %esi,%ecx;");
    asm("loc_4C0CD5: movl $0x3F800000,0x88(%esp);");
    asm("loc_4C0CE0: movl $0x3F800000,0x78(%esp);");
    asm("loc_4C0CE8: movl $0x3F800000,0x68(%esp);");
    asm("loc_4C0CF0: movl $0,0x84(%esp);");
    asm("loc_4C0CFB: movl $0,0x80(%esp);");
    asm("loc_4C0D06: movl $0,0x7C(%esp);");
    asm("loc_4C0D0E: movl $0,0x74(%esp);");
    asm("loc_4C0D16: movl $0,0x70(%esp);");
    asm("loc_4C0D1E: movl $0,0x6C(%esp);");
    asm("loc_4C0D26: movl $0,0x94(%esp);");
    asm("loc_4C0D31: movl $0,0x90(%esp);");
    asm("loc_4C0D3C: movl $0,0x8C(%esp);");
    asm("loc_4C0D47: calll *0x90(%edx);");
    asm("loc_4C0D4D: push $0x2C;");
    asm("loc_4C0D4F: call _sub_5B7E84;");
    asm("loc_4C0D54: mov %eax,%ebp;");
    asm("loc_4C0D56: add $4,%esp;");
    asm("loc_4C0D59: mov %ebp,0x14(%esp);");
    asm("loc_4C0D5D: cmp %ebx,%ebp;");
    asm("loc_4C0D5F: mov %ebx,0x98(%esp);");
    asm("loc_4C0D66: je loc_4C0DB3;");
    asm("loc_4C0D68: flds 0x8C(%esp);");
    asm("loc_4C0D6F: lea 0x24(%esp),%ecx;");
    asm("loc_4C0D73: flds 0x88(%esp);");
    asm("loc_4C0D7A: push %ecx;");
    asm("loc_4C0D7B: fsubs _data_5D69C0;");
    asm("loc_4C0D81: push %esi;");
    asm("loc_4C0D82: flds 0x8C(%esp);");
    asm("loc_4C0D89: mov %ebp,%ecx;");
    asm("loc_4C0D8B: fadds _data_5D1F04;");
    asm("loc_4C0D91: movl $_off_5D6028,(%ebp);");
    asm("loc_4C0D98: mov %ebx,4(%ebp);");
    asm("loc_4C0D9B: mov %ebx,0x24(%ebp);");
    asm("loc_4C0D9E: fstps 0x2C(%esp);");
    asm("loc_4C0DA2: fstps 0x30(%esp);");
    asm("loc_4C0DA6: fstps 0x34(%esp);");
    asm("loc_4C0DAA: call _sub_4BE7E0;");
    asm("loc_4C0DAF: mov %ebp,%eax;");
    asm("loc_4C0DB1: jmp loc_4C0DB5;");
    asm("loc_4C0DB3: xor %eax,%eax;");
    asm("loc_4C0DB5: mov %eax,0x33C(%esi);");
    asm("loc_4C0DBB: mov _data_6728B8,%edx;");
    asm("loc_4C0DC1: push %edx;");
    asm("loc_4C0DC2: push $_data_5D69B4;");
    asm("loc_4C0DC7: push $_data_5D601C;");
    asm("loc_4C0DCC: or $0xFFFFFFFF,%ebp;");
    asm("loc_4C0DCF: push $_data_6724B8;");
    asm("loc_4C0DD4: mov %ebp,0xA8(%esp);");
    asm("loc_4C0DDB: call *%edi;");
    asm("loc_4C0DDD: mov _data_6728B8,%ecx;");
    asm("loc_4C0DE3: add $0x10,%esp;");
    asm("loc_4C0DE6: push %ebx;");
    asm("loc_4C0DE7: push %ebx;");
    asm("loc_4C0DE8: push $1;");
    asm("loc_4C0DEA: push %ebx;");
    asm("loc_4C0DEB: push $0x3FC00000;");
    asm("loc_4C0DF0: push $0x3D50E560;");
    asm("loc_4C0DF5: push $0x3ED47AE1;");
    asm("loc_4C0DFA: push $_data_5D69A0;");
    asm("loc_4C0DFF: lea 0x38(%esp),%eax;");
    asm("loc_4C0E03: push %eax;");
    asm("loc_4C0E04: inc %ecx;");
    asm("loc_4C0E05: push $_data_5D010C;");
    asm("loc_4C0E0A: mov %ecx,_data_6728B8;");
    asm("loc_4C0E10: push $_data_6724B8;");
    asm("loc_4C0E15: mov %esi,%ecx;");
    asm("loc_4C0E17: call _sub_5A0E30;");
    asm("loc_4C0E1C: mov %eax,0x348(%esi);");
    asm("loc_4C0E22: mov _data_6728B8,%ecx;");
    asm("loc_4C0E28: push %ecx;");
    asm("loc_4C0E29: push $_data_5D6994;");
    asm("loc_4C0E2E: push $_data_5D601C;");
    asm("loc_4C0E33: push $_data_6724B8;");
    asm("loc_4C0E38: call *%edi;");
    asm("loc_4C0E3A: add $0x10,%esp;");
    asm("loc_4C0E3D: mov _data_6728B8,%ecx;");
    asm("loc_4C0E43: lea 0x18(%esp),%edx;");
    asm("loc_4C0E47: push %edx;");
    asm("loc_4C0E48: push %ebx;");
    asm("loc_4C0E49: push %ebx;");
    asm("loc_4C0E4A: push %ebx;");
    asm("loc_4C0E4B: push $1;");
    asm("loc_4C0E4D: push %ebx;");
    asm("loc_4C0E4E: push %ebx;");
    asm("loc_4C0E4F: push %ebx;");
    asm("loc_4C0E50: push $1;");
    asm("loc_4C0E52: push $1;");
    asm("loc_4C0E54: push $1;");
    asm("loc_4C0E56: inc %ecx;");
    asm("loc_4C0E57: lea 0x44(%esp),%eax;");
    asm("loc_4C0E5B: push %eax;");
    asm("loc_4C0E5C: mov %ecx,_data_6728B8;");
    asm("loc_4C0E62: push $_data_5D6978;");
    asm("loc_4C0E67: lea 0x4C(%esp),%ecx;");
    asm("loc_4C0E6B: push %ecx;");
    asm("loc_4C0E6C: push $_data_5D6944;");
    asm("loc_4C0E71: push $_data_6724B8;");
    asm("loc_4C0E76: mov %esi,%ecx;");
    asm("loc_4C0E78: call _sub_5A0DB0;");
    asm("loc_4C0E7D: lea 0x80(%eax),%edx;");
    asm("loc_4C0E83: push %edx;");
    asm("loc_4C0E84: lea 0xB4(%eax),%ecx;");
    asm("loc_4C0E8A: mov %eax,0x350(%esi);");
    asm("loc_4C0E90: call _sub_5A1340;");
    asm("loc_4C0E95: flds 0x20(%esp);");
    asm("loc_4C0E99: flds 0x1C(%esp);");
    asm("loc_4C0E9D: mov _data_6728B8,%ecx;");
    asm("loc_4C0EA3: fadds _data_5C99C8;");
    asm("loc_4C0EA9: mov 0x18(%esp),%eax;");
    asm("loc_4C0EAD: push %ecx;");
    asm("loc_4C0EAE: push $_data_5D6938;");
    asm("loc_4C0EB3: fstps 0x30(%esp);");
    asm("loc_4C0EB7: push $_data_5D601C;");
    asm("loc_4C0EBC: push $_data_6724B8;");
    asm("loc_4C0EC1: fstps 0x3C(%esp);");
    asm("loc_4C0EC5: mov %eax,0x34(%esp);");
    asm("loc_4C0EC9: call *%edi;");
    asm("loc_4C0ECB: mov _data_6728B8,%eax;");
    asm("loc_4C0ED0: add $0x10,%esp;");
    asm("loc_4C0ED3: inc %eax;");
    asm("loc_4C0ED4: mov %eax,_data_6728B8;");
    asm("loc_4C0ED9: mov 0x350(%esi),%eax;");
    asm("loc_4C0EDF: mov 0xB8(%eax),%edx;");
    asm("loc_4C0EE5: flds 0xB4(%eax);");
    asm("loc_4C0EEB: push %ebx;");
    asm("loc_4C0EEC: fadd %st,%st(0);");
    asm("loc_4C0EEE: push %ebx;");
    asm("loc_4C0EEF: push $1;");
    asm("loc_4C0EF1: push %ebx;");
    asm("loc_4C0EF2: push $0x3FC00000;");
    asm("loc_4C0EF7: push %edx;");
    asm("loc_4C0EF8: push %ecx;");
    asm("loc_4C0EF9: fstps (%esp);");
    asm("loc_4C0EFC: push $_data_5D6978;");
    asm("loc_4C0F01: lea 0x44(%esp),%eax;");
    asm("loc_4C0F05: push %eax;");
    asm("loc_4C0F06: push $_data_5D010C;");
    asm("loc_4C0F0B: push $_data_6724B8;");
    asm("loc_4C0F10: mov %esi,%ecx;");
    asm("loc_4C0F12: call _sub_5A0E30;");
    asm("loc_4C0F17: push %ebx;");
    asm("loc_4C0F18: mov %esi,%ecx;");
    asm("loc_4C0F1A: mov %eax,0x35C(%esi);");
    asm("loc_4C0F20: call _sub_4C1A10;");
    asm("loc_4C0F25: mov _data_6728B8,%ecx;");
    asm("loc_4C0F2B: push %ecx;");
    asm("loc_4C0F2C: push $_data_5D692C;");
    asm("loc_4C0F31: push $_data_5D601C;");
    asm("loc_4C0F36: push $_data_6724B8;");
    asm("loc_4C0F3B: call *%edi;");
    asm("loc_4C0F3D: mov _data_6728B8,%eax;");
    asm("loc_4C0F42: add $0x10,%esp;");
    asm("loc_4C0F45: push %ebx;");
    asm("loc_4C0F46: push %ebx;");
    asm("loc_4C0F47: push %ebx;");
    asm("loc_4C0F48: push $1;");
    asm("loc_4C0F4A: push %ebx;");
    asm("loc_4C0F4B: push %ebx;");
    asm("loc_4C0F4C: push %ebx;");
    asm("loc_4C0F4D: inc %eax;");
    asm("loc_4C0F4E: lea 0x34(%esp),%edx;");
    asm("loc_4C0F52: push %edx;");
    asm("loc_4C0F53: push $_data_5D6914;");
    asm("loc_4C0F58: mov %eax,_data_6728B8;");
    asm("loc_4C0F5D: lea 0x3C(%esp),%eax;");
    asm("loc_4C0F61: push %eax;");
    asm("loc_4C0F62: push %ebx;");
    asm("loc_4C0F63: push %ebx;");
    asm("loc_4C0F64: push $_data_5D68D8;");
    asm("loc_4C0F69: push $_data_5D68D8;");
    asm("loc_4C0F6E: push $_data_6724B8;");
    asm("loc_4C0F73: mov %esi,%ecx;");
    asm("loc_4C0F75: call _sub_5A0C90;");
    asm("loc_4C0F7A: lea 0x80(%eax),%ecx;");
    asm("loc_4C0F80: push %ecx;");
    asm("loc_4C0F81: lea 0xB4(%eax),%ecx;");
    asm("loc_4C0F87: mov %eax,0x354(%esi);");
    asm("loc_4C0F8D: call _sub_5A1340;");
    asm("loc_4C0F92: mov _data_6728B8,%edx;");
    asm("loc_4C0F98: push %edx;");
    asm("loc_4C0F99: push $_data_5D68CC;");
    asm("loc_4C0F9E: push $_data_5D601C;");
    asm("loc_4C0FA3: push $_data_6724B8;");
    asm("loc_4C0FA8: call *%edi;");
    asm("loc_4C0FAA: mov _data_6728B8,%eax;");
    asm("loc_4C0FAF: add $0x10,%esp;");
    asm("loc_4C0FB2: push %ebx;");
    asm("loc_4C0FB3: push %ebx;");
    asm("loc_4C0FB4: push %ebx;");
    asm("loc_4C0FB5: push $1;");
    asm("loc_4C0FB7: push %ebx;");
    asm("loc_4C0FB8: push %ebx;");
    asm("loc_4C0FB9: inc %eax;");
    asm("loc_4C0FBA: push %ebx;");
    asm("loc_4C0FBB: mov %eax,_data_6728B8;");
    asm("loc_4C0FC0: lea 0x34(%esp),%eax;");
    asm("loc_4C0FC4: push %eax;");
    asm("loc_4C0FC5: push $_data_5D68B4;");
    asm("loc_4C0FCA: lea 0x3C(%esp),%ecx;");
    asm("loc_4C0FCE: push %ecx;");
    asm("loc_4C0FCF: push %ebx;");
    asm("loc_4C0FD0: push %ebx;");
    asm("loc_4C0FD1: push $_data_5D687C;");
    asm("loc_4C0FD6: push $_data_5D687C;");
    asm("loc_4C0FDB: push $_data_6724B8;");
    asm("loc_4C0FE0: mov %esi,%ecx;");
    asm("loc_4C0FE2: call _sub_5A0C90;");
    asm("loc_4C0FE7: lea 0x80(%eax),%edx;");
    asm("loc_4C0FED: push %edx;");
    asm("loc_4C0FEE: lea 0xB4(%eax),%ecx;");
    asm("loc_4C0FF4: mov %eax,0x358(%esi);");
    asm("loc_4C0FFA: call _sub_5A1340;");
    asm("loc_4C0FFF: mov _data_6728B8,%eax;");
    asm("loc_4C1004: push %eax;");
    asm("loc_4C1005: push $_data_5D686C;");
    asm("loc_4C100A: push $_data_5D601C;");
    asm("loc_4C100F: push $_data_6724B8;");
    asm("loc_4C1014: call *%edi;");
    asm("loc_4C1016: add $0x10,%esp;");
    asm("loc_4C1019: mov _data_6728B8,%ecx;");
    asm("loc_4C101F: push %ebx;");
    asm("loc_4C1020: push %ebx;");
    asm("loc_4C1021: push $1;");
    asm("loc_4C1023: push $0x64;");
    asm("loc_4C1025: push %ebx;");
    asm("loc_4C1026: push %ebx;");
    asm("loc_4C1027: inc %ecx;");
    asm("loc_4C1028: mov %ecx,_data_6728B8;");
    asm("loc_4C102E: lea 0x30(%esp),%ecx;");
    asm("loc_4C1032: push %ecx;");
    asm("loc_4C1033: push $_data_5D684C;");
    asm("loc_4C1038: push $_data_5D682C;");
    asm("loc_4C103D: lea 0x3C(%esp),%edx;");
    asm("loc_4C1041: push %edx;");
    asm("loc_4C1042: lea 0x40(%esp),%eax;");
    asm("loc_4C1046: push %eax;");
    asm("loc_4C1047: push $_data_5D67F0;");
    asm("loc_4C104C: push %ebx;");
    asm("loc_4C104D: lea 0x4C(%esp),%ecx;");
    asm("loc_4C1051: push %ecx;");
    asm("loc_4C1052: push $_data_5D67D8;");
    asm("loc_4C1057: lea 0x54(%esp),%edx;");
    asm("loc_4C105B: push %edx;");
    asm("loc_4C105C: push $_data_5D67A8;");
    asm("loc_4C1061: push %ebx;");
    asm("loc_4C1062: lea 0x60(%esp),%eax;");
    asm("loc_4C1066: push %eax;");
    asm("loc_4C1067: push $_data_5D678C;");
    asm("loc_4C106C: lea 0x68(%esp),%ecx;");
    asm("loc_4C1070: push %ecx;");
    asm("loc_4C1071: push $_data_5D6758;");
    asm("loc_4C1076: push $1;");
    asm("loc_4C1078: lea 0x74(%esp),%edx;");
    asm("loc_4C107C: push %edx;");
    asm("loc_4C107D: push $_data_5D6740;");
    asm("loc_4C1082: lea 0x7C(%esp),%eax;");
    asm("loc_4C1086: push %eax;");
    asm("loc_4C1087: push $_data_5D6708;");
    asm("loc_4C108C: push $_data_6724B8;");
    asm("loc_4C1091: mov %esi,%ecx;");
    asm("loc_4C1093: call _sub_5A0EF0;");
    asm("loc_4C1098: lea 0x32C(%eax),%ecx;");
    asm("loc_4C109E: push %ecx;");
    asm("loc_4C109F: lea 0x390(%eax),%ecx;");
    asm("loc_4C10A5: mov %eax,0x34C(%esi);");
    asm("loc_4C10AB: call _sub_5A1340;");
    asm("loc_4C10B0: mov 0x34C(%esi),%eax;");
    asm("loc_4C10B6: lea 0x3D0(%eax),%edx;");
    asm("loc_4C10BC: push %edx;");
    asm("loc_4C10BD: lea 0x434(%eax),%ecx;");
    asm("loc_4C10C3: call _sub_5A1340;");
    asm("loc_4C10C8: mov 0x34C(%esi),%eax;");
    asm("loc_4C10CE: lea 0x474(%eax),%ecx;");
    asm("loc_4C10D4: push %ecx;");
    asm("loc_4C10D5: lea 0x4D8(%eax),%ecx;");
    asm("loc_4C10DB: call _sub_5A1340;");
    asm("loc_4C10E0: mov 0x34C(%esi),%eax;");
    asm("loc_4C10E6: lea 0x518(%eax),%edx;");
    asm("loc_4C10EC: push %edx;");
    asm("loc_4C10ED: lea 0x5E8(%eax),%ecx;");
    asm("loc_4C10F3: call _sub_5A1340;");
    asm("loc_4C10F8: mov _data_6728B8,%eax;");
    asm("loc_4C10FD: push %eax;");
    asm("loc_4C10FE: push $_data_5D66F4;");
    asm("loc_4C1103: push $_data_5D601C;");
    asm("loc_4C1108: push $_data_6724B8;");
    asm("loc_4C110D: call *%edi;");
    asm("loc_4C110F: mov _data_6728B8,%ecx;");
    asm("loc_4C1115: add $0x10,%esp;");
    asm("loc_4C1118: push %ebx;");
    asm("loc_4C1119: push %ebx;");
    asm("loc_4C111A: push %ebx;");
    asm("loc_4C111B: push $1;");
    asm("loc_4C111D: push %ebx;");
    asm("loc_4C111E: push %ebx;");
    asm("loc_4C111F: push $1;");
    asm("loc_4C1121: inc %ecx;");
    asm("loc_4C1122: mov %ecx,_data_6728B8;");
    asm("loc_4C1128: lea 0x34(%esp),%ecx;");
    asm("loc_4C112C: push %ecx;");
    asm("loc_4C112D: push $_data_5D66DC;");
    asm("loc_4C1132: lea 0x3C(%esp),%edx;");
    asm("loc_4C1136: push %edx;");
    asm("loc_4C1137: push %ebx;");
    asm("loc_4C1138: push %ebx;");
    asm("loc_4C1139: push $_data_5D66A4;");
    asm("loc_4C113E: push $_data_5D66A4;");
    asm("loc_4C1143: push $_data_6724B8;");
    asm("loc_4C1148: mov %esi,%ecx;");
    asm("loc_4C114A: call _sub_5A0C90;");
    asm("loc_4C114F: lea 0x80(%eax),%ecx;");
    asm("loc_4C1155: push %ecx;");
    asm("loc_4C1156: lea 0xB4(%eax),%ecx;");
    asm("loc_4C115C: mov %eax,0x41C(%esi);");
    asm("loc_4C1162: call _sub_5A1340;");
    asm("loc_4C1167: mov _data_6728B8,%edx;");
    asm("loc_4C116D: push %edx;");
    asm("loc_4C116E: push $_data_5D6694;");
    asm("loc_4C1173: push $_data_5D601C;");
    asm("loc_4C1178: push $_data_6724B8;");
    asm("loc_4C117D: call *%edi;");
    asm("loc_4C117F: mov _data_6728B8,%eax;");
    asm("loc_4C1184: add $0x10,%esp;");
    asm("loc_4C1187: push %ebx;");
    asm("loc_4C1188: push %ebx;");
    asm("loc_4C1189: push $1;");
    asm("loc_4C118B: inc %eax;");
    asm("loc_4C118C: mov %eax,_data_6728B8;");
    asm("loc_4C1191: mov 0x41C(%esi),%eax;");
    asm("loc_4C1197: flds 0xB8(%eax);");
    asm("loc_4C119D: push $0x756;");
    asm("loc_4C11A2: push $0x40000000;");
    asm("loc_4C11A7: fadd %st,%st(0);");
    asm("loc_4C11A9: sub $8,%esp;");
    asm("loc_4C11AC: mov %esi,%ecx;");
    asm("loc_4C11AE: fstps 4(%esp);");
    asm("loc_4C11B2: flds 0xB4(%eax);");
    asm("loc_4C11B8: lea 0x34(%esp),%eax;");
    asm("loc_4C11BC: fadd %st,%st(0);");
    asm("loc_4C11BE: fstps (%esp);");
    asm("loc_4C11C1: push $_data_5D66DC;");
    asm("loc_4C11C6: push %eax;");
    asm("loc_4C11C7: push $_data_5D0410;");
    asm("loc_4C11CC: push $_data_6724B8;");
    asm("loc_4C11D1: call _sub_5A0E30;");
    asm("loc_4C11D6: mov %eax,0x420(%esi);");
    asm("loc_4C11DC: mov _data_6728B8,%ecx;");
    asm("loc_4C11E2: push %ecx;");
    asm("loc_4C11E3: push $_data_5D6688;");
    asm("loc_4C11E8: push $_data_5D601C;");
    asm("loc_4C11ED: push $_data_6724B8;");
    asm("loc_4C11F2: movl $0x3B03126F,0x34(%esp);");
    asm("loc_4C11FA: movl $0xBBE56042,0x38(%esp);");
    asm("loc_4C1202: movl $0,0x3C(%esp);");
    asm("loc_4C120A: call *%edi;");
    asm("loc_4C120C: mov _data_6728B8,%ecx;");
    asm("loc_4C1212: add $0x10,%esp;");
    asm("loc_4C1215: lea 0x18(%esp),%edx;");
    asm("loc_4C1219: push %edx;");
    asm("loc_4C121A: push %ebx;");
    asm("loc_4C121B: inc %ecx;");
    asm("loc_4C121C: push %ebx;");
    asm("loc_4C121D: mov %ecx,_data_6728B8;");
    asm("loc_4C1223: push %ebx;");
    asm("loc_4C1224: push $1;");
    asm("loc_4C1226: push %ebx;");
    asm("loc_4C1227: push %ebx;");
    asm("loc_4C1228: push %ebx;");
    asm("loc_4C1229: push $1;");
    asm("loc_4C122B: push $1;");
    asm("loc_4C122D: push %ebx;");
    asm("loc_4C122E: lea 0x44(%esp),%eax;");
    asm("loc_4C1232: push %eax;");
    asm("loc_4C1233: push $_data_5D666C;");
    asm("loc_4C1238: lea 0x58(%esp),%ecx;");
    asm("loc_4C123C: push %ecx;");
    asm("loc_4C123D: push $_data_5D663C;");
    asm("loc_4C1242: push $_data_6724B8;");
    asm("loc_4C1247: mov %esi,%ecx;");
    asm("loc_4C1249: call _sub_5A0DB0;");
    asm("loc_4C124E: push %ebx;");
    asm("loc_4C124F: push $1;");
    asm("loc_4C1251: mov %eax,0x368(%esi);");
    asm("loc_4C1257: mov (%eax),%edx;");
    asm("loc_4C1259: push $1;");
    asm("loc_4C125B: mov %eax,%ecx;");
    asm("loc_4C125D: calll *0xA8(%edx);");
    asm("loc_4C1263: mov _data_6728B8,%eax;");
    asm("loc_4C1268: push %eax;");
    asm("loc_4C1269: push $_data_5D6630;");
    asm("loc_4C126E: push $_data_5D601C;");
    asm("loc_4C1273: push $_data_6724B8;");
    asm("loc_4C1278: call *%edi;");
    asm("loc_4C127A: mov _data_6728B8,%ecx;");
    asm("loc_4C1280: add $0x10,%esp;");
    asm("loc_4C1283: push %ebx;");
    asm("loc_4C1284: push %ebx;");
    asm("loc_4C1285: push %ebx;");
    asm("loc_4C1286: push $1;");
    asm("loc_4C1288: push %ebx;");
    asm("loc_4C1289: push %ebx;");
    asm("loc_4C128A: push %ebx;");
    asm("loc_4C128B: inc %ecx;");
    asm("loc_4C128C: mov %ecx,_data_6728B8;");
    asm("loc_4C1292: lea 0x34(%esp),%ecx;");
    asm("loc_4C1296: push %ecx;");
    asm("loc_4C1297: push $_data_5D6614;");
    asm("loc_4C129C: lea 0x3C(%esp),%edx;");
    asm("loc_4C12A0: push %edx;");
    asm("loc_4C12A1: push %ebx;");
    asm("loc_4C12A2: push %ebx;");
    asm("loc_4C12A3: push $_data_5D687C;");
    asm("loc_4C12A8: push $_data_5D687C;");
    asm("loc_4C12AD: push $_data_6724B8;");
    asm("loc_4C12B2: mov %esi,%ecx;");
    asm("loc_4C12B4: call _sub_5A0C90;");
    asm("loc_4C12B9: lea 0x80(%eax),%ecx;");
    asm("loc_4C12BF: push %ecx;");
    asm("loc_4C12C0: lea 0xB4(%eax),%ecx;");
    asm("loc_4C12C6: mov %eax,0x36C(%esi);");
    asm("loc_4C12CC: call _sub_5A1340;");
    asm("loc_4C12D1: mov 0x36C(%esi),%ecx;");
    asm("loc_4C12D7: mov (%ecx),%edx;");
    asm("loc_4C12D9: push %ebx;");
    asm("loc_4C12DA: push $1;");
    asm("loc_4C12DC: push $1;");
    asm("loc_4C12DE: calll *0xA8(%edx);");
    asm("loc_4C12E4: mov _data_6728B8,%eax;");
    asm("loc_4C12E9: mov %bl,0x10(%esp);");
    asm("loc_4C12ED: mov %bl,0x11(%esp);");
    asm("loc_4C12F1: mov %bl,0x12(%esp);");
    asm("loc_4C12F5: mov %bl,0x13(%esp);");
    asm("loc_4C12F9: mov %bl,0x14(%esp);");
    asm("loc_4C12FD: mov %bl,0x15(%esp);");
    asm("loc_4C1301: mov %bl,0x16(%esp);");
    asm("loc_4C1305: mov %bl,0x17(%esp);");
    asm("loc_4C1309: movl $0x3E051EB8,0x24(%esp);");
    asm("loc_4C1311: movl $0xBD408312,0x28(%esp);");
    asm("loc_4C1319: movl $0,0x2C(%esp);");
    asm("loc_4C1321: movl $0,0x30(%esp);");
    asm("loc_4C1329: movl $0x43870000,0x34(%esp);");
    asm("loc_4C1331: movl $0,0x38(%esp);");
    asm("loc_4C1339: movl $0,0x3C(%esp);");
    asm("loc_4C1341: movl $0,0x40(%esp);");
    asm("loc_4C1349: movl $0x41F00000,0x44(%esp);");
    asm("loc_4C1351: push %eax;");
    asm("loc_4C1352: push $_data_5D6608;");
    asm("loc_4C1357: push $_data_5D601C;");
    asm("loc_4C135C: push $_data_6724B8;");
    asm("loc_4C1361: call *%edi;");
    asm("loc_4C1363: mov _data_6728B8,%eax;");
    asm("loc_4C1368: add $0x10,%esp;");
    asm("loc_4C136B: lea 0x10(%esp),%ecx;");
    asm("loc_4C136F: push %ecx;");
    asm("loc_4C1370: lea 0x18(%esp),%edx;");
    asm("loc_4C1374: push %edx;");
    asm("loc_4C1375: push %ebx;");
    asm("loc_4C1376: push %ebx;");
    asm("loc_4C1377: inc %eax;");
    asm("loc_4C1378: push $_data_5D65EC;");
    asm("loc_4C137D: mov %eax,_data_6728B8;");
    asm("loc_4C1382: lea 0x38(%esp),%eax;");
    asm("loc_4C1386: push %eax;");
    asm("loc_4C1387: lea 0x48(%esp),%ecx;");
    asm("loc_4C138B: push %ecx;");
    asm("loc_4C138C: lea 0x34(%esp),%edx;");
    asm("loc_4C1390: push %edx;");
    asm("loc_4C1391: lea 0x5C(%esp),%eax;");
    asm("loc_4C1395: push %eax;");
    asm("loc_4C1396: push $_data_6724B8;");
    asm("loc_4C139B: mov %esi,%ecx;");
    asm("loc_4C139D: call _sub_5A1020;");
    asm("loc_4C13A2: push %ebx;");
    asm("loc_4C13A3: push $1;");
    asm("loc_4C13A5: mov %eax,0x370(%esi);");
    asm("loc_4C13AB: mov (%eax),%edx;");
    asm("loc_4C13AD: push $1;");
    asm("loc_4C13AF: mov %eax,%ecx;");
    asm("loc_4C13B1: calll *0xA8(%edx);");
    asm("loc_4C13B7: mov 0x370(%esi),%eax;");
    asm("loc_4C13BD: andb $0x7F,0x518(%eax);");
    asm("loc_4C13C4: mov _data_6728B8,%eax;");
    asm("loc_4C13C9: push %eax;");
    asm("loc_4C13CA: push $_data_5D65E0;");
    asm("loc_4C13CF: push $_data_5D601C;");
    asm("loc_4C13D4: push $_data_6724B8;");
    asm("loc_4C13D9: movl $0x3DC28F5C,0x4C(%esp);");
    asm("loc_4C13E1: movl $0x3C4CCCCD,0x50(%esp);");
    asm("loc_4C13E9: movl $0,0x54(%esp);");
    asm("loc_4C13F1: call *%edi;");
    asm("loc_4C13F3: mov _data_6728B8,%edx;");
    asm("loc_4C13F9: add $0x10,%esp;");
    asm("loc_4C13FC: push %ebx;");
    asm("loc_4C13FD: push %ebx;");
    asm("loc_4C13FE: push %ebx;");
    asm("loc_4C13FF: push %ebx;");
    asm("loc_4C1400: push $0x3FC00000;");
    asm("loc_4C1405: push $0x3C23D70A;");
    asm("loc_4C140A: push $0x3E828F5C;");
    asm("loc_4C140F: push $_data_5D65C4;");
    asm("loc_4C1414: lea 0x5C(%esp),%ecx;");
    asm("loc_4C1418: push %ecx;");
    asm("loc_4C1419: push $_data_5D01A8;");
    asm("loc_4C141E: inc %edx;");
    asm("loc_4C141F: push $_data_6724B8;");
    asm("loc_4C1424: mov %esi,%ecx;");
    asm("loc_4C1426: mov %edx,_data_6728B8;");
    asm("loc_4C142C: call _sub_5A0E30;");
    asm("loc_4C1431: push %ebx;");
    asm("loc_4C1432: push $1;");
    asm("loc_4C1434: mov %eax,0x374(%esi);");
    asm("loc_4C143A: mov (%eax),%edx;");
    asm("loc_4C143C: push $1;");
    asm("loc_4C143E: mov %eax,%ecx;");
    asm("loc_4C1440: calll *0xA8(%edx);");
    asm("loc_4C1446: mov 0x374(%esi),%ecx;");
    asm("loc_4C144C: mov (%ecx),%eax;");
    asm("loc_4C144E: push $1;");
    asm("loc_4C1450: push %ebx;");
    asm("loc_4C1451: push $0x22;");
    asm("loc_4C1453: calll *0xA8(%eax);");
    asm("loc_4C1459: mov _data_6728B8,%ecx;");
    asm("loc_4C145F: push %ecx;");
    asm("loc_4C1460: push $_data_5D65BC;");
    asm("loc_4C1465: push $_data_5D601C;");
    asm("loc_4C146A: push $_data_6724B8;");
    asm("loc_4C146F: call *%edi;");
    asm("loc_4C1471: incl _data_6728B8;");
    asm("loc_4C1477: mov 0x368(%esi),%edx;");
    asm("loc_4C147D: push %ebx;");
    asm("loc_4C147E: push %edx;");
    asm("loc_4C147F: push $_data_5CF24C;");
    asm("loc_4C1484: push $_data_6724B8;");
    asm("loc_4C1489: call _sub_59DB20;");
    asm("loc_4C148E: add $0x20,%esp;");
    asm("loc_4C1491: push $0x3E51EB85;");
    asm("loc_4C1496: push $0x3E6B851F;");
    asm("loc_4C149B: mov %eax,%ecx;");
    asm("loc_4C149D: mov %eax,0x378(%esi);");
    asm("loc_4C14A3: call _sub_579CC0;");
    asm("loc_4C14A8: mov 0x378(%esi),%ecx;");
    asm("loc_4C14AE: lea 0x3C(%esp),%eax;");
    asm("loc_4C14B2: push %eax;");
    asm("loc_4C14B3: movl $0xBDFDF3B6,0x40(%esp);");
    asm("loc_4C14BB: movl $0x3D051EB8,0x44(%esp);");
    asm("loc_4C14C3: movl $0,0x48(%esp);");
    asm("loc_4C14CB: call _sub_579C40;");
    asm("loc_4C14D0: mov 0x378(%esi),%eax;");
    asm("loc_4C14D6: andb $0xFC,0x6C(%eax);");
    asm("loc_4C14DA: mov _data_6728B8,%ecx;");
    asm("loc_4C14E0: push %ecx;");
    asm("loc_4C14E1: push $_data_5D65B0;");
    asm("loc_4C14E6: push $_data_5D601C;");
    asm("loc_4C14EB: push $_data_6724B8;");
    asm("loc_4C14F0: movl $0x3C23D70A,0x4C(%esp);");
    asm("loc_4C14F8: movl $0xBBE56042,0x50(%esp);");
    asm("loc_4C1500: movl $0,0x54(%esp);");
    asm("loc_4C1508: call *%edi;");
    asm("loc_4C150A: add $0x10,%esp;");
    asm("loc_4C150D: mov _data_6728B8,%ecx;");
    asm("loc_4C1513: lea 0x18(%esp),%edx;");
    asm("loc_4C1517: push %edx;");
    asm("loc_4C1518: push %ebx;");
    asm("loc_4C1519: push %ebx;");
    asm("loc_4C151A: push %ebx;");
    asm("loc_4C151B: push $1;");
    asm("loc_4C151D: push %ebx;");
    asm("loc_4C151E: push %ebx;");
    asm("loc_4C151F: push %ebx;");
    asm("loc_4C1520: push $1;");
    asm("loc_4C1522: push $1;");
    asm("loc_4C1524: push %ebx;");
    asm("loc_4C1525: inc %ecx;");
    asm("loc_4C1526: lea 0x44(%esp),%eax;");
    asm("loc_4C152A: push %eax;");
    asm("loc_4C152B: mov %ecx,_data_6728B8;");
    asm("loc_4C1531: push $_data_5D6594;");
    asm("loc_4C1536: lea 0x70(%esp),%ecx;");
    asm("loc_4C153A: push %ecx;");
    asm("loc_4C153B: push $_data_5D663C;");
    asm("loc_4C1540: push $_data_6724B8;");
    asm("loc_4C1545: mov %esi,%ecx;");
    asm("loc_4C1547: call _sub_5A0DB0;");
    asm("loc_4C154C: push %ebx;");
    asm("loc_4C154D: push $1;");
    asm("loc_4C154F: mov %eax,0x37C(%esi);");
    asm("loc_4C1555: mov (%eax),%edx;");
    asm("loc_4C1557: push $1;");
    asm("loc_4C1559: mov %eax,%ecx;");
    asm("loc_4C155B: calll *0xA8(%edx);");
    asm("loc_4C1561: mov _data_6728B8,%eax;");
    asm("loc_4C1566: push %eax;");
    asm("loc_4C1567: push $_data_5D6588;");
    asm("loc_4C156C: push $_data_5D601C;");
    asm("loc_4C1571: push $_data_6724B8;");
    asm("loc_4C1576: movl $0x3C23D70A,0x4C(%esp);");
    asm("loc_4C157E: movl $0,0x50(%esp);");
    asm("loc_4C1586: movl $0,0x54(%esp);");
    asm("loc_4C158E: call *%edi;");
    asm("loc_4C1590: mov _data_6728B8,%ecx;");
    asm("loc_4C1596: add $0x10,%esp;");
    asm("loc_4C1599: push %ebx;");
    asm("loc_4C159A: push %ebx;");
    asm("loc_4C159B: push %ebx;");
    asm("loc_4C159C: push $1;");
    asm("loc_4C159E: push %ebx;");
    asm("loc_4C159F: push %ebx;");
    asm("loc_4C15A0: push %ebx;");
    asm("loc_4C15A1: inc %ecx;");
    asm("loc_4C15A2: mov %ecx,_data_6728B8;");
    asm("loc_4C15A8: lea 0x34(%esp),%ecx;");
    asm("loc_4C15AC: push %ecx;");
    asm("loc_4C15AD: push $_data_5D656C;");
    asm("loc_4C15B2: lea 0x60(%esp),%edx;");
    asm("loc_4C15B6: push %edx;");
    asm("loc_4C15B7: push %ebx;");
    asm("loc_4C15B8: push %ebx;");
    asm("loc_4C15B9: push $_data_5D687C;");
    asm("loc_4C15BE: push $_data_5D687C;");
    asm("loc_4C15C3: push $_data_6724B8;");
    asm("loc_4C15C8: mov %esi,%ecx;");
    asm("loc_4C15CA: call _sub_5A0C90;");
    asm("loc_4C15CF: lea 0x80(%eax),%ecx;");
    asm("loc_4C15D5: push %ecx;");
    asm("loc_4C15D6: lea 0xB4(%eax),%ecx;");
    asm("loc_4C15DC: mov %eax,0x380(%esi);");
    asm("loc_4C15E2: call _sub_5A1340;");
    asm("loc_4C15E7: mov 0x380(%esi),%ecx;");
    asm("loc_4C15ED: mov (%ecx),%edx;");
    asm("loc_4C15EF: push %ebx;");
    asm("loc_4C15F0: push $1;");
    asm("loc_4C15F2: push $1;");
    asm("loc_4C15F4: calll *0xA8(%edx);");
    asm("loc_4C15FA: mov _data_6728B8,%eax;");
    asm("loc_4C15FF: push %eax;");
    asm("loc_4C1600: push $_data_5D6560;");
    asm("loc_4C1605: push $_data_5D601C;");
    asm("loc_4C160A: push $_data_6724B8;");
    asm("loc_4C160F: mov %bl,0x24(%esp);");
    asm("loc_4C1613: mov %bl,0x25(%esp);");
    asm("loc_4C1617: mov %bl,0x26(%esp);");
    asm("loc_4C161B: mov %bl,0x27(%esp);");
    asm("loc_4C161F: mov %bl,0x20(%esp);");
    asm("loc_4C1623: mov %bl,0x21(%esp);");
    asm("loc_4C1627: mov %bl,0x22(%esp);");
    asm("loc_4C162B: mov %bl,0x23(%esp);");
    asm("loc_4C162F: movl $0x3E051EB8,0x4C(%esp);");
    asm("loc_4C1637: movl $0xBD408312,0x50(%esp);");
    asm("loc_4C163F: movl $0,0x54(%esp);");
    asm("loc_4C1647: movl $0,0x40(%esp);");
    asm("loc_4C164F: movl $0x43870000,0x44(%esp);");
    asm("loc_4C1657: movl $0,0x48(%esp);");
    asm("loc_4C165F: movl $0x3C23D70A,0x34(%esp);");
    asm("loc_4C1667: movl $0,0x38(%esp);");
    asm("loc_4C166F: movl $0,0x3C(%esp);");
    asm("loc_4C1677: movl $0,0x58(%esp);");
    asm("loc_4C167F: movl $0,0x5C(%esp);");
    asm("loc_4C1687: movl $0x41F00000,0x60(%esp);");
    asm("loc_4C168F: call *%edi;");
    asm("loc_4C1691: mov _data_6728B8,%eax;");
    asm("loc_4C1696: add $0x10,%esp;");
    asm("loc_4C1699: lea 0x14(%esp),%ecx;");
    asm("loc_4C169D: push %ecx;");
    asm("loc_4C169E: lea 0x14(%esp),%edx;");
    asm("loc_4C16A2: push %edx;");
    asm("loc_4C16A3: push %ebx;");
    asm("loc_4C16A4: push %ebx;");
    asm("loc_4C16A5: inc %eax;");
    asm("loc_4C16A6: push $_data_5D6544;");
    asm("loc_4C16AB: mov %eax,_data_6728B8;");
    asm("loc_4C16B0: lea 0x50(%esp),%eax;");
    asm("loc_4C16B4: push %eax;");
    asm("loc_4C16B5: lea 0x48(%esp),%ecx;");
    asm("loc_4C16B9: push %ecx;");
    asm("loc_4C16BA: lea 0x40(%esp),%edx;");
    asm("loc_4C16BE: push %edx;");
    asm("loc_4C16BF: lea 0x68(%esp),%eax;");
    asm("loc_4C16C3: push %eax;");
    asm("loc_4C16C4: push $_data_6724B8;");
    asm("loc_4C16C9: mov %esi,%ecx;");
    asm("loc_4C16CB: call _sub_5A1020;");
    asm("loc_4C16D0: mov %eax,0x384(%esi);");
    asm("loc_4C16D6: mov (%eax),%edx;");
    asm("loc_4C16D8: push %ebx;");
    asm("loc_4C16D9: push $1;");
    asm("loc_4C16DB: push $1;");
    asm("loc_4C16DD: mov %eax,%ecx;");
    asm("loc_4C16DF: calll *0xA8(%edx);");
    asm("loc_4C16E5: mov 0x384(%esi),%eax;");
    asm("loc_4C16EB: andb $0x7F,0x518(%eax);");
    asm("loc_4C16F2: mov _data_6728B8,%eax;");
    asm("loc_4C16F7: push %eax;");
    asm("loc_4C16F8: push $_data_5D6538;");
    asm("loc_4C16FD: push $_data_5D601C;");
    asm("loc_4C1702: push $_data_6724B8;");
    asm("loc_4C1707: movl $0x3DD70A3D,0x58(%esp);");
    asm("loc_4C170F: movl $0x3C4CCCCD,0x5C(%esp);");
    asm("loc_4C1717: movl $0,0x60(%esp);");
    asm("loc_4C171F: call *%edi;");
    asm("loc_4C1721: mov _data_6728B8,%edx;");
    asm("loc_4C1727: add $0x10,%esp;");
    asm("loc_4C172A: push %ebx;");
    asm("loc_4C172B: push %ebx;");
    asm("loc_4C172C: push %ebx;");
    asm("loc_4C172D: push %ebx;");
    asm("loc_4C172E: push $0x3FC00000;");
    asm("loc_4C1733: push $0x3C23D70A;");
    asm("loc_4C1738: push $0x3E828F5C;");
    asm("loc_4C173D: push $_data_5D651C;");
    asm("loc_4C1742: lea 0x68(%esp),%ecx;");
    asm("loc_4C1746: push %ecx;");
    asm("loc_4C1747: push $_data_5D01A8;");
    asm("loc_4C174C: inc %edx;");
    asm("loc_4C174D: push $_data_6724B8;");
    asm("loc_4C1752: mov %esi,%ecx;");
    asm("loc_4C1754: mov %edx,_data_6728B8;");
    asm("loc_4C175A: call _sub_5A0E30;");
    asm("loc_4C175F: push %ebx;");
    asm("loc_4C1760: push $1;");
    asm("loc_4C1762: mov %eax,0x388(%esi);");
    asm("loc_4C1768: mov (%eax),%edx;");
    asm("loc_4C176A: push $1;");
    asm("loc_4C176C: mov %eax,%ecx;");
    asm("loc_4C176E: calll *0xA8(%edx);");
    asm("loc_4C1774: mov 0x388(%esi),%ecx;");
    asm("loc_4C177A: mov (%ecx),%eax;");
    asm("loc_4C177C: push $1;");
    asm("loc_4C177E: push %ebx;");
    asm("loc_4C177F: push $0x22;");
    asm("loc_4C1781: calll *0xA8(%eax);");
    asm("loc_4C1787: mov _data_6728B8,%ecx;");
    asm("loc_4C178D: push %ecx;");
    asm("loc_4C178E: push $_data_5D6514;");
    asm("loc_4C1793: push $_data_5D601C;");
    asm("loc_4C1798: push $_data_6724B8;");
    asm("loc_4C179D: call *%edi;");
    asm("loc_4C179F: incl _data_6728B8;");
    asm("loc_4C17A5: mov 0x37C(%esi),%edx;");
    asm("loc_4C17AB: push %ebx;");
    asm("loc_4C17AC: push %edx;");
    asm("loc_4C17AD: push $_data_5CF24C;");
    asm("loc_4C17B2: push $_data_6724B8;");
    asm("loc_4C17B7: call _sub_59DB20;");
    asm("loc_4C17BC: add $0x20,%esp;");
    asm("loc_4C17BF: push $0x3E51EB85;");
    asm("loc_4C17C4: push $0x3E6B851F;");
    asm("loc_4C17C9: mov %eax,%ecx;");
    asm("loc_4C17CB: mov %eax,0x38C(%esi);");
    asm("loc_4C17D1: call _sub_579CC0;");
    asm("loc_4C17D6: mov 0x38C(%esi),%ecx;");
    asm("loc_4C17DC: lea 0x54(%esp),%eax;");
    asm("loc_4C17E0: push %eax;");
    asm("loc_4C17E1: movl $0xBDEF9DB2,0x58(%esp);");
    asm("loc_4C17E9: movl $0x3D051EB8,0x5C(%esp);");
    asm("loc_4C17F1: movl $0,0x60(%esp);");
    asm("loc_4C17F9: call _sub_579C40;");
    asm("loc_4C17FE: mov 0x38C(%esi),%eax;");
    asm("loc_4C1804: andb $0xFC,0x6C(%eax);");
    asm("loc_4C1808: mov _data_6728B8,%ecx;");
    asm("loc_4C180E: push %ecx;");
    asm("loc_4C180F: push $_data_5D6508;");
    asm("loc_4C1814: push $_data_5D601C;");
    asm("loc_4C1819: push $_data_6724B8;");
    asm("loc_4C181E: call *%edi;");
    asm("loc_4C1820: mov _data_6728B8,%edx;");
    asm("loc_4C1826: add $0x10,%esp;");
    asm("loc_4C1829: push %ebx;");
    asm("loc_4C182A: push %ebx;");
    asm("loc_4C182B: push %ebx;");
    asm("loc_4C182C: mov $1,%edi;");
    asm("loc_4C1831: push %edi;");
    asm("loc_4C1832: push %ebx;");
    asm("loc_4C1833: push %ebx;");
    asm("loc_4C1834: push %ebx;");
    asm("loc_4C1835: inc %edx;");
    asm("loc_4C1836: mov %edx,_data_6728B8;");
    asm("loc_4C183C: lea 0x34(%esp),%edx;");
    asm("loc_4C1840: push %edx;");
    asm("loc_4C1841: push $_data_5D64F8;");
    asm("loc_4C1846: lea 0x3C(%esp),%eax;");
    asm("loc_4C184A: push %eax;");
    asm("loc_4C184B: push %ebx;");
    asm("loc_4C184C: push %ebx;");
    asm("loc_4C184D: push $_data_5D687C;");
    asm("loc_4C1852: push $_data_5D687C;");
    asm("loc_4C1857: push $_data_6724B8;");
    asm("loc_4C185C: mov %esi,%ecx;");
    asm("loc_4C185E: call _sub_5A0C90;");
    asm("loc_4C1863: lea 0x80(%eax),%ecx;");
    asm("loc_4C1869: push %ecx;");
    asm("loc_4C186A: lea 0xB4(%eax),%ecx;");
    asm("loc_4C1870: mov %eax,0x340(%esi);");
    asm("loc_4C1876: call _sub_5A1340;");
    asm("loc_4C187B: push $0x68;");
    asm("loc_4C187D: call _sub_5B7E84;");
    asm("loc_4C1882: add $4,%esp;");
    asm("loc_4C1885: mov %eax,0x14(%esp);");
    asm("loc_4C1889: cmp %ebx,%eax;");
    asm("loc_4C188B: mov %edi,0x98(%esp);");
    asm("loc_4C1892: je loc_4C18C0;");
    asm("loc_4C1894: push %ebx;");
    asm("loc_4C1895: push %edi;");
    asm("loc_4C1896: push $5;");
    asm("loc_4C1898: push $_data_5D64E0;");
    asm("loc_4C189D: push $_data_5D64CC;");
    asm("loc_4C18A2: push $_data_5D64B4;");
    asm("loc_4C18A7: push $_data_5D64A0;");
    asm("loc_4C18AC: push $_data_5D6488;");
    asm("loc_4C18B1: push $_data_5D646C;");
    asm("loc_4C18B6: push %esi;");
    asm("loc_4C18B7: mov %eax,%ecx;");
    asm("loc_4C18B9: call _sub_4BF120;");
    asm("loc_4C18BE: jmp loc_4C18C2;");
    asm("loc_4C18C0: xor %eax,%eax;");
    asm("loc_4C18C2: push $0x68;");
    asm("loc_4C18C4: mov %ebp,0x9C(%esp);");
    asm("loc_4C18CB: mov %eax,0x330(%esi);");
    asm("loc_4C18D1: call _sub_5B7E84;");
    asm("loc_4C18D6: add $4,%esp;");
    asm("loc_4C18D9: mov %eax,0x14(%esp);");
    asm("loc_4C18DD: cmp %ebx,%eax;");
    asm("loc_4C18DF: movl $2,0x98(%esp);");
    asm("loc_4C18EA: je loc_4C1918;");
    asm("loc_4C18EC: push %edi;");
    asm("loc_4C18ED: push %edi;");
    asm("loc_4C18EE: push $5;");
    asm("loc_4C18F0: push $_data_5D644C;");
    asm("loc_4C18F5: push $_data_5D6430;");
    asm("loc_4C18FA: push $_data_5D6418;");
    asm("loc_4C18FF: push $_data_5D6404;");
    asm("loc_4C1904: push $_data_5D63EC;");
    asm("loc_4C1909: push $_data_5D63D0;");
    asm("loc_4C190E: push %esi;");
    asm("loc_4C190F: mov %eax,%ecx;");
    asm("loc_4C1911: call _sub_4BF120;");
    asm("loc_4C1916: jmp loc_4C191A;");
    asm("loc_4C1918: xor %eax,%eax;");
    asm("loc_4C191A: mov %eax,%ecx;");
    asm("loc_4C191C: mov %ebp,0x98(%esp);");
    asm("loc_4C1923: mov %eax,0x338(%esi);");
    asm("loc_4C1929: call _sub_4BF720;");
    asm("loc_4C192E: push $0x68;");
    asm("loc_4C1930: call _sub_5B7E84;");
    asm("loc_4C1935: add $4,%esp;");
    asm("loc_4C1938: mov %eax,0x14(%esp);");
    asm("loc_4C193C: cmp %ebx,%eax;");
    asm("loc_4C193E: movl $3,0x98(%esp);");
    asm("loc_4C1949: je loc_4C1977;");
    asm("loc_4C194B: push %edi;");
    asm("loc_4C194C: push %ebx;");
    asm("loc_4C194D: push $5;");
    asm("loc_4C194F: push $_data_5D63B8;");
    asm("loc_4C1954: push $_data_5D63A4;");
    asm("loc_4C1959: push $_data_5D638C;");
    asm("loc_4C195E: push $_data_5D6378;");
    asm("loc_4C1963: push $_data_5D6360;");
    asm("loc_4C1968: push $_data_5D69C4;");
    asm("loc_4C196D: push %esi;");
    asm("loc_4C196E: mov %eax,%ecx;");
    asm("loc_4C1970: call _sub_4BF120;");
    asm("loc_4C1975: jmp loc_4C1979;");
    asm("loc_4C1977: xor %eax,%eax;");
    asm("loc_4C1979: push %edi;");
    asm("loc_4C197A: mov %esi,%ecx;");
    asm("loc_4C197C: mov %ebp,0x9C(%esp);");
    asm("loc_4C1983: mov %eax,0x334(%esi);");
    asm("loc_4C1989: call _sub_4C1AE0;");
    asm("loc_4C198E: push $2;");
    asm("loc_4C1990: mov %esi,%ecx;");
    asm("loc_4C1992: call _sub_4C1AE0;");
    asm("loc_4C1997: mov %edi,0x70(%esi);");
    asm("loc_4C199A: mov _data_674AA0,%eax;");
    asm("loc_4C199F: cmp %ebx,%eax;");
    asm("loc_4C19A1: pop %ebp;");
    asm("loc_4C19A2: je loc_4C19BF;");
    asm("loc_4C19A4: mov 0x4D0(%eax),%al;");
    asm("loc_4C19AA: cmp %bl,%al;");
    asm("loc_4C19AC: mov %al,0x435(%esi);");
    asm("loc_4C19B2: je loc_4C19BF;");
    asm("loc_4C19B4: mov _data_674AA0,%ecx;");
    asm("loc_4C19BA: mov (%ecx),%edx;");
    asm("loc_4C19BC: calll *0x30(%edx);");
    asm("loc_4C19BF: mov _data_674B04,%eax;");
    asm("loc_4C19C4: cmp %ebx,%eax;");
    asm("loc_4C19C6: je loc_4C19E3;");
    asm("loc_4C19C8: mov 0x4D0(%eax),%al;");
    asm("loc_4C19CE: cmp %bl,%al;");
    asm("loc_4C19D0: mov %al,0x434(%esi);");
    asm("loc_4C19D6: je loc_4C19E3;");
    asm("loc_4C19D8: mov _data_674B04,%ecx;");
    asm("loc_4C19DE: mov (%ecx),%eax;");
    asm("loc_4C19E0: calll *0x30(%eax);");
    asm("loc_4C19E3: push %edi;");
    asm("loc_4C19E4: call _sub_46B450;");
    asm("loc_4C19E9: add $4,%esp;");
    asm("loc_4C19EC: pop %edi;");
    asm("loc_4C19ED: mov $1,%al;");
    asm("loc_4C19EF: pop %ebx;");
    asm("loc_4C19F0: mov 0x84(%esp),%ecx;");
    asm("loc_4C19F7: pop %esi;");
    asm("loc_4C19F8: mov %ecx,%fs:0;");
    asm("loc_4C19FF: add $0x8C,%esp;");
    asm("loc_4C1A05: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C1A10() // _sub_4C1A10
{
    __DEBUG_ASM(4C1A10);
    // chunk 0x4C1A10 _sub_4C1A10
    asm("loc_4C1A10: sub $0x80,%esp;");
    asm("loc_4C1A16: push %ebx;");
    asm("loc_4C1A17: push %ebp;");
    asm("loc_4C1A18: mov %ecx,%ebx;");
    asm("loc_4C1A1A: mov 0x34C(%ebx),%eax;");
    asm("loc_4C1A20: test %eax,%eax;");
    asm("loc_4C1A22: push %esi;");
    asm("loc_4C1A23: push %edi;");
    asm("loc_4C1A24: mov 0x94(%esp),%edi;");
    asm("loc_4C1A2B: je loc_4C1A47;");
    asm("loc_4C1A2D: mov 0x65C(%eax),%ecx;");
    asm("loc_4C1A33: cmp %ecx,%edi;");
    asm("loc_4C1A35: jle loc_4C1A3B;");
    asm("loc_4C1A37: mov %ecx,%edi;");
    asm("loc_4C1A39: jmp loc_4C1A47;");
    asm("loc_4C1A3B: mov 0x658(%eax),%eax;");
    asm("loc_4C1A41: cmp %eax,%edi;");
    asm("loc_4C1A43: jge loc_4C1A47;");
    asm("loc_4C1A45: mov %eax,%edi;");
    asm("loc_4C1A47: push %edi;");
    asm("loc_4C1A48: lea 0x14(%esp),%eax;");
    asm("loc_4C1A4C: push $_data_5D0EC4;");
    asm("loc_4C1A51: push %eax;");
    asm("loc_4C1A52: calll *_import_5C70EC;");
    asm("loc_4C1A58: lea 0x1C(%esp),%ecx;");
    asm("loc_4C1A5C: push %ecx;");
    asm("loc_4C1A5D: calll *_import_5C71C8;");
    asm("loc_4C1A63: mov %eax,%ecx;");
    asm("loc_4C1A65: mov $0x55555556,%eax;");
    asm("loc_4C1A6A: imul %ecx;");
    asm("loc_4C1A6C: mov %edx,%eax;");
    asm("loc_4C1A6E: shr $0x1F,%eax;");
    asm("loc_4C1A71: add %eax,%edx;");
    asm("loc_4C1A73: add %ecx,%edx;");
    asm("loc_4C1A75: xor %esi,%esi;");
    asm("loc_4C1A77: lea 0x60(%esp,%edx,2),%eax;");
    asm("loc_4C1A7B: add $0x10,%esp;");
    asm("loc_4C1A7E: test %ecx,%ecx;");
    asm("loc_4C1A80: lea 0xE(%esp,%ecx,2),%edx;");
    asm("loc_4C1A84: mov %si,(%eax);");
    asm("loc_4C1A87: je loc_4C1AB5;");
    asm("loc_4C1A89: lea (%esp),%esp;");
    asm("loc_4C1A90: mov (%edx),%bp;");
    asm("loc_4C1A93: sub $2,%eax;");
    asm("loc_4C1A96: dec %ecx;");
    asm("loc_4C1A97: inc %esi;");
    asm("loc_4C1A98: sub $2,%edx;");
    asm("loc_4C1A9B: cmp $3,%esi;");
    asm("loc_4C1A9E: mov %bp,(%eax);");
    asm("loc_4C1AA1: jne loc_4C1AB1;");
    asm("loc_4C1AA3: test %ecx,%ecx;");
    asm("loc_4C1AA5: je loc_4C1AB5;");
    asm("loc_4C1AA7: sub $2,%eax;");
    asm("loc_4C1AAA: movw $0x2C,(%eax);");
    asm("loc_4C1AAF: xor %esi,%esi;");
    asm("loc_4C1AB1: test %ecx,%ecx;");
    asm("loc_4C1AB3: jne loc_4C1A90;");
    asm("loc_4C1AB5: mov 0x35C(%ebx),%ecx;");
    asm("loc_4C1ABB: mov (%ecx),%edx;");
    asm("loc_4C1ABD: push $0;");
    asm("loc_4C1ABF: push %eax;");
    asm("loc_4C1AC0: push $0x1D;");
    asm("loc_4C1AC2: calll *0xA8(%edx);");
    asm("loc_4C1AC8: mov %edi,0x364(%ebx);");
    asm("loc_4C1ACE: pop %edi;");
    asm("loc_4C1ACF: pop %esi;");
    asm("loc_4C1AD0: pop %ebp;");
    asm("loc_4C1AD1: pop %ebx;");
    asm("loc_4C1AD2: add $0x80,%esp;");
    asm("loc_4C1AD8: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C1AE0() // _sub_4C1AE0
{
    __DEBUG_ASM(4C1AE0);
    // chunk 0x4C1AE0 _sub_4C1AE0
    asm("loc_4C1AE0: sub $0x34,%esp;");
    asm("loc_4C1AE3: push %ebp;");
    asm("loc_4C1AE4: push %esi;");
    asm("loc_4C1AE5: mov %ecx,%esi;");
    asm("loc_4C1AE7: mov 0x390(%esi),%eax;");
    asm("loc_4C1AED: mov %eax,8(%esp);");
    asm("loc_4C1AF1: mov 0x40(%esp),%eax;");
    asm("loc_4C1AF5: cmp $4,%eax;");
    asm("loc_4C1AF8: push %edi;");
    asm("loc_4C1AF9: jne loc_4C1B04;");
    asm("loc_4C1AFB: mov %eax,0xC(%esp);");
    asm("loc_4C1AFF: mov $3,%eax;");
    asm("loc_4C1B04: mov %eax,0x390(%esi);");
    asm("loc_4C1B0A: dec %eax;");
    asm("loc_4C1B0B: je loc_4C207D;");
    asm("loc_4C1B11: dec %eax;");
    asm("loc_4C1B12: je loc_4C1ED6;");
    asm("loc_4C1B18: dec %eax;");
    asm("loc_4C1B19: jne loc_4C220B;");
    asm("loc_4C1B1F: mov 0x334(%esi),%edi;");
    asm("loc_4C1B25: mov 0x18(%edi),%eax;");
    asm("loc_4C1B28: push %ebx;");
    asm("loc_4C1B29: mov 0x14(%edi),%ebx;");
    asm("loc_4C1B2C: cmp %eax,%ebx;");
    asm("loc_4C1B2E: je loc_4C1B41;");
    asm("loc_4C1B30: mov (%ebx),%ecx;");
    asm("loc_4C1B32: call _sub_4BED40;");
    asm("loc_4C1B37: mov 0x18(%edi),%eax;");
    asm("loc_4C1B3A: add $4,%ebx;");
    asm("loc_4C1B3D: cmp %eax,%ebx;");
    asm("loc_4C1B3F: jne loc_4C1B30;");
    asm("loc_4C1B41: mov 8(%edi),%ecx;");
    asm("loc_4C1B44: mov (%ecx),%edx;");
    asm("loc_4C1B46: xor %ebp,%ebp;");
    asm("loc_4C1B48: push %ebp;");
    asm("loc_4C1B49: push $1;");
    asm("loc_4C1B4B: push $1;");
    asm("loc_4C1B4D: calll *0xA8(%edx);");
    asm("loc_4C1B53: mov 0x41C(%esi),%ecx;");
    asm("loc_4C1B59: mov (%ecx),%eax;");
    asm("loc_4C1B5B: push %ebp;");
    asm("loc_4C1B5C: push $1;");
    asm("loc_4C1B5E: push $1;");
    asm("loc_4C1B60: calll *0xA8(%eax);");
    asm("loc_4C1B66: mov 0x420(%esi),%ecx;");
    asm("loc_4C1B6C: mov (%ecx),%edx;");
    asm("loc_4C1B6E: push %ebp;");
    asm("loc_4C1B6F: push $1;");
    asm("loc_4C1B71: push $1;");
    asm("loc_4C1B73: calll *0xA8(%edx);");
    asm("loc_4C1B79: mov 0x3A0(%esi),%ecx;");
    asm("loc_4C1B7F: mov (%ecx),%eax;");
    asm("loc_4C1B81: push %ebp;");
    asm("loc_4C1B82: push $1;");
    asm("loc_4C1B84: push $1;");
    asm("loc_4C1B86: calll *0xA8(%eax);");
    asm("loc_4C1B8C: mov 0x3A4(%esi),%ecx;");
    asm("loc_4C1B92: mov (%ecx),%edx;");
    asm("loc_4C1B94: push %ebp;");
    asm("loc_4C1B95: push %ebp;");
    asm("loc_4C1B96: push $1;");
    asm("loc_4C1B98: calll *0xA8(%edx);");
    asm("loc_4C1B9E: mov 0x3A8(%esi),%ecx;");
    asm("loc_4C1BA4: mov (%ecx),%eax;");
    asm("loc_4C1BA6: push %ebp;");
    asm("loc_4C1BA7: push %ebp;");
    asm("loc_4C1BA8: push $1;");
    asm("loc_4C1BAA: calll *0xA8(%eax);");
    asm("loc_4C1BB0: mov 0x428(%esi),%ecx;");
    asm("loc_4C1BB6: push %ecx;");
    asm("loc_4C1BB7: mov 0x33C(%esi),%ecx;");
    asm("loc_4C1BBD: call _sub_4BEF00;");
    asm("loc_4C1BC2: mov 0x33C(%esi),%ecx;");
    asm("loc_4C1BC8: call _sub_4BEDC0;");
    asm("loc_4C1BCD: mov 0x348(%esi),%ecx;");
    asm("loc_4C1BD3: mov (%ecx),%edx;");
    asm("loc_4C1BD5: push %ebp;");
    asm("loc_4C1BD6: push %ebp;");
    asm("loc_4C1BD7: push $1;");
    asm("loc_4C1BD9: calll *0xA8(%edx);");
    asm("loc_4C1BDF: mov 0x350(%esi),%ecx;");
    asm("loc_4C1BE5: mov (%ecx),%eax;");
    asm("loc_4C1BE7: push %ebp;");
    asm("loc_4C1BE8: push %ebp;");
    asm("loc_4C1BE9: push $1;");
    asm("loc_4C1BEB: calll *0xA8(%eax);");
    asm("loc_4C1BF1: mov 0x354(%esi),%ecx;");
    asm("loc_4C1BF7: mov (%ecx),%edx;");
    asm("loc_4C1BF9: push %ebp;");
    asm("loc_4C1BFA: push %ebp;");
    asm("loc_4C1BFB: push $1;");
    asm("loc_4C1BFD: calll *0xA8(%edx);");
    asm("loc_4C1C03: mov 0x358(%esi),%ecx;");
    asm("loc_4C1C09: mov (%ecx),%eax;");
    asm("loc_4C1C0B: push %ebp;");
    asm("loc_4C1C0C: push %ebp;");
    asm("loc_4C1C0D: push $1;");
    asm("loc_4C1C0F: calll *0xA8(%eax);");
    asm("loc_4C1C15: mov 0x35C(%esi),%ecx;");
    asm("loc_4C1C1B: mov (%ecx),%edx;");
    asm("loc_4C1C1D: push %ebp;");
    asm("loc_4C1C1E: push %ebp;");
    asm("loc_4C1C1F: push $1;");
    asm("loc_4C1C21: calll *0xA8(%edx);");
    asm("loc_4C1C27: mov 0x34C(%esi),%ecx;");
    asm("loc_4C1C2D: mov (%ecx),%eax;");
    asm("loc_4C1C2F: push %ebp;");
    asm("loc_4C1C30: push %ebp;");
    asm("loc_4C1C31: push $1;");
    asm("loc_4C1C33: calll *0xA8(%eax);");
    asm("loc_4C1C39: mov 0x428(%esi),%eax;");
    asm("loc_4C1C3F: mov (%eax),%cl;");
    asm("loc_4C1C41: mov %cl,0x24(%esp);");
    asm("loc_4C1C45: mov 2(%eax),%dx;");
    asm("loc_4C1C49: mov %dx,0x26(%esp);");
    asm("loc_4C1C4E: mov 4(%eax),%ecx;");
    asm("loc_4C1C51: mov %ecx,0x28(%esp);");
    asm("loc_4C1C55: mov 8(%eax),%edx;");
    asm("loc_4C1C58: mov %edx,0x2C(%esp);");
    asm("loc_4C1C5C: mov 0xC(%eax),%cl;");
    asm("loc_4C1C5F: mov %cl,0x30(%esp);");
    asm("loc_4C1C63: mov 0x10(%eax),%edx;");
    asm("loc_4C1C66: mov %edx,0x34(%esp);");
    asm("loc_4C1C6A: mov 0x14(%eax),%ecx;");
    asm("loc_4C1C6D: mov %ecx,0x38(%esp);");
    asm("loc_4C1C71: mov 0x18(%eax),%dl;");
    asm("loc_4C1C74: mov %dl,0x3C(%esp);");
    asm("loc_4C1C78: mov 0x1C(%eax),%eax;");
    asm("loc_4C1C7B: push $1;");
    asm("loc_4C1C7D: lea 0x28(%esp),%ecx;");
    asm("loc_4C1C81: mov %eax,0x44(%esp);");
    asm("loc_4C1C85: calll *_import_5C6428;");
    asm("loc_4C1C8B: mov 0x424(%esi),%ecx;");
    asm("loc_4C1C91: mov 4(%ecx),%edx;");
    asm("loc_4C1C94: cmp 0x338(%esi),%edx;");
    asm("loc_4C1C9A: lea 0x24(%esp),%ecx;");
    asm("loc_4C1C9E: sete %bl;");
    asm("loc_4C1CA1: calll *_import_5C637C;");
    asm("loc_4C1CA7: fstpl 0x1C(%esp);");
    asm("loc_4C1CAB: fldl 0x3F0(%esi);");
    asm("loc_4C1CB1: fcompl _data_5C8BA8;");
    asm("loc_4C1CB7: fnstsw %ax;");
    asm("loc_4C1CB9: test $0x44,%ah;");
    asm("loc_4C1CBC: jnp loc_4C1CD0;");
    asm("loc_4C1CBE: fldl 0x3F0(%esi);");
    asm("loc_4C1CC4: fsubl 0x3E8(%esi);");
    asm("loc_4C1CCA: fstpl 0x14(%esp);");
    asm("loc_4C1CCE: jmp loc_4C1CE0;");
    asm("loc_4C1CD0: movl $0,0x14(%esp);");
    asm("loc_4C1CD8: movl $0x408F4000,0x18(%esp);");
    asm("loc_4C1CE0: mov 0x28(%esp),%eax;");
    asm("loc_4C1CE4: cmp _data_674A88,%eax;");
    asm("loc_4C1CEA: jne loc_4C1D0B;");
    asm("loc_4C1CEC: xor %eax,%eax;");
    asm("loc_4C1CEE: test %bl,%bl;");
    asm("loc_4C1CF0: je loc_4C1CF8;");
    asm("loc_4C1CF2: mov 0x40C(%esi),%eax;");
    asm("loc_4C1CF8: mov 0x404(%esi),%edi;");
    asm("loc_4C1CFE: sub 0x400(%esi),%edi;");
    asm("loc_4C1D04: sub %eax,%edi;");
    asm("loc_4C1D06: jmp loc_4C1DA9;");
    asm("loc_4C1D0B: cmp _data_674A8C,%eax;");
    asm("loc_4C1D11: jne loc_4C1D2F;");
    asm("loc_4C1D13: xor %eax,%eax;");
    asm("loc_4C1D15: test %bl,%bl;");
    asm("loc_4C1D17: je loc_4C1D1F;");
    asm("loc_4C1D19: mov 0x408(%esi),%eax;");
    asm("loc_4C1D1F: mov 0x3FC(%esi),%edi;");
    asm("loc_4C1D25: sub 0x3F8(%esi),%edi;");
    asm("loc_4C1D2B: sub %eax,%edi;");
    asm("loc_4C1D2D: jmp loc_4C1DA9;");
    asm("loc_4C1D2F: mov 0x438(%esi),%ecx;");
    asm("loc_4C1D35: mov _import_5C643C,%edi;");
    asm("loc_4C1D3B: push %eax;");
    asm("loc_4C1D3C: call *%edi;");
    asm("loc_4C1D3E: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4C1D41: jle loc_4C1D7E;");
    asm("loc_4C1D43: test %bl,%bl;");
    asm("loc_4C1D45: je loc_4C1D69;");
    asm("loc_4C1D47: mov 0x28(%esp),%ecx;");
    asm("loc_4C1D4B: mov 0x334(%esi),%eax;");
    asm("loc_4C1D51: push $0x3F800000;");
    asm("loc_4C1D56: push $1;");
    asm("loc_4C1D58: push %ecx;");
    asm("loc_4C1D59: lea 0x20(%eax),%ecx;");
    asm("loc_4C1D5C: calll *_import_5C6384;");
    asm("loc_4C1D62: test %eax,%eax;");
    asm("loc_4C1D64: je loc_4C1D69;");
    asm("loc_4C1D66: mov 0x14(%eax),%ebp;");
    asm("loc_4C1D69: mov 0x28(%esp),%edx;");
    asm("loc_4C1D6D: mov 0x43C(%esi),%ecx;");
    asm("loc_4C1D73: push %edx;");
    asm("loc_4C1D74: call *%edi;");
    asm("loc_4C1D76: mov %eax,%edi;");
    asm("loc_4C1D78: sub %ebp,%edi;");
    asm("loc_4C1D7A: xor %ebp,%ebp;");
    asm("loc_4C1D7C: jmp loc_4C1DA9;");
    asm("loc_4C1D7E: fldl 0x1C(%esp);");
    asm("loc_4C1D82: fcompl _data_5C8BA8;");
    asm("loc_4C1D88: fnstsw %ax;");
    asm("loc_4C1D8A: test $0x44,%ah;");
    asm("loc_4C1D8D: jnp loc_4C1D9E;");
    asm("loc_4C1D8F: fldl 0x14(%esp);");
    asm("loc_4C1D93: fdivl 0x1C(%esp);");
    asm("loc_4C1D97: call _sub_5B7EC0;");
    asm("loc_4C1D9C: jmp loc_4C1DA7;");
    asm("loc_4C1D9E: mov 0x428(%esi),%eax;");
    asm("loc_4C1DA4: mov 0x14(%eax),%eax;");
    asm("loc_4C1DA7: mov %eax,%edi;");
    asm("loc_4C1DA9: cmp %ebp,%edi;");
    asm("loc_4C1DAB: jge loc_4C1DAF;");
    asm("loc_4C1DAD: xor %edi,%edi;");
    asm("loc_4C1DAF: test %bl,%bl;");
    asm("loc_4C1DB1: jne loc_4C1DBC;");
    asm("loc_4C1DB3: mov 0x428(%esi),%ecx;");
    asm("loc_4C1DB9: mov 0x14(%ecx),%edi;");
    asm("loc_4C1DBC: mov 0x34C(%esi),%edx;");
    asm("loc_4C1DC2: mov %ebp,0x658(%edx);");
    asm("loc_4C1DC8: mov 0x428(%esi),%eax;");
    asm("loc_4C1DCE: mov 0x14(%eax),%eax;");
    asm("loc_4C1DD1: cmp %edi,%eax;");
    asm("loc_4C1DD3: jl loc_4C1DD7;");
    asm("loc_4C1DD5: mov %edi,%eax;");
    asm("loc_4C1DD7: mov 0x34C(%esi),%ecx;");
    asm("loc_4C1DDD: test %bl,%bl;");
    asm("loc_4C1DDF: mov %eax,0x65C(%ecx);");
    asm("loc_4C1DE5: pop %ebx;");
    asm("loc_4C1DE6: je loc_4C1E07;");
    asm("loc_4C1DE8: mov 0x428(%esi),%edx;");
    asm("loc_4C1DEE: cmpl $1,0x14(%edx);");
    asm("loc_4C1DF2: jne loc_4C1E07;");
    asm("loc_4C1DF4: mov 0x34C(%esi),%ecx;");
    asm("loc_4C1DFA: mov (%ecx),%eax;");
    asm("loc_4C1DFC: push %ebp;");
    asm("loc_4C1DFD: push $1;");
    asm("loc_4C1DFF: push $1;");
    asm("loc_4C1E01: calll *0xA8(%eax);");
    asm("loc_4C1E07: cmpl $4,0xC(%esp);");
    asm("loc_4C1E0C: jne loc_4C1E2E;");
    asm("loc_4C1E0E: mov 0x34C(%esi),%ecx;");
    asm("loc_4C1E14: cmp %edi,0x664(%ecx);");
    asm("loc_4C1E1A: jle loc_4C1E35;");
    asm("loc_4C1E1C: mov _data_672458,%edx;");
    asm("loc_4C1E22: push %ebp;");
    asm("loc_4C1E23: push %edx;");
    asm("loc_4C1E24: call _sub_489E80;");
    asm("loc_4C1E29: add $8,%esp;");
    asm("loc_4C1E2C: jmp loc_4C1E35;");
    asm("loc_4C1E2E: movb $0,0x360(%esi);");
    asm("loc_4C1E35: mov 0x34C(%esi),%ecx;");
    asm("loc_4C1E3B: mov (%ecx),%eax;");
    asm("loc_4C1E3D: push %ebp;");
    asm("loc_4C1E3E: push %edi;");
    asm("loc_4C1E3F: push $0x38;");
    asm("loc_4C1E41: calll *0xA8(%eax);");
    asm("loc_4C1E47: push %edi;");
    asm("loc_4C1E48: mov %esi,%ecx;");
    asm("loc_4C1E4A: call _sub_4C1A10;");
    asm("loc_4C1E4F: mov 0x424(%esi),%ecx;");
    asm("loc_4C1E55: mov 4(%ecx),%edx;");
    asm("loc_4C1E58: cmp 0x338(%esi),%edx;");
    asm("loc_4C1E5E: mov 0x348(%esi),%ecx;");
    asm("loc_4C1E64: push %ebp;");
    asm("loc_4C1E65: jne loc_4C1E78;");
    asm("loc_4C1E67: mov (%ecx),%eax;");
    asm("loc_4C1E69: push $0x757;");
    asm("loc_4C1E6E: push $0x1E;");
    asm("loc_4C1E70: calll *0xA8(%eax);");
    asm("loc_4C1E76: jmp loc_4C1E87;");
    asm("loc_4C1E78: mov (%ecx),%edx;");
    asm("loc_4C1E7A: push $0x758;");
    asm("loc_4C1E7F: push $0x1E;");
    asm("loc_4C1E81: calll *0xA8(%edx);");
    asm("loc_4C1E87: cmp $1,%edi;");
    asm("loc_4C1E8A: jge loc_4C220B;");
    asm("loc_4C1E90: mov _data_672458,%eax;");
    asm("loc_4C1E95: push %ebp;");
    asm("loc_4C1E96: push %eax;");
    asm("loc_4C1E97: call _sub_489E80;");
    asm("loc_4C1E9C: mov 0x424(%esi),%ecx;");
    asm("loc_4C1EA2: mov 4(%ecx),%ecx;");
    asm("loc_4C1EA5: mov 0x428(%esi),%edx;");
    asm("loc_4C1EAB: add $8,%esp;");
    asm("loc_4C1EAE: movb $0,(%edx);");
    asm("loc_4C1EB1: push $0xFFFFFFFF;");
    asm("loc_4C1EB3: mov %ebp,0x424(%esi);");
    asm("loc_4C1EB9: mov %ebp,0x428(%esi);");
    asm("loc_4C1EBF: call _sub_4BF850;");
    asm("loc_4C1EC4: push $2;");
    asm("loc_4C1EC6: mov %esi,%ecx;");
    asm("loc_4C1EC8: call _sub_4C1AE0;");
    asm("loc_4C1ECD: pop %edi;");
    asm("loc_4C1ECE: pop %esi;");
    asm("loc_4C1ECF: pop %ebp;");
    asm("loc_4C1ED0: add $0x34,%esp;");
    asm("loc_4C1ED3: ret $4;");
    asm("loc_4C1ED6: mov 0x3A0(%esi),%ecx;");
    asm("loc_4C1EDC: mov (%ecx),%eax;");
    asm("loc_4C1EDE: push $0;");
    asm("loc_4C1EE0: push $1;");
    asm("loc_4C1EE2: push $1;");
    asm("loc_4C1EE4: calll *0xA8(%eax);");
    asm("loc_4C1EEA: mov 0x3A4(%esi),%ecx;");
    asm("loc_4C1EF0: mov (%ecx),%edx;");
    asm("loc_4C1EF2: push $0;");
    asm("loc_4C1EF4: push $0;");
    asm("loc_4C1EF6: push $1;");
    asm("loc_4C1EF8: calll *0xA8(%edx);");
    asm("loc_4C1EFE: mov 0x3A8(%esi),%ecx;");
    asm("loc_4C1F04: mov (%ecx),%eax;");
    asm("loc_4C1F06: push $0;");
    asm("loc_4C1F08: push $0;");
    asm("loc_4C1F0A: push $1;");
    asm("loc_4C1F0C: calll *0xA8(%eax);");
    asm("loc_4C1F12: mov 0x33C(%esi),%edi;");
    asm("loc_4C1F18: mov 8(%edi),%ecx;");
    asm("loc_4C1F1B: mov (%ecx),%edx;");
    asm("loc_4C1F1D: push $0;");
    asm("loc_4C1F1F: push $1;");
    asm("loc_4C1F21: push $1;");
    asm("loc_4C1F23: calll *0xA8(%edx);");
    asm("loc_4C1F29: mov 0x14(%edi),%ecx;");
    asm("loc_4C1F2C: mov (%ecx),%eax;");
    asm("loc_4C1F2E: push $0;");
    asm("loc_4C1F30: push $1;");
    asm("loc_4C1F32: push $1;");
    asm("loc_4C1F34: calll *0xA8(%eax);");
    asm("loc_4C1F3A: mov 0xC(%edi),%ecx;");
    asm("loc_4C1F3D: mov (%ecx),%edx;");
    asm("loc_4C1F3F: push $0;");
    asm("loc_4C1F41: push $1;");
    asm("loc_4C1F43: push $1;");
    asm("loc_4C1F45: calll *0xA8(%edx);");
    asm("loc_4C1F4B: mov 0x20(%edi),%ecx;");
    asm("loc_4C1F4E: mov (%ecx),%eax;");
    asm("loc_4C1F50: push $0;");
    asm("loc_4C1F52: push $1;");
    asm("loc_4C1F54: push $1;");
    asm("loc_4C1F56: calll *0xA8(%eax);");
    asm("loc_4C1F5C: mov 0x18(%edi),%ecx;");
    asm("loc_4C1F5F: mov (%ecx),%edx;");
    asm("loc_4C1F61: push $0;");
    asm("loc_4C1F63: push $1;");
    asm("loc_4C1F65: push $1;");
    asm("loc_4C1F67: calll *0xA8(%edx);");
    asm("loc_4C1F6D: mov 0x1C(%edi),%ecx;");
    asm("loc_4C1F70: mov (%ecx),%eax;");
    asm("loc_4C1F72: push $0;");
    asm("loc_4C1F74: push $1;");
    asm("loc_4C1F76: push $1;");
    asm("loc_4C1F78: calll *0xA8(%eax);");
    asm("loc_4C1F7E: mov 0x10(%edi),%ecx;");
    asm("loc_4C1F81: test %ecx,%ecx;");
    asm("loc_4C1F83: je loc_4C1F93;");
    asm("loc_4C1F85: mov (%ecx),%edx;");
    asm("loc_4C1F87: push $0;");
    asm("loc_4C1F89: push $1;");
    asm("loc_4C1F8B: push $1;");
    asm("loc_4C1F8D: calll *0xA8(%edx);");
    asm("loc_4C1F93: mov 0x348(%esi),%ecx;");
    asm("loc_4C1F99: mov (%ecx),%eax;");
    asm("loc_4C1F9B: push $0;");
    asm("loc_4C1F9D: push $1;");
    asm("loc_4C1F9F: push $1;");
    asm("loc_4C1FA1: calll *0xA8(%eax);");
    asm("loc_4C1FA7: mov 0x350(%esi),%ecx;");
    asm("loc_4C1FAD: mov (%ecx),%edx;");
    asm("loc_4C1FAF: push $0;");
    asm("loc_4C1FB1: push $1;");
    asm("loc_4C1FB3: push $1;");
    asm("loc_4C1FB5: calll *0xA8(%edx);");
    asm("loc_4C1FBB: mov 0x354(%esi),%ecx;");
    asm("loc_4C1FC1: mov (%ecx),%eax;");
    asm("loc_4C1FC3: push $0;");
    asm("loc_4C1FC5: push $1;");
    asm("loc_4C1FC7: push $1;");
    asm("loc_4C1FC9: calll *0xA8(%eax);");
    asm("loc_4C1FCF: mov 0x358(%esi),%ecx;");
    asm("loc_4C1FD5: mov (%ecx),%edx;");
    asm("loc_4C1FD7: push $0;");
    asm("loc_4C1FD9: push $1;");
    asm("loc_4C1FDB: push $1;");
    asm("loc_4C1FDD: calll *0xA8(%edx);");
    asm("loc_4C1FE3: mov 0x35C(%esi),%ecx;");
    asm("loc_4C1FE9: mov (%ecx),%eax;");
    asm("loc_4C1FEB: push $0;");
    asm("loc_4C1FED: push $1;");
    asm("loc_4C1FEF: push $1;");
    asm("loc_4C1FF1: calll *0xA8(%eax);");
    asm("loc_4C1FF7: mov 0x34C(%esi),%ecx;");
    asm("loc_4C1FFD: mov (%ecx),%edx;");
    asm("loc_4C1FFF: push $0;");
    asm("loc_4C2001: push $1;");
    asm("loc_4C2003: push $1;");
    asm("loc_4C2005: calll *0xA8(%edx);");
    asm("loc_4C200B: mov 0x334(%esi),%edi;");
    asm("loc_4C2011: mov 0x14(%edi),%ebp;");
    asm("loc_4C2014: cmp 0x18(%edi),%ebp;");
    asm("loc_4C2017: je loc_4C2032;");
    asm("loc_4C2019: lea (%esp),%esp;");
    asm("loc_4C2020: mov (%ebp),%ecx;");
    asm("loc_4C2023: call _sub_4BEDC0;");
    asm("loc_4C2028: mov 0x18(%edi),%eax;");
    asm("loc_4C202B: add $4,%ebp;");
    asm("loc_4C202E: cmp %eax,%ebp;");
    asm("loc_4C2030: jne loc_4C2020;");
    asm("loc_4C2032: mov 8(%edi),%ecx;");
    asm("loc_4C2035: mov (%ecx),%eax;");
    asm("loc_4C2037: push $0;");
    asm("loc_4C2039: push $0;");
    asm("loc_4C203B: push $1;");
    asm("loc_4C203D: calll *0xA8(%eax);");
    asm("loc_4C2043: push $0xFFFFFFFF;");
    asm("loc_4C2045: mov %edi,%ecx;");
    asm("loc_4C2047: call _sub_4BF850;");
    asm("loc_4C204C: mov 0x41C(%esi),%ecx;");
    asm("loc_4C2052: mov (%ecx),%edx;");
    asm("loc_4C2054: push $0;");
    asm("loc_4C2056: push $0;");
    asm("loc_4C2058: push $1;");
    asm("loc_4C205A: calll *0xA8(%edx);");
    asm("loc_4C2060: mov 0x420(%esi),%ecx;");
    asm("loc_4C2066: mov (%ecx),%eax;");
    asm("loc_4C2068: push $0;");
    asm("loc_4C206A: push $0;");
    asm("loc_4C206C: push $1;");
    asm("loc_4C206E: calll *0xA8(%eax);");
    asm("loc_4C2074: pop %edi;");
    asm("loc_4C2075: pop %esi;");
    asm("loc_4C2076: pop %ebp;");
    asm("loc_4C2077: add $0x34,%esp;");
    asm("loc_4C207A: ret $4;");
    asm("loc_4C207D: mov 0x3A0(%esi),%ecx;");
    asm("loc_4C2083: mov (%ecx),%edx;");
    asm("loc_4C2085: push $0;");
    asm("loc_4C2087: push $1;");
    asm("loc_4C2089: push $1;");
    asm("loc_4C208B: calll *0xA8(%edx);");
    asm("loc_4C2091: mov 0x3A4(%esi),%ecx;");
    asm("loc_4C2097: mov (%ecx),%eax;");
    asm("loc_4C2099: push $0;");
    asm("loc_4C209B: push $1;");
    asm("loc_4C209D: push $1;");
    asm("loc_4C209F: calll *0xA8(%eax);");
    asm("loc_4C20A5: mov 0x3A8(%esi),%ecx;");
    asm("loc_4C20AB: mov (%ecx),%edx;");
    asm("loc_4C20AD: push $0;");
    asm("loc_4C20AF: push $1;");
    asm("loc_4C20B1: push $1;");
    asm("loc_4C20B3: calll *0xA8(%edx);");
    asm("loc_4C20B9: mov 0x33C(%esi),%edi;");
    asm("loc_4C20BF: mov 8(%edi),%ecx;");
    asm("loc_4C20C2: mov (%ecx),%eax;");
    asm("loc_4C20C4: push $0;");
    asm("loc_4C20C6: push $1;");
    asm("loc_4C20C8: push $1;");
    asm("loc_4C20CA: calll *0xA8(%eax);");
    asm("loc_4C20D0: mov 0x14(%edi),%ecx;");
    asm("loc_4C20D3: mov (%ecx),%edx;");
    asm("loc_4C20D5: push $0;");
    asm("loc_4C20D7: push $1;");
    asm("loc_4C20D9: push $1;");
    asm("loc_4C20DB: calll *0xA8(%edx);");
    asm("loc_4C20E1: mov 0xC(%edi),%ecx;");
    asm("loc_4C20E4: mov (%ecx),%eax;");
    asm("loc_4C20E6: push $0;");
    asm("loc_4C20E8: push $1;");
    asm("loc_4C20EA: push $1;");
    asm("loc_4C20EC: calll *0xA8(%eax);");
    asm("loc_4C20F2: mov 0x20(%edi),%ecx;");
    asm("loc_4C20F5: mov (%ecx),%edx;");
    asm("loc_4C20F7: push $0;");
    asm("loc_4C20F9: push $1;");
    asm("loc_4C20FB: push $1;");
    asm("loc_4C20FD: calll *0xA8(%edx);");
    asm("loc_4C2103: mov 0x18(%edi),%ecx;");
    asm("loc_4C2106: mov (%ecx),%eax;");
    asm("loc_4C2108: push $0;");
    asm("loc_4C210A: push $1;");
    asm("loc_4C210C: push $1;");
    asm("loc_4C210E: calll *0xA8(%eax);");
    asm("loc_4C2114: mov 0x1C(%edi),%ecx;");
    asm("loc_4C2117: mov (%ecx),%edx;");
    asm("loc_4C2119: push $0;");
    asm("loc_4C211B: push $1;");
    asm("loc_4C211D: push $1;");
    asm("loc_4C211F: calll *0xA8(%edx);");
    asm("loc_4C2125: mov 0x10(%edi),%ecx;");
    asm("loc_4C2128: test %ecx,%ecx;");
    asm("loc_4C212A: je loc_4C213A;");
    asm("loc_4C212C: mov (%ecx),%eax;");
    asm("loc_4C212E: push $0;");
    asm("loc_4C2130: push $1;");
    asm("loc_4C2132: push $1;");
    asm("loc_4C2134: calll *0xA8(%eax);");
    asm("loc_4C213A: mov 0x348(%esi),%ecx;");
    asm("loc_4C2140: mov (%ecx),%edx;");
    asm("loc_4C2142: push $0;");
    asm("loc_4C2144: push $1;");
    asm("loc_4C2146: push $1;");
    asm("loc_4C2148: calll *0xA8(%edx);");
    asm("loc_4C214E: mov 0x350(%esi),%ecx;");
    asm("loc_4C2154: mov (%ecx),%eax;");
    asm("loc_4C2156: push $0;");
    asm("loc_4C2158: push $1;");
    asm("loc_4C215A: push $1;");
    asm("loc_4C215C: calll *0xA8(%eax);");
    asm("loc_4C2162: mov 0x354(%esi),%ecx;");
    asm("loc_4C2168: mov (%ecx),%edx;");
    asm("loc_4C216A: push $0;");
    asm("loc_4C216C: push $1;");
    asm("loc_4C216E: push $1;");
    asm("loc_4C2170: calll *0xA8(%edx);");
    asm("loc_4C2176: mov 0x358(%esi),%ecx;");
    asm("loc_4C217C: mov (%ecx),%eax;");
    asm("loc_4C217E: push $0;");
    asm("loc_4C2180: push $1;");
    asm("loc_4C2182: push $1;");
    asm("loc_4C2184: calll *0xA8(%eax);");
    asm("loc_4C218A: mov 0x35C(%esi),%ecx;");
    asm("loc_4C2190: mov (%ecx),%edx;");
    asm("loc_4C2192: push $0;");
    asm("loc_4C2194: push $1;");
    asm("loc_4C2196: push $1;");
    asm("loc_4C2198: calll *0xA8(%edx);");
    asm("loc_4C219E: mov 0x34C(%esi),%ecx;");
    asm("loc_4C21A4: mov (%ecx),%eax;");
    asm("loc_4C21A6: push $0;");
    asm("loc_4C21A8: push $1;");
    asm("loc_4C21AA: push $1;");
    asm("loc_4C21AC: calll *0xA8(%eax);");
    asm("loc_4C21B2: mov 0x334(%esi),%edi;");
    asm("loc_4C21B8: mov 0x14(%edi),%ebp;");
    asm("loc_4C21BB: cmp 0x18(%edi),%ebp;");
    asm("loc_4C21BE: je loc_4C21D2;");
    asm("loc_4C21C0: mov (%ebp),%ecx;");
    asm("loc_4C21C3: call _sub_4BED40;");
    asm("loc_4C21C8: mov 0x18(%edi),%eax;");
    asm("loc_4C21CB: add $4,%ebp;");
    asm("loc_4C21CE: cmp %eax,%ebp;");
    asm("loc_4C21D0: jne loc_4C21C0;");
    asm("loc_4C21D2: mov 8(%edi),%ecx;");
    asm("loc_4C21D5: mov (%ecx),%edx;");
    asm("loc_4C21D7: push $0;");
    asm("loc_4C21D9: push $1;");
    asm("loc_4C21DB: push $1;");
    asm("loc_4C21DD: calll *0xA8(%edx);");
    asm("loc_4C21E3: mov 0x41C(%esi),%ecx;");
    asm("loc_4C21E9: mov (%ecx),%eax;");
    asm("loc_4C21EB: push $0;");
    asm("loc_4C21ED: push $1;");
    asm("loc_4C21EF: push $1;");
    asm("loc_4C21F1: calll *0xA8(%eax);");
    asm("loc_4C21F7: mov 0x420(%esi),%ecx;");
    asm("loc_4C21FD: mov (%ecx),%edx;");
    asm("loc_4C21FF: push $0;");
    asm("loc_4C2201: push $1;");
    asm("loc_4C2203: push $1;");
    asm("loc_4C2205: calll *0xA8(%edx);");
    asm("loc_4C220B: pop %edi;");
    asm("loc_4C220C: pop %esi;");
    asm("loc_4C220D: pop %ebp;");
    asm("loc_4C220E: add $0x34,%esp;");
    asm("loc_4C2211: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2220() // _sub_4C2220
{
    __DEBUG_ASM(4C2220);
    // chunk 0x4C2220 _sub_4C2220
    asm("loc_4C2220: push %ebp;");
    asm("loc_4C2221: mov %esp,%ebp;");
    asm("loc_4C2223: and $0xFFFFFFF8,%esp;");
    asm("loc_4C2226: sub $0x34,%esp;");
    asm("loc_4C2229: push %ebx;");
    asm("loc_4C222A: push %esi;");
    asm("loc_4C222B: push %edi;");
    asm("loc_4C222C: mov %ecx,%edi;");
    asm("loc_4C222E: mov 0x330(%edi),%esi;");
    asm("loc_4C2234: test %esi,%esi;");
    asm("loc_4C2236: je loc_4C2362;");
    asm("loc_4C223C: mov 8(%ebp),%eax;");
    asm("loc_4C223F: mov 8(%eax),%edx;");
    asm("loc_4C2242: mov 2(%eax),%cx;");
    asm("loc_4C2246: mov %edx,0x28(%esp);");
    asm("loc_4C224A: mov 0xC(%eax),%dl;");
    asm("loc_4C224D: mov %dl,0x2C(%esp);");
    asm("loc_4C2251: mov 0x10(%eax),%edx;");
    asm("loc_4C2254: mov %edx,0x30(%esp);");
    asm("loc_4C2258: mov 0x14(%eax),%edx;");
    asm("loc_4C225B: mov %cx,0x22(%esp);");
    asm("loc_4C2260: mov 4(%eax),%ecx;");
    asm("loc_4C2263: mov %edx,0x34(%esp);");
    asm("loc_4C2267: mov 0x18(%eax),%dl;");
    asm("loc_4C226A: mov 0x1C(%eax),%eax;");
    asm("loc_4C226D: push %ecx;");
    asm("loc_4C226E: mov %ecx,0x28(%esp);");
    asm("loc_4C2272: mov %dl,0x3C(%esp);");
    asm("loc_4C2276: mov %eax,0x40(%esp);");
    asm("loc_4C227A: movb $0,0x24(%esp);");
    asm("loc_4C227F: calll *_import_5C63A0;");
    asm("loc_4C2285: add $4,%esp;");
    asm("loc_4C2288: lea 0x20(%esp),%ecx;");
    asm("loc_4C228C: lea 0x20(%esi),%ebx;");
    asm("loc_4C228F: push %eax;");
    asm("loc_4C2290: push %ecx;");
    asm("loc_4C2291: mov %ebx,%ecx;");
    asm("loc_4C2293: calll *_import_5C6434;");
    asm("loc_4C2299: mov %ebx,%ecx;");
    asm("loc_4C229B: calll *_import_5C6430;");
    asm("loc_4C22A1: fstpl 0x60(%esi);");
    asm("loc_4C22A4: mov 0x28(%esi),%eax;");
    asm("loc_4C22A7: sub 0x30(%esi),%eax;");
    asm("loc_4C22AA: jns loc_4C22AE;");
    asm("loc_4C22AC: xor %eax,%eax;");
    asm("loc_4C22AE: mov 8(%esi),%ecx;");
    asm("loc_4C22B1: mov (%ecx),%edx;");
    asm("loc_4C22B3: push %eax;");
    asm("loc_4C22B4: push $0;");
    asm("loc_4C22B6: push $0x37;");
    asm("loc_4C22B8: calll *0xA8(%edx);");
    asm("loc_4C22BE: push $0xFFFFFFFF;");
    asm("loc_4C22C0: mov %esi,%ecx;");
    asm("loc_4C22C2: call _sub_4BF850;");
    asm("loc_4C22C7: mov 0x42C(%edi),%eax;");
    asm("loc_4C22CD: push $1;");
    asm("loc_4C22CF: push %eax;");
    asm("loc_4C22D0: call _sub_5416C0;");
    asm("loc_4C22D5: add $8,%esp;");
    asm("loc_4C22D8: test %eax,%eax;");
    asm("loc_4C22DA: je loc_4C2327;");
    asm("loc_4C22DC: mov %eax,%ecx;");
    asm("loc_4C22DE: call _sub_543320;");
    asm("loc_4C22E3: mov 0x330(%edi),%ecx;");
    asm("loc_4C22E9: mov 0x60(%ecx),%edx;");
    asm("loc_4C22EC: mov 0x64(%ecx),%ecx;");
    asm("loc_4C22EF: mov %edx,0x10(%esp);");
    asm("loc_4C22F3: mov 0x334(%edi),%edx;");
    asm("loc_4C22F9: mov %ecx,0x14(%esp);");
    asm("loc_4C22FD: mov 0x60(%edx),%ecx;");
    asm("loc_4C2300: mov 0x64(%edx),%edx;");
    asm("loc_4C2303: mov %ecx,0x18(%esp);");
    asm("loc_4C2307: mov %eax,%ecx;");
    asm("loc_4C2309: mov %edx,0x1C(%esp);");
    asm("loc_4C230D: calll *_import_5C6440;");
    asm("loc_4C2313: fsubrl 0x3F0(%edi);");
    asm("loc_4C2319: fsubl 0x10(%esp);");
    asm("loc_4C231D: faddl 0x18(%esp);");
    asm("loc_4C2321: fstpl 0x3E8(%edi);");
    asm("loc_4C2327: mov 0x334(%edi),%eax;");
    asm("loc_4C232D: mov 0x60(%eax),%ecx;");
    asm("loc_4C2330: mov 0x64(%eax),%edx;");
    asm("loc_4C2333: mov 0x330(%edi),%eax;");
    asm("loc_4C2339: mov %ecx,0x18(%esp);");
    asm("loc_4C233D: mov 0x60(%eax),%ecx;");
    asm("loc_4C2340: mov %edx,0x1C(%esp);");
    asm("loc_4C2344: mov 0x64(%eax),%edx;");
    asm("loc_4C2347: mov %ecx,0x10(%esp);");
    asm("loc_4C234B: mov %edx,0x14(%esp);");
    asm("loc_4C234F: call _sub_4C4640;");
    asm("loc_4C2354: fsubl 0x18(%esp);");
    asm("loc_4C2358: faddl 0x10(%esp);");
    asm("loc_4C235C: fstpl 0x3C0(%edi);");
    asm("loc_4C2362: cmpl $3,0x390(%edi);");
    asm("loc_4C2369: jne loc_4C2374;");
    asm("loc_4C236B: push $4;");
    asm("loc_4C236D: mov %edi,%ecx;");
    asm("loc_4C236F: call _sub_4C1AE0;");
    asm("loc_4C2374: pop %edi;");
    asm("loc_4C2375: pop %esi;");
    asm("loc_4C2376: pop %ebx;");
    asm("loc_4C2377: mov %ebp,%esp;");
    asm("loc_4C2379: pop %ebp;");
    asm("loc_4C237A: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2380() // _sub_4C2380
{
    __DEBUG_ASM(4C2380);
    // chunk 0x4C2380 _sub_4C2380
    asm("loc_4C2380: push %ebp;");
    asm("loc_4C2381: mov %esp,%ebp;");
    asm("loc_4C2383: and $0xFFFFFFF8,%esp;");
    asm("loc_4C2386: sub $0x14,%esp;");
    asm("loc_4C2389: push %ebx;");
    asm("loc_4C238A: push %esi;");
    asm("loc_4C238B: mov %ecx,%ebx;");
    asm("loc_4C238D: push %edi;");
    asm("loc_4C238E: mov 0x330(%ebx),%edi;");
    asm("loc_4C2394: test %edi,%edi;");
    asm("loc_4C2396: je loc_4C24EB;");
    asm("loc_4C239C: mov 8(%ebp),%eax;");
    asm("loc_4C239F: movzwl 2(%eax),%eax;");
    asm("loc_4C23A3: lea 0x20(%edi),%esi;");
    asm("loc_4C23A6: push %eax;");
    asm("loc_4C23A7: mov %esi,%ecx;");
    asm("loc_4C23A9: calll *_import_5C6370;");
    asm("loc_4C23AF: mov %eax,0x10(%esp);");
    asm("loc_4C23B3: mov 8(%ebp),%eax;");
    asm("loc_4C23B6: mov 0x14(%eax),%ecx;");
    asm("loc_4C23B9: xor %edx,%edx;");
    asm("loc_4C23BB: mov 2(%eax),%dx;");
    asm("loc_4C23BF: push %ecx;");
    asm("loc_4C23C0: mov %esi,%ecx;");
    asm("loc_4C23C2: push %edx;");
    asm("loc_4C23C3: calll *_import_5C6438;");
    asm("loc_4C23C9: mov %esi,%ecx;");
    asm("loc_4C23CB: calll *_import_5C6430;");
    asm("loc_4C23D1: fstpl 0x60(%edi);");
    asm("loc_4C23D4: mov 8(%ebp),%eax;");
    asm("loc_4C23D7: movzwl 2(%eax),%eax;");
    asm("loc_4C23DB: push %eax;");
    asm("loc_4C23DC: mov %esi,%ecx;");
    asm("loc_4C23DE: calll *_import_5C6370;");
    asm("loc_4C23E4: mov 0x30(%edi),%ecx;");
    asm("loc_4C23E7: mov %eax,%esi;");
    asm("loc_4C23E9: mov 0x28(%edi),%eax;");
    asm("loc_4C23EC: sub %ecx,%eax;");
    asm("loc_4C23EE: jns loc_4C23F2;");
    asm("loc_4C23F0: xor %eax,%eax;");
    asm("loc_4C23F2: mov 8(%edi),%ecx;");
    asm("loc_4C23F5: mov (%ecx),%edx;");
    asm("loc_4C23F7: push %eax;");
    asm("loc_4C23F8: push $0;");
    asm("loc_4C23FA: push $0x37;");
    asm("loc_4C23FC: calll *0xA8(%edx);");
    asm("loc_4C2402: push $0xFFFFFFFF;");
    asm("loc_4C2404: mov %edi,%ecx;");
    asm("loc_4C2406: call _sub_4BF850;");
    asm("loc_4C240B: mov 0x42C(%ebx),%eax;");
    asm("loc_4C2411: mov 0x10(%esp),%ecx;");
    asm("loc_4C2415: neg %esi;");
    asm("loc_4C2417: sbb %esi,%esi;");
    asm("loc_4C2419: push $1;");
    asm("loc_4C241B: push %eax;");
    asm("loc_4C241C: and %ecx,%esi;");
    asm("loc_4C241E: call _sub_5416C0;");
    asm("loc_4C2423: add $8,%esp;");
    asm("loc_4C2426: test %eax,%eax;");
    asm("loc_4C2428: je loc_4C2475;");
    asm("loc_4C242A: mov %eax,%ecx;");
    asm("loc_4C242C: call _sub_543320;");
    asm("loc_4C2431: mov 0x330(%ebx),%ecx;");
    asm("loc_4C2437: mov 0x60(%ecx),%edx;");
    asm("loc_4C243A: mov 0x64(%ecx),%ecx;");
    asm("loc_4C243D: mov %edx,0x10(%esp);");
    asm("loc_4C2441: mov 0x334(%ebx),%edx;");
    asm("loc_4C2447: mov %ecx,0x14(%esp);");
    asm("loc_4C244B: mov 0x60(%edx),%ecx;");
    asm("loc_4C244E: mov 0x64(%edx),%edx;");
    asm("loc_4C2451: mov %ecx,0x18(%esp);");
    asm("loc_4C2455: mov %eax,%ecx;");
    asm("loc_4C2457: mov %edx,0x1C(%esp);");
    asm("loc_4C245B: calll *_import_5C6440;");
    asm("loc_4C2461: fsubrl 0x3F0(%ebx);");
    asm("loc_4C2467: fsubl 0x10(%esp);");
    asm("loc_4C246B: faddl 0x18(%esp);");
    asm("loc_4C246F: fstpl 0x3E8(%ebx);");
    asm("loc_4C2475: mov 0x334(%ebx),%eax;");
    asm("loc_4C247B: mov 0x60(%eax),%ecx;");
    asm("loc_4C247E: mov 0x64(%eax),%edx;");
    asm("loc_4C2481: mov 0x330(%ebx),%eax;");
    asm("loc_4C2487: mov %ecx,0x18(%esp);");
    asm("loc_4C248B: mov 0x60(%eax),%ecx;");
    asm("loc_4C248E: mov %edx,0x1C(%esp);");
    asm("loc_4C2492: mov 0x64(%eax),%edx;");
    asm("loc_4C2495: mov %ecx,0x10(%esp);");
    asm("loc_4C2499: mov %edx,0x14(%esp);");
    asm("loc_4C249D: call _sub_4C4640;");
    asm("loc_4C24A2: fsubl 0x18(%esp);");
    asm("loc_4C24A6: mov 0x330(%ebx),%eax;");
    asm("loc_4C24AC: faddl 0x10(%esp);");
    asm("loc_4C24B0: fstpl 0x3C0(%ebx);");
    asm("loc_4C24B6: mov 0x58(%eax),%ecx;");
    asm("loc_4C24B9: cmp %ecx,%esi;");
    asm("loc_4C24BB: jne loc_4C24EB;");
    asm("loc_4C24BD: push $0;");
    asm("loc_4C24BF: push %eax;");
    asm("loc_4C24C0: mov %ebx,%ecx;");
    asm("loc_4C24C2: call _sub_4C2800;");
    asm("loc_4C24C7: mov 0x330(%ebx),%eax;");
    asm("loc_4C24CD: mov 0x58(%eax),%ecx;");
    asm("loc_4C24D0: test %ecx,%ecx;");
    asm("loc_4C24D2: je loc_4C24DE;");
    asm("loc_4C24D4: movb $0,(%ecx);");
    asm("loc_4C24D7: movl $0,0x58(%eax);");
    asm("loc_4C24DE: mov 0x330(%ebx),%ecx;");
    asm("loc_4C24E4: push $0xFFFFFFFF;");
    asm("loc_4C24E6: call _sub_4BF850;");
    asm("loc_4C24EB: cmpl $3,0x390(%ebx);");
    asm("loc_4C24F2: jne loc_4C24FD;");
    asm("loc_4C24F4: push $4;");
    asm("loc_4C24F6: mov %ebx,%ecx;");
    asm("loc_4C24F8: call _sub_4C1AE0;");
    asm("loc_4C24FD: pop %edi;");
    asm("loc_4C24FE: pop %esi;");
    asm("loc_4C24FF: pop %ebx;");
    asm("loc_4C2500: mov %ebp,%esp;");
    asm("loc_4C2502: pop %ebp;");
    asm("loc_4C2503: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2510() // _sub_4C2510
{
    __DEBUG_ASM(4C2510);
    // chunk 0x4C2510 _sub_4C2510
    asm("loc_4C2510: push %esi;");
    asm("loc_4C2511: push %edi;");
    asm("loc_4C2512: mov 0xC(%esp),%edi;");
    asm("loc_4C2516: push $1;");
    asm("loc_4C2518: push %edi;");
    asm("loc_4C2519: mov %ecx,%esi;");
    asm("loc_4C251B: call _sub_5416C0;");
    asm("loc_4C2520: add $8,%esp;");
    asm("loc_4C2523: test %eax,%eax;");
    asm("loc_4C2525: mov %edi,0x42C(%esi);");
    asm("loc_4C252B: je loc_4C260F;");
    asm("loc_4C2531: push %ebx;");
    asm("loc_4C2532: mov %eax,%ecx;");
    asm("loc_4C2534: call _sub_543320;");
    asm("loc_4C2539: mov %eax,%edi;");
    asm("loc_4C253B: mov %edi,0x43C(%esi);");
    asm("loc_4C2541: mov 0x88(%edi),%eax;");
    asm("loc_4C2547: flds 0x100(%eax);");
    asm("loc_4C254D: mov %edi,%ecx;");
    asm("loc_4C254F: fstpl 0x3F0(%esi);");
    asm("loc_4C2555: calll *_import_5C6440;");
    asm("loc_4C255B: fsubrl 0x3F0(%esi);");
    asm("loc_4C2561: mov 0x39C(%esi),%ecx;");
    asm("loc_4C2567: push $0;");
    asm("loc_4C2569: fstpl 0x3E8(%esi);");
    asm("loc_4C256F: mov (%ecx),%ebx;");
    asm("loc_4C2571: mov %edi,%ecx;");
    asm("loc_4C2573: calll *_import_5C644C;");
    asm("loc_4C2579: mov 0x39C(%esi),%ecx;");
    asm("loc_4C257F: push %eax;");
    asm("loc_4C2580: push $0x1D;");
    asm("loc_4C2582: calll *0xA8(%ebx);");
    asm("loc_4C2588: mov 0xB4(%edi),%edx;");
    asm("loc_4C258E: mov %edx,0x430(%esi);");
    asm("loc_4C2594: mov 0x88(%edi),%eax;");
    asm("loc_4C259A: mov 0x140(%eax),%eax;");
    asm("loc_4C25A0: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4C25A3: mov %eax,0x3FC(%esi);");
    asm("loc_4C25A9: jne loc_4C25B5;");
    asm("loc_4C25AB: movl $0x2FAF080,0x3FC(%esi);");
    asm("loc_4C25B5: mov 0x88(%edi),%ebx;");
    asm("loc_4C25BB: mov %edi,%ecx;");
    asm("loc_4C25BD: calll *_import_5C6448;");
    asm("loc_4C25C3: mov 0x140(%ebx),%ecx;");
    asm("loc_4C25C9: sub %eax,%ecx;");
    asm("loc_4C25CB: mov %ecx,0x3F8(%esi);");
    asm("loc_4C25D1: mov 0x88(%edi),%edx;");
    asm("loc_4C25D7: mov 0x144(%edx),%eax;");
    asm("loc_4C25DD: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4C25E0: mov %eax,0x404(%esi);");
    asm("loc_4C25E6: jne loc_4C25F2;");
    asm("loc_4C25E8: movl $0x2FAF080,0x404(%esi);");
    asm("loc_4C25F2: mov 0x88(%edi),%ebx;");
    asm("loc_4C25F8: mov %edi,%ecx;");
    asm("loc_4C25FA: calll *_import_5C6444;");
    asm("loc_4C2600: mov 0x144(%ebx),%ecx;");
    asm("loc_4C2606: sub %eax,%ecx;");
    asm("loc_4C2608: mov %ecx,0x400(%esi);");
    asm("loc_4C260E: pop %ebx;");
    asm("loc_4C260F: pop %edi;");
    asm("loc_4C2610: pop %esi;");
    asm("loc_4C2611: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2620() // _sub_4C2620
{
    __DEBUG_ASM(4C2620);
    // chunk 0x4C2620 _sub_4C2620
    asm("loc_4C2620: mov 4(%esp),%al;");
    asm("loc_4C2624: push %esi;");
    asm("loc_4C2625: mov %ecx,%esi;");
    asm("loc_4C2627: mov 0x414(%esi),%ecx;");
    asm("loc_4C262D: cmp $1,%al;");
    asm("loc_4C262F: mov (%ecx),%eax;");
    asm("loc_4C2631: push $0;");
    asm("loc_4C2633: jne loc_4C264E;");
    asm("loc_4C2635: push $0x759;");
    asm("loc_4C263A: push $0x1E;");
    asm("loc_4C263C: calll *0xA8(%eax);");
    asm("loc_4C2642: movb $0,8(%esp);");
    asm("loc_4C2647: movb $0xFF,9(%esp);");
    asm("loc_4C264C: jmp loc_4C2665;");
    asm("loc_4C264E: push $0x75A;");
    asm("loc_4C2653: push $0x1E;");
    asm("loc_4C2655: calll *0xA8(%eax);");
    asm("loc_4C265B: movb $0xFF,8(%esp);");
    asm("loc_4C2660: movb $0,9(%esp);");
    asm("loc_4C2665: mov 0x414(%esi),%ecx;");
    asm("loc_4C266B: movb $0xC0,0xB(%esp);");
    asm("loc_4C2670: movb $0,0xA(%esp);");
    asm("loc_4C2675: mov 8(%esp),%edx;");
    asm("loc_4C2679: mov %edx,0x348(%ecx);");
    asm("loc_4C267F: pop %esi;");
    asm("loc_4C2680: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2690() // _sub_4C2690
{
    __DEBUG_ASM(4C2690);
    // chunk 0x4C2690 _sub_4C2690
    asm("loc_4C2690: mov 4(%esp),%al;");
    asm("loc_4C2694: push %esi;");
    asm("loc_4C2695: mov %ecx,%esi;");
    asm("loc_4C2697: mov 0x410(%esi),%ecx;");
    asm("loc_4C269D: cmp $1,%al;");
    asm("loc_4C269F: mov (%ecx),%eax;");
    asm("loc_4C26A1: push $0;");
    asm("loc_4C26A3: jne loc_4C26BE;");
    asm("loc_4C26A5: push $0x759;");
    asm("loc_4C26AA: push $0x1E;");
    asm("loc_4C26AC: calll *0xA8(%eax);");
    asm("loc_4C26B2: movb $0,8(%esp);");
    asm("loc_4C26B7: movb $0xFF,9(%esp);");
    asm("loc_4C26BC: jmp loc_4C26D5;");
    asm("loc_4C26BE: push $0x75A;");
    asm("loc_4C26C3: push $0x1E;");
    asm("loc_4C26C5: calll *0xA8(%eax);");
    asm("loc_4C26CB: movb $0xFF,8(%esp);");
    asm("loc_4C26D0: movb $0,9(%esp);");
    asm("loc_4C26D5: mov 0x410(%esi),%ecx;");
    asm("loc_4C26DB: movb $0xC0,0xB(%esp);");
    asm("loc_4C26E0: movb $0,0xA(%esp);");
    asm("loc_4C26E5: mov 8(%esp),%edx;");
    asm("loc_4C26E9: mov %edx,0x348(%ecx);");
    asm("loc_4C26EF: pop %esi;");
    asm("loc_4C26F0: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2700() // _sub_4C2700
{
    __DEBUG_ASM(4C2700);
    // chunk 0x4C2700 _sub_4C2700
    asm("loc_4C2700: push %ecx;");
    asm("loc_4C2701: push %ebx;");
    asm("loc_4C2702: push %ebp;");
    asm("loc_4C2703: mov 0x330(%ecx),%ebp;");
    asm("loc_4C2709: push %esi;");
    asm("loc_4C270A: push %edi;");
    asm("loc_4C270B: push $0;");
    asm("loc_4C270D: lea 0x20(%ebp),%esi;");
    asm("loc_4C2710: push $0;");
    asm("loc_4C2712: mov %esi,%ecx;");
    asm("loc_4C2714: calll *_import_5C642C;");
    asm("loc_4C271A: mov %eax,%ebx;");
    asm("loc_4C271C: test %ebx,%ebx;");
    asm("loc_4C271E: mov 0x18(%esp),%eax;");
    asm("loc_4C2722: je loc_4C277B;");
    asm("loc_4C2724: test %eax,%eax;");
    asm("loc_4C2726: jne loc_4C27C9;");
    asm("loc_4C272C: mov 4(%esi),%eax;");
    asm("loc_4C272F: mov (%eax),%edi;");
    asm("loc_4C2731: cmp %eax,%edi;");
    asm("loc_4C2733: mov %eax,0x10(%esp);");
    asm("loc_4C2737: je loc_4C27DA;");
    asm("loc_4C273D: lea (%ecx),%ecx;");
    asm("loc_4C2740: mov 0xA(%edi),%cx;");
    asm("loc_4C2744: cmp 2(%ebx),%cx;");
    asm("loc_4C2748: jne loc_4C2773;");
    asm("loc_4C274A: mov %edi,%eax;");
    asm("loc_4C274C: mov 4(%eax),%edx;");
    asm("loc_4C274F: mov (%eax),%ecx;");
    asm("loc_4C2751: mov (%edi),%edi;");
    asm("loc_4C2753: mov %ecx,(%edx);");
    asm("loc_4C2755: mov (%eax),%edx;");
    asm("loc_4C2757: mov 4(%eax),%ecx;");
    asm("loc_4C275A: push %eax;");
    asm("loc_4C275B: mov %ecx,4(%edx);");
    asm("loc_4C275E: call _sub_5B7E1D;");
    asm("loc_4C2763: mov 8(%esi),%eax;");
    asm("loc_4C2766: add $4,%esp;");
    asm("loc_4C2769: dec %eax;");
    asm("loc_4C276A: mov %eax,8(%esi);");
    asm("loc_4C276D: mov 0x10(%esp),%eax;");
    asm("loc_4C2771: jmp loc_4C2775;");
    asm("loc_4C2773: mov (%edi),%edi;");
    asm("loc_4C2775: cmp %eax,%edi;");
    asm("loc_4C2777: jne loc_4C2740;");
    asm("loc_4C2779: jmp loc_4C27DA;");
    asm("loc_4C277B: test %eax,%eax;");
    asm("loc_4C277D: je loc_4C27DA;");
    asm("loc_4C277F: mov 4(%esi),%edi;");
    asm("loc_4C2782: mov 4(%edi),%ebx;");
    asm("loc_4C2785: push $0x28;");
    asm("loc_4C2787: call _sub_5B7E84;");
    asm("loc_4C278C: add $4,%esp;");
    asm("loc_4C278F: test %ebx,%ebx;");
    asm("loc_4C2791: mov %edi,(%eax);");
    asm("loc_4C2793: mov %ebx,%ecx;");
    asm("loc_4C2795: jne loc_4C2799;");
    asm("loc_4C2797: mov %eax,%ecx;");
    asm("loc_4C2799: mov %ecx,4(%eax);");
    asm("loc_4C279C: mov %eax,4(%edi);");
    asm("loc_4C279F: mov 4(%eax),%edx;");
    asm("loc_4C27A2: lea 0x38(%ebp),%ecx;");
    asm("loc_4C27A5: mov %eax,(%edx);");
    asm("loc_4C27A7: push %ecx;");
    asm("loc_4C27A8: add $8,%eax;");
    asm("loc_4C27AB: push %eax;");
    asm("loc_4C27AC: call _sub_4B7390;");
    asm("loc_4C27B1: mov 8(%esi),%edx;");
    asm("loc_4C27B4: add $8,%esp;");
    asm("loc_4C27B7: push $0;");
    asm("loc_4C27B9: inc %edx;");
    asm("loc_4C27BA: push $0;");
    asm("loc_4C27BC: mov %esi,%ecx;");
    asm("loc_4C27BE: mov %edx,8(%esi);");
    asm("loc_4C27C1: calll *_import_5C642C;");
    asm("loc_4C27C7: mov %eax,%ebx;");
    asm("loc_4C27C9: test %ebx,%ebx;");
    asm("loc_4C27CB: je loc_4C27DA;");
    asm("loc_4C27CD: mov 0x18(%esp),%edx;");
    asm("loc_4C27D1: push %edx;");
    asm("loc_4C27D2: mov %ebx,%ecx;");
    asm("loc_4C27D4: calll *_import_5C6428;");
    asm("loc_4C27DA: mov 0x18(%esp),%eax;");
    asm("loc_4C27DE: push %eax;");
    asm("loc_4C27DF: lea 0x38(%ebp),%ecx;");
    asm("loc_4C27E2: calll *_import_5C6428;");
    asm("loc_4C27E8: push $0xFFFFFFFF;");
    asm("loc_4C27EA: mov %ebp,%ecx;");
    asm("loc_4C27EC: call _sub_4BF850;");
    asm("loc_4C27F1: pop %edi;");
    asm("loc_4C27F2: pop %esi;");
    asm("loc_4C27F3: pop %ebp;");
    asm("loc_4C27F4: pop %ebx;");
    asm("loc_4C27F5: pop %ecx;");
    asm("loc_4C27F6: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2800() // _sub_4C2800
{
    __DEBUG_ASM(4C2800);
    // chunk 0x4C2800 _sub_4C2800
    asm("loc_4C2800: mov %fs:0,%eax;");
    asm("loc_4C2806: push $0xFFFFFFFF;");
    asm("loc_4C2808: push $_sub_5BD6A4;");
    asm("loc_4C280D: push %eax;");
    asm("loc_4C280E: mov %esp,%fs:0;");
    asm("loc_4C2815: sub $0x30,%esp;");
    asm("loc_4C2818: push %ebx;");
    asm("loc_4C2819: push %ebp;");
    asm("loc_4C281A: push %esi;");
    asm("loc_4C281B: push %edi;");
    asm("loc_4C281C: mov _import_5C69A0,%edi;");
    asm("loc_4C2822: mov %ecx,%esi;");
    asm("loc_4C2824: lea 0x14(%esp),%ecx;");
    asm("loc_4C2828: call *%edi;");
    asm("loc_4C282A: lea 0x10(%esp),%ecx;");
    asm("loc_4C282E: call *%edi;");
    asm("loc_4C2830: mov 0x54(%esp),%bl;");
    asm("loc_4C2834: test %bl,%bl;");
    asm("loc_4C2836: mov 0x50(%esp),%ebp;");
    asm("loc_4C283A: je loc_4C285E;");
    asm("loc_4C283C: mov 0x58(%ebp),%eax;");
    asm("loc_4C283F: push $1;");
    asm("loc_4C2841: lea 0x1C(%esp),%ecx;");
    asm("loc_4C2845: push %ecx;");
    asm("loc_4C2846: lea 0x5C(%esp),%edx;");
    asm("loc_4C284A: push %edx;");
    asm("loc_4C284B: lea 0x1C(%esp),%ecx;");
    asm("loc_4C284F: push %ecx;");
    asm("loc_4C2850: lea 0x24(%esp),%edx;");
    asm("loc_4C2854: push %edx;");
    asm("loc_4C2855: push %eax;");
    asm("loc_4C2856: call _sub_4BE6C0;");
    asm("loc_4C285B: add $0x18,%esp;");
    asm("loc_4C285E: cmp 0x338(%esi),%ebp;");
    asm("loc_4C2864: jne loc_4C2A2B;");
    asm("loc_4C286A: push $0xFFFFFFFF;");
    asm("loc_4C286C: mov %ebp,%ecx;");
    asm("loc_4C286E: mov %bl,0x5D(%ebp);");
    asm("loc_4C2871: call _sub_4BF850;");
    asm("loc_4C2876: mov 0x368(%esi),%ecx;");
    asm("loc_4C287C: mov (%ecx),%edx;");
    asm("loc_4C287E: xor %eax,%eax;");
    asm("loc_4C2880: test %bl,%bl;");
    asm("loc_4C2882: sete %al;");
    asm("loc_4C2885: push $0;");
    asm("loc_4C2887: mov %eax,%edi;");
    asm("loc_4C2889: push %edi;");
    asm("loc_4C288A: push $1;");
    asm("loc_4C288C: calll *0xA8(%edx);");
    asm("loc_4C2892: mov 0x36C(%esi),%ecx;");
    asm("loc_4C2898: mov (%ecx),%eax;");
    asm("loc_4C289A: push $0;");
    asm("loc_4C289C: push %edi;");
    asm("loc_4C289D: push $1;");
    asm("loc_4C289F: calll *0xA8(%eax);");
    asm("loc_4C28A5: mov 0x370(%esi),%ecx;");
    asm("loc_4C28AB: mov (%ecx),%edx;");
    asm("loc_4C28AD: push $0;");
    asm("loc_4C28AF: push %edi;");
    asm("loc_4C28B0: push $1;");
    asm("loc_4C28B2: calll *0xA8(%edx);");
    asm("loc_4C28B8: mov 0x374(%esi),%ecx;");
    asm("loc_4C28BE: mov (%ecx),%eax;");
    asm("loc_4C28C0: push $0;");
    asm("loc_4C28C2: push %edi;");
    asm("loc_4C28C3: push $1;");
    asm("loc_4C28C5: calll *0xA8(%eax);");
    asm("loc_4C28CB: test %bl,%bl;");
    asm("loc_4C28CD: je loc_4C2A16;");
    asm("loc_4C28D3: mov 0x370(%esi),%ecx;");
    asm("loc_4C28D9: push $1;");
    asm("loc_4C28DB: call _sub_53E4A0;");
    asm("loc_4C28E0: mov 0x14(%esp),%eax;");
    asm("loc_4C28E4: xor %edi,%edi;");
    asm("loc_4C28E6: cmp %edi,%eax;");
    asm("loc_4C28E8: je loc_4C28FD;");
    asm("loc_4C28EA: mov 0x10(%esp),%ecx;");
    asm("loc_4C28EE: push %edi;");
    asm("loc_4C28EF: push %edi;");
    asm("loc_4C28F0: push %ecx;");
    asm("loc_4C28F1: mov 0x370(%esi),%ecx;");
    asm("loc_4C28F7: push %eax;");
    asm("loc_4C28F8: call _sub_585890;");
    asm("loc_4C28FD: mov 0x54(%esp),%eax;");
    asm("loc_4C2901: mov 0x374(%esi),%ecx;");
    asm("loc_4C2907: mov (%ecx),%edx;");
    asm("loc_4C2909: push %edi;");
    asm("loc_4C290A: push %eax;");
    asm("loc_4C290B: push $0x1E;");
    asm("loc_4C290D: calll *0xA8(%edx);");
    asm("loc_4C2913: mov 0x54(%esp),%cl;");
    asm("loc_4C2917: push %edi;");
    asm("loc_4C2918: mov %cl,0x2C(%esp);");
    asm("loc_4C291C: push %edi;");
    asm("loc_4C291D: lea 0x30(%esp),%ecx;");
    asm("loc_4C2921: call _sub_42A7E0;");
    asm("loc_4C2926: mov %eax,0x2C(%esp);");
    asm("loc_4C292A: mov %edi,0x30(%esp);");
    asm("loc_4C292E: push $0xD801;");
    asm("loc_4C2933: lea 0x24(%esp),%ecx;");
    asm("loc_4C2937: mov %edi,0x4C(%esp);");
    asm("loc_4C293B: calll *_import_5C62B8;");
    asm("loc_4C2941: mov (%eax),%edx;");
    asm("loc_4C2943: mov %eax,%ecx;");
    asm("loc_4C2945: movb $1,0x48(%esp);");
    asm("loc_4C294A: calll *0x1C(%edx);");
    asm("loc_4C294D: mov %eax,0x54(%esp);");
    asm("loc_4C2951: mov 0x2C(%esp),%ecx;");
    asm("loc_4C2955: lea 0x54(%esp),%eax;");
    asm("loc_4C2959: push %eax;");
    asm("loc_4C295A: push %ecx;");
    asm("loc_4C295B: lea 0x58(%esp),%edx;");
    asm("loc_4C295F: push %edx;");
    asm("loc_4C2960: lea 0x34(%esp),%ecx;");
    asm("loc_4C2964: movb $2,0x54(%esp);");
    asm("loc_4C2969: call _sub_46C800;");
    asm("loc_4C296E: mov 0x54(%esp),%ecx;");
    asm("loc_4C2972: cmp %edi,%ecx;");
    asm("loc_4C2974: movb $1,0x48(%esp);");
    asm("loc_4C2979: je loc_4C2985;");
    asm("loc_4C297B: mov (%ecx),%eax;");
    asm("loc_4C297D: push $1;");
    asm("loc_4C297F: calll *(%eax);");
    asm("loc_4C2981: mov %edi,0x54(%esp);");
    asm("loc_4C2985: lea 0x20(%esp),%ecx;");
    asm("loc_4C2989: movb $0,0x48(%esp);");
    asm("loc_4C298E: calll *_import_5C62B4;");
    asm("loc_4C2994: mov 0x18(%esp),%edx;");
    asm("loc_4C2998: lea 0x28(%esp),%ecx;");
    asm("loc_4C299C: push %ecx;");
    asm("loc_4C299D: push %edx;");
    asm("loc_4C299E: call _sub_57DA40;");
    asm("loc_4C29A3: mov 0x378(%esi),%ecx;");
    asm("loc_4C29A9: add $8,%esp;");
    asm("loc_4C29AC: call _sub_57B370;");
    asm("loc_4C29B1: mov 0x378(%esi),%ecx;");
    asm("loc_4C29B7: lea 0x28(%esp),%eax;");
    asm("loc_4C29BB: push %eax;");
    asm("loc_4C29BC: call _sub_57B3E0;");
    asm("loc_4C29C1: mov 0x378(%esi),%eax;");
    asm("loc_4C29C7: orb $3,0x6C(%eax);");
    asm("loc_4C29CB: mov 0x378(%esi),%ecx;");
    asm("loc_4C29D1: push $1;");
    asm("loc_4C29D3: call _sub_579BD0;");
    asm("loc_4C29D8: lea 0x54(%esp),%ecx;");
    asm("loc_4C29DC: push %ecx;");
    asm("loc_4C29DD: lea 0x2C(%esp),%ecx;");
    asm("loc_4C29E1: movl $0xFFFFFFFF,0x4C(%esp);");
    asm("loc_4C29E9: call _sub_53E430;");
    asm("loc_4C29EE: mov 0x2C(%esp),%edx;");
    asm("loc_4C29F2: mov (%eax),%eax;");
    asm("loc_4C29F4: push %edx;");
    asm("loc_4C29F5: push %eax;");
    asm("loc_4C29F6: lea 0x58(%esp),%ecx;");
    asm("loc_4C29FA: push %ecx;");
    asm("loc_4C29FB: lea 0x34(%esp),%ecx;");
    asm("loc_4C29FF: call _sub_46C860;");
    asm("loc_4C2A04: mov 0x2C(%esp),%edx;");
    asm("loc_4C2A08: push %edx;");
    asm("loc_4C2A09: call _sub_5B7E1D;");
    asm("loc_4C2A0E: add $4,%esp;");
    asm("loc_4C2A11: jmp loc_4C2C37;");
    asm("loc_4C2A16: mov 0x378(%esi),%eax;");
    asm("loc_4C2A1C: andb $0xFC,0x6C(%eax);");
    asm("loc_4C2A20: mov 0x378(%esi),%ecx;");
    asm("loc_4C2A26: jmp loc_4C2C30;");
    asm("loc_4C2A2B: cmp 0x330(%esi),%ebp;");
    asm("loc_4C2A31: jne loc_4C2C37;");
    asm("loc_4C2A37: push $0xFFFFFFFF;");
    asm("loc_4C2A39: mov %ebp,%ecx;");
    asm("loc_4C2A3B: mov %bl,0x5D(%ebp);");
    asm("loc_4C2A3E: call _sub_4BF850;");
    asm("loc_4C2A43: mov 0x37C(%esi),%ecx;");
    asm("loc_4C2A49: mov (%ecx),%edx;");
    asm("loc_4C2A4B: xor %eax,%eax;");
    asm("loc_4C2A4D: test %bl,%bl;");
    asm("loc_4C2A4F: sete %al;");
    asm("loc_4C2A52: push $0;");
    asm("loc_4C2A54: mov %eax,%edi;");
    asm("loc_4C2A56: push %edi;");
    asm("loc_4C2A57: push $1;");
    asm("loc_4C2A59: calll *0xA8(%edx);");
    asm("loc_4C2A5F: mov 0x380(%esi),%ecx;");
    asm("loc_4C2A65: mov (%ecx),%eax;");
    asm("loc_4C2A67: push $0;");
    asm("loc_4C2A69: push %edi;");
    asm("loc_4C2A6A: push $1;");
    asm("loc_4C2A6C: calll *0xA8(%eax);");
    asm("loc_4C2A72: mov 0x384(%esi),%ecx;");
    asm("loc_4C2A78: mov (%ecx),%edx;");
    asm("loc_4C2A7A: push $0;");
    asm("loc_4C2A7C: push %edi;");
    asm("loc_4C2A7D: push $1;");
    asm("loc_4C2A7F: calll *0xA8(%edx);");
    asm("loc_4C2A85: mov 0x388(%esi),%ecx;");
    asm("loc_4C2A8B: mov (%ecx),%eax;");
    asm("loc_4C2A8D: push $0;");
    asm("loc_4C2A8F: push %edi;");
    asm("loc_4C2A90: push $1;");
    asm("loc_4C2A92: calll *0xA8(%eax);");
    asm("loc_4C2A98: test %bl,%bl;");
    asm("loc_4C2A9A: je loc_4C2C20;");
    asm("loc_4C2AA0: mov 0x384(%esi),%ecx;");
    asm("loc_4C2AA6: push $1;");
    asm("loc_4C2AA8: call _sub_53E4A0;");
    asm("loc_4C2AAD: mov 0x10(%esp),%ecx;");
    asm("loc_4C2AB1: mov 0x14(%esp),%edx;");
    asm("loc_4C2AB5: push $0;");
    asm("loc_4C2AB7: push $0;");
    asm("loc_4C2AB9: push %ecx;");
    asm("loc_4C2ABA: mov 0x384(%esi),%ecx;");
    asm("loc_4C2AC0: push %edx;");
    asm("loc_4C2AC1: call _sub_585890;");
    asm("loc_4C2AC6: mov 0x54(%esp),%edx;");
    asm("loc_4C2ACA: mov 0x388(%esi),%ecx;");
    asm("loc_4C2AD0: mov (%ecx),%eax;");
    asm("loc_4C2AD2: push $0;");
    asm("loc_4C2AD4: push %edx;");
    asm("loc_4C2AD5: push $0x1E;");
    asm("loc_4C2AD7: calll *0xA8(%eax);");
    asm("loc_4C2ADD: mov 0x54(%esp),%al;");
    asm("loc_4C2AE1: push $0xC;");
    asm("loc_4C2AE3: mov %al,0x38(%esp);");
    asm("loc_4C2AE7: call _sub_5B7E84;");
    asm("loc_4C2AEC: mov %eax,(%eax);");
    asm("loc_4C2AEE: mov %eax,4(%eax);");
    asm("loc_4C2AF1: add $4,%esp;");
    asm("loc_4C2AF4: mov %eax,0x38(%esp);");
    asm("loc_4C2AF8: movl $0,0x3C(%esp);");
    asm("loc_4C2B00: push $0xD801;");
    asm("loc_4C2B05: lea 0x24(%esp),%ecx;");
    asm("loc_4C2B09: movl $3,0x4C(%esp);");
    asm("loc_4C2B11: calll *_import_5C62B8;");
    asm("loc_4C2B17: mov (%eax),%edx;");
    asm("loc_4C2B19: mov %eax,%ecx;");
    asm("loc_4C2B1B: movb $4,0x48(%esp);");
    asm("loc_4C2B20: calll *0x1C(%edx);");
    asm("loc_4C2B23: mov %eax,0x54(%esp);");
    asm("loc_4C2B27: mov 0x38(%esp),%edi;");
    asm("loc_4C2B2B: mov 4(%edi),%ebp;");
    asm("loc_4C2B2E: mov %edi,0x1C(%esp);");
    asm("loc_4C2B32: add $4,%edi;");
    asm("loc_4C2B35: push $0xC;");
    asm("loc_4C2B37: movb $5,0x4C(%esp);");
    asm("loc_4C2B3C: call _sub_5B7E84;");
    asm("loc_4C2B41: mov 0x20(%esp),%ecx;");
    asm("loc_4C2B45: add $4,%esp;");
    asm("loc_4C2B48: test %ebp,%ebp;");
    asm("loc_4C2B4A: mov %ecx,(%eax);");
    asm("loc_4C2B4C: jne loc_4C2B50;");
    asm("loc_4C2B4E: mov %eax,%ebp;");
    asm("loc_4C2B50: mov %ebp,4(%eax);");
    asm("loc_4C2B53: mov %eax,(%edi);");
    asm("loc_4C2B55: mov 4(%eax),%ecx;");
    asm("loc_4C2B58: lea 0x54(%esp),%edx;");
    asm("loc_4C2B5C: mov %eax,(%ecx);");
    asm("loc_4C2B5E: push %edx;");
    asm("loc_4C2B5F: add $8,%eax;");
    asm("loc_4C2B62: push %eax;");
    asm("loc_4C2B63: call _sub_46EA00;");
    asm("loc_4C2B68: mov 0x44(%esp),%ecx;");
    asm("loc_4C2B6C: add $8,%esp;");
    asm("loc_4C2B6F: inc %ecx;");
    asm("loc_4C2B70: mov %ecx,0x3C(%esp);");
    asm("loc_4C2B74: mov 0x54(%esp),%ecx;");
    asm("loc_4C2B78: test %ecx,%ecx;");
    asm("loc_4C2B7A: movb $4,0x48(%esp);");
    asm("loc_4C2B7F: je loc_4C2B8F;");
    asm("loc_4C2B81: mov (%ecx),%eax;");
    asm("loc_4C2B83: push $1;");
    asm("loc_4C2B85: calll *(%eax);");
    asm("loc_4C2B87: movl $0,0x54(%esp);");
    asm("loc_4C2B8F: lea 0x20(%esp),%ecx;");
    asm("loc_4C2B93: movb $3,0x48(%esp);");
    asm("loc_4C2B98: calll *_import_5C62B4;");
    asm("loc_4C2B9E: mov 0x18(%esp),%edx;");
    asm("loc_4C2BA2: lea 0x34(%esp),%ecx;");
    asm("loc_4C2BA6: push %ecx;");
    asm("loc_4C2BA7: push %edx;");
    asm("loc_4C2BA8: call _sub_57DA40;");
    asm("loc_4C2BAD: mov 0x38C(%esi),%ecx;");
    asm("loc_4C2BB3: add $8,%esp;");
    asm("loc_4C2BB6: call _sub_57B370;");
    asm("loc_4C2BBB: mov 0x38C(%esi),%ecx;");
    asm("loc_4C2BC1: lea 0x34(%esp),%eax;");
    asm("loc_4C2BC5: push %eax;");
    asm("loc_4C2BC6: call _sub_57B3E0;");
    asm("loc_4C2BCB: mov 0x38C(%esi),%eax;");
    asm("loc_4C2BD1: orb $3,0x6C(%eax);");
    asm("loc_4C2BD5: mov 0x38C(%esi),%ecx;");
    asm("loc_4C2BDB: push $1;");
    asm("loc_4C2BDD: call _sub_579BD0;");
    asm("loc_4C2BE2: mov 0x38(%esp),%eax;");
    asm("loc_4C2BE6: mov (%eax),%edi;");
    asm("loc_4C2BE8: cmp %eax,%edi;");
    asm("loc_4C2BEA: movl $0xFFFFFFFF,0x48(%esp);");
    asm("loc_4C2BF2: mov %eax,%ebp;");
    asm("loc_4C2BF4: je loc_4C2C11;");
    asm("loc_4C2BF6: mov %edi,%eax;");
    asm("loc_4C2BF8: mov (%edi),%edi;");
    asm("loc_4C2BFA: push %eax;");
    asm("loc_4C2BFB: lea 0x20(%esp),%ecx;");
    asm("loc_4C2BFF: push %ecx;");
    asm("loc_4C2C00: lea 0x3C(%esp),%ecx;");
    asm("loc_4C2C04: call _sub_46D680;");
    asm("loc_4C2C09: cmp %ebp,%edi;");
    asm("loc_4C2C0B: jne loc_4C2BF6;");
    asm("loc_4C2C0D: mov 0x38(%esp),%eax;");
    asm("loc_4C2C11: push %eax;");
    asm("loc_4C2C12: call _sub_5B7E1D;");
    asm("loc_4C2C17: mov 0x54(%esp),%ebp;");
    asm("loc_4C2C1B: add $4,%esp;");
    asm("loc_4C2C1E: jmp loc_4C2C37;");
    asm("loc_4C2C20: mov 0x38C(%esi),%eax;");
    asm("loc_4C2C26: andb $0xFC,0x6C(%eax);");
    asm("loc_4C2C2A: mov 0x38C(%esi),%ecx;");
    asm("loc_4C2C30: push $0;");
    asm("loc_4C2C32: call _sub_579BD0;");
    asm("loc_4C2C37: mov 0x424(%esi),%eax;");
    asm("loc_4C2C3D: test %eax,%eax;");
    asm("loc_4C2C3F: je loc_4C2C4E;");
    asm("loc_4C2C41: cmp %ebp,4(%eax);");
    asm("loc_4C2C44: jne loc_4C2C4E;");
    asm("loc_4C2C46: mov 0x428(%esi),%edx;");
    asm("loc_4C2C4C: mov %bl,(%edx);");
    asm("loc_4C2C4E: mov 0x40(%esp),%ecx;");
    asm("loc_4C2C52: pop %edi;");
    asm("loc_4C2C53: pop %esi;");
    asm("loc_4C2C54: pop %ebp;");
    asm("loc_4C2C55: pop %ebx;");
    asm("loc_4C2C56: mov %ecx,%fs:0;");
    asm("loc_4C2C5D: add $0x3C,%esp;");
    asm("loc_4C2C60: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2C70() // _sub_4C2C70
{
    __DEBUG_ASM(4C2C70);
    // chunk 0x4C2C70 _sub_4C2C70
    asm("loc_4C2C70: push %ebx;");
    asm("loc_4C2C71: push %esi;");
    asm("loc_4C2C72: mov %ecx,%esi;");
    asm("loc_4C2C74: mov 0x390(%esi),%eax;");
    asm("loc_4C2C7A: xor %bl,%bl;");
    asm("loc_4C2C7C: cmp $3,%eax;");
    asm("loc_4C2C7F: jne loc_4C2D47;");
    asm("loc_4C2C85: mov 0x10(%esp),%eax;");
    asm("loc_4C2C89: mov (%eax),%cl;");
    asm("loc_4C2C8B: mov %cl,%al;");
    asm("loc_4C2C8D: and $1,%al;");
    asm("loc_4C2C8F: jne loc_4C2C9A;");
    asm("loc_4C2C91: test $2,%cl;");
    asm("loc_4C2C94: je loc_4C2D47;");
    asm("loc_4C2C9A: mov 0xC(%esp),%ecx;");
    asm("loc_4C2C9E: cmp $8,%ecx;");
    asm("loc_4C2CA1: jne loc_4C2CC8;");
    asm("loc_4C2CA3: test %al,%al;");
    asm("loc_4C2CA5: je loc_4C2CC4;");
    asm("loc_4C2CA7: mov 0x364(%esi),%ecx;");
    asm("loc_4C2CAD: mov $0x66666667,%eax;");
    asm("loc_4C2CB2: imul %ecx;");
    asm("loc_4C2CB4: sar $2,%edx;");
    asm("loc_4C2CB7: mov %edx,%ecx;");
    asm("loc_4C2CB9: shr $0x1F,%ecx;");
    asm("loc_4C2CBC: add %ecx,%edx;");
    asm("loc_4C2CBE: mov %edx,0x364(%esi);");
    asm("loc_4C2CC4: mov $1,%bl;");
    asm("loc_4C2CC6: jmp loc_4C2D15;");
    asm("loc_4C2CC8: cmp $0x30,%ecx;");
    asm("loc_4C2CCB: jl loc_4C2D15;");
    asm("loc_4C2CCD: cmp $0x39,%ecx;");
    asm("loc_4C2CD0: jg loc_4C2D15;");
    asm("loc_4C2CD2: test %al,%al;");
    asm("loc_4C2CD4: mov $1,%bl;");
    asm("loc_4C2CD6: je loc_4C2D15;");
    asm("loc_4C2CD8: mov 0x360(%esi),%al;");
    asm("loc_4C2CDE: test %al,%al;");
    asm("loc_4C2CE0: jne loc_4C2CEC;");
    asm("loc_4C2CE2: movl $0,0x364(%esi);");
    asm("loc_4C2CEC: mov 0x364(%esi),%eax;");
    asm("loc_4C2CF2: lea (%eax,%eax,4),%edx;");
    asm("loc_4C2CF5: lea -0x30(%ecx,%edx,2),%eax;");
    asm("loc_4C2CF9: mov 0x34C(%esi),%ecx;");
    asm("loc_4C2CFF: cmp 0x658(%ecx),%eax;");
    asm("loc_4C2D05: jl loc_4C2D15;");
    asm("loc_4C2D07: cmp 0x65C(%ecx),%eax;");
    asm("loc_4C2D0D: jg loc_4C2D15;");
    asm("loc_4C2D0F: mov %eax,0x364(%esi);");
    asm("loc_4C2D15: test %bl,%bl;");
    asm("loc_4C2D17: movb $1,0x360(%esi);");
    asm("loc_4C2D1E: je loc_4C2D47;");
    asm("loc_4C2D20: mov 0x364(%esi),%edx;");
    asm("loc_4C2D26: mov 0x34C(%esi),%ecx;");
    asm("loc_4C2D2C: mov (%ecx),%eax;");
    asm("loc_4C2D2E: push $0;");
    asm("loc_4C2D30: push %edx;");
    asm("loc_4C2D31: push $0x38;");
    asm("loc_4C2D33: calll *0xA8(%eax);");
    asm("loc_4C2D39: mov 0x364(%esi),%eax;");
    asm("loc_4C2D3F: push %eax;");
    asm("loc_4C2D40: mov %esi,%ecx;");
    asm("loc_4C2D42: call _sub_4C1A10;");
    asm("loc_4C2D47: pop %esi;");
    asm("loc_4C2D48: mov %bl,%al;");
    asm("loc_4C2D4A: pop %ebx;");
    asm("loc_4C2D4B: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C2D50() // _sub_4C2D50
{
    __DEBUG_ASM(4C2D50);
    // chunk 0x4C2D50 _sub_4C2D50
    asm("loc_4C2D50: push %ebp;");
    asm("loc_4C2D51: mov %esp,%ebp;");
    asm("loc_4C2D53: and $0xFFFFFFF8,%esp;");
    asm("loc_4C2D56: sub $0x54,%esp;");
    asm("loc_4C2D59: mov 8(%ebp),%eax;");
    asm("loc_4C2D5C: cmp $0x2D,%eax;");
    asm("loc_4C2D5F: push %ebx;");
    asm("loc_4C2D60: push %esi;");
    asm("loc_4C2D61: push %edi;");
    asm("loc_4C2D62: mov %ecx,%esi;");
    asm("loc_4C2D64: ja loc_4C36AB;");
    asm("loc_4C2D6A: je loc_4C35BB;");
    asm("loc_4C2D70: cmp $0x26,%eax;");
    asm("loc_4C2D73: je loc_4C2E3F;");
    asm("loc_4C2D79: cmp $0x2C,%eax;");
    asm("loc_4C2D7C: jne loc_4C3791;");
    asm("loc_4C2D82: mov 0xC(%ebp),%ecx;");
    asm("loc_4C2D85: mov 0x2F0(%ecx),%eax;");
    asm("loc_4C2D8B: test %eax,%eax;");
    asm("loc_4C2D8D: je loc_4C3791;");
    asm("loc_4C2D93: cmp 0x10(%eax),%ecx;");
    asm("loc_4C2D96: je loc_4C3791;");
    asm("loc_4C2D9C: mov 0x330(%ecx),%cl;");
    asm("loc_4C2DA2: mov 8(%eax),%esi;");
    asm("loc_4C2DA5: mov 0x330(%esi),%dl;");
    asm("loc_4C2DAB: shr $2,%cl;");
    asm("loc_4C2DAE: and $1,%cl;");
    asm("loc_4C2DB1: shl $2,%cl;");
    asm("loc_4C2DB4: mov %dl,%bl;");
    asm("loc_4C2DB6: xor %cl,%bl;");
    asm("loc_4C2DB8: and $4,%bl;");
    asm("loc_4C2DBB: xor %dl,%bl;");
    asm("loc_4C2DBD: mov %bl,0x330(%esi);");
    asm("loc_4C2DC3: mov 0xC(%eax),%esi;");
    asm("loc_4C2DC6: mov 0x330(%esi),%dl;");
    asm("loc_4C2DCC: mov %dl,%bl;");
    asm("loc_4C2DCE: xor %cl,%bl;");
    asm("loc_4C2DD0: and $4,%bl;");
    asm("loc_4C2DD3: xor %dl,%bl;");
    asm("loc_4C2DD5: mov %bl,0x330(%esi);");
    asm("loc_4C2DDB: mov 8(%eax),%ecx;");
    asm("loc_4C2DDE: mov 0x330(%ecx),%bl;");
    asm("loc_4C2DE4: mov $1,%edx;");
    asm("loc_4C2DE9: or %dl,%bl;");
    asm("loc_4C2DEB: mov %bl,0x330(%ecx);");
    asm("loc_4C2DF1: mov 0xC(%eax),%ecx;");
    asm("loc_4C2DF4: or %dl,0x330(%ecx);");
    asm("loc_4C2DFA: mov 8(%eax),%ecx;");
    asm("loc_4C2DFD: testb $0x40,0x330(%ecx);");
    asm("loc_4C2E04: je loc_4C2E0B;");
    asm("loc_4C2E06: mov $2,%edx;");
    asm("loc_4C2E0B: mov %edx,0x70(%ecx);");
    asm("loc_4C2E0E: mov 0x14(%eax),%ecx;");
    asm("loc_4C2E11: mov %edx,0x70(%ecx);");
    asm("loc_4C2E14: mov 0xC(%eax),%ecx;");
    asm("loc_4C2E17: mov %edx,0x70(%ecx);");
    asm("loc_4C2E1A: mov 0x20(%eax),%ecx;");
    asm("loc_4C2E1D: mov %edx,0x70(%ecx);");
    asm("loc_4C2E20: mov 0x1C(%eax),%ecx;");
    asm("loc_4C2E23: mov %edx,0x70(%ecx);");
    asm("loc_4C2E26: mov 0x10(%eax),%eax;");
    asm("loc_4C2E29: test %eax,%eax;");
    asm("loc_4C2E2B: je loc_4C3791;");
    asm("loc_4C2E31: mov %edx,0x70(%eax);");
    asm("loc_4C2E34: xor %eax,%eax;");
    asm("loc_4C2E36: pop %edi;");
    asm("loc_4C2E37: pop %esi;");
    asm("loc_4C2E38: pop %ebx;");
    asm("loc_4C2E39: mov %ebp,%esp;");
    asm("loc_4C2E3B: pop %ebp;");
    asm("loc_4C2E3C: ret $0xC;");
    asm("loc_4C2E3F: mov 0xC(%ebp),%ecx;");
    asm("loc_4C2E42: cmp 0x340(%esi),%ecx;");
    asm("loc_4C2E48: jne loc_4C2E81;");
    asm("loc_4C2E4A: mov _data_67ECD0,%ecx;");
    asm("loc_4C2E50: mov _data_673344,%eax;");
    asm("loc_4C2E55: mov (%ecx),%edx;");
    asm("loc_4C2E57: push $0;");
    asm("loc_4C2E59: push %eax;");
    asm("loc_4C2E5A: calll *0x140(%edx);");
    asm("loc_4C2E60: mov 0x340(%esi),%esi;");
    asm("loc_4C2E66: mov (%esi),%edx;");
    asm("loc_4C2E68: push $0;");
    asm("loc_4C2E6A: push $1;");
    asm("loc_4C2E6C: push $2;");
    asm("loc_4C2E6E: mov %esi,%ecx;");
    asm("loc_4C2E70: calll *0xA8(%edx);");
    asm("loc_4C2E76: xor %eax,%eax;");
    asm("loc_4C2E78: pop %edi;");
    asm("loc_4C2E79: pop %esi;");
    asm("loc_4C2E7A: pop %ebx;");
    asm("loc_4C2E7B: mov %ebp,%esp;");
    asm("loc_4C2E7D: pop %ebp;");
    asm("loc_4C2E7E: ret $0xC;");
    asm("loc_4C2E81: cmp 0x36C(%esi),%ecx;");
    asm("loc_4C2E87: jne loc_4C2EC8;");
    asm("loc_4C2E89: mov 0x338(%esi),%eax;");
    asm("loc_4C2E8F: push $0;");
    asm("loc_4C2E91: push %eax;");
    asm("loc_4C2E92: mov %esi,%ecx;");
    asm("loc_4C2E94: call _sub_4C2800;");
    asm("loc_4C2E99: mov 0x338(%esi),%eax;");
    asm("loc_4C2E9F: mov 0x58(%eax),%ecx;");
    asm("loc_4C2EA2: test %ecx,%ecx;");
    asm("loc_4C2EA4: je loc_4C2EB0;");
    asm("loc_4C2EA6: movb $0,(%ecx);");
    asm("loc_4C2EA9: movl $0,0x58(%eax);");
    asm("loc_4C2EB0: mov 0x338(%esi),%ecx;");
    asm("loc_4C2EB6: push $0xFFFFFFFF;");
    asm("loc_4C2EB8: call _sub_4BF850;");
    asm("loc_4C2EBD: xor %eax,%eax;");
    asm("loc_4C2EBF: pop %edi;");
    asm("loc_4C2EC0: pop %esi;");
    asm("loc_4C2EC1: pop %ebx;");
    asm("loc_4C2EC2: mov %ebp,%esp;");
    asm("loc_4C2EC4: pop %ebp;");
    asm("loc_4C2EC5: ret $0xC;");
    asm("loc_4C2EC8: cmp 0x380(%esi),%ecx;");
    asm("loc_4C2ECE: jne loc_4C2F0F;");
    asm("loc_4C2ED0: mov 0x330(%esi),%ecx;");
    asm("loc_4C2ED6: push $0;");
    asm("loc_4C2ED8: push %ecx;");
    asm("loc_4C2ED9: mov %esi,%ecx;");
    asm("loc_4C2EDB: call _sub_4C2800;");
    asm("loc_4C2EE0: mov 0x330(%esi),%eax;");
    asm("loc_4C2EE6: mov 0x58(%eax),%ecx;");
    asm("loc_4C2EE9: test %ecx,%ecx;");
    asm("loc_4C2EEB: je loc_4C2EF7;");
    asm("loc_4C2EED: movb $0,(%ecx);");
    asm("loc_4C2EF0: movl $0,0x58(%eax);");
    asm("loc_4C2EF7: mov 0x330(%esi),%ecx;");
    asm("loc_4C2EFD: push $0xFFFFFFFF;");
    asm("loc_4C2EFF: call _sub_4BF850;");
    asm("loc_4C2F04: xor %eax,%eax;");
    asm("loc_4C2F06: pop %edi;");
    asm("loc_4C2F07: pop %esi;");
    asm("loc_4C2F08: pop %ebx;");
    asm("loc_4C2F09: mov %ebp,%esp;");
    asm("loc_4C2F0B: pop %ebp;");
    asm("loc_4C2F0C: ret $0xC;");
    asm("loc_4C2F0F: cmp 0x354(%esi),%ecx;");
    asm("loc_4C2F15: jne loc_4C3456;");
    asm("loc_4C2F1B: mov 0x428(%esi),%edi;");
    asm("loc_4C2F21: mov 4(%edi),%eax;");
    asm("loc_4C2F24: test %eax,%eax;");
    asm("loc_4C2F26: jne loc_4C300D;");
    asm("loc_4C2F2C: mov 0x424(%esi),%edx;");
    asm("loc_4C2F32: mov 4(%edx),%eax;");
    asm("loc_4C2F35: mov 0x334(%esi),%ecx;");
    asm("loc_4C2F3B: cmp %ecx,%eax;");
    asm("loc_4C2F3D: mov 0x34C(%esi),%eax;");
    asm("loc_4C2F43: mov 0x664(%eax),%edx;");
    asm("loc_4C2F49: jne loc_4C2FA0;");
    asm("loc_4C2F4B: mov 0x14(%edi),%eax;");
    asm("loc_4C2F4E: cmp %eax,%edx;");
    asm("loc_4C2F50: jge loc_4C3443;");
    asm("loc_4C2F56: sub %edx,%eax;");
    asm("loc_4C2F58: mov %eax,%ebx;");
    asm("loc_4C2F5A: mov 0x4C(%ecx),%eax;");
    asm("loc_4C2F5D: sub %ebx,%eax;");
    asm("loc_4C2F5F: push %eax;");
    asm("loc_4C2F60: call _sub_4BF620;");
    asm("loc_4C2F65: test %eax,%eax;");
    asm("loc_4C2F67: jne loc_4C2F6B;");
    asm("loc_4C2F69: xor %edi,%edi;");
    asm("loc_4C2F6B: mov 0x338(%esi),%ecx;");
    asm("loc_4C2F71: mov 0x4C(%ecx),%edx;");
    asm("loc_4C2F74: add %ebx,%edx;");
    asm("loc_4C2F76: push %edx;");
    asm("loc_4C2F77: call _sub_4BF620;");
    asm("loc_4C2F7C: mov 0x334(%esi),%edx;");
    asm("loc_4C2F82: mov 0x4C(%edx),%edx;");
    asm("loc_4C2F85: mov _data_67ECD0,%ecx;");
    asm("loc_4C2F8B: mov (%ecx),%eax;");
    asm("loc_4C2F8D: push %edx;");
    asm("loc_4C2F8E: mov _data_673344,%edx;");
    asm("loc_4C2F94: push %edx;");
    asm("loc_4C2F95: calll *0x148(%eax);");
    asm("loc_4C2F9B: jmp loc_4C3443;");
    asm("loc_4C2FA0: test %edx,%edx;");
    asm("loc_4C2FA2: je loc_4C3443;");
    asm("loc_4C2FA8: mov 0x4C(%ecx),%ecx;");
    asm("loc_4C2FAB: mov _data_67ECD0,%eax;");
    asm("loc_4C2FB0: mov (%eax),%ebx;");
    asm("loc_4C2FB2: add %edx,%ecx;");
    asm("loc_4C2FB4: mov _data_673344,%edx;");
    asm("loc_4C2FBA: push %ecx;");
    asm("loc_4C2FBB: push %edx;");
    asm("loc_4C2FBC: mov %eax,%ecx;");
    asm("loc_4C2FBE: calll *0x148(%ebx);");
    asm("loc_4C2FC4: mov 0x334(%esi),%ecx;");
    asm("loc_4C2FCA: mov 0x34C(%esi),%eax;");
    asm("loc_4C2FD0: mov 0x4C(%ecx),%edx;");
    asm("loc_4C2FD3: add 0x664(%eax),%edx;");
    asm("loc_4C2FD9: push %edx;");
    asm("loc_4C2FDA: call _sub_4BF620;");
    asm("loc_4C2FDF: mov 0x34C(%esi),%eax;");
    asm("loc_4C2FE5: mov 0x664(%eax),%eax;");
    asm("loc_4C2FEB: mov 0x338(%esi),%ecx;");
    asm("loc_4C2FF1: mov 0x4C(%ecx),%edx;");
    asm("loc_4C2FF4: neg %eax;");
    asm("loc_4C2FF6: add %eax,%edx;");
    asm("loc_4C2FF8: push %edx;");
    asm("loc_4C2FF9: call _sub_4BF620;");
    asm("loc_4C2FFE: test %eax,%eax;");
    asm("loc_4C3000: jne loc_4C3443;");
    asm("loc_4C3006: xor %edi,%edi;");
    asm("loc_4C3008: jmp loc_4C3443;");
    asm("loc_4C300D: mov 0x424(%esi),%ecx;");
    asm("loc_4C3013: mov 4(%ecx),%edx;");
    asm("loc_4C3016: cmp 0x334(%esi),%edx;");
    asm("loc_4C301C: jne loc_4C3211;");
    asm("loc_4C3022: mov 0x34C(%esi),%ecx;");
    asm("loc_4C3028: mov 0x664(%ecx),%eax;");
    asm("loc_4C302E: cmp 0x14(%edi),%eax;");
    asm("loc_4C3031: jge loc_4C3443;");
    asm("loc_4C3037: mov (%edi),%dl;");
    asm("loc_4C3039: mov %dl,0x40(%esp);");
    asm("loc_4C303D: mov 2(%edi),%ax;");
    asm("loc_4C3041: mov %ax,0x42(%esp);");
    asm("loc_4C3046: mov 4(%edi),%edx;");
    asm("loc_4C3049: mov %edx,0x44(%esp);");
    asm("loc_4C304D: mov 8(%edi),%eax;");
    asm("loc_4C3050: mov %eax,0x48(%esp);");
    asm("loc_4C3054: mov 0xC(%edi),%al;");
    asm("loc_4C3057: mov %al,0x4C(%esp);");
    asm("loc_4C305B: mov 0x10(%edi),%eax;");
    asm("loc_4C305E: mov %eax,0x50(%esp);");
    asm("loc_4C3062: mov 0x14(%edi),%eax;");
    asm("loc_4C3065: mov %eax,0x54(%esp);");
    asm("loc_4C3069: mov 0x18(%edi),%bl;");
    asm("loc_4C306C: mov %bl,0x58(%esp);");
    asm("loc_4C3070: mov 0x1C(%edi),%ebx;");
    asm("loc_4C3073: mov %ebx,0x5C(%esp);");
    asm("loc_4C3077: mov 0x664(%ecx),%ecx;");
    asm("loc_4C307D: mov _data_674A88,%ebx;");
    asm("loc_4C3083: sub %ecx,%eax;");
    asm("loc_4C3085: cmp %ebx,%edx;");
    asm("loc_4C3087: jne loc_4C3091;");
    asm("loc_4C3089: mov %ecx,0x40C(%esi);");
    asm("loc_4C308F: jmp loc_4C309F;");
    asm("loc_4C3091: cmp _data_674A8C,%edx;");
    asm("loc_4C3097: jne loc_4C309F;");
    asm("loc_4C3099: mov %ecx,0x408(%esi);");
    asm("loc_4C309F: test %eax,%eax;");
    asm("loc_4C30A1: jle loc_4C3443;");
    asm("loc_4C30A7: push %eax;");
    asm("loc_4C30A8: lea 0x44(%esp),%ecx;");
    asm("loc_4C30AC: calll *_import_5C6428;");
    asm("loc_4C30B2: mov _data_67ECD0,%ecx;");
    asm("loc_4C30B8: mov (%ecx),%edx;");
    asm("loc_4C30BA: lea 0x40(%esp),%eax;");
    asm("loc_4C30BE: push %eax;");
    asm("loc_4C30BF: mov _data_673344,%eax;");
    asm("loc_4C30C4: push %eax;");
    asm("loc_4C30C5: calll *0x150(%edx);");
    asm("loc_4C30CB: mov 0x334(%esi),%ebx;");
    asm("loc_4C30D1: mov 0x42(%esp),%ecx;");
    asm("loc_4C30D5: lea 0x20(%ebx),%edi;");
    asm("loc_4C30D8: push %ecx;");
    asm("loc_4C30D9: mov %edi,%ecx;");
    asm("loc_4C30DB: calll *_import_5C6370;");
    asm("loc_4C30E1: mov 0x54(%esp),%edx;");
    asm("loc_4C30E5: mov %eax,0x10(%esp);");
    asm("loc_4C30E9: mov 0x42(%esp),%eax;");
    asm("loc_4C30ED: push %edx;");
    asm("loc_4C30EE: push %eax;");
    asm("loc_4C30EF: mov %edi,%ecx;");
    asm("loc_4C30F1: calll *_import_5C6438;");
    asm("loc_4C30F7: mov %edi,%ecx;");
    asm("loc_4C30F9: calll *_import_5C6430;");
    asm("loc_4C30FF: fstpl 0x60(%ebx);");
    asm("loc_4C3102: mov 0x42(%esp),%ecx;");
    asm("loc_4C3106: push %ecx;");
    asm("loc_4C3107: mov %edi,%ecx;");
    asm("loc_4C3109: calll *_import_5C6370;");
    asm("loc_4C310F: mov 0x30(%ebx),%ecx;");
    asm("loc_4C3112: mov %eax,%edi;");
    asm("loc_4C3114: mov 0x28(%ebx),%eax;");
    asm("loc_4C3117: sub %ecx,%eax;");
    asm("loc_4C3119: jns loc_4C311D;");
    asm("loc_4C311B: xor %eax,%eax;");
    asm("loc_4C311D: mov 8(%ebx),%ecx;");
    asm("loc_4C3120: mov (%ecx),%edx;");
    asm("loc_4C3122: push %eax;");
    asm("loc_4C3123: push $0;");
    asm("loc_4C3125: push $0x37;");
    asm("loc_4C3127: calll *0xA8(%edx);");
    asm("loc_4C312D: push $0xFFFFFFFF;");
    asm("loc_4C312F: mov %ebx,%ecx;");
    asm("loc_4C3131: call _sub_4BF850;");
    asm("loc_4C3136: mov 0x10(%esp),%ecx;");
    asm("loc_4C313A: mov 0x338(%esi),%eax;");
    asm("loc_4C3140: neg %edi;");
    asm("loc_4C3142: sbb %edi,%edi;");
    asm("loc_4C3144: and %ecx,%edi;");
    asm("loc_4C3146: lea 0x40(%esp),%ecx;");
    asm("loc_4C314A: push %ecx;");
    asm("loc_4C314B: lea 0x24(%esp),%ecx;");
    asm("loc_4C314F: mov %eax,0x14(%esp);");
    asm("loc_4C3153: calll *_import_5C6450;");
    asm("loc_4C3159: mov 0x24(%esp),%edx;");
    asm("loc_4C315D: push %edx;");
    asm("loc_4C315E: movb $0,0x24(%esp);");
    asm("loc_4C3163: calll *_import_5C63A0;");
    asm("loc_4C3169: mov 0x14(%esp),%ebx;");
    asm("loc_4C316D: add $4,%esp;");
    asm("loc_4C3170: lea 0x20(%ebx),%ecx;");
    asm("loc_4C3173: push %eax;");
    asm("loc_4C3174: lea 0x24(%esp),%eax;");
    asm("loc_4C3178: push %eax;");
    asm("loc_4C3179: calll *_import_5C6434;");
    asm("loc_4C317F: lea 0x20(%ebx),%ecx;");
    asm("loc_4C3182: calll *_import_5C6430;");
    asm("loc_4C3188: fstpl 0x60(%ebx);");
    asm("loc_4C318B: mov 0x28(%ebx),%eax;");
    asm("loc_4C318E: sub 0x30(%ebx),%eax;");
    asm("loc_4C3191: jns loc_4C3195;");
    asm("loc_4C3193: xor %eax,%eax;");
    asm("loc_4C3195: mov 8(%ebx),%ecx;");
    asm("loc_4C3198: mov (%ecx),%edx;");
    asm("loc_4C319A: push %eax;");
    asm("loc_4C319B: push $0;");
    asm("loc_4C319D: push $0x37;");
    asm("loc_4C319F: calll *0xA8(%edx);");
    asm("loc_4C31A5: push $0xFFFFFFFF;");
    asm("loc_4C31A7: mov %ebx,%ecx;");
    asm("loc_4C31A9: call _sub_4BF850;");
    asm("loc_4C31AE: mov 0x42C(%esi),%eax;");
    asm("loc_4C31B4: push $1;");
    asm("loc_4C31B6: push %eax;");
    asm("loc_4C31B7: call _sub_5416C0;");
    asm("loc_4C31BC: add $8,%esp;");
    asm("loc_4C31BF: test %eax,%eax;");
    asm("loc_4C31C1: je loc_4C3408;");
    asm("loc_4C31C7: mov %eax,%ecx;");
    asm("loc_4C31C9: call _sub_543320;");
    asm("loc_4C31CE: mov 0x330(%esi),%ecx;");
    asm("loc_4C31D4: mov 0x60(%ecx),%edx;");
    asm("loc_4C31D7: mov 0x64(%ecx),%ecx;");
    asm("loc_4C31DA: mov %edx,0x10(%esp);");
    asm("loc_4C31DE: mov 0x334(%esi),%edx;");
    asm("loc_4C31E4: mov %ecx,0x14(%esp);");
    asm("loc_4C31E8: mov 0x60(%edx),%ecx;");
    asm("loc_4C31EB: mov 0x64(%edx),%edx;");
    asm("loc_4C31EE: mov %ecx,0x18(%esp);");
    asm("loc_4C31F2: mov %eax,%ecx;");
    asm("loc_4C31F4: mov %edx,0x1C(%esp);");
    asm("loc_4C31F8: calll *_import_5C6440;");
    asm("loc_4C31FE: fsubrl 0x3F0(%esi);");
    asm("loc_4C3204: fsubl 0x10(%esp);");
    asm("loc_4C3208: faddl 0x18(%esp);");
    asm("loc_4C320C: jmp loc_4C3402;");
    asm("loc_4C3211: mov 0x34C(%esi),%eax;");
    asm("loc_4C3217: mov 0x664(%eax),%ecx;");
    asm("loc_4C321D: test %ecx,%ecx;");
    asm("loc_4C321F: je loc_4C3443;");
    asm("loc_4C3225: mov (%edi),%cl;");
    asm("loc_4C3227: mov %cl,0x20(%esp);");
    asm("loc_4C322B: mov 2(%edi),%dx;");
    asm("loc_4C322F: mov %dx,0x22(%esp);");
    asm("loc_4C3234: mov 4(%edi),%ecx;");
    asm("loc_4C3237: mov %ecx,0x24(%esp);");
    asm("loc_4C323B: mov 8(%edi),%edx;");
    asm("loc_4C323E: mov %edx,0x28(%esp);");
    asm("loc_4C3242: mov 0xC(%edi),%cl;");
    asm("loc_4C3245: mov %cl,0x2C(%esp);");
    asm("loc_4C3249: mov 0x10(%edi),%edx;");
    asm("loc_4C324C: mov %edx,0x30(%esp);");
    asm("loc_4C3250: mov 0x14(%edi),%ecx;");
    asm("loc_4C3253: mov %ecx,0x34(%esp);");
    asm("loc_4C3257: mov 0x18(%edi),%dl;");
    asm("loc_4C325A: mov %dl,0x38(%esp);");
    asm("loc_4C325E: mov 0x1C(%edi),%ecx;");
    asm("loc_4C3261: mov %ecx,0x3C(%esp);");
    asm("loc_4C3265: mov 0x664(%eax),%edx;");
    asm("loc_4C326B: push %edx;");
    asm("loc_4C326C: lea 0x24(%esp),%ecx;");
    asm("loc_4C3270: calll *_import_5C6428;");
    asm("loc_4C3276: mov _data_67ECD0,%ecx;");
    asm("loc_4C327C: mov (%ecx),%eax;");
    asm("loc_4C327E: lea 0x20(%esp),%edx;");
    asm("loc_4C3282: push %edx;");
    asm("loc_4C3283: mov _data_673344,%edx;");
    asm("loc_4C3289: push %edx;");
    asm("loc_4C328A: calll *0x14C(%eax);");
    asm("loc_4C3290: mov 0x24(%esp),%eax;");
    asm("loc_4C3294: cmp _data_674A88,%eax;");
    asm("loc_4C329A: jne loc_4C32B0;");
    asm("loc_4C329C: mov 0x34C(%esi),%eax;");
    asm("loc_4C32A2: mov 0x664(%eax),%ecx;");
    asm("loc_4C32A8: add %ecx,0x40C(%esi);");
    asm("loc_4C32AE: jmp loc_4C32CA;");
    asm("loc_4C32B0: cmp _data_674A8C,%eax;");
    asm("loc_4C32B6: jne loc_4C32CA;");
    asm("loc_4C32B8: mov 0x34C(%esi),%edx;");
    asm("loc_4C32BE: mov 0x664(%edx),%eax;");
    asm("loc_4C32C4: add %eax,0x408(%esi);");
    asm("loc_4C32CA: mov 0x334(%esi),%edi;");
    asm("loc_4C32D0: lea 0x20(%esp),%ecx;");
    asm("loc_4C32D4: push %ecx;");
    asm("loc_4C32D5: lea 0x44(%esp),%ecx;");
    asm("loc_4C32D9: calll *_import_5C6450;");
    asm("loc_4C32DF: mov 0x44(%esp),%edx;");
    asm("loc_4C32E3: push %edx;");
    asm("loc_4C32E4: movb $0,0x44(%esp);");
    asm("loc_4C32E9: calll *_import_5C63A0;");
    asm("loc_4C32EF: add $4,%esp;");
    asm("loc_4C32F2: lea 0x20(%edi),%ebx;");
    asm("loc_4C32F5: mov %ebx,%ecx;");
    asm("loc_4C32F7: push %eax;");
    asm("loc_4C32F8: lea 0x44(%esp),%eax;");
    asm("loc_4C32FC: push %eax;");
    asm("loc_4C32FD: calll *_import_5C6434;");
    asm("loc_4C3303: mov %ebx,%ecx;");
    asm("loc_4C3305: calll *_import_5C6430;");
    asm("loc_4C330B: fstpl 0x60(%edi);");
    asm("loc_4C330E: mov 0x28(%edi),%eax;");
    asm("loc_4C3311: sub 0x30(%edi),%eax;");
    asm("loc_4C3314: jns loc_4C3318;");
    asm("loc_4C3316: xor %eax,%eax;");
    asm("loc_4C3318: mov 8(%edi),%ecx;");
    asm("loc_4C331B: mov (%ecx),%edx;");
    asm("loc_4C331D: push %eax;");
    asm("loc_4C331E: push $0;");
    asm("loc_4C3320: push $0x37;");
    asm("loc_4C3322: calll *0xA8(%edx);");
    asm("loc_4C3328: push $0xFFFFFFFF;");
    asm("loc_4C332A: mov %edi,%ecx;");
    asm("loc_4C332C: call _sub_4BF850;");
    asm("loc_4C3331: mov 0x338(%esi),%edi;");
    asm("loc_4C3337: mov 0x22(%esp),%eax;");
    asm("loc_4C333B: lea 0x20(%edi),%ebx;");
    asm("loc_4C333E: push %eax;");
    asm("loc_4C333F: mov %ebx,%ecx;");
    asm("loc_4C3341: calll *_import_5C6370;");
    asm("loc_4C3347: mov 0x34(%esp),%ecx;");
    asm("loc_4C334B: mov 0x22(%esp),%edx;");
    asm("loc_4C334F: push %ecx;");
    asm("loc_4C3350: push %edx;");
    asm("loc_4C3351: mov %ebx,%ecx;");
    asm("loc_4C3353: mov %eax,0x18(%esp);");
    asm("loc_4C3357: calll *_import_5C6438;");
    asm("loc_4C335D: mov %ebx,%ecx;");
    asm("loc_4C335F: calll *_import_5C6430;");
    asm("loc_4C3365: fstpl 0x60(%edi);");
    asm("loc_4C3368: mov 0x22(%esp),%eax;");
    asm("loc_4C336C: push %eax;");
    asm("loc_4C336D: mov %ebx,%ecx;");
    asm("loc_4C336F: calll *_import_5C6370;");
    asm("loc_4C3375: mov 0x30(%edi),%ecx;");
    asm("loc_4C3378: mov %eax,%ebx;");
    asm("loc_4C337A: mov 0x28(%edi),%eax;");
    asm("loc_4C337D: sub %ecx,%eax;");
    asm("loc_4C337F: jns loc_4C3383;");
    asm("loc_4C3381: xor %eax,%eax;");
    asm("loc_4C3383: mov 8(%edi),%ecx;");
    asm("loc_4C3386: mov (%ecx),%edx;");
    asm("loc_4C3388: push %eax;");
    asm("loc_4C3389: push $0;");
    asm("loc_4C338B: push $0x37;");
    asm("loc_4C338D: calll *0xA8(%edx);");
    asm("loc_4C3393: push $0xFFFFFFFF;");
    asm("loc_4C3395: mov %edi,%ecx;");
    asm("loc_4C3397: call _sub_4BF850;");
    asm("loc_4C339C: mov 0x10(%esp),%ecx;");
    asm("loc_4C33A0: mov 0x42C(%esi),%eax;");
    asm("loc_4C33A6: neg %ebx;");
    asm("loc_4C33A8: sbb %ebx,%ebx;");
    asm("loc_4C33AA: and %ecx,%ebx;");
    asm("loc_4C33AC: push $1;");
    asm("loc_4C33AE: push %eax;");
    asm("loc_4C33AF: mov %ebx,%edi;");
    asm("loc_4C33B1: call _sub_5416C0;");
    asm("loc_4C33B6: add $8,%esp;");
    asm("loc_4C33B9: test %eax,%eax;");
    asm("loc_4C33BB: je loc_4C3408;");
    asm("loc_4C33BD: mov %eax,%ecx;");
    asm("loc_4C33BF: call _sub_543320;");
    asm("loc_4C33C4: mov 0x330(%esi),%ecx;");
    asm("loc_4C33CA: mov 0x60(%ecx),%edx;");
    asm("loc_4C33CD: mov 0x64(%ecx),%ecx;");
    asm("loc_4C33D0: mov %edx,0x18(%esp);");
    asm("loc_4C33D4: mov 0x334(%esi),%edx;");
    asm("loc_4C33DA: mov %ecx,0x1C(%esp);");
    asm("loc_4C33DE: mov 0x60(%edx),%ecx;");
    asm("loc_4C33E1: mov 0x64(%edx),%edx;");
    asm("loc_4C33E4: mov %ecx,0x10(%esp);");
    asm("loc_4C33E8: mov %eax,%ecx;");
    asm("loc_4C33EA: mov %edx,0x14(%esp);");
    asm("loc_4C33EE: calll *_import_5C6440;");
    asm("loc_4C33F4: fsubrl 0x3F0(%esi);");
    asm("loc_4C33FA: fsubl 0x18(%esp);");
    asm("loc_4C33FE: faddl 0x10(%esp);");
    asm("loc_4C3402: fstpl 0x3E8(%esi);");
    asm("loc_4C3408: mov 0x334(%esi),%eax;");
    asm("loc_4C340E: mov 0x60(%eax),%ecx;");
    asm("loc_4C3411: mov 0x64(%eax),%edx;");
    asm("loc_4C3414: mov 0x330(%esi),%eax;");
    asm("loc_4C341A: mov %ecx,0x18(%esp);");
    asm("loc_4C341E: mov 0x60(%eax),%ecx;");
    asm("loc_4C3421: mov %edx,0x1C(%esp);");
    asm("loc_4C3425: mov 0x64(%eax),%edx;");
    asm("loc_4C3428: mov %ecx,0x10(%esp);");
    asm("loc_4C342C: mov %edx,0x14(%esp);");
    asm("loc_4C3430: call _sub_4C4640;");
    asm("loc_4C3435: fsubl 0x18(%esp);");
    asm("loc_4C3439: faddl 0x10(%esp);");
    asm("loc_4C343D: fstpl 0x3C0(%esi);");
    asm("loc_4C3443: mov 0x424(%esi),%eax;");
    asm("loc_4C3449: mov 4(%eax),%ecx;");
    asm("loc_4C344C: xor %eax,%eax;");
    asm("loc_4C344E: cmp %eax,%edi;");
    asm("loc_4C3450: je loc_4C3471;");
    asm("loc_4C3452: mov %al,(%edi);");
    asm("loc_4C3454: jmp loc_4C3471;");
    asm("loc_4C3456: cmp 0x358(%esi),%ecx;");
    asm("loc_4C345C: jne loc_4C3498;");
    asm("loc_4C345E: mov 0x424(%esi),%ecx;");
    asm("loc_4C3464: mov 0x428(%esi),%edx;");
    asm("loc_4C346A: mov 4(%ecx),%ecx;");
    asm("loc_4C346D: xor %eax,%eax;");
    asm("loc_4C346F: mov %al,(%edx);");
    asm("loc_4C3471: push $0xFFFFFFFF;");
    asm("loc_4C3473: mov %eax,0x424(%esi);");
    asm("loc_4C3479: mov %eax,0x428(%esi);");
    asm("loc_4C347F: call _sub_4BF850;");
    asm("loc_4C3484: push $2;");
    asm("loc_4C3486: mov %esi,%ecx;");
    asm("loc_4C3488: call _sub_4C1AE0;");
    asm("loc_4C348D: xor %eax,%eax;");
    asm("loc_4C348F: pop %edi;");
    asm("loc_4C3490: pop %esi;");
    asm("loc_4C3491: pop %ebx;");
    asm("loc_4C3492: mov %ebp,%esp;");
    asm("loc_4C3494: pop %ebp;");
    asm("loc_4C3495: ret $0xC;");
    asm("loc_4C3498: cmp 0x41C(%esi),%ecx;");
    asm("loc_4C349E: jne loc_4C3500;");
    asm("loc_4C34A0: mov 0x410(%esi),%ecx;");
    asm("loc_4C34A6: mov (%ecx),%eax;");
    asm("loc_4C34A8: push $0;");
    asm("loc_4C34AA: push $0x759;");
    asm("loc_4C34AF: push $0x1E;");
    asm("loc_4C34B1: calll *0xA8(%eax);");
    asm("loc_4C34B7: push $0xC0;");
    asm("loc_4C34BC: push $0;");
    asm("loc_4C34BE: push $0xFF;");
    asm("loc_4C34C3: push $0;");
    asm("loc_4C34C5: lea 0x20(%esp),%ecx;");
    asm("loc_4C34C9: call _sub_4A1AD0;");
    asm("loc_4C34CE: mov 0x410(%esi),%ecx;");
    asm("loc_4C34D4: mov 0x10(%esp),%edx;");
    asm("loc_4C34D8: mov %edx,0x348(%ecx);");
    asm("loc_4C34DE: mov _data_67ECD0,%ecx;");
    asm("loc_4C34E4: mov _data_673344,%edx;");
    asm("loc_4C34EA: mov (%ecx),%eax;");
    asm("loc_4C34EC: push $1;");
    asm("loc_4C34EE: push %edx;");
    asm("loc_4C34EF: calll *0x144(%eax);");
    asm("loc_4C34F5: xor %eax,%eax;");
    asm("loc_4C34F7: pop %edi;");
    asm("loc_4C34F8: pop %esi;");
    asm("loc_4C34F9: pop %ebx;");
    asm("loc_4C34FA: mov %ebp,%esp;");
    asm("loc_4C34FC: pop %ebp;");
    asm("loc_4C34FD: ret $0xC;");
    asm("loc_4C3500: mov 0x2F0(%ecx),%eax;");
    asm("loc_4C3506: xor %edx,%edx;");
    asm("loc_4C3508: cmp %edx,%eax;");
    asm("loc_4C350A: je loc_4C3791;");
    asm("loc_4C3510: cmp %dl,0x28(%eax);");
    asm("loc_4C3513: je loc_4C3791;");
    asm("loc_4C3519: cmp 0x10(%eax),%ecx;");
    asm("loc_4C351C: mov 4(%eax),%edi;");
    asm("loc_4C351F: je loc_4C3540;");
    asm("loc_4C3521: cmp %edx,%edi;");
    asm("loc_4C3523: je loc_4C3791;");
    asm("loc_4C3529: mov 0x5D(%edi),%cl;");
    asm("loc_4C352C: cmp %dl,%cl;");
    asm("loc_4C352E: jne loc_4C3540;");
    asm("loc_4C3530: cmp 0x330(%esi),%edi;");
    asm("loc_4C3536: je loc_4C3791;");
    asm("loc_4C353C: cmp %dl,%cl;");
    asm("loc_4C353E: je loc_4C3577;");
    asm("loc_4C3540: mov 0x58(%edi),%ecx;");
    asm("loc_4C3543: cmp %edx,%ecx;");
    asm("loc_4C3545: mov 0x24(%eax),%eax;");
    asm("loc_4C3548: je loc_4C354F;");
    asm("loc_4C354A: mov %dl,(%ecx);");
    asm("loc_4C354C: mov %edx,0x58(%edi);");
    asm("loc_4C354F: cmp %edx,%eax;");
    asm("loc_4C3551: je loc_4C3559;");
    asm("loc_4C3553: mov %eax,0x58(%edi);");
    asm("loc_4C3556: movb $1,(%eax);");
    asm("loc_4C3559: push $1;");
    asm("loc_4C355B: push %edi;");
    asm("loc_4C355C: mov %esi,%ecx;");
    asm("loc_4C355E: call _sub_4C2800;");
    asm("loc_4C3563: mov %edi,%ecx;");
    asm("loc_4C3565: push $0xFFFFFFFF;");
    asm("loc_4C3567: call _sub_4BF850;");
    asm("loc_4C356C: xor %eax,%eax;");
    asm("loc_4C356E: pop %edi;");
    asm("loc_4C356F: pop %esi;");
    asm("loc_4C3570: pop %ebx;");
    asm("loc_4C3571: mov %ebp,%esp;");
    asm("loc_4C3573: pop %ebp;");
    asm("loc_4C3574: ret $0xC;");
    asm("loc_4C3577: mov 0x428(%esi),%ecx;");
    asm("loc_4C357D: cmp %ecx,0x24(%eax);");
    asm("loc_4C3580: je loc_4C3791;");
    asm("loc_4C3586: cmp %edx,%ecx;");
    asm("loc_4C3588: je loc_4C358C;");
    asm("loc_4C358A: mov %dl,(%ecx);");
    asm("loc_4C358C: mov %eax,0x424(%esi);");
    asm("loc_4C3592: mov 0x24(%eax),%eax;");
    asm("loc_4C3595: mov %eax,0x428(%esi);");
    asm("loc_4C359B: push $0xFFFFFFFF;");
    asm("loc_4C359D: mov %edi,%ecx;");
    asm("loc_4C359F: movb $1,(%eax);");
    asm("loc_4C35A2: call _sub_4BF850;");
    asm("loc_4C35A7: push $3;");
    asm("loc_4C35A9: mov %esi,%ecx;");
    asm("loc_4C35AB: call _sub_4C1AE0;");
    asm("loc_4C35B0: xor %eax,%eax;");
    asm("loc_4C35B2: pop %edi;");
    asm("loc_4C35B3: pop %esi;");
    asm("loc_4C35B4: pop %ebx;");
    asm("loc_4C35B5: mov %ebp,%esp;");
    asm("loc_4C35B7: pop %ebp;");
    asm("loc_4C35B8: ret $0xC;");
    asm("loc_4C35BB: mov 0xC(%ebp),%ecx;");
    asm("loc_4C35BE: mov 0x2F0(%ecx),%eax;");
    asm("loc_4C35C4: xor %edi,%edi;");
    asm("loc_4C35C6: cmp %edi,%eax;");
    asm("loc_4C35C8: je loc_4C3791;");
    asm("loc_4C35CE: cmp 0x10(%eax),%ecx;");
    asm("loc_4C35D1: je loc_4C3791;");
    asm("loc_4C35D7: mov 0x330(%ecx),%cl;");
    asm("loc_4C35DD: mov 8(%eax),%esi;");
    asm("loc_4C35E0: mov 0x330(%esi),%dl;");
    asm("loc_4C35E6: shr $2,%cl;");
    asm("loc_4C35E9: and $1,%cl;");
    asm("loc_4C35EC: shl $2,%cl;");
    asm("loc_4C35EF: mov %dl,%bl;");
    asm("loc_4C35F1: xor %cl,%bl;");
    asm("loc_4C35F3: and $4,%bl;");
    asm("loc_4C35F6: xor %dl,%bl;");
    asm("loc_4C35F8: mov %bl,0x330(%esi);");
    asm("loc_4C35FE: mov 0xC(%eax),%esi;");
    asm("loc_4C3601: mov 0x330(%esi),%dl;");
    asm("loc_4C3607: mov %dl,%bl;");
    asm("loc_4C3609: xor %cl,%bl;");
    asm("loc_4C360B: and $4,%bl;");
    asm("loc_4C360E: xor %dl,%bl;");
    asm("loc_4C3610: mov %bl,0x330(%esi);");
    asm("loc_4C3616: mov 8(%eax),%ecx;");
    asm("loc_4C3619: mov 0x330(%ecx),%bl;");
    asm("loc_4C361F: mov $0xFE,%dl;");
    asm("loc_4C3621: and %dl,%bl;");
    asm("loc_4C3623: mov %bl,0x330(%ecx);");
    asm("loc_4C3629: mov 0xC(%eax),%ecx;");
    asm("loc_4C362C: and %dl,0x330(%ecx);");
    asm("loc_4C3632: mov 8(%eax),%ecx;");
    asm("loc_4C3635: testb $0x40,0x330(%ecx);");
    asm("loc_4C363C: je loc_4C3677;");
    asm("loc_4C363E: mov $2,%edx;");
    asm("loc_4C3643: mov %edx,0x70(%ecx);");
    asm("loc_4C3646: mov 0x14(%eax),%ecx;");
    asm("loc_4C3649: mov %edx,0x70(%ecx);");
    asm("loc_4C364C: mov 0xC(%eax),%ecx;");
    asm("loc_4C364F: mov %edx,0x70(%ecx);");
    asm("loc_4C3652: mov 0x20(%eax),%ecx;");
    asm("loc_4C3655: mov %edx,0x70(%ecx);");
    asm("loc_4C3658: mov 0x1C(%eax),%ecx;");
    asm("loc_4C365B: mov %edx,0x70(%ecx);");
    asm("loc_4C365E: mov 0x10(%eax),%eax;");
    asm("loc_4C3661: cmp %edi,%eax;");
    asm("loc_4C3663: je loc_4C3791;");
    asm("loc_4C3669: mov %edx,0x70(%eax);");
    asm("loc_4C366C: xor %eax,%eax;");
    asm("loc_4C366E: pop %edi;");
    asm("loc_4C366F: pop %esi;");
    asm("loc_4C3670: pop %ebx;");
    asm("loc_4C3671: mov %ebp,%esp;");
    asm("loc_4C3673: pop %ebp;");
    asm("loc_4C3674: ret $0xC;");
    asm("loc_4C3677: mov %edi,0x70(%ecx);");
    asm("loc_4C367A: mov 0x14(%eax),%edx;");
    asm("loc_4C367D: mov %edi,0x70(%edx);");
    asm("loc_4C3680: mov 0xC(%eax),%ecx;");
    asm("loc_4C3683: mov %edi,0x70(%ecx);");
    asm("loc_4C3686: mov 0x20(%eax),%edx;");
    asm("loc_4C3689: mov %edi,0x70(%edx);");
    asm("loc_4C368C: mov 0x1C(%eax),%ecx;");
    asm("loc_4C368F: mov %edi,0x70(%ecx);");
    asm("loc_4C3692: mov 0x10(%eax),%eax;");
    asm("loc_4C3695: cmp %edi,%eax;");
    asm("loc_4C3697: je loc_4C3791;");
    asm("loc_4C369D: mov %edi,0x70(%eax);");
    asm("loc_4C36A0: xor %eax,%eax;");
    asm("loc_4C36A2: pop %edi;");
    asm("loc_4C36A3: pop %esi;");
    asm("loc_4C36A4: pop %ebx;");
    asm("loc_4C36A5: mov %ebp,%esp;");
    asm("loc_4C36A7: pop %ebp;");
    asm("loc_4C36A8: ret $0xC;");
    asm("loc_4C36AB: cmp $0x3E,%eax;");
    asm("loc_4C36AE: je loc_4C374C;");
    asm("loc_4C36B4: cmp $0xEF02,%eax;");
    asm("loc_4C36B9: jne loc_4C3791;");
    asm("loc_4C36BF: mov 0x435(%esi),%al;");
    asm("loc_4C36C5: test %al,%al;");
    asm("loc_4C36C7: je loc_4C36E2;");
    asm("loc_4C36C9: mov _data_674AA0,%ecx;");
    asm("loc_4C36CF: test %ecx,%ecx;");
    asm("loc_4C36D1: je loc_4C36E2;");
    asm("loc_4C36D3: mov 0x4D0(%ecx),%al;");
    asm("loc_4C36D9: test %al,%al;");
    asm("loc_4C36DB: jne loc_4C36E2;");
    asm("loc_4C36DD: mov (%ecx),%edx;");
    asm("loc_4C36DF: calll *0x30(%edx);");
    asm("loc_4C36E2: mov 0x434(%esi),%al;");
    asm("loc_4C36E8: test %al,%al;");
    asm("loc_4C36EA: je loc_4C3705;");
    asm("loc_4C36EC: mov _data_674B04,%ecx;");
    asm("loc_4C36F2: test %ecx,%ecx;");
    asm("loc_4C36F4: je loc_4C3705;");
    asm("loc_4C36F6: mov 0x4D0(%ecx),%al;");
    asm("loc_4C36FC: test %al,%al;");
    asm("loc_4C36FE: jne loc_4C3705;");
    asm("loc_4C3700: mov (%ecx),%eax;");
    asm("loc_4C3702: calll *0x30(%eax);");
    asm("loc_4C3705: push $0;");
    asm("loc_4C3707: call _sub_46B450;");
    asm("loc_4C370C: push $0;");
    asm("loc_4C370E: push %esi;");
    asm("loc_4C370F: call _sub_59DD00;");
    asm("loc_4C3714: mov 0xC(%esi),%eax;");
    asm("loc_4C3717: add $0xC,%esp;");
    asm("loc_4C371A: test %eax,%eax;");
    asm("loc_4C371C: je loc_4C3732;");
    asm("loc_4C371E: mov %edi,%edi;");
    asm("loc_4C3720: mov 8(%eax),%edi;");
    asm("loc_4C3723: push %eax;");
    asm("loc_4C3724: call _sub_43D2A0;");
    asm("loc_4C3729: add $4,%esp;");
    asm("loc_4C372C: test %edi,%edi;");
    asm("loc_4C372E: mov %edi,%eax;");
    asm("loc_4C3730: jne loc_4C3720;");
    asm("loc_4C3732: mov (%esi),%edx;");
    asm("loc_4C3734: mov %esi,%ecx;");
    asm("loc_4C3736: calll *0x28(%edx);");
    asm("loc_4C3739: mov (%esi),%eax;");
    asm("loc_4C373B: push $1;");
    asm("loc_4C373D: mov %esi,%ecx;");
    asm("loc_4C373F: calll *(%eax);");
    asm("loc_4C3741: xor %eax,%eax;");
    asm("loc_4C3743: pop %edi;");
    asm("loc_4C3744: pop %esi;");
    asm("loc_4C3745: pop %ebx;");
    asm("loc_4C3746: mov %ebp,%esp;");
    asm("loc_4C3748: pop %ebp;");
    asm("loc_4C3749: ret $0xC;");
    asm("loc_4C374C: mov 0xC(%ebp),%eax;");
    asm("loc_4C374F: cmp 0x34C(%esi),%eax;");
    asm("loc_4C3755: jne loc_4C3775;");
    asm("loc_4C3757: mov 0x10(%ebp),%eax;");
    asm("loc_4C375A: cmp %eax,0x364(%esi);");
    asm("loc_4C3760: je loc_4C3791;");
    asm("loc_4C3762: push %eax;");
    asm("loc_4C3763: mov %esi,%ecx;");
    asm("loc_4C3765: call _sub_4C1A10;");
    asm("loc_4C376A: xor %eax,%eax;");
    asm("loc_4C376C: pop %edi;");
    asm("loc_4C376D: pop %esi;");
    asm("loc_4C376E: pop %ebx;");
    asm("loc_4C376F: mov %ebp,%esp;");
    asm("loc_4C3771: pop %ebp;");
    asm("loc_4C3772: ret $0xC;");
    asm("loc_4C3775: mov 0x2F0(%eax),%ecx;");
    asm("loc_4C377B: test %ecx,%ecx;");
    asm("loc_4C377D: je loc_4C3791;");
    asm("loc_4C377F: mov 0x10(%ebp),%eax;");
    asm("loc_4C3782: cmp %eax,0x2C(%ecx);");
    asm("loc_4C3785: je loc_4C3791;");
    asm("loc_4C3787: push $0xFFFFFFFF;");
    asm("loc_4C3789: mov %eax,0x2C(%ecx);");
    asm("loc_4C378C: call _sub_4BF850;");
    asm("loc_4C3791: pop %edi;");
    asm("loc_4C3792: pop %esi;");
    asm("loc_4C3793: xor %eax,%eax;");
    asm("loc_4C3795: pop %ebx;");
    asm("loc_4C3796: mov %ebp,%esp;");
    asm("loc_4C3798: pop %ebp;");
    asm("loc_4C3799: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C37A0() // _sub_4C37A0
{
    __DEBUG_ASM(4C37A0);
    // chunk 0x4C37A0 _sub_4C37A0
    asm("loc_4C37A0: push %ebx;");
    asm("loc_4C37A1: mov %ecx,%ebx;");
    asm("loc_4C37A3: xor %eax,%eax;");
    asm("loc_4C37A5: push %esi;");
    asm("loc_4C37A6: mov 0xC(%esp),%esi;");
    asm("loc_4C37AA: cmp %eax,%esi;");
    asm("loc_4C37AC: mov %eax,8(%ebx);");
    asm("loc_4C37AF: mov %al,0xC(%ebx);");
    asm("loc_4C37B2: movl $_off_5CB554,(%ebx);");
    asm("loc_4C37B8: mov %eax,4(%ebx);");
    asm("loc_4C37BB: jne loc_4C37C2;");
    asm("loc_4C37BD: mov %al,0xC(%ebx);");
    asm("loc_4C37C0: jmp loc_4C37F7;");
    asm("loc_4C37C2: push %ebp;");
    asm("loc_4C37C3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4C37C6: xor %eax,%eax;");
    asm("loc_4C37C8: push %edi;");
    asm("loc_4C37C9: mov %esi,%edi;");
    asm("loc_4C37CB: repne scas (%edi),%al;");
    asm("loc_4C37CD: not %ecx;");
    asm("loc_4C37CF: dec %ecx;");
    asm("loc_4C37D0: mov %ecx,%eax;");
    asm("loc_4C37D2: cmp $0x20,%eax;");
    asm("loc_4C37D5: lea 0xC(%ebx),%ebp;");
    asm("loc_4C37D8: jb loc_4C37DF;");
    asm("loc_4C37DA: mov $0x1F,%eax;");
    asm("loc_4C37DF: mov %eax,%ecx;");
    asm("loc_4C37E1: mov %ecx,%edx;");
    asm("loc_4C37E3: shr $2,%ecx;");
    asm("loc_4C37E6: mov %ebp,%edi;");
    asm("loc_4C37E8: rep movsl (%esi),(%edi);");
    asm("loc_4C37EA: mov %edx,%ecx;");
    asm("loc_4C37EC: and $3,%ecx;");
    asm("loc_4C37EF: rep movsb (%esi),(%edi);");
    asm("loc_4C37F1: pop %edi;");
    asm("loc_4C37F2: movb $0,(%eax,%ebp);");
    asm("loc_4C37F6: pop %ebp;");
    asm("loc_4C37F7: push %ebx;");
    asm("loc_4C37F8: mov %eax,8(%ebx);");
    asm("loc_4C37FB: call _sub_59DAB0;");
    asm("loc_4C3800: add $4,%esp;");
    asm("loc_4C3803: pop %esi;");
    asm("loc_4C3804: movl $_off_5D6CA0,(%ebx);");
    asm("loc_4C380A: mov %ebx,%eax;");
    asm("loc_4C380C: pop %ebx;");
    asm("loc_4C380D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3810() // _sub_4C3810
{
    __DEBUG_ASM(4C3810);
    // chunk 0x4C3810 _sub_4C3810
    asm("loc_4C3810: push $0xFFFFFFFF;");
    asm("loc_4C3812: push $_sub_5BD6BB;");
    asm("loc_4C3817: mov %fs:0,%eax;");
    asm("loc_4C381D: push %eax;");
    asm("loc_4C381E: mov %esp,%fs:0;");
    asm("loc_4C3825: push %ecx;");
    asm("loc_4C3826: push %esi;");
    asm("loc_4C3827: push %edi;");
    asm("loc_4C3828: push $0x440;");
    asm("loc_4C382D: mov %ecx,%edi;");
    asm("loc_4C382F: call _sub_5B7E84;");
    asm("loc_4C3834: add $4,%esp;");
    asm("loc_4C3837: mov %eax,8(%esp);");
    asm("loc_4C383B: test %eax,%eax;");
    asm("loc_4C383D: movl $0,0x14(%esp);");
    asm("loc_4C3845: je loc_4C3852;");
    asm("loc_4C3847: mov %eax,%ecx;");
    asm("loc_4C3849: call _sub_4BFB60;");
    asm("loc_4C384E: mov %eax,%esi;");
    asm("loc_4C3850: jmp loc_4C3854;");
    asm("loc_4C3852: xor %esi,%esi;");
    asm("loc_4C3854: mov 0x20(%esp),%ecx;");
    asm("loc_4C3858: mov 0x1C(%esp),%edx;");
    asm("loc_4C385C: mov (%esi),%eax;");
    asm("loc_4C385E: push %ecx;");
    asm("loc_4C385F: add $0xC,%edi;");
    asm("loc_4C3862: push %edx;");
    asm("loc_4C3863: mov %esi,%ecx;");
    asm("loc_4C3865: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4C386D: mov %edi,0x10(%esi);");
    asm("loc_4C3870: calll *0x24(%eax);");
    asm("loc_4C3873: test %al,%al;");
    asm("loc_4C3875: jne loc_4C3894;");
    asm("loc_4C3877: mov (%esi),%eax;");
    asm("loc_4C3879: push $1;");
    asm("loc_4C387B: mov %esi,%ecx;");
    asm("loc_4C387D: calll *(%eax);");
    asm("loc_4C387F: pop %edi;");
    asm("loc_4C3880: xor %eax,%eax;");
    asm("loc_4C3882: pop %esi;");
    asm("loc_4C3883: mov 4(%esp),%ecx;");
    asm("loc_4C3887: mov %ecx,%fs:0;");
    asm("loc_4C388E: add $0x10,%esp;");
    asm("loc_4C3891: ret $8;");
    asm("loc_4C3894: mov 0xC(%esp),%ecx;");
    asm("loc_4C3898: pop %edi;");
    asm("loc_4C3899: mov %esi,%eax;");
    asm("loc_4C389B: pop %esi;");
    asm("loc_4C389C: mov %ecx,%fs:0;");
    asm("loc_4C38A3: add $0x10,%esp;");
    asm("loc_4C38A6: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C38B0() // _sub_4C38B0
{
    __DEBUG_ASM(4C38B0);
    // chunk 0x4C38B0 _sub_4C38B0
    asm("loc_4C38B0: push $0xFFFFFFFF;");
    asm("loc_4C38B2: push $_sub_5BD6E2;");
    asm("loc_4C38B7: mov %fs:0,%eax;");
    asm("loc_4C38BD: push %eax;");
    asm("loc_4C38BE: mov %esp,%fs:0;");
    asm("loc_4C38C5: sub $0x34,%esp;");
    asm("loc_4C38C8: mov 3(%esp),%al;");
    asm("loc_4C38CC: push %ebx;");
    asm("loc_4C38CD: push %ebp;");
    asm("loc_4C38CE: push %edi;");
    asm("loc_4C38CF: or $0xFFFFFFFF,%ecx;");
    asm("loc_4C38D2: xor %ebx,%ebx;");
    asm("loc_4C38D4: mov %al,0x14(%esp);");
    asm("loc_4C38D8: xor %eax,%eax;");
    asm("loc_4C38DA: mov $_data_5D6CA4,%edi;");
    asm("loc_4C38DF: repne scas (%edi),%al;");
    asm("loc_4C38E1: not %ecx;");
    asm("loc_4C38E3: dec %ecx;");
    asm("loc_4C38E4: mov %ecx,%ebp;");
    asm("loc_4C38E6: push $1;");
    asm("loc_4C38E8: push %ebp;");
    asm("loc_4C38E9: lea 0x1C(%esp),%ecx;");
    asm("loc_4C38ED: mov %ebx,0x20(%esp);");
    asm("loc_4C38F1: mov %ebx,0x24(%esp);");
    asm("loc_4C38F5: mov %ebx,0x28(%esp);");
    asm("loc_4C38F9: calll *_import_5C708C;");
    asm("loc_4C38FF: test %al,%al;");
    asm("loc_4C3901: je loc_4C3929;");
    asm("loc_4C3903: mov 0x18(%esp),%edi;");
    asm("loc_4C3907: push %esi;");
    asm("loc_4C3908: mov %ebp,%ecx;");
    asm("loc_4C390A: mov %ecx,%edx;");
    asm("loc_4C390C: shr $2,%ecx;");
    asm("loc_4C390F: mov $_data_5D6CA4,%esi;");
    asm("loc_4C3914: rep movsl (%esi),(%edi);");
    asm("loc_4C3916: mov %edx,%ecx;");
    asm("loc_4C3918: and $3,%ecx;");
    asm("loc_4C391B: rep movsb (%esi),(%edi);");
    asm("loc_4C391D: mov 0x1C(%esp),%eax;");
    asm("loc_4C3921: mov %ebp,0x20(%esp);");
    asm("loc_4C3925: mov %bl,(%eax,%ebp);");
    asm("loc_4C3928: pop %esi;");
    asm("loc_4C3929: lea 0x10(%esp),%ecx;");
    asm("loc_4C392D: push %ecx;");
    asm("loc_4C392E: lea 0x28(%esp),%ecx;");
    asm("loc_4C3932: mov %ebx,0x4C(%esp);");
    asm("loc_4C3936: movl $_data_5C865C,0x14(%esp);");
    asm("loc_4C393E: calll *_import_5C7124;");
    asm("loc_4C3944: mov 0x14(%esp),%dl;");
    asm("loc_4C3948: push %ebx;");
    asm("loc_4C3949: lea 0x34(%esp),%ecx;");
    asm("loc_4C394D: movb $1,0x4C(%esp);");
    asm("loc_4C3952: mov %dl,0x34(%esp);");
    asm("loc_4C3956: calll *_import_5C7084;");
    asm("loc_4C395C: mov _import_5C7080,%eax;");
    asm("loc_4C3961: mov (%eax),%ecx;");
    asm("loc_4C3963: push %ecx;");
    asm("loc_4C3964: push %ebx;");
    asm("loc_4C3965: lea 0x1C(%esp),%edx;");
    asm("loc_4C3969: push %edx;");
    asm("loc_4C396A: lea 0x3C(%esp),%ecx;");
    asm("loc_4C396E: calll *_import_5C6F9C;");
    asm("loc_4C3974: mov _import_5C6FD4,%eax;");
    asm("loc_4C3979: push $_data_5F7AC4;");
    asm("loc_4C397E: lea 0x28(%esp),%ecx;");
    asm("loc_4C3982: push %ecx;");
    asm("loc_4C3983: mov %bl,0x50(%esp);");
    asm("loc_4C3987: mov %eax,0x2C(%esp);");
    asm("loc_4C398B: call _sub_5B807C;");
    asm("loc_4C3990: pop %edi;");
    asm("loc_4C3991: pop %ebp;");
    asm("loc_4C3992: pop %ebx;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C39A0() // _sub_4C39A0
{
    __DEBUG_ASM(4C39A0);
    // chunk 0x4C39A0 _sub_4C39A0
    asm("loc_4C39A0: mov _data_5D6CC0,%eax;");
    asm("loc_4C39A5: mov %eax,_data_67333C;");
    asm("loc_4C39AA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C39B0() // _sub_4C39B0
{
    __DEBUG_ASM(4C39B0);
    // chunk 0x4C39B0 _sub_4C39B0
    asm("loc_4C39B0: mov _data_5D6CC0,%eax;");
    asm("loc_4C39B5: mov %eax,_data_673338;");
    asm("loc_4C39BA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C39C0() // _sub_4C39C0
{
    __DEBUG_ASM(4C39C0);
    // chunk 0x4C39C0 _sub_4C39C0
    asm("loc_4C39C0: mov _data_5D6CC4,%eax;");
    asm("loc_4C39C5: mov %eax,_data_673334;");
    asm("loc_4C39CA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C39D0() // _sub_4C39D0
{
    __DEBUG_ASM(4C39D0);
    // chunk 0x4C39D0 _sub_4C39D0
    asm("loc_4C39D0: push %ecx;");
    asm("loc_4C39D1: lea 2(%esp),%eax;");
    asm("loc_4C39D5: push %eax;");
    asm("loc_4C39D6: lea 7(%esp),%ecx;");
    asm("loc_4C39DA: push %ecx;");
    asm("loc_4C39DB: mov $_data_673320,%ecx;");
    asm("loc_4C39E0: call _sub_4C5A10;");
    asm("loc_4C39E5: push $_sub_4C3A00;");
    asm("loc_4C39EA: call _sub_5B7E6C;");
    asm("loc_4C39EF: add $8,%esp;");
    asm("loc_4C39F2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3A00() // _sub_4C3A00
{
    __DEBUG_ASM(4C3A00);
    // chunk 0x4C3A00 _sub_4C3A00
    asm("loc_4C3A00: mov $_data_673320,%ecx;");
    asm("loc_4C3A05: jmp loc_4C3A10;");
    asm("loc_4C3A0A: nop;");
    asm("loc_4C3A0B: nop;");
    asm("loc_4C3A0C: nop;");
    asm("loc_4C3A0D: nop;");
    asm("loc_4C3A0E: nop;");
    asm("loc_4C3A0F: nop;");
    asm("loc_4C3A10: sub $0xC,%esp;");
    asm("loc_4C3A13: push %ebx;");
    asm("loc_4C3A14: push %ebp;");
    asm("loc_4C3A15: push %esi;");
    asm("loc_4C3A16: mov %ecx,%esi;");
    asm("loc_4C3A18: mov 0x10(%esi),%ecx;");
    asm("loc_4C3A1B: push %edi;");
    asm("loc_4C3A1C: mov 4(%esi),%edi;");
    asm("loc_4C3A1F: mov (%edi),%eax;");
    asm("loc_4C3A21: xor %ebp,%ebp;");
    asm("loc_4C3A23: cmp %ebp,%ecx;");
    asm("loc_4C3A25: mov %eax,0x10(%esp);");
    asm("loc_4C3A29: je loc_4C3A84;");
    asm("loc_4C3A2B: mov %eax,%ecx;");
    asm("loc_4C3A2D: cmp %ecx,%eax;");
    asm("loc_4C3A2F: jne loc_4C3A84;");
    asm("loc_4C3A31: mov 4(%edi),%ebx;");
    asm("loc_4C3A34: cmp 8(%esi),%ebx;");
    asm("loc_4C3A37: mov %ebx,%edi;");
    asm("loc_4C3A39: je loc_4C3A5F;");
    asm("loc_4C3A3B: nop;");
    asm("loc_4C3A3C: lea (%esp),%esp;");
    asm("loc_4C3A40: mov 8(%edi),%eax;");
    asm("loc_4C3A43: push %eax;");
    asm("loc_4C3A44: mov %esi,%ecx;");
    asm("loc_4C3A46: call _sub_4C5F60;");
    asm("loc_4C3A4B: mov (%edi),%edi;");
    asm("loc_4C3A4D: push %ebx;");
    asm("loc_4C3A4E: call _sub_5B7E1D;");
    asm("loc_4C3A53: mov 8(%esi),%eax;");
    asm("loc_4C3A56: add $4,%esp;");
    asm("loc_4C3A59: cmp %eax,%edi;");
    asm("loc_4C3A5B: mov %edi,%ebx;");
    asm("loc_4C3A5D: jne loc_4C3A40;");
    asm("loc_4C3A5F: mov 4(%esi),%ecx;");
    asm("loc_4C3A62: mov 8(%esi),%edx;");
    asm("loc_4C3A65: mov %edx,4(%ecx);");
    asm("loc_4C3A68: mov 4(%esi),%eax;");
    asm("loc_4C3A6B: mov %ebp,0x10(%esi);");
    asm("loc_4C3A6E: mov %eax,(%eax);");
    asm("loc_4C3A70: mov 4(%esi),%eax;");
    asm("loc_4C3A73: mov %eax,8(%eax);");
    asm("loc_4C3A76: lea 0x14(%esp),%eax;");
    asm("loc_4C3A7A: push %eax;");
    asm("loc_4C3A7B: mov %esi,%ecx;");
    asm("loc_4C3A7D: call _sub_53E430;");
    asm("loc_4C3A82: jmp loc_4C3AA8;");
    asm("loc_4C3A84: cmp %edi,%eax;");
    asm("loc_4C3A86: je loc_4C3AA8;");
    asm("loc_4C3A88: lea 0x10(%esp),%ecx;");
    asm("loc_4C3A8C: mov %eax,%ebx;");
    asm("loc_4C3A8E: call _sub_52AFA0;");
    asm("loc_4C3A93: push %ebx;");
    asm("loc_4C3A94: lea 0x1C(%esp),%ecx;");
    asm("loc_4C3A98: push %ecx;");
    asm("loc_4C3A99: mov %esi,%ecx;");
    asm("loc_4C3A9B: call _sub_46C8C0;");
    asm("loc_4C3AA0: mov 0x10(%esp),%eax;");
    asm("loc_4C3AA4: cmp %edi,%eax;");
    asm("loc_4C3AA6: jne loc_4C3A88;");
    asm("loc_4C3AA8: mov 4(%esi),%edx;");
    asm("loc_4C3AAB: push %edx;");
    asm("loc_4C3AAC: call _sub_5B7E1D;");
    asm("loc_4C3AB1: mov 8(%esi),%eax;");
    asm("loc_4C3AB4: push %eax;");
    asm("loc_4C3AB5: mov %ebp,4(%esi);");
    asm("loc_4C3AB8: mov %ebp,0x10(%esi);");
    asm("loc_4C3ABB: call _sub_5B7E1D;");
    asm("loc_4C3AC0: add $8,%esp;");
    asm("loc_4C3AC3: pop %edi;");
    asm("loc_4C3AC4: mov %ebp,8(%esi);");
    asm("loc_4C3AC7: pop %esi;");
    asm("loc_4C3AC8: pop %ebp;");
    asm("loc_4C3AC9: pop %ebx;");
    asm("loc_4C3ACA: add $0xC,%esp;");
    asm("loc_4C3ACD: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3AD0() // _nullsub_20
{
    __DEBUG_ASM(4C3AD0);
    // chunk 0x4C3AD0 _sub_4C3AD0
    asm("loc_4C3AD0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3AE0() // _nullsub_21
{
    __DEBUG_ASM(4C3AE0);
    // chunk 0x4C3AE0 _sub_4C3AE0
    asm("loc_4C3AE0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3AF0() // _nullsub_22
{
    __DEBUG_ASM(4C3AF0);
    // chunk 0x4C3AF0 _sub_4C3AF0
    asm("loc_4C3AF0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3B00() // _sub_4C3B00
{
    __DEBUG_ASM(4C3B00);
    // chunk 0x4C3B00 _sub_4C3B00
    asm("loc_4C3B00: push %ecx;");
    asm("loc_4C3B01: mov 3(%esp),%al;");
    asm("loc_4C3B05: push $0x10;");
    asm("loc_4C3B07: mov %al,_data_67296C;");
    asm("loc_4C3B0C: call _sub_5B7E84;");
    asm("loc_4C3B11: mov %eax,(%eax);");
    asm("loc_4C3B13: mov %eax,4(%eax);");
    asm("loc_4C3B16: push $_sub_4C3B40;");
    asm("loc_4C3B1B: mov %eax,_data_672970;");
    asm("loc_4C3B20: movl $0,_data_672974;");
    asm("loc_4C3B2A: call _sub_5B7E6C;");
    asm("loc_4C3B2F: add $0xC,%esp;");
    asm("loc_4C3B32: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3B40() // _sub_4C3B40
{
    __DEBUG_ASM(4C3B40);
    // chunk 0x4C3B40 _sub_4C3B40
    asm("loc_4C3B40: push %esi;");
    asm("loc_4C3B41: push %edi;");
    asm("loc_4C3B42: mov _data_672970,%edi;");
    asm("loc_4C3B48: mov (%edi),%esi;");
    asm("loc_4C3B4A: cmp %edi,%esi;");
    asm("loc_4C3B4C: je loc_4C3B83;");
    asm("loc_4C3B4E: mov %edi,%edi;");
    asm("loc_4C3B50: mov %esi,%eax;");
    asm("loc_4C3B52: mov 4(%eax),%ecx;");
    asm("loc_4C3B55: mov (%eax),%edx;");
    asm("loc_4C3B57: mov (%esi),%esi;");
    asm("loc_4C3B59: mov %edx,(%ecx);");
    asm("loc_4C3B5B: mov (%eax),%ecx;");
    asm("loc_4C3B5D: mov 4(%eax),%edx;");
    asm("loc_4C3B60: push %eax;");
    asm("loc_4C3B61: mov %edx,4(%ecx);");
    asm("loc_4C3B64: call _sub_5B7E1D;");
    asm("loc_4C3B69: mov _data_672974,%ecx;");
    asm("loc_4C3B6F: add $4,%esp;");
    asm("loc_4C3B72: dec %ecx;");
    asm("loc_4C3B73: cmp %edi,%esi;");
    asm("loc_4C3B75: mov %ecx,_data_672974;");
    asm("loc_4C3B7B: jne loc_4C3B50;");
    asm("loc_4C3B7D: mov _data_672970,%edi;");
    asm("loc_4C3B83: push %edi;");
    asm("loc_4C3B84: call _sub_5B7E1D;");
    asm("loc_4C3B89: add $4,%esp;");
    asm("loc_4C3B8C: xor %eax,%eax;");
    asm("loc_4C3B8E: pop %edi;");
    asm("loc_4C3B8F: mov %eax,_data_672970;");
    asm("loc_4C3B94: mov %eax,_data_672974;");
    asm("loc_4C3B99: pop %esi;");
    asm("loc_4C3B9A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3BA0() // _sub_4C3BA0
{
    __DEBUG_ASM(4C3BA0);
    // chunk 0x4C3BA0 _sub_4C3BA0
    asm("loc_4C3BA0: mov $_data_672960,%ecx;");
    asm("loc_4C3BA5: calll *_import_5C6454;");
    asm("loc_4C3BAB: push $_sub_4C3BC0;");
    asm("loc_4C3BB0: call _sub_5B7E6C;");
    asm("loc_4C3BB5: pop %ecx;");
    asm("loc_4C3BB6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3BC0() // _sub_4C3BC0
{
    __DEBUG_ASM(4C3BC0);
    // chunk 0x4C3BC0 _sub_4C3BC0
    asm("loc_4C3BC0: mov $_data_672960,%ecx;");
    asm("loc_4C3BC5: jmpl *_import_5C60FC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3BD0() // _sub_4C3BD0
{
    __DEBUG_ASM(4C3BD0);
    // chunk 0x4C3BD0 _sub_4C3BD0
    asm("loc_4C3BD0: push %ecx;");
    asm("loc_4C3BD1: lea 2(%esp),%eax;");
    asm("loc_4C3BD5: push %eax;");
    asm("loc_4C3BD6: lea 7(%esp),%ecx;");
    asm("loc_4C3BDA: push %ecx;");
    asm("loc_4C3BDB: mov $_data_67294C,%ecx;");
    asm("loc_4C3BE0: call _sub_4C59A0;");
    asm("loc_4C3BE5: push $_sub_4C3C00;");
    asm("loc_4C3BEA: call _sub_5B7E6C;");
    asm("loc_4C3BEF: add $8,%esp;");
    asm("loc_4C3BF2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3C00() // _sub_4C3C00
{
    __DEBUG_ASM(4C3C00);
    // chunk 0x4C3C00 _sub_4C3C00
    asm("loc_4C3C00: mov $_data_67294C,%ecx;");
    asm("loc_4C3C05: jmp loc_4C3C10;");
    asm("loc_4C3C0A: nop;");
    asm("loc_4C3C0B: nop;");
    asm("loc_4C3C0C: nop;");
    asm("loc_4C3C0D: nop;");
    asm("loc_4C3C0E: nop;");
    asm("loc_4C3C0F: nop;");
    asm("loc_4C3C10: sub $0xC,%esp;");
    asm("loc_4C3C13: push %ebx;");
    asm("loc_4C3C14: push %ebp;");
    asm("loc_4C3C15: push %esi;");
    asm("loc_4C3C16: mov %ecx,%esi;");
    asm("loc_4C3C18: mov 0x10(%esi),%ecx;");
    asm("loc_4C3C1B: push %edi;");
    asm("loc_4C3C1C: mov 4(%esi),%edi;");
    asm("loc_4C3C1F: mov (%edi),%eax;");
    asm("loc_4C3C21: xor %ebp,%ebp;");
    asm("loc_4C3C23: cmp %ebp,%ecx;");
    asm("loc_4C3C25: mov %eax,0x10(%esp);");
    asm("loc_4C3C29: je loc_4C3C8D;");
    asm("loc_4C3C2B: mov %eax,%ecx;");
    asm("loc_4C3C2D: cmp %ecx,%eax;");
    asm("loc_4C3C2F: jne loc_4C3C8D;");
    asm("loc_4C3C31: mov 4(%edi),%ebx;");
    asm("loc_4C3C34: cmp 8(%esi),%ebx;");
    asm("loc_4C3C37: mov %ebx,%edi;");
    asm("loc_4C3C39: je loc_4C3C68;");
    asm("loc_4C3C3B: nop;");
    asm("loc_4C3C3C: lea (%esp),%esp;");
    asm("loc_4C3C40: mov 8(%edi),%eax;");
    asm("loc_4C3C43: push %eax;");
    asm("loc_4C3C44: mov %esi,%ecx;");
    asm("loc_4C3C46: call _sub_4C5F20;");
    asm("loc_4C3C4B: mov (%edi),%edi;");
    asm("loc_4C3C4D: push %ebp;");
    asm("loc_4C3C4E: lea 0xC(%ebx),%ecx;");
    asm("loc_4C3C51: call _sub_4C5FF0;");
    asm("loc_4C3C56: push %ebx;");
    asm("loc_4C3C57: call _sub_5B7E1D;");
    asm("loc_4C3C5C: mov 8(%esi),%eax;");
    asm("loc_4C3C5F: add $4,%esp;");
    asm("loc_4C3C62: cmp %eax,%edi;");
    asm("loc_4C3C64: mov %edi,%ebx;");
    asm("loc_4C3C66: jne loc_4C3C40;");
    asm("loc_4C3C68: mov 4(%esi),%ecx;");
    asm("loc_4C3C6B: mov 8(%esi),%edx;");
    asm("loc_4C3C6E: mov %edx,4(%ecx);");
    asm("loc_4C3C71: mov 4(%esi),%eax;");
    asm("loc_4C3C74: mov %ebp,0x10(%esi);");
    asm("loc_4C3C77: mov %eax,(%eax);");
    asm("loc_4C3C79: mov 4(%esi),%eax;");
    asm("loc_4C3C7C: mov %eax,8(%eax);");
    asm("loc_4C3C7F: lea 0x14(%esp),%eax;");
    asm("loc_4C3C83: push %eax;");
    asm("loc_4C3C84: mov %esi,%ecx;");
    asm("loc_4C3C86: call _sub_53E430;");
    asm("loc_4C3C8B: jmp loc_4C3CB1;");
    asm("loc_4C3C8D: cmp %edi,%eax;");
    asm("loc_4C3C8F: je loc_4C3CB1;");
    asm("loc_4C3C91: lea 0x10(%esp),%ecx;");
    asm("loc_4C3C95: mov %eax,%ebx;");
    asm("loc_4C3C97: call _sub_4C5FA0;");
    asm("loc_4C3C9C: push %ebx;");
    asm("loc_4C3C9D: lea 0x1C(%esp),%ecx;");
    asm("loc_4C3CA1: push %ecx;");
    asm("loc_4C3CA2: mov %esi,%ecx;");
    asm("loc_4C3CA4: call _sub_4C5B40;");
    asm("loc_4C3CA9: mov 0x10(%esp),%eax;");
    asm("loc_4C3CAD: cmp %edi,%eax;");
    asm("loc_4C3CAF: jne loc_4C3C91;");
    asm("loc_4C3CB1: mov 4(%esi),%edx;");
    asm("loc_4C3CB4: push %edx;");
    asm("loc_4C3CB5: call _sub_5B7E1D;");
    asm("loc_4C3CBA: mov 8(%esi),%eax;");
    asm("loc_4C3CBD: push %eax;");
    asm("loc_4C3CBE: mov %ebp,4(%esi);");
    asm("loc_4C3CC1: mov %ebp,0x10(%esi);");
    asm("loc_4C3CC4: call _sub_5B7E1D;");
    asm("loc_4C3CC9: add $8,%esp;");
    asm("loc_4C3CCC: pop %edi;");
    asm("loc_4C3CCD: mov %ebp,8(%esi);");
    asm("loc_4C3CD0: pop %esi;");
    asm("loc_4C3CD1: pop %ebp;");
    asm("loc_4C3CD2: pop %ebx;");
    asm("loc_4C3CD3: add $0xC,%esp;");
    asm("loc_4C3CD6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3CE0() // _sub_4C3CE0
{
    __DEBUG_ASM(4C3CE0);
    // chunk 0x4C3CE0 _sub_4C3CE0
    asm("loc_4C3CE0: xor %eax,%eax;");
    asm("loc_4C3CE2: mov %eax,_data_672918;");
    asm("loc_4C3CE7: mov %eax,_data_67291C;");
    asm("loc_4C3CEC: mov %eax,_data_672920;");
    asm("loc_4C3CF1: mov %eax,_data_672924;");
    asm("loc_4C3CF6: mov %eax,_data_672948;");
    asm("loc_4C3CFB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3D00() // _sub_4C3D00
{
    __DEBUG_ASM(4C3D00);
    // chunk 0x4C3D00 _sub_4C3D00
    asm("loc_4C3D00: xor %eax,%eax;");
    asm("loc_4C3D02: mov %eax,_data_6728E4;");
    asm("loc_4C3D07: mov %eax,_data_6728E8;");
    asm("loc_4C3D0C: mov %eax,_data_6728EC;");
    asm("loc_4C3D11: mov %eax,_data_6728F0;");
    asm("loc_4C3D16: mov %eax,_data_672914;");
    asm("loc_4C3D1B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3D20() // _sub_4C3D20
{
    __DEBUG_ASM(4C3D20);
    // chunk 0x4C3D20 _sub_4C3D20
    asm("loc_4C3D20: mov 4(%esp),%ecx;");
    asm("loc_4C3D24: mov (%ecx),%eax;");
    asm("loc_4C3D26: mov %eax,_data_672918;");
    asm("loc_4C3D2B: mov 4(%ecx),%edx;");
    asm("loc_4C3D2E: mov %edx,_data_67291C;");
    asm("loc_4C3D34: mov 8(%ecx),%eax;");
    asm("loc_4C3D37: mov %eax,_data_672920;");
    asm("loc_4C3D3C: mov 0xC(%ecx),%edx;");
    asm("loc_4C3D3F: mov %edx,_data_672924;");
    asm("loc_4C3D45: mov 0x30(%ecx),%eax;");
    asm("loc_4C3D48: xor %edx,%edx;");
    asm("loc_4C3D4A: test %eax,%eax;");
    asm("loc_4C3D4C: mov %eax,_data_672948;");
    asm("loc_4C3D51: jle loc_4C3D74;");
    asm("loc_4C3D53: mov $_data_672928,%eax;");
    asm("loc_4C3D58: sub $_data_672918,%ecx;");
    asm("loc_4C3D5E: push %esi;");
    asm("loc_4C3D5F: nop;");
    asm("loc_4C3D60: mov (%ecx,%eax),%esi;");
    asm("loc_4C3D63: mov %esi,(%eax);");
    asm("loc_4C3D65: mov _data_672948,%esi;");
    asm("loc_4C3D6B: inc %edx;");
    asm("loc_4C3D6C: add $4,%eax;");
    asm("loc_4C3D6F: cmp %esi,%edx;");
    asm("loc_4C3D71: jl loc_4C3D60;");
    asm("loc_4C3D73: pop %esi;");
    asm("loc_4C3D74: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3D80() // _sub_4C3D80
{
    __DEBUG_ASM(4C3D80);
    // chunk 0x4C3D80 _sub_4C3D80
    asm("loc_4C3D80: mov 4(%esp),%ecx;");
    asm("loc_4C3D84: mov (%ecx),%eax;");
    asm("loc_4C3D86: mov %eax,_data_6728E4;");
    asm("loc_4C3D8B: mov 4(%ecx),%edx;");
    asm("loc_4C3D8E: mov %edx,_data_6728E8;");
    asm("loc_4C3D94: mov 8(%ecx),%eax;");
    asm("loc_4C3D97: mov %eax,_data_6728EC;");
    asm("loc_4C3D9C: mov 0xC(%ecx),%edx;");
    asm("loc_4C3D9F: mov %edx,_data_6728F0;");
    asm("loc_4C3DA5: mov 0x30(%ecx),%eax;");
    asm("loc_4C3DA8: xor %edx,%edx;");
    asm("loc_4C3DAA: test %eax,%eax;");
    asm("loc_4C3DAC: mov %eax,_data_672914;");
    asm("loc_4C3DB1: jle loc_4C3DD4;");
    asm("loc_4C3DB3: mov $_data_6728F4,%eax;");
    asm("loc_4C3DB8: sub $_data_6728E4,%ecx;");
    asm("loc_4C3DBE: push %esi;");
    asm("loc_4C3DBF: nop;");
    asm("loc_4C3DC0: mov (%ecx,%eax),%esi;");
    asm("loc_4C3DC3: mov %esi,(%eax);");
    asm("loc_4C3DC5: mov _data_672914,%esi;");
    asm("loc_4C3DCB: inc %edx;");
    asm("loc_4C3DCC: add $4,%eax;");
    asm("loc_4C3DCF: cmp %esi,%edx;");
    asm("loc_4C3DD1: jl loc_4C3DC0;");
    asm("loc_4C3DD3: pop %esi;");
    asm("loc_4C3DD4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3DE0() // _sub_4C3DE0
{
    __DEBUG_ASM(4C3DE0);
    // chunk 0x4C3DE0 _sub_4C3DE0
    asm("loc_4C3DE0: mov $_data_6728E4,%eax;");
    asm("loc_4C3DE5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3DF0() // _sub_4C3DF0
{
    __DEBUG_ASM(4C3DF0);
    // chunk 0x4C3DF0 _sub_4C3DF0
    asm("loc_4C3DF0: mov _data_673344,%edx;");
    asm("loc_4C3DF6: mov _data_67ECD0,%ecx;");
    asm("loc_4C3DFC: mov (%ecx),%eax;");
    asm("loc_4C3DFE: push %edx;");
    asm("loc_4C3DFF: mov 8(%esp),%edx;");
    asm("loc_4C3E03: push %edx;");
    asm("loc_4C3E04: calll *0x64(%eax);");
    asm("loc_4C3E07: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3E10() // _sub_4C3E10
{
    __DEBUG_ASM(4C3E10);
    // chunk 0x4C3E10 _sub_4C3E10
    asm("loc_4C3E10: mov _data_67337C,%eax;");
    asm("loc_4C3E15: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3E20() // _sub_4C3E20
{
    __DEBUG_ASM(4C3E20);
    // chunk 0x4C3E20 _sub_4C3E20
    asm("loc_4C3E20: mov _data_67337C,%eax;");
    asm("loc_4C3E25: push %ebx;");
    asm("loc_4C3E26: mov 8(%esp),%ebx;");
    asm("loc_4C3E2A: cmp %ebx,%eax;");
    asm("loc_4C3E2C: push %esi;");
    asm("loc_4C3E2D: je loc_4C3EEE;");
    asm("loc_4C3E33: push %edi;");
    asm("loc_4C3E34: mov _data_672970,%edi;");
    asm("loc_4C3E3A: mov %ebx,_data_67337C;");
    asm("loc_4C3E40: mov (%edi),%esi;");
    asm("loc_4C3E42: cmp %edi,%esi;");
    asm("loc_4C3E44: je loc_4C3E73;");
    asm("loc_4C3E46: mov %esi,%eax;");
    asm("loc_4C3E48: mov 4(%eax),%ecx;");
    asm("loc_4C3E4B: mov (%eax),%edx;");
    asm("loc_4C3E4D: mov (%esi),%esi;");
    asm("loc_4C3E4F: mov %edx,(%ecx);");
    asm("loc_4C3E51: mov (%eax),%ecx;");
    asm("loc_4C3E53: mov 4(%eax),%edx;");
    asm("loc_4C3E56: push %eax;");
    asm("loc_4C3E57: mov %edx,4(%ecx);");
    asm("loc_4C3E5A: call _sub_5B7E1D;");
    asm("loc_4C3E5F: mov _data_672974,%ecx;");
    asm("loc_4C3E65: add $4,%esp;");
    asm("loc_4C3E68: dec %ecx;");
    asm("loc_4C3E69: cmp %edi,%esi;");
    asm("loc_4C3E6B: mov %ecx,_data_672974;");
    asm("loc_4C3E71: jne loc_4C3E46;");
    asm("loc_4C3E73: test $0x3FFFFFFF,%ebx;");
    asm("loc_4C3E79: pop %edi;");
    asm("loc_4C3E7A: je loc_4C3EC0;");
    asm("loc_4C3E7C: push %ebx;");
    asm("loc_4C3E7D: calll *_import_5C61FC;");
    asm("loc_4C3E83: add $4,%esp;");
    asm("loc_4C3E86: test %eax,%eax;");
    asm("loc_4C3E88: je loc_4C3EA0;");
    asm("loc_4C3E8A: push $_data_67296C;");
    asm("loc_4C3E8F: mov %eax,%ecx;");
    asm("loc_4C3E91: calll *_import_5C6458;");
    asm("loc_4C3E97: jmp loc_4C3EC0;");
    asm("loc_4C3E99: lea (%esp),%esp;");
    asm("loc_4C3EA0: push %ebx;");
    asm("loc_4C3EA1: push $0xAE;");
    asm("loc_4C3EA6: push $_data_5D6D00;");
    asm("loc_4C3EAB: mov $0x100001,%eax;");
    asm("loc_4C3EB0: push $_data_5D6CCC;");
    asm("loc_4C3EB5: push %eax;");
    asm("loc_4C3EB6: mov _import_5C6D18,%eax;");
    asm("loc_4C3EBB: calll *(%eax);");
    asm("loc_4C3EBD: add $0x14,%esp;");
    asm("loc_4C3EC0: call _sub_446BE0;");
    asm("loc_4C3EC5: mov %eax,%esi;");
    asm("loc_4C3EC7: test %esi,%esi;");
    asm("loc_4C3EC9: je loc_4C3EEE;");
    asm("loc_4C3ECB: push $_data_672960;");
    asm("loc_4C3ED0: mov %esi,%ecx;");
    asm("loc_4C3ED2: call _sub_448540;");
    asm("loc_4C3ED7: mov _data_67337C,%ecx;");
    asm("loc_4C3EDD: push %ecx;");
    asm("loc_4C3EDE: mov %esi,%ecx;");
    asm("loc_4C3EE0: call _sub_448680;");
    asm("loc_4C3EE5: mov %esi,%ecx;");
    asm("loc_4C3EE7: pop %esi;");
    asm("loc_4C3EE8: pop %ebx;");
    asm("loc_4C3EE9: jmp _sub_447210;");
    asm("loc_4C3EEE: pop %esi;");
    asm("loc_4C3EEF: pop %ebx;");
    asm("loc_4C3EF0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3F00() // _sub_4C3F00
{
    __DEBUG_ASM(4C3F00);
    // chunk 0x4C3F00 _sub_4C3F00
    asm("loc_4C3F00: mov $_data_67296C,%eax;");
    asm("loc_4C3F05: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3F10() // _sub_4C3F10
{
    __DEBUG_ASM(4C3F10);
    // chunk 0x4C3F10 _sub_4C3F10
    asm("loc_4C3F10: mov _data_673344,%edx;");
    asm("loc_4C3F16: mov _data_67ECD0,%ecx;");
    asm("loc_4C3F1C: mov (%ecx),%eax;");
    asm("loc_4C3F1E: push %edx;");
    asm("loc_4C3F1F: mov 8(%esp),%edx;");
    asm("loc_4C3F23: push %edx;");
    asm("loc_4C3F24: calll *0x6C(%eax);");
    asm("loc_4C3F27: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C3F30() // _sub_4C3F30
{
    __DEBUG_ASM(4C3F30);
    // chunk 0x4C3F30 _sub_4C3F30
    asm("loc_4C3F30: mov 4(%esp),%ecx;");
    asm("loc_4C3F34: cmp $_data_67296C,%ecx;");
    asm("loc_4C3F3A: push %ebx;");
    asm("loc_4C3F3B: push %ebp;");
    asm("loc_4C3F3C: push %esi;");
    asm("loc_4C3F3D: push %edi;");
    asm("loc_4C3F3E: je loc_4C3FE3;");
    asm("loc_4C3F44: mov _data_672970,%esi;");
    asm("loc_4C3F4A: mov (%esi),%eax;");
    asm("loc_4C3F4C: cmp %esi,%eax;");
    asm("loc_4C3F4E: mov 4(%ecx),%ebp;");
    asm("loc_4C3F51: mov (%ebp),%ebx;");
    asm("loc_4C3F54: je loc_4C3F6E;");
    asm("loc_4C3F56: cmp %ebp,%ebx;");
    asm("loc_4C3F58: je loc_4C3F6E;");
    asm("loc_4C3F5A: mov 8(%ebx),%ecx;");
    asm("loc_4C3F5D: mov %ecx,8(%eax);");
    asm("loc_4C3F60: mov 0xC(%ebx),%edx;");
    asm("loc_4C3F63: mov %edx,0xC(%eax);");
    asm("loc_4C3F66: mov (%eax),%eax;");
    asm("loc_4C3F68: cmp %esi,%eax;");
    asm("loc_4C3F6A: mov (%ebx),%ebx;");
    asm("loc_4C3F6C: jne loc_4C3F56;");
    asm("loc_4C3F6E: cmp %esi,%eax;");
    asm("loc_4C3F70: mov %eax,%edi;");
    asm("loc_4C3F72: je loc_4C3FA1;");
    asm("loc_4C3F74: mov %edi,%eax;");
    asm("loc_4C3F76: mov 4(%eax),%ecx;");
    asm("loc_4C3F79: mov (%eax),%edx;");
    asm("loc_4C3F7B: mov (%edi),%edi;");
    asm("loc_4C3F7D: mov %edx,(%ecx);");
    asm("loc_4C3F7F: mov (%eax),%ecx;");
    asm("loc_4C3F81: mov 4(%eax),%edx;");
    asm("loc_4C3F84: push %eax;");
    asm("loc_4C3F85: mov %edx,4(%ecx);");
    asm("loc_4C3F88: call _sub_5B7E1D;");
    asm("loc_4C3F8D: mov _data_672974,%ecx;");
    asm("loc_4C3F93: add $4,%esp;");
    asm("loc_4C3F96: dec %ecx;");
    asm("loc_4C3F97: cmp %esi,%edi;");
    asm("loc_4C3F99: mov %ecx,_data_672974;");
    asm("loc_4C3F9F: jne loc_4C3F74;");
    asm("loc_4C3FA1: cmp %ebp,%ebx;");
    asm("loc_4C3FA3: je loc_4C3FE3;");
    asm("loc_4C3FA5: mov 4(%esi),%edi;");
    asm("loc_4C3FA8: push $0x10;");
    asm("loc_4C3FAA: call _sub_5B7E84;");
    asm("loc_4C3FAF: add $4,%esp;");
    asm("loc_4C3FB2: test %edi,%edi;");
    asm("loc_4C3FB4: mov %esi,(%eax);");
    asm("loc_4C3FB6: jne loc_4C3FBA;");
    asm("loc_4C3FB8: mov %eax,%edi;");
    asm("loc_4C3FBA: mov %edi,4(%eax);");
    asm("loc_4C3FBD: mov %eax,4(%esi);");
    asm("loc_4C3FC0: mov 4(%eax),%ecx;");
    asm("loc_4C3FC3: mov %eax,(%ecx);");
    asm("loc_4C3FC5: add $8,%eax;");
    asm("loc_4C3FC8: test %eax,%eax;");
    asm("loc_4C3FCA: je loc_4C3FD7;");
    asm("loc_4C3FCC: mov 8(%ebx),%edx;");
    asm("loc_4C3FCF: mov %edx,(%eax);");
    asm("loc_4C3FD1: mov 0xC(%ebx),%ecx;");
    asm("loc_4C3FD4: mov %ecx,4(%eax);");
    asm("loc_4C3FD7: incl _data_672974;");
    asm("loc_4C3FDD: mov (%ebx),%ebx;");
    asm("loc_4C3FDF: cmp %ebp,%ebx;");
    asm("loc_4C3FE1: jne loc_4C3FA5;");
    asm("loc_4C3FE3: incl _data_673388;");
    asm("loc_4C3FE9: call _sub_446BE0;");
    asm("loc_4C3FEE: test %eax,%eax;");
    asm("loc_4C3FF0: pop %edi;");
    asm("loc_4C3FF1: pop %esi;");
    asm("loc_4C3FF2: pop %ebp;");
    asm("loc_4C3FF3: pop %ebx;");
    asm("loc_4C3FF4: je loc_4C3FFD;");
    asm("loc_4C3FF6: mov %eax,%ecx;");
    asm("loc_4C3FF8: jmp _sub_4482A0;");
    asm("loc_4C3FFD: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4000() // _sub_4C4000
{
    __DEBUG_ASM(4C4000);
    // chunk 0x4C4000 _sub_4C4000
    asm("loc_4C4000: mov _data_672970,%ecx;");
    asm("loc_4C4006: mov (%ecx),%eax;");
    asm("loc_4C4008: cmp %ecx,%eax;");
    asm("loc_4C400A: je loc_4C402B;");
    asm("loc_4C400C: mov 4(%esp),%dx;");
    asm("loc_4C4011: cmp %dx,8(%eax);");
    asm("loc_4C4015: je loc_4C4024;");
    asm("loc_4C4017: mov (%eax),%eax;");
    asm("loc_4C4019: cmp %ecx,%eax;");
    asm("loc_4C401B: jne loc_4C4011;");
    asm("loc_4C401D: incl _data_673388;");
    asm("loc_4C4023: ret;");
    asm("loc_4C4024: mov 8(%esp),%ecx;");
    asm("loc_4C4028: mov %ecx,0xC(%eax);");
    asm("loc_4C402B: incl _data_673388;");
    asm("loc_4C4031: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4040() // _sub_4C4040
{
    __DEBUG_ASM(4C4040);
    // chunk 0x4C4040 _sub_4C4040
    asm("loc_4C4040: mov _data_673344,%edx;");
    asm("loc_4C4046: mov _data_67ECD0,%ecx;");
    asm("loc_4C404C: mov (%ecx),%eax;");
    asm("loc_4C404E: push %edx;");
    asm("loc_4C404F: mov 8(%esp),%edx;");
    asm("loc_4C4053: push %edx;");
    asm("loc_4C4054: calll *0x70(%eax);");
    asm("loc_4C4057: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4060() // _sub_4C4060
{
    __DEBUG_ASM(4C4060);
    // chunk 0x4C4060 _sub_4C4060
    asm("loc_4C4060: mov $_data_672960,%eax;");
    asm("loc_4C4065: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4070() // _sub_4C4070
{
    __DEBUG_ASM(4C4070);
    // chunk 0x4C4070 _sub_4C4070
    asm("loc_4C4070: push %ebx;");
    asm("loc_4C4071: mov _data_672964,%ebx;");
    asm("loc_4C4077: push %esi;");
    asm("loc_4C4078: mov (%ebx),%esi;");
    asm("loc_4C407A: push %edi;");
    asm("loc_4C407B: mov %ebx,%edi;");
    asm("loc_4C407D: cmp %edi,%esi;");
    asm("loc_4C407F: je loc_4C40B4;");
    asm("loc_4C4081: mov %esi,%eax;");
    asm("loc_4C4083: mov 4(%eax),%ecx;");
    asm("loc_4C4086: mov (%eax),%edx;");
    asm("loc_4C4088: mov (%esi),%esi;");
    asm("loc_4C408A: mov %edx,(%ecx);");
    asm("loc_4C408C: mov (%eax),%ecx;");
    asm("loc_4C408E: mov 4(%eax),%edx;");
    asm("loc_4C4091: push %eax;");
    asm("loc_4C4092: mov %edx,4(%ecx);");
    asm("loc_4C4095: call _sub_5B7E1D;");
    asm("loc_4C409A: mov _data_672968,%ecx;");
    asm("loc_4C40A0: add $4,%esp;");
    asm("loc_4C40A3: dec %ecx;");
    asm("loc_4C40A4: cmp %edi,%esi;");
    asm("loc_4C40A6: mov %ecx,_data_672968;");
    asm("loc_4C40AC: jne loc_4C4081;");
    asm("loc_4C40AE: mov _data_672964,%ebx;");
    asm("loc_4C40B4: mov 0x10(%esp),%ecx;");
    asm("loc_4C40B8: cmp $_data_672960,%ecx;");
    asm("loc_4C40BE: je loc_4C4153;");
    asm("loc_4C40C4: mov (%ebx),%eax;");
    asm("loc_4C40C6: cmp %ebx,%eax;");
    asm("loc_4C40C8: mov 4(%ecx),%edi;");
    asm("loc_4C40CB: push %ebp;");
    asm("loc_4C40CC: mov (%edi),%ebp;");
    asm("loc_4C40CE: mov %edi,0x14(%esp);");
    asm("loc_4C40D2: je loc_4C40F2;");
    asm("loc_4C40D4: cmp %edi,%ebp;");
    asm("loc_4C40D6: je loc_4C40F2;");
    asm("loc_4C40D8: lea 8(%eax),%edi;");
    asm("loc_4C40DB: mov (%eax),%eax;");
    asm("loc_4C40DD: cmp %ebx,%eax;");
    asm("loc_4C40DF: lea 8(%ebp),%esi;");
    asm("loc_4C40E2: mov $8,%ecx;");
    asm("loc_4C40E7: rep movsl (%esi),(%edi);");
    asm("loc_4C40E9: mov (%ebp),%ebp;");
    asm("loc_4C40EC: mov 0x14(%esp),%edi;");
    asm("loc_4C40F0: jne loc_4C40D4;");
    asm("loc_4C40F2: cmp %ebx,%eax;");
    asm("loc_4C40F4: mov %eax,%esi;");
    asm("loc_4C40F6: je loc_4C4111;");
    asm("loc_4C40F8: mov %esi,%eax;");
    asm("loc_4C40FA: mov (%esi),%esi;");
    asm("loc_4C40FC: push %eax;");
    asm("loc_4C40FD: lea 0x18(%esp),%eax;");
    asm("loc_4C4101: push %eax;");
    asm("loc_4C4102: mov $_data_672960,%ecx;");
    asm("loc_4C4107: calll *_import_5C6188;");
    asm("loc_4C410D: cmp %ebx,%esi;");
    asm("loc_4C410F: jne loc_4C40F8;");
    asm("loc_4C4111: mov %ebp,%esi;");
    asm("loc_4C4113: cmp %edi,%ebp;");
    asm("loc_4C4115: pop %ebp;");
    asm("loc_4C4116: je loc_4C4153;");
    asm("loc_4C4118: mov 4(%ebx),%ecx;");
    asm("loc_4C411B: push %ecx;");
    asm("loc_4C411C: push %ebx;");
    asm("loc_4C411D: mov $_data_672960,%ecx;");
    asm("loc_4C4122: calll *_import_5C6414;");
    asm("loc_4C4128: mov %eax,4(%ebx);");
    asm("loc_4C412B: mov 4(%eax),%edx;");
    asm("loc_4C412E: lea 8(%esi),%ecx;");
    asm("loc_4C4131: mov %eax,(%edx);");
    asm("loc_4C4133: push %ecx;");
    asm("loc_4C4134: add $8,%eax;");
    asm("loc_4C4137: push %eax;");
    asm("loc_4C4138: call _sub_4B7390;");
    asm("loc_4C413D: mov _data_672968,%ecx;");
    asm("loc_4C4143: add $8,%esp;");
    asm("loc_4C4146: inc %ecx;");
    asm("loc_4C4147: mov %ecx,_data_672968;");
    asm("loc_4C414D: mov (%esi),%esi;");
    asm("loc_4C414F: cmp %edi,%esi;");
    asm("loc_4C4151: jne loc_4C4118;");
    asm("loc_4C4153: mov _data_673384,%eax;");
    asm("loc_4C4158: pop %edi;");
    asm("loc_4C4159: inc %eax;");
    asm("loc_4C415A: pop %esi;");
    asm("loc_4C415B: mov %eax,_data_673384;");
    asm("loc_4C4160: pop %ebx;");
    asm("loc_4C4161: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4170() // _sub_4C4170
{
    __DEBUG_ASM(4C4170);
    // chunk 0x4C4170 _sub_4C4170
    asm("loc_4C4170: push %esi;");
    asm("loc_4C4171: incl _data_673384;");
    asm("loc_4C4177: mov 0xC(%esp),%esi;");
    asm("loc_4C417B: mov 4(%esi),%eax;");
    asm("loc_4C417E: push %edi;");
    asm("loc_4C417F: push %eax;");
    asm("loc_4C4180: calll *_import_5C63A0;");
    asm("loc_4C4186: add $4,%esp;");
    asm("loc_4C4189: mov $_data_672960,%ecx;");
    asm("loc_4C418E: push %eax;");
    asm("loc_4C418F: push %esi;");
    asm("loc_4C4190: calll *_import_5C6434;");
    asm("loc_4C4196: mov %eax,%edi;");
    asm("loc_4C4198: call _sub_446BE0;");
    asm("loc_4C419D: test %eax,%eax;");
    asm("loc_4C419F: je loc_4C41C3;");
    asm("loc_4C41A1: flds 0x10(%esi);");
    asm("loc_4C41A4: push %ecx;");
    asm("loc_4C41A5: mov 0x14(%esi),%ecx;");
    asm("loc_4C41A8: fstps (%esp);");
    asm("loc_4C41AB: push %ecx;");
    asm("loc_4C41AC: xor %ecx,%ecx;");
    asm("loc_4C41AE: mov 2(%esi),%cx;");
    asm("loc_4C41B2: lea 8(%esi),%edx;");
    asm("loc_4C41B5: push %edx;");
    asm("loc_4C41B6: mov 4(%esi),%edx;");
    asm("loc_4C41B9: push %ecx;");
    asm("loc_4C41BA: push %edx;");
    asm("loc_4C41BB: push %edi;");
    asm("loc_4C41BC: mov %eax,%ecx;");
    asm("loc_4C41BE: call _sub_4477D0;");
    asm("loc_4C41C3: pop %edi;");
    asm("loc_4C41C4: pop %esi;");
    asm("loc_4C41C5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C41D0() // _sub_4C41D0
{
    __DEBUG_ASM(4C41D0);
    // chunk 0x4C41D0 _sub_4C41D0
    asm("loc_4C41D0: mov _data_673344,%edx;");
    asm("loc_4C41D6: mov _data_67ECD0,%ecx;");
    asm("loc_4C41DC: mov (%ecx),%eax;");
    asm("loc_4C41DE: push %edx;");
    asm("loc_4C41DF: mov 0x10(%esp),%edx;");
    asm("loc_4C41E3: push $1;");
    asm("loc_4C41E5: push %edx;");
    asm("loc_4C41E6: mov 0x14(%esp),%edx;");
    asm("loc_4C41EA: mov (%edx),%edx;");
    asm("loc_4C41EC: push $1;");
    asm("loc_4C41EE: push %edx;");
    asm("loc_4C41EF: mov 0x18(%esp),%edx;");
    asm("loc_4C41F3: push %edx;");
    asm("loc_4C41F4: calll *0x78(%eax);");
    asm("loc_4C41F7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4200() // _sub_4C4200
{
    __DEBUG_ASM(4C4200);
    // chunk 0x4C4200 _sub_4C4200
    asm("loc_4C4200: mov _data_673344,%edx;");
    asm("loc_4C4206: mov _data_67ECD0,%ecx;");
    asm("loc_4C420C: mov (%ecx),%eax;");
    asm("loc_4C420E: push %edx;");
    asm("loc_4C420F: mov 0xC(%esp),%edx;");
    asm("loc_4C4213: push $1;");
    asm("loc_4C4215: push %edx;");
    asm("loc_4C4216: mov _import_5C6210,%edx;");
    asm("loc_4C421C: mov (%edx),%edx;");
    asm("loc_4C421E: push $1;");
    asm("loc_4C4220: push %edx;");
    asm("loc_4C4221: mov 0x18(%esp),%edx;");
    asm("loc_4C4225: push %edx;");
    asm("loc_4C4226: calll *0x78(%eax);");
    asm("loc_4C4229: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4230() // _sub_4C4230
{
    __DEBUG_ASM(4C4230);
    // chunk 0x4C4230 _sub_4C4230
    asm("loc_4C4230: mov _data_673344,%edx;");
    asm("loc_4C4236: mov _data_67ECD0,%ecx;");
    asm("loc_4C423C: mov (%ecx),%eax;");
    asm("loc_4C423E: push %edx;");
    asm("loc_4C423F: mov 0x10(%esp),%edx;");
    asm("loc_4C4243: push $0;");
    asm("loc_4C4245: push %edx;");
    asm("loc_4C4246: mov 0x14(%esp),%edx;");
    asm("loc_4C424A: push %edx;");
    asm("loc_4C424B: mov _import_5C6210,%edx;");
    asm("loc_4C4251: mov (%edx),%edx;");
    asm("loc_4C4253: push %edx;");
    asm("loc_4C4254: mov 0x18(%esp),%edx;");
    asm("loc_4C4258: push %edx;");
    asm("loc_4C4259: calll *0x78(%eax);");
    asm("loc_4C425C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4260() // _sub_4C4260
{
    __DEBUG_ASM(4C4260);
    // chunk 0x4C4260 _sub_4C4260
    asm("loc_4C4260: mov _data_673344,%edx;");
    asm("loc_4C4266: mov _data_67ECD0,%ecx;");
    asm("loc_4C426C: mov (%ecx),%eax;");
    asm("loc_4C426E: sub $0x20,%esp;");
    asm("loc_4C4271: push %ebx;");
    asm("loc_4C4272: push %esi;");
    asm("loc_4C4273: mov 0x2C(%esp),%esi;");
    asm("loc_4C4277: push %edi;");
    asm("loc_4C4278: mov 0x34(%esp),%edi;");
    asm("loc_4C427C: push %edx;");
    asm("loc_4C427D: push %edi;");
    asm("loc_4C427E: push %esi;");
    asm("loc_4C427F: calll *0x7C(%eax);");
    asm("loc_4C4282: push %esi;");
    asm("loc_4C4283: mov $_data_672960,%ecx;");
    asm("loc_4C4288: xor %bl,%bl;");
    asm("loc_4C428A: calll *_import_5C6370;");
    asm("loc_4C4290: test %eax,%eax;");
    asm("loc_4C4292: je loc_4C4313;");
    asm("loc_4C4294: mov (%eax),%cl;");
    asm("loc_4C4296: mov 2(%eax),%dx;");
    asm("loc_4C429A: mov %cl,0xC(%esp);");
    asm("loc_4C429E: mov 4(%eax),%ecx;");
    asm("loc_4C42A1: mov %ecx,0x10(%esp);");
    asm("loc_4C42A5: mov 0xC(%eax),%cl;");
    asm("loc_4C42A8: mov %dx,0xE(%esp);");
    asm("loc_4C42AD: mov 8(%eax),%edx;");
    asm("loc_4C42B0: mov %cl,0x18(%esp);");
    asm("loc_4C42B4: mov 0x14(%eax),%ecx;");
    asm("loc_4C42B7: mov %edx,0x14(%esp);");
    asm("loc_4C42BB: mov 0x10(%eax),%edx;");
    asm("loc_4C42BE: mov %ecx,0x20(%esp);");
    asm("loc_4C42C2: mov _data_673384,%ecx;");
    asm("loc_4C42C8: mov %edx,0x1C(%esp);");
    asm("loc_4C42CC: mov 0x18(%eax),%dl;");
    asm("loc_4C42CF: mov 0x1C(%eax),%eax;");
    asm("loc_4C42D2: inc %ecx;");
    asm("loc_4C42D3: push %edi;");
    asm("loc_4C42D4: mov %ecx,_data_673384;");
    asm("loc_4C42DA: push %esi;");
    asm("loc_4C42DB: mov $_data_672960,%ecx;");
    asm("loc_4C42E0: mov $1,%bl;");
    asm("loc_4C42E2: mov %dl,0x2C(%esp);");
    asm("loc_4C42E6: mov %eax,0x30(%esp);");
    asm("loc_4C42EA: calll *_import_5C6438;");
    asm("loc_4C42F0: mov %eax,%esi;");
    asm("loc_4C42F2: call _sub_446BE0;");
    asm("loc_4C42F7: test %eax,%eax;");
    asm("loc_4C42F9: je loc_4C4313;");
    asm("loc_4C42FB: mov 0xE(%esp),%edx;");
    asm("loc_4C42FF: push %edi;");
    asm("loc_4C4300: lea 0x18(%esp),%ecx;");
    asm("loc_4C4304: push %ecx;");
    asm("loc_4C4305: mov 0x18(%esp),%ecx;");
    asm("loc_4C4309: push %edx;");
    asm("loc_4C430A: push %ecx;");
    asm("loc_4C430B: push %esi;");
    asm("loc_4C430C: mov %eax,%ecx;");
    asm("loc_4C430E: call _sub_447850;");
    asm("loc_4C4313: pop %edi;");
    asm("loc_4C4314: pop %esi;");
    asm("loc_4C4315: mov %bl,%al;");
    asm("loc_4C4317: pop %ebx;");
    asm("loc_4C4318: add $0x20,%esp;");
    asm("loc_4C431B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4320() // _sub_4C4320
{
    __DEBUG_ASM(4C4320);
    // chunk 0x4C4320 _sub_4C4320
    asm("loc_4C4320: sub $0x20,%esp;");
    asm("loc_4C4323: push %ebx;");
    asm("loc_4C4324: push %esi;");
    asm("loc_4C4325: mov 0x30(%esp),%esi;");
    asm("loc_4C4329: push %edi;");
    asm("loc_4C432A: push %esi;");
    asm("loc_4C432B: mov $_data_672960,%ecx;");
    asm("loc_4C4330: xor %bl,%bl;");
    asm("loc_4C4332: calll *_import_5C6370;");
    asm("loc_4C4338: test %eax,%eax;");
    asm("loc_4C433A: je loc_4C43C3;");
    asm("loc_4C4340: mov (%eax),%cl;");
    asm("loc_4C4342: mov 2(%eax),%dx;");
    asm("loc_4C4346: mov 0x38(%esp),%edi;");
    asm("loc_4C434A: mov %cl,0xC(%esp);");
    asm("loc_4C434E: mov 4(%eax),%ecx;");
    asm("loc_4C4351: mov %ecx,0x10(%esp);");
    asm("loc_4C4355: mov 0xC(%eax),%cl;");
    asm("loc_4C4358: mov %dx,0xE(%esp);");
    asm("loc_4C435D: mov 8(%eax),%edx;");
    asm("loc_4C4360: mov %cl,0x18(%esp);");
    asm("loc_4C4364: mov 0x14(%eax),%ecx;");
    asm("loc_4C4367: mov %edx,0x14(%esp);");
    asm("loc_4C436B: mov 0x10(%eax),%edx;");
    asm("loc_4C436E: mov %ecx,0x20(%esp);");
    asm("loc_4C4372: mov _data_673384,%ecx;");
    asm("loc_4C4378: mov %edx,0x1C(%esp);");
    asm("loc_4C437C: mov 0x18(%eax),%dl;");
    asm("loc_4C437F: mov 0x1C(%eax),%eax;");
    asm("loc_4C4382: inc %ecx;");
    asm("loc_4C4383: push %edi;");
    asm("loc_4C4384: mov %ecx,_data_673384;");
    asm("loc_4C438A: push %esi;");
    asm("loc_4C438B: mov $_data_672960,%ecx;");
    asm("loc_4C4390: mov $1,%bl;");
    asm("loc_4C4392: mov %dl,0x2C(%esp);");
    asm("loc_4C4396: mov %eax,0x30(%esp);");
    asm("loc_4C439A: calll *_import_5C6438;");
    asm("loc_4C43A0: mov %eax,%esi;");
    asm("loc_4C43A2: call _sub_446BE0;");
    asm("loc_4C43A7: test %eax,%eax;");
    asm("loc_4C43A9: je loc_4C43C3;");
    asm("loc_4C43AB: mov 0xE(%esp),%edx;");
    asm("loc_4C43AF: push %edi;");
    asm("loc_4C43B0: lea 0x18(%esp),%ecx;");
    asm("loc_4C43B4: push %ecx;");
    asm("loc_4C43B5: mov 0x18(%esp),%ecx;");
    asm("loc_4C43B9: push %edx;");
    asm("loc_4C43BA: push %ecx;");
    asm("loc_4C43BB: push %esi;");
    asm("loc_4C43BC: mov %eax,%ecx;");
    asm("loc_4C43BE: call _sub_447850;");
    asm("loc_4C43C3: pop %edi;");
    asm("loc_4C43C4: pop %esi;");
    asm("loc_4C43C5: mov %bl,%al;");
    asm("loc_4C43C7: pop %ebx;");
    asm("loc_4C43C8: add $0x20,%esp;");
    asm("loc_4C43CB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C43D0() // _sub_4C43D0
{
    __DEBUG_ASM(4C43D0);
    // chunk 0x4C43D0 _sub_4C43D0
    asm("loc_4C43D0: mov 4(%esp),%eax;");
    asm("loc_4C43D4: sub $0x20,%esp;");
    asm("loc_4C43D7: push %ebx;");
    asm("loc_4C43D8: push %ebp;");
    asm("loc_4C43D9: push %esi;");
    asm("loc_4C43DA: push %edi;");
    asm("loc_4C43DB: push %eax;");
    asm("loc_4C43DC: mov $_data_672960,%ecx;");
    asm("loc_4C43E1: xor %bl,%bl;");
    asm("loc_4C43E3: calll *_import_5C6370;");
    asm("loc_4C43E9: mov %eax,%esi;");
    asm("loc_4C43EB: test %esi,%esi;");
    asm("loc_4C43ED: je loc_4C452E;");
    asm("loc_4C43F3: mov _data_673384,%ecx;");
    asm("loc_4C43F9: mov 0x38(%esp),%edi;");
    asm("loc_4C43FD: inc %ecx;");
    asm("loc_4C43FE: mov %ecx,_data_673384;");
    asm("loc_4C4404: mov 8(%esi),%ecx;");
    asm("loc_4C4407: cmp (%edi),%ecx;");
    asm("loc_4C4409: mov $1,%bl;");
    asm("loc_4C440B: je loc_4C4507;");
    asm("loc_4C4411: mov (%esi),%dl;");
    asm("loc_4C4413: mov 2(%esi),%ax;");
    asm("loc_4C4417: mov %ecx,0x18(%esp);");
    asm("loc_4C441B: mov 0xC(%esi),%cl;");
    asm("loc_4C441E: mov %dl,0x10(%esp);");
    asm("loc_4C4422: mov 4(%esi),%edx;");
    asm("loc_4C4425: mov %cl,0x1C(%esp);");
    asm("loc_4C4429: mov 0x14(%esi),%ecx;");
    asm("loc_4C442C: mov %edx,0x14(%esp);");
    asm("loc_4C4430: mov 0x10(%esi),%edx;");
    asm("loc_4C4433: mov %ecx,0x24(%esp);");
    asm("loc_4C4437: mov 0x1C(%esi),%ecx;");
    asm("loc_4C443A: mov %edx,0x20(%esp);");
    asm("loc_4C443E: mov 0x18(%esi),%dl;");
    asm("loc_4C4441: push $0xFFFFFFFF;");
    asm("loc_4C4443: mov %ecx,0x30(%esp);");
    asm("loc_4C4447: push %eax;");
    asm("loc_4C4448: mov $_data_672960,%ecx;");
    asm("loc_4C444D: mov %ax,0x1A(%esp);");
    asm("loc_4C4452: mov %dl,0x30(%esp);");
    asm("loc_4C4456: calll *_import_5C6438;");
    asm("loc_4C445C: push %edi;");
    asm("loc_4C445D: lea 0x14(%esp),%ecx;");
    asm("loc_4C4461: mov %eax,%ebp;");
    asm("loc_4C4463: calll *_import_5C63A4;");
    asm("loc_4C4469: mov 0x3C(%esp),%ebx;");
    asm("loc_4C446D: push %ebx;");
    asm("loc_4C446E: lea 0x14(%esp),%ecx;");
    asm("loc_4C4472: calll *_import_5C6428;");
    asm("loc_4C4478: mov 0x40(%esp),%edx;");
    asm("loc_4C447C: push %edx;");
    asm("loc_4C447D: lea 0x14(%esp),%ecx;");
    asm("loc_4C4481: calll *_import_5C6408;");
    asm("loc_4C4487: mov 0x44(%esp),%eax;");
    asm("loc_4C448B: push %eax;");
    asm("loc_4C448C: lea 0x14(%esp),%ecx;");
    asm("loc_4C4490: calll *_import_5C6390;");
    asm("loc_4C4496: mov 0x14(%esp),%ecx;");
    asm("loc_4C449A: push %ecx;");
    asm("loc_4C449B: calll *_import_5C63A0;");
    asm("loc_4C44A1: add $4,%esp;");
    asm("loc_4C44A4: lea 0x10(%esp),%edx;");
    asm("loc_4C44A8: mov $_data_672960,%ecx;");
    asm("loc_4C44AD: push %eax;");
    asm("loc_4C44AE: push %edx;");
    asm("loc_4C44AF: calll *_import_5C6434;");
    asm("loc_4C44B5: mov %eax,0x3C(%esp);");
    asm("loc_4C44B9: call _sub_446BE0;");
    asm("loc_4C44BE: mov %eax,%esi;");
    asm("loc_4C44C0: test %esi,%esi;");
    asm("loc_4C44C2: je loc_4C44FD;");
    asm("loc_4C44C4: mov 0x24(%esp),%eax;");
    asm("loc_4C44C8: mov 0x12(%esp),%edx;");
    asm("loc_4C44CC: push %eax;");
    asm("loc_4C44CD: mov 0x18(%esp),%eax;");
    asm("loc_4C44D1: lea 0x1C(%esp),%ecx;");
    asm("loc_4C44D5: push %ecx;");
    asm("loc_4C44D6: push %edx;");
    asm("loc_4C44D7: push %eax;");
    asm("loc_4C44D8: push %ebp;");
    asm("loc_4C44D9: mov %esi,%ecx;");
    asm("loc_4C44DB: call _sub_447850;");
    asm("loc_4C44E0: mov 0x40(%esp),%ecx;");
    asm("loc_4C44E4: mov 0x12(%esp),%edx;");
    asm("loc_4C44E8: mov 0x14(%esp),%eax;");
    asm("loc_4C44EC: push %ecx;");
    asm("loc_4C44ED: mov 0x40(%esp),%ecx;");
    asm("loc_4C44F1: push %ebx;");
    asm("loc_4C44F2: push %edi;");
    asm("loc_4C44F3: push %edx;");
    asm("loc_4C44F4: push %eax;");
    asm("loc_4C44F5: push %ecx;");
    asm("loc_4C44F6: mov %esi,%ecx;");
    asm("loc_4C44F8: call _sub_4477D0;");
    asm("loc_4C44FD: pop %edi;");
    asm("loc_4C44FE: pop %esi;");
    asm("loc_4C44FF: pop %ebp;");
    asm("loc_4C4500: mov $1,%al;");
    asm("loc_4C4502: pop %ebx;");
    asm("loc_4C4503: add $0x20,%esp;");
    asm("loc_4C4506: ret;");
    asm("loc_4C4507: mov 0x3C(%esp),%edx;");
    asm("loc_4C450B: push %edx;");
    asm("loc_4C450C: mov %esi,%ecx;");
    asm("loc_4C450E: calll *_import_5C6428;");
    asm("loc_4C4514: mov 0x40(%esp),%eax;");
    asm("loc_4C4518: push %eax;");
    asm("loc_4C4519: mov %esi,%ecx;");
    asm("loc_4C451B: calll *_import_5C6408;");
    asm("loc_4C4521: mov 0x44(%esp),%ecx;");
    asm("loc_4C4525: push %ecx;");
    asm("loc_4C4526: mov %esi,%ecx;");
    asm("loc_4C4528: calll *_import_5C6390;");
    asm("loc_4C452E: pop %edi;");
    asm("loc_4C452F: pop %esi;");
    asm("loc_4C4530: pop %ebp;");
    asm("loc_4C4531: mov %bl,%al;");
    asm("loc_4C4533: pop %ebx;");
    asm("loc_4C4534: add $0x20,%esp;");
    asm("loc_4C4537: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4540() // _sub_4C4540
{
    __DEBUG_ASM(4C4540);
    // chunk 0x4C4540 _sub_4C4540
    asm("loc_4C4540: mov _data_673344,%edx;");
    asm("loc_4C4546: mov _data_67ECD0,%ecx;");
    asm("loc_4C454C: mov (%ecx),%eax;");
    asm("loc_4C454E: push %ebx;");
    asm("loc_4C454F: mov 0x10(%esp),%ebx;");
    asm("loc_4C4553: push %ebp;");
    asm("loc_4C4554: mov 0x10(%esp),%ebp;");
    asm("loc_4C4558: push %esi;");
    asm("loc_4C4559: mov 0x20(%esp),%esi;");
    asm("loc_4C455D: push %edi;");
    asm("loc_4C455E: mov 0x20(%esp),%edi;");
    asm("loc_4C4562: push %edx;");
    asm("loc_4C4563: mov (%ebp),%edx;");
    asm("loc_4C4566: push %esi;");
    asm("loc_4C4567: push %edi;");
    asm("loc_4C4568: push %ebx;");
    asm("loc_4C4569: push %edx;");
    asm("loc_4C456A: mov 0x28(%esp),%edx;");
    asm("loc_4C456E: push %edx;");
    asm("loc_4C456F: calll *0x80(%eax);");
    asm("loc_4C4575: mov 0x14(%esp),%eax;");
    asm("loc_4C4579: push %esi;");
    asm("loc_4C457A: push %edi;");
    asm("loc_4C457B: push %ebx;");
    asm("loc_4C457C: push %ebp;");
    asm("loc_4C457D: push %eax;");
    asm("loc_4C457E: call _sub_4C43D0;");
    asm("loc_4C4583: add $0x14,%esp;");
    asm("loc_4C4586: pop %edi;");
    asm("loc_4C4587: pop %esi;");
    asm("loc_4C4588: pop %ebp;");
    asm("loc_4C4589: pop %ebx;");
    asm("loc_4C458A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4590() // _sub_4C4590
{
    __DEBUG_ASM(4C4590);
    // chunk 0x4C4590 _sub_4C4590
    asm("loc_4C4590: mov 0x10(%esp),%ecx;");
    asm("loc_4C4594: mov 0x14(%esp),%eax;");
    asm("loc_4C4598: mov %ecx,0x10(%esp);");
    asm("loc_4C459C: mov 4(%esp),%ecx;");
    asm("loc_4C45A0: mov %eax,0x14(%esp);");
    asm("loc_4C45A4: mov %ecx,4(%esp);");
    asm("loc_4C45A8: jmp _sub_4C43D0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C45B0() // _sub_4C45B0
{
    __DEBUG_ASM(4C45B0);
    // chunk 0x4C45B0 _sub_4C45B0
    asm("loc_4C45B0: mov 4(%esp),%eax;");
    asm("loc_4C45B4: push %eax;");
    asm("loc_4C45B5: mov $_data_672960,%ecx;");
    asm("loc_4C45BA: calll *_import_5C6370;");
    asm("loc_4C45C0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C45D0() // _sub_4C45D0
{
    __DEBUG_ASM(4C45D0);
    // chunk 0x4C45D0 _sub_4C45D0
    asm("loc_4C45D0: push %esi;");
    asm("loc_4C45D1: mov 8(%esp),%esi;");
    asm("loc_4C45D5: push %edi;");
    asm("loc_4C45D6: mov _import_5C642C,%edi;");
    asm("loc_4C45DC: push $0;");
    asm("loc_4C45DE: push %esi;");
    asm("loc_4C45DF: mov $_data_672960,%ecx;");
    asm("loc_4C45E4: call *%edi;");
    asm("loc_4C45E6: test %eax,%eax;");
    asm("loc_4C45E8: je loc_4C4604;");
    asm("loc_4C45EA: lea (%ebx),%ebx;");
    asm("loc_4C45F0: mov 0x18(%eax),%cl;");
    asm("loc_4C45F3: test %cl,%cl;");
    asm("loc_4C45F5: je loc_4C4606;");
    asm("loc_4C45F7: push %eax;");
    asm("loc_4C45F8: push %esi;");
    asm("loc_4C45F9: mov $_data_672960,%ecx;");
    asm("loc_4C45FE: call *%edi;");
    asm("loc_4C4600: test %eax,%eax;");
    asm("loc_4C4602: jne loc_4C45F0;");
    asm("loc_4C4604: xor %eax,%eax;");
    asm("loc_4C4606: pop %edi;");
    asm("loc_4C4607: pop %esi;");
    asm("loc_4C4608: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4610() // _sub_4C4610
{
    __DEBUG_ASM(4C4610);
    // chunk 0x4C4610 _sub_4C4610
    asm("loc_4C4610: mov _data_67337C,%eax;");
    asm("loc_4C4615: flds _data_5C7474;");
    asm("loc_4C461B: test %eax,%eax;");
    asm("loc_4C461D: je loc_4C4631;");
    asm("loc_4C461F: push %eax;");
    asm("loc_4C4620: fstp %st(0);");
    asm("loc_4C4622: calll *_import_5C61FC;");
    asm("loc_4C4628: flds 0x100(%eax);");
    asm("loc_4C462E: add $4,%esp;");
    asm("loc_4C4631: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4640() // _sub_4C4640
{
    __DEBUG_ASM(4C4640);
    // chunk 0x4C4640 _sub_4C4640
    asm("loc_4C4640: mov $_data_672960,%ecx;");
    asm("loc_4C4645: jmpl *_import_5C6430;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4650() // _sub_4C4650
{
    __DEBUG_ASM(4C4650);
    // chunk 0x4C4650 _sub_4C4650
    asm("loc_4C4650: mov _data_673360,%eax;");
    asm("loc_4C4655: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4660() // _sub_4C4660
{
    __DEBUG_ASM(4C4660);
    // chunk 0x4C4660 _sub_4C4660
    asm("loc_4C4660: mov 4(%esp),%eax;");
    asm("loc_4C4664: mov %eax,_data_673360;");
    asm("loc_4C4669: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4670() // _sub_4C4670
{
    __DEBUG_ASM(4C4670);
    // chunk 0x4C4670 _sub_4C4670
    asm("loc_4C4670: mov _data_61226C,%eax;");
    asm("loc_4C4675: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4680() // _sub_4C4680
{
    __DEBUG_ASM(4C4680);
    // chunk 0x4C4680 _sub_4C4680
    asm("loc_4C4680: mov 4(%esp),%eax;");
    asm("loc_4C4684: mov %eax,_data_61226C;");
    asm("loc_4C4689: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4690() // _sub_4C4690
{
    __DEBUG_ASM(4C4690);
    // chunk 0x4C4690 _sub_4C4690
    asm("loc_4C4690: mov _data_673374,%eax;");
    asm("loc_4C4695: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C46A0() // _sub_4C46A0
{
    __DEBUG_ASM(4C46A0);
    // chunk 0x4C46A0 _sub_4C46A0
    asm("loc_4C46A0: mov 4(%esp),%eax;");
    asm("loc_4C46A4: test %eax,%eax;");
    asm("loc_4C46A6: jl loc_4C46BB;");
    asm("loc_4C46A8: cmp _data_673374,%eax;");
    asm("loc_4C46AE: jge loc_4C46BB;");
    asm("loc_4C46B0: lea (%eax,%eax,2),%eax;");
    asm("loc_4C46B3: lea _data_672978(,%eax,8),%eax;");
    asm("loc_4C46BA: ret;");
    asm("loc_4C46BB: xor %eax,%eax;");
    asm("loc_4C46BD: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C46C0() // _sub_4C46C0
{
    __DEBUG_ASM(4C46C0);
    // chunk 0x4C46C0 _sub_4C46C0
    asm("loc_4C46C0: mov _data_673374,%eax;");
    asm("loc_4C46C5: test %eax,%eax;");
    asm("loc_4C46C7: jle loc_4C46D8;");
    asm("loc_4C46C9: movl $0,_data_673374;");
    asm("loc_4C46D3: jmp _sub_4F4CD0;");
    asm("loc_4C46D8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C46E0() // _sub_4C46E0
{
    __DEBUG_ASM(4C46E0);
    // chunk 0x4C46E0 _sub_4C46E0
    asm("loc_4C46E0: mov 4(%esp),%edx;");
    asm("loc_4C46E4: test %edx,%edx;");
    asm("loc_4C46E6: jl loc_4C4741;");
    asm("loc_4C46E8: mov _data_673374,%ecx;");
    asm("loc_4C46EE: cmp %ecx,%edx;");
    asm("loc_4C46F0: jge loc_4C4741;");
    asm("loc_4C46F2: dec %ecx;");
    asm("loc_4C46F3: cmp %ecx,%edx;");
    asm("loc_4C46F5: mov %ecx,_data_673374;");
    asm("loc_4C46FB: jge loc_4C4741;");
    asm("loc_4C46FD: push %ebx;");
    asm("loc_4C46FE: lea (%edx,%edx,2),%eax;");
    asm("loc_4C4701: sub %edx,%ecx;");
    asm("loc_4C4703: push %esi;");
    asm("loc_4C4704: lea _data_672978(,%eax,8),%eax;");
    asm("loc_4C470B: mov %ecx,%edx;");
    asm("loc_4C470D: push %edi;");
    asm("loc_4C470E: mov %edi,%edi;");
    asm("loc_4C4710: dec %edx;");
    asm("loc_4C4711: lea 0x18(%eax),%ecx;");
    asm("loc_4C4714: mov %ecx,%esi;");
    asm("loc_4C4716: mov (%esi),%ebx;");
    asm("loc_4C4718: mov %eax,%edi;");
    asm("loc_4C471A: mov %ebx,(%edi);");
    asm("loc_4C471C: mov 4(%esi),%ebx;");
    asm("loc_4C471F: mov 8(%esi),%esi;");
    asm("loc_4C4722: mov %ebx,4(%edi);");
    asm("loc_4C4725: mov %esi,8(%edi);");
    asm("loc_4C4728: mov 0x28(%eax),%esi;");
    asm("loc_4C472B: mov %esi,0x10(%eax);");
    asm("loc_4C472E: mov 0x24(%eax),%esi;");
    asm("loc_4C4731: mov %esi,0xC(%eax);");
    asm("loc_4C4734: mov 0x2C(%eax),%esi;");
    asm("loc_4C4737: mov %esi,0x14(%eax);");
    asm("loc_4C473A: mov %ecx,%eax;");
    asm("loc_4C473C: jne loc_4C4710;");
    asm("loc_4C473E: pop %edi;");
    asm("loc_4C473F: pop %esi;");
    asm("loc_4C4740: pop %ebx;");
    asm("loc_4C4741: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4750() // _sub_4C4750
{
    __DEBUG_ASM(4C4750);
    // chunk 0x4C4750 _sub_4C4750
    asm("loc_4C4750: mov _data_673374,%ecx;");
    asm("loc_4C4756: xor %eax,%eax;");
    asm("loc_4C4758: test %ecx,%ecx;");
    asm("loc_4C475A: jle loc_4C4773;");
    asm("loc_4C475C: push %esi;");
    asm("loc_4C475D: mov $_data_67298C,%edx;");
    asm("loc_4C4762: mov %ecx,%esi;");
    asm("loc_4C4764: mov (%edx),%ecx;");
    asm("loc_4C4766: cmp %eax,%ecx;");
    asm("loc_4C4768: jle loc_4C476C;");
    asm("loc_4C476A: mov %ecx,%eax;");
    asm("loc_4C476C: add $0x18,%edx;");
    asm("loc_4C476F: dec %esi;");
    asm("loc_4C4770: jne loc_4C4764;");
    asm("loc_4C4772: pop %esi;");
    asm("loc_4C4773: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4780() // _sub_4C4780
{
    __DEBUG_ASM(4C4780);
    // chunk 0x4C4780 _sub_4C4780
    asm("loc_4C4780: push %esi;");
    asm("loc_4C4781: mov _data_673374,%esi;");
    asm("loc_4C4787: cmp $0x63,%esi;");
    asm("loc_4C478A: push %edi;");
    asm("loc_4C478B: jl loc_4C4792;");
    asm("loc_4C478D: pop %edi;");
    asm("loc_4C478E: xor %al,%al;");
    asm("loc_4C4790: pop %esi;");
    asm("loc_4C4791: ret;");
    asm("loc_4C4792: xor %ecx,%ecx;");
    asm("loc_4C4794: test %esi,%esi;");
    asm("loc_4C4796: jle loc_4C47B8;");
    asm("loc_4C4798: mov $_data_67298C,%edx;");
    asm("loc_4C479D: mov %esi,%edi;");
    asm("loc_4C479F: nop;");
    asm("loc_4C47A0: mov (%edx),%eax;");
    asm("loc_4C47A2: cmp %ecx,%eax;");
    asm("loc_4C47A4: jle loc_4C47A8;");
    asm("loc_4C47A6: mov %eax,%ecx;");
    asm("loc_4C47A8: add $0x18,%edx;");
    asm("loc_4C47AB: dec %edi;");
    asm("loc_4C47AC: jne loc_4C47A0;");
    asm("loc_4C47AE: cmp $0x63,%ecx;");
    asm("loc_4C47B1: jl loc_4C47B8;");
    asm("loc_4C47B3: pop %edi;");
    asm("loc_4C47B4: xor %al,%al;");
    asm("loc_4C47B6: pop %esi;");
    asm("loc_4C47B7: ret;");
    asm("loc_4C47B8: mov 0xC(%esp),%edi;");
    asm("loc_4C47BC: lea (%esi,%esi,2),%eax;");
    asm("loc_4C47BF: shl $3,%eax;");
    asm("loc_4C47C2: push %ebx;");
    asm("loc_4C47C3: mov (%edi),%ebx;");
    asm("loc_4C47C5: lea _data_672978(%eax),%edx;");
    asm("loc_4C47CB: mov %ebx,(%edx);");
    asm("loc_4C47CD: mov 4(%edi),%ebx;");
    asm("loc_4C47D0: mov %ebx,4(%edx);");
    asm("loc_4C47D3: mov 8(%edi),%edi;");
    asm("loc_4C47D6: mov %edi,8(%edx);");
    asm("loc_4C47D9: mov 0x18(%esp),%edx;");
    asm("loc_4C47DD: inc %ecx;");
    asm("loc_4C47DE: mov %edx,_data_672988(%eax);");
    asm("loc_4C47E4: mov %ecx,_data_67298C(%eax);");
    asm("loc_4C47EA: mov 0x14(%esp),%ecx;");
    asm("loc_4C47EE: pop %ebx;");
    asm("loc_4C47EF: inc %esi;");
    asm("loc_4C47F0: pop %edi;");
    asm("loc_4C47F1: mov %ecx,_data_672984(%eax);");
    asm("loc_4C47F7: mov %esi,_data_673374;");
    asm("loc_4C47FD: mov $1,%al;");
    asm("loc_4C47FF: pop %esi;");
    asm("loc_4C4800: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4810() // _sub_4C4810
{
    __DEBUG_ASM(4C4810);
    // chunk 0x4C4810 _sub_4C4810
    asm("loc_4C4810: mov _data_673358,%eax;");
    asm("loc_4C4815: and $0x3FFFFFFF,%eax;");
    asm("loc_4C481A: neg %eax;");
    asm("loc_4C481C: sbb %eax,%eax;");
    asm("loc_4C481E: neg %eax;");
    asm("loc_4C4820: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4830() // _sub_4C4830
{
    __DEBUG_ASM(4C4830);
    // chunk 0x4C4830 _sub_4C4830
    asm("loc_4C4830: mov _data_673354,%eax;");
    asm("loc_4C4835: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4840() // _sub_4C4840
{
    __DEBUG_ASM(4C4840);
    // chunk 0x4C4840 _sub_4C4840
    asm("loc_4C4840: mov 4(%esp),%eax;");
    asm("loc_4C4844: sub $0x18,%esp;");
    asm("loc_4C4847: push %ebx;");
    asm("loc_4C4848: push %esi;");
    asm("loc_4C4849: push %eax;");
    asm("loc_4C484A: mov %eax,_data_673354;");
    asm("loc_4C484F: calll *_import_5C6094;");
    asm("loc_4C4855: add $4,%esp;");
    asm("loc_4C4858: test %eax,%eax;");
    asm("loc_4C485A: je loc_4C48F7;");
    asm("loc_4C4860: mov (%eax),%edx;");
    asm("loc_4C4862: mov %eax,%ecx;");
    asm("loc_4C4864: calll *0x48(%edx);");
    asm("loc_4C4867: mov %al,%bl;");
    asm("loc_4C4869: test $0x81,%bl;");
    asm("loc_4C486C: jne loc_4C48F7;");
    asm("loc_4C4872: mov _data_673354,%esi;");
    asm("loc_4C4878: lea 0x24(%esp),%eax;");
    asm("loc_4C487C: push %eax;");
    asm("loc_4C487D: lea 0xC(%esp),%ecx;");
    asm("loc_4C4881: push %ecx;");
    asm("loc_4C4882: mov $_data_673320,%ecx;");
    asm("loc_4C4887: or $1,%bl;");
    asm("loc_4C488A: mov %esi,0x2C(%esp);");
    asm("loc_4C488E: call _sub_432240;");
    asm("loc_4C4893: mov 8(%esp),%eax;");
    asm("loc_4C4897: cmp _data_673324,%eax;");
    asm("loc_4C489D: je loc_4C48A8;");
    asm("loc_4C489F: mov 0x10(%eax),%al;");
    asm("loc_4C48A2: and %bl,%al;");
    asm("loc_4C48A4: cmp %bl,%al;");
    asm("loc_4C48A6: je loc_4C48F7;");
    asm("loc_4C48A8: lea 8(%esp),%edx;");
    asm("loc_4C48AC: push %edx;");
    asm("loc_4C48AD: lea 0x14(%esp),%eax;");
    asm("loc_4C48B1: push %eax;");
    asm("loc_4C48B2: mov $_data_673320,%ecx;");
    asm("loc_4C48B7: mov %esi,0x10(%esp);");
    asm("loc_4C48BB: movb $0,0x14(%esp);");
    asm("loc_4C48C0: call _sub_46D6D0;");
    asm("loc_4C48C5: mov 0x10(%esp),%ecx;");
    asm("loc_4C48C9: mov %bl,0x10(%ecx);");
    asm("loc_4C48CC: mov _data_67ECD0,%ecx;");
    asm("loc_4C48D2: push $9;");
    asm("loc_4C48D4: lea 0x14(%esp),%eax;");
    asm("loc_4C48D8: push %eax;");
    asm("loc_4C48D9: mov _data_673344,%eax;");
    asm("loc_4C48DE: movl $1,0x18(%esp);");
    asm("loc_4C48E6: mov %esi,0x1C(%esp);");
    asm("loc_4C48EA: mov %bl,0x20(%esp);");
    asm("loc_4C48EE: mov (%ecx),%edx;");
    asm("loc_4C48F0: push %eax;");
    asm("loc_4C48F1: calll *0x11C(%edx);");
    asm("loc_4C48F7: pop %esi;");
    asm("loc_4C48F8: pop %ebx;");
    asm("loc_4C48F9: add $0x18,%esp;");
    asm("loc_4C48FC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4900() // _sub_4C4900
{
    __DEBUG_ASM(4C4900);
    // chunk 0x4C4900 _sub_4C4900
    asm("loc_4C4900: mov $_data_673358,%eax;");
    asm("loc_4C4905: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4910() // _sub_4C4910
{
    __DEBUG_ASM(4C4910);
    // chunk 0x4C4910 _sub_4C4910
    asm("loc_4C4910: mov 4(%esp),%ecx;");
    asm("loc_4C4914: mov (%ecx),%eax;");
    asm("loc_4C4916: sub $0x18,%esp;");
    asm("loc_4C4919: mov %eax,_data_673358;");
    asm("loc_4C491E: testl $0x3FFFFFFF,(%ecx);");
    asm("loc_4C4924: push %ebx;");
    asm("loc_4C4925: push %esi;");
    asm("loc_4C4926: je loc_4C49EB;");
    asm("loc_4C492C: push %eax;");
    asm("loc_4C492D: calll *_import_5C6090;");
    asm("loc_4C4933: mov (%eax),%edx;");
    asm("loc_4C4935: add $4,%esp;");
    asm("loc_4C4938: mov %eax,%ecx;");
    asm("loc_4C493A: calll *0x10(%edx);");
    asm("loc_4C493D: push %eax;");
    asm("loc_4C493E: mov %eax,_data_673354;");
    asm("loc_4C4943: calll *_import_5C6094;");
    asm("loc_4C4949: add $4,%esp;");
    asm("loc_4C494C: test %eax,%eax;");
    asm("loc_4C494E: je loc_4C49EB;");
    asm("loc_4C4954: mov (%eax),%edx;");
    asm("loc_4C4956: mov %eax,%ecx;");
    asm("loc_4C4958: calll *0x48(%edx);");
    asm("loc_4C495B: mov %al,%bl;");
    asm("loc_4C495D: test $0x81,%bl;");
    asm("loc_4C4960: jne loc_4C49EB;");
    asm("loc_4C4966: mov _data_673354,%esi;");
    asm("loc_4C496C: lea 0x24(%esp),%eax;");
    asm("loc_4C4970: push %eax;");
    asm("loc_4C4971: lea 0xC(%esp),%ecx;");
    asm("loc_4C4975: push %ecx;");
    asm("loc_4C4976: mov $_data_673320,%ecx;");
    asm("loc_4C497B: or $1,%bl;");
    asm("loc_4C497E: mov %esi,0x2C(%esp);");
    asm("loc_4C4982: call _sub_432240;");
    asm("loc_4C4987: mov 8(%esp),%eax;");
    asm("loc_4C498B: cmp _data_673324,%eax;");
    asm("loc_4C4991: je loc_4C499C;");
    asm("loc_4C4993: mov 0x10(%eax),%al;");
    asm("loc_4C4996: and %bl,%al;");
    asm("loc_4C4998: cmp %bl,%al;");
    asm("loc_4C499A: je loc_4C49EB;");
    asm("loc_4C499C: lea 8(%esp),%edx;");
    asm("loc_4C49A0: push %edx;");
    asm("loc_4C49A1: lea 0x14(%esp),%eax;");
    asm("loc_4C49A5: push %eax;");
    asm("loc_4C49A6: mov $_data_673320,%ecx;");
    asm("loc_4C49AB: mov %esi,0x10(%esp);");
    asm("loc_4C49AF: movb $0,0x14(%esp);");
    asm("loc_4C49B4: call _sub_46D6D0;");
    asm("loc_4C49B9: mov 0x10(%esp),%ecx;");
    asm("loc_4C49BD: mov %bl,0x10(%ecx);");
    asm("loc_4C49C0: mov _data_67ECD0,%ecx;");
    asm("loc_4C49C6: push $9;");
    asm("loc_4C49C8: lea 0x14(%esp),%eax;");
    asm("loc_4C49CC: push %eax;");
    asm("loc_4C49CD: mov _data_673344,%eax;");
    asm("loc_4C49D2: movl $1,0x18(%esp);");
    asm("loc_4C49DA: mov %esi,0x1C(%esp);");
    asm("loc_4C49DE: mov %bl,0x20(%esp);");
    asm("loc_4C49E2: mov (%ecx),%edx;");
    asm("loc_4C49E4: push %eax;");
    asm("loc_4C49E5: calll *0x11C(%edx);");
    asm("loc_4C49EB: pop %esi;");
    asm("loc_4C49EC: pop %ebx;");
    asm("loc_4C49ED: add $0x18,%esp;");
    asm("loc_4C49F0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4A00() // _sub_4C4A00
{
    __DEBUG_ASM(4C4A00);
    // chunk 0x4C4A00 _sub_4C4A00
    asm("loc_4C4A00: mov _data_67335C,%eax;");
    asm("loc_4C4A05: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4A10() // _sub_4C4A10
{
    __DEBUG_ASM(4C4A10);
    // chunk 0x4C4A10 _sub_4C4A10
    asm("loc_4C4A10: mov 4(%esp),%eax;");
    asm("loc_4C4A14: mov %eax,_data_67335C;");
    asm("loc_4C4A19: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4A20() // _sub_4C4A20
{
    __DEBUG_ASM(4C4A20);
    // chunk 0x4C4A20 _sub_4C4A20
    asm("loc_4C4A20: mov $_data_6732E4,%eax;");
    asm("loc_4C4A25: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4A30() // _sub_4C4A30
{
    __DEBUG_ASM(4C4A30);
    // chunk 0x4C4A30 _sub_4C4A30
    asm("loc_4C4A30: mov 4(%esp),%eax;");
    asm("loc_4C4A34: mov (%eax),%ecx;");
    asm("loc_4C4A36: mov %ecx,_data_6732E4;");
    asm("loc_4C4A3C: mov 4(%eax),%edx;");
    asm("loc_4C4A3F: mov %edx,_data_6732E8;");
    asm("loc_4C4A45: mov 8(%eax),%eax;");
    asm("loc_4C4A48: mov %eax,_data_6732EC;");
    asm("loc_4C4A4D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4A50() // _sub_4C4A50
{
    __DEBUG_ASM(4C4A50);
    // chunk 0x4C4A50 _sub_4C4A50
    asm("loc_4C4A50: mov $_data_6732C0,%eax;");
    asm("loc_4C4A55: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4A60() // _sub_4C4A60
{
    __DEBUG_ASM(4C4A60);
    // chunk 0x4C4A60 _sub_4C4A60
    asm("loc_4C4A60: push %esi;");
    asm("loc_4C4A61: mov 8(%esp),%esi;");
    asm("loc_4C4A65: push %edi;");
    asm("loc_4C4A66: mov $9,%ecx;");
    asm("loc_4C4A6B: mov $_data_6732C0,%edi;");
    asm("loc_4C4A70: rep movsl (%esi),(%edi);");
    asm("loc_4C4A72: pop %edi;");
    asm("loc_4C4A73: pop %esi;");
    asm("loc_4C4A74: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4A80() // _sub_4C4A80
{
    __DEBUG_ASM(4C4A80);
    // chunk 0x4C4A80 _sub_4C4A80
    asm("loc_4C4A80: mov _data_673374,%eax;");
    asm("loc_4C4A85: sub $0xC,%esp;");
    asm("loc_4C4A88: test %eax,%eax;");
    asm("loc_4C4A8A: movl $0,_data_67337C;");
    asm("loc_4C4A94: movl $0,_data_673380;");
    asm("loc_4C4A9E: jle loc_4C4AAF;");
    asm("loc_4C4AA0: movl $0,_data_673374;");
    asm("loc_4C4AAA: call _sub_4F4CD0;");
    asm("loc_4C4AAF: push %esi;");
    asm("loc_4C4AB0: push %edi;");
    asm("loc_4C4AB1: mov _data_672970,%edi;");
    asm("loc_4C4AB7: mov (%edi),%esi;");
    asm("loc_4C4AB9: cmp %edi,%esi;");
    asm("loc_4C4ABB: je loc_4C4AD9;");
    asm("loc_4C4ABD: lea (%ecx),%ecx;");
    asm("loc_4C4AC0: mov %esi,%eax;");
    asm("loc_4C4AC2: mov (%esi),%esi;");
    asm("loc_4C4AC4: push %eax;");
    asm("loc_4C4AC5: lea 0xC(%esp),%eax;");
    asm("loc_4C4AC9: push %eax;");
    asm("loc_4C4ACA: mov $_data_67296C,%ecx;");
    asm("loc_4C4ACF: calll *_import_5C63AC;");
    asm("loc_4C4AD5: cmp %edi,%esi;");
    asm("loc_4C4AD7: jne loc_4C4AC0;");
    asm("loc_4C4AD9: mov _data_672964,%edi;");
    asm("loc_4C4ADF: mov (%edi),%esi;");
    asm("loc_4C4AE1: cmp %edi,%esi;");
    asm("loc_4C4AE3: je loc_4C4AFE;");
    asm("loc_4C4AE5: mov %esi,%eax;");
    asm("loc_4C4AE7: mov (%esi),%esi;");
    asm("loc_4C4AE9: push %eax;");
    asm("loc_4C4AEA: lea 0xC(%esp),%ecx;");
    asm("loc_4C4AEE: push %ecx;");
    asm("loc_4C4AEF: mov $_data_672960,%ecx;");
    asm("loc_4C4AF4: calll *_import_5C6188;");
    asm("loc_4C4AFA: cmp %edi,%esi;");
    asm("loc_4C4AFC: jne loc_4C4AE5;");
    asm("loc_4C4AFE: mov _data_672950,%eax;");
    asm("loc_4C4B03: mov (%eax),%ecx;");
    asm("loc_4C4B05: push %eax;");
    asm("loc_4C4B06: push %ecx;");
    asm("loc_4C4B07: lea 0x10(%esp),%edx;");
    asm("loc_4C4B0B: push %edx;");
    asm("loc_4C4B0C: mov $_data_67294C,%ecx;");
    asm("loc_4C4B11: call _sub_4C5A80;");
    asm("loc_4C4B16: mov _data_673324,%ecx;");
    asm("loc_4C4B1C: mov _data_673330,%edx;");
    asm("loc_4C4B22: test %edx,%edx;");
    asm("loc_4C4B24: mov (%ecx),%eax;");
    asm("loc_4C4B26: mov %ecx,%edi;");
    asm("loc_4C4B28: mov %eax,8(%esp);");
    asm("loc_4C4B2C: je loc_4C4B7B;");
    asm("loc_4C4B2E: mov %eax,%edx;");
    asm("loc_4C4B30: cmp %edx,%eax;");
    asm("loc_4C4B32: jne loc_4C4B7B;");
    asm("loc_4C4B34: mov 4(%ecx),%eax;");
    asm("loc_4C4B37: push %eax;");
    asm("loc_4C4B38: mov $_data_673320,%ecx;");
    asm("loc_4C4B3D: call _sub_4C5F60;");
    asm("loc_4C4B42: mov _data_673324,%ecx;");
    asm("loc_4C4B48: mov _data_673328,%edx;");
    asm("loc_4C4B4E: mov %edx,4(%ecx);");
    asm("loc_4C4B51: mov _data_673324,%eax;");
    asm("loc_4C4B56: movl $0,_data_673330;");
    asm("loc_4C4B60: mov %eax,(%eax);");
    asm("loc_4C4B62: mov _data_673324,%eax;");
    asm("loc_4C4B67: mov %eax,8(%eax);");
    asm("loc_4C4B6A: lea 0xC(%esp),%eax;");
    asm("loc_4C4B6E: push %eax;");
    asm("loc_4C4B6F: mov $_data_673320,%ecx;");
    asm("loc_4C4B74: call _sub_53E430;");
    asm("loc_4C4B79: jmp loc_4C4BA3;");
    asm("loc_4C4B7B: cmp %ecx,%eax;");
    asm("loc_4C4B7D: je loc_4C4BA3;");
    asm("loc_4C4B7F: nop;");
    asm("loc_4C4B80: lea 8(%esp),%ecx;");
    asm("loc_4C4B84: mov %eax,%esi;");
    asm("loc_4C4B86: call _sub_52AFA0;");
    asm("loc_4C4B8B: push %esi;");
    asm("loc_4C4B8C: lea 0x14(%esp),%ecx;");
    asm("loc_4C4B90: push %ecx;");
    asm("loc_4C4B91: mov $_data_673320,%ecx;");
    asm("loc_4C4B96: call _sub_46C8C0;");
    asm("loc_4C4B9B: mov 8(%esp),%eax;");
    asm("loc_4C4B9F: cmp %edi,%eax;");
    asm("loc_4C4BA1: jne loc_4C4B80;");
    asm("loc_4C4BA3: call _sub_4B9BB0;");
    asm("loc_4C4BA8: push $0;");
    asm("loc_4C4BAA: call _sub_4B9B20;");
    asm("loc_4C4BAF: add $4,%esp;");
    asm("loc_4C4BB2: pop %edi;");
    asm("loc_4C4BB3: pop %esi;");
    asm("loc_4C4BB4: add $0xC,%esp;");
    asm("loc_4C4BB7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4BC0() // _sub_4C4BC0
{
    __DEBUG_ASM(4C4BC0);
    // chunk 0x4C4BC0 _sub_4C4BC0
    asm("loc_4C4BC0: sub $8,%esp;");
    asm("loc_4C4BC3: push %esi;");
    asm("loc_4C4BC4: push %edi;");
    asm("loc_4C4BC5: mov _data_672970,%edi;");
    asm("loc_4C4BCB: mov (%edi),%esi;");
    asm("loc_4C4BCD: cmp %edi,%esi;");
    asm("loc_4C4BCF: je loc_4C4BEA;");
    asm("loc_4C4BD1: mov %esi,%eax;");
    asm("loc_4C4BD3: mov (%esi),%esi;");
    asm("loc_4C4BD5: push %eax;");
    asm("loc_4C4BD6: lea 0xC(%esp),%eax;");
    asm("loc_4C4BDA: push %eax;");
    asm("loc_4C4BDB: mov $_data_67296C,%ecx;");
    asm("loc_4C4BE0: calll *_import_5C63AC;");
    asm("loc_4C4BE6: cmp %edi,%esi;");
    asm("loc_4C4BE8: jne loc_4C4BD1;");
    asm("loc_4C4BEA: mov _data_672964,%edi;");
    asm("loc_4C4BF0: mov (%edi),%esi;");
    asm("loc_4C4BF2: cmp %edi,%esi;");
    asm("loc_4C4BF4: je loc_4C4C0F;");
    asm("loc_4C4BF6: mov %esi,%eax;");
    asm("loc_4C4BF8: mov (%esi),%esi;");
    asm("loc_4C4BFA: push %eax;");
    asm("loc_4C4BFB: lea 0xC(%esp),%ecx;");
    asm("loc_4C4BFF: push %ecx;");
    asm("loc_4C4C00: mov $_data_672960,%ecx;");
    asm("loc_4C4C05: calll *_import_5C6188;");
    asm("loc_4C4C0B: cmp %edi,%esi;");
    asm("loc_4C4C0D: jne loc_4C4BF6;");
    asm("loc_4C4C0F: mov _data_672950,%eax;");
    asm("loc_4C4C14: mov (%eax),%ecx;");
    asm("loc_4C4C16: push %eax;");
    asm("loc_4C4C17: push %ecx;");
    asm("loc_4C4C18: lea 0x10(%esp),%edx;");
    asm("loc_4C4C1C: push %edx;");
    asm("loc_4C4C1D: mov $_data_67294C,%ecx;");
    asm("loc_4C4C22: call _sub_4C5A80;");
    asm("loc_4C4C27: mov _data_673324,%ecx;");
    asm("loc_4C4C2D: mov _data_673330,%edx;");
    asm("loc_4C4C33: test %edx,%edx;");
    asm("loc_4C4C35: mov (%ecx),%eax;");
    asm("loc_4C4C37: mov %ecx,%edi;");
    asm("loc_4C4C39: mov %eax,8(%esp);");
    asm("loc_4C4C3D: je loc_4C4C7D;");
    asm("loc_4C4C3F: mov %eax,%edx;");
    asm("loc_4C4C41: cmp %edx,%eax;");
    asm("loc_4C4C43: jne loc_4C4C7D;");
    asm("loc_4C4C45: mov 4(%ecx),%eax;");
    asm("loc_4C4C48: push %eax;");
    asm("loc_4C4C49: mov $_data_673320,%ecx;");
    asm("loc_4C4C4E: call _sub_4C5F60;");
    asm("loc_4C4C53: mov _data_673324,%ecx;");
    asm("loc_4C4C59: mov _data_673328,%edx;");
    asm("loc_4C4C5F: mov %edx,4(%ecx);");
    asm("loc_4C4C62: mov _data_673324,%eax;");
    asm("loc_4C4C67: movl $0,_data_673330;");
    asm("loc_4C4C71: mov %eax,(%eax);");
    asm("loc_4C4C73: mov _data_673324,%eax;");
    asm("loc_4C4C78: mov %eax,8(%eax);");
    asm("loc_4C4C7B: jmp loc_4C4CA4;");
    asm("loc_4C4C7D: cmp %ecx,%eax;");
    asm("loc_4C4C7F: je loc_4C4CA4;");
    asm("loc_4C4C81: lea 8(%esp),%ecx;");
    asm("loc_4C4C85: mov %eax,%esi;");
    asm("loc_4C4C87: call _sub_52AFA0;");
    asm("loc_4C4C8C: push %esi;");
    asm("loc_4C4C8D: lea 0x10(%esp),%eax;");
    asm("loc_4C4C91: push %eax;");
    asm("loc_4C4C92: mov $_data_673320,%ecx;");
    asm("loc_4C4C97: call _sub_46C8C0;");
    asm("loc_4C4C9C: mov 8(%esp),%eax;");
    asm("loc_4C4CA0: cmp %edi,%eax;");
    asm("loc_4C4CA2: jne loc_4C4C81;");
    asm("loc_4C4CA4: call _sub_4B9BB0;");
    asm("loc_4C4CA9: push $0;");
    asm("loc_4C4CAB: call _sub_4B9B20;");
    asm("loc_4C4CB0: add $4,%esp;");
    asm("loc_4C4CB3: pop %edi;");
    asm("loc_4C4CB4: pop %esi;");
    asm("loc_4C4CB5: add $8,%esp;");
    asm("loc_4C4CB8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4CC0() // _sub_4C4CC0
{
    __DEBUG_ASM(4C4CC0);
    // chunk 0x4C4CC0 _sub_4C4CC0
    asm("loc_4C4CC0: mov _data_673344,%edx;");
    asm("loc_4C4CC6: mov _data_67ECD0,%ecx;");
    asm("loc_4C4CCC: mov (%ecx),%eax;");
    asm("loc_4C4CCE: push %edx;");
    asm("loc_4C4CCF: mov 8(%esp),%edx;");
    asm("loc_4C4CD3: push %edx;");
    asm("loc_4C4CD4: calll *0x84(%eax);");
    asm("loc_4C4CDA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4CE0() // _sub_4C4CE0
{
    __DEBUG_ASM(4C4CE0);
    // chunk 0x4C4CE0 _sub_4C4CE0
    asm("loc_4C4CE0: mov _data_673364,%eax;");
    asm("loc_4C4CE5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4CF0() // _sub_4C4CF0
{
    __DEBUG_ASM(4C4CF0);
    // chunk 0x4C4CF0 _sub_4C4CF0
    asm("loc_4C4CF0: mov 8(%esp),%al;");
    asm("loc_4C4CF4: test %al,%al;");
    asm("loc_4C4CF6: push %esi;");
    asm("loc_4C4CF7: jne loc_4C4D17;");
    asm("loc_4C4CF9: mov 8(%esp),%esi;");
    asm("loc_4C4CFD: cmp _data_673364,%esi;");
    asm("loc_4C4D03: jle loc_4C4D0F;");
    asm("loc_4C4D05: push $0x26;");
    asm("loc_4C4D07: call _sub_5645C0;");
    asm("loc_4C4D0C: add $4,%esp;");
    asm("loc_4C4D0F: mov %esi,_data_673364;");
    asm("loc_4C4D15: pop %esi;");
    asm("loc_4C4D16: ret;");
    asm("loc_4C4D17: mov 8(%esp),%eax;");
    asm("loc_4C4D1B: mov %eax,_data_673364;");
    asm("loc_4C4D20: pop %esi;");
    asm("loc_4C4D21: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4D30() // _sub_4C4D30
{
    __DEBUG_ASM(4C4D30);
    // chunk 0x4C4D30 _sub_4C4D30
    asm("loc_4C4D30: mov _data_673344,%edx;");
    asm("loc_4C4D36: mov _data_67ECD0,%ecx;");
    asm("loc_4C4D3C: mov (%ecx),%eax;");
    asm("loc_4C4D3E: push %edx;");
    asm("loc_4C4D3F: mov 8(%esp),%edx;");
    asm("loc_4C4D43: push %edx;");
    asm("loc_4C4D44: calll *0x88(%eax);");
    asm("loc_4C4D4A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4D50() // _sub_4C4D50
{
    __DEBUG_ASM(4C4D50);
    // chunk 0x4C4D50 _sub_4C4D50
    asm("loc_4C4D50: mov _data_673344,%edx;");
    asm("loc_4C4D56: mov _data_67ECD0,%ecx;");
    asm("loc_4C4D5C: mov (%ecx),%eax;");
    asm("loc_4C4D5E: push %edx;");
    asm("loc_4C4D5F: mov 8(%esp),%edx;");
    asm("loc_4C4D63: neg %edx;");
    asm("loc_4C4D65: push %edx;");
    asm("loc_4C4D66: calll *0x88(%eax);");
    asm("loc_4C4D6C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4D70() // _sub_4C4D70
{
    __DEBUG_ASM(4C4D70);
    // chunk 0x4C4D70 _sub_4C4D70
    asm("loc_4C4D70: mov 4(%esp),%eax;");
    asm("loc_4C4D74: mov %eax,_data_673368;");
    asm("loc_4C4D79: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4D80() // _sub_4C4D80
{
    __DEBUG_ASM(4C4D80);
    // chunk 0x4C4D80 _sub_4C4D80
    asm("loc_4C4D80: mov 4(%esp),%eax;");
    asm("loc_4C4D84: mov %eax,_data_67336C;");
    asm("loc_4C4D89: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4D90() // _sub_4C4D90
{
    __DEBUG_ASM(4C4D90);
    // chunk 0x4C4D90 _sub_4C4D90
    asm("loc_4C4D90: mov 4(%esp),%eax;");
    asm("loc_4C4D94: mov %eax,_data_673370;");
    asm("loc_4C4D99: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4DA0() // _sub_4C4DA0
{
    __DEBUG_ASM(4C4DA0);
    // chunk 0x4C4DA0 _sub_4C4DA0
    asm("loc_4C4DA0: sub $8,%esp;");
    asm("loc_4C4DA3: lea 0xC(%esp),%eax;");
    asm("loc_4C4DA7: push %eax;");
    asm("loc_4C4DA8: mov $_data_673320,%ecx;");
    asm("loc_4C4DAD: call _sub_52C7A0;");
    asm("loc_4C4DB2: mov _data_673324,%ecx;");
    asm("loc_4C4DB8: cmp %ecx,%eax;");
    asm("loc_4C4DBA: mov %eax,(%esp);");
    asm("loc_4C4DBE: je loc_4C4DCF;");
    asm("loc_4C4DC0: mov 0xC(%esp),%edx;");
    asm("loc_4C4DC4: cmp 0xC(%eax),%edx;");
    asm("loc_4C4DC7: jb loc_4C4DCF;");
    asm("loc_4C4DC9: lea (%esp),%eax;");
    asm("loc_4C4DCD: jmp loc_4C4DD7;");
    asm("loc_4C4DCF: mov %ecx,4(%esp);");
    asm("loc_4C4DD3: lea 4(%esp),%eax;");
    asm("loc_4C4DD7: mov (%eax),%eax;");
    asm("loc_4C4DD9: cmp %ecx,%eax;");
    asm("loc_4C4DDB: je loc_4C4DEC;");
    asm("loc_4C4DDD: mov 0x10(%eax),%al;");
    asm("loc_4C4DE0: mov 0x10(%esp),%ecx;");
    asm("loc_4C4DE4: mov %al,(%ecx);");
    asm("loc_4C4DE6: mov $1,%al;");
    asm("loc_4C4DE8: add $8,%esp;");
    asm("loc_4C4DEB: ret;");
    asm("loc_4C4DEC: xor %al,%al;");
    asm("loc_4C4DEE: add $8,%esp;");
    asm("loc_4C4DF1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4E00() // _sub_4C4E00
{
    __DEBUG_ASM(4C4E00);
    // chunk 0x4C4E00 _sub_4C4E00
    asm("loc_4C4E00: sub $0x18,%esp;");
    asm("loc_4C4E03: push %ebx;");
    asm("loc_4C4E04: push %esi;");
    asm("loc_4C4E05: mov 0x24(%esp),%esi;");
    asm("loc_4C4E09: lea 0x24(%esp),%eax;");
    asm("loc_4C4E0D: push %eax;");
    asm("loc_4C4E0E: lea 0xC(%esp),%ecx;");
    asm("loc_4C4E12: push %ecx;");
    asm("loc_4C4E13: mov $_data_673320,%ecx;");
    asm("loc_4C4E18: mov %esi,0x2C(%esp);");
    asm("loc_4C4E1C: call _sub_432240;");
    asm("loc_4C4E21: mov 8(%esp),%eax;");
    asm("loc_4C4E25: cmp _data_673324,%eax;");
    asm("loc_4C4E2B: mov 0x28(%esp),%bl;");
    asm("loc_4C4E2F: je loc_4C4E3A;");
    asm("loc_4C4E31: mov 0x10(%eax),%al;");
    asm("loc_4C4E34: and %bl,%al;");
    asm("loc_4C4E36: cmp %bl,%al;");
    asm("loc_4C4E38: je loc_4C4E91;");
    asm("loc_4C4E3A: lea 8(%esp),%edx;");
    asm("loc_4C4E3E: push %edx;");
    asm("loc_4C4E3F: lea 0x14(%esp),%eax;");
    asm("loc_4C4E43: push %eax;");
    asm("loc_4C4E44: mov $_data_673320,%ecx;");
    asm("loc_4C4E49: mov %esi,0x10(%esp);");
    asm("loc_4C4E4D: movb $0,0x14(%esp);");
    asm("loc_4C4E52: call _sub_46D6D0;");
    asm("loc_4C4E57: mov 0x2C(%esp),%al;");
    asm("loc_4C4E5B: test %al,%al;");
    asm("loc_4C4E5D: mov 0x10(%esp),%ecx;");
    asm("loc_4C4E61: mov %bl,0x10(%ecx);");
    asm("loc_4C4E64: je loc_4C4E91;");
    asm("loc_4C4E66: mov _data_67ECD0,%ecx;");
    asm("loc_4C4E6C: push $9;");
    asm("loc_4C4E6E: lea 0x14(%esp),%eax;");
    asm("loc_4C4E72: push %eax;");
    asm("loc_4C4E73: mov _data_673344,%eax;");
    asm("loc_4C4E78: movl $1,0x18(%esp);");
    asm("loc_4C4E80: mov %esi,0x1C(%esp);");
    asm("loc_4C4E84: mov %bl,0x20(%esp);");
    asm("loc_4C4E88: mov (%ecx),%edx;");
    asm("loc_4C4E8A: push %eax;");
    asm("loc_4C4E8B: calll *0x11C(%edx);");
    asm("loc_4C4E91: pop %esi;");
    asm("loc_4C4E92: pop %ebx;");
    asm("loc_4C4E93: add $0x18,%esp;");
    asm("loc_4C4E96: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4EA0() // _sub_4C4EA0
{
    __DEBUG_ASM(4C4EA0);
    // chunk 0x4C4EA0 _sub_4C4EA0
    asm("loc_4C4EA0: mov _data_673390,%eax;");
    asm("loc_4C4EA5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4EB0() // _sub_4C4EB0
{
    __DEBUG_ASM(4C4EB0);
    // chunk 0x4C4EB0 _sub_4C4EB0
    asm("loc_4C4EB0: sub $0x80,%esp;");
    asm("loc_4C4EB6: mov _data_61226C,%ecx;");
    asm("loc_4C4EBC: mov 0x8C(%esp),%eax;");
    asm("loc_4C4EC3: mov 0x84(%esp),%edx;");
    asm("loc_4C4ECA: mov %eax,_data_673390;");
    asm("loc_4C4ECF: mov %ecx,(%esp);");
    asm("loc_4C4ED3: mov (%edx),%ecx;");
    asm("loc_4C4ED5: mov %ecx,0xC(%esp);");
    asm("loc_4C4ED9: mov 4(%edx),%ecx;");
    asm("loc_4C4EDC: mov 8(%edx),%edx;");
    asm("loc_4C4EDF: mov %ecx,0x10(%esp);");
    asm("loc_4C4EE3: mov _data_673354,%ecx;");
    asm("loc_4C4EE9: mov %edx,0x14(%esp);");
    asm("loc_4C4EED: mov 0x88(%esp),%edx;");
    asm("loc_4C4EF4: mov %ecx,0x1C(%esp);");
    asm("loc_4C4EF8: mov (%edx),%ecx;");
    asm("loc_4C4EFA: xor %eax,%eax;");
    asm("loc_4C4EFC: mov %ecx,0x20(%esp);");
    asm("loc_4C4F00: mov 4(%edx),%ecx;");
    asm("loc_4C4F03: mov 8(%edx),%edx;");
    asm("loc_4C4F06: mov %al,8(%esp);");
    asm("loc_4C4F0A: mov %eax,0x18(%esp);");
    asm("loc_4C4F0E: mov %ecx,0x24(%esp);");
    asm("loc_4C4F12: mov 0x90(%esp),%ecx;");
    asm("loc_4C4F19: mov %eax,0x2C(%esp);");
    asm("loc_4C4F1D: push $0x34;");
    asm("loc_4C4F1F: lea 4(%esp),%eax;");
    asm("loc_4C4F23: mov %ecx,0x34(%esp);");
    asm("loc_4C4F27: mov _data_67ECD0,%ecx;");
    asm("loc_4C4F2D: push %eax;");
    asm("loc_4C4F2E: mov _data_673344,%eax;");
    asm("loc_4C4F33: movl $2,0xC(%esp);");
    asm("loc_4C4F3B: mov %edx,0x30(%esp);");
    asm("loc_4C4F3F: mov (%ecx),%edx;");
    asm("loc_4C4F41: push %eax;");
    asm("loc_4C4F42: calll *0x120(%edx);");
    asm("loc_4C4F48: add $0x80,%esp;");
    asm("loc_4C4F4E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4F50() // _sub_4C4F50
{
    __DEBUG_ASM(4C4F50);
    // chunk 0x4C4F50 _sub_4C4F50
    asm("loc_4C4F50: mov _data_673344,%edx;");
    asm("loc_4C4F56: mov _data_67ECD0,%ecx;");
    asm("loc_4C4F5C: mov (%ecx),%eax;");
    asm("loc_4C4F5E: push %edx;");
    asm("loc_4C4F5F: mov 8(%esp),%edx;");
    asm("loc_4C4F63: push %edx;");
    asm("loc_4C4F64: calll *0x68(%eax);");
    asm("loc_4C4F67: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4F70() // _sub_4C4F70
{
    __DEBUG_ASM(4C4F70);
    // chunk 0x4C4F70 _sub_4C4F70
    asm("loc_4C4F70: flds _data_673380;");
    asm("loc_4C4F76: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4F80() // _sub_4C4F80
{
    __DEBUG_ASM(4C4F80);
    // chunk 0x4C4F80 _sub_4C4F80
    asm("loc_4C4F80: mov 4(%esp),%eax;");
    asm("loc_4C4F84: mov %eax,_data_673380;");
    asm("loc_4C4F89: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4F90() // _sub_4C4F90
{
    __DEBUG_ASM(4C4F90);
    // chunk 0x4C4F90 _sub_4C4F90
    asm("loc_4C4F90: mov _data_673384,%eax;");
    asm("loc_4C4F95: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4FA0() // _sub_4C4FA0
{
    __DEBUG_ASM(4C4FA0);
    // chunk 0x4C4FA0 _sub_4C4FA0
    asm("loc_4C4FA0: mov _data_673388,%eax;");
    asm("loc_4C4FA5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4FB0() // _sub_4C4FB0
{
    __DEBUG_ASM(4C4FB0);
    // chunk 0x4C4FB0 _sub_4C4FB0
    asm("loc_4C4FB0: mov _data_672950,%ecx;");
    asm("loc_4C4FB6: mov (%ecx),%eax;");
    asm("loc_4C4FB8: cmp %ecx,%eax;");
    asm("loc_4C4FBA: jne loc_4C4FBF;");
    asm("loc_4C4FBC: xor %eax,%eax;");
    asm("loc_4C4FBE: ret;");
    asm("loc_4C4FBF: mov 0x14(%eax),%edx;");
    asm("loc_4C4FC2: test %edx,%edx;");
    asm("loc_4C4FC4: jne loc_4C4FC9;");
    asm("loc_4C4FC6: xor %eax,%eax;");
    asm("loc_4C4FC8: ret;");
    asm("loc_4C4FC9: mov 0x18(%eax),%ecx;");
    asm("loc_4C4FCC: sub %edx,%ecx;");
    asm("loc_4C4FCE: mov $0x92492493,%eax;");
    asm("loc_4C4FD3: imul %ecx;");
    asm("loc_4C4FD5: add %ecx,%edx;");
    asm("loc_4C4FD7: sar $4,%edx;");
    asm("loc_4C4FDA: mov %edx,%eax;");
    asm("loc_4C4FDC: shr $0x1F,%eax;");
    asm("loc_4C4FDF: add %eax,%edx;");
    asm("loc_4C4FE1: mov %edx,%eax;");
    asm("loc_4C4FE3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C4FF0() // _sub_4C4FF0
{
    __DEBUG_ASM(4C4FF0);
    // chunk 0x4C4FF0 _sub_4C4FF0
    asm("loc_4C4FF0: mov _data_672950,%eax;");
    asm("loc_4C4FF5: push %esi;");
    asm("loc_4C4FF6: mov (%eax),%esi;");
    asm("loc_4C4FF8: cmp %eax,%esi;");
    asm("loc_4C4FFA: push %edi;");
    asm("loc_4C4FFB: je loc_4C5035;");
    asm("loc_4C4FFD: mov 0xC(%esp),%edi;");
    asm("loc_4C5001: test %edi,%edi;");
    asm("loc_4C5003: jl loc_4C5035;");
    asm("loc_4C5005: mov 0x14(%esi),%eax;");
    asm("loc_4C5008: test %eax,%eax;");
    asm("loc_4C500A: je loc_4C5035;");
    asm("loc_4C500C: mov 0x18(%esi),%ecx;");
    asm("loc_4C500F: sub %eax,%ecx;");
    asm("loc_4C5011: mov $0x92492493,%eax;");
    asm("loc_4C5016: imul %ecx;");
    asm("loc_4C5018: add %ecx,%edx;");
    asm("loc_4C501A: sar $4,%edx;");
    asm("loc_4C501D: mov %edx,%eax;");
    asm("loc_4C501F: shr $0x1F,%eax;");
    asm("loc_4C5022: add %eax,%edx;");
    asm("loc_4C5024: cmp %edx,%edi;");
    asm("loc_4C5026: jae loc_4C5035;");
    asm("loc_4C5028: mov 0x14(%esi),%ecx;");
    asm("loc_4C502B: mov %edi,%eax;");
    asm("loc_4C502D: imul $0x1C,%eax;");
    asm("loc_4C5030: pop %edi;");
    asm("loc_4C5031: add %ecx,%eax;");
    asm("loc_4C5033: pop %esi;");
    asm("loc_4C5034: ret;");
    asm("loc_4C5035: pop %edi;");
    asm("loc_4C5036: xor %eax,%eax;");
    asm("loc_4C5038: pop %esi;");
    asm("loc_4C5039: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5040() // _sub_4C5040
{
    __DEBUG_ASM(4C5040);
    // chunk 0x4C5040 _sub_4C5040
    asm("loc_4C5040: mov _data_672950,%ecx;");
    asm("loc_4C5046: mov (%ecx),%eax;");
    asm("loc_4C5048: cmp %ecx,%eax;");
    asm("loc_4C504A: jne loc_4C504F;");
    asm("loc_4C504C: xor %eax,%eax;");
    asm("loc_4C504E: ret;");
    asm("loc_4C504F: add $0x10,%eax;");
    asm("loc_4C5052: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5060() // _sub_4C5060
{
    __DEBUG_ASM(4C5060);
    // chunk 0x4C5060 _sub_4C5060
    asm("loc_4C5060: push $0;");
    asm("loc_4C5062: mov $_data_6728D8,%ecx;");
    asm("loc_4C5067: call _sub_4C5940;");
    asm("loc_4C506C: push $_sub_4C5080;");
    asm("loc_4C5071: call _sub_5B7E6C;");
    asm("loc_4C5076: pop %ecx;");
    asm("loc_4C5077: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5080() // _unknown_libname_44
{
    __DEBUG_ASM(4C5080);
    // chunk 0x4C5080 _sub_4C5080
    asm("loc_4C5080: mov $_data_6728D8,%ecx;");
    asm("loc_4C5085: jmp _sub_5154F0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5090() // _sub_4C5090
{
    __DEBUG_ASM(4C5090);
    // chunk 0x4C5090 _sub_4C5090
    asm("loc_4C5090: push %ecx;");
    asm("loc_4C5091: lea (%esp),%eax;");
    asm("loc_4C5095: push %esi;");
    asm("loc_4C5096: push %eax;");
    asm("loc_4C5097: movb $1,_data_673398;");
    asm("loc_4C509E: movl $2,8(%esp);");
    asm("loc_4C50A6: call _sub_540FC0;");
    asm("loc_4C50AB: add $4,%esp;");
    asm("loc_4C50AE: test %eax,%eax;");
    asm("loc_4C50B0: je loc_4C510A;");
    asm("loc_4C50B2: mov _data_673394,%edx;");
    asm("loc_4C50B8: lea 0xC(%eax),%ecx;");
    asm("loc_4C50BB: test %ecx,%ecx;");
    asm("loc_4C50BD: je loc_4C50D7;");
    asm("loc_4C50BF: mov 4(%ecx),%ecx;");
    asm("loc_4C50C2: test %ecx,%ecx;");
    asm("loc_4C50C4: je loc_4C50D7;");
    asm("loc_4C50C6: mov 0x4C(%ecx),%esi;");
    asm("loc_4C50C9: and $0x303,%esi;");
    asm("loc_4C50CF: cmp $0x303,%esi;");
    asm("loc_4C50D5: je loc_4C50D9;");
    asm("loc_4C50D7: xor %ecx,%ecx;");
    asm("loc_4C50D9: cmp %edx,0x160(%ecx);");
    asm("loc_4C50DF: je loc_4C50EB;");
    asm("loc_4C50E1: mov 0x14(%eax),%eax;");
    asm("loc_4C50E4: test %eax,%eax;");
    asm("loc_4C50E6: jne loc_4C50B8;");
    asm("loc_4C50E8: pop %esi;");
    asm("loc_4C50E9: pop %ecx;");
    asm("loc_4C50EA: ret;");
    asm("loc_4C50EB: test %eax,%eax;");
    asm("loc_4C50ED: je loc_4C50F4;");
    asm("loc_4C50EF: add $8,%eax;");
    asm("loc_4C50F2: jmp loc_4C50F6;");
    asm("loc_4C50F4: xor %eax,%eax;");
    asm("loc_4C50F6: cmp _data_6728D8,%eax;");
    asm("loc_4C50FC: je loc_4C510A;");
    asm("loc_4C50FE: push %eax;");
    asm("loc_4C50FF: mov $_data_6728D8,%ecx;");
    asm("loc_4C5104: calll *_import_5C62A8;");
    asm("loc_4C510A: pop %esi;");
    asm("loc_4C510B: pop %ecx;");
    asm("loc_4C510C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5110() // _sub_4C5110
{
    __DEBUG_ASM(4C5110);
    // chunk 0x4C5110 _sub_4C5110
    asm("loc_4C5110: mov (%ecx),%eax;");
    asm("loc_4C5112: sub $8,%esp;");
    asm("loc_4C5115: test %eax,%eax;");
    asm("loc_4C5117: je loc_4C5134;");
    asm("loc_4C5119: lea (%esp),%esp;");
    asm("loc_4C5120: movzwl 8(%eax),%ecx;");
    asm("loc_4C5124: cmp $0x42,%ecx;");
    asm("loc_4C5127: je loc_4C514C;");
    asm("loc_4C5129: cmp $0x52,%ecx;");
    asm("loc_4C512C: je loc_4C513A;");
    asm("loc_4C512E: mov (%eax),%eax;");
    asm("loc_4C5130: test %eax,%eax;");
    asm("loc_4C5132: jne loc_4C5120;");
    asm("loc_4C5134: xor %eax,%eax;");
    asm("loc_4C5136: add $8,%esp;");
    asm("loc_4C5139: ret;");
    asm("loc_4C513A: mov 4(%eax),%eax;");
    asm("loc_4C513D: push $0;");
    asm("loc_4C513F: push %eax;");
    asm("loc_4C5140: call _sub_541890;");
    asm("loc_4C5145: add $8,%esp;");
    asm("loc_4C5148: add $8,%esp;");
    asm("loc_4C514B: ret;");
    asm("loc_4C514C: push %ebp;");
    asm("loc_4C514D: mov _import_5C62A8,%ebp;");
    asm("loc_4C5153: push %esi;");
    asm("loc_4C5154: mov 4(%eax),%esi;");
    asm("loc_4C5157: cmp %esi,_data_673394;");
    asm("loc_4C515D: je loc_4C5229;");
    asm("loc_4C5163: mov _data_6728D8,%eax;");
    asm("loc_4C5168: test %eax,%eax;");
    asm("loc_4C516A: mov %esi,_data_673394;");
    asm("loc_4C5170: movl $0,_data_6728E0;");
    asm("loc_4C517A: je loc_4C5185;");
    asm("loc_4C517C: push $0;");
    asm("loc_4C517E: mov $_data_6728D8,%ecx;");
    asm("loc_4C5183: call *%ebp;");
    asm("loc_4C5185: push %esi;");
    asm("loc_4C5186: movb $0,_data_673398;");
    asm("loc_4C518D: calll *_import_5C6090;");
    asm("loc_4C5193: add $4,%esp;");
    asm("loc_4C5196: test %eax,%eax;");
    asm("loc_4C5198: je loc_4C5229;");
    asm("loc_4C519E: mov (%eax),%edx;");
    asm("loc_4C51A0: mov %eax,%ecx;");
    asm("loc_4C51A2: calll *0x10(%edx);");
    asm("loc_4C51A5: cmp _data_673354,%eax;");
    asm("loc_4C51AB: mov %eax,_data_6728E0;");
    asm("loc_4C51B0: jne loc_4C52B3;");
    asm("loc_4C51B6: lea 8(%esp),%eax;");
    asm("loc_4C51BA: push %eax;");
    asm("loc_4C51BB: movb $1,_data_673398;");
    asm("loc_4C51C2: movl $2,0xC(%esp);");
    asm("loc_4C51CA: call _sub_540FC0;");
    asm("loc_4C51CF: add $4,%esp;");
    asm("loc_4C51D2: test %eax,%eax;");
    asm("loc_4C51D4: je loc_4C5229;");
    asm("loc_4C51D6: mov _data_673394,%edx;");
    asm("loc_4C51DC: lea 0xC(%eax),%ecx;");
    asm("loc_4C51DF: test %ecx,%ecx;");
    asm("loc_4C51E1: je loc_4C51FB;");
    asm("loc_4C51E3: mov 4(%ecx),%ecx;");
    asm("loc_4C51E6: test %ecx,%ecx;");
    asm("loc_4C51E8: je loc_4C51FB;");
    asm("loc_4C51EA: mov 0x4C(%ecx),%esi;");
    asm("loc_4C51ED: and $0x303,%esi;");
    asm("loc_4C51F3: cmp $0x303,%esi;");
    asm("loc_4C51F9: je loc_4C51FD;");
    asm("loc_4C51FB: xor %ecx,%ecx;");
    asm("loc_4C51FD: cmp %edx,0x160(%ecx);");
    asm("loc_4C5203: je loc_4C520E;");
    asm("loc_4C5205: mov 0x14(%eax),%eax;");
    asm("loc_4C5208: test %eax,%eax;");
    asm("loc_4C520A: jne loc_4C51DC;");
    asm("loc_4C520C: jmp loc_4C5229;");
    asm("loc_4C520E: test %eax,%eax;");
    asm("loc_4C5210: je loc_4C5217;");
    asm("loc_4C5212: add $8,%eax;");
    asm("loc_4C5215: jmp loc_4C5219;");
    asm("loc_4C5217: xor %eax,%eax;");
    asm("loc_4C5219: cmp _data_6728D8,%eax;");
    asm("loc_4C521F: je loc_4C5229;");
    asm("loc_4C5221: push %eax;");
    asm("loc_4C5222: mov $_data_6728D8,%ecx;");
    asm("loc_4C5227: call *%ebp;");
    asm("loc_4C5229: mov _data_6728E0,%ecx;");
    asm("loc_4C522F: cmp _data_673354,%ecx;");
    asm("loc_4C5235: jne loc_4C52B3;");
    asm("loc_4C5237: mov _data_673398,%al;");
    asm("loc_4C523C: test %al,%al;");
    asm("loc_4C523E: jne loc_4C52B3;");
    asm("loc_4C5240: lea 0xC(%esp),%edx;");
    asm("loc_4C5244: push %edx;");
    asm("loc_4C5245: movb $1,_data_673398;");
    asm("loc_4C524C: movl $2,0x10(%esp);");
    asm("loc_4C5254: call _sub_540FC0;");
    asm("loc_4C5259: add $4,%esp;");
    asm("loc_4C525C: test %eax,%eax;");
    asm("loc_4C525E: je loc_4C52B3;");
    asm("loc_4C5260: mov _data_673394,%edx;");
    asm("loc_4C5266: lea 0xC(%eax),%ecx;");
    asm("loc_4C5269: test %ecx,%ecx;");
    asm("loc_4C526B: je loc_4C5285;");
    asm("loc_4C526D: mov 4(%ecx),%ecx;");
    asm("loc_4C5270: test %ecx,%ecx;");
    asm("loc_4C5272: je loc_4C5285;");
    asm("loc_4C5274: mov 0x4C(%ecx),%esi;");
    asm("loc_4C5277: and $0x303,%esi;");
    asm("loc_4C527D: cmp $0x303,%esi;");
    asm("loc_4C5283: je loc_4C5287;");
    asm("loc_4C5285: xor %ecx,%ecx;");
    asm("loc_4C5287: cmp %edx,0x160(%ecx);");
    asm("loc_4C528D: je loc_4C5298;");
    asm("loc_4C528F: mov 0x14(%eax),%eax;");
    asm("loc_4C5292: test %eax,%eax;");
    asm("loc_4C5294: jne loc_4C5266;");
    asm("loc_4C5296: jmp loc_4C52B3;");
    asm("loc_4C5298: test %eax,%eax;");
    asm("loc_4C529A: je loc_4C52A1;");
    asm("loc_4C529C: add $8,%eax;");
    asm("loc_4C529F: jmp loc_4C52A3;");
    asm("loc_4C52A1: xor %eax,%eax;");
    asm("loc_4C52A3: cmp _data_6728D8,%eax;");
    asm("loc_4C52A9: je loc_4C52B3;");
    asm("loc_4C52AB: push %eax;");
    asm("loc_4C52AC: mov $_data_6728D8,%ecx;");
    asm("loc_4C52B1: call *%ebp;");
    asm("loc_4C52B3: mov _data_6728D8,%eax;");
    asm("loc_4C52B8: test %eax,%eax;");
    asm("loc_4C52BA: pop %esi;");
    asm("loc_4C52BB: pop %ebp;");
    asm("loc_4C52BC: je loc_4C5134;");
    asm("loc_4C52C2: add $0xFFFFFFF8,%eax;");
    asm("loc_4C52C5: add $8,%esp;");
    asm("loc_4C52C8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C52D0() // _sub_4C52D0
{
    __DEBUG_ASM(4C52D0);
    // chunk 0x4C52D0 _sub_4C52D0
    asm("loc_4C52D0: push %ecx;");
    asm("loc_4C52D1: push %edi;");
    asm("loc_4C52D2: mov %ecx,%edi;");
    asm("loc_4C52D4: mov (%edi),%eax;");
    asm("loc_4C52D6: test %eax,%eax;");
    asm("loc_4C52D8: je loc_4C52F4;");
    asm("loc_4C52DA: lea (%ebx),%ebx;");
    asm("loc_4C52E0: movzwl 8(%eax),%ecx;");
    asm("loc_4C52E4: cmp $0x42,%ecx;");
    asm("loc_4C52E7: je loc_4C532D;");
    asm("loc_4C52E9: cmp $0x52,%ecx;");
    asm("loc_4C52EC: je loc_4C531A;");
    asm("loc_4C52EE: mov (%eax),%eax;");
    asm("loc_4C52F0: test %eax,%eax;");
    asm("loc_4C52F2: jne loc_4C52E0;");
    asm("loc_4C52F4: mov (%edi),%eax;");
    asm("loc_4C52F6: test %eax,%eax;");
    asm("loc_4C52F8: je loc_4C547C;");
    asm("loc_4C52FE: mov $0x4E,%ecx;");
    asm("loc_4C5303: cmp %cx,8(%eax);");
    asm("loc_4C5307: je loc_4C5453;");
    asm("loc_4C530D: mov (%eax),%eax;");
    asm("loc_4C530F: test %eax,%eax;");
    asm("loc_4C5311: jne loc_4C5303;");
    asm("loc_4C5313: xor %al,%al;");
    asm("loc_4C5315: pop %edi;");
    asm("loc_4C5316: pop %ecx;");
    asm("loc_4C5317: ret $8;");
    asm("loc_4C531A: mov 4(%eax),%eax;");
    asm("loc_4C531D: push $0;");
    asm("loc_4C531F: push %eax;");
    asm("loc_4C5320: call _sub_541890;");
    asm("loc_4C5325: add $8,%esp;");
    asm("loc_4C5328: jmp loc_4C541E;");
    asm("loc_4C532D: push %esi;");
    asm("loc_4C532E: mov 4(%eax),%esi;");
    asm("loc_4C5331: cmp %esi,_data_673394;");
    asm("loc_4C5337: je loc_4C5388;");
    asm("loc_4C5339: push $0;");
    asm("loc_4C533B: mov $_data_6728D8,%ecx;");
    asm("loc_4C5340: mov %esi,_data_673394;");
    asm("loc_4C5346: movl $0,_data_6728E0;");
    asm("loc_4C5350: calll *_import_5C645C;");
    asm("loc_4C5356: push %esi;");
    asm("loc_4C5357: movb $0,_data_673398;");
    asm("loc_4C535E: calll *_import_5C6090;");
    asm("loc_4C5364: add $4,%esp;");
    asm("loc_4C5367: test %eax,%eax;");
    asm("loc_4C5369: je loc_4C5388;");
    asm("loc_4C536B: mov (%eax),%edx;");
    asm("loc_4C536D: mov %eax,%ecx;");
    asm("loc_4C536F: calll *0x10(%edx);");
    asm("loc_4C5372: cmp _data_673354,%eax;");
    asm("loc_4C5378: mov %eax,_data_6728E0;");
    asm("loc_4C537D: jne loc_4C540D;");
    asm("loc_4C5383: call _sub_4C5090;");
    asm("loc_4C5388: mov _data_6728E0,%eax;");
    asm("loc_4C538D: cmp _data_673354,%eax;");
    asm("loc_4C5393: jne loc_4C540D;");
    asm("loc_4C5395: mov _data_673398,%al;");
    asm("loc_4C539A: test %al,%al;");
    asm("loc_4C539C: jne loc_4C540D;");
    asm("loc_4C539E: lea 8(%esp),%ecx;");
    asm("loc_4C53A2: push %ecx;");
    asm("loc_4C53A3: movb $1,_data_673398;");
    asm("loc_4C53AA: movl $2,0xC(%esp);");
    asm("loc_4C53B2: call _sub_540FC0;");
    asm("loc_4C53B7: add $4,%esp;");
    asm("loc_4C53BA: test %eax,%eax;");
    asm("loc_4C53BC: je loc_4C540D;");
    asm("loc_4C53BE: mov _data_673394,%edx;");
    asm("loc_4C53C4: lea 0xC(%eax),%ecx;");
    asm("loc_4C53C7: test %ecx,%ecx;");
    asm("loc_4C53C9: je loc_4C53E3;");
    asm("loc_4C53CB: mov 4(%ecx),%ecx;");
    asm("loc_4C53CE: test %ecx,%ecx;");
    asm("loc_4C53D0: je loc_4C53E3;");
    asm("loc_4C53D2: mov 0x4C(%ecx),%esi;");
    asm("loc_4C53D5: and $0x303,%esi;");
    asm("loc_4C53DB: cmp $0x303,%esi;");
    asm("loc_4C53E1: je loc_4C53E5;");
    asm("loc_4C53E3: xor %ecx,%ecx;");
    asm("loc_4C53E5: cmp %edx,0x160(%ecx);");
    asm("loc_4C53EB: je loc_4C53F6;");
    asm("loc_4C53ED: mov 0x14(%eax),%eax;");
    asm("loc_4C53F0: test %eax,%eax;");
    asm("loc_4C53F2: jne loc_4C53C4;");
    asm("loc_4C53F4: jmp loc_4C540D;");
    asm("loc_4C53F6: test %eax,%eax;");
    asm("loc_4C53F8: je loc_4C53FF;");
    asm("loc_4C53FA: add $8,%eax;");
    asm("loc_4C53FD: jmp loc_4C5401;");
    asm("loc_4C53FF: xor %eax,%eax;");
    asm("loc_4C5401: push %eax;");
    asm("loc_4C5402: mov $_data_6728D8,%ecx;");
    asm("loc_4C5407: calll *_import_5C645C;");
    asm("loc_4C540D: mov _data_6728D8,%eax;");
    asm("loc_4C5412: test %eax,%eax;");
    asm("loc_4C5414: pop %esi;");
    asm("loc_4C5415: je loc_4C541C;");
    asm("loc_4C5417: add $0xFFFFFFF8,%eax;");
    asm("loc_4C541A: jmp loc_4C541E;");
    asm("loc_4C541C: xor %eax,%eax;");
    asm("loc_4C541E: test %eax,%eax;");
    asm("loc_4C5420: je loc_4C52F4;");
    asm("loc_4C5426: mov _data_673354,%ecx;");
    asm("loc_4C542C: mov 0x10(%esp),%edx;");
    asm("loc_4C5430: mov %ecx,(%edx);");
    asm("loc_4C5432: mov (%eax),%edx;");
    asm("loc_4C5434: mov %eax,%ecx;");
    asm("loc_4C5436: calll *(%edx);");
    asm("loc_4C5438: mov (%eax),%edx;");
    asm("loc_4C543A: mov 0xC(%esp),%ecx;");
    asm("loc_4C543E: mov %edx,(%ecx);");
    asm("loc_4C5440: mov 4(%eax),%edx;");
    asm("loc_4C5443: mov %edx,4(%ecx);");
    asm("loc_4C5446: mov 8(%eax),%eax;");
    asm("loc_4C5449: mov %eax,8(%ecx);");
    asm("loc_4C544C: mov $1,%al;");
    asm("loc_4C544E: pop %edi;");
    asm("loc_4C544F: pop %ecx;");
    asm("loc_4C5450: ret $8;");
    asm("loc_4C5453: mov 4(%eax),%eax;");
    asm("loc_4C5456: mov (%eax),%ecx;");
    asm("loc_4C5458: mov 0x10(%esp),%edx;");
    asm("loc_4C545C: mov %ecx,(%edx);");
    asm("loc_4C545E: mov 0xC(%esp),%ecx;");
    asm("loc_4C5462: add $8,%eax;");
    asm("loc_4C5465: mov (%eax),%edx;");
    asm("loc_4C5467: mov %edx,(%ecx);");
    asm("loc_4C5469: mov 4(%eax),%edx;");
    asm("loc_4C546C: mov %edx,4(%ecx);");
    asm("loc_4C546F: mov 8(%eax),%eax;");
    asm("loc_4C5472: mov %eax,8(%ecx);");
    asm("loc_4C5475: mov $1,%al;");
    asm("loc_4C5477: pop %edi;");
    asm("loc_4C5478: pop %ecx;");
    asm("loc_4C5479: ret $8;");
    asm("loc_4C547C: xor %al,%al;");
    asm("loc_4C547E: pop %edi;");
    asm("loc_4C547F: pop %ecx;");
    asm("loc_4C5480: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5490() // _sub_4C5490
{
    __DEBUG_ASM(4C5490);
    // chunk 0x4C5490 _sub_4C5490
    asm("loc_4C5490: mov _data_672950,%eax;");
    asm("loc_4C5495: push %ebx;");
    asm("loc_4C5496: push %ebp;");
    asm("loc_4C5497: push %esi;");
    asm("loc_4C5498: mov (%eax),%esi;");
    asm("loc_4C549A: cmp %eax,%esi;");
    asm("loc_4C549C: push %edi;");
    asm("loc_4C549D: je loc_4C5516;");
    asm("loc_4C549F: mov 0x14(%esi),%eax;");
    asm("loc_4C54A2: test %eax,%eax;");
    asm("loc_4C54A4: je loc_4C5516;");
    asm("loc_4C54A6: mov 0x18(%esi),%ecx;");
    asm("loc_4C54A9: sub %eax,%ecx;");
    asm("loc_4C54AB: mov $0x92492493,%eax;");
    asm("loc_4C54B0: imul %ecx;");
    asm("loc_4C54B2: add %ecx,%edx;");
    asm("loc_4C54B4: sar $4,%edx;");
    asm("loc_4C54B7: mov %edx,%eax;");
    asm("loc_4C54B9: shr $0x1F,%eax;");
    asm("loc_4C54BC: add %eax,%edx;");
    asm("loc_4C54BE: mov %edx,%ebp;");
    asm("loc_4C54C0: je loc_4C5516;");
    asm("loc_4C54C2: xor %edi,%edi;");
    asm("loc_4C54C4: test %ebp,%ebp;");
    asm("loc_4C54C6: jle loc_4C5516;");
    asm("loc_4C54C8: xor %ebx,%ebx;");
    asm("loc_4C54CA: lea (%ebx),%ebx;");
    asm("loc_4C54D0: cmp _data_672950,%esi;");
    asm("loc_4C54D6: je loc_4C5506;");
    asm("loc_4C54D8: test %ebx,%ebx;");
    asm("loc_4C54DA: jl loc_4C5506;");
    asm("loc_4C54DC: mov 0x14(%esi),%eax;");
    asm("loc_4C54DF: test %eax,%eax;");
    asm("loc_4C54E1: je loc_4C5506;");
    asm("loc_4C54E3: mov 0x18(%esi),%ecx;");
    asm("loc_4C54E6: sub %eax,%ecx;");
    asm("loc_4C54E8: mov $0x92492493,%eax;");
    asm("loc_4C54ED: imul %ecx;");
    asm("loc_4C54EF: add %ecx,%edx;");
    asm("loc_4C54F1: sar $4,%edx;");
    asm("loc_4C54F4: mov %edx,%ecx;");
    asm("loc_4C54F6: shr $0x1F,%ecx;");
    asm("loc_4C54F9: add %ecx,%edx;");
    asm("loc_4C54FB: cmp %edx,%edi;");
    asm("loc_4C54FD: jae loc_4C5506;");
    asm("loc_4C54FF: mov 0x14(%esi),%eax;");
    asm("loc_4C5502: add %ebx,%eax;");
    asm("loc_4C5504: jmp loc_4C5508;");
    asm("loc_4C5506: xor %eax,%eax;");
    asm("loc_4C5508: cmpl $3,0x18(%eax);");
    asm("loc_4C550C: jne loc_4C551E;");
    asm("loc_4C550E: inc %edi;");
    asm("loc_4C550F: add $0x1C,%ebx;");
    asm("loc_4C5512: cmp %ebp,%edi;");
    asm("loc_4C5514: jl loc_4C54D0;");
    asm("loc_4C5516: pop %edi;");
    asm("loc_4C5517: pop %esi;");
    asm("loc_4C5518: pop %ebp;");
    asm("loc_4C5519: or $0xFFFFFFFF,%eax;");
    asm("loc_4C551C: pop %ebx;");
    asm("loc_4C551D: ret;");
    asm("loc_4C551E: mov %edi,%eax;");
    asm("loc_4C5520: pop %edi;");
    asm("loc_4C5521: pop %esi;");
    asm("loc_4C5522: pop %ebp;");
    asm("loc_4C5523: pop %ebx;");
    asm("loc_4C5524: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5530() // _sub_4C5530
{
    __DEBUG_ASM(4C5530);
    // chunk 0x4C5530 _sub_4C5530
    asm("loc_4C5530: mov _data_672950,%eax;");
    asm("loc_4C5535: push %esi;");
    asm("loc_4C5536: push %edi;");
    asm("loc_4C5537: mov (%eax),%edi;");
    asm("loc_4C5539: cmp %eax,%edi;");
    asm("loc_4C553B: je loc_4C5574;");
    asm("loc_4C553D: mov 0xC(%esp),%esi;");
    asm("loc_4C5541: test %esi,%esi;");
    asm("loc_4C5543: jl loc_4C5574;");
    asm("loc_4C5545: mov 0x14(%edi),%eax;");
    asm("loc_4C5548: test %eax,%eax;");
    asm("loc_4C554A: je loc_4C5574;");
    asm("loc_4C554C: mov 0x18(%edi),%ecx;");
    asm("loc_4C554F: sub %eax,%ecx;");
    asm("loc_4C5551: mov $0x92492493,%eax;");
    asm("loc_4C5556: imul %ecx;");
    asm("loc_4C5558: add %ecx,%edx;");
    asm("loc_4C555A: sar $4,%edx;");
    asm("loc_4C555D: mov %edx,%eax;");
    asm("loc_4C555F: shr $0x1F,%eax;");
    asm("loc_4C5562: add %eax,%edx;");
    asm("loc_4C5564: cmp %edx,%esi;");
    asm("loc_4C5566: jae loc_4C5574;");
    asm("loc_4C5568: mov 0x14(%edi),%ecx;");
    asm("loc_4C556B: imul $0x1C,%esi;");
    asm("loc_4C556E: add %ecx,%esi;");
    asm("loc_4C5570: test %esi,%esi;");
    asm("loc_4C5572: jne loc_4C5579;");
    asm("loc_4C5574: pop %edi;");
    asm("loc_4C5575: xor %eax,%eax;");
    asm("loc_4C5577: pop %esi;");
    asm("loc_4C5578: ret;");
    asm("loc_4C5579: mov (%esi),%ecx;");
    asm("loc_4C557B: test %ecx,%ecx;");
    asm("loc_4C557D: mov 4(%esi),%eax;");
    asm("loc_4C5580: je loc_4C55A6;");
    asm("loc_4C5582: mov %eax,%edx;");
    asm("loc_4C5584: shl $1,%eax;");
    asm("loc_4C5586: test %edx,%edx;");
    asm("loc_4C5588: jns loc_4C558D;");
    asm("loc_4C558A: or $1,%eax;");
    asm("loc_4C558D: mov 8(%ecx),%dx;");
    asm("loc_4C5591: cmp $0x52,%dx;");
    asm("loc_4C5595: je loc_4C55A0;");
    asm("loc_4C5597: cmp $0x4E,%dx;");
    asm("loc_4C559B: je loc_4C55A0;");
    asm("loc_4C559D: add 4(%ecx),%eax;");
    asm("loc_4C55A0: mov (%ecx),%ecx;");
    asm("loc_4C55A2: test %ecx,%ecx;");
    asm("loc_4C55A4: jne loc_4C5582;");
    asm("loc_4C55A6: pop %edi;");
    asm("loc_4C55A7: pop %esi;");
    asm("loc_4C55A8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C55B0() // _sub_4C55B0
{
    __DEBUG_ASM(4C55B0);
    // chunk 0x4C55B0 _sub_4C55B0
    asm("loc_4C55B0: xor %eax,%eax;");
    asm("loc_4C55B2: mov %eax,_data_673348;");
    asm("loc_4C55B7: mov %eax,_data_67334C;");
    asm("loc_4C55BC: mov %eax,_data_673350;");
    asm("loc_4C55C1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C55D0() // _sub_4C55D0
{
    __DEBUG_ASM(4C55D0);
    // chunk 0x4C55D0 _sub_4C55D0
    asm("loc_4C55D0: mov _data_67338C,%eax;");
    asm("loc_4C55D5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C55E0() // _sub_4C55E0
{
    __DEBUG_ASM(4C55E0);
    // chunk 0x4C55E0 _sub_4C55E0
    asm("loc_4C55E0: mov 4(%esp),%eax;");
    asm("loc_4C55E4: mov %eax,_data_67338C;");
    asm("loc_4C55E9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C55F0() // _sub_4C55F0
{
    __DEBUG_ASM(4C55F0);
    // chunk 0x4C55F0 _sub_4C55F0
    asm("loc_4C55F0: sub $0x80,%esp;");
    asm("loc_4C55F6: mov _data_67ECD0,%ecx;");
    asm("loc_4C55FC: push $4;");
    asm("loc_4C55FE: lea 4(%esp),%edx;");
    asm("loc_4C5602: push %edx;");
    asm("loc_4C5603: mov _data_673344,%edx;");
    asm("loc_4C5609: movl $0xFFFFFFFF,_data_67338C;");
    asm("loc_4C5613: movl $0,8(%esp);");
    asm("loc_4C561B: mov (%ecx),%eax;");
    asm("loc_4C561D: push %edx;");
    asm("loc_4C561E: calll *0x138(%eax);");
    asm("loc_4C5624: add $0x80,%esp;");
    asm("loc_4C562A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5630() // _sub_4C5630
{
    __DEBUG_ASM(4C5630);
    // chunk 0x4C5630 _sub_4C5630
    asm("loc_4C5630: push %ecx;");
    asm("loc_4C5631: mov 3(%esp),%al;");
    asm("loc_4C5635: mov %al,_data_6728C8;");
    asm("loc_4C563A: xor %eax,%eax;");
    asm("loc_4C563C: push $_sub_4C5660;");
    asm("loc_4C5641: mov %eax,_data_6728CC;");
    asm("loc_4C5646: mov %eax,_data_6728D0;");
    asm("loc_4C564B: mov %eax,_data_6728D4;");
    asm("loc_4C5650: call _sub_5B7E6C;");
    asm("loc_4C5655: add $8,%esp;");
    asm("loc_4C5658: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5660() // _sub_4C5660
{
    __DEBUG_ASM(4C5660);
    // chunk 0x4C5660 _sub_4C5660
    asm("loc_4C5660: mov _data_6728CC,%eax;");
    asm("loc_4C5665: push %eax;");
    asm("loc_4C5666: call _sub_5B7E1D;");
    asm("loc_4C566B: xor %eax,%eax;");
    asm("loc_4C566D: add $4,%esp;");
    asm("loc_4C5670: mov %eax,_data_6728CC;");
    asm("loc_4C5675: mov %eax,_data_6728D0;");
    asm("loc_4C567A: mov %eax,_data_6728D4;");
    asm("loc_4C567F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5680() // _sub_4C5680
{
    __DEBUG_ASM(4C5680);
    // chunk 0x4C5680 _sub_4C5680
    asm("loc_4C5680: mov _data_6728D0,%eax;");
    asm("loc_4C5685: mov _data_6728CC,%ecx;");
    asm("loc_4C568B: mov %eax,%edx;");
    asm("loc_4C568D: cmp %edx,%eax;");
    asm("loc_4C568F: je loc_4C56A1;");
    asm("loc_4C5691: push %esi;");
    asm("loc_4C5692: mov (%eax),%esi;");
    asm("loc_4C5694: mov %esi,(%ecx);");
    asm("loc_4C5696: add $4,%eax;");
    asm("loc_4C5699: add $4,%ecx;");
    asm("loc_4C569C: cmp %edx,%eax;");
    asm("loc_4C569E: jne loc_4C5692;");
    asm("loc_4C56A0: pop %esi;");
    asm("loc_4C56A1: mov %ecx,_data_6728D0;");
    asm("loc_4C56A7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C56B0() // _sub_4C56B0
{
    __DEBUG_ASM(4C56B0);
    // chunk 0x4C56B0 _sub_4C56B0
    asm("loc_4C56B0: push %ecx;");
    asm("loc_4C56B1: mov _data_6728D0,%eax;");
    asm("loc_4C56B6: mov _data_6728D4,%ecx;");
    asm("loc_4C56BC: sub %eax,%ecx;");
    asm("loc_4C56BE: sar $2,%ecx;");
    asm("loc_4C56C1: cmp $1,%ecx;");
    asm("loc_4C56C4: push %esi;");
    asm("loc_4C56C5: mov %eax,%esi;");
    asm("loc_4C56C7: jae loc_4C57CD;");
    asm("loc_4C56CD: mov _data_6728CC,%edx;");
    asm("loc_4C56D3: test %edx,%edx;");
    asm("loc_4C56D5: je loc_4C56EC;");
    asm("loc_4C56D7: mov %eax,%ecx;");
    asm("loc_4C56D9: sub %edx,%ecx;");
    asm("loc_4C56DB: sar $2,%ecx;");
    asm("loc_4C56DE: cmp $1,%ecx;");
    asm("loc_4C56E1: jbe loc_4C56EC;");
    asm("loc_4C56E3: mov %eax,%ecx;");
    asm("loc_4C56E5: sub %edx,%ecx;");
    asm("loc_4C56E7: sar $2,%ecx;");
    asm("loc_4C56EA: jmp loc_4C56F1;");
    asm("loc_4C56EC: mov $1,%ecx;");
    asm("loc_4C56F1: test %edx,%edx;");
    asm("loc_4C56F3: jne loc_4C56F9;");
    asm("loc_4C56F5: xor %eax,%eax;");
    asm("loc_4C56F7: jmp loc_4C56FE;");
    asm("loc_4C56F9: sub %edx,%eax;");
    asm("loc_4C56FB: sar $2,%eax;");
    asm("loc_4C56FE: add %ecx,%eax;");
    asm("loc_4C5700: test %eax,%eax;");
    asm("loc_4C5702: mov %eax,4(%esp);");
    asm("loc_4C5706: jge loc_4C570A;");
    asm("loc_4C5708: xor %eax,%eax;");
    asm("loc_4C570A: push %ebx;");
    asm("loc_4C570B: push %ebp;");
    asm("loc_4C570C: lea (,%eax,4),%edx;");
    asm("loc_4C5713: push %edi;");
    asm("loc_4C5714: push %edx;");
    asm("loc_4C5715: call _sub_5B7E84;");
    asm("loc_4C571A: mov _data_6728CC,%ebx;");
    asm("loc_4C5720: add $4,%esp;");
    asm("loc_4C5723: cmp %esi,%ebx;");
    asm("loc_4C5725: mov %eax,%ebp;");
    asm("loc_4C5727: mov %ebp,%edi;");
    asm("loc_4C5729: je loc_4C5744;");
    asm("loc_4C572B: nop;");
    asm("loc_4C572C: lea (%esp),%esp;");
    asm("loc_4C5730: push %ebx;");
    asm("loc_4C5731: push %edi;");
    asm("loc_4C5732: call _sub_5999B0;");
    asm("loc_4C5737: add $4,%ebx;");
    asm("loc_4C573A: add $8,%esp;");
    asm("loc_4C573D: add $4,%edi;");
    asm("loc_4C5740: cmp %esi,%ebx;");
    asm("loc_4C5742: jne loc_4C5730;");
    asm("loc_4C5744: lea 0x18(%esp),%eax;");
    asm("loc_4C5748: push %eax;");
    asm("loc_4C5749: push $1;");
    asm("loc_4C574B: push %edi;");
    asm("loc_4C574C: mov $_data_6728C8,%ecx;");
    asm("loc_4C5751: call _sub_427730;");
    asm("loc_4C5756: mov _data_6728D0,%ecx;");
    asm("loc_4C575C: add $4,%edi;");
    asm("loc_4C575F: push %edi;");
    asm("loc_4C5760: push %ecx;");
    asm("loc_4C5761: push %esi;");
    asm("loc_4C5762: mov $_data_6728C8,%ecx;");
    asm("loc_4C5767: call _sub_597C70;");
    asm("loc_4C576C: mov _data_6728D0,%edx;");
    asm("loc_4C5772: mov _data_6728CC,%eax;");
    asm("loc_4C5777: push %edx;");
    asm("loc_4C5778: push %eax;");
    asm("loc_4C5779: mov $_data_6728C8,%ecx;");
    asm("loc_4C577E: call _sub_53AAA0;");
    asm("loc_4C5783: mov _data_6728CC,%ecx;");
    asm("loc_4C5789: push %ecx;");
    asm("loc_4C578A: call _sub_5B7E1D;");
    asm("loc_4C578F: mov 0x14(%esp),%edx;");
    asm("loc_4C5793: mov _data_6728CC,%ecx;");
    asm("loc_4C5799: add $4,%esp;");
    asm("loc_4C579C: test %ecx,%ecx;");
    asm("loc_4C579E: lea (%ebp,%edx,4),%eax;");
    asm("loc_4C57A2: mov %eax,_data_6728D4;");
    asm("loc_4C57A7: jne loc_4C57AD;");
    asm("loc_4C57A9: xor %eax,%eax;");
    asm("loc_4C57AB: jmp loc_4C57B7;");
    asm("loc_4C57AD: mov _data_6728D0,%eax;");
    asm("loc_4C57B2: sub %ecx,%eax;");
    asm("loc_4C57B4: sar $2,%eax;");
    asm("loc_4C57B7: pop %edi;");
    asm("loc_4C57B8: lea 4(%ebp,%eax,4),%ecx;");
    asm("loc_4C57BC: mov %ebp,_data_6728CC;");
    asm("loc_4C57C2: pop %ebp;");
    asm("loc_4C57C3: pop %ebx;");
    asm("loc_4C57C4: mov %ecx,_data_6728D0;");
    asm("loc_4C57CA: pop %esi;");
    asm("loc_4C57CB: pop %ecx;");
    asm("loc_4C57CC: ret;");
    asm("loc_4C57CD: mov %eax,%edx;");
    asm("loc_4C57CF: sub %esi,%edx;");
    asm("loc_4C57D1: sar $2,%edx;");
    asm("loc_4C57D4: cmp $1,%edx;");
    asm("loc_4C57D7: jae loc_4C5837;");
    asm("loc_4C57D9: lea 4(%esi),%ecx;");
    asm("loc_4C57DC: push %ecx;");
    asm("loc_4C57DD: push %eax;");
    asm("loc_4C57DE: push %esi;");
    asm("loc_4C57DF: mov $_data_6728C8,%ecx;");
    asm("loc_4C57E4: call _sub_597C70;");
    asm("loc_4C57E9: mov _data_6728D0,%eax;");
    asm("loc_4C57EE: mov %eax,%ecx;");
    asm("loc_4C57F0: lea 0xC(%esp),%edx;");
    asm("loc_4C57F4: push %edx;");
    asm("loc_4C57F5: sub %esi,%ecx;");
    asm("loc_4C57F7: sar $2,%ecx;");
    asm("loc_4C57FA: mov $1,%edx;");
    asm("loc_4C57FF: sub %ecx,%edx;");
    asm("loc_4C5801: push %edx;");
    asm("loc_4C5802: push %eax;");
    asm("loc_4C5803: mov $_data_6728C8,%ecx;");
    asm("loc_4C5808: call _sub_427730;");
    asm("loc_4C580D: mov _data_6728D0,%ecx;");
    asm("loc_4C5813: cmp %ecx,%esi;");
    asm("loc_4C5815: mov %esi,%eax;");
    asm("loc_4C5817: je loc_4C587D;");
    asm("loc_4C5819: lea (%esp),%esp;");
    asm("loc_4C5820: mov 0xC(%esp),%edx;");
    asm("loc_4C5824: mov %edx,(%eax);");
    asm("loc_4C5826: add $4,%eax;");
    asm("loc_4C5829: cmp %ecx,%eax;");
    asm("loc_4C582B: jne loc_4C5820;");
    asm("loc_4C582D: addl $4,_data_6728D0;");
    asm("loc_4C5834: pop %esi;");
    asm("loc_4C5835: pop %ecx;");
    asm("loc_4C5836: ret;");
    asm("loc_4C5837: push %eax;");
    asm("loc_4C5838: push %eax;");
    asm("loc_4C5839: add $0xFFFFFFFC,%eax;");
    asm("loc_4C583C: push %eax;");
    asm("loc_4C583D: mov $_data_6728C8,%ecx;");
    asm("loc_4C5842: call _sub_597C70;");
    asm("loc_4C5847: mov _data_6728D0,%eax;");
    asm("loc_4C584C: mov %eax,%ecx;");
    asm("loc_4C584E: add $0xFFFFFFFC,%eax;");
    asm("loc_4C5851: cmp %eax,%esi;");
    asm("loc_4C5853: je loc_4C5864;");
    asm("loc_4C5855: mov -4(%eax),%edx;");
    asm("loc_4C5858: sub $4,%eax;");
    asm("loc_4C585B: sub $4,%ecx;");
    asm("loc_4C585E: cmp %esi,%eax;");
    asm("loc_4C5860: mov %edx,(%ecx);");
    asm("loc_4C5862: jne loc_4C5855;");
    asm("loc_4C5864: lea 4(%esi),%ecx;");
    asm("loc_4C5867: cmp %ecx,%esi;");
    asm("loc_4C5869: mov %esi,%eax;");
    asm("loc_4C586B: je loc_4C587D;");
    asm("loc_4C586D: lea (%ecx),%ecx;");
    asm("loc_4C5870: mov 0xC(%esp),%edx;");
    asm("loc_4C5874: mov %edx,(%eax);");
    asm("loc_4C5876: add $4,%eax;");
    asm("loc_4C5879: cmp %ecx,%eax;");
    asm("loc_4C587B: jne loc_4C5870;");
    asm("loc_4C587D: addl $4,_data_6728D0;");
    asm("loc_4C5884: pop %esi;");
    asm("loc_4C5885: pop %ecx;");
    asm("loc_4C5886: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5890() // _sub_4C5890
{
    __DEBUG_ASM(4C5890);
    // chunk 0x4C5890 _sub_4C5890
    asm("loc_4C5890: mov _data_6728CC,%ecx;");
    asm("loc_4C5896: test %ecx,%ecx;");
    asm("loc_4C5898: jne loc_4C589D;");
    asm("loc_4C589A: xor %eax,%eax;");
    asm("loc_4C589C: ret;");
    asm("loc_4C589D: mov _data_6728D0,%eax;");
    asm("loc_4C58A2: sub %ecx,%eax;");
    asm("loc_4C58A4: sar $2,%eax;");
    asm("loc_4C58A7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C58B0() // _sub_4C58B0
{
    __DEBUG_ASM(4C58B0);
    // chunk 0x4C58B0 _sub_4C58B0
    asm("loc_4C58B0: mov 4(%esp),%edx;");
    asm("loc_4C58B4: test %edx,%edx;");
    asm("loc_4C58B6: jl loc_4C58D4;");
    asm("loc_4C58B8: mov _data_6728CC,%ecx;");
    asm("loc_4C58BE: test %ecx,%ecx;");
    asm("loc_4C58C0: je loc_4C58D4;");
    asm("loc_4C58C2: mov _data_6728D0,%eax;");
    asm("loc_4C58C7: sub %ecx,%eax;");
    asm("loc_4C58C9: sar $2,%eax;");
    asm("loc_4C58CC: cmp %eax,%edx;");
    asm("loc_4C58CE: jae loc_4C58D4;");
    asm("loc_4C58D0: mov (%ecx,%edx,4),%eax;");
    asm("loc_4C58D3: ret;");
    asm("loc_4C58D4: xor %eax,%eax;");
    asm("loc_4C58D6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C58E0() // _sub_4C58E0
{
    __DEBUG_ASM(4C58E0);
    // chunk 0x4C58E0 _sub_4C58E0
    asm("loc_4C58E0: push %ecx;");
    asm("loc_4C58E1: push %esi;");
    asm("loc_4C58E2: push %edi;");
    asm("loc_4C58E3: mov _data_672950,%edi;");
    asm("loc_4C58E9: mov (%edi),%esi;");
    asm("loc_4C58EB: cmp %edi,%esi;");
    asm("loc_4C58ED: je loc_4C5931;");
    asm("loc_4C58EF: mov 0x14(%esi),%eax;");
    asm("loc_4C58F2: test %eax,%eax;");
    asm("loc_4C58F4: je loc_4C5931;");
    asm("loc_4C58F6: mov 0x18(%esi),%ecx;");
    asm("loc_4C58F9: sub %eax,%ecx;");
    asm("loc_4C58FB: mov $0x92492493,%eax;");
    asm("loc_4C5900: imul %ecx;");
    asm("loc_4C5902: add %ecx,%edx;");
    asm("loc_4C5904: sar $4,%edx;");
    asm("loc_4C5907: mov %edx,%eax;");
    asm("loc_4C5909: shr $0x1F,%eax;");
    asm("loc_4C590C: add %eax,%edx;");
    asm("loc_4C590E: mov %edx,8(%esp);");
    asm("loc_4C5912: je loc_4C5931;");
    asm("loc_4C5914: cmp %edi,%esi;");
    asm("loc_4C5916: je loc_4C5931;");
    asm("loc_4C5918: lea 0x10(%esi),%eax;");
    asm("loc_4C591B: test %eax,%eax;");
    asm("loc_4C591D: je loc_4C5931;");
    asm("loc_4C591F: mov 0x2C(%eax),%eax;");
    asm("loc_4C5922: cmp $1,%eax;");
    asm("loc_4C5925: je loc_4C5931;");
    asm("loc_4C5927: test %eax,%eax;");
    asm("loc_4C5929: je loc_4C5931;");
    asm("loc_4C592B: pop %edi;");
    asm("loc_4C592C: mov $1,%al;");
    asm("loc_4C592E: pop %esi;");
    asm("loc_4C592F: pop %ecx;");
    asm("loc_4C5930: ret;");
    asm("loc_4C5931: pop %edi;");
    asm("loc_4C5932: xor %al,%al;");
    asm("loc_4C5934: pop %esi;");
    asm("loc_4C5935: pop %ecx;");
    asm("loc_4C5936: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5940() // _sub_4C5940
{
    __DEBUG_ASM(4C5940);
    // chunk 0x4C5940 _sub_4C5940
    asm("loc_4C5940: push $0xFFFFFFFF;");
    asm("loc_4C5942: push $_sub_5BD6F9;");
    asm("loc_4C5947: mov %fs:0,%eax;");
    asm("loc_4C594D: push %eax;");
    asm("loc_4C594E: mov %esp,%fs:0;");
    asm("loc_4C5955: push %ecx;");
    asm("loc_4C5956: push %esi;");
    asm("loc_4C5957: mov %ecx,%esi;");
    asm("loc_4C5959: xor %ecx,%ecx;");
    asm("loc_4C595B: mov %esi,4(%esp);");
    asm("loc_4C595F: mov %ecx,(%esi);");
    asm("loc_4C5961: mov %ecx,4(%esi);");
    asm("loc_4C5964: mov 0x18(%esp),%eax;");
    asm("loc_4C5968: cmp %ecx,%eax;");
    asm("loc_4C596A: mov %ecx,0x10(%esp);");
    asm("loc_4C596E: je loc_4C5980;");
    asm("loc_4C5970: add $8,%eax;");
    asm("loc_4C5973: cmp %ecx,%eax;");
    asm("loc_4C5975: je loc_4C5980;");
    asm("loc_4C5977: push %eax;");
    asm("loc_4C5978: mov %esi,%ecx;");
    asm("loc_4C597A: calll *_import_5C62A8;");
    asm("loc_4C5980: mov 8(%esp),%ecx;");
    asm("loc_4C5984: mov %esi,%eax;");
    asm("loc_4C5986: pop %esi;");
    asm("loc_4C5987: mov %ecx,%fs:0;");
    asm("loc_4C598E: add $0x10,%esp;");
    asm("loc_4C5991: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C59A0() // _sub_4C59A0
{
    __DEBUG_ASM(4C59A0);
    // chunk 0x4C59A0 _sub_4C59A0
    asm("loc_4C59A0: mov 8(%esp),%eax;");
    asm("loc_4C59A4: mov 4(%esp),%edx;");
    asm("loc_4C59A8: push %ebx;");
    asm("loc_4C59A9: push %esi;");
    asm("loc_4C59AA: mov %ecx,%esi;");
    asm("loc_4C59AC: mov (%eax),%cl;");
    asm("loc_4C59AE: mov %cl,(%esi);");
    asm("loc_4C59B0: mov (%edx),%al;");
    asm("loc_4C59B2: push %edi;");
    asm("loc_4C59B3: xor %ebx,%ebx;");
    asm("loc_4C59B5: push $0x58;");
    asm("loc_4C59B7: mov %al,1(%esi);");
    asm("loc_4C59BA: mov %bl,0xC(%esi);");
    asm("loc_4C59BD: call _sub_5B7E84;");
    asm("loc_4C59C2: mov %ebx,4(%eax);");
    asm("loc_4C59C5: mov %bl,0x55(%eax);");
    asm("loc_4C59C8: mov $1,%cl;");
    asm("loc_4C59CA: mov %cl,0x54(%eax);");
    asm("loc_4C59CD: mov %eax,8(%esi);");
    asm("loc_4C59D0: mov %cl,0x55(%eax);");
    asm("loc_4C59D3: mov 8(%esi),%ecx;");
    asm("loc_4C59D6: mov %ebx,(%ecx);");
    asm("loc_4C59D8: mov 8(%esi),%edx;");
    asm("loc_4C59DB: mov %ebx,8(%edx);");
    asm("loc_4C59DE: mov 8(%esi),%edi;");
    asm("loc_4C59E1: push $0x58;");
    asm("loc_4C59E3: call _sub_5B7E84;");
    asm("loc_4C59E8: mov %edi,4(%eax);");
    asm("loc_4C59EB: mov %bl,0x54(%eax);");
    asm("loc_4C59EE: mov %bl,0x55(%eax);");
    asm("loc_4C59F1: mov %eax,4(%esi);");
    asm("loc_4C59F4: mov %eax,(%eax);");
    asm("loc_4C59F6: mov 4(%esi),%eax;");
    asm("loc_4C59F9: add $8,%esp;");
    asm("loc_4C59FC: mov %eax,8(%eax);");
    asm("loc_4C59FF: pop %edi;");
    asm("loc_4C5A00: mov %ebx,0x10(%esi);");
    asm("loc_4C5A03: mov %esi,%eax;");
    asm("loc_4C5A05: pop %esi;");
    asm("loc_4C5A06: pop %ebx;");
    asm("loc_4C5A07: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5A10() // _sub_4C5A10
{
    __DEBUG_ASM(4C5A10);
    // chunk 0x4C5A10 _sub_4C5A10
    asm("loc_4C5A10: mov 8(%esp),%eax;");
    asm("loc_4C5A14: mov 4(%esp),%edx;");
    asm("loc_4C5A18: push %ebx;");
    asm("loc_4C5A19: push %esi;");
    asm("loc_4C5A1A: mov %ecx,%esi;");
    asm("loc_4C5A1C: mov (%eax),%cl;");
    asm("loc_4C5A1E: mov %cl,(%esi);");
    asm("loc_4C5A20: mov (%edx),%al;");
    asm("loc_4C5A22: push %edi;");
    asm("loc_4C5A23: xor %ebx,%ebx;");
    asm("loc_4C5A25: push $0x18;");
    asm("loc_4C5A27: mov %al,1(%esi);");
    asm("loc_4C5A2A: mov %bl,0xC(%esi);");
    asm("loc_4C5A2D: call _sub_5B7E84;");
    asm("loc_4C5A32: mov %ebx,4(%eax);");
    asm("loc_4C5A35: mov %bl,0x15(%eax);");
    asm("loc_4C5A38: mov $1,%cl;");
    asm("loc_4C5A3A: mov %cl,0x14(%eax);");
    asm("loc_4C5A3D: mov %eax,8(%esi);");
    asm("loc_4C5A40: mov %cl,0x15(%eax);");
    asm("loc_4C5A43: mov 8(%esi),%ecx;");
    asm("loc_4C5A46: mov %ebx,(%ecx);");
    asm("loc_4C5A48: mov 8(%esi),%edx;");
    asm("loc_4C5A4B: mov %ebx,8(%edx);");
    asm("loc_4C5A4E: mov 8(%esi),%edi;");
    asm("loc_4C5A51: push $0x18;");
    asm("loc_4C5A53: call _sub_5B7E84;");
    asm("loc_4C5A58: mov %edi,4(%eax);");
    asm("loc_4C5A5B: mov %bl,0x14(%eax);");
    asm("loc_4C5A5E: mov %bl,0x15(%eax);");
    asm("loc_4C5A61: mov %eax,4(%esi);");
    asm("loc_4C5A64: mov %eax,(%eax);");
    asm("loc_4C5A66: mov 4(%esi),%eax;");
    asm("loc_4C5A69: add $8,%esp;");
    asm("loc_4C5A6C: mov %eax,8(%eax);");
    asm("loc_4C5A6F: pop %edi;");
    asm("loc_4C5A70: mov %ebx,0x10(%esi);");
    asm("loc_4C5A73: mov %esi,%eax;");
    asm("loc_4C5A75: pop %esi;");
    asm("loc_4C5A76: pop %ebx;");
    asm("loc_4C5A77: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5A80() // _sub_4C5A80
{
    __DEBUG_ASM(4C5A80);
    // chunk 0x4C5A80 _sub_4C5A80
    asm("loc_4C5A80: push %ebx;");
    asm("loc_4C5A81: mov 0x10(%esp),%ebx;");
    asm("loc_4C5A85: push %esi;");
    asm("loc_4C5A86: mov %ecx,%esi;");
    asm("loc_4C5A88: mov 0x10(%esi),%eax;");
    asm("loc_4C5A8B: test %eax,%eax;");
    asm("loc_4C5A8D: mov 0x10(%esp),%ecx;");
    asm("loc_4C5A91: push %edi;");
    asm("loc_4C5A92: je loc_4C5B03;");
    asm("loc_4C5A94: mov 4(%esi),%eax;");
    asm("loc_4C5A97: cmp (%eax),%ecx;");
    asm("loc_4C5A99: jne loc_4C5B03;");
    asm("loc_4C5A9B: cmp %eax,%ebx;");
    asm("loc_4C5A9D: jne loc_4C5B03;");
    asm("loc_4C5A9F: mov 4(%eax),%ebx;");
    asm("loc_4C5AA2: cmp 8(%esi),%ebx;");
    asm("loc_4C5AA5: mov %ebx,%edi;");
    asm("loc_4C5AA7: je loc_4C5AD7;");
    asm("loc_4C5AA9: lea (%esp),%esp;");
    asm("loc_4C5AB0: mov 8(%edi),%eax;");
    asm("loc_4C5AB3: push %eax;");
    asm("loc_4C5AB4: mov %esi,%ecx;");
    asm("loc_4C5AB6: call _sub_4C5F20;");
    asm("loc_4C5ABB: mov (%edi),%edi;");
    asm("loc_4C5ABD: lea 0xC(%ebx),%ecx;");
    asm("loc_4C5AC0: call _sub_4C6010;");
    asm("loc_4C5AC5: push %ebx;");
    asm("loc_4C5AC6: call _sub_5B7E1D;");
    asm("loc_4C5ACB: mov 8(%esi),%eax;");
    asm("loc_4C5ACE: add $4,%esp;");
    asm("loc_4C5AD1: cmp %eax,%edi;");
    asm("loc_4C5AD3: mov %edi,%ebx;");
    asm("loc_4C5AD5: jne loc_4C5AB0;");
    asm("loc_4C5AD7: mov 4(%esi),%ecx;");
    asm("loc_4C5ADA: mov 8(%esi),%edx;");
    asm("loc_4C5ADD: mov %edx,4(%ecx);");
    asm("loc_4C5AE0: mov 4(%esi),%eax;");
    asm("loc_4C5AE3: movl $0,0x10(%esi);");
    asm("loc_4C5AEA: mov %eax,(%eax);");
    asm("loc_4C5AEC: mov 4(%esi),%eax;");
    asm("loc_4C5AEF: mov %eax,8(%eax);");
    asm("loc_4C5AF2: mov 4(%esi),%eax;");
    asm("loc_4C5AF5: mov (%eax),%ecx;");
    asm("loc_4C5AF7: mov 0x10(%esp),%eax;");
    asm("loc_4C5AFB: pop %edi;");
    asm("loc_4C5AFC: pop %esi;");
    asm("loc_4C5AFD: mov %ecx,(%eax);");
    asm("loc_4C5AFF: pop %ebx;");
    asm("loc_4C5B00: ret $0xC;");
    asm("loc_4C5B03: cmp %ebx,%ecx;");
    asm("loc_4C5B05: je loc_4C5B27;");
    asm("loc_4C5B07: mov %ecx,%edi;");
    asm("loc_4C5B09: lea 0x14(%esp),%ecx;");
    asm("loc_4C5B0D: call _sub_4C5FA0;");
    asm("loc_4C5B12: push %edi;");
    asm("loc_4C5B13: lea 0x1C(%esp),%edx;");
    asm("loc_4C5B17: push %edx;");
    asm("loc_4C5B18: mov %esi,%ecx;");
    asm("loc_4C5B1A: call _sub_4C5B40;");
    asm("loc_4C5B1F: mov 0x14(%esp),%ecx;");
    asm("loc_4C5B23: cmp %ebx,%ecx;");
    asm("loc_4C5B25: jne loc_4C5B07;");
    asm("loc_4C5B27: mov 0x10(%esp),%eax;");
    asm("loc_4C5B2B: pop %edi;");
    asm("loc_4C5B2C: pop %esi;");
    asm("loc_4C5B2D: mov %ecx,(%eax);");
    asm("loc_4C5B2F: pop %ebx;");
    asm("loc_4C5B30: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5B40() // _sub_4C5B40
{
    __DEBUG_ASM(4C5B40);
    // chunk 0x4C5B40 _sub_4C5B40
    asm("loc_4C5B40: push %ecx;");
    asm("loc_4C5B41: push %ebx;");
    asm("loc_4C5B42: push %ebp;");
    asm("loc_4C5B43: push %esi;");
    asm("loc_4C5B44: mov 0x18(%esp),%esi;");
    asm("loc_4C5B48: push %edi;");
    asm("loc_4C5B49: mov %ecx,%edi;");
    asm("loc_4C5B4B: lea 0x1C(%esp),%ecx;");
    asm("loc_4C5B4F: call _sub_4C5FA0;");
    asm("loc_4C5B54: mov (%esi),%edx;");
    asm("loc_4C5B56: mov 8(%edi),%eax;");
    asm("loc_4C5B59: cmp %eax,%edx;");
    asm("loc_4C5B5B: mov %esi,0x10(%esp);");
    asm("loc_4C5B5F: jne loc_4C5B82;");
    asm("loc_4C5B61: mov 8(%esi),%eax;");
    asm("loc_4C5B64: mov 0x10(%esp),%ecx;");
    asm("loc_4C5B68: mov 4(%ecx),%edx;");
    asm("loc_4C5B6B: mov %edx,4(%eax);");
    asm("loc_4C5B6E: mov 4(%edi),%ecx;");
    asm("loc_4C5B71: cmp %esi,4(%ecx);");
    asm("loc_4C5B74: jne loc_4C5C07;");
    asm("loc_4C5B7A: mov %eax,4(%ecx);");
    asm("loc_4C5B7D: jmp loc_4C5C15;");
    asm("loc_4C5B82: mov 8(%esi),%ecx;");
    asm("loc_4C5B85: cmp %eax,%ecx;");
    asm("loc_4C5B87: jne loc_4C5B8D;");
    asm("loc_4C5B89: mov %edx,%eax;");
    asm("loc_4C5B8B: jmp loc_4C5B64;");
    asm("loc_4C5B8D: mov (%ecx),%eax;");
    asm("loc_4C5B8F: mov 0x55(%eax),%bl;");
    asm("loc_4C5B92: test %bl,%bl;");
    asm("loc_4C5B94: jne loc_4C5BA1;");
    asm("loc_4C5B96: mov %eax,%ecx;");
    asm("loc_4C5B98: mov (%ecx),%eax;");
    asm("loc_4C5B9A: mov 0x55(%eax),%bl;");
    asm("loc_4C5B9D: test %bl,%bl;");
    asm("loc_4C5B9F: je loc_4C5B96;");
    asm("loc_4C5BA1: cmp %esi,%ecx;");
    asm("loc_4C5BA3: mov 8(%ecx),%eax;");
    asm("loc_4C5BA6: mov %ecx,0x10(%esp);");
    asm("loc_4C5BAA: je loc_4C5B64;");
    asm("loc_4C5BAC: mov %ecx,4(%edx);");
    asm("loc_4C5BAF: mov (%esi),%edx;");
    asm("loc_4C5BB1: mov %edx,(%ecx);");
    asm("loc_4C5BB3: cmp 8(%esi),%ecx;");
    asm("loc_4C5BB6: jne loc_4C5BBD;");
    asm("loc_4C5BB8: mov %ecx,4(%eax);");
    asm("loc_4C5BBB: jmp loc_4C5BD4;");
    asm("loc_4C5BBD: mov 4(%ecx),%edx;");
    asm("loc_4C5BC0: mov %edx,4(%eax);");
    asm("loc_4C5BC3: mov 4(%ecx),%edx;");
    asm("loc_4C5BC6: mov %eax,(%edx);");
    asm("loc_4C5BC8: mov 8(%esi),%edx;");
    asm("loc_4C5BCB: mov %edx,8(%ecx);");
    asm("loc_4C5BCE: mov 8(%esi),%edx;");
    asm("loc_4C5BD1: mov %ecx,4(%edx);");
    asm("loc_4C5BD4: mov 4(%edi),%edx;");
    asm("loc_4C5BD7: cmp %esi,4(%edx);");
    asm("loc_4C5BDA: jne loc_4C5BE1;");
    asm("loc_4C5BDC: mov %ecx,4(%edx);");
    asm("loc_4C5BDF: jmp loc_4C5BEF;");
    asm("loc_4C5BE1: mov 4(%esi),%edx;");
    asm("loc_4C5BE4: cmp %esi,(%edx);");
    asm("loc_4C5BE6: jne loc_4C5BEC;");
    asm("loc_4C5BE8: mov %ecx,(%edx);");
    asm("loc_4C5BEA: jmp loc_4C5BEF;");
    asm("loc_4C5BEC: mov %ecx,8(%edx);");
    asm("loc_4C5BEF: mov 4(%esi),%edx;");
    asm("loc_4C5BF2: mov %edx,4(%ecx);");
    asm("loc_4C5BF5: mov 0x54(%esi),%bl;");
    asm("loc_4C5BF8: mov 0x54(%ecx),%dl;");
    asm("loc_4C5BFB: mov %bl,0x54(%ecx);");
    asm("loc_4C5BFE: mov %dl,0x54(%esi);");
    asm("loc_4C5C01: mov %esi,0x10(%esp);");
    asm("loc_4C5C05: jmp loc_4C5C72;");
    asm("loc_4C5C07: mov 4(%esi),%ecx;");
    asm("loc_4C5C0A: cmp %esi,(%ecx);");
    asm("loc_4C5C0C: jne loc_4C5C12;");
    asm("loc_4C5C0E: mov %eax,(%ecx);");
    asm("loc_4C5C10: jmp loc_4C5C15;");
    asm("loc_4C5C12: mov %eax,8(%ecx);");
    asm("loc_4C5C15: mov 4(%edi),%ebp;");
    asm("loc_4C5C18: cmp %esi,(%ebp);");
    asm("loc_4C5C1B: jne loc_4C5C43;");
    asm("loc_4C5C1D: mov 8(%esi),%ecx;");
    asm("loc_4C5C20: cmp 8(%edi),%ecx;");
    asm("loc_4C5C23: jne loc_4C5C2A;");
    asm("loc_4C5C25: mov 4(%esi),%edx;");
    asm("loc_4C5C28: jmp loc_4C5C40;");
    asm("loc_4C5C2A: mov (%eax),%ecx;");
    asm("loc_4C5C2C: mov 0x55(%ecx),%bl;");
    asm("loc_4C5C2F: test %bl,%bl;");
    asm("loc_4C5C31: mov %eax,%edx;");
    asm("loc_4C5C33: jne loc_4C5C40;");
    asm("loc_4C5C35: mov %ecx,%edx;");
    asm("loc_4C5C37: mov (%edx),%ecx;");
    asm("loc_4C5C39: mov 0x55(%ecx),%bl;");
    asm("loc_4C5C3C: test %bl,%bl;");
    asm("loc_4C5C3E: je loc_4C5C35;");
    asm("loc_4C5C40: mov %edx,(%ebp);");
    asm("loc_4C5C43: mov 4(%edi),%ebp;");
    asm("loc_4C5C46: cmp %esi,8(%ebp);");
    asm("loc_4C5C49: jne loc_4C5C72;");
    asm("loc_4C5C4B: mov (%esi),%ecx;");
    asm("loc_4C5C4D: cmp 8(%edi),%ecx;");
    asm("loc_4C5C50: jne loc_4C5C57;");
    asm("loc_4C5C52: mov 4(%esi),%edx;");
    asm("loc_4C5C55: jmp loc_4C5C6F;");
    asm("loc_4C5C57: mov 8(%eax),%ecx;");
    asm("loc_4C5C5A: mov 0x55(%ecx),%bl;");
    asm("loc_4C5C5D: test %bl,%bl;");
    asm("loc_4C5C5F: mov %eax,%edx;");
    asm("loc_4C5C61: jne loc_4C5C6F;");
    asm("loc_4C5C63: mov %ecx,%edx;");
    asm("loc_4C5C65: mov 8(%edx),%ecx;");
    asm("loc_4C5C68: mov 0x55(%ecx),%bl;");
    asm("loc_4C5C6B: test %bl,%bl;");
    asm("loc_4C5C6D: je loc_4C5C63;");
    asm("loc_4C5C6F: mov %edx,8(%ebp);");
    asm("loc_4C5C72: mov 0x10(%esp),%esi;");
    asm("loc_4C5C76: mov 0x54(%esi),%cl;");
    asm("loc_4C5C79: mov $1,%bl;");
    asm("loc_4C5C7B: cmp %bl,%cl;");
    asm("loc_4C5C7D: jne loc_4C5EEE;");
    asm("loc_4C5C83: mov 4(%edi),%ecx;");
    asm("loc_4C5C86: cmp 4(%ecx),%eax;");
    asm("loc_4C5C89: je loc_4C5EE7;");
    asm("loc_4C5C8F: nop;");
    asm("loc_4C5C90: cmp %bl,0x54(%eax);");
    asm("loc_4C5C93: jne loc_4C5EE7;");
    asm("loc_4C5C99: mov 4(%eax),%edx;");
    asm("loc_4C5C9C: mov (%edx),%ecx;");
    asm("loc_4C5C9E: cmp %ecx,%eax;");
    asm("loc_4C5CA0: jne loc_4C5D4F;");
    asm("loc_4C5CA6: mov 8(%edx),%ecx;");
    asm("loc_4C5CA9: mov 0x54(%ecx),%dl;");
    asm("loc_4C5CAC: test %dl,%dl;");
    asm("loc_4C5CAE: jne loc_4C5CFB;");
    asm("loc_4C5CB0: mov %bl,0x54(%ecx);");
    asm("loc_4C5CB3: mov 4(%eax),%edx;");
    asm("loc_4C5CB6: movb $0,0x54(%edx);");
    asm("loc_4C5CBA: mov 4(%eax),%ecx;");
    asm("loc_4C5CBD: mov 8(%ecx),%edx;");
    asm("loc_4C5CC0: mov (%edx),%esi;");
    asm("loc_4C5CC2: mov %esi,8(%ecx);");
    asm("loc_4C5CC5: mov (%edx),%esi;");
    asm("loc_4C5CC7: cmp 8(%edi),%esi;");
    asm("loc_4C5CCA: je loc_4C5CCF;");
    asm("loc_4C5CCC: mov %ecx,4(%esi);");
    asm("loc_4C5CCF: mov 4(%ecx),%esi;");
    asm("loc_4C5CD2: mov %esi,4(%edx);");
    asm("loc_4C5CD5: mov 4(%edi),%esi;");
    asm("loc_4C5CD8: cmp 4(%esi),%ecx;");
    asm("loc_4C5CDB: jne loc_4C5CE2;");
    asm("loc_4C5CDD: mov %edx,4(%esi);");
    asm("loc_4C5CE0: jmp loc_4C5CF0;");
    asm("loc_4C5CE2: mov 4(%ecx),%esi;");
    asm("loc_4C5CE5: cmp (%esi),%ecx;");
    asm("loc_4C5CE7: jne loc_4C5CED;");
    asm("loc_4C5CE9: mov %edx,(%esi);");
    asm("loc_4C5CEB: jmp loc_4C5CF0;");
    asm("loc_4C5CED: mov %edx,8(%esi);");
    asm("loc_4C5CF0: mov %ecx,(%edx);");
    asm("loc_4C5CF2: mov %edx,4(%ecx);");
    asm("loc_4C5CF5: mov 4(%eax),%ecx;");
    asm("loc_4C5CF8: mov 8(%ecx),%ecx;");
    asm("loc_4C5CFB: mov (%ecx),%edx;");
    asm("loc_4C5CFD: cmp %bl,0x54(%edx);");
    asm("loc_4C5D00: jne loc_4C5D0E;");
    asm("loc_4C5D02: mov 8(%ecx),%edx;");
    asm("loc_4C5D05: cmp %bl,0x54(%edx);");
    asm("loc_4C5D08: je loc_4C5DB9;");
    asm("loc_4C5D0E: mov 8(%ecx),%edx;");
    asm("loc_4C5D11: cmp %bl,0x54(%edx);");
    asm("loc_4C5D14: jne loc_4C5DEC;");
    asm("loc_4C5D1A: mov (%ecx),%edx;");
    asm("loc_4C5D1C: mov %bl,0x54(%edx);");
    asm("loc_4C5D1F: mov (%ecx),%edx;");
    asm("loc_4C5D21: movb $0,0x54(%ecx);");
    asm("loc_4C5D25: mov 8(%edx),%esi;");
    asm("loc_4C5D28: mov %esi,(%ecx);");
    asm("loc_4C5D2A: mov 8(%edx),%esi;");
    asm("loc_4C5D2D: cmp 8(%edi),%esi;");
    asm("loc_4C5D30: je loc_4C5D35;");
    asm("loc_4C5D32: mov %ecx,4(%esi);");
    asm("loc_4C5D35: mov 4(%ecx),%esi;");
    asm("loc_4C5D38: mov %esi,4(%edx);");
    asm("loc_4C5D3B: mov 4(%edi),%esi;");
    asm("loc_4C5D3E: cmp 4(%esi),%ecx;");
    asm("loc_4C5D41: jne loc_4C5DD1;");
    asm("loc_4C5D47: mov %edx,4(%esi);");
    asm("loc_4C5D4A: jmp loc_4C5DE0;");
    asm("loc_4C5D4F: mov 0x54(%ecx),%dl;");
    asm("loc_4C5D52: test %dl,%dl;");
    asm("loc_4C5D54: jne loc_4C5DA2;");
    asm("loc_4C5D56: mov %bl,0x54(%ecx);");
    asm("loc_4C5D59: mov 4(%eax),%ecx;");
    asm("loc_4C5D5C: movb $0,0x54(%ecx);");
    asm("loc_4C5D60: mov 4(%eax),%ecx;");
    asm("loc_4C5D63: mov (%ecx),%edx;");
    asm("loc_4C5D65: mov 8(%edx),%esi;");
    asm("loc_4C5D68: mov %esi,(%ecx);");
    asm("loc_4C5D6A: mov 8(%edx),%esi;");
    asm("loc_4C5D6D: cmp 8(%edi),%esi;");
    asm("loc_4C5D70: je loc_4C5D75;");
    asm("loc_4C5D72: mov %ecx,4(%esi);");
    asm("loc_4C5D75: mov 4(%ecx),%esi;");
    asm("loc_4C5D78: mov %esi,4(%edx);");
    asm("loc_4C5D7B: mov 4(%edi),%esi;");
    asm("loc_4C5D7E: cmp 4(%esi),%ecx;");
    asm("loc_4C5D81: jne loc_4C5D88;");
    asm("loc_4C5D83: mov %edx,4(%esi);");
    asm("loc_4C5D86: jmp loc_4C5D97;");
    asm("loc_4C5D88: mov 4(%ecx),%esi;");
    asm("loc_4C5D8B: cmp 8(%esi),%ecx;");
    asm("loc_4C5D8E: jne loc_4C5D95;");
    asm("loc_4C5D90: mov %edx,8(%esi);");
    asm("loc_4C5D93: jmp loc_4C5D97;");
    asm("loc_4C5D95: mov %edx,(%esi);");
    asm("loc_4C5D97: mov %ecx,8(%edx);");
    asm("loc_4C5D9A: mov %edx,4(%ecx);");
    asm("loc_4C5D9D: mov 4(%eax),%edx;");
    asm("loc_4C5DA0: mov (%edx),%ecx;");
    asm("loc_4C5DA2: mov 8(%ecx),%edx;");
    asm("loc_4C5DA5: cmp %bl,0x54(%edx);");
    asm("loc_4C5DA8: jne loc_4C5E48;");
    asm("loc_4C5DAE: mov (%ecx),%edx;");
    asm("loc_4C5DB0: cmp %bl,0x54(%edx);");
    asm("loc_4C5DB3: jne loc_4C5E48;");
    asm("loc_4C5DB9: movb $0,0x54(%ecx);");
    asm("loc_4C5DBD: mov 4(%edi),%ecx;");
    asm("loc_4C5DC0: mov 4(%eax),%eax;");
    asm("loc_4C5DC3: cmp 4(%ecx),%eax;");
    asm("loc_4C5DC6: jne loc_4C5C90;");
    asm("loc_4C5DCC: jmp loc_4C5EE7;");
    asm("loc_4C5DD1: mov 4(%ecx),%esi;");
    asm("loc_4C5DD4: cmp 8(%esi),%ecx;");
    asm("loc_4C5DD7: jne loc_4C5DDE;");
    asm("loc_4C5DD9: mov %edx,8(%esi);");
    asm("loc_4C5DDC: jmp loc_4C5DE0;");
    asm("loc_4C5DDE: mov %edx,(%esi);");
    asm("loc_4C5DE0: mov %ecx,8(%edx);");
    asm("loc_4C5DE3: mov %edx,4(%ecx);");
    asm("loc_4C5DE6: mov 4(%eax),%ecx;");
    asm("loc_4C5DE9: mov 8(%ecx),%ecx;");
    asm("loc_4C5DEC: mov 4(%eax),%edx;");
    asm("loc_4C5DEF: mov 0x54(%edx),%dl;");
    asm("loc_4C5DF2: mov %dl,0x54(%ecx);");
    asm("loc_4C5DF5: mov 4(%eax),%edx;");
    asm("loc_4C5DF8: mov %bl,0x54(%edx);");
    asm("loc_4C5DFB: mov 8(%ecx),%ecx;");
    asm("loc_4C5DFE: mov %bl,0x54(%ecx);");
    asm("loc_4C5E01: mov 4(%eax),%ecx;");
    asm("loc_4C5E04: mov 8(%ecx),%edx;");
    asm("loc_4C5E07: mov (%edx),%esi;");
    asm("loc_4C5E09: mov %esi,8(%ecx);");
    asm("loc_4C5E0C: mov (%edx),%esi;");
    asm("loc_4C5E0E: cmp 8(%edi),%esi;");
    asm("loc_4C5E11: je loc_4C5E16;");
    asm("loc_4C5E13: mov %ecx,4(%esi);");
    asm("loc_4C5E16: mov 4(%ecx),%esi;");
    asm("loc_4C5E19: mov %esi,4(%edx);");
    asm("loc_4C5E1C: mov 4(%edi),%esi;");
    asm("loc_4C5E1F: cmp 4(%esi),%ecx;");
    asm("loc_4C5E22: jne loc_4C5E2E;");
    asm("loc_4C5E24: mov %edx,4(%esi);");
    asm("loc_4C5E27: mov %ecx,(%edx);");
    asm("loc_4C5E29: jmp loc_4C5EE4;");
    asm("loc_4C5E2E: mov 4(%ecx),%esi;");
    asm("loc_4C5E31: cmp (%esi),%ecx;");
    asm("loc_4C5E33: jne loc_4C5E3E;");
    asm("loc_4C5E35: mov %edx,(%esi);");
    asm("loc_4C5E37: mov %ecx,(%edx);");
    asm("loc_4C5E39: jmp loc_4C5EE4;");
    asm("loc_4C5E3E: mov %edx,8(%esi);");
    asm("loc_4C5E41: mov %ecx,(%edx);");
    asm("loc_4C5E43: jmp loc_4C5EE4;");
    asm("loc_4C5E48: mov (%ecx),%edx;");
    asm("loc_4C5E4A: cmp %bl,0x54(%edx);");
    asm("loc_4C5E4D: jne loc_4C5E96;");
    asm("loc_4C5E4F: mov 8(%ecx),%edx;");
    asm("loc_4C5E52: mov %bl,0x54(%edx);");
    asm("loc_4C5E55: mov 8(%ecx),%edx;");
    asm("loc_4C5E58: movb $0,0x54(%ecx);");
    asm("loc_4C5E5C: mov (%edx),%esi;");
    asm("loc_4C5E5E: mov %esi,8(%ecx);");
    asm("loc_4C5E61: mov (%edx),%esi;");
    asm("loc_4C5E63: cmp 8(%edi),%esi;");
    asm("loc_4C5E66: je loc_4C5E6B;");
    asm("loc_4C5E68: mov %ecx,4(%esi);");
    asm("loc_4C5E6B: mov 4(%ecx),%esi;");
    asm("loc_4C5E6E: mov %esi,4(%edx);");
    asm("loc_4C5E71: mov 4(%edi),%esi;");
    asm("loc_4C5E74: cmp 4(%esi),%ecx;");
    asm("loc_4C5E77: jne loc_4C5E7E;");
    asm("loc_4C5E79: mov %edx,4(%esi);");
    asm("loc_4C5E7C: jmp loc_4C5E8C;");
    asm("loc_4C5E7E: mov 4(%ecx),%esi;");
    asm("loc_4C5E81: cmp (%esi),%ecx;");
    asm("loc_4C5E83: jne loc_4C5E89;");
    asm("loc_4C5E85: mov %edx,(%esi);");
    asm("loc_4C5E87: jmp loc_4C5E8C;");
    asm("loc_4C5E89: mov %edx,8(%esi);");
    asm("loc_4C5E8C: mov %ecx,(%edx);");
    asm("loc_4C5E8E: mov %edx,4(%ecx);");
    asm("loc_4C5E91: mov 4(%eax),%ecx;");
    asm("loc_4C5E94: mov (%ecx),%ecx;");
    asm("loc_4C5E96: mov 4(%eax),%edx;");
    asm("loc_4C5E99: mov 0x54(%edx),%dl;");
    asm("loc_4C5E9C: mov %dl,0x54(%ecx);");
    asm("loc_4C5E9F: mov 4(%eax),%edx;");
    asm("loc_4C5EA2: mov %bl,0x54(%edx);");
    asm("loc_4C5EA5: mov (%ecx),%ecx;");
    asm("loc_4C5EA7: mov %bl,0x54(%ecx);");
    asm("loc_4C5EAA: mov 4(%eax),%ecx;");
    asm("loc_4C5EAD: mov (%ecx),%edx;");
    asm("loc_4C5EAF: mov 8(%edx),%esi;");
    asm("loc_4C5EB2: mov %esi,(%ecx);");
    asm("loc_4C5EB4: mov 8(%edx),%esi;");
    asm("loc_4C5EB7: cmp 8(%edi),%esi;");
    asm("loc_4C5EBA: je loc_4C5EBF;");
    asm("loc_4C5EBC: mov %ecx,4(%esi);");
    asm("loc_4C5EBF: mov 4(%ecx),%esi;");
    asm("loc_4C5EC2: mov %esi,4(%edx);");
    asm("loc_4C5EC5: mov 4(%edi),%esi;");
    asm("loc_4C5EC8: cmp 4(%esi),%ecx;");
    asm("loc_4C5ECB: jne loc_4C5ED2;");
    asm("loc_4C5ECD: mov %edx,4(%esi);");
    asm("loc_4C5ED0: jmp loc_4C5EE1;");
    asm("loc_4C5ED2: mov 4(%ecx),%esi;");
    asm("loc_4C5ED5: cmp 8(%esi),%ecx;");
    asm("loc_4C5ED8: jne loc_4C5EDF;");
    asm("loc_4C5EDA: mov %edx,8(%esi);");
    asm("loc_4C5EDD: jmp loc_4C5EE1;");
    asm("loc_4C5EDF: mov %edx,(%esi);");
    asm("loc_4C5EE1: mov %ecx,8(%edx);");
    asm("loc_4C5EE4: mov %edx,4(%ecx);");
    asm("loc_4C5EE7: mov 0x10(%esp),%esi;");
    asm("loc_4C5EEB: mov %bl,0x54(%eax);");
    asm("loc_4C5EEE: lea 0xC(%esi),%ecx;");
    asm("loc_4C5EF1: call _sub_4C6010;");
    asm("loc_4C5EF6: push %esi;");
    asm("loc_4C5EF7: call _sub_5B7E1D;");
    asm("loc_4C5EFC: mov 0x10(%edi),%eax;");
    asm("loc_4C5EFF: mov 0x20(%esp),%edx;");
    asm("loc_4C5F03: add $4,%esp;");
    asm("loc_4C5F06: dec %eax;");
    asm("loc_4C5F07: mov %eax,0x10(%edi);");
    asm("loc_4C5F0A: mov 0x18(%esp),%eax;");
    asm("loc_4C5F0E: pop %edi;");
    asm("loc_4C5F0F: pop %esi;");
    asm("loc_4C5F10: pop %ebp;");
    asm("loc_4C5F11: mov %edx,(%eax);");
    asm("loc_4C5F13: pop %ebx;");
    asm("loc_4C5F14: pop %ecx;");
    asm("loc_4C5F15: ret $8;");
    asm("int3;"); // unreachable
}
#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __INTELLISENSE__
