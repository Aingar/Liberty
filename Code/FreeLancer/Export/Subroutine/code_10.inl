#ifndef __INTELLISENSE__
// clang-format off
#include "..\..\PCH.h"
#pragma init_seg(lib)
#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

_naked _weak void _sub_4C5F20() // _sub_4C5F20
{
    __DEBUG_ASM(4C5F20);
    // chunk 0x4C5F20 _sub_4C5F20
    asm("loc_4C5F20: push %ebx;");
    asm("loc_4C5F21: push %esi;");
    asm("loc_4C5F22: mov %ecx,%ebx;");
    asm("loc_4C5F24: mov 8(%ebx),%eax;");
    asm("loc_4C5F27: push %edi;");
    asm("loc_4C5F28: mov 0x10(%esp),%edi;");
    asm("loc_4C5F2C: cmp %eax,%edi;");
    asm("loc_4C5F2E: mov %edi,%esi;");
    asm("loc_4C5F30: je loc_4C5F59;");
    asm("loc_4C5F32: mov 8(%esi),%eax;");
    asm("loc_4C5F35: push %eax;");
    asm("loc_4C5F36: mov %ebx,%ecx;");
    asm("loc_4C5F38: call _sub_4C5F20;");
    asm("loc_4C5F3D: mov (%esi),%esi;");
    asm("loc_4C5F3F: lea 0xC(%edi),%ecx;");
    asm("loc_4C5F42: call _sub_4C6010;");
    asm("loc_4C5F47: push %edi;");
    asm("loc_4C5F48: call _sub_5B7E1D;");
    asm("loc_4C5F4D: mov 8(%ebx),%eax;");
    asm("loc_4C5F50: add $4,%esp;");
    asm("loc_4C5F53: cmp %eax,%esi;");
    asm("loc_4C5F55: mov %esi,%edi;");
    asm("loc_4C5F57: jne loc_4C5F32;");
    asm("loc_4C5F59: pop %edi;");
    asm("loc_4C5F5A: pop %esi;");
    asm("loc_4C5F5B: pop %ebx;");
    asm("loc_4C5F5C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5F60() // _sub_4C5F60
{
    __DEBUG_ASM(4C5F60);
    // chunk 0x4C5F60 _sub_4C5F60
    asm("loc_4C5F60: push %ebx;");
    asm("loc_4C5F61: push %esi;");
    asm("loc_4C5F62: mov %ecx,%ebx;");
    asm("loc_4C5F64: mov 8(%ebx),%eax;");
    asm("loc_4C5F67: push %edi;");
    asm("loc_4C5F68: mov 0x10(%esp),%edi;");
    asm("loc_4C5F6C: cmp %eax,%edi;");
    asm("loc_4C5F6E: mov %edi,%esi;");
    asm("loc_4C5F70: je loc_4C5F91;");
    asm("loc_4C5F72: mov 8(%esi),%eax;");
    asm("loc_4C5F75: push %eax;");
    asm("loc_4C5F76: mov %ebx,%ecx;");
    asm("loc_4C5F78: call _sub_4C5F60;");
    asm("loc_4C5F7D: mov (%esi),%esi;");
    asm("loc_4C5F7F: push %edi;");
    asm("loc_4C5F80: call _sub_5B7E1D;");
    asm("loc_4C5F85: mov 8(%ebx),%eax;");
    asm("loc_4C5F88: add $4,%esp;");
    asm("loc_4C5F8B: cmp %eax,%esi;");
    asm("loc_4C5F8D: mov %esi,%edi;");
    asm("loc_4C5F8F: jne loc_4C5F72;");
    asm("loc_4C5F91: pop %edi;");
    asm("loc_4C5F92: pop %esi;");
    asm("loc_4C5F93: pop %ebx;");
    asm("loc_4C5F94: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5FA0() // _sub_4C5FA0
{
    __DEBUG_ASM(4C5FA0);
    // chunk 0x4C5FA0 _sub_4C5FA0
    asm("loc_4C5FA0: mov (%ecx),%eax;");
    asm("loc_4C5FA2: mov 8(%eax),%edx;");
    asm("loc_4C5FA5: push %ebx;");
    asm("loc_4C5FA6: mov 0x55(%edx),%bl;");
    asm("loc_4C5FA9: test %bl,%bl;");
    asm("loc_4C5FAB: jne loc_4C5FC5;");
    asm("loc_4C5FAD: mov (%edx),%eax;");
    asm("loc_4C5FAF: mov 0x55(%eax),%bl;");
    asm("loc_4C5FB2: test %bl,%bl;");
    asm("loc_4C5FB4: jne loc_4C5FC1;");
    asm("loc_4C5FB6: mov %eax,%edx;");
    asm("loc_4C5FB8: mov (%edx),%eax;");
    asm("loc_4C5FBA: mov 0x55(%eax),%bl;");
    asm("loc_4C5FBD: test %bl,%bl;");
    asm("loc_4C5FBF: je loc_4C5FB6;");
    asm("loc_4C5FC1: mov %edx,(%ecx);");
    asm("loc_4C5FC3: pop %ebx;");
    asm("loc_4C5FC4: ret;");
    asm("loc_4C5FC5: mov 4(%eax),%eax;");
    asm("loc_4C5FC8: mov (%ecx),%edx;");
    asm("loc_4C5FCA: cmp 8(%eax),%edx;");
    asm("loc_4C5FCD: jne loc_4C5FDC;");
    asm("loc_4C5FCF: nop;");
    asm("loc_4C5FD0: mov %eax,(%ecx);");
    asm("loc_4C5FD2: mov 4(%eax),%eax;");
    asm("loc_4C5FD5: mov (%ecx),%edx;");
    asm("loc_4C5FD7: cmp 8(%eax),%edx;");
    asm("loc_4C5FDA: je loc_4C5FD0;");
    asm("loc_4C5FDC: mov (%ecx),%edx;");
    asm("loc_4C5FDE: cmp %eax,8(%edx);");
    asm("loc_4C5FE1: je loc_4C5FE5;");
    asm("loc_4C5FE3: mov %eax,(%ecx);");
    asm("loc_4C5FE5: pop %ebx;");
    asm("loc_4C5FE6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C5FF0() // _sub_4C5FF0
{
    __DEBUG_ASM(4C5FF0);
    // chunk 0x4C5FF0 _sub_4C5FF0
    asm("loc_4C5FF0: push %esi;");
    asm("loc_4C5FF1: mov %ecx,%esi;");
    asm("loc_4C5FF3: call _sub_4C6010;");
    asm("loc_4C5FF8: testb $1,8(%esp);");
    asm("loc_4C5FFD: je loc_4C6008;");
    asm("loc_4C5FFF: push %esi;");
    asm("loc_4C6000: call _sub_5B7E1D;");
    asm("loc_4C6005: add $4,%esp;");
    asm("loc_4C6008: mov %esi,%eax;");
    asm("loc_4C600A: pop %esi;");
    asm("loc_4C600B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6010() // _sub_4C6010
{
    __DEBUG_ASM(4C6010);
    // chunk 0x4C6010 _sub_4C6010
    asm("loc_4C6010: push $0xFFFFFFFF;");
    asm("loc_4C6012: push $_sub_5BD724;");
    asm("loc_4C6017: mov %fs:0,%eax;");
    asm("loc_4C601D: push %eax;");
    asm("loc_4C601E: mov %esp,%fs:0;");
    asm("loc_4C6025: push %ecx;");
    asm("loc_4C6026: push %ebx;");
    asm("loc_4C6027: push %ebp;");
    asm("loc_4C6028: push %esi;");
    asm("loc_4C6029: push %edi;");
    asm("loc_4C602A: lea 4(%ecx),%edi;");
    asm("loc_4C602D: mov %edi,0x10(%esp);");
    asm("loc_4C6031: mov _import_5C6098,%ebp;");
    asm("loc_4C6037: lea 0x28(%edi),%ecx;");
    asm("loc_4C603A: movl $1,0x1C(%esp);");
    asm("loc_4C6042: call *%ebp;");
    asm("loc_4C6044: lea 0x10(%edi),%ecx;");
    asm("loc_4C6047: movb $0,0x1C(%esp);");
    asm("loc_4C604C: call *%ebp;");
    asm("loc_4C604E: mov 8(%edi),%ebx;");
    asm("loc_4C6051: mov 4(%edi),%esi;");
    asm("loc_4C6054: cmp %ebx,%esi;");
    asm("loc_4C6056: movl $0xFFFFFFFF,0x1C(%esp);");
    asm("loc_4C605E: je loc_4C606B;");
    asm("loc_4C6060: mov %esi,%ecx;");
    asm("loc_4C6062: call *%ebp;");
    asm("loc_4C6064: add $0x1C,%esi;");
    asm("loc_4C6067: cmp %ebx,%esi;");
    asm("loc_4C6069: jne loc_4C6060;");
    asm("loc_4C606B: mov 4(%edi),%eax;");
    asm("loc_4C606E: push %eax;");
    asm("loc_4C606F: call _sub_5B7E1D;");
    asm("loc_4C6074: mov 0x18(%esp),%ecx;");
    asm("loc_4C6078: add $4,%esp;");
    asm("loc_4C607B: xor %eax,%eax;");
    asm("loc_4C607D: mov %eax,4(%edi);");
    asm("loc_4C6080: mov %eax,8(%edi);");
    asm("loc_4C6083: mov %eax,0xC(%edi);");
    asm("loc_4C6086: pop %edi;");
    asm("loc_4C6087: pop %esi;");
    asm("loc_4C6088: pop %ebp;");
    asm("loc_4C6089: pop %ebx;");
    asm("loc_4C608A: mov %ecx,%fs:0;");
    asm("loc_4C6091: add $0x10,%esp;");
    asm("loc_4C6094: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C60A0() // _sub_4C60A0
{
    __DEBUG_ASM(4C60A0);
    // chunk 0x4C60A0 _sub_4C60A0
    asm("loc_4C60A0: push %ebx;");
    asm("loc_4C60A1: push %esi;");
    asm("loc_4C60A2: push %edi;");
    asm("loc_4C60A3: mov %ecx,%edi;");
    asm("loc_4C60A5: mov 8(%edi),%ebx;");
    asm("loc_4C60A8: mov 4(%edi),%esi;");
    asm("loc_4C60AB: cmp %ebx,%esi;");
    asm("loc_4C60AD: je loc_4C60BE;");
    asm("loc_4C60AF: nop;");
    asm("loc_4C60B0: mov %esi,%ecx;");
    asm("loc_4C60B2: call _sub_4C60E0;");
    asm("loc_4C60B7: add $0x1C,%esi;");
    asm("loc_4C60BA: cmp %ebx,%esi;");
    asm("loc_4C60BC: jne loc_4C60B0;");
    asm("loc_4C60BE: mov 4(%edi),%eax;");
    asm("loc_4C60C1: push %eax;");
    asm("loc_4C60C2: call _sub_5B7E1D;");
    asm("loc_4C60C7: xor %eax,%eax;");
    asm("loc_4C60C9: add $4,%esp;");
    asm("loc_4C60CC: mov %eax,4(%edi);");
    asm("loc_4C60CF: mov %eax,8(%edi);");
    asm("loc_4C60D2: mov %eax,0xC(%edi);");
    asm("loc_4C60D5: pop %edi;");
    asm("loc_4C60D6: pop %esi;");
    asm("loc_4C60D7: pop %ebx;");
    asm("loc_4C60D8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C60E0() // ??1FmtStr@@QAE@XZ
{
    __DEBUG_ASM(4C60E0);
    // chunk 0x4C60E0 _sub_4C60E0
    asm("loc_4C60E0: jmpl *_import_5C6098;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C60F0() // _sub_4C60F0
{
    __DEBUG_ASM(4C60F0);
    // chunk 0x4C60F0 _sub_4C60F0
    asm("loc_4C60F0: mov _data_5D6D2C,%eax;");
    asm("loc_4C60F5: mov %eax,_data_6733A8;");
    asm("loc_4C60FA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6100() // _sub_4C6100
{
    __DEBUG_ASM(4C6100);
    // chunk 0x4C6100 _sub_4C6100
    asm("loc_4C6100: mov _data_5D6D2C,%eax;");
    asm("loc_4C6105: mov %eax,_data_6733A4;");
    asm("loc_4C610A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6110() // _sub_4C6110
{
    __DEBUG_ASM(4C6110);
    // chunk 0x4C6110 _sub_4C6110
    asm("loc_4C6110: mov _data_5D6D30,%eax;");
    asm("loc_4C6115: mov %eax,_data_6733A0;");
    asm("loc_4C611A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6120() // _sub_4C6120
{
    __DEBUG_ASM(4C6120);
    // chunk 0x4C6120 _sub_4C6120
    asm("loc_4C6120: push $_data_5D0E30;");
    asm("loc_4C6125: calll *_import_5C6020;");
    asm("loc_4C612B: add $4,%esp;");
    asm("loc_4C612E: mov %eax,_data_67339C;");
    asm("loc_4C6133: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6140() // _sub_4C6140
{
    __DEBUG_ASM(4C6140);
    // chunk 0x4C6140 _sub_4C6140
    asm("loc_4C6140: push $0xFFFFFFFF;");
    asm("loc_4C6142: push $_sub_5BD73C;");
    asm("loc_4C6147: mov %fs:0,%eax;");
    asm("loc_4C614D: push %eax;");
    asm("loc_4C614E: mov %esp,%fs:0;");
    asm("loc_4C6155: sub $8,%esp;");
    asm("loc_4C6158: mov 3(%esp),%al;");
    asm("loc_4C615C: push %ebx;");
    asm("loc_4C615D: push %ebp;");
    asm("loc_4C615E: push %esi;");
    asm("loc_4C615F: mov %ecx,%esi;");
    asm("loc_4C6161: push %edi;");
    asm("loc_4C6162: push $0x28;");
    asm("loc_4C6164: mov %esi,0x18(%esp);");
    asm("loc_4C6168: mov %al,0x1C(%esi);");
    asm("loc_4C616B: call _sub_5B7E84;");
    asm("loc_4C6170: mov %eax,(%eax);");
    asm("loc_4C6172: mov %eax,4(%eax);");
    asm("loc_4C6175: xor %ebx,%ebx;");
    asm("loc_4C6177: add $4,%esp;");
    asm("loc_4C617A: mov %eax,0x20(%esi);");
    asm("loc_4C617D: mov %ebx,0x24(%esi);");
    asm("loc_4C6180: mov %ebx,(%esi);");
    asm("loc_4C6182: mov %ebx,4(%esi);");
    asm("loc_4C6185: mov %ebx,8(%esi);");
    asm("loc_4C6188: mov %ebx,0xC(%esi);");
    asm("loc_4C618B: mov %ebx,0x18(%esi);");
    asm("loc_4C618E: mov 0x20(%esi),%ebp;");
    asm("loc_4C6191: mov (%ebp),%edi;");
    asm("loc_4C6194: cmp %ebp,%edi;");
    asm("loc_4C6196: mov %ebx,0x20(%esp);");
    asm("loc_4C619A: je loc_4C61C7;");
    asm("loc_4C619C: lea (%esp),%esp;");
    asm("loc_4C61A0: mov %edi,%eax;");
    asm("loc_4C61A2: mov 4(%eax),%ecx;");
    asm("loc_4C61A5: mov (%eax),%edx;");
    asm("loc_4C61A7: mov (%edi),%edi;");
    asm("loc_4C61A9: mov %edx,(%ecx);");
    asm("loc_4C61AB: mov (%eax),%ecx;");
    asm("loc_4C61AD: mov 4(%eax),%edx;");
    asm("loc_4C61B0: push %eax;");
    asm("loc_4C61B1: mov %edx,4(%ecx);");
    asm("loc_4C61B4: call _sub_5B7E1D;");
    asm("loc_4C61B9: mov 0x24(%esi),%ecx;");
    asm("loc_4C61BC: add $4,%esp;");
    asm("loc_4C61BF: dec %ecx;");
    asm("loc_4C61C0: cmp %ebp,%edi;");
    asm("loc_4C61C2: mov %ecx,0x24(%esi);");
    asm("loc_4C61C5: jne loc_4C61A0;");
    asm("loc_4C61C7: mov (%esi),%ecx;");
    asm("loc_4C61C9: cmp %ebx,%ecx;");
    asm("loc_4C61CB: mov %bl,0x28(%esi);");
    asm("loc_4C61CE: je loc_4C61E2;");
    asm("loc_4C61D0: push %ebx;");
    asm("loc_4C61D1: push %ebx;");
    asm("loc_4C61D2: call _sub_585D90;");
    asm("loc_4C61D7: mov (%esi),%ecx;");
    asm("loc_4C61D9: push %ebx;");
    asm("loc_4C61DA: push %ebx;");
    asm("loc_4C61DB: push $0xFFFFFFFF;");
    asm("loc_4C61DD: call _sub_585BD0;");
    asm("loc_4C61E2: mov 0x18(%esp),%ecx;");
    asm("loc_4C61E6: pop %edi;");
    asm("loc_4C61E7: mov %esi,%eax;");
    asm("loc_4C61E9: pop %esi;");
    asm("loc_4C61EA: pop %ebp;");
    asm("loc_4C61EB: pop %ebx;");
    asm("loc_4C61EC: mov %ecx,%fs:0;");
    asm("loc_4C61F3: add $0x14,%esp;");
    asm("loc_4C61F6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6200() // _sub_4C6200
{
    __DEBUG_ASM(4C6200);
    // chunk 0x4C6200 _sub_4C6200
    asm("loc_4C6200: push %ebx;");
    asm("loc_4C6201: push %esi;");
    asm("loc_4C6202: push %edi;");
    asm("loc_4C6203: mov %ecx,%edi;");
    asm("loc_4C6205: mov 0x20(%edi),%ebx;");
    asm("loc_4C6208: mov (%ebx),%esi;");
    asm("loc_4C620A: cmp %ebx,%esi;");
    asm("loc_4C620C: je loc_4C6237;");
    asm("loc_4C620E: mov %edi,%edi;");
    asm("loc_4C6210: mov %esi,%eax;");
    asm("loc_4C6212: mov 4(%eax),%ecx;");
    asm("loc_4C6215: mov (%eax),%edx;");
    asm("loc_4C6217: mov (%esi),%esi;");
    asm("loc_4C6219: mov %edx,(%ecx);");
    asm("loc_4C621B: mov (%eax),%ecx;");
    asm("loc_4C621D: mov 4(%eax),%edx;");
    asm("loc_4C6220: push %eax;");
    asm("loc_4C6221: mov %edx,4(%ecx);");
    asm("loc_4C6224: call _sub_5B7E1D;");
    asm("loc_4C6229: mov 0x24(%edi),%ecx;");
    asm("loc_4C622C: add $4,%esp;");
    asm("loc_4C622F: dec %ecx;");
    asm("loc_4C6230: cmp %ebx,%esi;");
    asm("loc_4C6232: mov %ecx,0x24(%edi);");
    asm("loc_4C6235: jne loc_4C6210;");
    asm("loc_4C6237: mov 0x20(%edi),%eax;");
    asm("loc_4C623A: push %eax;");
    asm("loc_4C623B: call _sub_5B7E1D;");
    asm("loc_4C6240: add $4,%esp;");
    asm("loc_4C6243: xor %eax,%eax;");
    asm("loc_4C6245: mov %eax,0x20(%edi);");
    asm("loc_4C6248: mov %eax,0x24(%edi);");
    asm("loc_4C624B: pop %edi;");
    asm("loc_4C624C: pop %esi;");
    asm("loc_4C624D: pop %ebx;");
    asm("loc_4C624E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6250() // _sub_4C6250
{
    __DEBUG_ASM(4C6250);
    // chunk 0x4C6250 _sub_4C6250
    asm("loc_4C6250: push %ebx;");
    asm("loc_4C6251: push %esi;");
    asm("loc_4C6252: push %edi;");
    asm("loc_4C6253: mov %ecx,%edi;");
    asm("loc_4C6255: mov 0x20(%edi),%ebx;");
    asm("loc_4C6258: mov (%ebx),%esi;");
    asm("loc_4C625A: cmp %ebx,%esi;");
    asm("loc_4C625C: je loc_4C6287;");
    asm("loc_4C625E: mov %edi,%edi;");
    asm("loc_4C6260: mov %esi,%eax;");
    asm("loc_4C6262: mov 4(%eax),%ecx;");
    asm("loc_4C6265: mov (%eax),%edx;");
    asm("loc_4C6267: mov (%esi),%esi;");
    asm("loc_4C6269: mov %edx,(%ecx);");
    asm("loc_4C626B: mov (%eax),%ecx;");
    asm("loc_4C626D: mov 4(%eax),%edx;");
    asm("loc_4C6270: push %eax;");
    asm("loc_4C6271: mov %edx,4(%ecx);");
    asm("loc_4C6274: call _sub_5B7E1D;");
    asm("loc_4C6279: mov 0x24(%edi),%ecx;");
    asm("loc_4C627C: add $4,%esp;");
    asm("loc_4C627F: dec %ecx;");
    asm("loc_4C6280: cmp %ebx,%esi;");
    asm("loc_4C6282: mov %ecx,0x24(%edi);");
    asm("loc_4C6285: jne loc_4C6260;");
    asm("loc_4C6287: mov (%edi),%ecx;");
    asm("loc_4C6289: test %ecx,%ecx;");
    asm("loc_4C628B: movb $0,0x28(%edi);");
    asm("loc_4C628F: je loc_4C62A7;");
    asm("loc_4C6291: push $0;");
    asm("loc_4C6293: push $0;");
    asm("loc_4C6295: call _sub_585D90;");
    asm("loc_4C629A: mov (%edi),%ecx;");
    asm("loc_4C629C: push $0;");
    asm("loc_4C629E: push $0;");
    asm("loc_4C62A0: push $0xFFFFFFFF;");
    asm("loc_4C62A2: call _sub_585BD0;");
    asm("loc_4C62A7: pop %edi;");
    asm("loc_4C62A8: pop %esi;");
    asm("loc_4C62A9: pop %ebx;");
    asm("loc_4C62AA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C62B0() // _sub_4C62B0
{
    __DEBUG_ASM(4C62B0);
    // chunk 0x4C62B0 _sub_4C62B0
    asm("loc_4C62B0: sub $8,%esp;");
    asm("loc_4C62B3: push %ebp;");
    asm("loc_4C62B4: push %esi;");
    asm("loc_4C62B5: mov %ecx,%esi;");
    asm("loc_4C62B7: mov (%esi),%ecx;");
    asm("loc_4C62B9: test %ecx,%ecx;");
    asm("loc_4C62BB: push %edi;");
    asm("loc_4C62BC: je loc_4C62C3;");
    asm("loc_4C62BE: call _sub_583B90;");
    asm("loc_4C62C3: mov 0x18(%esi),%eax;");
    asm("loc_4C62C6: test %eax,%eax;");
    asm("loc_4C62C8: je loc_4C63CC;");
    asm("loc_4C62CE: push %eax;");
    asm("loc_4C62CF: calll *_import_5C61FC;");
    asm("loc_4C62D5: mov %eax,%ebp;");
    asm("loc_4C62D7: add $4,%esp;");
    asm("loc_4C62DA: test %ebp,%ebp;");
    asm("loc_4C62DC: mov %ebp,0xC(%esp);");
    asm("loc_4C62E0: je loc_4C63CC;");
    asm("loc_4C62E6: mov 0x20(%esi),%eax;");
    asm("loc_4C62E9: mov (%eax),%edx;");
    asm("loc_4C62EB: lea 0x1C(%esi),%ecx;");
    asm("loc_4C62EE: push %eax;");
    asm("loc_4C62EF: push %edx;");
    asm("loc_4C62F0: lea 0x18(%esp),%eax;");
    asm("loc_4C62F4: push %eax;");
    asm("loc_4C62F5: calll *_import_5C618C;");
    asm("loc_4C62FB: mov (%esi),%ecx;");
    asm("loc_4C62FD: test %ecx,%ecx;");
    asm("loc_4C62FF: movb $0,0x28(%esi);");
    asm("loc_4C6303: je loc_4C631B;");
    asm("loc_4C6305: push $0;");
    asm("loc_4C6307: push $0;");
    asm("loc_4C6309: call _sub_585D90;");
    asm("loc_4C630E: mov (%esi),%ecx;");
    asm("loc_4C6310: push $0;");
    asm("loc_4C6312: push $0;");
    asm("loc_4C6314: push $0xFFFFFFFF;");
    asm("loc_4C6316: call _sub_585BD0;");
    asm("loc_4C631B: mov (%esi),%ecx;");
    asm("loc_4C631D: test %ecx,%ecx;");
    asm("loc_4C631F: mov 0x1C(%esp),%eax;");
    asm("loc_4C6323: mov 0x18(%esp),%edi;");
    asm("loc_4C6327: mov %al,0x28(%esi);");
    asm("loc_4C632A: je loc_4C6340;");
    asm("loc_4C632C: push %eax;");
    asm("loc_4C632D: push $1;");
    asm("loc_4C632F: lea 8(%ebp),%edx;");
    asm("loc_4C6332: push %edx;");
    asm("loc_4C6333: call _sub_585A90;");
    asm("loc_4C6338: mov (%esi),%ecx;");
    asm("loc_4C633A: push %edi;");
    asm("loc_4C633B: call _sub_5850F0;");
    asm("loc_4C6340: push %ebx;");
    asm("loc_4C6341: push %edi;");
    asm("loc_4C6342: mov %esi,%ecx;");
    asm("loc_4C6344: call _sub_4C6B80;");
    asm("loc_4C6349: mov 0x20(%esi),%ebx;");
    asm("loc_4C634C: mov (%ebx),%edi;");
    asm("loc_4C634E: cmp %ebx,%edi;");
    asm("loc_4C6350: je loc_4C6379;");
    asm("loc_4C6352: mov _import_5C629C,%ebp;");
    asm("loc_4C6358: mov 0xC(%edi),%eax;");
    asm("loc_4C635B: push %eax;");
    asm("loc_4C635C: call *%ebp;");
    asm("loc_4C635E: add $4,%esp;");
    asm("loc_4C6361: test %eax,%eax;");
    asm("loc_4C6363: je loc_4C636F;");
    asm("loc_4C6365: push %esi;");
    asm("loc_4C6366: lea 8(%edi),%ecx;");
    asm("loc_4C6369: calll *_import_5C6460;");
    asm("loc_4C636F: mov (%edi),%edi;");
    asm("loc_4C6371: cmp %ebx,%edi;");
    asm("loc_4C6373: jne loc_4C6358;");
    asm("loc_4C6375: mov 0x10(%esp),%ebp;");
    asm("loc_4C6379: mov 4(%esi),%ecx;");
    asm("loc_4C637C: test %ecx,%ecx;");
    asm("loc_4C637E: pop %ebx;");
    asm("loc_4C637F: je loc_4C6391;");
    asm("loc_4C6381: mov 0x14(%ebp),%edx;");
    asm("loc_4C6384: mov (%ecx),%eax;");
    asm("loc_4C6386: push $0;");
    asm("loc_4C6388: push %edx;");
    asm("loc_4C6389: push $0x1E;");
    asm("loc_4C638B: calll *0xA8(%eax);");
    asm("loc_4C6391: mov 8(%esi),%eax;");
    asm("loc_4C6394: test %eax,%eax;");
    asm("loc_4C6396: je loc_4C63CC;");
    asm("loc_4C6398: mov (%eax),%edi;");
    asm("loc_4C639A: call _sub_4C4F70;");
    asm("loc_4C639F: fmuls _data_5CA230;");
    asm("loc_4C63A5: call _sub_5B7EC0;");
    asm("loc_4C63AA: mov 8(%esi),%ecx;");
    asm("loc_4C63AD: push %eax;");
    asm("loc_4C63AE: push $0x64;");
    asm("loc_4C63B0: push $0x40;");
    asm("loc_4C63B2: calll *0xA8(%edi);");
    asm("loc_4C63B8: mov 8(%esi),%ecx;");
    asm("loc_4C63BB: mov (%ecx),%eax;");
    asm("loc_4C63BD: push $0;");
    asm("loc_4C63BF: push $0x408;");
    asm("loc_4C63C4: push $3;");
    asm("loc_4C63C6: calll *0xA8(%eax);");
    asm("loc_4C63CC: pop %edi;");
    asm("loc_4C63CD: pop %esi;");
    asm("loc_4C63CE: pop %ebp;");
    asm("loc_4C63CF: add $8,%esp;");
    asm("loc_4C63D2: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C63E0() // _sub_4C63E0
{
    __DEBUG_ASM(4C63E0);
    // chunk 0x4C63E0 _sub_4C63E0
    asm("loc_4C63E0: push %ebx;");
    asm("loc_4C63E1: mov 0xC(%esp),%ebx;");
    asm("loc_4C63E5: push %esi;");
    asm("loc_4C63E6: push %edi;");
    asm("loc_4C63E7: mov 0x10(%esp),%edi;");
    asm("loc_4C63EB: movl $0,(%edi);");
    asm("loc_4C63F1: mov %ecx,%esi;");
    asm("loc_4C63F3: movl $0,(%ebx);");
    asm("loc_4C63F9: mov 0x18(%esi),%eax;");
    asm("loc_4C63FC: test %eax,%eax;");
    asm("loc_4C63FE: je loc_4C641D;");
    asm("loc_4C6400: push %eax;");
    asm("loc_4C6401: calll *_import_5C61FC;");
    asm("loc_4C6407: mov 0x100(%eax),%eax;");
    asm("loc_4C640D: add $4,%esp;");
    asm("loc_4C6410: lea 0x1C(%esi),%ecx;");
    asm("loc_4C6413: mov %eax,(%edi);");
    asm("loc_4C6415: calll *_import_5C6430;");
    asm("loc_4C641B: fstps (%ebx);");
    asm("loc_4C641D: pop %edi;");
    asm("loc_4C641E: pop %esi;");
    asm("loc_4C641F: pop %ebx;");
    asm("loc_4C6420: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6430() // _sub_4C6430
{
    __DEBUG_ASM(4C6430);
    // chunk 0x4C6430 _sub_4C6430
    asm("loc_4C6430: push %ebx;");
    asm("loc_4C6431: push %esi;");
    asm("loc_4C6432: push %edi;");
    asm("loc_4C6433: mov 0x14(%esp),%edi;");
    asm("loc_4C6437: test %edi,%edi;");
    asm("loc_4C6439: mov %ecx,%esi;");
    asm("loc_4C643B: mov 0x10(%esp),%ecx;");
    asm("loc_4C643F: jne loc_4C6444;");
    asm("loc_4C6441: mov 0x14(%ecx),%edi;");
    asm("loc_4C6444: mov 0x20(%esi),%edx;");
    asm("loc_4C6447: mov (%edx),%eax;");
    asm("loc_4C6449: cmp %edx,%eax;");
    asm("loc_4C644B: je loc_4C645D;");
    asm("loc_4C644D: lea (%ecx),%ecx;");
    asm("loc_4C6450: lea 8(%eax),%ebx;");
    asm("loc_4C6453: cmp %ecx,%ebx;");
    asm("loc_4C6455: je loc_4C6465;");
    asm("loc_4C6457: mov (%eax),%eax;");
    asm("loc_4C6459: cmp %edx,%eax;");
    asm("loc_4C645B: jne loc_4C6450;");
    asm("loc_4C645D: pop %edi;");
    asm("loc_4C645E: pop %esi;");
    asm("loc_4C645F: xor %al,%al;");
    asm("loc_4C6461: pop %ebx;");
    asm("loc_4C6462: ret $8;");
    asm("loc_4C6465: mov 0x14(%ecx),%edx;");
    asm("loc_4C6468: cmp %edx,%edi;");
    asm("loc_4C646A: jb loc_4C648D;");
    asm("loc_4C646C: mov 4(%eax),%ecx;");
    asm("loc_4C646F: mov (%eax),%edx;");
    asm("loc_4C6471: mov %edx,(%ecx);");
    asm("loc_4C6473: mov (%eax),%ecx;");
    asm("loc_4C6475: mov 4(%eax),%edx;");
    asm("loc_4C6478: push %eax;");
    asm("loc_4C6479: mov %edx,4(%ecx);");
    asm("loc_4C647C: call _sub_5B7E1D;");
    asm("loc_4C6481: mov 0x24(%esi),%eax;");
    asm("loc_4C6484: add $4,%esp;");
    asm("loc_4C6487: dec %eax;");
    asm("loc_4C6488: mov %eax,0x24(%esi);");
    asm("loc_4C648B: jmp loc_4C6496;");
    asm("loc_4C648D: sub %edi,%edx;");
    asm("loc_4C648F: push %edx;");
    asm("loc_4C6490: calll *_import_5C6428;");
    asm("loc_4C6496: mov (%esi),%ecx;");
    asm("loc_4C6498: test %ecx,%ecx;");
    asm("loc_4C649A: je loc_4C64A5;");
    asm("loc_4C649C: add $0x1C,%esi;");
    asm("loc_4C649F: push %esi;");
    asm("loc_4C64A0: call _sub_5850F0;");
    asm("loc_4C64A5: pop %edi;");
    asm("loc_4C64A6: pop %esi;");
    asm("loc_4C64A7: mov $1,%al;");
    asm("loc_4C64A9: pop %ebx;");
    asm("loc_4C64AA: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C64B0() // _sub_4C64B0
{
    __DEBUG_ASM(4C64B0);
    // chunk 0x4C64B0 _sub_4C64B0
    asm("loc_4C64B0: push %ecx;");
    asm("loc_4C64B1: push %esi;");
    asm("loc_4C64B2: mov 0xC(%esp),%esi;");
    asm("loc_4C64B6: test %esi,%esi;");
    asm("loc_4C64B8: mov %ecx,4(%esp);");
    asm("loc_4C64BC: jne loc_4C64C5;");
    asm("loc_4C64BE: xor %al,%al;");
    asm("loc_4C64C0: pop %esi;");
    asm("loc_4C64C1: pop %ecx;");
    asm("loc_4C64C2: ret $0xC;");
    asm("loc_4C64C5: mov 0x10(%esp),%eax;");
    asm("loc_4C64C9: test %eax,%eax;");
    asm("loc_4C64CB: jne loc_4C64D0;");
    asm("loc_4C64CD: mov 0x14(%esi),%eax;");
    asm("loc_4C64D0: push %ebx;");
    asm("loc_4C64D1: mov _import_5C6428,%ebx;");
    asm("loc_4C64D7: push %edi;");
    asm("loc_4C64D8: mov 0x14(%esi),%edi;");
    asm("loc_4C64DB: push %eax;");
    asm("loc_4C64DC: mov %esi,%ecx;");
    asm("loc_4C64DE: call *%ebx;");
    asm("loc_4C64E0: push $0;");
    asm("loc_4C64E2: mov %esi,%ecx;");
    asm("loc_4C64E4: calll *_import_5C6390;");
    asm("loc_4C64EA: mov 4(%esi),%eax;");
    asm("loc_4C64ED: push %eax;");
    asm("loc_4C64EE: calll *_import_5C63A0;");
    asm("loc_4C64F4: add $4,%esp;");
    asm("loc_4C64F7: push %eax;");
    asm("loc_4C64F8: mov 0x10(%esp),%eax;");
    asm("loc_4C64FC: push %esi;");
    asm("loc_4C64FD: lea 0x1C(%eax),%ecx;");
    asm("loc_4C6500: calll *_import_5C6434;");
    asm("loc_4C6506: mov 0x1C(%esp),%al;");
    asm("loc_4C650A: test %al,%al;");
    asm("loc_4C650C: je loc_4C6518;");
    asm("loc_4C650E: push $0x10;");
    asm("loc_4C6510: call _sub_5645C0;");
    asm("loc_4C6515: add $4,%esp;");
    asm("loc_4C6518: push %edi;");
    asm("loc_4C6519: mov %esi,%ecx;");
    asm("loc_4C651B: call *%ebx;");
    asm("loc_4C651D: pop %edi;");
    asm("loc_4C651E: pop %ebx;");
    asm("loc_4C651F: mov $1,%al;");
    asm("loc_4C6521: pop %esi;");
    asm("loc_4C6522: pop %ecx;");
    asm("loc_4C6523: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6530() // _sub_4C6530
{
    asm("jmp dgb_4C6530;"); // jumptable skip
    asm(".long _jmp_4C6820;"); // jumptable address
    __DEBUG_ASM(4C6530);
    // chunk 0x4C6530 _sub_4C6530
    asm("loc_4C6530: mov %fs:0,%eax;");
    asm("loc_4C6536: push $0xFFFFFFFF;");
    asm("loc_4C6538: push $_sub_5BD759;");
    asm("loc_4C653D: push %eax;");
    asm("loc_4C653E: mov %esp,%fs:0;");
    asm("loc_4C6545: sub $0x24,%esp;");
    asm("loc_4C6548: push %ebx;");
    asm("loc_4C6549: push %ebp;");
    asm("loc_4C654A: push %esi;");
    asm("loc_4C654B: mov 0x40(%esp),%esi;");
    asm("loc_4C654F: test %esi,%esi;");
    asm("loc_4C6551: push %edi;");
    asm("loc_4C6552: mov %ecx,%ebp;");
    asm("loc_4C6554: je loc_4C670C;");
    asm("loc_4C655A: cmpl $0,(%ebp);");
    asm("loc_4C655E: je loc_4C670C;");
    asm("loc_4C6564: mov 0x4C(%esp),%edi;");
    asm("loc_4C6568: test %edi,%edi;");
    asm("loc_4C656A: movb $0,0x44(%esp);");
    asm("loc_4C656F: jne loc_4C6574;");
    asm("loc_4C6571: mov 0x14(%esi),%edi;");
    asm("loc_4C6574: mov 4(%esi),%eax;");
    asm("loc_4C6577: test %eax,%eax;");
    asm("loc_4C6579: movl $0,0x10(%esp);");
    asm("loc_4C6581: je loc_4C6598;");
    asm("loc_4C6583: push %eax;");
    asm("loc_4C6584: calll *_import_5C603C;");
    asm("loc_4C658A: add $4,%esp;");
    asm("loc_4C658D: test %eax,%eax;");
    asm("loc_4C658F: je loc_4C6598;");
    asm("loc_4C6591: mov 0x5C(%eax),%eax;");
    asm("loc_4C6594: mov %eax,0x10(%esp);");
    asm("loc_4C6598: cmp $1,%edi;");
    asm("loc_4C659B: mov %edi,0x4C(%esp);");
    asm("loc_4C659F: jge loc_4C65A9;");
    asm("loc_4C65A1: movl $1,0x4C(%esp);");
    asm("loc_4C65A9: fildl 0x4C(%esp);");
    asm("loc_4C65AD: fmuls 0x10(%esp);");
    asm("loc_4C65B1: call _sub_5B7EC0;");
    asm("loc_4C65B6: flds _data_5C7474;");
    asm("loc_4C65BC: mov %eax,%ebx;");
    asm("loc_4C65BE: mov 0x18(%ebp),%eax;");
    asm("loc_4C65C1: test %eax,%eax;");
    asm("loc_4C65C3: movl $0,0x4C(%esp);");
    asm("loc_4C65CB: je loc_4C65EC;");
    asm("loc_4C65CD: push %eax;");
    asm("loc_4C65CE: fstp %st(0);");
    asm("loc_4C65D0: calll *_import_5C61FC;");
    asm("loc_4C65D6: mov 0x100(%eax),%ecx;");
    asm("loc_4C65DC: mov %ecx,0x50(%esp);");
    asm("loc_4C65E0: add $4,%esp;");
    asm("loc_4C65E3: lea 0x1C(%ebp),%ecx;");
    asm("loc_4C65E6: calll *_import_5C6430;");
    asm("loc_4C65EC: flds 0x4C(%esp);");
    asm("loc_4C65F0: fsub %st(1),%st;");
    asm("loc_4C65F2: call _sub_5B7EC0;");
    asm("loc_4C65F7: fstp %st(0);");
    asm("loc_4C65F9: cmp %eax,%ebx;");
    asm("loc_4C65FB: jbe loc_4C6602;");
    asm("loc_4C65FD: movb $1,0x44(%esp);");
    asm("loc_4C6602: mov 0x14(%esi),%ebx;");
    asm("loc_4C6605: push %edi;");
    asm("loc_4C6606: mov %esi,%ecx;");
    asm("loc_4C6608: mov %ebx,0x50(%esp);");
    asm("loc_4C660C: calll *_import_5C6428;");
    asm("loc_4C6612: mov %esi,%ecx;");
    asm("loc_4C6614: calll *_import_5C60B4;");
    asm("loc_4C661A: test %al,%al;");
    asm("loc_4C661C: mov 0x48(%esp),%edi;");
    asm("loc_4C6620: je loc_4C669D;");
    asm("loc_4C6622: mov _import_5C6210,%edx;");
    asm("loc_4C6628: mov (%edi),%eax;");
    asm("loc_4C662A: cmp (%edx),%eax;");
    asm("loc_4C662C: jne loc_4C669D;");
    asm("loc_4C662E: mov 0x44(%esp),%al;");
    asm("loc_4C6632: test %al,%al;");
    asm("loc_4C6634: mov %esi,%ecx;");
    asm("loc_4C6636: je loc_4C6660;");
    asm("loc_4C6638: push %ebx;");
    asm("loc_4C6639: calll *_import_5C6428;");
    asm("loc_4C663F: mov 0x50(%esp),%al;");
    asm("loc_4C6643: test %al,%al;");
    asm("loc_4C6645: je loc_4C670C;");
    asm("loc_4C664B: mov _data_67339C,%eax;");
    asm("loc_4C6650: push $0;");
    asm("loc_4C6652: push %eax;");
    asm("loc_4C6653: call _sub_489E80;");
    asm("loc_4C6658: add $8,%esp;");
    asm("loc_4C665B: jmp loc_4C670C;");
    asm("loc_4C6660: push $0;");
    asm("loc_4C6662: calll *_import_5C6390;");
    asm("loc_4C6668: mov 4(%esi),%eax;");
    asm("loc_4C666B: push %eax;");
    asm("loc_4C666C: lea 0x1C(%ebp),%edi;");
    asm("loc_4C666F: calll *_import_5C63A0;");
    asm("loc_4C6675: add $4,%esp;");
    asm("loc_4C6678: mov %edi,%ecx;");
    asm("loc_4C667A: push %eax;");
    asm("loc_4C667B: push %esi;");
    asm("loc_4C667C: calll *_import_5C6434;");
    asm("loc_4C6682: mov 0x50(%esp),%al;");
    asm("loc_4C6686: test %al,%al;");
    asm("loc_4C6688: je loc_4C6802;");
    asm("loc_4C668E: push $0x10;");
    asm("loc_4C6690: call _sub_5645C0;");
    asm("loc_4C6695: add $4,%esp;");
    asm("loc_4C6698: jmp loc_4C6802;");
    asm("loc_4C669D: lea 0x14(%esp),%ecx;");
    asm("loc_4C66A1: calll *_import_5C61B0;");
    asm("loc_4C66A7: mov (%ebp),%ecx;");
    asm("loc_4C66AA: mov 0x4B8(%ecx),%eax;");
    asm("loc_4C66B0: push %eax;");
    asm("loc_4C66B1: lea 0x18(%esp),%ecx;");
    asm("loc_4C66B5: movl $0,0x40(%esp);");
    asm("loc_4C66BD: calll *_import_5C61C8;");
    asm("loc_4C66C3: mov _import_5C6210,%edx;");
    asm("loc_4C66C9: mov (%edi),%eax;");
    asm("loc_4C66CB: mov (%edx),%ecx;");
    asm("loc_4C66CD: cmp %ecx,%eax;");
    asm("loc_4C66CF: jne loc_4C672D;");
    asm("loc_4C66D1: mov 0x44(%esp),%al;");
    asm("loc_4C66D5: test %al,%al;");
    asm("loc_4C66D7: mov %esi,%ecx;");
    asm("loc_4C66D9: je loc_4C6723;");
    asm("loc_4C66DB: push %ebx;");
    asm("loc_4C66DC: calll *_import_5C6428;");
    asm("loc_4C66E2: mov 0x50(%esp),%al;");
    asm("loc_4C66E6: test %al,%al;");
    asm("loc_4C66E8: je loc_4C66FA;");
    asm("loc_4C66EA: mov _data_67339C,%eax;");
    asm("loc_4C66EF: push $0;");
    asm("loc_4C66F1: push %eax;");
    asm("loc_4C66F2: call _sub_489E80;");
    asm("loc_4C66F7: add $8,%esp;");
    asm("loc_4C66FA: lea 0x14(%esp),%ecx;");
    asm("loc_4C66FE: movl $0xFFFFFFFF,0x3C(%esp);");
    asm("loc_4C6706: calll *_import_5C61B4;");
    asm("loc_4C670C: xor %al,%al;");
    asm("loc_4C670E: mov 0x34(%esp),%ecx;");
    asm("loc_4C6712: pop %edi;");
    asm("loc_4C6713: pop %esi;");
    asm("loc_4C6714: pop %ebp;");
    asm("loc_4C6715: pop %ebx;");
    asm("loc_4C6716: mov %ecx,%fs:0;");
    asm("loc_4C671D: add $0x30,%esp;");
    asm("loc_4C6720: ret $0x10;");
    asm("loc_4C6723: calll *_import_5C6394;");
    asm("loc_4C6729: push $0;");
    asm("loc_4C672B: jmp loc_4C676E;");
    asm("loc_4C672D: push %eax;");
    asm("loc_4C672E: lea 0x18(%esp),%ecx;");
    asm("loc_4C6732: calll *_import_5C61C4;");
    asm("loc_4C6738: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4C673B: mov %esi,%ecx;");
    asm("loc_4C673D: jne loc_4C6759;");
    asm("loc_4C673F: push %ebx;");
    asm("loc_4C6740: calll *_import_5C6428;");
    asm("loc_4C6746: mov 0x50(%esp),%al;");
    asm("loc_4C674A: test %al,%al;");
    asm("loc_4C674C: je loc_4C66FA;");
    asm("loc_4C674E: mov _data_67339C,%ecx;");
    asm("loc_4C6754: push $0;");
    asm("loc_4C6756: push %ecx;");
    asm("loc_4C6757: jmp loc_4C66F2;");
    asm("loc_4C6759: push %edi;");
    asm("loc_4C675A: calll *_import_5C63A4;");
    asm("loc_4C6760: mov _import_5C6210,%edx;");
    asm("loc_4C6766: mov (%edi),%edi;");
    asm("loc_4C6768: cmp (%edx),%edi;");
    asm("loc_4C676A: je loc_4C6776;");
    asm("loc_4C676C: push $1;");
    asm("loc_4C676E: mov %esi,%ecx;");
    asm("loc_4C6770: calll *_import_5C6390;");
    asm("loc_4C6776: mov 4(%esi),%eax;");
    asm("loc_4C6779: push %eax;");
    asm("loc_4C677A: lea 0x1C(%ebp),%edi;");
    asm("loc_4C677D: calll *_import_5C63A0;");
    asm("loc_4C6783: add $4,%esp;");
    asm("loc_4C6786: mov %edi,%ecx;");
    asm("loc_4C6788: push %eax;");
    asm("loc_4C6789: push %esi;");
    asm("loc_4C678A: calll *_import_5C6434;");
    asm("loc_4C6790: mov 0x50(%esp),%al;");
    asm("loc_4C6794: test %al,%al;");
    asm("loc_4C6796: je loc_4C67F0;");
    asm("loc_4C6798: mov %esi,%ecx;");
    asm("loc_4C679A: calll *_import_5C60B4;");
    asm("loc_4C67A0: test %al,%al;");
    asm("loc_4C67A2: je loc_4C67A8;");
    asm("loc_4C67A4: push $0x10;");
    asm("loc_4C67A6: jmp loc_4C67E8;");
    asm("loc_4C67A8: mov 4(%esi),%eax;");
    asm("loc_4C67AB: push %eax;");
    asm("loc_4C67AC: calll *_import_5C603C;");
    asm("loc_4C67B2: add $4,%esp;");
    asm("loc_4C67B5: test %eax,%eax;");
    asm("loc_4C67B7: je loc_4C67F0;");
    asm("loc_4C67B9: mov (%eax),%edx;");
    asm("loc_4C67BB: mov %eax,%ecx;");
    asm("loc_4C67BD: calll *0x10(%edx);");
    asm("loc_4C67C0: add $0xFFFFFFFA,%eax;");
    asm("loc_4C67C3: cmp $0x1B,%eax;");
    asm("loc_4C67C6: ja loc_4C67F0;");
    asm("loc_4C67C8: movzbl _data_4C6838(%eax),%eax;");
    asm("loc_4C67CF: jmpl *_jmp_4C6820(,%eax,4);");
    asm("loc_4C67D6: push $0x14;");
    asm("loc_4C67D8: jmp loc_4C67E8;");
    asm("loc_4C67DA: push $0x12;");
    asm("loc_4C67DC: jmp loc_4C67E8;");
    asm("loc_4C67DE: push $0x16;");
    asm("loc_4C67E0: jmp loc_4C67E8;");
    asm("loc_4C67E2: push $0x13;");
    asm("loc_4C67E4: jmp loc_4C67E8;");
    asm("loc_4C67E6: push $0x15;");
    asm("loc_4C67E8: call _sub_5645C0;");
    asm("loc_4C67ED: add $4,%esp;");
    asm("loc_4C67F0: lea 0x14(%esp),%ecx;");
    asm("loc_4C67F4: movl $0xFFFFFFFF,0x3C(%esp);");
    asm("loc_4C67FC: calll *_import_5C61B4;");
    asm("loc_4C6802: mov (%ebp),%ecx;");
    asm("loc_4C6805: push %edi;");
    asm("loc_4C6806: call _sub_5850F0;");
    asm("loc_4C680B: mov 0x4C(%esp),%ecx;");
    asm("loc_4C680F: push %ecx;");
    asm("loc_4C6810: mov %esi,%ecx;");
    asm("loc_4C6812: calll *_import_5C6428;");
    asm("loc_4C6818: mov $1,%al;");
    asm("loc_4C681A: jmp loc_4C670E;");
    asm("int3;"); // unreachable
    asm("_jmp_4C6820: .long loc_4C67DE;");
    asm(".long loc_4C67E6;");
    asm(".long loc_4C67E2;");
    asm(".long loc_4C67DA;");
    asm(".long loc_4C67D6;");
    asm(".long loc_4C67F0;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4C6530);
_naked _weak void _sub_4C6860() // _sub_4C6860
{
    asm("jmp dgb_4C6860;"); // jumptable skip
    asm(".long _jmp_4C68D0;"); // jumptable address
    __DEBUG_ASM(4C6860);
    // chunk 0x4C6860 _sub_4C6860
    asm("loc_4C6860: mov 4(%esp),%eax;");
    asm("loc_4C6864: push %eax;");
    asm("loc_4C6865: calll *_import_5C603C;");
    asm("loc_4C686B: add $4,%esp;");
    asm("loc_4C686E: test %eax,%eax;");
    asm("loc_4C6870: je loc_4C68CB;");
    asm("loc_4C6872: mov (%eax),%edx;");
    asm("loc_4C6874: mov %eax,%ecx;");
    asm("loc_4C6876: calll *0x10(%edx);");
    asm("loc_4C6879: add $0xFFFFFFFA,%eax;");
    asm("loc_4C687C: cmp $0x1B,%eax;");
    asm("loc_4C687F: ja loc_4C68CB;");
    asm("loc_4C6881: movzbl _data_4C68E8(%eax),%eax;");
    asm("loc_4C6888: jmpl *_jmp_4C68D0(,%eax,4);");
    asm("loc_4C688F: push $0x14;");
    asm("loc_4C6891: call _sub_5645C0;");
    asm("loc_4C6896: add $4,%esp;");
    asm("loc_4C6899: ret $4;");
    asm("loc_4C689C: push $0x12;");
    asm("loc_4C689E: call _sub_5645C0;");
    asm("loc_4C68A3: add $4,%esp;");
    asm("loc_4C68A6: ret $4;");
    asm("loc_4C68A9: push $0x16;");
    asm("loc_4C68AB: call _sub_5645C0;");
    asm("loc_4C68B0: add $4,%esp;");
    asm("loc_4C68B3: ret $4;");
    asm("loc_4C68B6: push $0x13;");
    asm("loc_4C68B8: call _sub_5645C0;");
    asm("loc_4C68BD: add $4,%esp;");
    asm("loc_4C68C0: ret $4;");
    asm("loc_4C68C3: push $0x15;");
    asm("loc_4C68C5: call _sub_5645C0;");
    asm("loc_4C68CA: pop %ecx;");
    asm("loc_4C68CB: ret $4;");
    asm("int3;"); // unreachable
    asm("_jmp_4C68D0: .long loc_4C68A9;");
    asm(".long loc_4C68C3;");
    asm(".long loc_4C68B6;");
    asm(".long loc_4C689C;");
    asm(".long loc_4C688F;");
    asm(".long loc_4C68CB;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4C6860);
_naked _weak void _sub_4C6910() // _sub_4C6910
{
    asm("jmp dgb_4C6910;"); // jumptable skip
    asm(".long _jmp_4C6A1C;"); // jumptable address
    __DEBUG_ASM(4C6910);
    // chunk 0x4C6910 _sub_4C6910
    asm("loc_4C6910: push %ebx;");
    asm("loc_4C6911: push %esi;");
    asm("loc_4C6912: mov 0xC(%esp),%esi;");
    asm("loc_4C6916: test %esi,%esi;");
    asm("loc_4C6918: push %edi;");
    asm("loc_4C6919: mov %ecx,%ebx;");
    asm("loc_4C691B: je loc_4C6A14;");
    asm("loc_4C6921: cmpl $0,(%ebx);");
    asm("loc_4C6924: je loc_4C6A14;");
    asm("loc_4C692A: mov 0x14(%esp),%edi;");
    asm("loc_4C692E: mov 8(%esi),%eax;");
    asm("loc_4C6931: push %edi;");
    asm("loc_4C6932: push %eax;");
    asm("loc_4C6933: calll *_import_5C6D24;");
    asm("loc_4C6939: add $8,%esp;");
    asm("loc_4C693C: test %eax,%eax;");
    asm("loc_4C693E: je loc_4C6A14;");
    asm("loc_4C6944: push $0;");
    asm("loc_4C6946: push %edi;");
    asm("loc_4C6947: calll *_import_5C6028;");
    asm("loc_4C694D: mov %eax,0x18(%esp);");
    asm("loc_4C6951: add $8,%esp;");
    asm("loc_4C6954: lea 0x10(%esp),%eax;");
    asm("loc_4C6958: push %eax;");
    asm("loc_4C6959: mov %esi,%ecx;");
    asm("loc_4C695B: calll *_import_5C63A4;");
    asm("loc_4C6961: mov _import_5C6210,%ecx;");
    asm("loc_4C6967: cmp (%ecx),%edi;");
    asm("loc_4C6969: je loc_4C6975;");
    asm("loc_4C696B: push $1;");
    asm("loc_4C696D: mov %esi,%ecx;");
    asm("loc_4C696F: calll *_import_5C6390;");
    asm("loc_4C6975: mov (%ebx),%ecx;");
    asm("loc_4C6977: lea 0x1C(%ebx),%edx;");
    asm("loc_4C697A: push %edx;");
    asm("loc_4C697B: call _sub_5850F0;");
    asm("loc_4C6980: mov %esi,%ecx;");
    asm("loc_4C6982: calll *_import_5C60B4;");
    asm("loc_4C6988: test %al,%al;");
    asm("loc_4C698A: je loc_4C699C;");
    asm("loc_4C698C: push $0x10;");
    asm("loc_4C698E: call _sub_5645C0;");
    asm("loc_4C6993: add $4,%esp;");
    asm("loc_4C6996: pop %edi;");
    asm("loc_4C6997: pop %esi;");
    asm("loc_4C6998: pop %ebx;");
    asm("loc_4C6999: ret $8;");
    asm("loc_4C699C: mov 4(%esi),%esi;");
    asm("loc_4C699F: push %esi;");
    asm("loc_4C69A0: calll *_import_5C603C;");
    asm("loc_4C69A6: add $4,%esp;");
    asm("loc_4C69A9: test %eax,%eax;");
    asm("loc_4C69AB: je loc_4C6A14;");
    asm("loc_4C69AD: mov (%eax),%edx;");
    asm("loc_4C69AF: mov %eax,%ecx;");
    asm("loc_4C69B1: calll *0x10(%edx);");
    asm("loc_4C69B4: add $0xFFFFFFFA,%eax;");
    asm("loc_4C69B7: cmp $0x1B,%eax;");
    asm("loc_4C69BA: ja loc_4C6A14;");
    asm("loc_4C69BC: movzbl _data_4C6A34(%eax),%eax;");
    asm("loc_4C69C3: jmpl *_jmp_4C6A1C(,%eax,4);");
    asm("loc_4C69CA: push $0x14;");
    asm("loc_4C69CC: call _sub_5645C0;");
    asm("loc_4C69D1: add $4,%esp;");
    asm("loc_4C69D4: pop %edi;");
    asm("loc_4C69D5: pop %esi;");
    asm("loc_4C69D6: pop %ebx;");
    asm("loc_4C69D7: ret $8;");
    asm("loc_4C69DA: push $0x12;");
    asm("loc_4C69DC: call _sub_5645C0;");
    asm("loc_4C69E1: add $4,%esp;");
    asm("loc_4C69E4: pop %edi;");
    asm("loc_4C69E5: pop %esi;");
    asm("loc_4C69E6: pop %ebx;");
    asm("loc_4C69E7: ret $8;");
    asm("loc_4C69EA: push $0x16;");
    asm("loc_4C69EC: call _sub_5645C0;");
    asm("loc_4C69F1: add $4,%esp;");
    asm("loc_4C69F4: pop %edi;");
    asm("loc_4C69F5: pop %esi;");
    asm("loc_4C69F6: pop %ebx;");
    asm("loc_4C69F7: ret $8;");
    asm("loc_4C69FA: push $0x13;");
    asm("loc_4C69FC: call _sub_5645C0;");
    asm("loc_4C6A01: add $4,%esp;");
    asm("loc_4C6A04: pop %edi;");
    asm("loc_4C6A05: pop %esi;");
    asm("loc_4C6A06: pop %ebx;");
    asm("loc_4C6A07: ret $8;");
    asm("loc_4C6A0A: push $0x15;");
    asm("loc_4C6A0C: call _sub_5645C0;");
    asm("loc_4C6A11: add $4,%esp;");
    asm("loc_4C6A14: pop %edi;");
    asm("loc_4C6A15: pop %esi;");
    asm("loc_4C6A16: pop %ebx;");
    asm("loc_4C6A17: ret $8;");
    asm("int3;"); // unreachable
    asm("_jmp_4C6A1C: .long loc_4C69EA;");
    asm(".long loc_4C6A0A;");
    asm(".long loc_4C69FA;");
    asm(".long loc_4C69DA;");
    asm(".long loc_4C69CA;");
    asm(".long loc_4C6A14;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4C6910);
_naked _weak void _sub_4C6A50() // _sub_4C6A50
{
    __DEBUG_ASM(4C6A50);
    // chunk 0x4C6A50 _sub_4C6A50
    asm("loc_4C6A50: push %esi;");
    asm("loc_4C6A51: mov %ecx,%esi;");
    asm("loc_4C6A53: mov (%esi),%ecx;");
    asm("loc_4C6A55: test %ecx,%ecx;");
    asm("loc_4C6A57: je loc_4C6B71;");
    asm("loc_4C6A5D: push %ebx;");
    asm("loc_4C6A5E: push %edi;");
    asm("loc_4C6A5F: mov 0x10(%esp),%edi;");
    asm("loc_4C6A63: test %edi,%edi;");
    asm("loc_4C6A65: je loc_4C6B53;");
    asm("loc_4C6A6B: mov _import_5C60B4,%ebx;");
    asm("loc_4C6A71: mov %edi,%ecx;");
    asm("loc_4C6A73: call *%ebx;");
    asm("loc_4C6A75: test %al,%al;");
    asm("loc_4C6A77: je loc_4C6AC0;");
    asm("loc_4C6A79: mov 0x18(%esp),%eax;");
    asm("loc_4C6A7D: test %eax,%eax;");
    asm("loc_4C6A7F: jne loc_4C6AC0;");
    asm("loc_4C6A81: lea 0x18(%esp),%eax;");
    asm("loc_4C6A85: push %eax;");
    asm("loc_4C6A86: lea 0x14(%esp),%ecx;");
    asm("loc_4C6A8A: push %ecx;");
    asm("loc_4C6A8B: push %edi;");
    asm("loc_4C6A8C: movl $0,0x1C(%esp);");
    asm("loc_4C6A94: movl $0,0x24(%esp);");
    asm("loc_4C6A9C: call _sub_583690;");
    asm("loc_4C6AA1: mov 0x20(%esp),%edx;");
    asm("loc_4C6AA5: mov 0x24(%esp),%ecx;");
    asm("loc_4C6AA9: add $0xC,%esp;");
    asm("loc_4C6AAC: push %edx;");
    asm("loc_4C6AAD: mov 0x14(%esp),%edx;");
    asm("loc_4C6AB1: push %ecx;");
    asm("loc_4C6AB2: mov (%esi),%ecx;");
    asm("loc_4C6AB4: push %edx;");
    asm("loc_4C6AB5: push %eax;");
    asm("loc_4C6AB6: call _sub_585CD0;");
    asm("loc_4C6ABB: jmp loc_4C6B5C;");
    asm("loc_4C6AC0: mov %edi,%ecx;");
    asm("loc_4C6AC2: call *%ebx;");
    asm("loc_4C6AC4: test %al,%al;");
    asm("loc_4C6AC6: je loc_4C6B16;");
    asm("loc_4C6AC8: cmpl $2,0x18(%esp);");
    asm("loc_4C6ACD: jne loc_4C6B16;");
    asm("loc_4C6ACF: lea 0x18(%esp),%eax;");
    asm("loc_4C6AD3: push %eax;");
    asm("loc_4C6AD4: lea 0x14(%esp),%ecx;");
    asm("loc_4C6AD8: push %ecx;");
    asm("loc_4C6AD9: xor %ebx,%ebx;");
    asm("loc_4C6ADB: push %edi;");
    asm("loc_4C6ADC: mov %ebx,0x1C(%esp);");
    asm("loc_4C6AE0: mov %ebx,0x24(%esp);");
    asm("loc_4C6AE4: call _sub_583690;");
    asm("loc_4C6AE9: mov 0x20(%esp),%edx;");
    asm("loc_4C6AED: mov 0x24(%esp),%ecx;");
    asm("loc_4C6AF1: add $0xC,%esp;");
    asm("loc_4C6AF4: push %edx;");
    asm("loc_4C6AF5: mov 0x14(%esp),%edx;");
    asm("loc_4C6AF9: push %ecx;");
    asm("loc_4C6AFA: mov (%esi),%ecx;");
    asm("loc_4C6AFC: push %edx;");
    asm("loc_4C6AFD: push %eax;");
    asm("loc_4C6AFE: call _sub_585CD0;");
    asm("loc_4C6B03: mov (%esi),%ecx;");
    asm("loc_4C6B05: push %ebx;");
    asm("loc_4C6B06: push %ebx;");
    asm("loc_4C6B07: push $0xFFFFFFFF;");
    asm("loc_4C6B09: call _sub_585BD0;");
    asm("loc_4C6B0E: pop %edi;");
    asm("loc_4C6B0F: pop %ebx;");
    asm("loc_4C6B10: mov $1,%al;");
    asm("loc_4C6B12: pop %esi;");
    asm("loc_4C6B13: ret $0xC;");
    asm("loc_4C6B16: mov %edi,%ecx;");
    asm("loc_4C6B18: call *%ebx;");
    asm("loc_4C6B1A: test %al,%al;");
    asm("loc_4C6B1C: je loc_4C6B27;");
    asm("loc_4C6B1E: mov 0x14(%esp),%eax;");
    asm("loc_4C6B22: mov (%esi),%ecx;");
    asm("loc_4C6B24: push %eax;");
    asm("loc_4C6B25: jmp loc_4C6B55;");
    asm("loc_4C6B27: mov 0x14(%esp),%ecx;");
    asm("loc_4C6B2B: push %ecx;");
    asm("loc_4C6B2C: mov (%esi),%ecx;");
    asm("loc_4C6B2E: push %edi;");
    asm("loc_4C6B2F: call _sub_585D20;");
    asm("loc_4C6B34: mov 8(%edi),%edi;");
    asm("loc_4C6B37: mov (%esi),%ecx;");
    asm("loc_4C6B39: push $0;");
    asm("loc_4C6B3B: push $1;");
    asm("loc_4C6B3D: push %edi;");
    asm("loc_4C6B3E: call _sub_585E80;");
    asm("loc_4C6B43: mov (%esi),%ecx;");
    asm("loc_4C6B45: push %eax;");
    asm("loc_4C6B46: call _sub_585BD0;");
    asm("loc_4C6B4B: pop %edi;");
    asm("loc_4C6B4C: pop %ebx;");
    asm("loc_4C6B4D: mov $1,%al;");
    asm("loc_4C6B4F: pop %esi;");
    asm("loc_4C6B50: ret $0xC;");
    asm("loc_4C6B53: push $0;");
    asm("loc_4C6B55: push $0;");
    asm("loc_4C6B57: call _sub_585D90;");
    asm("loc_4C6B5C: mov (%esi),%ecx;");
    asm("loc_4C6B5E: push $0;");
    asm("loc_4C6B60: push $0;");
    asm("loc_4C6B62: push $0xFFFFFFFF;");
    asm("loc_4C6B64: call _sub_585BD0;");
    asm("loc_4C6B69: pop %edi;");
    asm("loc_4C6B6A: pop %ebx;");
    asm("loc_4C6B6B: mov $1,%al;");
    asm("loc_4C6B6D: pop %esi;");
    asm("loc_4C6B6E: ret $0xC;");
    asm("loc_4C6B71: xor %al,%al;");
    asm("loc_4C6B73: pop %esi;");
    asm("loc_4C6B74: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6B80() // _sub_4C6B80
{
    __DEBUG_ASM(4C6B80);
    // chunk 0x4C6B80 _sub_4C6B80
    asm("loc_4C6B80: sub $0xAC,%esp;");
    asm("loc_4C6B86: mov 0x20(%ecx),%eax;");
    asm("loc_4C6B89: mov (%eax),%edx;");
    asm("loc_4C6B8B: push %ebx;");
    asm("loc_4C6B8C: push %ebp;");
    asm("loc_4C6B8D: push %esi;");
    asm("loc_4C6B8E: mov %ecx,0x1C(%esp);");
    asm("loc_4C6B92: add $0x1C,%ecx;");
    asm("loc_4C6B95: push %edi;");
    asm("loc_4C6B96: push %eax;");
    asm("loc_4C6B97: push %edx;");
    asm("loc_4C6B98: lea 0x2C(%esp),%eax;");
    asm("loc_4C6B9C: push %eax;");
    asm("loc_4C6B9D: mov %ecx,0x34(%esp);");
    asm("loc_4C6BA1: calll *_import_5C618C;");
    asm("loc_4C6BA7: mov 0xC0(%esp),%esi;");
    asm("loc_4C6BAE: mov 8(%esi),%ebx;");
    asm("loc_4C6BB1: lea (%ebx,%ebx,8),%ecx;");
    asm("loc_4C6BB4: shl $4,%ecx;");
    asm("loc_4C6BB7: push %ecx;");
    asm("loc_4C6BB8: mov %ebx,0x28(%esp);");
    asm("loc_4C6BBC: call _sub_5B7E84;");
    asm("loc_4C6BC1: mov 4(%esi),%edx;");
    asm("loc_4C6BC4: mov (%edx),%ecx;");
    asm("loc_4C6BC6: add $4,%esp;");
    asm("loc_4C6BC9: test %ebx,%ebx;");
    asm("loc_4C6BCB: mov %eax,0x1C(%esp);");
    asm("loc_4C6BCF: mov %ecx,0x18(%esp);");
    asm("loc_4C6BD3: jle loc_4C6CC0;");
    asm("loc_4C6BD9: lea 0xC(%eax),%esi;");
    asm("loc_4C6BDC: mov %ebx,0x14(%esp);");
    asm("loc_4C6BE0: mov 0x18(%esp),%edx;");
    asm("loc_4C6BE4: mov 0xC(%edx),%eax;");
    asm("loc_4C6BE7: lea 8(%edx),%edi;");
    asm("loc_4C6BEA: push %eax;");
    asm("loc_4C6BEB: calll *_import_5C629C;");
    asm("loc_4C6BF1: mov %eax,%ebp;");
    asm("loc_4C6BF3: mov %edi,-0xC(%esi);");
    asm("loc_4C6BF6: mov %ebp,-8(%esi);");
    asm("loc_4C6BF9: mov 4(%edi),%eax;");
    asm("loc_4C6BFC: push %eax;");
    asm("loc_4C6BFD: calll *_import_5C603C;");
    asm("loc_4C6C03: mov %eax,-4(%esi);");
    asm("loc_4C6C06: movb $1,(%esi);");
    asm("loc_4C6C09: movb $0,1(%esi);");
    asm("loc_4C6C0D: mov 4(%edi),%eax;");
    asm("loc_4C6C10: push %eax;");
    asm("loc_4C6C11: call _sub_47E460;");
    asm("loc_4C6C16: add $0xC,%esp;");
    asm("loc_4C6C19: test %ebp,%ebp;");
    asm("loc_4C6C1B: mov %eax,%ebx;");
    asm("loc_4C6C1D: je loc_4C6C98;");
    asm("loc_4C6C1F: mov 0x20(%esp),%eax;");
    asm("loc_4C6C23: mov (%eax),%ecx;");
    asm("loc_4C6C25: test %ecx,%ecx;");
    asm("loc_4C6C27: je loc_4C6C98;");
    asm("loc_4C6C29: test %ebx,%ebx;");
    asm("loc_4C6C2B: je loc_4C6C32;");
    asm("loc_4C6C2D: cmp $2,%ebx;");
    asm("loc_4C6C30: jne loc_4C6C45;");
    asm("loc_4C6C32: mov 0x48(%ebp),%ebp;");
    asm("loc_4C6C35: push $1;");
    asm("loc_4C6C37: push %ebp;");
    asm("loc_4C6C38: call _sub_585F20;");
    asm("loc_4C6C3D: test %eax,%eax;");
    asm("loc_4C6C3F: jne loc_4C6C60;");
    asm("loc_4C6C41: mov %al,(%esi);");
    asm("loc_4C6C43: jmp loc_4C6C60;");
    asm("loc_4C6C45: cmp $1,%ebx;");
    asm("loc_4C6C48: jne loc_4C6C60;");
    asm("loc_4C6C4A: mov 4(%edi),%eax;");
    asm("loc_4C6C4D: mov 0xC0(%esp),%ecx;");
    asm("loc_4C6C54: push %eax;");
    asm("loc_4C6C55: push %ecx;");
    asm("loc_4C6C56: call _sub_482D80;");
    asm("loc_4C6C5B: add $8,%esp;");
    asm("loc_4C6C5E: mov %al,(%esi);");
    asm("loc_4C6C60: mov 0x20(%esp),%edx;");
    asm("loc_4C6C64: cmpl $0,(%edx);");
    asm("loc_4C6C67: je loc_4C6C98;");
    asm("loc_4C6C69: cmp $4,%ebx;");
    asm("loc_4C6C6C: jne loc_4C6C98;");
    asm("loc_4C6C6E: mov -4(%esi),%eax;");
    asm("loc_4C6C71: test %eax,%eax;");
    asm("loc_4C6C73: je loc_4C6C98;");
    asm("loc_4C6C75: mov 0x18(%edi),%cl;");
    asm("loc_4C6C78: test %cl,%cl;");
    asm("loc_4C6C7A: jne loc_4C6C98;");
    asm("loc_4C6C7C: push $0x40;");
    asm("loc_4C6C7E: movb $1,1(%esi);");
    asm("loc_4C6C82: mov 0x14(%eax),%edx;");
    asm("loc_4C6C85: mov _data_67ECA8,%eax;");
    asm("loc_4C6C8A: lea 2(%esi),%ecx;");
    asm("loc_4C6C8D: push %ecx;");
    asm("loc_4C6C8E: push %edx;");
    asm("loc_4C6C8F: push %eax;");
    asm("loc_4C6C90: call _sub_4347E0;");
    asm("loc_4C6C95: add $0x10,%esp;");
    asm("loc_4C6C98: mov 0x18(%esp),%ecx;");
    asm("loc_4C6C9C: mov 0x14(%esp),%eax;");
    asm("loc_4C6CA0: mov (%ecx),%edx;");
    asm("loc_4C6CA2: add $0x90,%esi;");
    asm("loc_4C6CA8: dec %eax;");
    asm("loc_4C6CA9: mov %edx,0x18(%esp);");
    asm("loc_4C6CAD: mov %eax,0x14(%esp);");
    asm("loc_4C6CB1: jne loc_4C6BE0;");
    asm("loc_4C6CB7: mov 0x24(%esp),%ebx;");
    asm("loc_4C6CBB: nop;");
    asm("loc_4C6CBC: lea (%esp),%esp;");
    asm("loc_4C6CC0: lea -1(%ebx),%eax;");
    asm("loc_4C6CC3: test %eax,%eax;");
    asm("loc_4C6CC5: movb $1,0x13(%esp);");
    asm("loc_4C6CCA: jle loc_4C6DF7;");
    asm("loc_4C6CD0: mov 0x1C(%esp),%ecx;");
    asm("loc_4C6CD4: lea 0x9D(%ecx),%ebp;");
    asm("loc_4C6CDA: mov %eax,0x14(%esp);");
    asm("loc_4C6CDE: mov %edi,%edi;");
    asm("loc_4C6CE0: mov -0x90(%ebp),%al;");
    asm("loc_4C6CE6: xor %edi,%edi;");
    asm("loc_4C6CE8: xor %esi,%esi;");
    asm("loc_4C6CEA: test %al,%al;");
    asm("loc_4C6CEC: je loc_4C6D2A;");
    asm("loc_4C6CEE: mov (%ebp),%cl;");
    asm("loc_4C6CF1: test %cl,%cl;");
    asm("loc_4C6CF3: je loc_4C6DA3;");
    asm("loc_4C6CF9: test %al,%al;");
    asm("loc_4C6CFB: je loc_4C6D2A;");
    asm("loc_4C6CFD: test %cl,%cl;");
    asm("loc_4C6CFF: je loc_4C6D22;");
    asm("loc_4C6D01: lea 1(%ebp),%edx;");
    asm("loc_4C6D04: push %edx;");
    asm("loc_4C6D05: lea -0x8F(%ebp),%eax;");
    asm("loc_4C6D0B: push %eax;");
    asm("loc_4C6D0C: calll *_import_5C7200;");
    asm("loc_4C6D12: add $8,%esp;");
    asm("loc_4C6D15: test %eax,%eax;");
    asm("loc_4C6D17: jle loc_4C6DD6;");
    asm("loc_4C6D1D: jmp loc_4C6DA3;");
    asm("loc_4C6D22: test %al,%al;");
    asm("loc_4C6D24: jne loc_4C6DD6;");
    asm("loc_4C6D2A: cmpb $0,(%ebp);");
    asm("loc_4C6D2E: jne loc_4C6DD6;");
    asm("loc_4C6D34: mov -0x91(%ebp),%al;");
    asm("loc_4C6D3A: test %al,%al;");
    asm("loc_4C6D3C: jne loc_4C6D45;");
    asm("loc_4C6D3E: mov -1(%ebp),%cl;");
    asm("loc_4C6D41: test %cl,%cl;");
    asm("loc_4C6D43: jne loc_4C6DA3;");
    asm("loc_4C6D45: cmp -1(%ebp),%al;");
    asm("loc_4C6D48: jne loc_4C6DD6;");
    asm("loc_4C6D4E: mov -0x9D(%ebp),%ecx;");
    asm("loc_4C6D54: mov 0x18(%ecx),%al;");
    asm("loc_4C6D57: test %al,%al;");
    asm("loc_4C6D59: jne loc_4C6D65;");
    asm("loc_4C6D5B: mov -0xD(%ebp),%edx;");
    asm("loc_4C6D5E: mov 0x18(%edx),%cl;");
    asm("loc_4C6D61: test %cl,%cl;");
    asm("loc_4C6D63: jne loc_4C6DA3;");
    asm("loc_4C6D65: mov -0xD(%ebp),%ecx;");
    asm("loc_4C6D68: cmp 0x18(%ecx),%al;");
    asm("loc_4C6D6B: jne loc_4C6DD6;");
    asm("loc_4C6D6D: mov -0x95(%ebp),%ecx;");
    asm("loc_4C6D73: test %ecx,%ecx;");
    asm("loc_4C6D75: je loc_4C6D7E;");
    asm("loc_4C6D77: mov (%ecx),%edx;");
    asm("loc_4C6D79: calll *0x10(%edx);");
    asm("loc_4C6D7C: mov %eax,%edi;");
    asm("loc_4C6D7E: mov -5(%ebp),%ecx;");
    asm("loc_4C6D81: test %ecx,%ecx;");
    asm("loc_4C6D83: je loc_4C6D8C;");
    asm("loc_4C6D85: mov (%ecx),%eax;");
    asm("loc_4C6D87: calll *0x10(%eax);");
    asm("loc_4C6D8A: mov %eax,%esi;");
    asm("loc_4C6D8C: cmp %esi,%edi;");
    asm("loc_4C6D8E: jg loc_4C6DA3;");
    asm("loc_4C6D90: jne loc_4C6DD6;");
    asm("loc_4C6D92: mov -0x9D(%ebp),%ecx;");
    asm("loc_4C6D98: mov -0xD(%ebp),%edx;");
    asm("loc_4C6D9B: mov 4(%ecx),%eax;");
    asm("loc_4C6D9E: cmp 4(%edx),%eax;");
    asm("loc_4C6DA1: jbe loc_4C6DD6;");
    asm("loc_4C6DA3: lea -0x9D(%ebp),%eax;");
    asm("loc_4C6DA9: mov $0x24,%ecx;");
    asm("loc_4C6DAE: mov %eax,%esi;");
    asm("loc_4C6DB0: lea 0x2C(%esp),%edi;");
    asm("loc_4C6DB4: rep movsl (%esi),(%edi);");
    asm("loc_4C6DB6: lea -0xD(%ebp),%edx;");
    asm("loc_4C6DB9: mov $0x24,%ecx;");
    asm("loc_4C6DBE: mov %edx,%esi;");
    asm("loc_4C6DC0: mov %eax,%edi;");
    asm("loc_4C6DC2: rep movsl (%esi),(%edi);");
    asm("loc_4C6DC4: mov $0x24,%ecx;");
    asm("loc_4C6DC9: lea 0x2C(%esp),%esi;");
    asm("loc_4C6DCD: mov %edx,%edi;");
    asm("loc_4C6DCF: movb $0,0x13(%esp);");
    asm("loc_4C6DD4: rep movsl (%esi),(%edi);");
    asm("loc_4C6DD6: mov 0x14(%esp),%eax;");
    asm("loc_4C6DDA: add $0x90,%ebp;");
    asm("loc_4C6DE0: dec %eax;");
    asm("loc_4C6DE1: mov %eax,0x14(%esp);");
    asm("loc_4C6DE5: jne loc_4C6CE0;");
    asm("loc_4C6DEB: mov 0x13(%esp),%al;");
    asm("loc_4C6DEF: test %al,%al;");
    asm("loc_4C6DF1: je loc_4C6CC0;");
    asm("loc_4C6DF7: test %ebx,%ebx;");
    asm("loc_4C6DF9: jle loc_4C6E56;");
    asm("loc_4C6DFB: mov 0x1C(%esp),%ebp;");
    asm("loc_4C6DFF: mov %ebx,0x14(%esp);");
    asm("loc_4C6E03: mov 0x28(%esp),%ecx;");
    asm("loc_4C6E07: mov 4(%ecx),%esi;");
    asm("loc_4C6E0A: mov (%ebp),%ebx;");
    asm("loc_4C6E0D: mov 4(%esi),%edi;");
    asm("loc_4C6E10: push $0x28;");
    asm("loc_4C6E12: call _sub_5B7E84;");
    asm("loc_4C6E17: add $4,%esp;");
    asm("loc_4C6E1A: test %edi,%edi;");
    asm("loc_4C6E1C: mov %esi,(%eax);");
    asm("loc_4C6E1E: jne loc_4C6E22;");
    asm("loc_4C6E20: mov %eax,%edi;");
    asm("loc_4C6E22: mov %edi,4(%eax);");
    asm("loc_4C6E25: mov %eax,4(%esi);");
    asm("loc_4C6E28: mov 4(%eax),%edx;");
    asm("loc_4C6E2B: mov %eax,(%edx);");
    asm("loc_4C6E2D: add $8,%eax;");
    asm("loc_4C6E30: push %ebx;");
    asm("loc_4C6E31: push %eax;");
    asm("loc_4C6E32: call _sub_4B7390;");
    asm("loc_4C6E37: mov 0x30(%esp),%eax;");
    asm("loc_4C6E3B: mov 8(%eax),%edx;");
    asm("loc_4C6E3E: add $8,%esp;");
    asm("loc_4C6E41: inc %edx;");
    asm("loc_4C6E42: mov %edx,8(%eax);");
    asm("loc_4C6E45: mov 0x14(%esp),%eax;");
    asm("loc_4C6E49: add $0x90,%ebp;");
    asm("loc_4C6E4F: dec %eax;");
    asm("loc_4C6E50: mov %eax,0x14(%esp);");
    asm("loc_4C6E54: jne loc_4C6E03;");
    asm("loc_4C6E56: mov 0x1C(%esp),%eax;");
    asm("loc_4C6E5A: push %eax;");
    asm("loc_4C6E5B: call _sub_5B7E1D;");
    asm("loc_4C6E60: add $4,%esp;");
    asm("loc_4C6E63: pop %edi;");
    asm("loc_4C6E64: pop %esi;");
    asm("loc_4C6E65: pop %ebp;");
    asm("loc_4C6E66: pop %ebx;");
    asm("loc_4C6E67: add $0xAC,%esp;");
    asm("loc_4C6E6D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6E70() // _sub_4C6E70
{
    __DEBUG_ASM(4C6E70);
    // chunk 0x4C6E70 _sub_4C6E70
    asm("loc_4C6E70: mov %ecx,%eax;");
    asm("loc_4C6E72: mov (%eax),%ecx;");
    asm("loc_4C6E74: test %ecx,%ecx;");
    asm("loc_4C6E76: je loc_4C6E81;");
    asm("loc_4C6E78: add $0x1C,%eax;");
    asm("loc_4C6E7B: push %eax;");
    asm("loc_4C6E7C: call _sub_5850F0;");
    asm("loc_4C6E81: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6E90() // _sub_4C6E90
{
    __DEBUG_ASM(4C6E90);
    // chunk 0x4C6E90 _sub_4C6E90
    asm("loc_4C6E90: push %ecx;");
    asm("loc_4C6E91: push %esi;");
    asm("loc_4C6E92: push %edi;");
    asm("loc_4C6E93: mov 0x10(%esp),%edi;");
    asm("loc_4C6E97: test %edi,%edi;");
    asm("loc_4C6E99: je loc_4C6F5C;");
    asm("loc_4C6E9F: mov _data_66873C,%eax;");
    asm("loc_4C6EA4: test %eax,%eax;");
    asm("loc_4C6EA6: je loc_4C6F5C;");
    asm("loc_4C6EAC: push %eax;");
    asm("loc_4C6EAD: mov $_data_668708,%ecx;");
    asm("loc_4C6EB2: call _sub_43A510;");
    asm("loc_4C6EB7: mov %eax,%esi;");
    asm("loc_4C6EB9: test %esi,%esi;");
    asm("loc_4C6EBB: je loc_4C6F5C;");
    asm("loc_4C6EC1: push %edi;");
    asm("loc_4C6EC2: calll *_import_5C6158;");
    asm("loc_4C6EC8: mov %eax,%ecx;");
    asm("loc_4C6ECA: calll *_import_5C6418;");
    asm("loc_4C6ED0: test %eax,%eax;");
    asm("loc_4C6ED2: je loc_4C6F5C;");
    asm("loc_4C6ED8: mov 0x48(%eax),%eax;");
    asm("loc_4C6EDB: push %eax;");
    asm("loc_4C6EDC: mov %esi,%ecx;");
    asm("loc_4C6EDE: call _sub_438060;");
    asm("loc_4C6EE3: call _sub_5B7EC0;");
    asm("loc_4C6EE8: mov 0x14(%esp),%cl;");
    asm("loc_4C6EEC: test %cl,%cl;");
    asm("loc_4C6EEE: mov %eax,0x10(%esp);");
    asm("loc_4C6EF2: je loc_4C6F5E;");
    asm("loc_4C6EF4: call _sub_4C4F70;");
    asm("loc_4C6EF9: fstps 8(%esp);");
    asm("loc_4C6EFD: call _sub_4C3F00;");
    asm("loc_4C6F02: flds _data_5C7474;");
    asm("loc_4C6F08: mov 4(%eax),%ecx;");
    asm("loc_4C6F0B: mov (%ecx),%eax;");
    asm("loc_4C6F0D: xor %edx,%edx;");
    asm("loc_4C6F0F: cmp %ecx,%eax;");
    asm("loc_4C6F11: je loc_4C6F2B;");
    asm("loc_4C6F13: fadds 0xC(%eax);");
    asm("loc_4C6F16: mov (%eax),%eax;");
    asm("loc_4C6F18: inc %edx;");
    asm("loc_4C6F19: cmp %ecx,%eax;");
    asm("loc_4C6F1B: jne loc_4C6F13;");
    asm("loc_4C6F1D: test %edx,%edx;");
    asm("loc_4C6F1F: mov %edx,0x14(%esp);");
    asm("loc_4C6F23: jle loc_4C6F2B;");
    asm("loc_4C6F25: fidivl 0x14(%esp);");
    asm("loc_4C6F29: jmp loc_4C6F33;");
    asm("loc_4C6F2B: fstp %st(0);");
    asm("loc_4C6F2D: flds _data_5C75DC;");
    asm("loc_4C6F33: fildl 0x10(%esp);");
    asm("loc_4C6F37: fmul %st(1),%st;");
    asm("loc_4C6F39: fmuls 8(%esp);");
    asm("loc_4C6F3D: call _sub_5B7EC0;");
    asm("loc_4C6F42: fstp %st(0);");
    asm("loc_4C6F44: mov %eax,0x14(%esp);");
    asm("loc_4C6F48: fildl 0x14(%esp);");
    asm("loc_4C6F4C: pop %edi;");
    asm("loc_4C6F4D: pop %esi;");
    asm("loc_4C6F4E: add $4,%esp;");
    asm("loc_4C6F51: fmuls _data_5D6D38;");
    asm("loc_4C6F57: jmp _sub_5B7EC0;");
    asm("loc_4C6F5C: xor %eax,%eax;");
    asm("loc_4C6F5E: pop %edi;");
    asm("loc_4C6F5F: pop %esi;");
    asm("loc_4C6F60: pop %ecx;");
    asm("loc_4C6F61: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C6F70() // _sub_4C6F70
{
    __DEBUG_ASM(4C6F70);
    // chunk 0x4C6F70 _sub_4C6F70
    asm("loc_4C6F70: mov _data_66873C,%eax;");
    asm("loc_4C6F75: sub $0xC,%esp;");
    asm("loc_4C6F78: test %eax,%eax;");
    asm("loc_4C6F7A: jne loc_4C6F80;");
    asm("loc_4C6F7C: add $0xC,%esp;");
    asm("loc_4C6F7F: ret;");
    asm("loc_4C6F80: push %eax;");
    asm("loc_4C6F81: mov $_data_668708,%ecx;");
    asm("loc_4C6F86: call _sub_43A510;");
    asm("loc_4C6F8B: test %eax,%eax;");
    asm("loc_4C6F8D: mov %eax,4(%esp);");
    asm("loc_4C6F91: jne loc_4C6F97;");
    asm("loc_4C6F93: add $0xC,%esp;");
    asm("loc_4C6F96: ret;");
    asm("loc_4C6F97: mov 0x10(%esp),%eax;");
    asm("loc_4C6F9B: mov 4(%eax),%eax;");
    asm("loc_4C6F9E: push %esi;");
    asm("loc_4C6F9F: mov (%eax),%esi;");
    asm("loc_4C6FA1: cmp %eax,%esi;");
    asm("loc_4C6FA3: movl $0,4(%esp);");
    asm("loc_4C6FAB: je loc_4C7077;");
    asm("loc_4C6FB1: push %ebx;");
    asm("loc_4C6FB2: push %ebp;");
    asm("loc_4C6FB3: push %edi;");
    asm("loc_4C6FB4: mov 0xC(%esi),%ebp;");
    asm("loc_4C6FB7: push %ebp;");
    asm("loc_4C6FB8: calll *_import_5C629C;");
    asm("loc_4C6FBE: mov %eax,%edi;");
    asm("loc_4C6FC0: add $4,%esp;");
    asm("loc_4C6FC3: test %edi,%edi;");
    asm("loc_4C6FC5: je loc_4C7065;");
    asm("loc_4C6FCB: mov 0x24(%esp),%eax;");
    asm("loc_4C6FCF: test %eax,%eax;");
    asm("loc_4C6FD1: je loc_4C6FDC;");
    asm("loc_4C6FD3: cmp %eax,0x24(%esi);");
    asm("loc_4C6FD6: jne loc_4C7065;");
    asm("loc_4C6FDC: mov 0x28(%esp),%ecx;");
    asm("loc_4C6FE0: test %ecx,%ecx;");
    asm("loc_4C6FE2: mov $1,%bl;");
    asm("loc_4C6FE4: je loc_4C6FF9;");
    asm("loc_4C6FE6: xor %eax,%eax;");
    asm("loc_4C6FE8: mov 0xA(%esi),%ax;");
    asm("loc_4C6FEC: push %eax;");
    asm("loc_4C6FED: calll *_import_5C6370;");
    asm("loc_4C6FF3: test %eax,%eax;");
    asm("loc_4C6FF5: jne loc_4C6FF9;");
    asm("loc_4C6FF7: xor %bl,%bl;");
    asm("loc_4C6FF9: push %ebp;");
    asm("loc_4C6FFA: call _sub_47E460;");
    asm("loc_4C6FFF: add $4,%esp;");
    asm("loc_4C7002: cmp $4,%eax;");
    asm("loc_4C7005: je loc_4C7049;");
    asm("loc_4C7007: mov 0x70(%edi),%al;");
    asm("loc_4C700A: test %al,%al;");
    asm("loc_4C700C: jne loc_4C7049;");
    asm("loc_4C700E: test %bl,%bl;");
    asm("loc_4C7010: je loc_4C7049;");
    asm("loc_4C7012: mov 0x48(%edi),%edi;");
    asm("loc_4C7015: mov 0x14(%esp),%ecx;");
    asm("loc_4C7019: push %edi;");
    asm("loc_4C701A: call _sub_438060;");
    asm("loc_4C701F: fmuls _data_5D6D3C;");
    asm("loc_4C7025: fadds _data_5D1914;");
    asm("loc_4C702B: call _sub_5B7EC0;");
    asm("loc_4C7030: fildl 0x1C(%esi);");
    asm("loc_4C7033: mov %eax,0x18(%esp);");
    asm("loc_4C7037: fmuls 0x18(%esi);");
    asm("loc_4C703A: fimull 0x18(%esp);");
    asm("loc_4C703E: call _sub_5B7EC0;");
    asm("loc_4C7043: add %eax,0x10(%esp);");
    asm("loc_4C7047: jmp loc_4C7065;");
    asm("loc_4C7049: mov 0x48(%edi),%edi;");
    asm("loc_4C704C: mov 0x14(%esp),%ecx;");
    asm("loc_4C7050: push %edi;");
    asm("loc_4C7051: call _sub_438060;");
    asm("loc_4C7056: call _sub_5B7EC0;");
    asm("loc_4C705B: mov 0x1C(%esi),%ecx;");
    asm("loc_4C705E: imul %eax,%ecx;");
    asm("loc_4C7061: add %ecx,0x10(%esp);");
    asm("loc_4C7065: mov 0x20(%esp),%edx;");
    asm("loc_4C7069: mov (%esi),%esi;");
    asm("loc_4C706B: cmp 4(%edx),%esi;");
    asm("loc_4C706E: jne loc_4C6FB4;");
    asm("loc_4C7074: pop %edi;");
    asm("loc_4C7075: pop %ebp;");
    asm("loc_4C7076: pop %ebx;");
    asm("loc_4C7077: mov 4(%esp),%eax;");
    asm("loc_4C707B: pop %esi;");
    asm("loc_4C707C: add $0xC,%esp;");
    asm("loc_4C707F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7080() // _sub_4C7080
{
    __DEBUG_ASM(4C7080);
    // chunk 0x4C7080 _sub_4C7080
    asm("loc_4C7080: mov _data_5D6D40,%eax;");
    asm("loc_4C7085: mov %eax,_data_673544;");
    asm("loc_4C708A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7090() // _sub_4C7090
{
    __DEBUG_ASM(4C7090);
    // chunk 0x4C7090 _sub_4C7090
    asm("loc_4C7090: mov _data_5D6D40,%eax;");
    asm("loc_4C7095: mov %eax,_data_673540;");
    asm("loc_4C709A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C70A0() // _sub_4C70A0
{
    __DEBUG_ASM(4C70A0);
    // chunk 0x4C70A0 _sub_4C70A0
    asm("loc_4C70A0: mov _data_5D6D44,%eax;");
    asm("loc_4C70A5: mov %eax,_data_67353C;");
    asm("loc_4C70AA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C70B0() // _sub_4C70B0
{
    __DEBUG_ASM(4C70B0);
    // chunk 0x4C70B0 _sub_4C70B0
    asm("loc_4C70B0: call _sub_54BAF0;");
    asm("loc_4C70B5: test %eax,%eax;");
    asm("loc_4C70B7: je loc_4C70ED;");
    asm("loc_4C70B9: add $0xC,%eax;");
    asm("loc_4C70BC: test %eax,%eax;");
    asm("loc_4C70BE: je loc_4C70ED;");
    asm("loc_4C70C0: mov 4(%eax),%ecx;");
    asm("loc_4C70C3: test %ecx,%ecx;");
    asm("loc_4C70C5: je loc_4C70ED;");
    asm("loc_4C70C7: mov 0x4C(%ecx),%eax;");
    asm("loc_4C70CA: and $0x503,%eax;");
    asm("loc_4C70CF: cmp $0x503,%eax;");
    asm("loc_4C70D4: jne loc_4C70ED;");
    asm("loc_4C70D6: calll *_import_5C62E8;");
    asm("loc_4C70DC: test %eax,%eax;");
    asm("loc_4C70DE: je loc_4C70ED;");
    asm("loc_4C70E0: mov 4(%esp),%ecx;");
    asm("loc_4C70E4: push %ecx;");
    asm("loc_4C70E5: mov %eax,%ecx;");
    asm("loc_4C70E7: calll *_import_5C6464;");
    asm("loc_4C70ED: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C70F0() // _sub_4C70F0
{
    __DEBUG_ASM(4C70F0);
    // chunk 0x4C70F0 _sub_4C70F0
    asm("loc_4C70F0: mov $_data_673538,%ecx;");
    asm("loc_4C70F5: jmp loc_4C7100;");
    asm("loc_4C70FA: nop;");
    asm("loc_4C70FB: nop;");
    asm("loc_4C70FC: nop;");
    asm("loc_4C70FD: nop;");
    asm("loc_4C70FE: nop;");
    asm("loc_4C70FF: nop;");
    asm("loc_4C7100: push %esi;");
    asm("loc_4C7101: push $0x1C;");
    asm("loc_4C7103: mov %ecx,%esi;");
    asm("loc_4C7105: call _sub_5B7E84;");
    asm("loc_4C710A: xor %ecx,%ecx;");
    asm("loc_4C710C: add $4,%esp;");
    asm("loc_4C710F: cmp %ecx,%eax;");
    asm("loc_4C7111: je loc_4C714A;");
    asm("loc_4C7113: push %ecx;");
    asm("loc_4C7114: push $0x614;");
    asm("loc_4C7119: push %eax;");
    asm("loc_4C711A: movl $_data_5D6D58,4(%eax);");
    asm("loc_4C7121: mov %ecx,8(%eax);");
    asm("loc_4C7124: mov %ecx,0xC(%eax);");
    asm("loc_4C7127: mov %ecx,0x10(%eax);");
    asm("loc_4C712A: movl $0xBF800000,0x14(%eax);");
    asm("loc_4C7131: movl $_sub_4C70B0,0x18(%eax);");
    asm("loc_4C7138: movl $_off_5D6D50,(%eax);");
    asm("loc_4C713E: call _sub_5B3520;");
    asm("loc_4C7143: add $0xC,%esp;");
    asm("loc_4C7146: mov %esi,%eax;");
    asm("loc_4C7148: pop %esi;");
    asm("loc_4C7149: ret;");
    asm("loc_4C714A: push %ecx;");
    asm("loc_4C714B: xor %eax,%eax;");
    asm("loc_4C714D: push $0x614;");
    asm("loc_4C7152: push %eax;");
    asm("loc_4C7153: call _sub_5B3520;");
    asm("loc_4C7158: add $0xC,%esp;");
    asm("loc_4C715B: mov %esi,%eax;");
    asm("loc_4C715D: pop %esi;");
    asm("loc_4C715E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7160() // _sub_4C7160
{
    __DEBUG_ASM(4C7160);
    // chunk 0x4C7160 _sub_4C7160
    asm("loc_4C7160: mov 0x18(%ecx),%eax;");
    asm("loc_4C7163: test %eax,%eax;");
    asm("loc_4C7165: je loc_4C716F;");
    asm("loc_4C7167: mov 4(%esp),%ecx;");
    asm("loc_4C716B: push %ecx;");
    asm("loc_4C716C: call *%eax;");
    asm("loc_4C716E: pop %ecx;");
    asm("loc_4C716F: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7180() // _sub_4C7180
{
    __DEBUG_ASM(4C7180);
    // chunk 0x4C7180 _sub_4C7180
    asm("loc_4C7180: mov $_data_673520,%ecx;");
    asm("loc_4C7185: call _sub_41DD20;");
    asm("loc_4C718A: push $_sub_4C71A0;");
    asm("loc_4C718F: call _sub_5B7E6C;");
    asm("loc_4C7194: pop %ecx;");
    asm("loc_4C7195: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C71A0() // _unknown_libname_45
{
    __DEBUG_ASM(4C71A0);
    // chunk 0x4C71A0 _sub_4C71A0
    asm("loc_4C71A0: mov $_data_673520,%ecx;");
    asm("loc_4C71A5: jmp _sub_41DC50;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C71B0() // _sub_4C71B0
{
    __DEBUG_ASM(4C71B0);
    // chunk 0x4C71B0 _sub_4C71B0
    asm("loc_4C71B0: mov 8(%esp),%eax;");
    asm("loc_4C71B4: sub $0x10,%esp;");
    asm("loc_4C71B7: push %ebx;");
    asm("loc_4C71B8: push %esi;");
    asm("loc_4C71B9: push %edi;");
    asm("loc_4C71BA: push %eax;");
    asm("loc_4C71BB: lea 0x18(%esp),%ecx;");
    asm("loc_4C71BF: push %ecx;");
    asm("loc_4C71C0: mov _data_67DBF8,%ecx;");
    asm("loc_4C71C6: lea 0x18(%esp),%edx;");
    asm("loc_4C71CA: push %edx;");
    asm("loc_4C71CB: lea 0x18(%esp),%eax;");
    asm("loc_4C71CF: push %eax;");
    asm("loc_4C71D0: push $_data_67DBF8;");
    asm("loc_4C71D5: calll *0x34(%ecx);");
    asm("loc_4C71D8: test %al,%al;");
    asm("loc_4C71DA: je loc_4C71F4;");
    asm("loc_4C71DC: flds 0xC(%esp);");
    asm("loc_4C71E0: call _sub_5B7EC0;");
    asm("loc_4C71E5: flds 0x10(%esp);");
    asm("loc_4C71E9: mov %eax,%ebx;");
    asm("loc_4C71EB: call _sub_5B7EC0;");
    asm("loc_4C71F0: mov %eax,%edi;");
    asm("loc_4C71F2: jmp loc_4C71FC;");
    asm("loc_4C71F4: mov 0x10(%esp),%edi;");
    asm("loc_4C71F8: mov 0xC(%esp),%ebx;");
    asm("loc_4C71FC: mov 0x28(%esp),%edx;");
    asm("loc_4C7200: push %edx;");
    asm("loc_4C7201: lea 0x18(%esp),%eax;");
    asm("loc_4C7205: push %eax;");
    asm("loc_4C7206: mov _data_67DBF8,%eax;");
    asm("loc_4C720B: lea 0x18(%esp),%ecx;");
    asm("loc_4C720F: push %ecx;");
    asm("loc_4C7210: lea 0x18(%esp),%edx;");
    asm("loc_4C7214: push %edx;");
    asm("loc_4C7215: push $_data_67DBF8;");
    asm("loc_4C721A: calll *0x34(%eax);");
    asm("loc_4C721D: test %al,%al;");
    asm("loc_4C721F: je loc_4C7239;");
    asm("loc_4C7221: flds 0xC(%esp);");
    asm("loc_4C7225: call _sub_5B7EC0;");
    asm("loc_4C722A: flds 0x10(%esp);");
    asm("loc_4C722E: mov %eax,%esi;");
    asm("loc_4C7230: call _sub_5B7EC0;");
    asm("loc_4C7235: mov %eax,%ecx;");
    asm("loc_4C7237: jmp loc_4C7241;");
    asm("loc_4C7239: mov 0x18(%esp),%ecx;");
    asm("loc_4C723D: mov 0x14(%esp),%esi;");
    asm("loc_4C7241: mov 0x20(%esp),%eax;");
    asm("loc_4C7245: mov %eax,%edx;");
    asm("loc_4C7247: mov %ebx,(%edx);");
    asm("loc_4C7249: mov %edi,4(%edx);");
    asm("loc_4C724C: pop %edi;");
    asm("loc_4C724D: mov %esi,8(%edx);");
    asm("loc_4C7250: pop %esi;");
    asm("loc_4C7251: mov %ecx,0xC(%edx);");
    asm("loc_4C7254: pop %ebx;");
    asm("loc_4C7255: add $0x10,%esp;");
    asm("loc_4C7258: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7260() // _sub_4C7260
{
    __DEBUG_ASM(4C7260);
    // chunk 0x4C7260 _sub_4C7260
    asm("loc_4C7260: xor %eax,%eax;");
    asm("loc_4C7262: mov %eax,_data_673518;");
    asm("loc_4C7267: mov %eax,_data_67351C;");
    asm("loc_4C726C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7270() // _sub_4C7270
{
    __DEBUG_ASM(4C7270);
    // chunk 0x4C7270 _sub_4C7270
    asm("loc_4C7270: call _sub_45A470;");
    asm("loc_4C7275: test %al,%al;");
    asm("loc_4C7277: je loc_4C727C;");
    asm("loc_4C7279: mov $1,%al;");
    asm("loc_4C727B: ret;");
    asm("loc_4C727C: mov _data_67354C,%cl;");
    asm("loc_4C7282: xor %eax,%eax;");
    asm("loc_4C7284: test %cl,%cl;");
    asm("loc_4C7286: sete %al;");
    asm("loc_4C7289: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7290() // _sub_4C7290
{
    __DEBUG_ASM(4C7290);
    // chunk 0x4C7290 _sub_4C7290
    asm("loc_4C7290: mov 4(%esp),%al;");
    asm("loc_4C7294: mov %al,_data_673560;");
    asm("loc_4C7299: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C72A0() // _sub_4C72A0
{
    __DEBUG_ASM(4C72A0);
    // chunk 0x4C72A0 _sub_4C72A0
    asm("loc_4C72A0: xor %eax,%eax;");
    asm("loc_4C72A2: mov %eax,_data_673510;");
    asm("loc_4C72A7: mov %eax,_data_673514;");
    asm("loc_4C72AC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C72B0() // _sub_4C72B0
{
    __DEBUG_ASM(4C72B0);
    // chunk 0x4C72B0 _sub_4C72B0
    asm("loc_4C72B0: mov _data_673514,%ecx;");
    asm("loc_4C72B6: test %ecx,%ecx;");
    asm("loc_4C72B8: mov 4(%esp),%eax;");
    asm("loc_4C72BC: je loc_4C72C7;");
    asm("loc_4C72BE: mov %eax,4(%ecx);");
    asm("loc_4C72C1: mov %eax,_data_673514;");
    asm("loc_4C72C6: ret;");
    asm("loc_4C72C7: mov %eax,_data_673510;");
    asm("loc_4C72CC: mov %eax,_data_673514;");
    asm("loc_4C72D1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C72E0() // _sub_4C72E0
{
    __DEBUG_ASM(4C72E0);
    // chunk 0x4C72E0 _sub_4C72E0
    asm("loc_4C72E0: mov _data_673510,%eax;");
    asm("loc_4C72E5: xor %ecx,%ecx;");
    asm("loc_4C72E7: test %eax,%eax;");
    asm("loc_4C72E9: je loc_4C7327;");
    asm("loc_4C72EB: mov 4(%esp),%edx;");
    asm("loc_4C72EF: nop;");
    asm("loc_4C72F0: cmp %edx,%eax;");
    asm("loc_4C72F2: je loc_4C72FE;");
    asm("loc_4C72F4: mov %eax,%ecx;");
    asm("loc_4C72F6: mov 4(%eax),%eax;");
    asm("loc_4C72F9: test %eax,%eax;");
    asm("loc_4C72FB: jne loc_4C72F0;");
    asm("loc_4C72FD: ret;");
    asm("loc_4C72FE: test %ecx,%ecx;");
    asm("loc_4C7300: push %esi;");
    asm("loc_4C7301: mov 4(%eax),%esi;");
    asm("loc_4C7304: je loc_4C730B;");
    asm("loc_4C7306: mov %esi,4(%ecx);");
    asm("loc_4C7309: jmp loc_4C7311;");
    asm("loc_4C730B: mov %esi,_data_673510;");
    asm("loc_4C7311: cmp _data_673514,%eax;");
    asm("loc_4C7317: pop %esi;");
    asm("loc_4C7318: jne loc_4C7320;");
    asm("loc_4C731A: mov %ecx,_data_673514;");
    asm("loc_4C7320: movl $0,4(%edx);");
    asm("loc_4C7327: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7330() // _sub_4C7330
{
    __DEBUG_ASM(4C7330);
    // chunk 0x4C7330 _sub_4C7330
    asm("loc_4C7330: push %esi;");
    asm("loc_4C7331: push %edi;");
    asm("loc_4C7332: mov 0xC(%esp),%edi;");
    asm("loc_4C7336: xor %esi,%esi;");
    asm("loc_4C7338: test %esi,%esi;");
    asm("loc_4C733A: jne loc_4C7344;");
    asm("loc_4C733C: mov _data_673518,%esi;");
    asm("loc_4C7342: jmp loc_4C7347;");
    asm("loc_4C7344: mov 0x34(%esi),%esi;");
    asm("loc_4C7347: test %esi,%esi;");
    asm("loc_4C7349: je loc_4C7355;");
    asm("loc_4C734B: mov (%esi),%eax;");
    asm("loc_4C734D: push %edi;");
    asm("loc_4C734E: mov %esi,%ecx;");
    asm("loc_4C7350: calll *0x14(%eax);");
    asm("loc_4C7353: jmp loc_4C7338;");
    asm("loc_4C7355: pop %edi;");
    asm("loc_4C7356: pop %esi;");
    asm("loc_4C7357: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7360() // _sub_4C7360
{
    __DEBUG_ASM(4C7360);
    // chunk 0x4C7360 _sub_4C7360
    asm("loc_4C7360: xor %eax,%eax;");
    asm("loc_4C7362: mov %eax,_data_673408;");
    asm("loc_4C7367: mov %al,_data_67340C;");
    asm("loc_4C736C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7370() // _sub_4C7370
{
    __DEBUG_ASM(4C7370);
    // chunk 0x4C7370 _sub_4C7370
    asm("loc_4C7370: push %esi;");
    asm("loc_4C7371: mov 8(%esp),%esi;");
    asm("loc_4C7375: xor %edx,%edx;");
    asm("loc_4C7377: cmp %edx,%esi;");
    asm("loc_4C7379: jne loc_4C7389;");
    asm("loc_4C737B: mov %edx,_data_673408;");
    asm("loc_4C7381: mov %dl,_data_67340C;");
    asm("loc_4C7387: pop %esi;");
    asm("loc_4C7388: ret;");
    asm("loc_4C7389: push %ebx;");
    asm("loc_4C738A: or $0xFFFFFFFF,%ecx;");
    asm("loc_4C738D: xor %eax,%eax;");
    asm("loc_4C738F: push %edi;");
    asm("loc_4C7390: mov %esi,%edi;");
    asm("loc_4C7392: repne scas (%edi),%al;");
    asm("loc_4C7394: not %ecx;");
    asm("loc_4C7396: dec %ecx;");
    asm("loc_4C7397: mov %ecx,%eax;");
    asm("loc_4C7399: cmp $0x104,%eax;");
    asm("loc_4C739E: jb loc_4C73A5;");
    asm("loc_4C73A0: mov $0x103,%eax;");
    asm("loc_4C73A5: mov %eax,%ecx;");
    asm("loc_4C73A7: mov %ecx,%ebx;");
    asm("loc_4C73A9: shr $2,%ecx;");
    asm("loc_4C73AC: mov $_data_67340C,%edi;");
    asm("loc_4C73B1: rep movsl (%esi),(%edi);");
    asm("loc_4C73B3: mov %ebx,%ecx;");
    asm("loc_4C73B5: and $3,%ecx;");
    asm("loc_4C73B8: rep movsb (%esi),(%edi);");
    asm("loc_4C73BA: pop %edi;");
    asm("loc_4C73BB: pop %ebx;");
    asm("loc_4C73BC: mov %dl,_data_67340C(%eax);");
    asm("loc_4C73C2: mov %eax,_data_673408;");
    asm("loc_4C73C7: pop %esi;");
    asm("loc_4C73C8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C73D0() // _sub_4C73D0
{
    __DEBUG_ASM(4C73D0);
    // chunk 0x4C73D0 _sub_4C73D0
    asm("loc_4C73D0: push $0xFFFFFFFF;");
    asm("loc_4C73D2: mov %fs:0,%eax;");
    asm("loc_4C73D8: push $_sub_5BD79F;");
    asm("loc_4C73DD: push %eax;");
    asm("loc_4C73DE: mov $0x156C,%eax;");
    asm("loc_4C73E3: mov %esp,%fs:0;");
    asm("loc_4C73EA: call _sub_5B7E90;");
    asm("loc_4C73EF: push %ebx;");
    asm("loc_4C73F0: push %ebp;");
    asm("loc_4C73F1: push %esi;");
    asm("loc_4C73F2: push %edi;");
    asm("loc_4C73F3: lea 0x14(%esp),%ecx;");
    asm("loc_4C73F7: calll *_import_5C605C;");
    asm("loc_4C73FD: xor %edi,%edi;");
    asm("loc_4C73FF: push %edi;");
    asm("loc_4C7400: push $_data_67340C;");
    asm("loc_4C7405: lea 0x1C(%esp),%ecx;");
    asm("loc_4C7409: mov %edi,0x158C(%esp);");
    asm("loc_4C7410: calll *_import_5C6058;");
    asm("loc_4C7416: test %al,%al;");
    asm("loc_4C7418: je loc_4C75A0;");
    asm("loc_4C741E: lea 0x14(%esp),%ecx;");
    asm("loc_4C7422: calll *_import_5C6054;");
    asm("loc_4C7428: test %al,%al;");
    asm("loc_4C742A: je loc_4C75C5;");
    asm("loc_4C7430: mov _import_5C6CF4,%ebx;");
    asm("loc_4C7436: mov _import_5C6698,%esi;");
    asm("loc_4C743C: mov _import_5C669C,%edi;");
    asm("loc_4C7442: push $_data_5D6E1C;");
    asm("loc_4C7447: lea 0x18(%esp),%ecx;");
    asm("loc_4C744B: calll *_import_5C6050;");
    asm("loc_4C7451: test %al,%al;");
    asm("loc_4C7453: je loc_4C74E0;");
    asm("loc_4C7459: lea 0x14(%esp),%ecx;");
    asm("loc_4C745D: call *%edi;");
    asm("loc_4C745F: test %al,%al;");
    asm("loc_4C7461: je loc_4C7588;");
    asm("loc_4C7467: push $_data_5D6E14;");
    asm("loc_4C746C: lea 0x18(%esp),%ecx;");
    asm("loc_4C7470: call *%ebx;");
    asm("loc_4C7472: test %al,%al;");
    asm("loc_4C7474: lea 0x14(%esp),%ecx;");
    asm("loc_4C7478: je loc_4C7492;");
    asm("loc_4C747A: call *%esi;");
    asm("loc_4C747C: mov _import_5C6DD8,%ecx;");
    asm("loc_4C7482: mov (%ecx),%edx;");
    asm("loc_4C7484: push %edx;");
    asm("loc_4C7485: push %eax;");
    asm("loc_4C7486: mov $_data_673520,%ecx;");
    asm("loc_4C748B: call _sub_425B30;");
    asm("loc_4C7490: jmp loc_4C74D1;");
    asm("loc_4C7492: push $_data_5D6E08;");
    asm("loc_4C7497: call *%ebx;");
    asm("loc_4C7499: test %al,%al;");
    asm("loc_4C749B: lea 0x14(%esp),%ecx;");
    asm("loc_4C749F: je loc_4C74B0;");
    asm("loc_4C74A1: call *%esi;");
    asm("loc_4C74A3: push %eax;");
    asm("loc_4C74A4: mov $_data_673570,%ecx;");
    asm("loc_4C74A9: call _sub_4255C0;");
    asm("loc_4C74AE: jmp loc_4C74D1;");
    asm("loc_4C74B0: push $_data_5D6DF8;");
    asm("loc_4C74B5: call *%ebx;");
    asm("loc_4C74B7: test %al,%al;");
    asm("loc_4C74B9: je loc_4C74D1;");
    asm("loc_4C74BB: push $0;");
    asm("loc_4C74BD: lea 0x18(%esp),%ecx;");
    asm("loc_4C74C1: calll *_import_5C6CFC;");
    asm("loc_4C74C7: call _sub_5B7EC0;");
    asm("loc_4C74CC: mov %eax,_data_612374;");
    asm("loc_4C74D1: lea 0x14(%esp),%ecx;");
    asm("loc_4C74D5: call *%edi;");
    asm("loc_4C74D7: test %al,%al;");
    asm("loc_4C74D9: jne loc_4C7467;");
    asm("loc_4C74DB: jmp loc_4C7588;");
    asm("loc_4C74E0: xor %edi,%edi;");
    asm("loc_4C74E2: xor %esi,%esi;");
    asm("loc_4C74E4: test %esi,%esi;");
    asm("loc_4C74E6: jne loc_4C74F0;");
    asm("loc_4C74E8: mov _data_673510,%esi;");
    asm("loc_4C74EE: jmp loc_4C74F3;");
    asm("loc_4C74F0: mov 4(%esi),%esi;");
    asm("loc_4C74F3: test %esi,%esi;");
    asm("loc_4C74F5: je loc_4C751C;");
    asm("loc_4C74F7: lea 0xC(%esi),%eax;");
    asm("loc_4C74FA: push %eax;");
    asm("loc_4C74FB: lea 0x18(%esp),%ecx;");
    asm("loc_4C74FF: calll *_import_5C6050;");
    asm("loc_4C7505: test %al,%al;");
    asm("loc_4C7507: je loc_4C74E4;");
    asm("loc_4C7509: mov (%esi),%edx;");
    asm("loc_4C750B: lea 0x14(%esp),%eax;");
    asm("loc_4C750F: push %eax;");
    asm("loc_4C7510: mov %esi,%ecx;");
    asm("loc_4C7512: calll *(%edx);");
    asm("loc_4C7514: mov %eax,%edi;");
    asm("loc_4C7516: test %edi,%edi;");
    asm("loc_4C7518: je loc_4C74E4;");
    asm("loc_4C751A: jmp loc_4C7520;");
    asm("loc_4C751C: test %edi,%edi;");
    asm("loc_4C751E: je loc_4C7557;");
    asm("loc_4C7520: mov (%edi),%edx;");
    asm("loc_4C7522: mov %edi,%ecx;");
    asm("loc_4C7524: calll *0xC(%edx);");
    asm("loc_4C7527: test %al,%al;");
    asm("loc_4C7529: je loc_4C754D;");
    asm("loc_4C752B: mov _data_67351C,%eax;");
    asm("loc_4C7530: test %eax,%eax;");
    asm("loc_4C7532: je loc_4C753F;");
    asm("loc_4C7534: mov %edi,0x34(%eax);");
    asm("loc_4C7537: mov %edi,_data_67351C;");
    asm("loc_4C753D: jmp loc_4C7582;");
    asm("loc_4C753F: mov %edi,_data_673518;");
    asm("loc_4C7545: mov %edi,_data_67351C;");
    asm("loc_4C754B: jmp loc_4C7582;");
    asm("loc_4C754D: mov (%edi),%eax;");
    asm("loc_4C754F: push $1;");
    asm("loc_4C7551: mov %edi,%ecx;");
    asm("loc_4C7553: calll *(%eax);");
    asm("loc_4C7555: jmp loc_4C7582;");
    asm("loc_4C7557: lea 0x14(%esp),%ecx;");
    asm("loc_4C755B: mov $0x100002,%esi;");
    asm("loc_4C7560: calll *_import_5C6468;");
    asm("loc_4C7566: mov _import_5C6D18,%ecx;");
    asm("loc_4C756C: push %eax;");
    asm("loc_4C756D: push $0x136;");
    asm("loc_4C7572: push $_data_5D6DCC;");
    asm("loc_4C7577: push $_data_5D6D98;");
    asm("loc_4C757C: push %esi;");
    asm("loc_4C757D: calll *(%ecx);");
    asm("loc_4C757F: add $0x14,%esp;");
    asm("loc_4C7582: mov _import_5C6698,%esi;");
    asm("loc_4C7588: lea 0x14(%esp),%ecx;");
    asm("loc_4C758C: calll *_import_5C6054;");
    asm("loc_4C7592: test %al,%al;");
    asm("loc_4C7594: jne loc_4C743C;");
    asm("loc_4C759A: xor %edi,%edi;");
    asm("loc_4C759C: jmp loc_4C75C5;");
    asm("loc_4C759E: mov %edi,%edi;");
    asm("loc_4C75A0: mov _import_5C6D18,%edx;");
    asm("loc_4C75A6: push $_data_67340C;");
    asm("loc_4C75AB: push $0x13D;");
    asm("loc_4C75B0: push $_data_5D6DCC;");
    asm("loc_4C75B5: mov $0x100002,%eax;");
    asm("loc_4C75BA: push $_data_5D6D68;");
    asm("loc_4C75BF: push %eax;");
    asm("loc_4C75C0: calll *(%edx);");
    asm("loc_4C75C2: add $0x14,%esp;");
    asm("loc_4C75C5: movb $0,_data_67354C;");
    asm("loc_4C75CC: movl $0,_data_673550;");
    asm("loc_4C75D6: movb $0,_data_673554;");
    asm("loc_4C75DD: movb $0,_data_673555;");
    asm("loc_4C75E4: movl $0,_data_673558;");
    asm("loc_4C75EE: movl $0,_data_67355C;");
    asm("loc_4C75F8: lea 0x143C(%esp),%eax;");
    asm("loc_4C75FF: movl $1,0x1584(%esp);");
    asm("loc_4C760A: mov %eax,0x10(%esp);");
    asm("loc_4C760E: mov _import_5C7080,%ecx;");
    asm("loc_4C7614: mov (%ecx),%edx;");
    asm("loc_4C7616: push %edx;");
    asm("loc_4C7617: push %edi;");
    asm("loc_4C7618: lea 0x1444(%esp),%ecx;");
    asm("loc_4C761F: movb $2,0x158C(%esp);");
    asm("loc_4C7627: calll *_import_5C707C;");
    asm("loc_4C762D: mov 0x144C(%esp),%eax;");
    asm("loc_4C7634: mov _import_5C6EFC,%ebp;");
    asm("loc_4C763A: mov _import_5C6EF8,%esi;");
    asm("loc_4C7640: or $0xFFFFFFFF,%ebx;");
    asm("loc_4C7643: cmp %ebx,%eax;");
    asm("loc_4C7645: je loc_4C768E;");
    asm("loc_4C7647: cmp %edi,0x1450(%esp);");
    asm("loc_4C764E: je loc_4C767D;");
    asm("loc_4C7650: mov 0x1454(%esp),%eax;");
    asm("loc_4C7657: cmp %edi,%eax;");
    asm("loc_4C7659: je loc_4C766C;");
    asm("loc_4C765B: push %eax;");
    asm("loc_4C765C: call *%ebp;");
    asm("loc_4C765E: mov %edi,0x1454(%esp);");
    asm("loc_4C7665: mov %edi,0x1458(%esp);");
    asm("loc_4C766C: mov 0x1450(%esp),%eax;");
    asm("loc_4C7673: push %eax;");
    asm("loc_4C7674: call *%esi;");
    asm("loc_4C7676: mov %edi,0x1450(%esp);");
    asm("loc_4C767D: mov 0x144C(%esp),%ecx;");
    asm("loc_4C7684: push %ecx;");
    asm("loc_4C7685: call *%esi;");
    asm("loc_4C7687: mov %ebx,0x144C(%esp);");
    asm("loc_4C768E: mov 0x1454(%esp),%eax;");
    asm("loc_4C7695: cmp %edi,%eax;");
    asm("loc_4C7697: mov _import_5C71D8,%edi;");
    asm("loc_4C769D: je loc_4C76B7;");
    asm("loc_4C769F: push %eax;");
    asm("loc_4C76A0: call *%edi;");
    asm("loc_4C76A2: add $4,%esp;");
    asm("loc_4C76A5: xor %eax,%eax;");
    asm("loc_4C76A7: mov %eax,0x1454(%esp);");
    asm("loc_4C76AE: mov %eax,0x1458(%esp);");
    asm("loc_4C76B5: jmp loc_4C76B9;");
    asm("loc_4C76B7: xor %eax,%eax;");
    asm("loc_4C76B9: push $1;");
    asm("loc_4C76BB: lea 0x1440(%esp),%ecx;");
    asm("loc_4C76C2: mov %eax,0x1460(%esp);");
    asm("loc_4C76C9: movb $1,0x1588(%esp);");
    asm("loc_4C76D1: calll *_import_5C7084;");
    asm("loc_4C76D7: mov _import_5C7080,%edx;");
    asm("loc_4C76DD: mov (%edx),%eax;");
    asm("loc_4C76DF: push %eax;");
    asm("loc_4C76E0: push $0;");
    asm("loc_4C76E2: lea 0x1C(%esp),%ecx;");
    asm("loc_4C76E6: movl $3,0x158C(%esp);");
    asm("loc_4C76F1: calll *_import_5C707C;");
    asm("loc_4C76F7: cmp %ebx,0x24(%esp);");
    asm("loc_4C76FB: je loc_4C7734;");
    asm("loc_4C76FD: mov 0x28(%esp),%eax;");
    asm("loc_4C7701: test %eax,%eax;");
    asm("loc_4C7703: je loc_4C7729;");
    asm("loc_4C7705: mov 0x2C(%esp),%eax;");
    asm("loc_4C7709: test %eax,%eax;");
    asm("loc_4C770B: je loc_4C771A;");
    asm("loc_4C770D: push %eax;");
    asm("loc_4C770E: call *%ebp;");
    asm("loc_4C7710: xor %eax,%eax;");
    asm("loc_4C7712: mov %eax,0x2C(%esp);");
    asm("loc_4C7716: mov %eax,0x30(%esp);");
    asm("loc_4C771A: mov 0x28(%esp),%ecx;");
    asm("loc_4C771E: push %ecx;");
    asm("loc_4C771F: call *%esi;");
    asm("loc_4C7721: movl $0,0x28(%esp);");
    asm("loc_4C7729: mov 0x24(%esp),%edx;");
    asm("loc_4C772D: push %edx;");
    asm("loc_4C772E: call *%esi;");
    asm("loc_4C7730: mov %ebx,0x24(%esp);");
    asm("loc_4C7734: mov 0x2C(%esp),%eax;");
    asm("loc_4C7738: xor %esi,%esi;");
    asm("loc_4C773A: cmp %esi,%eax;");
    asm("loc_4C773C: je loc_4C774C;");
    asm("loc_4C773E: push %eax;");
    asm("loc_4C773F: call *%edi;");
    asm("loc_4C7741: add $4,%esp;");
    asm("loc_4C7744: mov %esi,0x2C(%esp);");
    asm("loc_4C7748: mov %esi,0x30(%esp);");
    asm("loc_4C774C: mov 0x18(%esp),%eax;");
    asm("loc_4C7750: pop %edi;");
    asm("loc_4C7751: mov %esi,0x30(%esp);");
    asm("loc_4C7755: cmp %esi,%eax;");
    asm("loc_4C7757: pop %esi;");
    asm("loc_4C7758: pop %ebp;");
    asm("loc_4C7759: pop %ebx;");
    asm("loc_4C775A: je loc_4C778B;");
    asm("loc_4C775C: mov -1(%eax),%cl;");
    asm("loc_4C775F: dec %eax;");
    asm("loc_4C7760: test %cl,%cl;");
    asm("loc_4C7762: je loc_4C7782;");
    asm("loc_4C7764: cmp $0xFF,%cl;");
    asm("loc_4C7767: je loc_4C7782;");
    asm("loc_4C7769: dec %cl;");
    asm("loc_4C776B: mov %cl,(%eax);");
    asm("loc_4C776D: mov 0x156C(%esp),%ecx;");
    asm("loc_4C7774: mov %ecx,%fs:0;");
    asm("loc_4C777B: add $0x1578,%esp;");
    asm("loc_4C7781: ret;");
    asm("loc_4C7782: push %eax;");
    asm("loc_4C7783: call _sub_5B7E1D;");
    asm("loc_4C7788: add $4,%esp;");
    asm("loc_4C778B: mov 0x156C(%esp),%ecx;");
    asm("loc_4C7792: mov %ecx,%fs:0;");
    asm("loc_4C7799: add $0x1578,%esp;");
    asm("loc_4C779F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C77A0() // _sub_4C77A0
{
    __DEBUG_ASM(4C77A0);
    // chunk 0x4C77A0 _sub_4C77A0
    asm("loc_4C77A0: mov _data_673570,%ecx;");
    asm("loc_4C77A6: test %ecx,%ecx;");
    asm("loc_4C77A8: je loc_4C77C2;");
    asm("loc_4C77AA: mov _import_5C6D4C,%eax;");
    asm("loc_4C77AF: mov (%eax),%eax;");
    asm("loc_4C77B1: mov (%eax),%edx;");
    asm("loc_4C77B3: push %ecx;");
    asm("loc_4C77B4: push %eax;");
    asm("loc_4C77B5: calll *0x38(%edx);");
    asm("loc_4C77B8: movl $0,_data_673570;");
    asm("loc_4C77C2: push %esi;");
    asm("loc_4C77C3: xor %esi,%esi;");
    asm("loc_4C77C5: test %esi,%esi;");
    asm("loc_4C77C7: mov _data_673518,%ecx;");
    asm("loc_4C77CD: jne loc_4C77D3;");
    asm("loc_4C77CF: mov %ecx,%esi;");
    asm("loc_4C77D1: jmp loc_4C77D6;");
    asm("loc_4C77D3: mov 0x34(%esi),%esi;");
    asm("loc_4C77D6: test %esi,%esi;");
    asm("loc_4C77D8: je loc_4C77E3;");
    asm("loc_4C77DA: mov (%esi),%eax;");
    asm("loc_4C77DC: mov %esi,%ecx;");
    asm("loc_4C77DE: calll *0x10(%eax);");
    asm("loc_4C77E1: jmp loc_4C77C5;");
    asm("loc_4C77E3: test %ecx,%ecx;");
    asm("loc_4C77E5: je loc_4C77F6;");
    asm("loc_4C77E7: mov (%ecx),%edx;");
    asm("loc_4C77E9: mov 0x34(%ecx),%esi;");
    asm("loc_4C77EC: push $1;");
    asm("loc_4C77EE: calll *(%edx);");
    asm("loc_4C77F0: test %esi,%esi;");
    asm("loc_4C77F2: mov %esi,%ecx;");
    asm("loc_4C77F4: jne loc_4C77E7;");
    asm("loc_4C77F6: movl $0,_data_67351C;");
    asm("loc_4C7800: movl $0,_data_673518;");
    asm("loc_4C780A: mov $_data_673520,%ecx;");
    asm("loc_4C780F: pop %esi;");
    asm("loc_4C7810: jmp _sub_425A20;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7820() // _sub_4C7820
{
    __DEBUG_ASM(4C7820);
    // chunk 0x4C7820 _sub_4C7820
    asm("loc_4C7820: push %esi;");
    asm("loc_4C7821: push %edi;");
    asm("loc_4C7822: mov 0xC(%esp),%edi;");
    asm("loc_4C7826: xor %esi,%esi;");
    asm("loc_4C7828: test %esi,%esi;");
    asm("loc_4C782A: jne loc_4C7834;");
    asm("loc_4C782C: mov _data_673518,%esi;");
    asm("loc_4C7832: jmp loc_4C7837;");
    asm("loc_4C7834: mov 0x34(%esi),%esi;");
    asm("loc_4C7837: test %esi,%esi;");
    asm("loc_4C7839: je loc_4C784C;");
    asm("loc_4C783B: mov (%esi),%eax;");
    asm("loc_4C783D: push %edi;");
    asm("loc_4C783E: mov %esi,%ecx;");
    asm("loc_4C7840: calll *0x1C(%eax);");
    asm("loc_4C7843: test %al,%al;");
    asm("loc_4C7845: je loc_4C7828;");
    asm("loc_4C7847: pop %edi;");
    asm("loc_4C7848: mov $1,%al;");
    asm("loc_4C784A: pop %esi;");
    asm("loc_4C784B: ret;");
    asm("loc_4C784C: pop %edi;");
    asm("loc_4C784D: xor %al,%al;");
    asm("loc_4C784F: pop %esi;");
    asm("loc_4C7850: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7860() // _sub_4C7860
{
    __DEBUG_ASM(4C7860);
    // chunk 0x4C7860 _sub_4C7860
    asm("loc_4C7860: push %esi;");
    asm("loc_4C7861: push %edi;");
    asm("loc_4C7862: mov 0xC(%esp),%edi;");
    asm("loc_4C7866: xor %esi,%esi;");
    asm("loc_4C7868: test %esi,%esi;");
    asm("loc_4C786A: jne loc_4C7874;");
    asm("loc_4C786C: mov _data_673518,%esi;");
    asm("loc_4C7872: jmp loc_4C7877;");
    asm("loc_4C7874: mov 0x34(%esi),%esi;");
    asm("loc_4C7877: test %esi,%esi;");
    asm("loc_4C7879: je loc_4C788C;");
    asm("loc_4C787B: mov (%esi),%eax;");
    asm("loc_4C787D: push %edi;");
    asm("loc_4C787E: mov %esi,%ecx;");
    asm("loc_4C7880: calll *0x20(%eax);");
    asm("loc_4C7883: test %al,%al;");
    asm("loc_4C7885: je loc_4C7868;");
    asm("loc_4C7887: pop %edi;");
    asm("loc_4C7888: mov $1,%al;");
    asm("loc_4C788A: pop %esi;");
    asm("loc_4C788B: ret;");
    asm("loc_4C788C: pop %edi;");
    asm("loc_4C788D: xor %al,%al;");
    asm("loc_4C788F: pop %esi;");
    asm("loc_4C7890: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C78A0() // _sub_4C78A0
{
    __DEBUG_ASM(4C78A0);
    // chunk 0x4C78A0 _sub_4C78A0
    asm("loc_4C78A0: push %esi;");
    asm("loc_4C78A1: push %edi;");
    asm("loc_4C78A2: mov 0xC(%esp),%edi;");
    asm("loc_4C78A6: xor %esi,%esi;");
    asm("loc_4C78A8: test %esi,%esi;");
    asm("loc_4C78AA: jne loc_4C78B4;");
    asm("loc_4C78AC: mov _data_673518,%esi;");
    asm("loc_4C78B2: jmp loc_4C78B7;");
    asm("loc_4C78B4: mov 0x34(%esi),%esi;");
    asm("loc_4C78B7: test %esi,%esi;");
    asm("loc_4C78B9: je loc_4C78C5;");
    asm("loc_4C78BB: mov (%esi),%eax;");
    asm("loc_4C78BD: push %edi;");
    asm("loc_4C78BE: mov %esi,%ecx;");
    asm("loc_4C78C0: calll *8(%eax);");
    asm("loc_4C78C3: jmp loc_4C78A8;");
    asm("loc_4C78C5: pop %edi;");
    asm("loc_4C78C6: pop %esi;");
    asm("loc_4C78C7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C78D0() // _sub_4C78D0
{
    __DEBUG_ASM(4C78D0);
    // chunk 0x4C78D0 _sub_4C78D0
    asm("loc_4C78D0: flds 4(%esp);");
    asm("loc_4C78D4: sub $0xC,%esp;");
    asm("loc_4C78D7: fcomps _data_5C7474;");
    asm("loc_4C78DD: fnstsw %ax;");
    asm("loc_4C78DF: test $0x44,%ah;");
    asm("loc_4C78E2: jp loc_4C78F5;");
    asm("loc_4C78E4: flds 0x14(%esp);");
    asm("loc_4C78E8: fcomps _data_5C7474;");
    asm("loc_4C78EE: fnstsw %ax;");
    asm("loc_4C78F0: test $0x44,%ah;");
    asm("loc_4C78F3: jnp loc_4C790E;");
    asm("loc_4C78F5: mov _data_674AA0,%eax;");
    asm("loc_4C78FA: mov 0x5B9(%eax),%cl;");
    asm("loc_4C7900: test %cl,%cl;");
    asm("loc_4C7902: jne loc_4C7946;");
    asm("loc_4C7904: mov 0x5BA(%eax),%cl;");
    asm("loc_4C790A: test %cl,%cl;");
    asm("loc_4C790C: jne loc_4C7946;");
    asm("loc_4C790E: call _sub_54BAF0;");
    asm("loc_4C7913: push %eax;");
    asm("loc_4C7914: calll *_import_5C6470;");
    asm("loc_4C791A: add $4,%esp;");
    asm("loc_4C791D: test %eax,%eax;");
    asm("loc_4C791F: je loc_4C7946;");
    asm("loc_4C7921: mov 0x10(%esp),%ecx;");
    asm("loc_4C7925: mov 0x14(%esp),%edx;");
    asm("loc_4C7929: mov %ecx,(%esp);");
    asm("loc_4C792D: mov 0x18(%esp),%ecx;");
    asm("loc_4C7931: mov %edx,4(%esp);");
    asm("loc_4C7935: lea (%esp),%edx;");
    asm("loc_4C7939: mov %ecx,8(%esp);");
    asm("loc_4C793D: push %edx;");
    asm("loc_4C793E: mov %eax,%ecx;");
    asm("loc_4C7940: calll *_import_5C646C;");
    asm("loc_4C7946: add $0xC,%esp;");
    asm("loc_4C7949: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7950() // _sub_4C7950
{
    __DEBUG_ASM(4C7950);
    // chunk 0x4C7950 _sub_4C7950
    asm("loc_4C7950: call _sub_54BAF0;");
    asm("loc_4C7955: push %eax;");
    asm("loc_4C7956: calll *_import_5C6470;");
    asm("loc_4C795C: add $4,%esp;");
    asm("loc_4C795F: test %eax,%eax;");
    asm("loc_4C7961: je loc_4C796B;");
    asm("loc_4C7963: mov %eax,%ecx;");
    asm("loc_4C7965: jmpl *_import_5C6474;");
    asm("loc_4C796B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7970() // _sub_4C7970
{
    __DEBUG_ASM(4C7970);
    // chunk 0x4C7970 _sub_4C7970
    asm("loc_4C7970: call _sub_54BAF0;");
    asm("loc_4C7975: push %eax;");
    asm("loc_4C7976: calll *_import_5C6470;");
    asm("loc_4C797C: add $4,%esp;");
    asm("loc_4C797F: test %eax,%eax;");
    asm("loc_4C7981: je loc_4C7990;");
    asm("loc_4C7983: mov 4(%esp),%ecx;");
    asm("loc_4C7987: push %ecx;");
    asm("loc_4C7988: mov %eax,%ecx;");
    asm("loc_4C798A: calll *_import_5C648C;");
    asm("loc_4C7990: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C79A0() // _sub_4C79A0
{
    __DEBUG_ASM(4C79A0);
    // chunk 0x4C79A0 _sub_4C79A0
    asm("loc_4C79A0: call _sub_54BAF0;");
    asm("loc_4C79A5: push %eax;");
    asm("loc_4C79A6: calll *_import_5C6470;");
    asm("loc_4C79AC: add $4,%esp;");
    asm("loc_4C79AF: test %eax,%eax;");
    asm("loc_4C79B1: je loc_4C79C0;");
    asm("loc_4C79B3: mov 4(%esp),%ecx;");
    asm("loc_4C79B7: push %ecx;");
    asm("loc_4C79B8: mov %eax,%ecx;");
    asm("loc_4C79BA: calll *_import_5C6490;");
    asm("loc_4C79C0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C79D0() // _sub_4C79D0
{
    __DEBUG_ASM(4C79D0);
    // chunk 0x4C79D0 _sub_4C79D0
    asm("loc_4C79D0: call _sub_54BAF0;");
    asm("loc_4C79D5: push %eax;");
    asm("loc_4C79D6: calll *_import_5C6470;");
    asm("loc_4C79DC: add $4,%esp;");
    asm("loc_4C79DF: test %eax,%eax;");
    asm("loc_4C79E1: je loc_4C79F0;");
    asm("loc_4C79E3: mov 4(%esp),%ecx;");
    asm("loc_4C79E7: push %ecx;");
    asm("loc_4C79E8: mov %eax,%ecx;");
    asm("loc_4C79EA: calll *_import_5C6494;");
    asm("loc_4C79F0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7A00() // _sub_4C7A00
{
    __DEBUG_ASM(4C7A00);
    // chunk 0x4C7A00 _sub_4C7A00
    asm("loc_4C7A00: call _sub_54BAF0;");
    asm("loc_4C7A05: test %eax,%eax;");
    asm("loc_4C7A07: jne loc_4C7A10;");
    asm("loc_4C7A09: flds _data_5C7474;");
    asm("loc_4C7A0F: ret;");
    asm("loc_4C7A10: call _sub_54BAF0;");
    asm("loc_4C7A15: mov (%eax),%edx;");
    asm("loc_4C7A17: push $_data_673564;");
    asm("loc_4C7A1C: mov %eax,%ecx;");
    asm("loc_4C7A1E: calll *0x4C(%edx);");
    asm("loc_4C7A21: flds _data_673564;");
    asm("loc_4C7A27: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7A30() // _sub_4C7A30
{
    __DEBUG_ASM(4C7A30);
    // chunk 0x4C7A30 _sub_4C7A30
    asm("loc_4C7A30: call _sub_54BAF0;");
    asm("loc_4C7A35: push %eax;");
    asm("loc_4C7A36: calll *_import_5C6470;");
    asm("loc_4C7A3C: add $4,%esp;");
    asm("loc_4C7A3F: test %eax,%eax;");
    asm("loc_4C7A41: je loc_4C7A50;");
    asm("loc_4C7A43: mov 4(%esp),%ecx;");
    asm("loc_4C7A47: push %ecx;");
    asm("loc_4C7A48: mov %eax,%ecx;");
    asm("loc_4C7A4A: calll *_import_5C6480;");
    asm("loc_4C7A50: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7A60() // _sub_4C7A60
{
    __DEBUG_ASM(4C7A60);
    // chunk 0x4C7A60 _sub_4C7A60
    asm("loc_4C7A60: call _sub_54BAF0;");
    asm("loc_4C7A65: push %eax;");
    asm("loc_4C7A66: calll *_import_5C6470;");
    asm("loc_4C7A6C: add $4,%esp;");
    asm("loc_4C7A6F: test %eax,%eax;");
    asm("loc_4C7A71: je loc_4C7A80;");
    asm("loc_4C7A73: mov 4(%esp),%ecx;");
    asm("loc_4C7A77: push %ecx;");
    asm("loc_4C7A78: mov %eax,%ecx;");
    asm("loc_4C7A7A: calll *_import_5C6484;");
    asm("loc_4C7A80: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7A90() // _sub_4C7A90
{
    __DEBUG_ASM(4C7A90);
    // chunk 0x4C7A90 _sub_4C7A90
    asm("loc_4C7A90: call _sub_54BAF0;");
    asm("loc_4C7A95: push %eax;");
    asm("loc_4C7A96: calll *_import_5C6470;");
    asm("loc_4C7A9C: add $4,%esp;");
    asm("loc_4C7A9F: test %eax,%eax;");
    asm("loc_4C7AA1: je loc_4C7AB0;");
    asm("loc_4C7AA3: mov 4(%esp),%ecx;");
    asm("loc_4C7AA7: push %ecx;");
    asm("loc_4C7AA8: mov %eax,%ecx;");
    asm("loc_4C7AAA: calll *_import_5C647C;");
    asm("loc_4C7AB0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7AC0() // _sub_4C7AC0
{
    __DEBUG_ASM(4C7AC0);
    // chunk 0x4C7AC0 _sub_4C7AC0
    asm("loc_4C7AC0: call _sub_54BAF0;");
    asm("loc_4C7AC5: push %eax;");
    asm("loc_4C7AC6: calll *_import_5C6470;");
    asm("loc_4C7ACC: add $4,%esp;");
    asm("loc_4C7ACF: test %eax,%eax;");
    asm("loc_4C7AD1: je loc_4C7AE0;");
    asm("loc_4C7AD3: mov 4(%esp),%ecx;");
    asm("loc_4C7AD7: push %ecx;");
    asm("loc_4C7AD8: mov %eax,%ecx;");
    asm("loc_4C7ADA: calll *_import_5C6488;");
    asm("loc_4C7AE0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7AF0() // _sub_4C7AF0
{
    __DEBUG_ASM(4C7AF0);
    // chunk 0x4C7AF0 _sub_4C7AF0
    asm("loc_4C7AF0: flds 4(%esp);");
    asm("loc_4C7AF4: mov 4(%esp),%eax;");
    asm("loc_4C7AF8: fcompl _data_5D5060;");
    asm("loc_4C7AFE: mov %eax,_data_673564;");
    asm("loc_4C7B03: fnstsw %ax;");
    asm("loc_4C7B05: test $5,%ah;");
    asm("loc_4C7B08: jp loc_4C7B16;");
    asm("loc_4C7B0A: movl $0xBF800000,_data_673564;");
    asm("loc_4C7B14: jmp loc_4C7B31;");
    asm("loc_4C7B16: flds 4(%esp);");
    asm("loc_4C7B1A: fcomps _data_5C75DC;");
    asm("loc_4C7B20: fnstsw %ax;");
    asm("loc_4C7B22: test $0x41,%ah;");
    asm("loc_4C7B25: jne loc_4C7B31;");
    asm("loc_4C7B27: movl $0x3F800000,_data_673564;");
    asm("loc_4C7B31: mov _data_673564,%ecx;");
    asm("loc_4C7B37: push %esi;");
    asm("loc_4C7B38: mov %ecx,8(%esp);");
    asm("loc_4C7B3C: call _sub_54BAF0;");
    asm("loc_4C7B41: mov _import_5C6470,%esi;");
    asm("loc_4C7B47: push %eax;");
    asm("loc_4C7B48: call *%esi;");
    asm("loc_4C7B4A: add $4,%esp;");
    asm("loc_4C7B4D: test %eax,%eax;");
    asm("loc_4C7B4F: je loc_4C7B5E;");
    asm("loc_4C7B51: mov 8(%esp),%edx;");
    asm("loc_4C7B55: push %edx;");
    asm("loc_4C7B56: mov %eax,%ecx;");
    asm("loc_4C7B58: calll *_import_5C6478;");
    asm("loc_4C7B5E: flds _data_673564;");
    asm("loc_4C7B64: fcomps _data_5C7474;");
    asm("loc_4C7B6A: fnstsw %ax;");
    asm("loc_4C7B6C: test $0x44,%ah;");
    asm("loc_4C7B6F: jp loc_4C7B8A;");
    asm("loc_4C7B71: call _sub_54BAF0;");
    asm("loc_4C7B76: push %eax;");
    asm("loc_4C7B77: call *%esi;");
    asm("loc_4C7B79: add $4,%esp;");
    asm("loc_4C7B7C: test %eax,%eax;");
    asm("loc_4C7B7E: je loc_4C7B8A;");
    asm("loc_4C7B80: push $0;");
    asm("loc_4C7B82: mov %eax,%ecx;");
    asm("loc_4C7B84: calll *_import_5C647C;");
    asm("loc_4C7B8A: pop %esi;");
    asm("loc_4C7B8B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7B90() // _sub_4C7B90
{
    __DEBUG_ASM(4C7B90);
    // chunk 0x4C7B90 _sub_4C7B90
    asm("loc_4C7B90: call _sub_54BAF0;");
    asm("loc_4C7B95: test %eax,%eax;");
    asm("loc_4C7B97: je loc_4C7BDB;");
    asm("loc_4C7B99: add $0xC,%eax;");
    asm("loc_4C7B9C: test %eax,%eax;");
    asm("loc_4C7B9E: je loc_4C7BDB;");
    asm("loc_4C7BA0: mov 4(%eax),%eax;");
    asm("loc_4C7BA3: test %eax,%eax;");
    asm("loc_4C7BA5: je loc_4C7BDB;");
    asm("loc_4C7BA7: mov 0x4C(%eax),%ecx;");
    asm("loc_4C7BAA: and $0x503,%ecx;");
    asm("loc_4C7BB0: cmp $0x503,%ecx;");
    asm("loc_4C7BB6: jne loc_4C7BDB;");
    asm("loc_4C7BB8: push $0x20000;");
    asm("loc_4C7BBD: lea 0xE4(%eax),%ecx;");
    asm("loc_4C7BC3: calll *_import_5C649C;");
    asm("loc_4C7BC9: push %eax;");
    asm("loc_4C7BCA: calll *_import_5C6498;");
    asm("loc_4C7BD0: add $4,%esp;");
    asm("loc_4C7BD3: test %eax,%eax;");
    asm("loc_4C7BD5: je loc_4C7BDB;");
    asm("loc_4C7BD7: mov 0x54(%eax),%al;");
    asm("loc_4C7BDA: ret;");
    asm("loc_4C7BDB: xor %al,%al;");
    asm("loc_4C7BDD: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7BE0() // _sub_4C7BE0
{
    __DEBUG_ASM(4C7BE0);
    // chunk 0x4C7BE0 _sub_4C7BE0
    asm("loc_4C7BE0: call _sub_54BAF0;");
    asm("loc_4C7BE5: test %eax,%eax;");
    asm("loc_4C7BE7: je loc_4C7C2E;");
    asm("loc_4C7BE9: add $0xC,%eax;");
    asm("loc_4C7BEC: test %eax,%eax;");
    asm("loc_4C7BEE: je loc_4C7C2E;");
    asm("loc_4C7BF0: mov 4(%eax),%eax;");
    asm("loc_4C7BF3: test %eax,%eax;");
    asm("loc_4C7BF5: je loc_4C7C2E;");
    asm("loc_4C7BF7: mov 0x4C(%eax),%ecx;");
    asm("loc_4C7BFA: and $0x503,%ecx;");
    asm("loc_4C7C00: cmp $0x503,%ecx;");
    asm("loc_4C7C06: jne loc_4C7C2E;");
    asm("loc_4C7C08: push $0x20000;");
    asm("loc_4C7C0D: lea 0xE4(%eax),%ecx;");
    asm("loc_4C7C13: calll *_import_5C649C;");
    asm("loc_4C7C19: push %eax;");
    asm("loc_4C7C1A: calll *_import_5C6498;");
    asm("loc_4C7C20: add $4,%esp;");
    asm("loc_4C7C23: test %eax,%eax;");
    asm("loc_4C7C25: je loc_4C7C2E;");
    asm("loc_4C7C27: mov (%eax),%edx;");
    asm("loc_4C7C29: mov %eax,%ecx;");
    asm("loc_4C7C2B: jmpl *4(%edx);");
    asm("loc_4C7C2E: xor %al,%al;");
    asm("loc_4C7C30: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7C40() // _sub_4C7C40
{
    __DEBUG_ASM(4C7C40);
    // chunk 0x4C7C40 _sub_4C7C40
    asm("loc_4C7C40: mov _data_67354C,%dl;");
    asm("loc_4C7C46: test %dl,%dl;");
    asm("loc_4C7C48: sete %al;");
    asm("loc_4C7C4B: push $0x1C;");
    asm("loc_4C7C4D: mov %al,_data_67354C;");
    asm("loc_4C7C52: call _sub_5645C0;");
    asm("loc_4C7C57: pop %ecx;");
    asm("loc_4C7C58: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7C60() // _sub_4C7C60
{
    __DEBUG_ASM(4C7C60);
    // chunk 0x4C7C60 _sub_4C7C60
    asm("loc_4C7C60: flds _data_673550;");
    asm("loc_4C7C66: fcomps _data_612270;");
    asm("loc_4C7C6C: fnstsw %ax;");
    asm("loc_4C7C6E: test $1,%ah;");
    asm("loc_4C7C71: jne loc_4C7C79;");
    asm("loc_4C7C73: mov $1,%eax;");
    asm("loc_4C7C78: ret;");
    asm("loc_4C7C79: xor %eax,%eax;");
    asm("loc_4C7C7B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7C80() // _sub_4C7C80
{
    __DEBUG_ASM(4C7C80);
    // chunk 0x4C7C80 _sub_4C7C80
    asm("loc_4C7C80: call _sub_45A470;");
    asm("loc_4C7C85: test %al,%al;");
    asm("loc_4C7C87: je loc_4C7C95;");
    asm("loc_4C7C89: mov $1,%al;");
    asm("loc_4C7C8B: xor %ecx,%ecx;");
    asm("loc_4C7C8D: test %al,%al;");
    asm("loc_4C7C8F: sete %cl;");
    asm("loc_4C7C92: mov %cl,%al;");
    asm("loc_4C7C94: ret;");
    asm("loc_4C7C95: mov _data_67354C,%al;");
    asm("loc_4C7C9A: test %al,%al;");
    asm("loc_4C7C9C: sete %al;");
    asm("loc_4C7C9F: xor %ecx,%ecx;");
    asm("loc_4C7CA1: test %al,%al;");
    asm("loc_4C7CA3: sete %cl;");
    asm("loc_4C7CA6: mov %cl,%al;");
    asm("loc_4C7CA8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C7CB0() // _sub_4C7CB0
{
    __DEBUG_ASM(4C7CB0);
    // chunk 0x4C7CB0 _sub_4C7CB0
    asm("loc_4C7CB0: sub $0x18,%esp;");
    asm("loc_4C7CB3: push %ebx;");
    asm("loc_4C7CB4: push %esi;");
    asm("loc_4C7CB5: push %edi;");
    asm("loc_4C7CB6: call _sub_54BAF0;");
    asm("loc_4C7CBB: mov _import_5C62E8,%edi;");
    asm("loc_4C7CC1: xor %esi,%esi;");
    asm("loc_4C7CC3: xor %edx,%edx;");
    asm("loc_4C7CC5: test %eax,%eax;");
    asm("loc_4C7CC7: je loc_4C7CF8;");
    asm("loc_4C7CC9: add $0xC,%eax;");
    asm("loc_4C7CCC: test %eax,%eax;");
    asm("loc_4C7CCE: je loc_4C7D7C;");
    asm("loc_4C7CD4: mov 4(%eax),%ecx;");
    asm("loc_4C7CD7: test %ecx,%ecx;");
    asm("loc_4C7CD9: je loc_4C7D7C;");
    asm("loc_4C7CDF: mov 0x4C(%ecx),%eax;");
    asm("loc_4C7CE2: and $0x503,%eax;");
    asm("loc_4C7CE7: cmp $0x503,%eax;");
    asm("loc_4C7CEC: jne loc_4C7D7C;");
    asm("loc_4C7CF2: mov %ecx,%esi;");
    asm("loc_4C7CF4: call *%edi;");
    asm("loc_4C7CF6: mov %eax,%edx;");
    asm("loc_4C7CF8: xor %bl,%bl;");
    asm("loc_4C7CFA: test %edx,%edx;");
    asm("loc_4C7CFC: je loc_4C7D09;");
    asm("loc_4C7CFE: mov 0x168(%edx),%al;");
    asm("loc_4C7D04: test %al,%al;");
    asm("loc_4C7D06: sete %bl;");
    asm("loc_4C7D09: call _sub_41A3E0;");
    asm("loc_4C7D0E: test %al,%al;");
    asm("loc_4C7D10: jne loc_4C7D22;");
    asm("loc_4C7D12: test %esi,%esi;");
    asm("loc_4C7D14: je loc_4C7D24;");
    asm("loc_4C7D16: mov %esi,%ecx;");
    asm("loc_4C7D18: calll *_import_5C64A0;");
    asm("loc_4C7D1E: test %al,%al;");
    asm("loc_4C7D20: je loc_4C7D24;");
    asm("loc_4C7D22: mov $1,%bl;");
    asm("loc_4C7D24: mov _data_616850,%ecx;");
    asm("loc_4C7D2A: mov _data_67354C,%al;");
    asm("loc_4C7D2F: and $1,%ecx;");
    asm("loc_4C7D32: cmp $1,%cl;");
    asm("loc_4C7D35: je loc_4C7D3F;");
    asm("loc_4C7D37: test %al,%al;");
    asm("loc_4C7D39: je loc_4C7FDD;");
    asm("loc_4C7D3F: test %bl,%bl;");
    asm("loc_4C7D41: jne loc_4C7FDD;");
    asm("loc_4C7D47: mov _data_673555,%cl;");
    asm("loc_4C7D4D: test %cl,%cl;");
    asm("loc_4C7D4F: jne loc_4C7D59;");
    asm("loc_4C7D51: test %al,%al;");
    asm("loc_4C7D53: je loc_4C807E;");
    asm("loc_4C7D59: mov _data_673554,%al;");
    asm("loc_4C7D5E: test %al,%al;");
    asm("loc_4C7D60: jne loc_4C7D83;");
    asm("loc_4C7D62: call _sub_59DAA0;");
    asm("loc_4C7D67: test %eax,%eax;");
    asm("loc_4C7D69: je loc_4C7D83;");
    asm("loc_4C7D6B: pop %edi;");
    asm("loc_4C7D6C: pop %esi;");
    asm("loc_4C7D6D: movl $0,_data_673550;");
    asm("loc_4C7D77: pop %ebx;");
    asm("loc_4C7D78: add $0x18,%esp;");
    asm("loc_4C7D7B: ret;");
    asm("loc_4C7D7C: xor %esi,%esi;");
    asm("loc_4C7D7E: jmp loc_4C7CF8;");
    asm("loc_4C7D83: flds _data_673550;");
    asm("loc_4C7D89: fcomps _data_5C7474;");
    asm("loc_4C7D8F: fnstsw %ax;");
    asm("loc_4C7D91: test $0x44,%ah;");
    asm("loc_4C7D94: jp loc_4C7DFD;");
    asm("loc_4C7D96: fildl _data_616840;");
    asm("loc_4C7D9C: fstps _data_673558;");
    asm("loc_4C7DA2: call _sub_45A470;");
    asm("loc_4C7DA7: test %al,%al;");
    asm("loc_4C7DA9: jne loc_4C7DBA;");
    asm("loc_4C7DAB: mov _data_67354C,%dl;");
    asm("loc_4C7DB1: test %dl,%dl;");
    asm("loc_4C7DB3: sete %al;");
    asm("loc_4C7DB6: test %al,%al;");
    asm("loc_4C7DB8: je loc_4C7DCD;");
    asm("loc_4C7DBA: flds _data_673550;");
    asm("loc_4C7DC0: fcomps _data_612270;");
    asm("loc_4C7DC6: fnstsw %ax;");
    asm("loc_4C7DC8: test $1,%ah;");
    asm("loc_4C7DCB: jne loc_4C7DF1;");
    asm("loc_4C7DCD: push $0x17;");
    asm("loc_4C7DCF: call _sub_5792B0;");
    asm("loc_4C7DD4: add $4,%esp;");
    asm("loc_4C7DD7: test %eax,%eax;");
    asm("loc_4C7DD9: je loc_4C7DF1;");
    asm("loc_4C7DDB: mov _data_610854,%edx;");
    asm("loc_4C7DE1: sub _data_616844,%edx;");
    asm("loc_4C7DE7: mov %edx,0x10(%esp);");
    asm("loc_4C7DEB: fildl 0x10(%esp);");
    asm("loc_4C7DEF: jmp loc_4C7DF7;");
    asm("loc_4C7DF1: fildl _data_616844;");
    asm("loc_4C7DF7: fstps _data_67355C;");
    asm("loc_4C7DFD: call _sub_42D680;");
    asm("loc_4C7E02: fadds _data_673550;");
    asm("loc_4C7E08: fsts _data_673550;");
    asm("loc_4C7E0E: fcomps _data_612270;");
    asm("loc_4C7E14: fnstsw %ax;");
    asm("loc_4C7E16: test $1,%ah;");
    asm("loc_4C7E19: jne loc_4C7F2C;");
    asm("loc_4C7E1F: fildl _data_610850;");
    asm("loc_4C7E25: fmuls _data_5C75E0;");
    asm("loc_4C7E2B: fildl _data_616840;");
    asm("loc_4C7E31: fsub %st(1),%st;");
    asm("loc_4C7E33: fdiv %st(1),%st;");
    asm("loc_4C7E35: fstps 0x10(%esp);");
    asm("loc_4C7E39: fstp %st(0);");
    asm("loc_4C7E3B: fildl _data_610854;");
    asm("loc_4C7E41: fmuls _data_5C75E0;");
    asm("loc_4C7E47: fstps 0xC(%esp);");
    asm("loc_4C7E4B: call _sub_45A470;");
    asm("loc_4C7E50: test %al,%al;");
    asm("loc_4C7E52: jne loc_4C7E63;");
    asm("loc_4C7E54: mov _data_67354C,%dl;");
    asm("loc_4C7E5A: test %dl,%dl;");
    asm("loc_4C7E5C: sete %al;");
    asm("loc_4C7E5F: test %al,%al;");
    asm("loc_4C7E61: je loc_4C7E76;");
    asm("loc_4C7E63: flds _data_673550;");
    asm("loc_4C7E69: fcomps _data_612270;");
    asm("loc_4C7E6F: fnstsw %ax;");
    asm("loc_4C7E71: test $1,%ah;");
    asm("loc_4C7E74: jne loc_4C7E99;");
    asm("loc_4C7E76: push $0x17;");
    asm("loc_4C7E78: call _sub_5792B0;");
    asm("loc_4C7E7D: add $4,%esp;");
    asm("loc_4C7E80: test %eax,%eax;");
    asm("loc_4C7E82: je loc_4C7E99;");
    asm("loc_4C7E84: mov _data_610854,%eax;");
    asm("loc_4C7E89: sub _data_616844,%eax;");
    asm("loc_4C7E8F: mov %eax,0x14(%esp);");
    asm("loc_4C7E93: fildl 0x14(%esp);");
    asm("loc_4C7E97: jmp loc_4C7E9F;");
    asm("loc_4C7E99: fildl _data_616844;");
    asm("loc_4C7E9F: fsubs 0xC(%esp);");
    asm("loc_4C7EA3: fdivs 0xC(%esp);");
    asm("loc_4C7EA7: fstps 0xC(%esp);");
    asm("loc_4C7EAB: flds 0x10(%esp);");
    asm("loc_4C7EAF: fcomps _data_5C7474;");
    asm("loc_4C7EB5: fnstsw %ax;");
    asm("loc_4C7EB7: test $0x44,%ah;");
    asm("loc_4C7EBA: jp loc_4C7ECD;");
    asm("loc_4C7EBC: flds 0xC(%esp);");
    asm("loc_4C7EC0: fcomps _data_5C7474;");
    asm("loc_4C7EC6: fnstsw %ax;");
    asm("loc_4C7EC8: test $0x44,%ah;");
    asm("loc_4C7ECB: jnp loc_4C7EE6;");
    asm("loc_4C7ECD: mov _data_674AA0,%eax;");
    asm("loc_4C7ED2: mov 0x5B9(%eax),%cl;");
    asm("loc_4C7ED8: test %cl,%cl;");
    asm("loc_4C7EDA: jne loc_4C7F1E;");
    asm("loc_4C7EDC: mov 0x5BA(%eax),%cl;");
    asm("loc_4C7EE2: test %cl,%cl;");
    asm("loc_4C7EE4: jne loc_4C7F1E;");
    asm("loc_4C7EE6: call _sub_54BAF0;");
    asm("loc_4C7EEB: push %eax;");
    asm("loc_4C7EEC: calll *_import_5C6470;");
    asm("loc_4C7EF2: add $4,%esp;");
    asm("loc_4C7EF5: test %eax,%eax;");
    asm("loc_4C7EF7: je loc_4C7F1E;");
    asm("loc_4C7EF9: mov 0x10(%esp),%ecx;");
    asm("loc_4C7EFD: mov 0xC(%esp),%edx;");
    asm("loc_4C7F01: mov %ecx,0x18(%esp);");
    asm("loc_4C7F05: lea 0x18(%esp),%ecx;");
    asm("loc_4C7F09: push %ecx;");
    asm("loc_4C7F0A: mov %eax,%ecx;");
    asm("loc_4C7F0C: mov %edx,0x20(%esp);");
    asm("loc_4C7F10: movl $0,0x24(%esp);");
    asm("loc_4C7F18: calll *_import_5C646C;");
    asm("loc_4C7F1E: pop %edi;");
    asm("loc_4C7F1F: pop %esi;");
    asm("loc_4C7F20: movb $1,_data_673554;");
    asm("loc_4C7F27: pop %ebx;");
    asm("loc_4C7F28: add $0x18,%esp;");
    asm("loc_4C7F2B: ret;");
    asm("loc_4C7F2C: fildl _data_616840;");
    asm("loc_4C7F32: fsubs _data_673558;");
    asm("loc_4C7F38: fstps 0x10(%esp);");
    asm("loc_4C7F3C: call _sub_45A470;");
    asm("loc_4C7F41: test %al,%al;");
    asm("loc_4C7F43: jne loc_4C7F54;");
    asm("loc_4C7F45: mov _data_67354C,%dl;");
    asm("loc_4C7F4B: test %dl,%dl;");
    asm("loc_4C7F4D: sete %al;");
    asm("loc_4C7F50: test %al,%al;");
    asm("loc_4C7F52: je loc_4C7F67;");
    asm("loc_4C7F54: flds _data_673550;");
    asm("loc_4C7F5A: fcomps _data_612270;");
    asm("loc_4C7F60: fnstsw %ax;");
    asm("loc_4C7F62: test $1,%ah;");
    asm("loc_4C7F65: jne loc_4C7F8B;");
    asm("loc_4C7F67: push $0x17;");
    asm("loc_4C7F69: call _sub_5792B0;");
    asm("loc_4C7F6E: add $4,%esp;");
    asm("loc_4C7F71: test %eax,%eax;");
    asm("loc_4C7F73: je loc_4C7F8B;");
    asm("loc_4C7F75: mov _data_610854,%edx;");
    asm("loc_4C7F7B: sub _data_616844,%edx;");
    asm("loc_4C7F81: mov %edx,0x14(%esp);");
    asm("loc_4C7F85: fildl 0x14(%esp);");
    asm("loc_4C7F89: jmp loc_4C7F91;");
    asm("loc_4C7F8B: fildl _data_616844;");
    asm("loc_4C7F91: fsubs _data_67355C;");
    asm("loc_4C7F97: fildl _data_610850;");
    asm("loc_4C7F9D: fdivrs _data_5D6E20;");
    asm("loc_4C7FA3: fmuls _data_5D440C;");
    asm("loc_4C7FA9: fld %st(1);");
    asm("loc_4C7FAB: fmul %st(2),%st;");
    asm("loc_4C7FAD: flds 0x10(%esp);");
    asm("loc_4C7FB1: fmuls 0x10(%esp);");
    asm("loc_4C7FB5: faddp;");
    asm("loc_4C7FB7: fld %st(1);");
    asm("loc_4C7FB9: fmul %st(2),%st;");
    asm("loc_4C7FBB: fcompp;");
    asm("loc_4C7FBD: fnstsw %ax;");
    asm("loc_4C7FBF: fstp %st(0);");
    asm("loc_4C7FC1: test $5,%ah;");
    asm("loc_4C7FC4: fstp %st(0);");
    asm("loc_4C7FC6: jp loc_4C807E;");
    asm("loc_4C7FCC: mov _data_612270,%eax;");
    asm("loc_4C7FD1: pop %edi;");
    asm("loc_4C7FD2: pop %esi;");
    asm("loc_4C7FD3: mov %eax,_data_673550;");
    asm("loc_4C7FD8: pop %ebx;");
    asm("loc_4C7FD9: add $0x18,%esp;");
    asm("loc_4C7FDC: ret;");
    asm("loc_4C7FDD: mov _data_673554,%al;");
    asm("loc_4C7FE2: test %al,%al;");
    asm("loc_4C7FE4: movl $0,_data_673550;");
    asm("loc_4C7FEE: je loc_4C807E;");
    asm("loc_4C7FF4: movb $0,_data_673554;");
    asm("loc_4C7FFB: movb $0,_data_673555;");
    asm("loc_4C8002: call _sub_54BAF0;");
    asm("loc_4C8007: push %eax;");
    asm("loc_4C8008: calll *_import_5C6470;");
    asm("loc_4C800E: add $4,%esp;");
    asm("loc_4C8011: test %eax,%eax;");
    asm("loc_4C8013: je loc_4C803A;");
    asm("loc_4C8015: lea 0x18(%esp),%ecx;");
    asm("loc_4C8019: push %ecx;");
    asm("loc_4C801A: mov %eax,%ecx;");
    asm("loc_4C801C: movl $0,0x1C(%esp);");
    asm("loc_4C8024: movl $0,0x20(%esp);");
    asm("loc_4C802C: movl $0,0x24(%esp);");
    asm("loc_4C8034: calll *_import_5C646C;");
    asm("loc_4C803A: call _sub_54BAF0;");
    asm("loc_4C803F: test %eax,%eax;");
    asm("loc_4C8041: je loc_4C807E;");
    asm("loc_4C8043: add $0xC,%eax;");
    asm("loc_4C8046: test %eax,%eax;");
    asm("loc_4C8048: je loc_4C807E;");
    asm("loc_4C804A: mov 4(%eax),%ecx;");
    asm("loc_4C804D: test %ecx,%ecx;");
    asm("loc_4C804F: je loc_4C807E;");
    asm("loc_4C8051: mov 0x4C(%ecx),%edx;");
    asm("loc_4C8054: and $0x503,%edx;");
    asm("loc_4C805A: cmp $0x503,%edx;");
    asm("loc_4C8060: jne loc_4C807E;");
    asm("loc_4C8062: call *%edi;");
    asm("loc_4C8064: test %eax,%eax;");
    asm("loc_4C8066: je loc_4C807E;");
    asm("loc_4C8068: cmpl $0x12,0xC0(%eax);");
    asm("loc_4C806F: jne loc_4C807E;");
    asm("loc_4C8071: mov _data_674A58,%ecx;");
    asm("loc_4C8077: push $0;");
    asm("loc_4C8079: call _sub_53E4A0;");
    asm("loc_4C807E: pop %edi;");
    asm("loc_4C807F: pop %esi;");
    asm("loc_4C8080: pop %ebx;");
    asm("loc_4C8081: add $0x18,%esp;");
    asm("loc_4C8084: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8090() // _sub_4C8090
{
    __DEBUG_ASM(4C8090);
    // chunk 0x4C8090 _sub_4C8090
    asm("loc_4C8090: mov _import_5C6DCC,%eax;");
    asm("loc_4C8095: mov (%eax),%eax;");
    asm("loc_4C8097: mov (%eax),%ecx;");
    asm("loc_4C8099: push %ebx;");
    asm("loc_4C809A: push %esi;");
    asm("loc_4C809B: push %edi;");
    asm("loc_4C809C: push $0xFFFFFFFF;");
    asm("loc_4C809E: push $1;");
    asm("loc_4C80A0: push %eax;");
    asm("loc_4C80A1: calll *0x20(%ecx);");
    asm("loc_4C80A4: mov 0x14(%esp),%edi;");
    asm("loc_4C80A8: mov 0x10(%esp),%ebx;");
    asm("loc_4C80AC: xor %esi,%esi;");
    asm("loc_4C80AE: mov %edi,%edi;");
    asm("loc_4C80B0: test %esi,%esi;");
    asm("loc_4C80B2: jne loc_4C80BC;");
    asm("loc_4C80B4: mov _data_673518,%esi;");
    asm("loc_4C80BA: jmp loc_4C80BF;");
    asm("loc_4C80BC: mov 0x34(%esi),%esi;");
    asm("loc_4C80BF: test %esi,%esi;");
    asm("loc_4C80C1: je loc_4C80CE;");
    asm("loc_4C80C3: mov (%esi),%edx;");
    asm("loc_4C80C5: push %edi;");
    asm("loc_4C80C6: push %ebx;");
    asm("loc_4C80C7: mov %esi,%ecx;");
    asm("loc_4C80C9: calll *0x18(%edx);");
    asm("loc_4C80CC: jmp loc_4C80B0;");
    asm("loc_4C80CE: mov _import_5C6DCC,%eax;");
    asm("loc_4C80D3: mov (%eax),%eax;");
    asm("loc_4C80D5: mov (%eax),%ecx;");
    asm("loc_4C80D7: push $1;");
    asm("loc_4C80D9: push $1;");
    asm("loc_4C80DB: push %eax;");
    asm("loc_4C80DC: calll *0x20(%ecx);");
    asm("loc_4C80DF: pop %edi;");
    asm("loc_4C80E0: pop %esi;");
    asm("loc_4C80E1: pop %ebx;");
    asm("loc_4C80E2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C80F0() // _sub_4C80F0
{
    __DEBUG_ASM(4C80F0);
    // chunk 0x4C80F0 _sub_4C80F0
    asm("loc_4C80F0: cmpl $0x201,4(%esp);");
    asm("loc_4C80F8: jne loc_4C8101;");
    asm("loc_4C80FA: movb $1,_data_673555;");
    asm("loc_4C8101: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8110() // _sub_4C8110
{
    __DEBUG_ASM(4C8110);
    // chunk 0x4C8110 _sub_4C8110
    asm("loc_4C8110: mov _data_612274,%eax;");
    asm("loc_4C8115: and 4(%esp),%eax;");
    asm("loc_4C8119: neg %eax;");
    asm("loc_4C811B: sbb %eax,%eax;");
    asm("loc_4C811D: neg %eax;");
    asm("loc_4C811F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8120() // _sub_4C8120
{
    __DEBUG_ASM(4C8120);
    // chunk 0x4C8120 _sub_4C8120
    asm("loc_4C8120: mov 8(%esp),%al;");
    asm("loc_4C8124: sub $0x80,%esp;");
    asm("loc_4C812A: test %al,%al;");
    asm("loc_4C812C: je loc_4C8145;");
    asm("loc_4C812E: mov _data_612274,%ecx;");
    asm("loc_4C8134: mov 0x84(%esp),%eax;");
    asm("loc_4C813B: or %eax,%ecx;");
    asm("loc_4C813D: mov %ecx,_data_612274;");
    asm("loc_4C8143: jmp loc_4C815A;");
    asm("loc_4C8145: mov 0x84(%esp),%ecx;");
    asm("loc_4C814C: mov _data_612274,%eax;");
    asm("loc_4C8151: not %ecx;");
    asm("loc_4C8153: and %ecx,%eax;");
    asm("loc_4C8155: mov %eax,_data_612274;");
    asm("loc_4C815A: mov _data_67ECD0,%ecx;");
    asm("loc_4C8160: test %ecx,%ecx;");
    asm("loc_4C8162: mov _data_612274,%edx;");
    asm("loc_4C8168: mov %edx,(%esp);");
    asm("loc_4C816C: je loc_4C8184;");
    asm("loc_4C816E: mov (%ecx),%eax;");
    asm("loc_4C8170: push $4;");
    asm("loc_4C8172: lea 4(%esp),%edx;");
    asm("loc_4C8176: push %edx;");
    asm("loc_4C8177: mov _data_673344,%edx;");
    asm("loc_4C817D: push %edx;");
    asm("loc_4C817E: calll *0x134(%eax);");
    asm("loc_4C8184: add $0x80,%esp;");
    asm("loc_4C818A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8190() // _sub_4C8190
{
    __DEBUG_ASM(4C8190);
    // chunk 0x4C8190 _sub_4C8190
    asm("loc_4C8190: mov 4(%esp),%eax;");
    asm("loc_4C8194: mov %eax,_data_612274;");
    asm("loc_4C8199: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C81A0() // _sub_4C81A0
{
    __DEBUG_ASM(4C81A0);
    // chunk 0x4C81A0 _sub_4C81A0
    asm("loc_4C81A0: mov 4(%esp),%eax;");
    asm("loc_4C81A4: add $0x28,%ecx;");
    asm("loc_4C81A7: test %eax,%eax;");
    asm("loc_4C81A9: je loc_4C81B0;");
    asm("loc_4C81AB: add $8,%eax;");
    asm("loc_4C81AE: jmp loc_4C81B2;");
    asm("loc_4C81B0: xor %eax,%eax;");
    asm("loc_4C81B2: cmp (%ecx),%eax;");
    asm("loc_4C81B4: je loc_4C81C0;");
    asm("loc_4C81B6: mov %eax,4(%esp);");
    asm("loc_4C81BA: jmpl *_import_5C62A8;");
    asm("loc_4C81C0: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C81D0() // _sub_4C81D0
{
    __DEBUG_ASM(4C81D0);
    // chunk 0x4C81D0 _sub_4C81D0
    asm("loc_4C81D0: mov %fs:0,%eax;");
    asm("loc_4C81D6: push $0xFFFFFFFF;");
    asm("loc_4C81D8: push $_sub_5BD7DB;");
    asm("loc_4C81DD: push %eax;");
    asm("loc_4C81DE: mov %esp,%fs:0;");
    asm("loc_4C81E5: sub $0x68,%esp;");
    asm("loc_4C81E8: push %ebx;");
    asm("loc_4C81E9: push %esi;");
    asm("loc_4C81EA: mov %ecx,%esi;");
    asm("loc_4C81EC: mov 0x30(%esi),%eax;");
    asm("loc_4C81EF: xor %ebx,%ebx;");
    asm("loc_4C81F1: cmp %ebx,%eax;");
    asm("loc_4C81F3: je loc_4C82DA;");
    asm("loc_4C81F9: mov %ebx,0x14(%esp);");
    asm("loc_4C81FD: mov %ebx,0x18(%esp);");
    asm("loc_4C8201: lea 0x1C(%esp),%ecx;");
    asm("loc_4C8205: mov %ebx,0x78(%esp);");
    asm("loc_4C8209: call _sub_4144B0;");
    asm("loc_4C820E: mov 0x14(%esp),%eax;");
    asm("loc_4C8212: cmp %ebx,%eax;");
    asm("loc_4C8214: mov %ebx,0x10(%esp);");
    asm("loc_4C8218: movl $0xFFFFFFFF,0xC(%esp);");
    asm("loc_4C8220: mov %ebx,0x50(%esp);");
    asm("loc_4C8224: je loc_4C822E;");
    asm("loc_4C8226: cmp %bx,(%eax);");
    asm("loc_4C8229: je loc_4C822E;");
    asm("loc_4C822B: mov %bx,(%eax);");
    asm("loc_4C822E: push %edi;");
    asm("loc_4C822F: mov %bl,0x70(%esp);");
    asm("loc_4C8233: mov 0x30(%esi),%eax;");
    asm("loc_4C8236: mov %eax,0x14(%esp);");
    asm("loc_4C823A: add %esi,%eax;");
    asm("loc_4C823C: mov %eax,0x10(%esp);");
    asm("loc_4C8240: lea 0x10(%esp),%eax;");
    asm("loc_4C8244: push %eax;");
    asm("loc_4C8245: movl $1,0x80(%esp);");
    asm("loc_4C8250: call _sub_4BE370;");
    asm("loc_4C8255: add $4,%esp;");
    asm("loc_4C8258: lea 0x20(%esp),%ecx;");
    asm("loc_4C825C: movl $2,0x7C(%esp);");
    asm("loc_4C8264: mov %ecx,0xC(%esp);");
    asm("loc_4C8268: lea 0x20(%esp),%ecx;");
    asm("loc_4C826C: movb $4,0x7C(%esp);");
    asm("loc_4C8271: call _sub_4144F0;");
    asm("loc_4C8276: mov 0x34(%esp),%edi;");
    asm("loc_4C827A: mov 0x30(%esp),%esi;");
    asm("loc_4C827E: cmp %edi,%esi;");
    asm("loc_4C8280: movb $3,0x7C(%esp);");
    asm("loc_4C8285: je loc_4C829A;");
    asm("loc_4C8287: push %ebx;");
    asm("loc_4C8288: mov %esi,%ecx;");
    asm("loc_4C828A: call _sub_418F70;");
    asm("loc_4C828F: add $8,%esi;");
    asm("loc_4C8292: cmp %edi,%esi;");
    asm("loc_4C8294: jne loc_4C8287;");
    asm("loc_4C8296: mov 0x30(%esp),%esi;");
    asm("loc_4C829A: push %esi;");
    asm("loc_4C829B: call _sub_5B7E1D;");
    asm("loc_4C82A0: mov 0x24(%esp),%eax;");
    asm("loc_4C82A4: mov _import_5C71D8,%esi;");
    asm("loc_4C82AA: add $4,%esp;");
    asm("loc_4C82AD: cmp %ebx,%eax;");
    asm("loc_4C82AF: mov %ebx,0x30(%esp);");
    asm("loc_4C82B3: mov %ebx,0x34(%esp);");
    asm("loc_4C82B7: mov %ebx,0x38(%esp);");
    asm("loc_4C82BB: pop %edi;");
    asm("loc_4C82BC: je loc_4C82CC;");
    asm("loc_4C82BE: push %eax;");
    asm("loc_4C82BF: call *%esi;");
    asm("loc_4C82C1: add $4,%esp;");
    asm("loc_4C82C4: mov %ebx,0x1C(%esp);");
    asm("loc_4C82C8: mov %ebx,0x20(%esp);");
    asm("loc_4C82CC: mov 0x14(%esp),%eax;");
    asm("loc_4C82D0: cmp %ebx,%eax;");
    asm("loc_4C82D2: je loc_4C82DA;");
    asm("loc_4C82D4: push %eax;");
    asm("loc_4C82D5: call *%esi;");
    asm("loc_4C82D7: add $4,%esp;");
    asm("loc_4C82DA: mov 0x70(%esp),%ecx;");
    asm("loc_4C82DE: pop %esi;");
    asm("loc_4C82DF: pop %ebx;");
    asm("loc_4C82E0: mov %ecx,%fs:0;");
    asm("loc_4C82E7: add $0x74,%esp;");
    asm("loc_4C82EA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C82F0() // _sub_4C82F0
{
    __DEBUG_ASM(4C82F0);
    // chunk 0x4C82F0 _sub_4C82F0
    asm("loc_4C82F0: push $_data_5D6E24;");
    asm("loc_4C82F5: mov $_data_6733DC,%ecx;");
    asm("loc_4C82FA: call _sub_4C8400;");
    asm("loc_4C82FF: push $_sub_4C8310;");
    asm("loc_4C8304: call _sub_5B7E6C;");
    asm("loc_4C8309: pop %ecx;");
    asm("loc_4C830A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8310() // _sub_4C8310
{
    __DEBUG_ASM(4C8310);
    // chunk 0x4C8310 _sub_4C8310
    asm("loc_4C8310: mov $_data_6733DC,%ecx;");
    asm("loc_4C8315: jmp _sub_4C8350;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8320() // _sub_4C8320
{
    __DEBUG_ASM(4C8320);
    // chunk 0x4C8320 _sub_4C8320
    asm("loc_4C8320: push $_data_5D6E38;");
    asm("loc_4C8325: mov $_data_6733B0,%ecx;");
    asm("loc_4C832A: call _sub_4C8CA0;");
    asm("loc_4C832F: push $_sub_4C8340;");
    asm("loc_4C8334: call _sub_5B7E6C;");
    asm("loc_4C8339: pop %ecx;");
    asm("loc_4C833A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8340() // _sub_4C8340
{
    __DEBUG_ASM(4C8340);
    // chunk 0x4C8340 _sub_4C8340
    asm("loc_4C8340: mov $_data_6733B0,%ecx;");
    asm("loc_4C8345: jmp _sub_4C8350;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8350() // _sub_4C8350
{
    __DEBUG_ASM(4C8350);
    // chunk 0x4C8350 _sub_4C8350
    asm("loc_4C8350: movl $_off_5D6E30,(%ecx);");
    asm("loc_4C8356: mov _data_673510,%eax;");
    asm("loc_4C835B: xor %edx,%edx;");
    asm("loc_4C835D: test %eax,%eax;");
    asm("loc_4C835F: je loc_4C8398;");
    asm("loc_4C8361: cmp %ecx,%eax;");
    asm("loc_4C8363: je loc_4C836F;");
    asm("loc_4C8365: mov %eax,%edx;");
    asm("loc_4C8367: mov 4(%eax),%eax;");
    asm("loc_4C836A: test %eax,%eax;");
    asm("loc_4C836C: jne loc_4C8361;");
    asm("loc_4C836E: ret;");
    asm("loc_4C836F: test %edx,%edx;");
    asm("loc_4C8371: push %esi;");
    asm("loc_4C8372: mov 4(%eax),%esi;");
    asm("loc_4C8375: je loc_4C837C;");
    asm("loc_4C8377: mov %esi,4(%edx);");
    asm("loc_4C837A: jmp loc_4C8382;");
    asm("loc_4C837C: mov %esi,_data_673510;");
    asm("loc_4C8382: cmp _data_673514,%eax;");
    asm("loc_4C8388: pop %esi;");
    asm("loc_4C8389: jne loc_4C8391;");
    asm("loc_4C838B: mov %edx,_data_673514;");
    asm("loc_4C8391: movl $0,4(%ecx);");
    asm("loc_4C8398: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C83A0() // _sub_4C83A0
{
    __DEBUG_ASM(4C83A0);
    // chunk 0x4C83A0 _sub_4C83A0
    asm("loc_4C83A0: mov 4(%esp),%eax;");
    asm("loc_4C83A4: mov %eax,_data_673568;");
    asm("loc_4C83A9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C83B0() // _sub_4C83B0
{
    __DEBUG_ASM(4C83B0);
    // chunk 0x4C83B0 _sub_4C83B0
    asm("loc_4C83B0: mov 4(%esp),%eax;");
    asm("loc_4C83B4: mov %eax,_data_67356C;");
    asm("loc_4C83B9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C83C0() // _sub_4C83C0
{
    __DEBUG_ASM(4C83C0);
    // chunk 0x4C83C0 _sub_4C83C0
    asm("loc_4C83C0: mov _data_674BC8,%ecx;");
    asm("loc_4C83C6: call _sub_4F4CB0;");
    asm("loc_4C83CB: neg %eax;");
    asm("loc_4C83CD: sbb %eax,%eax;");
    asm("loc_4C83CF: neg %eax;");
    asm("loc_4C83D1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C83E0() // _sub_4C83E0
{
    __DEBUG_ASM(4C83E0);
    // chunk 0x4C83E0 _sub_4C83E0
    asm("loc_4C83E0: mov 4(%esp),%eax;");
    asm("loc_4C83E4: test %eax,%eax;");
    asm("loc_4C83E6: jne loc_4C83F3;");
    asm("loc_4C83E8: mov _data_674BC8,%ecx;");
    asm("loc_4C83EE: jmp _sub_4F4CB0;");
    asm("loc_4C83F3: xor %eax,%eax;");
    asm("loc_4C83F5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8400() // _sub_4C8400
{
    __DEBUG_ASM(4C8400);
    // chunk 0x4C8400 _sub_4C8400
    asm("loc_4C8400: mov %ecx,%edx;");
    asm("loc_4C8402: xor %ecx,%ecx;");
    asm("loc_4C8404: push %esi;");
    asm("loc_4C8405: mov 8(%esp),%esi;");
    asm("loc_4C8409: cmp %ecx,%esi;");
    asm("loc_4C840B: mov %ecx,8(%edx);");
    asm("loc_4C840E: mov %cl,0xC(%edx);");
    asm("loc_4C8411: movl $_off_5D6E30,(%edx);");
    asm("loc_4C8417: mov %ecx,4(%edx);");
    asm("loc_4C841A: jne loc_4C8424;");
    asm("loc_4C841C: mov %ecx,8(%edx);");
    asm("loc_4C841F: mov %cl,0xC(%edx);");
    asm("loc_4C8422: jmp loc_4C845F;");
    asm("loc_4C8424: push %ebx;");
    asm("loc_4C8425: push %ebp;");
    asm("loc_4C8426: or $0xFFFFFFFF,%ecx;");
    asm("loc_4C8429: xor %eax,%eax;");
    asm("loc_4C842B: push %edi;");
    asm("loc_4C842C: mov %esi,%edi;");
    asm("loc_4C842E: repne scas (%edi),%al;");
    asm("loc_4C8430: not %ecx;");
    asm("loc_4C8432: dec %ecx;");
    asm("loc_4C8433: mov %ecx,%eax;");
    asm("loc_4C8435: cmp $0x20,%eax;");
    asm("loc_4C8438: lea 0xC(%edx),%ebp;");
    asm("loc_4C843B: jb loc_4C8442;");
    asm("loc_4C843D: mov $0x1F,%eax;");
    asm("loc_4C8442: mov %eax,%ecx;");
    asm("loc_4C8444: mov %ecx,%ebx;");
    asm("loc_4C8446: shr $2,%ecx;");
    asm("loc_4C8449: mov %ebp,%edi;");
    asm("loc_4C844B: rep movsl (%esi),(%edi);");
    asm("loc_4C844D: mov %ebx,%ecx;");
    asm("loc_4C844F: and $3,%ecx;");
    asm("loc_4C8452: rep movsb (%esi),(%edi);");
    asm("loc_4C8454: xor %ecx,%ecx;");
    asm("loc_4C8456: pop %edi;");
    asm("loc_4C8457: mov %cl,(%eax,%ebp);");
    asm("loc_4C845A: pop %ebp;");
    asm("loc_4C845B: mov %eax,8(%edx);");
    asm("loc_4C845E: pop %ebx;");
    asm("loc_4C845F: mov _data_673514,%eax;");
    asm("loc_4C8464: cmp %ecx,%eax;");
    asm("loc_4C8466: pop %esi;");
    asm("loc_4C8467: je loc_4C847D;");
    asm("loc_4C8469: mov %edx,4(%eax);");
    asm("loc_4C846C: mov %edx,_data_673514;");
    asm("loc_4C8472: movl $_off_5D6E44,(%edx);");
    asm("loc_4C8478: mov %edx,%eax;");
    asm("loc_4C847A: ret $4;");
    asm("loc_4C847D: mov %edx,_data_673510;");
    asm("loc_4C8483: mov %edx,_data_673514;");
    asm("loc_4C8489: movl $_off_5D6E44,(%edx);");
    asm("loc_4C848F: mov %edx,%eax;");
    asm("loc_4C8491: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C84A0() // _sub_4C84A0
{
    __DEBUG_ASM(4C84A0);
    // chunk 0x4C84A0 _sub_4C84A0
    asm("loc_4C84A0: push $0xFFFFFFFF;");
    asm("loc_4C84A2: push $_sub_5BD822;");
    asm("loc_4C84A7: mov %fs:0,%eax;");
    asm("loc_4C84AD: push %eax;");
    asm("loc_4C84AE: mov %esp,%fs:0;");
    asm("loc_4C84B5: sub $8,%esp;");
    asm("loc_4C84B8: push %ebx;");
    asm("loc_4C84B9: push %esi;");
    asm("loc_4C84BA: push $0x74;");
    asm("loc_4C84BC: call _sub_5B7E84;");
    asm("loc_4C84C1: mov %eax,%esi;");
    asm("loc_4C84C3: add $4,%esp;");
    asm("loc_4C84C6: mov %esi,8(%esp);");
    asm("loc_4C84CA: xor %ebx,%ebx;");
    asm("loc_4C84CC: cmp %ebx,%esi;");
    asm("loc_4C84CE: mov %ebx,0x18(%esp);");
    asm("loc_4C84D2: je loc_4C8611;");
    asm("loc_4C84D8: push %ebp;");
    asm("loc_4C84D9: lea 0x28(%esi),%ebp;");
    asm("loc_4C84DC: mov %ebp,%ecx;");
    asm("loc_4C84DE: mov %ebx,4(%esi);");
    asm("loc_4C84E1: mov %bl,8(%esi);");
    asm("loc_4C84E4: push %edi;");
    asm("loc_4C84E5: mov %ecx,0x14(%esp);");
    asm("loc_4C84E9: mov %ebx,(%ecx);");
    asm("loc_4C84EB: mov %ebx,4(%ecx);");
    asm("loc_4C84EE: push %ebx;");
    asm("loc_4C84EF: movb $1,0x24(%esp);");
    asm("loc_4C84F4: calll *_import_5C645C;");
    asm("loc_4C84FA: movl $_off_5D6EAC,(%esi);");
    asm("loc_4C8500: mov %ebx,0x34(%esi);");
    asm("loc_4C8503: cmp %ebx,(%ebp);");
    asm("loc_4C8506: movb $2,0x20(%esp);");
    asm("loc_4C850B: je loc_4C8516;");
    asm("loc_4C850D: push %ebx;");
    asm("loc_4C850E: mov %ebp,%ecx;");
    asm("loc_4C8510: calll *_import_5C62A8;");
    asm("loc_4C8516: mov %ebx,0x30(%esi);");
    asm("loc_4C8519: lea 0x4C(%esi),%edi;");
    asm("loc_4C851C: mov %edi,%ecx;");
    asm("loc_4C851E: movb $3,0x20(%esp);");
    asm("loc_4C8523: call _sub_420D40;");
    asm("loc_4C8528: mov $0x3F800000,%eax;");
    asm("loc_4C852D: mov %eax,0x20(%edi);");
    asm("loc_4C8530: mov %eax,0x1C(%edi);");
    asm("loc_4C8533: mov %eax,0x18(%edi);");
    asm("loc_4C8536: mov %eax,0x14(%edi);");
    asm("loc_4C8539: mov %eax,0x24(%edi);");
    asm("loc_4C853C: movl $_off_5D2EFC,(%edi);");
    asm("loc_4C8542: movl $0xFFFFFFFF,0x10(%edi);");
    asm("loc_4C8549: push $_data_5D6E24;");
    asm("loc_4C854E: lea 8(%esi),%eax;");
    asm("loc_4C8551: push $0x20;");
    asm("loc_4C8553: push %eax;");
    asm("loc_4C8554: movb $4,0x2C(%esp);");
    asm("loc_4C8559: movl $_off_5D6E7C,(%esi);");
    asm("loc_4C855F: call _sub_417C50;");
    asm("loc_4C8564: mov %eax,4(%esi);");
    asm("loc_4C8567: mov %bl,0x38(%esi);");
    asm("loc_4C856A: mov (%ebp),%eax;");
    asm("loc_4C856D: add $0xC,%esp;");
    asm("loc_4C8570: cmp %ebx,%eax;");
    asm("loc_4C8572: je loc_4C857D;");
    asm("loc_4C8574: push %ebx;");
    asm("loc_4C8575: mov %ebp,%ecx;");
    asm("loc_4C8577: calll *_import_5C62A8;");
    asm("loc_4C857D: push $1;");
    asm("loc_4C857F: push %ebx;");
    asm("loc_4C8580: push $_data_5D6E54;");
    asm("loc_4C8585: mov %edi,%ecx;");
    asm("loc_4C8587: movl $0x3E4CCCCD,0x44(%esi);");
    asm("loc_4C858E: movl $0x43480000,0x40(%esi);");
    asm("loc_4C8595: movl $0x42200000,0x3C(%esi);");
    asm("loc_4C859C: mov %bl,0x48(%esi);");
    asm("loc_4C859F: call _sub_59EC80;");
    asm("loc_4C85A4: mov 0x28(%esp),%edi;");
    asm("loc_4C85A8: mov %edi,%ecx;");
    asm("loc_4C85AA: calll *_import_5C669C;");
    asm("loc_4C85B0: test %al,%al;");
    asm("loc_4C85B2: je loc_4C85FA;");
    asm("loc_4C85B4: push $_data_5D6E4C;");
    asm("loc_4C85B9: mov %edi,%ecx;");
    asm("loc_4C85BB: calll *_import_5C6CF4;");
    asm("loc_4C85C1: test %al,%al;");
    asm("loc_4C85C3: mov %edi,%ecx;");
    asm("loc_4C85C5: je loc_4C85D3;");
    asm("loc_4C85C7: push %ebx;");
    asm("loc_4C85C8: calll *_import_5C6CFC;");
    asm("loc_4C85CE: fstps 0x3C(%esi);");
    asm("loc_4C85D1: jmp loc_4C85EE;");
    asm("loc_4C85D3: push $_data_5C8B24;");
    asm("loc_4C85D8: calll *_import_5C6CF4;");
    asm("loc_4C85DE: test %al,%al;");
    asm("loc_4C85E0: je loc_4C85EE;");
    asm("loc_4C85E2: push %ebx;");
    asm("loc_4C85E3: mov %edi,%ecx;");
    asm("loc_4C85E5: calll *_import_5C6CFC;");
    asm("loc_4C85EB: fstps 0x40(%esi);");
    asm("loc_4C85EE: mov %edi,%ecx;");
    asm("loc_4C85F0: calll *_import_5C669C;");
    asm("loc_4C85F6: test %al,%al;");
    asm("loc_4C85F8: jne loc_4C85B4;");
    asm("loc_4C85FA: pop %edi;");
    asm("loc_4C85FB: pop %ebp;");
    asm("loc_4C85FC: mov %esi,%eax;");
    asm("loc_4C85FE: pop %esi;");
    asm("loc_4C85FF: pop %ebx;");
    asm("loc_4C8600: mov 8(%esp),%ecx;");
    asm("loc_4C8604: mov %ecx,%fs:0;");
    asm("loc_4C860B: add $0x14,%esp;");
    asm("loc_4C860E: ret $4;");
    asm("loc_4C8611: mov 0x10(%esp),%ecx;");
    asm("loc_4C8615: pop %esi;");
    asm("loc_4C8616: xor %eax,%eax;");
    asm("loc_4C8618: pop %ebx;");
    asm("loc_4C8619: mov %ecx,%fs:0;");
    asm("loc_4C8620: add $0x14,%esp;");
    asm("loc_4C8623: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8630() // _sub_4C8630
{
    __DEBUG_ASM(4C8630);
    // chunk 0x4C8630 _sub_4C8630
    asm("loc_4C8630: movl $_off_5D6EAC,(%ecx);");
    asm("loc_4C8636: mov 0x28(%ecx),%eax;");
    asm("loc_4C8639: add $0x28,%ecx;");
    asm("loc_4C863C: test %eax,%eax;");
    asm("loc_4C863E: je loc_4C8648;");
    asm("loc_4C8640: push $0;");
    asm("loc_4C8642: calll *_import_5C62A8;");
    asm("loc_4C8648: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8650() // _sub_4C8650
{
    __DEBUG_ASM(4C8650);
    // chunk 0x4C8650 _sub_4C8650
    asm("loc_4C8650: push %esi;");
    asm("loc_4C8651: mov %ecx,%esi;");
    asm("loc_4C8653: call _sub_4C8630;");
    asm("loc_4C8658: testb $1,8(%esp);");
    asm("loc_4C865D: je loc_4C8668;");
    asm("loc_4C865F: push %esi;");
    asm("loc_4C8660: call _sub_5B7E1D;");
    asm("loc_4C8665: add $4,%esp;");
    asm("loc_4C8668: mov %esi,%eax;");
    asm("loc_4C866A: pop %esi;");
    asm("loc_4C866B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8670() // _sub_4C8670
{
    __DEBUG_ASM(4C8670);
    // chunk 0x4C8670 _sub_4C8670
    asm("loc_4C8670: mov 0x38(%ecx),%al;");
    asm("loc_4C8673: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8680() // _sub_4C8680
{
    __DEBUG_ASM(4C8680);
    // chunk 0x4C8680 _sub_4C8680
    asm("loc_4C8680: sub $0x90,%esp;");
    asm("loc_4C8686: push %ebx;");
    asm("loc_4C8687: push %ebp;");
    asm("loc_4C8688: push %esi;");
    asm("loc_4C8689: mov %ecx,%ebp;");
    asm("loc_4C868B: mov $1,%bl;");
    asm("loc_4C868D: call _sub_54BAF0;");
    asm("loc_4C8692: test %eax,%eax;");
    asm("loc_4C8694: je loc_4C86DC;");
    asm("loc_4C8696: add $0xC,%eax;");
    asm("loc_4C8699: test %eax,%eax;");
    asm("loc_4C869B: je loc_4C86DC;");
    asm("loc_4C869D: mov 4(%eax),%esi;");
    asm("loc_4C86A0: test %esi,%esi;");
    asm("loc_4C86A2: je loc_4C86DC;");
    asm("loc_4C86A4: mov 0x4C(%esi),%eax;");
    asm("loc_4C86A7: and $0x503,%eax;");
    asm("loc_4C86AC: cmp $0x503,%eax;");
    asm("loc_4C86B1: jne loc_4C86DC;");
    asm("loc_4C86B3: mov %esi,%ecx;");
    asm("loc_4C86B5: calll *_import_5C62E8;");
    asm("loc_4C86BB: test %eax,%eax;");
    asm("loc_4C86BD: je loc_4C86C5;");
    asm("loc_4C86BF: mov 0x168(%eax),%bl;");
    asm("loc_4C86C5: mov %esi,%ecx;");
    asm("loc_4C86C7: calll *_import_5C64A0;");
    asm("loc_4C86CD: test %al,%al;");
    asm("loc_4C86CF: jne loc_4C86DA;");
    asm("loc_4C86D1: call _sub_41A3E0;");
    asm("loc_4C86D6: test %al,%al;");
    asm("loc_4C86D8: je loc_4C86DC;");
    asm("loc_4C86DA: xor %bl,%bl;");
    asm("loc_4C86DC: flds _data_673550;");
    asm("loc_4C86E2: fcomps _data_612270;");
    asm("loc_4C86E8: fnstsw %ax;");
    asm("loc_4C86EA: test $1,%ah;");
    asm("loc_4C86ED: je loc_4C870F;");
    asm("loc_4C86EF: call _sub_45A470;");
    asm("loc_4C86F4: test %al,%al;");
    asm("loc_4C86F6: jne loc_4C8AFD;");
    asm("loc_4C86FC: mov _data_67354C,%dl;");
    asm("loc_4C8702: test %dl,%dl;");
    asm("loc_4C8704: sete %al;");
    asm("loc_4C8707: test %al,%al;");
    asm("loc_4C8709: jne loc_4C8AFD;");
    asm("loc_4C870F: mov _data_674AA0,%eax;");
    asm("loc_4C8714: mov 0x5B9(%eax),%cl;");
    asm("loc_4C871A: test %cl,%cl;");
    asm("loc_4C871C: jne loc_4C8AFD;");
    asm("loc_4C8722: mov 0x5BA(%eax),%cl;");
    asm("loc_4C8728: test %cl,%cl;");
    asm("loc_4C872A: jne loc_4C8AFD;");
    asm("loc_4C8730: call _sub_42D740;");
    asm("loc_4C8735: test %al,%al;");
    asm("loc_4C8737: jne loc_4C8AFD;");
    asm("loc_4C873D: test %bl,%bl;");
    asm("loc_4C873F: je loc_4C8AFD;");
    asm("loc_4C8745: call _sub_45A470;");
    asm("loc_4C874A: test %al,%al;");
    asm("loc_4C874C: jne loc_4C875D;");
    asm("loc_4C874E: mov _data_67354C,%dl;");
    asm("loc_4C8754: test %dl,%dl;");
    asm("loc_4C8756: sete %al;");
    asm("loc_4C8759: test %al,%al;");
    asm("loc_4C875B: je loc_4C8770;");
    asm("loc_4C875D: flds _data_673550;");
    asm("loc_4C8763: fcomps _data_612270;");
    asm("loc_4C8769: fnstsw %ax;");
    asm("loc_4C876B: test $1,%ah;");
    asm("loc_4C876E: jne loc_4C8794;");
    asm("loc_4C8770: push $0x17;");
    asm("loc_4C8772: call _sub_5792B0;");
    asm("loc_4C8777: add $4,%esp;");
    asm("loc_4C877A: test %eax,%eax;");
    asm("loc_4C877C: je loc_4C8794;");
    asm("loc_4C877E: mov _data_610854,%ecx;");
    asm("loc_4C8784: sub _data_616844,%ecx;");
    asm("loc_4C878A: mov %ecx,0x10(%esp);");
    asm("loc_4C878E: fildl 0x10(%esp);");
    asm("loc_4C8792: jmp loc_4C879A;");
    asm("loc_4C8794: fildl _data_616844;");
    asm("loc_4C879A: mov _data_616840,%edx;");
    asm("loc_4C87A0: mov _data_610850,%eax;");
    asm("loc_4C87A5: mov %edx,0x14(%esp);");
    asm("loc_4C87A9: cltd;");
    asm("loc_4C87AA: sub %edx,%eax;");
    asm("loc_4C87AC: sar $1,%eax;");
    asm("loc_4C87AE: mov %eax,0x10(%esp);");
    asm("loc_4C87B2: mov _data_610854,%eax;");
    asm("loc_4C87B7: fildl 0x10(%esp);");
    asm("loc_4C87BB: cltd;");
    asm("loc_4C87BC: sub %edx,%eax;");
    asm("loc_4C87BE: sar $1,%eax;");
    asm("loc_4C87C0: mov %eax,0x10(%esp);");
    asm("loc_4C87C4: movl $0,0x20(%esp);");
    asm("loc_4C87CC: fstps 0x18(%esp);");
    asm("loc_4C87D0: push $0;");
    asm("loc_4C87D2: fildl 0x14(%esp);");
    asm("loc_4C87D6: fstps 0x20(%esp);");
    asm("loc_4C87DA: flds 0x40(%ebp);");
    asm("loc_4C87DD: fimull _data_610850;");
    asm("loc_4C87E3: fmuls _data_5C8D30;");
    asm("loc_4C87E9: fstps 0x10(%esp);");
    asm("loc_4C87ED: call _sub_5B7EC0;");
    asm("loc_4C87F2: mov %eax,0x14(%esp);");
    asm("loc_4C87F6: fildl 0x14(%esp);");
    asm("loc_4C87FA: sub $8,%esp;");
    asm("loc_4C87FD: lea 0x9C(%esp),%ecx;");
    asm("loc_4C8804: fstps 4(%esp);");
    asm("loc_4C8808: fildl 0x20(%esp);");
    asm("loc_4C880C: fstps (%esp);");
    asm("loc_4C880F: call _sub_422B80;");
    asm("loc_4C8814: lea 0x18(%esp),%ecx;");
    asm("loc_4C8818: push %ecx;");
    asm("loc_4C8819: push %eax;");
    asm("loc_4C881A: lea 0x38(%esp),%edx;");
    asm("loc_4C881E: push %edx;");
    asm("loc_4C881F: call _sub_423B60;");
    asm("loc_4C8824: flds 0x18(%esp);");
    asm("loc_4C8828: add $8,%esp;");
    asm("loc_4C882B: fchs;");
    asm("loc_4C882D: lea 0x34(%esp),%eax;");
    asm("loc_4C8831: fstps (%esp);");
    asm("loc_4C8834: push %eax;");
    asm("loc_4C8835: lea 0x2C(%esp),%ecx;");
    asm("loc_4C8839: push %ecx;");
    asm("loc_4C883A: call _sub_4C8B10;");
    asm("loc_4C883F: flds 0x3C(%ebp);");
    asm("loc_4C8842: fdivs 0x40(%ebp);");
    asm("loc_4C8845: add $0xC,%esp;");
    asm("loc_4C8848: lea 0x24(%esp),%ecx;");
    asm("loc_4C884C: fstps 0xC(%esp);");
    asm("loc_4C8850: call _sub_410190;");
    asm("loc_4C8855: fsts 0x14(%esp);");
    asm("loc_4C8859: fcomps _data_5C75DC;");
    asm("loc_4C885F: fnstsw %ax;");
    asm("loc_4C8861: test $0x41,%ah;");
    asm("loc_4C8864: jne loc_4C886E;");
    asm("loc_4C8866: movl $0x3F800000,0x14(%esp);");
    asm("loc_4C886E: flds 0x14(%esp);");
    asm("loc_4C8872: fcomps 0xC(%esp);");
    asm("loc_4C8876: fnstsw %ax;");
    asm("loc_4C8878: test $0x41,%ah;");
    asm("loc_4C887B: jp loc_4C8885;");
    asm("loc_4C887D: movl $0,0x14(%esp);");
    asm("loc_4C8885: mov _data_616840,%esi;");
    asm("loc_4C888B: call _sub_45A470;");
    asm("loc_4C8890: test %al,%al;");
    asm("loc_4C8892: jne loc_4C88A3;");
    asm("loc_4C8894: mov _data_67354C,%dl;");
    asm("loc_4C889A: test %dl,%dl;");
    asm("loc_4C889C: sete %al;");
    asm("loc_4C889F: test %al,%al;");
    asm("loc_4C88A1: je loc_4C88B6;");
    asm("loc_4C88A3: flds _data_673550;");
    asm("loc_4C88A9: fcomps _data_612270;");
    asm("loc_4C88AF: fnstsw %ax;");
    asm("loc_4C88B1: test $1,%ah;");
    asm("loc_4C88B4: jne loc_4C88DA;");
    asm("loc_4C88B6: push $0x17;");
    asm("loc_4C88B8: call _sub_5792B0;");
    asm("loc_4C88BD: add $4,%esp;");
    asm("loc_4C88C0: test %eax,%eax;");
    asm("loc_4C88C2: je loc_4C88DA;");
    asm("loc_4C88C4: mov _data_610854,%edx;");
    asm("loc_4C88CA: sub _data_616844,%edx;");
    asm("loc_4C88D0: mov %edx,0xC(%esp);");
    asm("loc_4C88D4: fildl 0xC(%esp);");
    asm("loc_4C88D8: jmp loc_4C88E0;");
    asm("loc_4C88DA: fildl _data_616844;");
    asm("loc_4C88E0: mov _data_610854,%eax;");
    asm("loc_4C88E5: cltd;");
    asm("loc_4C88E6: sub %edx,%eax;");
    asm("loc_4C88E8: push %edi;");
    asm("loc_4C88E9: mov %eax,%edi;");
    asm("loc_4C88EB: sar $1,%edi;");
    asm("loc_4C88ED: call _sub_5B7EC0;");
    asm("loc_4C88F2: sub %eax,%edi;");
    asm("loc_4C88F4: mov _data_610850,%eax;");
    asm("loc_4C88F9: cltd;");
    asm("loc_4C88FA: sub %edx,%eax;");
    asm("loc_4C88FC: mov %edi,0x10(%esp);");
    asm("loc_4C8900: sar $1,%eax;");
    asm("loc_4C8902: fildl 0x10(%esp);");
    asm("loc_4C8906: sub $8,%esp;");
    asm("loc_4C8909: sub %eax,%esi;");
    asm("loc_4C890B: mov %esi,0x18(%esp);");
    asm("loc_4C890F: fstps 4(%esp);");
    asm("loc_4C8913: fildl 0x18(%esp);");
    asm("loc_4C8917: fstps (%esp);");
    asm("loc_4C891A: call _sub_53EB10;");
    asm("loc_4C891F: fchs;");
    asm("loc_4C8921: add $8,%esp;");
    asm("loc_4C8924: fstps 0x14(%esp);");
    asm("loc_4C8928: call _sub_59E500;");
    asm("loc_4C892D: movzbl _data_679BB4,%eax;");
    asm("loc_4C8934: mov %eax,0x10(%esp);");
    asm("loc_4C8938: push $0;");
    asm("loc_4C893A: fildl 0x14(%esp);");
    asm("loc_4C893E: fmuls _data_5C7F68;");
    asm("loc_4C8944: fstps 0x60(%ebp);");
    asm("loc_4C8947: movzbl _data_679BB4+1,%ecx;");
    asm("loc_4C894E: mov %ecx,0x14(%esp);");
    asm("loc_4C8952: lea 0x74(%esp),%ecx;");
    asm("loc_4C8956: fildl 0x14(%esp);");
    asm("loc_4C895A: fmuls _data_5C7F68;");
    asm("loc_4C8960: fstps 0x64(%ebp);");
    asm("loc_4C8963: movzbl _data_679BB4+2,%edx;");
    asm("loc_4C896A: mov %edx,0x14(%esp);");
    asm("loc_4C896E: fildl 0x14(%esp);");
    asm("loc_4C8972: fmuls _data_5C7F68;");
    asm("loc_4C8978: fstps 0x68(%ebp);");
    asm("loc_4C897B: movzbl _data_679BB4+3,%eax;");
    asm("loc_4C8982: mov %eax,0x14(%esp);");
    asm("loc_4C8986: fildl 0x14(%esp);");
    asm("loc_4C898A: fmuls _data_5C7F68;");
    asm("loc_4C8990: fstps 0x70(%ebp);");
    asm("loc_4C8993: call _sub_4C8B40;");
    asm("loc_4C8998: push $0;");
    asm("loc_4C899A: lea 0x74(%esp),%ecx;");
    asm("loc_4C899E: call _sub_4C8B80;");
    asm("loc_4C89A3: flds 0x14(%esp);");
    asm("loc_4C89A7: fmuls _data_5D6EE0;");
    asm("loc_4C89AD: push %ecx;");
    asm("loc_4C89AE: lea 0x74(%esp),%ecx;");
    asm("loc_4C89B2: fstps (%esp);");
    asm("loc_4C89B5: call _sub_4C8BC0;");
    asm("loc_4C89BA: flds _data_5D6EDC;");
    asm("loc_4C89C0: movl $0x3E19999A,0x14(%esp);");
    asm("loc_4C89C8: fcomps 0x18(%esp);");
    asm("loc_4C89CC: fnstsw %ax;");
    asm("loc_4C89CE: test $5,%ah;");
    asm("loc_4C89D1: jp loc_4C8AF7;");
    asm("loc_4C89D7: flds 0x14(%esp);");
    asm("loc_4C89DB: mov _data_673548,%eax;");
    asm("loc_4C89E0: test %eax,%eax;");
    asm("loc_4C89E2: fmuls _data_5D6ED8;");
    asm("loc_4C89E8: movl $0,0x1C(%esp);");
    asm("loc_4C89F0: movl $0,0x24(%esp);");
    asm("loc_4C89F8: fstps 0x20(%esp);");
    asm("loc_4C89FC: jne loc_4C8A08;");
    asm("loc_4C89FE: call _sub_5B73E0;");
    asm("loc_4C8A03: mov %eax,_data_673548;");
    asm("loc_4C8A08: mov (%eax),%ecx;");
    asm("loc_4C8A0A: lea 0x1C(%esp),%edx;");
    asm("loc_4C8A0E: push %edx;");
    asm("loc_4C8A0F: lea 0x74(%esp),%edx;");
    asm("loc_4C8A13: push %edx;");
    asm("loc_4C8A14: lea 0x30(%esp),%edx;");
    asm("loc_4C8A18: push %edx;");
    asm("loc_4C8A19: push %eax;");
    asm("loc_4C8A1A: calll *0x2C(%ecx);");
    asm("loc_4C8A1D: mov 0x30(%esp),%ecx;");
    asm("loc_4C8A21: mov 0x28(%esp),%eax;");
    asm("loc_4C8A25: mov 0x2C(%esp),%edx;");
    asm("loc_4C8A29: mov %ecx,0x3C(%esp);");
    asm("loc_4C8A2D: mov $9,%ecx;");
    asm("loc_4C8A32: lea 0x70(%esp),%esi;");
    asm("loc_4C8A36: lea 0x40(%esp),%edi;");
    asm("loc_4C8A3A: rep movsl (%esi),(%edi);");
    asm("loc_4C8A3C: mov %eax,0x64(%esp);");
    asm("loc_4C8A40: mov _data_673548,%eax;");
    asm("loc_4C8A45: test %eax,%eax;");
    asm("loc_4C8A47: movl $0xBF800000,0x3C(%esp);");
    asm("loc_4C8A4F: mov %edx,0x68(%esp);");
    asm("loc_4C8A53: mov 0x3C(%esp),%edx;");
    asm("loc_4C8A57: mov %edx,0x6C(%esp);");
    asm("loc_4C8A5B: jne loc_4C8A67;");
    asm("loc_4C8A5D: call _sub_5B73E0;");
    asm("loc_4C8A62: mov %eax,_data_673548;");
    asm("loc_4C8A67: flds 0x14(%esp);");
    asm("loc_4C8A6B: mov (%eax),%ecx;");
    asm("loc_4C8A6D: fmuls _data_5C75E0;");
    asm("loc_4C8A73: push %ecx;");
    asm("loc_4C8A74: lea 0x44(%esp),%edx;");
    asm("loc_4C8A78: fadds _data_5D3EE0;");
    asm("loc_4C8A7E: fstps (%esp);");
    asm("loc_4C8A81: push %edx;");
    asm("loc_4C8A82: lea 0x48(%esp),%edx;");
    asm("loc_4C8A86: push %edx;");
    asm("loc_4C8A87: push %eax;");
    asm("loc_4C8A88: calll *0x10(%ecx);");
    asm("loc_4C8A8B: mov _import_5C6D90,%eax;");
    asm("loc_4C8A90: mov (%eax),%eax;");
    asm("loc_4C8A92: mov (%eax),%ecx;");
    asm("loc_4C8A94: lea 0x40(%esp),%edx;");
    asm("loc_4C8A98: push %edx;");
    asm("loc_4C8A99: mov 0x50(%ebp),%edx;");
    asm("loc_4C8A9C: push %edx;");
    asm("loc_4C8A9D: push %eax;");
    asm("loc_4C8A9E: calll *0x9C(%ecx);");
    asm("loc_4C8AA4: mov _import_5C6D90,%eax;");
    asm("loc_4C8AA9: mov 0x50(%ebp),%edx;");
    asm("loc_4C8AAC: mov (%eax),%eax;");
    asm("loc_4C8AAE: mov (%eax),%ecx;");
    asm("loc_4C8AB0: push $0;");
    asm("loc_4C8AB2: push $0;");
    asm("loc_4C8AB4: push %edx;");
    asm("loc_4C8AB5: push %eax;");
    asm("loc_4C8AB6: calll *0x6C(%ecx);");
    asm("loc_4C8AB9: mov 0x50(%ebp),%edx;");
    asm("loc_4C8ABC: mov _import_5C6DF0,%eax;");
    asm("loc_4C8AC1: mov (%eax),%eax;");
    asm("loc_4C8AC3: mov (%eax),%ecx;");
    asm("loc_4C8AC5: push $0;");
    asm("loc_4C8AC7: push $0;");
    asm("loc_4C8AC9: push $0;");
    asm("loc_4C8ACB: push $0x3F800000;");
    asm("loc_4C8AD0: push %edx;");
    asm("loc_4C8AD1: push $_data_67DBF8;");
    asm("loc_4C8AD6: push %eax;");
    asm("loc_4C8AD7: calll *0x1C(%ecx);");
    asm("loc_4C8ADA: flds 0x14(%esp);");
    asm("loc_4C8ADE: fadds _data_5D6EDC;");
    asm("loc_4C8AE4: fsts 0x14(%esp);");
    asm("loc_4C8AE8: fcomps 0x18(%esp);");
    asm("loc_4C8AEC: fnstsw %ax;");
    asm("loc_4C8AEE: test $5,%ah;");
    asm("loc_4C8AF1: jnp loc_4C89D7;");
    asm("loc_4C8AF7: call _sub_59E5A0;");
    asm("loc_4C8AFC: pop %edi;");
    asm("loc_4C8AFD: pop %esi;");
    asm("loc_4C8AFE: pop %ebp;");
    asm("loc_4C8AFF: pop %ebx;");
    asm("loc_4C8B00: add $0x90,%esp;");
    asm("loc_4C8B06: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8B10() // _sub_4C8B10
{
    __DEBUG_ASM(4C8B10);
    // chunk 0x4C8B10 _sub_4C8B10
    asm("loc_4C8B10: flds _data_5C75DC;");
    asm("loc_4C8B16: mov 8(%esp),%eax;");
    asm("loc_4C8B1A: fdivs 0xC(%esp);");
    asm("loc_4C8B1E: fsts 0xC(%esp);");
    asm("loc_4C8B22: fmuls 8(%eax);");
    asm("loc_4C8B25: flds 0xC(%esp);");
    asm("loc_4C8B29: fmuls 4(%eax);");
    asm("loc_4C8B2C: flds 0xC(%esp);");
    asm("loc_4C8B30: fmuls (%eax);");
    asm("loc_4C8B32: mov 4(%esp),%eax;");
    asm("loc_4C8B36: fstps (%eax);");
    asm("loc_4C8B38: fstps 4(%eax);");
    asm("loc_4C8B3B: fstps 8(%eax);");
    asm("loc_4C8B3E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8B40() // _sub_4C8B40
{
    __DEBUG_ASM(4C8B40);
    // chunk 0x4C8B40 _sub_4C8B40
    asm("loc_4C8B40: flds 4(%esp);");
    asm("loc_4C8B44: xor %eax,%eax;");
    asm("loc_4C8B46: fcos;");
    asm("loc_4C8B48: mov %eax,4(%ecx);");
    asm("loc_4C8B4B: mov %eax,0xC(%ecx);");
    asm("loc_4C8B4E: movl $0x3F800000,0x10(%ecx);");
    asm("loc_4C8B55: mov %eax,0x14(%ecx);");
    asm("loc_4C8B58: mov %eax,0x1C(%ecx);");
    asm("loc_4C8B5B: flds 4(%esp);");
    asm("loc_4C8B5F: fsin;");
    asm("loc_4C8B61: fld %st(1);");
    asm("loc_4C8B63: fstps (%ecx);");
    asm("loc_4C8B65: fsts 8(%ecx);");
    asm("loc_4C8B68: fchs;");
    asm("loc_4C8B6A: fstps 0x18(%ecx);");
    asm("loc_4C8B6D: fstps 0x20(%ecx);");
    asm("loc_4C8B70: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8B80() // _sub_4C8B80
{
    __DEBUG_ASM(4C8B80);
    // chunk 0x4C8B80 _sub_4C8B80
    asm("loc_4C8B80: flds 4(%esp);");
    asm("loc_4C8B84: lea 0x18(%ecx),%eax;");
    asm("loc_4C8B87: fcos;");
    asm("loc_4C8B89: mov $3,%ecx;");
    asm("loc_4C8B8E: flds 4(%esp);");
    asm("loc_4C8B92: fsin;");
    asm("loc_4C8B94: flds -0xC(%eax);");
    asm("loc_4C8B97: add $4,%eax;");
    asm("loc_4C8B9A: dec %ecx;");
    asm("loc_4C8B9B: fld %st(0);");
    asm("loc_4C8B9D: fmul %st(3),%st;");
    asm("loc_4C8B9F: fld %st(2);");
    asm("loc_4C8BA1: fmuls -4(%eax);");
    asm("loc_4C8BA4: fsubrp;");
    asm("loc_4C8BA6: fstps -0x10(%eax);");
    asm("loc_4C8BA9: fmul %st(1),%st;");
    asm("loc_4C8BAB: fld %st(2);");
    asm("loc_4C8BAD: fmuls -4(%eax);");
    asm("loc_4C8BB0: faddp;");
    asm("loc_4C8BB2: fstps -4(%eax);");
    asm("loc_4C8BB5: jne loc_4C8B94;");
    asm("loc_4C8BB7: fstp %st(0);");
    asm("loc_4C8BB9: fstp %st(0);");
    asm("loc_4C8BBB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8BC0() // _sub_4C8BC0
{
    __DEBUG_ASM(4C8BC0);
    // chunk 0x4C8BC0 _sub_4C8BC0
    asm("loc_4C8BC0: flds 4(%esp);");
    asm("loc_4C8BC4: lea 0xC(%ecx),%eax;");
    asm("loc_4C8BC7: fcos;");
    asm("loc_4C8BC9: mov $3,%ecx;");
    asm("loc_4C8BCE: flds 4(%esp);");
    asm("loc_4C8BD2: fsin;");
    asm("loc_4C8BD4: flds -0xC(%eax);");
    asm("loc_4C8BD7: add $4,%eax;");
    asm("loc_4C8BDA: dec %ecx;");
    asm("loc_4C8BDB: fld %st(0);");
    asm("loc_4C8BDD: fmul %st(3),%st;");
    asm("loc_4C8BDF: fld %st(2);");
    asm("loc_4C8BE1: fmuls -4(%eax);");
    asm("loc_4C8BE4: fsubrp;");
    asm("loc_4C8BE6: fstps -0x10(%eax);");
    asm("loc_4C8BE9: fld %st(2);");
    asm("loc_4C8BEB: fmuls -4(%eax);");
    asm("loc_4C8BEE: fxch;");
    asm("loc_4C8BF0: fmul %st(2),%st;");
    asm("loc_4C8BF2: faddp;");
    asm("loc_4C8BF4: fstps -4(%eax);");
    asm("loc_4C8BF7: jne loc_4C8BD4;");
    asm("loc_4C8BF9: fstp %st(0);");
    asm("loc_4C8BFB: fstp %st(0);");
    asm("loc_4C8BFD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8C00() // _sub_4C8C00
{
    __DEBUG_ASM(4C8C00);
    // chunk 0x4C8C00 _sub_4C8C00
    asm("loc_4C8C00: push %esi;");
    asm("loc_4C8C01: mov %ecx,%esi;");
    asm("loc_4C8C03: call _sub_4C8C20;");
    asm("loc_4C8C08: testb $1,8(%esp);");
    asm("loc_4C8C0D: je loc_4C8C18;");
    asm("loc_4C8C0F: push %esi;");
    asm("loc_4C8C10: call _sub_5B7E1D;");
    asm("loc_4C8C15: add $4,%esp;");
    asm("loc_4C8C18: mov %esi,%eax;");
    asm("loc_4C8C1A: pop %esi;");
    asm("loc_4C8C1B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8C20() // _sub_4C8C20
{
    __DEBUG_ASM(4C8C20);
    // chunk 0x4C8C20 _sub_4C8C20
    asm("loc_4C8C20: push $0xFFFFFFFF;");
    asm("loc_4C8C22: push $_sub_5BD843;");
    asm("loc_4C8C27: mov %fs:0,%eax;");
    asm("loc_4C8C2D: push %eax;");
    asm("loc_4C8C2E: mov %esp,%fs:0;");
    asm("loc_4C8C35: push %ecx;");
    asm("loc_4C8C36: push %esi;");
    asm("loc_4C8C37: mov %ecx,%esi;");
    asm("loc_4C8C39: mov %esi,4(%esp);");
    asm("loc_4C8C3D: movl $_off_5D6E7C,(%esi);");
    asm("loc_4C8C43: cmpl $0xFFFFFFFF,0x50(%esi);");
    asm("loc_4C8C47: movl $1,0x10(%esp);");
    asm("loc_4C8C4F: je loc_4C8C59;");
    asm("loc_4C8C51: lea 0x4C(%esi),%ecx;");
    asm("loc_4C8C54: call _sub_59EEE0;");
    asm("loc_4C8C59: lea 0x4C(%esi),%ecx;");
    asm("loc_4C8C5C: movb $0,0x10(%esp);");
    asm("loc_4C8C61: call _sub_59EF20;");
    asm("loc_4C8C66: lea 0x28(%esi),%ecx;");
    asm("loc_4C8C69: movl $_off_5D6EAC,(%esi);");
    asm("loc_4C8C6F: cmpl $0,(%ecx);");
    asm("loc_4C8C72: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4C8C7A: pop %esi;");
    asm("loc_4C8C7B: je loc_4C8C85;");
    asm("loc_4C8C7D: push $0;");
    asm("loc_4C8C7F: calll *_import_5C62A8;");
    asm("loc_4C8C85: mov 4(%esp),%ecx;");
    asm("loc_4C8C89: mov %ecx,%fs:0;");
    asm("loc_4C8C90: add $0x10,%esp;");
    asm("loc_4C8C93: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8CA0() // _sub_4C8CA0
{
    __DEBUG_ASM(4C8CA0);
    // chunk 0x4C8CA0 _sub_4C8CA0
    asm("loc_4C8CA0: mov %ecx,%edx;");
    asm("loc_4C8CA2: xor %ecx,%ecx;");
    asm("loc_4C8CA4: push %esi;");
    asm("loc_4C8CA5: mov 8(%esp),%esi;");
    asm("loc_4C8CA9: cmp %ecx,%esi;");
    asm("loc_4C8CAB: mov %ecx,8(%edx);");
    asm("loc_4C8CAE: mov %cl,0xC(%edx);");
    asm("loc_4C8CB1: movl $_off_5D6E30,(%edx);");
    asm("loc_4C8CB7: mov %ecx,4(%edx);");
    asm("loc_4C8CBA: jne loc_4C8CC4;");
    asm("loc_4C8CBC: mov %ecx,8(%edx);");
    asm("loc_4C8CBF: mov %cl,0xC(%edx);");
    asm("loc_4C8CC2: jmp loc_4C8CFF;");
    asm("loc_4C8CC4: push %ebx;");
    asm("loc_4C8CC5: push %ebp;");
    asm("loc_4C8CC6: or $0xFFFFFFFF,%ecx;");
    asm("loc_4C8CC9: xor %eax,%eax;");
    asm("loc_4C8CCB: push %edi;");
    asm("loc_4C8CCC: mov %esi,%edi;");
    asm("loc_4C8CCE: repne scas (%edi),%al;");
    asm("loc_4C8CD0: not %ecx;");
    asm("loc_4C8CD2: dec %ecx;");
    asm("loc_4C8CD3: mov %ecx,%eax;");
    asm("loc_4C8CD5: cmp $0x20,%eax;");
    asm("loc_4C8CD8: lea 0xC(%edx),%ebp;");
    asm("loc_4C8CDB: jb loc_4C8CE2;");
    asm("loc_4C8CDD: mov $0x1F,%eax;");
    asm("loc_4C8CE2: mov %eax,%ecx;");
    asm("loc_4C8CE4: mov %ecx,%ebx;");
    asm("loc_4C8CE6: shr $2,%ecx;");
    asm("loc_4C8CE9: mov %ebp,%edi;");
    asm("loc_4C8CEB: rep movsl (%esi),(%edi);");
    asm("loc_4C8CED: mov %ebx,%ecx;");
    asm("loc_4C8CEF: and $3,%ecx;");
    asm("loc_4C8CF2: rep movsb (%esi),(%edi);");
    asm("loc_4C8CF4: xor %ecx,%ecx;");
    asm("loc_4C8CF6: pop %edi;");
    asm("loc_4C8CF7: mov %cl,(%eax,%ebp);");
    asm("loc_4C8CFA: pop %ebp;");
    asm("loc_4C8CFB: mov %eax,8(%edx);");
    asm("loc_4C8CFE: pop %ebx;");
    asm("loc_4C8CFF: mov _data_673514,%eax;");
    asm("loc_4C8D04: cmp %ecx,%eax;");
    asm("loc_4C8D06: pop %esi;");
    asm("loc_4C8D07: je loc_4C8D1D;");
    asm("loc_4C8D09: mov %edx,4(%eax);");
    asm("loc_4C8D0C: mov %edx,_data_673514;");
    asm("loc_4C8D12: movl $_off_5D6EE8,(%edx);");
    asm("loc_4C8D18: mov %edx,%eax;");
    asm("loc_4C8D1A: ret $4;");
    asm("loc_4C8D1D: mov %edx,_data_673510;");
    asm("loc_4C8D23: mov %edx,_data_673514;");
    asm("loc_4C8D29: movl $_off_5D6EE8,(%edx);");
    asm("loc_4C8D2F: mov %edx,%eax;");
    asm("loc_4C8D31: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C8D40() // _sub_4C8D40
{
    __DEBUG_ASM(4C8D40);
    // chunk 0x4C8D40 _sub_4C8D40
    asm("loc_4C8D40: push $0xFFFFFFFF;");
    asm("loc_4C8D42: push $_sub_5BD884;");
    asm("loc_4C8D47: mov %fs:0,%eax;");
    asm("loc_4C8D4D: push %eax;");
    asm("loc_4C8D4E: mov %esp,%fs:0;");
    asm("loc_4C8D55: sub $0x20,%esp;");
    asm("loc_4C8D58: push %ebx;");
    asm("loc_4C8D59: push %esi;");
    asm("loc_4C8D5A: push $0x154;");
    asm("loc_4C8D5F: call _sub_5B7E84;");
    asm("loc_4C8D64: mov %eax,%esi;");
    asm("loc_4C8D66: add $4,%esp;");
    asm("loc_4C8D69: mov %esi,0xC(%esp);");
    asm("loc_4C8D6D: xor %ebx,%ebx;");
    asm("loc_4C8D6F: cmp %ebx,%esi;");
    asm("loc_4C8D71: mov %ebx,0x30(%esp);");
    asm("loc_4C8D75: je loc_4C9047;");
    asm("loc_4C8D7B: push %ebp;");
    asm("loc_4C8D7C: push %edi;");
    asm("loc_4C8D7D: mov %esi,%ecx;");
    asm("loc_4C8D7F: call _sub_4C9060;");
    asm("loc_4C8D84: lea 0xAC(%esi),%ecx;");
    asm("loc_4C8D8A: movb $1,0x38(%esp);");
    asm("loc_4C8D8F: call _sub_4B5150;");
    asm("loc_4C8D94: movl $_off_5D7024,(%esi);");
    asm("loc_4C8D9A: mov %bl,0xDC(%esi);");
    asm("loc_4C8DA0: mov %ebx,0xE0(%esi);");
    asm("loc_4C8DA6: movl $0x43340000,0xE4(%esi);");
    asm("loc_4C8DB0: movl $0x3F59999A,0xE8(%esi);");
    asm("loc_4C8DBA: movl $0x3F400000,0xEC(%esi);");
    asm("loc_4C8DC4: mov %bl,0xF0(%esi);");
    asm("loc_4C8DCA: lea 0xF4(%esi),%edi;");
    asm("loc_4C8DD0: lea 0x28(%edi),%ebp;");
    asm("loc_4C8DD3: push %ebx;");
    asm("loc_4C8DD4: mov %ebp,%ecx;");
    asm("loc_4C8DD6: movb $2,0x3C(%esp);");
    asm("loc_4C8DDB: mov %edi,0x14(%esp);");
    asm("loc_4C8DDF: mov %edi,0x1C(%esp);");
    asm("loc_4C8DE3: mov %ebx,4(%edi);");
    asm("loc_4C8DE6: mov %bl,8(%edi);");
    asm("loc_4C8DE9: call _sub_4C95B0;");
    asm("loc_4C8DEE: push %ebx;");
    asm("loc_4C8DEF: mov %ebp,%ecx;");
    asm("loc_4C8DF1: movb $3,0x3C(%esp);");
    asm("loc_4C8DF6: movl $_off_5D6EAC,(%edi);");
    asm("loc_4C8DFC: mov %ebx,0x34(%edi);");
    asm("loc_4C8DFF: calll *_import_5C645C;");
    asm("loc_4C8E05: mov %ebx,0x30(%edi);");
    asm("loc_4C8E08: lea 0x12C(%esi),%ebp;");
    asm("loc_4C8E0E: mov %ebx,(%ebp);");
    asm("loc_4C8E11: mov %bl,4(%ebp);");
    asm("loc_4C8E14: mov %edi,%eax;");
    asm("loc_4C8E16: push $_data_5D6E38;");
    asm("loc_4C8E1B: lea 0xF8(%esi),%ecx;");
    asm("loc_4C8E21: movb $4,0x3C(%esp);");
    asm("loc_4C8E26: movl $_off_5D6FAC,(%esi);");
    asm("loc_4C8E2C: movl $_off_5D6F78,(%eax);");
    asm("loc_4C8E32: call _sub_420750;");
    asm("loc_4C8E37: mov 0x40(%esp),%edi;");
    asm("loc_4C8E3B: lea 0x60(%esi),%eax;");
    asm("loc_4C8E3E: mov %ebx,%ecx;");
    asm("loc_4C8E40: mov %ecx,(%eax);");
    asm("loc_4C8E42: mov %ebx,%edx;");
    asm("loc_4C8E44: movl $0xC0A00000,0x20(%esp);");
    asm("loc_4C8E4C: mov 0x20(%esp),%ecx;");
    asm("loc_4C8E50: mov %edx,4(%eax);");
    asm("loc_4C8E53: mov %ecx,8(%eax);");
    asm("loc_4C8E56: mov %edi,%ecx;");
    asm("loc_4C8E58: mov %ebx,0x18(%esp);");
    asm("loc_4C8E5C: mov %ebx,0x1C(%esp);");
    asm("loc_4C8E60: mov %ebx,0x150(%esi);");
    asm("loc_4C8E66: calll *_import_5C669C;");
    asm("loc_4C8E6C: test %al,%al;");
    asm("loc_4C8E6E: je loc_4C902E;");
    asm("loc_4C8E74: push $_data_5D6F6C;");
    asm("loc_4C8E79: mov %edi,%ecx;");
    asm("loc_4C8E7B: calll *_import_5C6CF4;");
    asm("loc_4C8E81: test %al,%al;");
    asm("loc_4C8E83: mov %edi,%ecx;");
    asm("loc_4C8E85: je loc_4C8F5A;");
    asm("loc_4C8E8B: calll *_import_5C6698;");
    asm("loc_4C8E91: push %eax;");
    asm("loc_4C8E92: mov %ebp,%ecx;");
    asm("loc_4C8E94: mov %eax,0x44(%esp);");
    asm("loc_4C8E98: call _sub_420750;");
    asm("loc_4C8E9D: push $_data_5D6F64;");
    asm("loc_4C8EA2: mov %ebp,%ecx;");
    asm("loc_4C8EA4: movl $0,0x150(%esi);");
    asm("loc_4C8EAE: call _sub_4C9610;");
    asm("loc_4C8EB3: test %al,%al;");
    asm("loc_4C8EB5: je loc_4C8EC6;");
    asm("loc_4C8EB7: movl $0x5C,0x150(%esi);");
    asm("loc_4C8EC1: jmp loc_4C901E;");
    asm("loc_4C8EC6: push $_data_5D6F5C;");
    asm("loc_4C8ECB: mov %ebp,%ecx;");
    asm("loc_4C8ECD: call _sub_4C9610;");
    asm("loc_4C8ED2: test %al,%al;");
    asm("loc_4C8ED4: je loc_4C8EE5;");
    asm("loc_4C8ED6: movl $0x5E,0x150(%esi);");
    asm("loc_4C8EE0: jmp loc_4C901E;");
    asm("loc_4C8EE5: push $_data_5D6F54;");
    asm("loc_4C8EEA: mov %ebp,%ecx;");
    asm("loc_4C8EEC: call _sub_4C9610;");
    asm("loc_4C8EF1: test %al,%al;");
    asm("loc_4C8EF3: je loc_4C8F04;");
    asm("loc_4C8EF5: movl $0x55,0x150(%esi);");
    asm("loc_4C8EFF: jmp loc_4C901E;");
    asm("loc_4C8F04: push $_data_5D6F4C;");
    asm("loc_4C8F09: mov %ebp,%ecx;");
    asm("loc_4C8F0B: call _sub_4C9610;");
    asm("loc_4C8F10: test %al,%al;");
    asm("loc_4C8F12: je loc_4C8F23;");
    asm("loc_4C8F14: movl $0x63,0x150(%esi);");
    asm("loc_4C8F1E: jmp loc_4C901E;");
    asm("loc_4C8F23: push $_data_5D6F38;");
    asm("loc_4C8F28: mov %ebp,%ecx;");
    asm("loc_4C8F2A: call _sub_4C9610;");
    asm("loc_4C8F2F: test %al,%al;");
    asm("loc_4C8F31: je loc_4C8F42;");
    asm("loc_4C8F33: movl $0x73,0x150(%esi);");
    asm("loc_4C8F3D: jmp loc_4C901E;");
    asm("loc_4C8F42: mov 0x40(%esp),%edx;");
    asm("loc_4C8F46: push %edx;");
    asm("loc_4C8F47: push $_data_5D6F10;");
    asm("loc_4C8F4C: calll *_import_5C64A4;");
    asm("loc_4C8F52: add $8,%esp;");
    asm("loc_4C8F55: jmp loc_4C901E;");
    asm("loc_4C8F5A: push $_data_5D6F08;");
    asm("loc_4C8F5F: calll *_import_5C6CF4;");
    asm("loc_4C8F65: test %al,%al;");
    asm("loc_4C8F67: mov %edi,%ecx;");
    asm("loc_4C8F69: je loc_4C8F82;");
    asm("loc_4C8F6B: push $0;");
    asm("loc_4C8F6D: calll *_import_5C6698;");
    asm("loc_4C8F73: push %eax;");
    asm("loc_4C8F74: push $0;");
    asm("loc_4C8F76: mov %esi,%ecx;");
    asm("loc_4C8F78: call _sub_59F1C0;");
    asm("loc_4C8F7D: jmp loc_4C901E;");
    asm("loc_4C8F82: push $_data_5D6EFC;");
    asm("loc_4C8F87: calll *_import_5C6CF4;");
    asm("loc_4C8F8D: test %al,%al;");
    asm("loc_4C8F8F: mov %edi,%ecx;");
    asm("loc_4C8F91: je loc_4C8FFA;");
    asm("loc_4C8F93: push $1;");
    asm("loc_4C8F95: calll *_import_5C6CFC;");
    asm("loc_4C8F9B: fstpl 0x18(%esp);");
    asm("loc_4C8F9F: push $0;");
    asm("loc_4C8FA1: mov %edi,%ecx;");
    asm("loc_4C8FA3: calll *_import_5C6CFC;");
    asm("loc_4C8FA9: fstps 0x24(%esp);");
    asm("loc_4C8FAD: fldl 0x18(%esp);");
    asm("loc_4C8FB1: push $2;");
    asm("loc_4C8FB3: mov %edi,%ecx;");
    asm("loc_4C8FB5: fstps 0x2C(%esp);");
    asm("loc_4C8FB9: calll *_import_5C6CFC;");
    asm("loc_4C8FBF: mov 0x28(%esp),%ecx;");
    asm("loc_4C8FC3: lea 0x60(%esi),%eax;");
    asm("loc_4C8FC6: mov %eax,%ebx;");
    asm("loc_4C8FC8: mov 0x24(%esp),%eax;");
    asm("loc_4C8FCC: mov %eax,(%ebx);");
    asm("loc_4C8FCE: mov %ecx,4(%ebx);");
    asm("loc_4C8FD1: fstps 0x2C(%esp);");
    asm("loc_4C8FD5: mov 0x2C(%esp),%edx;");
    asm("loc_4C8FD9: mov %edx,8(%ebx);");
    asm("loc_4C8FDC: lea 0xD0(%esi),%ebx;");
    asm("loc_4C8FE2: mov %eax,(%ebx);");
    asm("loc_4C8FE4: mov %ecx,4(%ebx);");
    asm("loc_4C8FE7: lea 0xAC(%esi),%eax;");
    asm("loc_4C8FED: push %eax;");
    asm("loc_4C8FEE: mov %esi,%ecx;");
    asm("loc_4C8FF0: mov %edx,8(%ebx);");
    asm("loc_4C8FF3: call _sub_4C92B0;");
    asm("loc_4C8FF8: jmp loc_4C901E;");
    asm("loc_4C8FFA: push $_data_5D6EF0;");
    asm("loc_4C8FFF: calll *_import_5C6CF4;");
    asm("loc_4C9005: test %al,%al;");
    asm("loc_4C9007: je loc_4C901E;");
    asm("loc_4C9009: push $0;");
    asm("loc_4C900B: mov %edi,%ecx;");
    asm("loc_4C900D: calll *_import_5C6CFC;");
    asm("loc_4C9013: call _sub_5B7EC0;");
    asm("loc_4C9018: mov %eax,0x124(%esi);");
    asm("loc_4C901E: mov %edi,%ecx;");
    asm("loc_4C9020: calll *_import_5C669C;");
    asm("loc_4C9026: test %al,%al;");
    asm("loc_4C9028: jne loc_4C8E74;");
    asm("loc_4C902E: mov 0x10(%esp),%eax;");
    asm("loc_4C9032: pop %edi;");
    asm("loc_4C9033: pop %ebp;");
    asm("loc_4C9034: pop %esi;");
    asm("loc_4C9035: pop %ebx;");
    asm("loc_4C9036: mov 0x20(%esp),%ecx;");
    asm("loc_4C903A: mov %ecx,%fs:0;");
    asm("loc_4C9041: add $0x2C,%esp;");
    asm("loc_4C9044: ret $4;");
    asm("loc_4C9047: mov 0x28(%esp),%ecx;");
    asm("loc_4C904B: pop %esi;");
    asm("loc_4C904C: xor %eax,%eax;");
    asm("loc_4C904E: pop %ebx;");
    asm("loc_4C904F: mov %ecx,%fs:0;");
    asm("loc_4C9056: add $0x2C,%esp;");
    asm("loc_4C9059: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9060() // _sub_4C9060
{
    __DEBUG_ASM(4C9060);
    // chunk 0x4C9060 _sub_4C9060
    asm("loc_4C9060: push $0xFFFFFFFF;");
    asm("loc_4C9062: push $_sub_5BD898;");
    asm("loc_4C9067: mov %fs:0,%eax;");
    asm("loc_4C906D: push %eax;");
    asm("loc_4C906E: mov %esp,%fs:0;");
    asm("loc_4C9075: push %ecx;");
    asm("loc_4C9076: push %ebx;");
    asm("loc_4C9077: push %ebp;");
    asm("loc_4C9078: push %esi;");
    asm("loc_4C9079: push %edi;");
    asm("loc_4C907A: xor %ebx,%ebx;");
    asm("loc_4C907C: mov %ecx,%esi;");
    asm("loc_4C907E: mov %ebx,0xC(%esi);");
    asm("loc_4C9081: mov %ebx,8(%esi);");
    asm("loc_4C9084: mov %ebx,4(%esi);");
    asm("loc_4C9087: mov %ebx,0x14(%esi);");
    asm("loc_4C908A: mov %bl,0x18(%esi);");
    asm("loc_4C908D: mov %ebx,0x58(%esi);");
    asm("loc_4C9090: mov %ebx,0x54(%esi);");
    asm("loc_4C9093: mov %ebx,0x50(%esi);");
    asm("loc_4C9096: mov %ebx,0x48(%esi);");
    asm("loc_4C9099: mov %ebx,0x44(%esi);");
    asm("loc_4C909C: mov %ebx,0x40(%esi);");
    asm("loc_4C909F: mov $0x3F800000,%ebp;");
    asm("loc_4C90A4: mov %ebp,0x5C(%esi);");
    asm("loc_4C90A7: mov %ebp,0x4C(%esi);");
    asm("loc_4C90AA: mov %ebp,0x3C(%esi);");
    asm("loc_4C90AD: mov %ebx,0x68(%esi);");
    asm("loc_4C90B0: mov %ebx,0x64(%esi);");
    asm("loc_4C90B3: mov %ebx,0x60(%esi);");
    asm("loc_4C90B6: mov 0x6C(%esi),%al;");
    asm("loc_4C90B9: and $0xF8,%al;");
    asm("loc_4C90BB: or $8,%al;");
    asm("loc_4C90BD: movl $_off_5D5544,(%esi);");
    asm("loc_4C90C3: mov %ebx,0x10(%esi);");
    asm("loc_4C90C6: mov %ebx,0x70(%esi);");
    asm("loc_4C90C9: mov %ebx,0x38(%esi);");
    asm("loc_4C90CC: mov %ebx,0x74(%esi);");
    asm("loc_4C90CF: mov %ebx,0x78(%esi);");
    asm("loc_4C90D2: mov %al,0x6C(%esi);");
    asm("loc_4C90D5: mov _data_67DCD4,%ecx;");
    asm("loc_4C90DB: inc %ecx;");
    asm("loc_4C90DC: mov %esi,0x10(%esp);");
    asm("loc_4C90E0: mov %ecx,_data_67DCD4;");
    asm("loc_4C90E6: lea 0x7C(%esi),%edi;");
    asm("loc_4C90E9: mov %edi,%ecx;");
    asm("loc_4C90EB: mov %ebx,0x1C(%esp);");
    asm("loc_4C90EF: call _sub_420D40;");
    asm("loc_4C90F4: mov 0x14(%esp),%ecx;");
    asm("loc_4C90F8: mov %ebp,0x20(%edi);");
    asm("loc_4C90FB: mov %ebp,0x1C(%edi);");
    asm("loc_4C90FE: mov %ebp,0x18(%edi);");
    asm("loc_4C9101: mov %ebp,0x14(%edi);");
    asm("loc_4C9104: mov %ebp,0x24(%edi);");
    asm("loc_4C9107: movl $_off_5D2EFC,(%edi);");
    asm("loc_4C910D: movl $0xFFFFFFFF,0x10(%edi);");
    asm("loc_4C9114: mov %bl,0xA8(%esi);");
    asm("loc_4C911A: mov %bl,0xA7(%esi);");
    asm("loc_4C9120: mov %bl,0xA6(%esi);");
    asm("loc_4C9126: mov %bl,0xA5(%esi);");
    asm("loc_4C912C: andb $0xF8,0xA4(%esi);");
    asm("loc_4C9133: pop %edi;");
    asm("loc_4C9134: movl $_off_5D709C,(%esi);");
    asm("loc_4C913A: mov %esi,%eax;");
    asm("loc_4C913C: pop %esi;");
    asm("loc_4C913D: pop %ebp;");
    asm("loc_4C913E: pop %ebx;");
    asm("loc_4C913F: mov %ecx,%fs:0;");
    asm("loc_4C9146: add $0x10,%esp;");
    asm("loc_4C9149: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9150() // _sub_4C9150
{
    __DEBUG_ASM(4C9150);
    // chunk 0x4C9150 _sub_4C9150
    asm("loc_4C9150: push %esi;");
    asm("loc_4C9151: push %edi;");
    asm("loc_4C9152: mov %ecx,%edi;");
    asm("loc_4C9154: lea 0x7C(%edi),%esi;");
    asm("loc_4C9157: mov %esi,%ecx;");
    asm("loc_4C9159: call _sub_420D60;");
    asm("loc_4C915E: test %al,%al;");
    asm("loc_4C9160: je loc_4C9169;");
    asm("loc_4C9162: mov %esi,%ecx;");
    asm("loc_4C9164: call _sub_59EEE0;");
    asm("loc_4C9169: mov 0x6C(%edi),%cl;");
    asm("loc_4C916C: mov 0xC(%edi),%esi;");
    asm("loc_4C916F: and $0xFC,%cl;");
    asm("loc_4C9172: test %esi,%esi;");
    asm("loc_4C9174: mov %cl,0x6C(%edi);");
    asm("loc_4C9177: je loc_4C918E;");
    asm("loc_4C9179: lea (%esp),%esp;");
    asm("loc_4C9180: mov (%esi),%eax;");
    asm("loc_4C9182: mov %esi,%ecx;");
    asm("loc_4C9184: calll *0x28(%eax);");
    asm("loc_4C9187: mov 8(%esi),%esi;");
    asm("loc_4C918A: test %esi,%esi;");
    asm("loc_4C918C: jne loc_4C9180;");
    asm("loc_4C918E: push %edi;");
    asm("loc_4C918F: call _sub_59DC00;");
    asm("loc_4C9194: add $4,%esp;");
    asm("loc_4C9197: pop %edi;");
    asm("loc_4C9198: pop %esi;");
    asm("loc_4C9199: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C91A0() // _sub_4C91A0
{
    __DEBUG_ASM(4C91A0);
    // chunk 0x4C91A0 _sub_4C91A0
    asm("loc_4C91A0: mov 4(%esp),%eax;");
    asm("loc_4C91A4: push %esi;");
    asm("loc_4C91A5: push %edi;");
    asm("loc_4C91A6: lea 0x60(%ecx),%edx;");
    asm("loc_4C91A9: mov %eax,%esi;");
    asm("loc_4C91AB: mov (%esi),%edi;");
    asm("loc_4C91AD: mov %edi,(%edx);");
    asm("loc_4C91AF: mov 4(%esi),%edi;");
    asm("loc_4C91B2: mov %edi,4(%edx);");
    asm("loc_4C91B5: mov 8(%esi),%esi;");
    asm("loc_4C91B8: pop %edi;");
    asm("loc_4C91B9: mov %esi,8(%edx);");
    asm("loc_4C91BC: pop %esi;");
    asm("loc_4C91BD: mov %eax,4(%esp);");
    asm("loc_4C91C1: add $0x7C,%ecx;");
    asm("loc_4C91C4: jmp _sub_420FD0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C91D0() // _sub_4C91D0
{
    __DEBUG_ASM(4C91D0);
    // chunk 0x4C91D0 _sub_4C91D0
    asm("loc_4C91D0: push %edi;");
    asm("loc_4C91D1: mov %ecx,%edi;");
    asm("loc_4C91D3: mov 0xC(%edi),%ecx;");
    asm("loc_4C91D6: test %ecx,%ecx;");
    asm("loc_4C91D8: je loc_4C91FC;");
    asm("loc_4C91DA: push %esi;");
    asm("loc_4C91DB: nop;");
    asm("loc_4C91DC: lea (%esp),%esp;");
    asm("loc_4C91E0: testb $1,0x6C(%ecx);");
    asm("loc_4C91E4: mov 8(%ecx),%esi;");
    asm("loc_4C91E7: je loc_4C91F0;");
    asm("loc_4C91E9: mov (%ecx),%eax;");
    asm("loc_4C91EB: calll *0x2C(%eax);");
    asm("loc_4C91EE: jmp loc_4C91F5;");
    asm("loc_4C91F0: mov (%ecx),%edx;");
    asm("loc_4C91F2: calll *0x30(%edx);");
    asm("loc_4C91F5: test %esi,%esi;");
    asm("loc_4C91F7: mov %esi,%ecx;");
    asm("loc_4C91F9: jne loc_4C91E0;");
    asm("loc_4C91FB: pop %esi;");
    asm("loc_4C91FC: lea 0x3C(%edi),%eax;");
    asm("loc_4C91FF: push %eax;");
    asm("loc_4C9200: lea 0x7C(%edi),%ecx;");
    asm("loc_4C9203: call _sub_421050;");
    asm("loc_4C9208: pop %edi;");
    asm("loc_4C9209: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9210() // _sub_4C9210
{
    __DEBUG_ASM(4C9210);
    // chunk 0x4C9210 _sub_4C9210
    asm("loc_4C9210: push %esi;");
    asm("loc_4C9211: mov %ecx,%esi;");
    asm("loc_4C9213: call _sub_4C9230;");
    asm("loc_4C9218: testb $1,8(%esp);");
    asm("loc_4C921D: je loc_4C9228;");
    asm("loc_4C921F: push %esi;");
    asm("loc_4C9220: call _sub_5B7E1D;");
    asm("loc_4C9225: add $4,%esp;");
    asm("loc_4C9228: mov %esi,%eax;");
    asm("loc_4C922A: pop %esi;");
    asm("loc_4C922B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9230() // _sub_4C9230
{
    __DEBUG_ASM(4C9230);
    // chunk 0x4C9230 _sub_4C9230
    asm("loc_4C9230: push $0xFFFFFFFF;");
    asm("loc_4C9232: push $_sub_5BD898;");
    asm("loc_4C9237: mov %fs:0,%eax;");
    asm("loc_4C923D: push %eax;");
    asm("loc_4C923E: mov %esp,%fs:0;");
    asm("loc_4C9245: push %ecx;");
    asm("loc_4C9246: push %esi;");
    asm("loc_4C9247: push %edi;");
    asm("loc_4C9248: mov %ecx,%edi;");
    asm("loc_4C924A: mov %edi,8(%esp);");
    asm("loc_4C924E: lea 0x7C(%edi),%ecx;");
    asm("loc_4C9251: movl $0,0x14(%esp);");
    asm("loc_4C9259: call _sub_59EF20;");
    asm("loc_4C925E: movl $_off_5D5544,(%edi);");
    asm("loc_4C9264: decl _data_67DCD4;");
    asm("loc_4C926A: mov 0x6C(%edi),%cl;");
    asm("loc_4C926D: mov 0xC(%edi),%esi;");
    asm("loc_4C9270: and $0xFC,%cl;");
    asm("loc_4C9273: test %esi,%esi;");
    asm("loc_4C9275: movl $0xFFFFFFFF,0x14(%esp);");
    asm("loc_4C927D: mov %cl,0x6C(%edi);");
    asm("loc_4C9280: je loc_4C9290;");
    asm("loc_4C9282: mov (%esi),%eax;");
    asm("loc_4C9284: mov %esi,%ecx;");
    asm("loc_4C9286: calll *0x28(%eax);");
    asm("loc_4C9289: mov 8(%esi),%esi;");
    asm("loc_4C928C: test %esi,%esi;");
    asm("loc_4C928E: jne loc_4C9282;");
    asm("loc_4C9290: push %edi;");
    asm("loc_4C9291: call _sub_59DC00;");
    asm("loc_4C9296: mov 0x10(%esp),%ecx;");
    asm("loc_4C929A: add $4,%esp;");
    asm("loc_4C929D: pop %edi;");
    asm("loc_4C929E: pop %esi;");
    asm("loc_4C929F: mov %ecx,%fs:0;");
    asm("loc_4C92A6: add $0x10,%esp;");
    asm("loc_4C92A9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C92B0() // _sub_4C92B0
{
    __DEBUG_ASM(4C92B0);
    // chunk 0x4C92B0 _sub_4C92B0
    asm("loc_4C92B0: mov %ecx,%eax;");
    asm("loc_4C92B2: push %esi;");
    asm("loc_4C92B3: mov 8(%esp),%esi;");
    asm("loc_4C92B7: push %edi;");
    asm("loc_4C92B8: lea 0x3C(%eax),%edx;");
    asm("loc_4C92BB: mov %edx,%edi;");
    asm("loc_4C92BD: mov $0xC,%ecx;");
    asm("loc_4C92C2: rep movsl (%esi),(%edi);");
    asm("loc_4C92C4: lea 0x7C(%eax),%esi;");
    asm("loc_4C92C7: push %edx;");
    asm("loc_4C92C8: mov %esi,%ecx;");
    asm("loc_4C92CA: call _sub_421050;");
    asm("loc_4C92CF: mov %esi,%ecx;");
    asm("loc_4C92D1: call _sub_421070;");
    asm("loc_4C92D6: pop %edi;");
    asm("loc_4C92D7: pop %esi;");
    asm("loc_4C92D8: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C92E0() // _sub_4C92E0
{
    __DEBUG_ASM(4C92E0);
    // chunk 0x4C92E0 _sub_4C92E0
    asm("loc_4C92E0: mov %ecx,%eax;");
    asm("loc_4C92E2: push %esi;");
    asm("loc_4C92E3: mov 8(%esp),%esi;");
    asm("loc_4C92E7: push %edi;");
    asm("loc_4C92E8: lea 0x3C(%eax),%edx;");
    asm("loc_4C92EB: mov %edx,%edi;");
    asm("loc_4C92ED: mov $9,%ecx;");
    asm("loc_4C92F2: rep movsl (%esi),(%edi);");
    asm("loc_4C92F4: lea 0xAC(%eax),%edi;");
    asm("loc_4C92FA: mov %edx,%esi;");
    asm("loc_4C92FC: mov $0xC,%ecx;");
    asm("loc_4C9301: rep movsl (%esi),(%edi);");
    asm("loc_4C9303: lea 0x7C(%eax),%esi;");
    asm("loc_4C9306: push %edx;");
    asm("loc_4C9307: mov %esi,%ecx;");
    asm("loc_4C9309: call _sub_421050;");
    asm("loc_4C930E: mov %esi,%ecx;");
    asm("loc_4C9310: call _sub_421070;");
    asm("loc_4C9315: pop %edi;");
    asm("loc_4C9316: pop %esi;");
    asm("loc_4C9317: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9320() // _sub_4C9320
{
    __DEBUG_ASM(4C9320);
    // chunk 0x4C9320 _sub_4C9320
    asm("loc_4C9320: mov %ecx,%eax;");
    asm("loc_4C9322: mov 4(%esp),%ecx;");
    asm("loc_4C9326: push %esi;");
    asm("loc_4C9327: mov %ecx,%esi;");
    asm("loc_4C9329: push %edi;");
    asm("loc_4C932A: mov (%esi),%edi;");
    asm("loc_4C932C: lea 0x60(%eax),%edx;");
    asm("loc_4C932F: mov %edi,(%edx);");
    asm("loc_4C9331: mov 4(%esi),%edi;");
    asm("loc_4C9334: mov %edi,4(%edx);");
    asm("loc_4C9337: mov 8(%esi),%esi;");
    asm("loc_4C933A: mov %esi,8(%edx);");
    asm("loc_4C933D: mov (%ecx),%esi;");
    asm("loc_4C933F: lea 0xD0(%eax),%edx;");
    asm("loc_4C9345: mov %esi,(%edx);");
    asm("loc_4C9347: mov 4(%ecx),%esi;");
    asm("loc_4C934A: mov %esi,4(%edx);");
    asm("loc_4C934D: mov 8(%ecx),%ecx;");
    asm("loc_4C9350: mov %ecx,8(%edx);");
    asm("loc_4C9353: lea 0x3C(%eax),%edx;");
    asm("loc_4C9356: lea 0xAC(%eax),%esi;");
    asm("loc_4C935C: mov %edx,%edi;");
    asm("loc_4C935E: mov $0xC,%ecx;");
    asm("loc_4C9363: rep movsl (%esi),(%edi);");
    asm("loc_4C9365: lea 0x7C(%eax),%esi;");
    asm("loc_4C9368: push %edx;");
    asm("loc_4C9369: mov %esi,%ecx;");
    asm("loc_4C936B: call _sub_421050;");
    asm("loc_4C9370: mov %esi,%ecx;");
    asm("loc_4C9372: call _sub_421070;");
    asm("loc_4C9377: pop %edi;");
    asm("loc_4C9378: pop %esi;");
    asm("loc_4C9379: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9380() // _sub_4C9380
{
    __DEBUG_ASM(4C9380);
    // chunk 0x4C9380 _sub_4C9380
    asm("loc_4C9380: push %esi;");
    asm("loc_4C9381: mov %ecx,%esi;");
    asm("loc_4C9383: mov 8(%esp),%ecx;");
    asm("loc_4C9387: mov (%esi),%eax;");
    asm("loc_4C9389: push %ecx;");
    asm("loc_4C938A: mov %esi,%ecx;");
    asm("loc_4C938C: calll *0x10(%eax);");
    asm("loc_4C938F: mov %al,0xDC(%esi);");
    asm("loc_4C9395: pop %esi;");
    asm("loc_4C9396: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C93A0() // _sub_4C93A0
{
    __DEBUG_ASM(4C93A0);
    // chunk 0x4C93A0 _sub_4C93A0
    asm("loc_4C93A0: movb $0,0xDC(%ecx);");
    asm("loc_4C93A7: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C93B0() // _sub_4C93B0
{
    __DEBUG_ASM(4C93B0);
    // chunk 0x4C93B0 _sub_4C93B0
    asm("loc_4C93B0: push %esi;");
    asm("loc_4C93B1: push $0xB71;");
    asm("loc_4C93B6: mov %ecx,%esi;");
    asm("loc_4C93B8: call _sub_421ED0;");
    asm("loc_4C93BD: add $4,%esp;");
    asm("loc_4C93C0: mov %esi,%ecx;");
    asm("loc_4C93C2: pop %esi;");
    asm("loc_4C93C3: jmp _sub_59F510;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C93D0() // _sub_4C93D0
{
    __DEBUG_ASM(4C93D0);
    // chunk 0x4C93D0 _sub_4C93D0
    asm("loc_4C93D0: mov _data_673560,%al;");
    asm("loc_4C93D5: test %al,%al;");
    asm("loc_4C93D7: push %esi;");
    asm("loc_4C93D8: mov %ecx,%esi;");
    asm("loc_4C93DA: je loc_4C93FC;");
    asm("loc_4C93DC: push $6;");
    asm("loc_4C93DE: call _sub_5792B0;");
    asm("loc_4C93E3: add $4,%esp;");
    asm("loc_4C93E6: test %eax,%eax;");
    asm("loc_4C93E8: je loc_4C93FC;");
    asm("loc_4C93EA: push $0xA;");
    asm("loc_4C93EC: call _sub_5792B0;");
    asm("loc_4C93F1: add $4,%esp;");
    asm("loc_4C93F4: test %eax,%eax;");
    asm("loc_4C93F6: je loc_4C93FC;");
    asm("loc_4C93F8: mov $1,%al;");
    asm("loc_4C93FA: jmp loc_4C93FE;");
    asm("loc_4C93FC: xor %al,%al;");
    asm("loc_4C93FE: mov 0x6C(%esi),%cl;");
    asm("loc_4C9401: shl $1,%al;");
    asm("loc_4C9403: xor %cl,%al;");
    asm("loc_4C9405: and $2,%al;");
    asm("loc_4C9407: xor %cl,%al;");
    asm("loc_4C9409: mov %al,0x6C(%esi);");
    asm("loc_4C940C: mov 0xDC(%esi),%al;");
    asm("loc_4C9412: test %al,%al;");
    asm("loc_4C9414: je loc_4C9421;");
    asm("loc_4C9416: lea 0xF4(%esi),%ecx;");
    asm("loc_4C941C: call _sub_4C81D0;");
    asm("loc_4C9421: mov %esi,%ecx;");
    asm("loc_4C9423: pop %esi;");
    asm("loc_4C9424: jmp _sub_59F360;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9430() // _sub_4C9430
{
    __DEBUG_ASM(4C9430);
    // chunk 0x4C9430 _sub_4C9430
    asm("loc_4C9430: mov 4(%esp),%eax;");
    asm("loc_4C9434: mov %ecx,%edx;");
    asm("loc_4C9436: mov (%eax),%ecx;");
    asm("loc_4C9438: sub $0x28,%esp;");
    asm("loc_4C943B: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_4C943E: jne loc_4C947B;");
    asm("loc_4C9440: cmpl $2,4(%eax);");
    asm("loc_4C9444: jne loc_4C947B;");
    asm("loc_4C9446: push %edi;");
    asm("loc_4C9447: xor %eax,%eax;");
    asm("loc_4C9449: mov $0xA,%ecx;");
    asm("loc_4C944E: lea 4(%esp),%edi;");
    asm("loc_4C9452: rep stos %eax,(%edi);");
    asm("loc_4C9454: mov 0x150(%edx),%eax;");
    asm("loc_4C945A: test %eax,%eax;");
    asm("loc_4C945C: movb $1,0x2A(%esp);");
    asm("loc_4C9461: mov %eax,4(%esp);");
    asm("loc_4C9465: pop %edi;");
    asm("loc_4C9466: je loc_4C947B;");
    asm("loc_4C9468: lea (%esp),%eax;");
    asm("loc_4C946C: push %eax;");
    asm("loc_4C946D: call _sub_54BCB0;");
    asm("loc_4C9472: add $4,%esp;");
    asm("loc_4C9475: add $0x28,%esp;");
    asm("loc_4C9478: ret $4;");
    asm("loc_4C947B: xor %al,%al;");
    asm("loc_4C947D: add $0x28,%esp;");
    asm("loc_4C9480: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9490() // _sub_4C9490
{
    __DEBUG_ASM(4C9490);
    // chunk 0x4C9490 _sub_4C9490
    asm("loc_4C9490: push %esi;");
    asm("loc_4C9491: mov %ecx,%esi;");
    asm("loc_4C9493: call _sub_4C94B0;");
    asm("loc_4C9498: testb $1,8(%esp);");
    asm("loc_4C949D: je loc_4C94A8;");
    asm("loc_4C949F: push %esi;");
    asm("loc_4C94A0: call _sub_5B7E1D;");
    asm("loc_4C94A5: add $4,%esp;");
    asm("loc_4C94A8: mov %esi,%eax;");
    asm("loc_4C94AA: pop %esi;");
    asm("loc_4C94AB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C94B0() // _sub_4C94B0
{
    __DEBUG_ASM(4C94B0);
    // chunk 0x4C94B0 _sub_4C94B0
    asm("loc_4C94B0: push $0xFFFFFFFF;");
    asm("loc_4C94B2: push $_sub_5BD8E9;");
    asm("loc_4C94B7: mov %fs:0,%eax;");
    asm("loc_4C94BD: push %eax;");
    asm("loc_4C94BE: mov %esp,%fs:0;");
    asm("loc_4C94C5: push %ecx;");
    asm("loc_4C94C6: push %ebp;");
    asm("loc_4C94C7: push %esi;");
    asm("loc_4C94C8: mov %ecx,%esi;");
    asm("loc_4C94CA: push %edi;");
    asm("loc_4C94CB: mov %esi,0xC(%esp);");
    asm("loc_4C94CF: movl $_off_5D6FAC,(%esi);");
    asm("loc_4C94D5: movl $_off_5D6F78,0xF4(%esi);");
    asm("loc_4C94DF: lea 0x7C(%esi),%ebp;");
    asm("loc_4C94E2: mov %ebp,%ecx;");
    asm("loc_4C94E4: movl $1,0x18(%esp);");
    asm("loc_4C94EC: call _sub_420D60;");
    asm("loc_4C94F1: test %al,%al;");
    asm("loc_4C94F3: je loc_4C94FC;");
    asm("loc_4C94F5: mov %ebp,%ecx;");
    asm("loc_4C94F7: call _sub_59EEE0;");
    asm("loc_4C94FC: mov 0x6C(%esi),%cl;");
    asm("loc_4C94FF: mov 0xC(%esi),%edi;");
    asm("loc_4C9502: and $0xFC,%cl;");
    asm("loc_4C9505: test %edi,%edi;");
    asm("loc_4C9507: mov %cl,0x6C(%esi);");
    asm("loc_4C950A: je loc_4C951E;");
    asm("loc_4C950C: lea (%esp),%esp;");
    asm("loc_4C9510: mov (%edi),%eax;");
    asm("loc_4C9512: mov %edi,%ecx;");
    asm("loc_4C9514: calll *0x28(%eax);");
    asm("loc_4C9517: mov 8(%edi),%edi;");
    asm("loc_4C951A: test %edi,%edi;");
    asm("loc_4C951C: jne loc_4C9510;");
    asm("loc_4C951E: push %esi;");
    asm("loc_4C951F: call _sub_59DC00;");
    asm("loc_4C9524: lea 0x11C(%esi),%ecx;");
    asm("loc_4C952A: movl $_off_5D6EAC,0xF4(%esi);");
    asm("loc_4C9534: mov (%ecx),%eax;");
    asm("loc_4C9536: add $4,%esp;");
    asm("loc_4C9539: test %eax,%eax;");
    asm("loc_4C953B: movb $0,0x18(%esp);");
    asm("loc_4C9540: je loc_4C954A;");
    asm("loc_4C9542: push $0;");
    asm("loc_4C9544: calll *_import_5C62A8;");
    asm("loc_4C954A: mov %ebp,%ecx;");
    asm("loc_4C954C: movl $2,0x18(%esp);");
    asm("loc_4C9554: call _sub_59EF20;");
    asm("loc_4C9559: movl $_off_5D5544,(%esi);");
    asm("loc_4C955F: decl _data_67DCD4;");
    asm("loc_4C9565: mov 0x6C(%esi),%cl;");
    asm("loc_4C9568: mov 0xC(%esi),%edi;");
    asm("loc_4C956B: and $0xFC,%cl;");
    asm("loc_4C956E: test %edi,%edi;");
    asm("loc_4C9570: movl $0xFFFFFFFF,0x18(%esp);");
    asm("loc_4C9578: mov %cl,0x6C(%esi);");
    asm("loc_4C957B: je loc_4C958E;");
    asm("loc_4C957D: lea (%ecx),%ecx;");
    asm("loc_4C9580: mov (%edi),%edx;");
    asm("loc_4C9582: mov %edi,%ecx;");
    asm("loc_4C9584: calll *0x28(%edx);");
    asm("loc_4C9587: mov 8(%edi),%edi;");
    asm("loc_4C958A: test %edi,%edi;");
    asm("loc_4C958C: jne loc_4C9580;");
    asm("loc_4C958E: push %esi;");
    asm("loc_4C958F: call _sub_59DC00;");
    asm("loc_4C9594: mov 0x14(%esp),%ecx;");
    asm("loc_4C9598: add $4,%esp;");
    asm("loc_4C959B: pop %edi;");
    asm("loc_4C959C: pop %esi;");
    asm("loc_4C959D: pop %ebp;");
    asm("loc_4C959E: mov %ecx,%fs:0;");
    asm("loc_4C95A5: add $0x10,%esp;");
    asm("loc_4C95A8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C95B0() // _sub_4C95B0
{
    __DEBUG_ASM(4C95B0);
    // chunk 0x4C95B0 _sub_4C95B0
    asm("loc_4C95B0: push $0xFFFFFFFF;");
    asm("loc_4C95B2: push $_sub_5BD909;");
    asm("loc_4C95B7: mov %fs:0,%eax;");
    asm("loc_4C95BD: push %eax;");
    asm("loc_4C95BE: mov %esp,%fs:0;");
    asm("loc_4C95C5: push %ecx;");
    asm("loc_4C95C6: push %esi;");
    asm("loc_4C95C7: mov %ecx,%esi;");
    asm("loc_4C95C9: xor %ecx,%ecx;");
    asm("loc_4C95CB: mov %esi,4(%esp);");
    asm("loc_4C95CF: mov %ecx,(%esi);");
    asm("loc_4C95D1: mov %ecx,4(%esi);");
    asm("loc_4C95D4: mov 0x18(%esp),%eax;");
    asm("loc_4C95D8: cmp %ecx,%eax;");
    asm("loc_4C95DA: mov %ecx,0x10(%esp);");
    asm("loc_4C95DE: je loc_4C95F0;");
    asm("loc_4C95E0: add $8,%eax;");
    asm("loc_4C95E3: cmp %ecx,%eax;");
    asm("loc_4C95E5: je loc_4C95F0;");
    asm("loc_4C95E7: push %eax;");
    asm("loc_4C95E8: mov %esi,%ecx;");
    asm("loc_4C95EA: calll *_import_5C62A8;");
    asm("loc_4C95F0: mov 8(%esp),%ecx;");
    asm("loc_4C95F4: mov %esi,%eax;");
    asm("loc_4C95F6: pop %esi;");
    asm("loc_4C95F7: mov %ecx,%fs:0;");
    asm("loc_4C95FE: add $0x10,%esp;");
    asm("loc_4C9601: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9610() // _sub_4C9610
{
    __DEBUG_ASM(4C9610);
    // chunk 0x4C9610 _sub_4C9610
    asm("loc_4C9610: push %esi;");
    asm("loc_4C9611: mov 8(%esp),%esi;");
    asm("loc_4C9615: test %esi,%esi;");
    asm("loc_4C9617: jne loc_4C9626;");
    asm("loc_4C9619: mov (%ecx),%edx;");
    asm("loc_4C961B: xor %eax,%eax;");
    asm("loc_4C961D: test %edx,%edx;");
    asm("loc_4C961F: sete %al;");
    asm("loc_4C9622: pop %esi;");
    asm("loc_4C9623: ret $4;");
    asm("loc_4C9626: lea 4(%ecx),%eax;");
    asm("loc_4C9629: push %ebx;");
    asm("loc_4C962A: lea (%ebx),%ebx;");
    asm("loc_4C9630: mov (%eax),%dl;");
    asm("loc_4C9632: mov (%esi),%bl;");
    asm("loc_4C9634: mov %dl,%cl;");
    asm("loc_4C9636: cmp %bl,%dl;");
    asm("loc_4C9638: jne loc_4C9664;");
    asm("loc_4C963A: test %cl,%cl;");
    asm("loc_4C963C: je loc_4C9654;");
    asm("loc_4C963E: mov 1(%eax),%dl;");
    asm("loc_4C9641: mov 1(%esi),%bl;");
    asm("loc_4C9644: mov %dl,%cl;");
    asm("loc_4C9646: cmp %bl,%dl;");
    asm("loc_4C9648: jne loc_4C9664;");
    asm("loc_4C964A: add $2,%eax;");
    asm("loc_4C964D: add $2,%esi;");
    asm("loc_4C9650: test %cl,%cl;");
    asm("loc_4C9652: jne loc_4C9630;");
    asm("loc_4C9654: xor %eax,%eax;");
    asm("loc_4C9656: xor %ecx,%ecx;");
    asm("loc_4C9658: test %eax,%eax;");
    asm("loc_4C965A: sete %cl;");
    asm("loc_4C965D: pop %ebx;");
    asm("loc_4C965E: mov %cl,%al;");
    asm("loc_4C9660: pop %esi;");
    asm("loc_4C9661: ret $4;");
    asm("loc_4C9664: sbb %eax,%eax;");
    asm("loc_4C9666: sbb $0xFFFFFFFF,%eax;");
    asm("loc_4C9669: xor %ecx,%ecx;");
    asm("loc_4C966B: test %eax,%eax;");
    asm("loc_4C966D: sete %cl;");
    asm("loc_4C9670: pop %ebx;");
    asm("loc_4C9671: mov %cl,%al;");
    asm("loc_4C9673: pop %esi;");
    asm("loc_4C9674: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9680() // _sub_4C9680
{
    __DEBUG_ASM(4C9680);
    // chunk 0x4C9680 _sub_4C9680
    asm("loc_4C9680: sub $0xF4,%ecx;");
    asm("loc_4C9686: jmp _sub_4C9490;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9690() // _sub_4C9690
{
    __DEBUG_ASM(4C9690);
    // chunk 0x4C9690 _sub_4C9690
    asm("loc_4C9690: mov _data_5D710C,%eax;");
    asm("loc_4C9695: mov %eax,_data_6748F0;");
    asm("loc_4C969A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C96A0() // _sub_4C96A0
{
    __DEBUG_ASM(4C96A0);
    // chunk 0x4C96A0 _sub_4C96A0
    asm("loc_4C96A0: mov _data_5D710C,%eax;");
    asm("loc_4C96A5: mov %eax,_data_6748EC;");
    asm("loc_4C96AA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C96B0() // _sub_4C96B0
{
    __DEBUG_ASM(4C96B0);
    // chunk 0x4C96B0 _sub_4C96B0
    asm("loc_4C96B0: mov _data_5D7110,%eax;");
    asm("loc_4C96B5: mov %eax,_data_6748E8;");
    asm("loc_4C96BA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C96C0() // _sub_4C96C0
{
    __DEBUG_ASM(4C96C0);
    // chunk 0x4C96C0 _sub_4C96C0
    asm("loc_4C96C0: xor %eax,%eax;");
    asm("loc_4C96C2: mov %ax,_data_6748E4;");
    asm("loc_4C96C8: mov %al,_data_6748E6;");
    asm("loc_4C96CD: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C96D0() // _sub_4C96D0
{
    __DEBUG_ASM(4C96D0);
    // chunk 0x4C96D0 _sub_4C96D0
    asm("loc_4C96D0: movw $0,_data_6748E0;");
    asm("loc_4C96D9: movb $1,_data_6748E2;");
    asm("loc_4C96E0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C96F0() // _sub_4C96F0
{
    __DEBUG_ASM(4C96F0);
    // chunk 0x4C96F0 _sub_4C96F0
    asm("loc_4C96F0: mov $1,%eax;");
    asm("loc_4C96F5: mov %ax,_data_6748DC;");
    asm("loc_4C96FB: mov %al,_data_6748DE;");
    asm("loc_4C9700: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9710() // _sub_4C9710
{
    __DEBUG_ASM(4C9710);
    // chunk 0x4C9710 _sub_4C9710
    asm("loc_4C9710: movw $2,_data_6748D8;");
    asm("loc_4C9719: movb $1,_data_6748DA;");
    asm("loc_4C9720: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9730() // _sub_4C9730
{
    __DEBUG_ASM(4C9730);
    // chunk 0x4C9730 _sub_4C9730
    asm("loc_4C9730: movw $3,_data_6748D4;");
    asm("loc_4C9739: movb $1,_data_6748D6;");
    asm("loc_4C9740: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9750() // _sub_4C9750
{
    __DEBUG_ASM(4C9750);
    // chunk 0x4C9750 _sub_4C9750
    asm("loc_4C9750: movw $4,_data_6748D0;");
    asm("loc_4C9759: movb $1,_data_6748D2;");
    asm("loc_4C9760: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9770() // ??0?$OwnerList@UCargoDesc@SpaceObj@pub@@@@QAE@XZ
{
    __DEBUG_ASM(4C9770);
    // chunk 0x4C9770 _sub_4C9770
    asm("loc_4C9770: mov %ecx,%eax;");
    asm("loc_4C9772: xor %ecx,%ecx;");
    asm("loc_4C9774: mov %ecx,0x10(%eax);");
    asm("loc_4C9777: mov %ecx,8(%eax);");
    asm("loc_4C977A: mov %ecx,4(%eax);");
    asm("loc_4C977D: mov %cl,0xC(%eax);");
    asm("loc_4C9780: movl $_off_5D711C,(%eax);");
    asm("loc_4C9786: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9790() // ??0?$OwnerList@UCargoDesc@SpaceObj@pub@@@@QAE@ABV0@@Z
{
    __DEBUG_ASM(4C9790);
    // chunk 0x4C9790 _sub_4C9790
    asm("loc_4C9790: mov %ecx,%eax;");
    asm("loc_4C9792: movl $_off_5D711C,(%eax);");
    asm("loc_4C9798: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C97A0() // _sub_4C97A0
{
    __DEBUG_ASM(4C97A0);
    // chunk 0x4C97A0 _sub_4C97A0
    asm("loc_4C97A0: push %ebx;");
    asm("loc_4C97A1: mov 8(%esp),%bl;");
    asm("loc_4C97A5: test $2,%bl;");
    asm("loc_4C97A8: push %esi;");
    asm("loc_4C97A9: mov %ecx,%esi;");
    asm("loc_4C97AB: je loc_4C97D8;");
    asm("loc_4C97AD: mov -4(%esi),%eax;");
    asm("loc_4C97B0: push %edi;");
    asm("loc_4C97B1: push $_sub_4CED60;");
    asm("loc_4C97B6: lea -4(%esi),%edi;");
    asm("loc_4C97B9: push %eax;");
    asm("loc_4C97BA: push $0x14;");
    asm("loc_4C97BC: push %esi;");
    asm("loc_4C97BD: call _sub_5B7EC6;");
    asm("loc_4C97C2: test $1,%bl;");
    asm("loc_4C97C5: je loc_4C97D0;");
    asm("loc_4C97C7: push %edi;");
    asm("loc_4C97C8: call _sub_5B7E1D;");
    asm("loc_4C97CD: add $4,%esp;");
    asm("loc_4C97D0: mov %edi,%eax;");
    asm("loc_4C97D2: pop %edi;");
    asm("loc_4C97D3: pop %esi;");
    asm("loc_4C97D4: pop %ebx;");
    asm("loc_4C97D5: ret $4;");
    asm("loc_4C97D8: mov %esi,%ecx;");
    asm("loc_4C97DA: call _sub_4CED60;");
    asm("loc_4C97DF: test $1,%bl;");
    asm("loc_4C97E2: je loc_4C97ED;");
    asm("loc_4C97E4: push %esi;");
    asm("loc_4C97E5: call _sub_5B7E1D;");
    asm("loc_4C97EA: add $4,%esp;");
    asm("loc_4C97ED: mov %esi,%eax;");
    asm("loc_4C97EF: pop %esi;");
    asm("loc_4C97F0: pop %ebx;");
    asm("loc_4C97F1: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9800() // _sub_4C9800
{
    __DEBUG_ASM(4C9800);
    // chunk 0x4C9800 _sub_4C9800
    asm("loc_4C9800: push $_data_5D7120;");
    asm("loc_4C9805: calll *_import_5C6020;");
    asm("loc_4C980B: add $4,%esp;");
    asm("loc_4C980E: mov %eax,_data_6748CC;");
    asm("loc_4C9813: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9820() // _sub_4C9820
{
    __DEBUG_ASM(4C9820);
    // chunk 0x4C9820 _sub_4C9820
    asm("loc_4C9820: mov $_data_673F5C,%eax;");
    asm("loc_4C9825: mov $0x10,%edx;");
    asm("loc_4C982A: xor %ecx,%ecx;");
    asm("loc_4C982C: lea (%esp),%esp;");
    asm("loc_4C9830: mov %ecx,-8(%eax);");
    asm("loc_4C9833: mov %ecx,-4(%eax);");
    asm("loc_4C9836: mov %ecx,(%eax);");
    asm("loc_4C9838: mov %ecx,4(%eax);");
    asm("loc_4C983B: mov %ecx,0x28(%eax);");
    asm("loc_4C983E: movl $1,0x74(%eax);");
    asm("loc_4C9845: mov %ecx,0x78(%eax);");
    asm("loc_4C9848: mov %ecx,0x80(%eax);");
    asm("loc_4C984E: add $0x98,%eax;");
    asm("loc_4C9853: dec %edx;");
    asm("loc_4C9854: jne loc_4C9830;");
    asm("loc_4C9856: mov %ecx,_data_673F48;");
    asm("loc_4C985C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9860() // _sub_4C9860
{
    __DEBUG_ASM(4C9860);
    // chunk 0x4C9860 _sub_4C9860
    asm("loc_4C9860: mov $_data_6735D4,%eax;");
    asm("loc_4C9865: mov $0x10,%edx;");
    asm("loc_4C986A: xor %ecx,%ecx;");
    asm("loc_4C986C: lea (%esp),%esp;");
    asm("loc_4C9870: mov %ecx,-8(%eax);");
    asm("loc_4C9873: mov %ecx,-4(%eax);");
    asm("loc_4C9876: mov %ecx,(%eax);");
    asm("loc_4C9878: mov %ecx,4(%eax);");
    asm("loc_4C987B: mov %ecx,0x28(%eax);");
    asm("loc_4C987E: movl $1,0x74(%eax);");
    asm("loc_4C9885: mov %ecx,0x78(%eax);");
    asm("loc_4C9888: mov %ecx,0x80(%eax);");
    asm("loc_4C988E: add $0x98,%eax;");
    asm("loc_4C9893: dec %edx;");
    asm("loc_4C9894: jne loc_4C9870;");
    asm("loc_4C9896: mov %ecx,_data_6735C0;");
    asm("loc_4C989C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C98A0() // _sub_4C98A0
{
    __DEBUG_ASM(4C98A0);
    // chunk 0x4C98A0 _sub_4C98A0
    asm("loc_4C98A0: mov $_data_6735B4,%ecx;");
    asm("loc_4C98A5: call _sub_4C98C0;");
    asm("loc_4C98AA: push $_sub_4C98F0;");
    asm("loc_4C98AF: call _sub_5B7E6C;");
    asm("loc_4C98B4: pop %ecx;");
    asm("loc_4C98B5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C98C0() // _sub_4C98C0
{
    __DEBUG_ASM(4C98C0);
    // chunk 0x4C98C0 _sub_4C98C0
    asm("loc_4C98C0: push %ecx;");
    asm("loc_4C98C1: mov 3(%esp),%al;");
    asm("loc_4C98C5: push %esi;");
    asm("loc_4C98C6: mov %ecx,%esi;");
    asm("loc_4C98C8: push $0x44;");
    asm("loc_4C98CA: mov %al,(%esi);");
    asm("loc_4C98CC: call _sub_5B7E84;");
    asm("loc_4C98D1: mov %eax,(%eax);");
    asm("loc_4C98D3: mov %eax,4(%eax);");
    asm("loc_4C98D6: mov %eax,4(%esi);");
    asm("loc_4C98D9: add $4,%esp;");
    asm("loc_4C98DC: movl $0,8(%esi);");
    asm("loc_4C98E3: mov %esi,%eax;");
    asm("loc_4C98E5: pop %esi;");
    asm("loc_4C98E6: pop %ecx;");
    asm("loc_4C98E7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C98F0() // _sub_4C98F0
{
    __DEBUG_ASM(4C98F0);
    // chunk 0x4C98F0 _sub_4C98F0
    asm("loc_4C98F0: mov $_data_6735B4,%ecx;");
    asm("loc_4C98F5: jmp loc_4C9900;");
    asm("loc_4C98FA: nop;");
    asm("loc_4C98FB: nop;");
    asm("loc_4C98FC: nop;");
    asm("loc_4C98FD: nop;");
    asm("loc_4C98FE: nop;");
    asm("loc_4C98FF: nop;");
    asm("loc_4C9900: push $0xFFFFFFFF;");
    asm("loc_4C9902: push $_sub_5BD93E;");
    asm("loc_4C9907: mov %fs:0,%eax;");
    asm("loc_4C990D: push %eax;");
    asm("loc_4C990E: mov %esp,%fs:0;");
    asm("loc_4C9915: sub $0xC,%esp;");
    asm("loc_4C9918: push %ebx;");
    asm("loc_4C9919: push %ebp;");
    asm("loc_4C991A: push %esi;");
    asm("loc_4C991B: mov %ecx,%ebx;");
    asm("loc_4C991D: push %edi;");
    asm("loc_4C991E: mov %ebx,0x14(%esp);");
    asm("loc_4C9922: mov 4(%ebx),%eax;");
    asm("loc_4C9925: mov (%eax),%esi;");
    asm("loc_4C9927: xor %ebp,%ebp;");
    asm("loc_4C9929: cmp %eax,%esi;");
    asm("loc_4C992B: mov %ebp,0x24(%esp);");
    asm("loc_4C992F: je loc_4C99D7;");
    asm("loc_4C9935: mov 0x3C(%esi),%edi;");
    asm("loc_4C9938: cmp %ebp,%edi;");
    asm("loc_4C993A: mov %edi,0x18(%esp);");
    asm("loc_4C993E: je loc_4C99A8;");
    asm("loc_4C9940: mov %edi,%ecx;");
    asm("loc_4C9942: movb $1,0x24(%esp);");
    asm("loc_4C9947: call _sub_4C9A30;");
    asm("loc_4C994C: lea 4(%edi),%ebp;");
    asm("loc_4C994F: movl $4,0x10(%esp);");
    asm("loc_4C9957: mov %ebp,%ecx;");
    asm("loc_4C9959: call _sub_420F70;");
    asm("loc_4C995E: mov 0x10(%esp),%eax;");
    asm("loc_4C9962: add $0x10,%ebp;");
    asm("loc_4C9965: dec %eax;");
    asm("loc_4C9966: mov %eax,0x10(%esp);");
    asm("loc_4C996A: jne loc_4C9957;");
    asm("loc_4C996C: mov (%edi),%ecx;");
    asm("loc_4C996E: test %ecx,%ecx;");
    asm("loc_4C9970: je loc_4C9986;");
    asm("loc_4C9972: mov _import_5C6D58,%eax;");
    asm("loc_4C9977: mov (%eax),%eax;");
    asm("loc_4C9979: mov (%eax),%edx;");
    asm("loc_4C997B: push %ecx;");
    asm("loc_4C997C: push %eax;");
    asm("loc_4C997D: calll *0x18(%edx);");
    asm("loc_4C9980: movl $0,(%edi);");
    asm("loc_4C9986: push $_sub_420D10;");
    asm("loc_4C998B: push $4;");
    asm("loc_4C998D: push $0x10;");
    asm("loc_4C998F: lea 4(%edi),%eax;");
    asm("loc_4C9992: push %eax;");
    asm("loc_4C9993: movb $0,0x34(%esp);");
    asm("loc_4C9998: call _sub_5B7EC6;");
    asm("loc_4C999D: push %edi;");
    asm("loc_4C999E: call _sub_5B7E1D;");
    asm("loc_4C99A3: add $4,%esp;");
    asm("loc_4C99A6: xor %ebp,%ebp;");
    asm("loc_4C99A8: mov %ebp,0x3C(%esi);");
    asm("loc_4C99AB: mov 4(%esi),%eax;");
    asm("loc_4C99AE: mov (%esi),%edi;");
    asm("loc_4C99B0: mov %edi,(%eax);");
    asm("loc_4C99B2: mov (%esi),%eax;");
    asm("loc_4C99B4: mov 4(%esi),%ecx;");
    asm("loc_4C99B7: push %esi;");
    asm("loc_4C99B8: mov %ecx,4(%eax);");
    asm("loc_4C99BB: call _sub_5B7E1D;");
    asm("loc_4C99C0: mov 8(%ebx),%ecx;");
    asm("loc_4C99C3: mov 4(%ebx),%eax;");
    asm("loc_4C99C6: add $4,%esp;");
    asm("loc_4C99C9: dec %ecx;");
    asm("loc_4C99CA: cmp %eax,%edi;");
    asm("loc_4C99CC: mov %ecx,8(%ebx);");
    asm("loc_4C99CF: mov %edi,%esi;");
    asm("loc_4C99D1: jne loc_4C9935;");
    asm("loc_4C99D7: mov 4(%ebx),%edi;");
    asm("loc_4C99DA: mov (%edi),%esi;");
    asm("loc_4C99DC: cmp %edi,%esi;");
    asm("loc_4C99DE: movl $0xFFFFFFFF,0x24(%esp);");
    asm("loc_4C99E6: je loc_4C99FD;");
    asm("loc_4C99E8: mov %esi,%eax;");
    asm("loc_4C99EA: mov (%esi),%esi;");
    asm("loc_4C99EC: push %eax;");
    asm("loc_4C99ED: lea 0x1C(%esp),%edx;");
    asm("loc_4C99F1: push %edx;");
    asm("loc_4C99F2: mov %ebx,%ecx;");
    asm("loc_4C99F4: call _sub_516F70;");
    asm("loc_4C99F9: cmp %edi,%esi;");
    asm("loc_4C99FB: jne loc_4C99E8;");
    asm("loc_4C99FD: mov 4(%ebx),%eax;");
    asm("loc_4C9A00: push %eax;");
    asm("loc_4C9A01: call _sub_5B7E1D;");
    asm("loc_4C9A06: mov 0x20(%esp),%ecx;");
    asm("loc_4C9A0A: add $4,%esp;");
    asm("loc_4C9A0D: pop %edi;");
    asm("loc_4C9A0E: mov %ebp,4(%ebx);");
    asm("loc_4C9A11: mov %ebp,8(%ebx);");
    asm("loc_4C9A14: pop %esi;");
    asm("loc_4C9A15: pop %ebp;");
    asm("loc_4C9A16: pop %ebx;");
    asm("loc_4C9A17: mov %ecx,%fs:0;");
    asm("loc_4C9A1E: add $0x18,%esp;");
    asm("loc_4C9A21: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9A30() // _sub_4C9A30
{
    __DEBUG_ASM(4C9A30);
    // chunk 0x4C9A30 _sub_4C9A30
    asm("loc_4C9A30: push %esi;");
    asm("loc_4C9A31: mov %ecx,%esi;");
    asm("loc_4C9A33: mov (%esi),%ecx;");
    asm("loc_4C9A35: test %ecx,%ecx;");
    asm("loc_4C9A37: je loc_4C9A75;");
    asm("loc_4C9A39: mov _import_5C6D58,%eax;");
    asm("loc_4C9A3E: mov (%eax),%eax;");
    asm("loc_4C9A40: mov (%eax),%edx;");
    asm("loc_4C9A42: push %ecx;");
    asm("loc_4C9A43: push %eax;");
    asm("loc_4C9A44: calll *0x24(%edx);");
    asm("loc_4C9A47: lea 0x254(%esi),%ecx;");
    asm("loc_4C9A4D: lea 0x44(%esi),%eax;");
    asm("loc_4C9A50: mov $4,%edx;");
    asm("loc_4C9A55: cmpl $0xFFFFFFFF,(%ecx);");
    asm("loc_4C9A58: je loc_4C9A6A;");
    asm("loc_4C9A5A: movl $0,(%eax);");
    asm("loc_4C9A60: movb $0,4(%eax);");
    asm("loc_4C9A64: movl $0xFFFFFFFF,(%ecx);");
    asm("loc_4C9A6A: add $4,%ecx;");
    asm("loc_4C9A6D: add $0x84,%eax;");
    asm("loc_4C9A72: dec %edx;");
    asm("loc_4C9A73: jne loc_4C9A55;");
    asm("loc_4C9A75: pop %esi;");
    asm("loc_4C9A76: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9A80() // _sub_4C9A80
{
    __DEBUG_ASM(4C9A80);
    // chunk 0x4C9A80 _sub_4C9A80
    asm("loc_4C9A80: push $0xFFFFFFFF;");
    asm("loc_4C9A82: push $_sub_5BD982;");
    asm("loc_4C9A87: mov %fs:0,%eax;");
    asm("loc_4C9A8D: push %eax;");
    asm("loc_4C9A8E: mov %esp,%fs:0;");
    asm("loc_4C9A95: sub $0x738,%esp;");
    asm("loc_4C9A9B: mov 4(%ecx),%eax;");
    asm("loc_4C9A9E: push %ebp;");
    asm("loc_4C9A9F: push %esi;");
    asm("loc_4C9AA0: mov (%eax),%esi;");
    asm("loc_4C9AA2: cmp %eax,%esi;");
    asm("loc_4C9AA4: push %edi;");
    asm("loc_4C9AA5: mov %ecx,0x1C(%esp);");
    asm("loc_4C9AA9: je loc_4C9AD5;");
    asm("loc_4C9AAB: mov _import_5C64A8,%ebp;");
    asm("loc_4C9AB1: mov 0x754(%esp),%eax;");
    asm("loc_4C9AB8: push %eax;");
    asm("loc_4C9AB9: lea 8(%esi),%edi;");
    asm("loc_4C9ABC: push %edi;");
    asm("loc_4C9ABD: call *%ebp;");
    asm("loc_4C9ABF: add $8,%esp;");
    asm("loc_4C9AC2: test %al,%al;");
    asm("loc_4C9AC4: jne loc_4C9BCD;");
    asm("loc_4C9ACA: mov 0x1C(%esp),%ecx;");
    asm("loc_4C9ACE: mov (%esi),%esi;");
    asm("loc_4C9AD0: cmp 4(%ecx),%esi;");
    asm("loc_4C9AD3: jne loc_4C9AB1;");
    asm("loc_4C9AD5: mov 0x754(%esp),%edi;");
    asm("loc_4C9ADC: mov 4(%edi),%eax;");
    asm("loc_4C9ADF: mov (%edi),%edx;");
    asm("loc_4C9AE1: mov 8(%edi),%ecx;");
    asm("loc_4C9AE4: push %ebx;");
    asm("loc_4C9AE5: mov %eax,0x2C(%esp);");
    asm("loc_4C9AE9: mov 0x30(%edi),%eax;");
    asm("loc_4C9AEC: mov %edx,0x28(%esp);");
    asm("loc_4C9AF0: mov 0xC(%edi),%edx;");
    asm("loc_4C9AF3: mov %ecx,0x30(%esp);");
    asm("loc_4C9AF7: xor %ebx,%ebx;");
    asm("loc_4C9AF9: xor %ecx,%ecx;");
    asm("loc_4C9AFB: cmp %ebx,%eax;");
    asm("loc_4C9AFD: mov %edx,0x34(%esp);");
    asm("loc_4C9B01: mov %eax,0x58(%esp);");
    asm("loc_4C9B05: jle loc_4C9B24;");
    asm("loc_4C9B07: mov %edi,%edx;");
    asm("loc_4C9B09: lea 0x28(%esp),%esi;");
    asm("loc_4C9B0D: lea 0x38(%esp),%eax;");
    asm("loc_4C9B11: sub %esi,%edx;");
    asm("loc_4C9B13: mov (%edx,%eax),%esi;");
    asm("loc_4C9B16: mov %esi,(%eax);");
    asm("loc_4C9B18: mov 0x58(%esp),%esi;");
    asm("loc_4C9B1C: inc %ecx;");
    asm("loc_4C9B1D: add $4,%eax;");
    asm("loc_4C9B20: cmp %esi,%ecx;");
    asm("loc_4C9B22: jl loc_4C9B13;");
    asm("loc_4C9B24: push $0x298;");
    asm("loc_4C9B29: call _sub_5B7E84;");
    asm("loc_4C9B2E: mov %eax,%esi;");
    asm("loc_4C9B30: add $4,%esp;");
    asm("loc_4C9B33: mov %esi,0x18(%esp);");
    asm("loc_4C9B37: cmp %ebx,%esi;");
    asm("loc_4C9B39: mov %ebx,0x750(%esp);");
    asm("loc_4C9B40: je loc_4C9BD8;");
    asm("loc_4C9B46: push $_sub_420D10;");
    asm("loc_4C9B4B: push $_sub_420D40;");
    asm("loc_4C9B50: push $4;");
    asm("loc_4C9B52: push $0x10;");
    asm("loc_4C9B54: lea 4(%esi),%eax;");
    asm("loc_4C9B57: push %eax;");
    asm("loc_4C9B58: call _sub_5B7FBA;");
    asm("loc_4C9B5D: lea 0x44(%esi),%ebp;");
    asm("loc_4C9B60: movb $1,0x750(%esp);");
    asm("loc_4C9B68: mov %ebp,%eax;");
    asm("loc_4C9B6A: mov $4,%ecx;");
    asm("loc_4C9B6F: nop;");
    asm("loc_4C9B70: mov %ebx,(%eax);");
    asm("loc_4C9B72: mov %bl,4(%eax);");
    asm("loc_4C9B75: add $0x84,%eax;");
    asm("loc_4C9B7A: dec %ecx;");
    asm("loc_4C9B7B: jne loc_4C9B70;");
    asm("loc_4C9B7D: lea 0x268(%esi),%edi;");
    asm("loc_4C9B83: mov %edi,%ecx;");
    asm("loc_4C9B85: call _sub_4215B0;");
    asm("loc_4C9B8A: mov %ebx,0x2C(%edi);");
    asm("loc_4C9B8D: mov %ebx,0x28(%edi);");
    asm("loc_4C9B90: mov %ebx,0x24(%edi);");
    asm("loc_4C9B93: mov %ebx,(%esi);");
    asm("loc_4C9B95: lea 0x254(%esi),%ecx;");
    asm("loc_4C9B9B: mov %ebp,%eax;");
    asm("loc_4C9B9D: mov $4,%edx;");
    asm("loc_4C9BA2: mov %ebx,(%eax);");
    asm("loc_4C9BA4: mov %bl,4(%eax);");
    asm("loc_4C9BA7: movl $0xFFFFFFFF,(%ecx);");
    asm("loc_4C9BAD: add $4,%ecx;");
    asm("loc_4C9BB0: add $0x84,%eax;");
    asm("loc_4C9BB5: dec %edx;");
    asm("loc_4C9BB6: jne loc_4C9BA2;");
    asm("loc_4C9BB8: mov 0x758(%esp),%edi;");
    asm("loc_4C9BBF: movl $0x3F800000,0x264(%esi);");
    asm("loc_4C9BC9: mov %esi,%ebp;");
    asm("loc_4C9BCB: jmp loc_4C9BDA;");
    asm("loc_4C9BCD: incl 0x38(%edi);");
    asm("loc_4C9BD0: mov 0x34(%edi),%eax;");
    asm("loc_4C9BD3: jmp loc_4C9D89;");
    asm("loc_4C9BD8: xor %ebp,%ebp;");
    asm("loc_4C9BDA: mov %ebp,%ecx;");
    asm("loc_4C9BDC: movl $0xFFFFFFFF,0x750(%esp);");
    asm("loc_4C9BE7: mov %ebp,0x5C(%esp);");
    asm("loc_4C9BEB: call _sub_4CA4B0;");
    asm("loc_4C9BF0: push %edi;");
    asm("loc_4C9BF1: lea 0x184(%esp),%ecx;");
    asm("loc_4C9BF8: call _sub_4C9F00;");
    asm("loc_4C9BFD: lea 0x180(%esp),%ecx;");
    asm("loc_4C9C04: call _sub_4CA3C0;");
    asm("loc_4C9C09: mov %eax,(%ebp);");
    asm("loc_4C9C0C: calll *_import_5C60E4;");
    asm("loc_4C9C12: mov %eax,0x1C(%esp);");
    asm("loc_4C9C16: cmp %ebx,0x30(%edi);");
    asm("loc_4C9C19: mov %ebx,0x10(%esp);");
    asm("loc_4C9C1D: jle loc_4C9D44;");
    asm("loc_4C9C23: mov 0x758(%esp),%ecx;");
    asm("loc_4C9C2A: add $0x10,%ecx;");
    asm("loc_4C9C2D: lea 4(%ebp),%edi;");
    asm("loc_4C9C30: mov %ecx,0x14(%esp);");
    asm("loc_4C9C34: cmpl $4,0x10(%esp);");
    asm("loc_4C9C39: ja loc_4C9D44;");
    asm("loc_4C9C3F: mov 0x14(%esp),%edx;");
    asm("loc_4C9C43: mov (%edx),%eax;");
    asm("loc_4C9C45: mov 0x1C(%esp),%ecx;");
    asm("loc_4C9C49: push %eax;");
    asm("loc_4C9C4A: calll *_import_5C6198;");
    asm("loc_4C9C50: mov %eax,%esi;");
    asm("loc_4C9C52: cmp %ebx,%esi;");
    asm("loc_4C9C54: je loc_4C9D1B;");
    asm("loc_4C9C5A: lea 0x64(%esp),%ecx;");
    asm("loc_4C9C5E: call _sub_4C9DE0;");
    asm("loc_4C9C63: mov 8(%esi),%eax;");
    asm("loc_4C9C66: cmp %ebx,%eax;");
    asm("loc_4C9C68: movl $2,0x750(%esp);");
    asm("loc_4C9C73: jne loc_4C9C7A;");
    asm("loc_4C9C75: mov _import_5C7078,%eax;");
    asm("loc_4C9C7A: push %eax;");
    asm("loc_4C9C7B: lea 0x68(%esp),%ecx;");
    asm("loc_4C9C7F: call _sub_4CEC20;");
    asm("loc_4C9C84: mov 0x28(%esi),%eax;");
    asm("loc_4C9C87: cmp %ebx,%eax;");
    asm("loc_4C9C89: jne loc_4C9C90;");
    asm("loc_4C9C8B: mov _import_5C7078,%eax;");
    asm("loc_4C9C90: push %eax;");
    asm("loc_4C9C91: lea 0x130(%esp),%ecx;");
    asm("loc_4C9C98: call _sub_4CEBC0;");
    asm("loc_4C9C9D: mov 0x18(%esi),%eax;");
    asm("loc_4C9CA0: cmp %ebx,%eax;");
    asm("loc_4C9CA2: jne loc_4C9CA9;");
    asm("loc_4C9CA4: mov _import_5C7078,%eax;");
    asm("loc_4C9CA9: push %eax;");
    asm("loc_4C9CAA: lea 0xEC(%esp),%ecx;");
    asm("loc_4C9CB1: call _sub_4CEBC0;");
    asm("loc_4C9CB6: mov %ebp,%ecx;");
    asm("loc_4C9CB8: call _sub_4CA480;");
    asm("loc_4C9CBD: push %eax;");
    asm("loc_4C9CBE: lea 0x68(%esp),%ecx;");
    asm("loc_4C9CC2: call _sub_4C9E20;");
    asm("loc_4C9CC7: lea 0x34(%esi),%ecx;");
    asm("loc_4C9CCA: mov %eax,4(%edi);");
    asm("loc_4C9CCD: cmp %ebx,8(%ecx);");
    asm("loc_4C9CD0: je loc_4C9D04;");
    asm("loc_4C9CD2: lea 0x24(%esp),%edx;");
    asm("loc_4C9CD6: push %edx;");
    asm("loc_4C9CD7: call _sub_53E430;");
    asm("loc_4C9CDC: mov (%eax),%eax;");
    asm("loc_4C9CDE: add $8,%eax;");
    asm("loc_4C9CE1: mov 4(%eax),%eax;");
    asm("loc_4C9CE4: cmp %ebx,%eax;");
    asm("loc_4C9CE6: jne loc_4C9CED;");
    asm("loc_4C9CE8: mov _import_5C7078,%eax;");
    asm("loc_4C9CED: push %eax;");
    asm("loc_4C9CEE: lea 0x1C(%esp),%ecx;");
    asm("loc_4C9CF2: call _sub_4C9DB0;");
    asm("loc_4C9CF7: mov 0x18(%esp),%eax;");
    asm("loc_4C9CFB: push %ebx;");
    asm("loc_4C9CFC: push %eax;");
    asm("loc_4C9CFD: mov %edi,%ecx;");
    asm("loc_4C9CFF: call _sub_420F30;");
    asm("loc_4C9D04: lea 0x170(%esp),%ecx;");
    asm("loc_4C9D0B: movl $0xFFFFFFFF,0x750(%esp);");
    asm("loc_4C9D16: call _sub_4DE730;");
    asm("loc_4C9D1B: mov 0x14(%esp),%ecx;");
    asm("loc_4C9D1F: mov 0x10(%esp),%eax;");
    asm("loc_4C9D23: add $4,%ecx;");
    asm("loc_4C9D26: mov %ecx,0x14(%esp);");
    asm("loc_4C9D2A: mov 0x758(%esp),%ecx;");
    asm("loc_4C9D31: mov 0x30(%ecx),%edx;");
    asm("loc_4C9D34: inc %eax;");
    asm("loc_4C9D35: add $0x10,%edi;");
    asm("loc_4C9D38: cmp %edx,%eax;");
    asm("loc_4C9D3A: mov %eax,0x10(%esp);");
    asm("loc_4C9D3E: jl loc_4C9C34;");
    asm("loc_4C9D44: cmp %ebx,(%ebp);");
    asm("loc_4C9D47: jne loc_4C9D65;");
    asm("loc_4C9D49: mov 0x5C(%esp),%ecx;");
    asm("loc_4C9D4D: cmp %ebx,%ecx;");
    asm("loc_4C9D4F: mov %ecx,%esi;");
    asm("loc_4C9D51: je loc_4C9D61;");
    asm("loc_4C9D53: call _sub_4CA530;");
    asm("loc_4C9D58: push %esi;");
    asm("loc_4C9D59: call _sub_5B7E1D;");
    asm("loc_4C9D5E: add $4,%esp;");
    asm("loc_4C9D61: mov %ebx,0x5C(%esp);");
    asm("loc_4C9D65: mov 0x20(%esp),%ecx;");
    asm("loc_4C9D69: mov 4(%ecx),%eax;");
    asm("loc_4C9D6C: lea 0x28(%esp),%edx;");
    asm("loc_4C9D70: push %edx;");
    asm("loc_4C9D71: push %eax;");
    asm("loc_4C9D72: lea 0x24(%esp),%eax;");
    asm("loc_4C9D76: push %eax;");
    asm("loc_4C9D77: movl $1,0x6C(%esp);");
    asm("loc_4C9D7F: call _sub_4CEC80;");
    asm("loc_4C9D84: mov 0x5C(%esp),%eax;");
    asm("loc_4C9D88: pop %ebx;");
    asm("loc_4C9D89: mov 0x744(%esp),%ecx;");
    asm("loc_4C9D90: pop %edi;");
    asm("loc_4C9D91: pop %esi;");
    asm("loc_4C9D92: pop %ebp;");
    asm("loc_4C9D93: mov %ecx,%fs:0;");
    asm("loc_4C9D9A: add $0x744,%esp;");
    asm("loc_4C9DA0: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9DB0() // _sub_4C9DB0
{
    __DEBUG_ASM(4C9DB0);
    // chunk 0x4C9DB0 _sub_4C9DB0
    asm("loc_4C9DB0: push %esi;");
    asm("loc_4C9DB1: mov %ecx,%esi;");
    asm("loc_4C9DB3: calll *_import_5C69A0;");
    asm("loc_4C9DB9: mov 8(%esp),%eax;");
    asm("loc_4C9DBD: push $1;");
    asm("loc_4C9DBF: push %eax;");
    asm("loc_4C9DC0: calll *_import_5C6028;");
    asm("loc_4C9DC6: mov %eax,(%esi);");
    asm("loc_4C9DC8: add $8,%esp;");
    asm("loc_4C9DCB: mov %esi,%eax;");
    asm("loc_4C9DCD: pop %esi;");
    asm("loc_4C9DCE: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9DE0() // _sub_4C9DE0
{
    __DEBUG_ASM(4C9DE0);
    // chunk 0x4C9DE0 _sub_4C9DE0
    asm("loc_4C9DE0: push %ecx;");
    asm("loc_4C9DE1: mov 3(%esp),%dl;");
    asm("loc_4C9DE5: mov %ecx,%eax;");
    asm("loc_4C9DE7: xor %ecx,%ecx;");
    asm("loc_4C9DE9: mov %ecx,(%eax);");
    asm("loc_4C9DEB: mov %cl,4(%eax);");
    asm("loc_4C9DEE: mov %ecx,0x84(%eax);");
    asm("loc_4C9DF4: mov %cl,0x88(%eax);");
    asm("loc_4C9DFA: mov %ecx,0xC8(%eax);");
    asm("loc_4C9E00: mov %cl,0xCC(%eax);");
    asm("loc_4C9E06: mov %dl,0x10C(%eax);");
    asm("loc_4C9E0C: mov %ecx,0x110(%eax);");
    asm("loc_4C9E12: mov %ecx,0x114(%eax);");
    asm("loc_4C9E18: mov %ecx,0x118(%eax);");
    asm("loc_4C9E1E: pop %ecx;");
    asm("loc_4C9E1F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9E20() // _sub_4C9E20
{
    __DEBUG_ASM(4C9E20);
    // chunk 0x4C9E20 _sub_4C9E20
    asm("loc_4C9E20: sub $0x18,%esp;");
    asm("loc_4C9E23: mov _import_5C6DD8,%edx;");
    asm("loc_4C9E29: push %ebx;");
    asm("loc_4C9E2A: push %esi;");
    asm("loc_4C9E2B: push %edi;");
    asm("loc_4C9E2C: push $0;");
    asm("loc_4C9E2E: mov %ecx,%esi;");
    asm("loc_4C9E30: push $0;");
    asm("loc_4C9E32: lea 0x10C(%esi),%ecx;");
    asm("loc_4C9E38: push %ecx;");
    asm("loc_4C9E39: mov (%edx),%ecx;");
    asm("loc_4C9E3B: push $0;");
    asm("loc_4C9E3D: push $0;");
    asm("loc_4C9E3F: lea 4(%esi),%eax;");
    asm("loc_4C9E42: push %ecx;");
    asm("loc_4C9E43: push %eax;");
    asm("loc_4C9E44: mov %eax,0x2C(%esp);");
    asm("loc_4C9E48: call _sub_41C540;");
    asm("loc_4C9E4D: lea 0x28(%esp),%edx;");
    asm("loc_4C9E51: push %edx;");
    asm("loc_4C9E52: mov %eax,%ebx;");
    asm("loc_4C9E54: mov 0x48(%esp),%eax;");
    asm("loc_4C9E58: lea 0xCC(%esi),%edi;");
    asm("loc_4C9E5E: push %edi;");
    asm("loc_4C9E5F: push %eax;");
    asm("loc_4C9E60: movl $0xFFFFFFFF,0x34(%esp);");
    asm("loc_4C9E68: calll *_import_5C64AC;");
    asm("loc_4C9E6E: add $0x28,%esp;");
    asm("loc_4C9E71: test %al,%al;");
    asm("loc_4C9E73: je loc_4C9EC0;");
    asm("loc_4C9E75: lea 0x88(%esi),%eax;");
    asm("loc_4C9E7B: push %ebp;");
    asm("loc_4C9E7C: mov _import_5C6D14,%ebp;");
    asm("loc_4C9E82: push %eax;");
    asm("loc_4C9E83: mov %eax,0x1C(%esp);");
    asm("loc_4C9E87: call *%ebp;");
    asm("loc_4C9E89: mov %eax,0x20(%esp);");
    asm("loc_4C9E8D: mov %edi,%eax;");
    asm("loc_4C9E8F: push %eax;");
    asm("loc_4C9E90: mov %eax,0x28(%esp);");
    asm("loc_4C9E94: call *%ebp;");
    asm("loc_4C9E96: mov _import_5C6D5C,%ecx;");
    asm("loc_4C9E9C: add $8,%esp;");
    asm("loc_4C9E9F: mov %eax,0x24(%esp);");
    asm("loc_4C9EA3: mov (%ecx),%eax;");
    asm("loc_4C9EA5: mov (%eax),%edx;");
    asm("loc_4C9EA7: lea 0x18(%esp),%ecx;");
    asm("loc_4C9EAB: push %ecx;");
    asm("loc_4C9EAC: push %ebx;");
    asm("loc_4C9EAD: lea 0x28(%esp),%ecx;");
    asm("loc_4C9EB1: push %ecx;");
    asm("loc_4C9EB2: mov 0x1C(%esp),%ecx;");
    asm("loc_4C9EB6: push %ecx;");
    asm("loc_4C9EB7: push %eax;");
    asm("loc_4C9EB8: calll *0x18(%edx);");
    asm("loc_4C9EBB: test %eax,%eax;");
    asm("loc_4C9EBD: pop %ebp;");
    asm("loc_4C9EBE: je loc_4C9EE9;");
    asm("loc_4C9EC0: mov 0x10(%esp),%edx;");
    asm("loc_4C9EC4: push %edi;");
    asm("loc_4C9EC5: add $0x88,%esi;");
    asm("loc_4C9ECB: push %esi;");
    asm("loc_4C9ECC: push %edx;");
    asm("loc_4C9ECD: push $0x4E;");
    asm("loc_4C9ECF: push $_data_5D7188;");
    asm("loc_4C9ED4: mov $0x100002,%eax;");
    asm("loc_4C9ED9: push $_data_5D7130;");
    asm("loc_4C9EDE: push %eax;");
    asm("loc_4C9EDF: mov _import_5C6D18,%eax;");
    asm("loc_4C9EE4: calll *(%eax);");
    asm("loc_4C9EE6: add $0x1C,%esp;");
    asm("loc_4C9EE9: pop %edi;");
    asm("loc_4C9EEA: pop %esi;");
    asm("loc_4C9EEB: mov %ebx,%eax;");
    asm("loc_4C9EED: pop %ebx;");
    asm("loc_4C9EEE: add $0x18,%esp;");
    asm("loc_4C9EF1: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4C9F00() // _sub_4C9F00
{
    __DEBUG_ASM(4C9F00);
    // chunk 0x4C9F00 _sub_4C9F00
    asm("loc_4C9F00: push %ebx;");
    asm("loc_4C9F01: push %ebp;");
    asm("loc_4C9F02: push %esi;");
    asm("loc_4C9F03: mov %ecx,%esi;");
    asm("loc_4C9F05: lea 0x68(%esi),%edx;");
    asm("loc_4C9F08: push %edi;");
    asm("loc_4C9F09: xor %ebx,%ebx;");
    asm("loc_4C9F0B: mov %edx,%eax;");
    asm("loc_4C9F0D: mov $8,%ecx;");
    asm("loc_4C9F12: or $0xFFFFFFFF,%edi;");
    asm("loc_4C9F15: mov %ebx,(%eax);");
    asm("loc_4C9F17: mov %ebx,4(%eax);");
    asm("loc_4C9F1A: mov %ebx,8(%eax);");
    asm("loc_4C9F1D: mov %ebx,0xC(%eax);");
    asm("loc_4C9F20: mov %ebx,0x10(%eax);");
    asm("loc_4C9F23: mov %edi,0x14(%eax);");
    asm("loc_4C9F26: add $0x18,%eax;");
    asm("loc_4C9F29: dec %ecx;");
    asm("loc_4C9F2A: jne loc_4C9F15;");
    asm("loc_4C9F2C: lea 0x128(%esi),%eax;");
    asm("loc_4C9F32: mov $8,%ecx;");
    asm("loc_4C9F37: mov %ebx,(%eax);");
    asm("loc_4C9F39: mov %bl,4(%eax);");
    asm("loc_4C9F3C: add $0x94,%eax;");
    asm("loc_4C9F41: dec %ecx;");
    asm("loc_4C9F42: jne loc_4C9F37;");
    asm("loc_4C9F44: mov 0x14(%esp),%eax;");
    asm("loc_4C9F48: mov %ebx,(%esi);");
    asm("loc_4C9F4A: mov %edx,4(%esi);");
    asm("loc_4C9F4D: mov 4(%eax),%edi;");
    asm("loc_4C9F50: calll *_import_5C60E4;");
    asm("loc_4C9F56: cmp %ebx,%edi;");
    asm("loc_4C9F58: je loc_4C9F9C;");
    asm("loc_4C9F5A: push %edi;");
    asm("loc_4C9F5B: push %ebx;");
    asm("loc_4C9F5C: mov %eax,%ecx;");
    asm("loc_4C9F5E: xor %ebp,%ebp;");
    asm("loc_4C9F60: calll *_import_5C619C;");
    asm("loc_4C9F66: cmp %ebx,%eax;");
    asm("loc_4C9F68: je loc_4C9F79;");
    asm("loc_4C9F6A: mov 8(%eax),%eax;");
    asm("loc_4C9F6D: cmp %ebx,%eax;");
    asm("loc_4C9F6F: mov _import_5C7078,%ebp;");
    asm("loc_4C9F75: je loc_4C9F79;");
    asm("loc_4C9F77: mov %eax,%ebp;");
    asm("loc_4C9F79: mov (%esi),%eax;");
    asm("loc_4C9F7B: cmp $8,%eax;");
    asm("loc_4C9F7E: jge loc_4C9F9C;");
    asm("loc_4C9F80: cmp %ebx,%eax;");
    asm("loc_4C9F82: lea 1(%eax),%ecx;");
    asm("loc_4C9F85: mov %ecx,(%esi);");
    asm("loc_4C9F87: je loc_4C9F92;");
    asm("loc_4C9F89: mov %esi,%ecx;");
    asm("loc_4C9F8B: call _sub_4CA2F0;");
    asm("loc_4C9F90: xor %eax,%eax;");
    asm("loc_4C9F92: push %ebp;");
    asm("loc_4C9F93: push %ebx;");
    asm("loc_4C9F94: push %eax;");
    asm("loc_4C9F95: mov %esi,%ecx;");
    asm("loc_4C9F97: call _sub_4CA220;");
    asm("loc_4C9F9C: mov 0x14(%esp),%edx;");
    asm("loc_4C9FA0: mov (%edx),%edi;");
    asm("loc_4C9FA2: calll *_import_5C60E4;");
    asm("loc_4C9FA8: cmp %ebx,%edi;");
    asm("loc_4C9FAA: je loc_4C9FE3;");
    asm("loc_4C9FAC: push %edi;");
    asm("loc_4C9FAD: push $1;");
    asm("loc_4C9FAF: mov %eax,%ecx;");
    asm("loc_4C9FB1: xor %ebp,%ebp;");
    asm("loc_4C9FB3: calll *_import_5C619C;");
    asm("loc_4C9FB9: cmp %ebx,%eax;");
    asm("loc_4C9FBB: je loc_4C9FCC;");
    asm("loc_4C9FBD: mov 8(%eax),%eax;");
    asm("loc_4C9FC0: cmp %ebx,%eax;");
    asm("loc_4C9FC2: mov _import_5C7078,%ebp;");
    asm("loc_4C9FC8: je loc_4C9FCC;");
    asm("loc_4C9FCA: mov %eax,%ebp;");
    asm("loc_4C9FCC: mov (%esi),%eax;");
    asm("loc_4C9FCE: cmp $8,%eax;");
    asm("loc_4C9FD1: jge loc_4C9FE3;");
    asm("loc_4C9FD3: push %ebp;");
    asm("loc_4C9FD4: lea 1(%eax),%ecx;");
    asm("loc_4C9FD7: push $1;");
    asm("loc_4C9FD9: mov %ecx,(%esi);");
    asm("loc_4C9FDB: push %eax;");
    asm("loc_4C9FDC: mov %esi,%ecx;");
    asm("loc_4C9FDE: call _sub_4CA220;");
    asm("loc_4C9FE3: mov 0x14(%esp),%edx;");
    asm("loc_4C9FE7: mov 8(%edx),%edi;");
    asm("loc_4C9FEA: calll *_import_5C60E4;");
    asm("loc_4C9FF0: cmp %ebx,%edi;");
    asm("loc_4C9FF2: je loc_4CA01E;");
    asm("loc_4C9FF4: push %edi;");
    asm("loc_4C9FF5: push $2;");
    asm("loc_4C9FF7: mov %eax,%ecx;");
    asm("loc_4C9FF9: xor %ebp,%ebp;");
    asm("loc_4C9FFB: calll *_import_5C619C;");
    asm("loc_4CA001: cmp %ebx,%eax;");
    asm("loc_4CA003: je loc_4CA014;");
    asm("loc_4CA005: mov 8(%eax),%eax;");
    asm("loc_4CA008: cmp %ebx,%eax;");
    asm("loc_4CA00A: mov _import_5C7078,%ebp;");
    asm("loc_4CA010: je loc_4CA014;");
    asm("loc_4CA012: mov %eax,%ebp;");
    asm("loc_4CA014: push %ebp;");
    asm("loc_4CA015: push $2;");
    asm("loc_4CA017: mov %esi,%ecx;");
    asm("loc_4CA019: call _sub_4CA070;");
    asm("loc_4CA01E: mov 0x14(%esp),%eax;");
    asm("loc_4CA022: mov 0xC(%eax),%edi;");
    asm("loc_4CA025: calll *_import_5C60E4;");
    asm("loc_4CA02B: cmp %ebx,%edi;");
    asm("loc_4CA02D: je loc_4CA066;");
    asm("loc_4CA02F: push %edi;");
    asm("loc_4CA030: push $3;");
    asm("loc_4CA032: mov %eax,%ecx;");
    asm("loc_4CA034: xor %ebp,%ebp;");
    asm("loc_4CA036: calll *_import_5C619C;");
    asm("loc_4CA03C: cmp %ebx,%eax;");
    asm("loc_4CA03E: je loc_4CA04F;");
    asm("loc_4CA040: mov 8(%eax),%eax;");
    asm("loc_4CA043: cmp %ebx,%eax;");
    asm("loc_4CA045: mov _import_5C7078,%ebp;");
    asm("loc_4CA04B: je loc_4CA04F;");
    asm("loc_4CA04D: mov %eax,%ebp;");
    asm("loc_4CA04F: mov (%esi),%eax;");
    asm("loc_4CA051: cmp $8,%eax;");
    asm("loc_4CA054: jge loc_4CA066;");
    asm("loc_4CA056: push %ebp;");
    asm("loc_4CA057: lea 1(%eax),%ecx;");
    asm("loc_4CA05A: push $3;");
    asm("loc_4CA05C: mov %ecx,(%esi);");
    asm("loc_4CA05E: push %eax;");
    asm("loc_4CA05F: mov %esi,%ecx;");
    asm("loc_4CA061: call _sub_4CA220;");
    asm("loc_4CA066: pop %edi;");
    asm("loc_4CA067: mov %esi,%eax;");
    asm("loc_4CA069: pop %esi;");
    asm("loc_4CA06A: pop %ebp;");
    asm("loc_4CA06B: pop %ebx;");
    asm("loc_4CA06C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA070() // _sub_4CA070
{
    __DEBUG_ASM(4CA070);
    // chunk 0x4CA070 _sub_4CA070
    asm("loc_4CA070: sub $8,%esp;");
    asm("loc_4CA073: push %ebx;");
    asm("loc_4CA074: mov %ecx,%ebx;");
    asm("loc_4CA076: mov (%ebx),%edx;");
    asm("loc_4CA078: cmp $8,%edx;");
    asm("loc_4CA07B: mov %ebx,8(%esp);");
    asm("loc_4CA07F: jge loc_4CA20C;");
    asm("loc_4CA085: lea 1(%edx),%eax;");
    asm("loc_4CA088: push %ebp;");
    asm("loc_4CA089: mov %eax,(%ebx);");
    asm("loc_4CA08B: mov 0x14(%esp),%eax;");
    asm("loc_4CA08F: test %eax,%eax;");
    asm("loc_4CA091: push %esi;");
    asm("loc_4CA092: push %edi;");
    asm("loc_4CA093: jne loc_4CA157;");
    asm("loc_4CA099: test %edx,%edx;");
    asm("loc_4CA09B: je loc_4CA157;");
    asm("loc_4CA0A1: lea 0x110(%ebx),%ebp;");
    asm("loc_4CA0A7: lea 0x538(%ebx),%edx;");
    asm("loc_4CA0AD: movl $7,0x10(%esp);");
    asm("loc_4CA0B5: lea -0x94(%edx),%ecx;");
    asm("loc_4CA0BB: test %ecx,%ecx;");
    asm("loc_4CA0BD: jne loc_4CA0C6;");
    asm("loc_4CA0BF: mov %ecx,-4(%edx);");
    asm("loc_4CA0C2: mov %cl,(%edx);");
    asm("loc_4CA0C4: jmp loc_4CA0FF;");
    asm("loc_4CA0C6: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CA0C9: xor %eax,%eax;");
    asm("loc_4CA0CB: lea -0x94(%edx),%esi;");
    asm("loc_4CA0D1: mov %esi,%edi;");
    asm("loc_4CA0D3: repne scas (%edi),%al;");
    asm("loc_4CA0D5: not %ecx;");
    asm("loc_4CA0D7: dec %ecx;");
    asm("loc_4CA0D8: mov %ecx,%eax;");
    asm("loc_4CA0DA: cmp $0x80,%eax;");
    asm("loc_4CA0DF: jb loc_4CA0E6;");
    asm("loc_4CA0E1: mov $0x7F,%eax;");
    asm("loc_4CA0E6: mov %eax,%ecx;");
    asm("loc_4CA0E8: mov %ecx,%ebx;");
    asm("loc_4CA0EA: shr $2,%ecx;");
    asm("loc_4CA0ED: mov %edx,%edi;");
    asm("loc_4CA0EF: rep movsl (%esi),(%edi);");
    asm("loc_4CA0F1: mov %ebx,%ecx;");
    asm("loc_4CA0F3: and $3,%ecx;");
    asm("loc_4CA0F6: rep movsb (%esi),(%edi);");
    asm("loc_4CA0F8: movb $0,(%edx,%eax);");
    asm("loc_4CA0FC: mov %eax,-4(%edx);");
    asm("loc_4CA0FF: mov -8(%edx),%eax;");
    asm("loc_4CA102: mov %eax,0x8C(%edx);");
    asm("loc_4CA108: lea 0x80(%edx),%eax;");
    asm("loc_4CA10E: lea -0x14(%edx),%ecx;");
    asm("loc_4CA111: mov (%ecx),%edi;");
    asm("loc_4CA113: mov %eax,%esi;");
    asm("loc_4CA115: mov %edi,(%esi);");
    asm("loc_4CA117: mov 4(%ecx),%edi;");
    asm("loc_4CA11A: mov 8(%ecx),%ecx;");
    asm("loc_4CA11D: mov %edi,4(%esi);");
    asm("loc_4CA120: mov %ecx,8(%esi);");
    asm("loc_4CA123: lea -0x18(%ebp),%ebx;");
    asm("loc_4CA126: mov %ebp,%edi;");
    asm("loc_4CA128: mov $6,%ecx;");
    asm("loc_4CA12D: mov %ebx,%esi;");
    asm("loc_4CA12F: rep movsl (%esi),(%edi);");
    asm("loc_4CA131: mov %eax,4(%ebp);");
    asm("loc_4CA134: mov 0x10(%esp),%eax;");
    asm("loc_4CA138: mov %edx,0x84(%edx);");
    asm("loc_4CA13E: sub $0x94,%edx;");
    asm("loc_4CA144: dec %eax;");
    asm("loc_4CA145: mov %ebx,%ebp;");
    asm("loc_4CA147: mov %eax,0x10(%esp);");
    asm("loc_4CA14B: jne loc_4CA0B5;");
    asm("loc_4CA151: mov 0x14(%esp),%ebx;");
    asm("loc_4CA155: xor %edx,%edx;");
    asm("loc_4CA157: mov 0x20(%esp),%esi;");
    asm("loc_4CA15B: lea 2(%edx),%ebp;");
    asm("loc_4CA15E: imul $0x94,%ebp;");
    asm("loc_4CA164: add %ebx,%ebp;");
    asm("loc_4CA166: test %esi,%esi;");
    asm("loc_4CA168: jne loc_4CA173;");
    asm("loc_4CA16A: mov %esi,(%ebp);");
    asm("loc_4CA16D: movb $0,4(%ebp);");
    asm("loc_4CA171: jmp loc_4CA1B1;");
    asm("loc_4CA173: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CA176: xor %eax,%eax;");
    asm("loc_4CA178: mov %esi,%edi;");
    asm("loc_4CA17A: repne scas (%edi),%al;");
    asm("loc_4CA17C: not %ecx;");
    asm("loc_4CA17E: dec %ecx;");
    asm("loc_4CA17F: cmp $0x80,%ecx;");
    asm("loc_4CA185: mov %ecx,0x20(%esp);");
    asm("loc_4CA189: jb loc_4CA194;");
    asm("loc_4CA18B: mov $0x7F,%ecx;");
    asm("loc_4CA190: mov %ecx,0x20(%esp);");
    asm("loc_4CA194: mov %ecx,%eax;");
    asm("loc_4CA196: shr $2,%ecx;");
    asm("loc_4CA199: lea 4(%ebp),%edi;");
    asm("loc_4CA19C: rep movsl (%esi),(%edi);");
    asm("loc_4CA19E: mov %eax,%ecx;");
    asm("loc_4CA1A0: mov 0x20(%esp),%eax;");
    asm("loc_4CA1A4: and $3,%ecx;");
    asm("loc_4CA1A7: rep movsb (%esi),(%edi);");
    asm("loc_4CA1A9: movb $0,4(%eax,%ebp);");
    asm("loc_4CA1AE: mov %eax,(%ebp);");
    asm("loc_4CA1B1: mov %edx,%ecx;");
    asm("loc_4CA1B3: imul $0x94,%ecx;");
    asm("loc_4CA1B9: lea (%ecx,%ebx),%eax;");
    asm("loc_4CA1BC: mov _import_5C6DD8,%ecx;");
    asm("loc_4CA1C2: mov (%ecx),%ecx;");
    asm("loc_4CA1C4: mov %ecx,0x1AC(%eax);");
    asm("loc_4CA1CA: lea 0x1AC(%eax),%esi;");
    asm("loc_4CA1D0: lea 0x12C(%eax),%ecx;");
    asm("loc_4CA1D6: mov %ecx,0x1B0(%eax);");
    asm("loc_4CA1DC: lea (%edx,%edx,2),%ecx;");
    asm("loc_4CA1DF: lea (%ebx,%ecx,8),%ecx;");
    asm("loc_4CA1E2: mov %esi,0x6C(%ecx);");
    asm("loc_4CA1E5: xor %esi,%esi;");
    asm("loc_4CA1E7: pop %edi;");
    asm("loc_4CA1E8: mov %esi,0x70(%ecx);");
    asm("loc_4CA1EB: mov %esi,0x74(%ecx);");
    asm("loc_4CA1EE: movl $1,0x68(%ecx);");
    asm("loc_4CA1F5: mov 0x18(%esp),%ecx;");
    asm("loc_4CA1F9: lea 0xF(%edx,%edx,2),%edx;");
    asm("loc_4CA1FD: pop %esi;");
    asm("loc_4CA1FE: movl $1,(%ebx,%edx,8);");
    asm("loc_4CA205: mov %ecx,0x1B8(%eax);");
    asm("loc_4CA20B: pop %ebp;");
    asm("loc_4CA20C: pop %ebx;");
    asm("loc_4CA20D: add $8,%esp;");
    asm("loc_4CA210: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA220() // _sub_4CA220
{
    __DEBUG_ASM(4CA220);
    // chunk 0x4CA220 _sub_4CA220
    asm("loc_4CA220: push %ebx;");
    asm("loc_4CA221: push %ebp;");
    asm("loc_4CA222: mov 0xC(%esp),%ebp;");
    asm("loc_4CA226: lea 2(%ebp),%edx;");
    asm("loc_4CA229: imul $0x94,%edx;");
    asm("loc_4CA22F: push %esi;");
    asm("loc_4CA230: mov 0x18(%esp),%esi;");
    asm("loc_4CA234: mov %ecx,%ebx;");
    asm("loc_4CA236: add %ebx,%edx;");
    asm("loc_4CA238: test %esi,%esi;");
    asm("loc_4CA23A: jne loc_4CA244;");
    asm("loc_4CA23C: mov %esi,(%edx);");
    asm("loc_4CA23E: movb $0,4(%edx);");
    asm("loc_4CA242: jmp loc_4CA283;");
    asm("loc_4CA244: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CA247: push %edi;");
    asm("loc_4CA248: xor %eax,%eax;");
    asm("loc_4CA24A: mov %esi,%edi;");
    asm("loc_4CA24C: repne scas (%edi),%al;");
    asm("loc_4CA24E: not %ecx;");
    asm("loc_4CA250: dec %ecx;");
    asm("loc_4CA251: cmp $0x80,%ecx;");
    asm("loc_4CA257: mov %ecx,0x14(%esp);");
    asm("loc_4CA25B: jb loc_4CA266;");
    asm("loc_4CA25D: mov $0x7F,%ecx;");
    asm("loc_4CA262: mov %ecx,0x14(%esp);");
    asm("loc_4CA266: mov %ecx,%eax;");
    asm("loc_4CA268: shr $2,%ecx;");
    asm("loc_4CA26B: lea 4(%edx),%edi;");
    asm("loc_4CA26E: rep movsl (%esi),(%edi);");
    asm("loc_4CA270: mov %eax,%ecx;");
    asm("loc_4CA272: mov 0x14(%esp),%eax;");
    asm("loc_4CA276: and $3,%ecx;");
    asm("loc_4CA279: rep movsb (%esi),(%edi);");
    asm("loc_4CA27B: movb $0,4(%eax,%edx);");
    asm("loc_4CA280: mov %eax,(%edx);");
    asm("loc_4CA282: pop %edi;");
    asm("loc_4CA283: mov %ebp,%ecx;");
    asm("loc_4CA285: imul $0x94,%ecx;");
    asm("loc_4CA28B: lea (%ecx,%ebx),%eax;");
    asm("loc_4CA28E: mov _import_5C6DD8,%ecx;");
    asm("loc_4CA294: mov (%ecx),%ecx;");
    asm("loc_4CA296: mov %ecx,0x1AC(%eax);");
    asm("loc_4CA29C: lea 0x1AC(%eax),%edx;");
    asm("loc_4CA2A2: lea 0x12C(%eax),%ecx;");
    asm("loc_4CA2A8: mov %ecx,0x1B0(%eax);");
    asm("loc_4CA2AE: lea (%ebp,%ebp,2),%ecx;");
    asm("loc_4CA2B2: lea (%ebx,%ecx,8),%ecx;");
    asm("loc_4CA2B5: mov %edx,0x6C(%ecx);");
    asm("loc_4CA2B8: xor %edx,%edx;");
    asm("loc_4CA2BA: mov %edx,0x70(%ecx);");
    asm("loc_4CA2BD: mov %edx,0x74(%ecx);");
    asm("loc_4CA2C0: pop %esi;");
    asm("loc_4CA2C1: lea 0xF(%ebp,%ebp,2),%edx;");
    asm("loc_4CA2C5: movl $1,0x68(%ecx);");
    asm("loc_4CA2CC: mov 0x10(%esp),%ecx;");
    asm("loc_4CA2D0: pop %ebp;");
    asm("loc_4CA2D1: movl $1,(%ebx,%edx,8);");
    asm("loc_4CA2D8: mov %ecx,0x1B8(%eax);");
    asm("loc_4CA2DE: pop %ebx;");
    asm("loc_4CA2DF: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA2F0() // _sub_4CA2F0
{
    __DEBUG_ASM(4CA2F0);
    // chunk 0x4CA2F0 _sub_4CA2F0
    asm("loc_4CA2F0: push %ecx;");
    asm("loc_4CA2F1: push %ebx;");
    asm("loc_4CA2F2: push %ebp;");
    asm("loc_4CA2F3: push %esi;");
    asm("loc_4CA2F4: push %edi;");
    asm("loc_4CA2F5: lea 0x110(%ecx),%ebx;");
    asm("loc_4CA2FB: lea 0x538(%ecx),%edx;");
    asm("loc_4CA301: movl $7,0x10(%esp);");
    asm("loc_4CA309: lea (%esp),%esp;");
    asm("loc_4CA310: lea -0x94(%edx),%eax;");
    asm("loc_4CA316: test %eax,%eax;");
    asm("loc_4CA318: jne loc_4CA321;");
    asm("loc_4CA31A: mov %eax,-4(%edx);");
    asm("loc_4CA31D: mov %al,(%edx);");
    asm("loc_4CA31F: jmp loc_4CA35A;");
    asm("loc_4CA321: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CA324: xor %eax,%eax;");
    asm("loc_4CA326: lea -0x94(%edx),%esi;");
    asm("loc_4CA32C: mov %esi,%edi;");
    asm("loc_4CA32E: repne scas (%edi),%al;");
    asm("loc_4CA330: not %ecx;");
    asm("loc_4CA332: dec %ecx;");
    asm("loc_4CA333: mov %ecx,%eax;");
    asm("loc_4CA335: cmp $0x80,%eax;");
    asm("loc_4CA33A: jb loc_4CA341;");
    asm("loc_4CA33C: mov $0x7F,%eax;");
    asm("loc_4CA341: mov %eax,%ecx;");
    asm("loc_4CA343: mov %ecx,%ebp;");
    asm("loc_4CA345: shr $2,%ecx;");
    asm("loc_4CA348: mov %edx,%edi;");
    asm("loc_4CA34A: rep movsl (%esi),(%edi);");
    asm("loc_4CA34C: mov %ebp,%ecx;");
    asm("loc_4CA34E: and $3,%ecx;");
    asm("loc_4CA351: rep movsb (%esi),(%edi);");
    asm("loc_4CA353: movb $0,(%edx,%eax);");
    asm("loc_4CA357: mov %eax,-4(%edx);");
    asm("loc_4CA35A: mov -8(%edx),%ecx;");
    asm("loc_4CA35D: mov %ecx,0x8C(%edx);");
    asm("loc_4CA363: lea 0x80(%edx),%eax;");
    asm("loc_4CA369: lea -0x14(%edx),%ecx;");
    asm("loc_4CA36C: mov (%ecx),%edi;");
    asm("loc_4CA36E: mov %eax,%esi;");
    asm("loc_4CA370: mov %edi,(%esi);");
    asm("loc_4CA372: mov 4(%ecx),%edi;");
    asm("loc_4CA375: mov 8(%ecx),%ecx;");
    asm("loc_4CA378: mov %edi,4(%esi);");
    asm("loc_4CA37B: mov %ecx,8(%esi);");
    asm("loc_4CA37E: lea -0x18(%ebx),%ebp;");
    asm("loc_4CA381: mov %ebx,%edi;");
    asm("loc_4CA383: mov $6,%ecx;");
    asm("loc_4CA388: mov %ebp,%esi;");
    asm("loc_4CA38A: rep movsl (%esi),(%edi);");
    asm("loc_4CA38C: mov %eax,4(%ebx);");
    asm("loc_4CA38F: mov 0x10(%esp),%eax;");
    asm("loc_4CA393: mov %edx,0x84(%edx);");
    asm("loc_4CA399: sub $0x94,%edx;");
    asm("loc_4CA39F: dec %eax;");
    asm("loc_4CA3A0: mov %ebp,%ebx;");
    asm("loc_4CA3A2: mov %eax,0x10(%esp);");
    asm("loc_4CA3A6: jne loc_4CA310;");
    asm("loc_4CA3AC: pop %edi;");
    asm("loc_4CA3AD: pop %esi;");
    asm("loc_4CA3AE: pop %ebp;");
    asm("loc_4CA3AF: pop %ebx;");
    asm("loc_4CA3B0: pop %ecx;");
    asm("loc_4CA3B1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA3C0() // _sub_4CA3C0
{
    __DEBUG_ASM(4CA3C0);
    // chunk 0x4CA3C0 _sub_4CA3C0
    asm("loc_4CA3C0: sub $0x24,%esp;");
    asm("loc_4CA3C3: push %ebx;");
    asm("loc_4CA3C4: push %esi;");
    asm("loc_4CA3C5: mov %ecx,%esi;");
    asm("loc_4CA3C7: mov (%esi),%ecx;");
    asm("loc_4CA3C9: xor %eax,%eax;");
    asm("loc_4CA3CB: test %ecx,%ecx;");
    asm("loc_4CA3CD: push %edi;");
    asm("loc_4CA3CE: mov %eax,0xC(%esp);");
    asm("loc_4CA3D2: je loc_4CA477;");
    asm("loc_4CA3D8: xor %edi,%edi;");
    asm("loc_4CA3DA: test %ecx,%ecx;");
    asm("loc_4CA3DC: jle loc_4CA405;");
    asm("loc_4CA3DE: xor %ebx,%ebx;");
    asm("loc_4CA3E0: mov 4(%esi),%eax;");
    asm("loc_4CA3E3: mov 4(%eax,%ebx),%ecx;");
    asm("loc_4CA3E7: mov 4(%ecx),%edx;");
    asm("loc_4CA3EA: push $0xFFFFFFFF;");
    asm("loc_4CA3EC: push $1;");
    asm("loc_4CA3EE: push %edx;");
    asm("loc_4CA3EF: call _sub_41AA50;");
    asm("loc_4CA3F4: add $0xC,%esp;");
    asm("loc_4CA3F7: mov %eax,0x10(%esp,%edi,4);");
    asm("loc_4CA3FB: mov (%esi),%eax;");
    asm("loc_4CA3FD: inc %edi;");
    asm("loc_4CA3FE: add $0x18,%ebx;");
    asm("loc_4CA401: cmp %eax,%edi;");
    asm("loc_4CA403: jl loc_4CA3E0;");
    asm("loc_4CA405: mov _import_5C6D58,%eax;");
    asm("loc_4CA40A: mov (%eax),%eax;");
    asm("loc_4CA40C: mov (%eax),%ecx;");
    asm("loc_4CA40E: push $0;");
    asm("loc_4CA410: push $0;");
    asm("loc_4CA412: push $0;");
    asm("loc_4CA414: push %esi;");
    asm("loc_4CA415: lea 0x1C(%esp),%edx;");
    asm("loc_4CA419: push %edx;");
    asm("loc_4CA41A: push %eax;");
    asm("loc_4CA41B: calll *0x14(%ecx);");
    asm("loc_4CA41E: test %eax,%eax;");
    asm("loc_4CA420: je loc_4CA44D;");
    asm("loc_4CA422: mov (%esi),%ecx;");
    asm("loc_4CA424: mov _import_5C6D18,%edx;");
    asm("loc_4CA42A: push %ecx;");
    asm("loc_4CA42B: push $0xD5;");
    asm("loc_4CA430: push $_data_5D7188;");
    asm("loc_4CA435: mov $0x100002,%eax;");
    asm("loc_4CA43A: push $_data_5D71A0;");
    asm("loc_4CA43F: push %eax;");
    asm("loc_4CA440: calll *(%edx);");
    asm("loc_4CA442: add $0x14,%esp;");
    asm("loc_4CA445: movl $0,0xC(%esp);");
    asm("loc_4CA44D: mov (%esi),%eax;");
    asm("loc_4CA44F: xor %edi,%edi;");
    asm("loc_4CA451: test %eax,%eax;");
    asm("loc_4CA453: jle loc_4CA473;");
    asm("loc_4CA455: lea 0x10(%esp),%ebx;");
    asm("loc_4CA459: lea (%esp),%esp;");
    asm("loc_4CA460: push %ebx;");
    asm("loc_4CA461: call _sub_41B030;");
    asm("loc_4CA466: mov (%esi),%eax;");
    asm("loc_4CA468: add $4,%esp;");
    asm("loc_4CA46B: inc %edi;");
    asm("loc_4CA46C: add $4,%ebx;");
    asm("loc_4CA46F: cmp %eax,%edi;");
    asm("loc_4CA471: jl loc_4CA460;");
    asm("loc_4CA473: mov 0xC(%esp),%eax;");
    asm("loc_4CA477: pop %edi;");
    asm("loc_4CA478: pop %esi;");
    asm("loc_4CA479: pop %ebx;");
    asm("loc_4CA47A: add $0x24,%esp;");
    asm("loc_4CA47D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA480() // _sub_4CA480
{
    __DEBUG_ASM(4CA480);
    // chunk 0x4CA480 _sub_4CA480
    asm("loc_4CA480: push %ecx;");
    asm("loc_4CA481: mov (%ecx),%ecx;");
    asm("loc_4CA483: or $0xFFFFFFFF,%eax;");
    asm("loc_4CA486: test %ecx,%ecx;");
    asm("loc_4CA488: mov %eax,(%esp);");
    asm("loc_4CA48C: je loc_4CA4A7;");
    asm("loc_4CA48E: mov _import_5C6D58,%eax;");
    asm("loc_4CA493: mov (%eax),%eax;");
    asm("loc_4CA495: mov (%eax),%edx;");
    asm("loc_4CA497: push %esi;");
    asm("loc_4CA498: lea 4(%esp),%esi;");
    asm("loc_4CA49C: push %esi;");
    asm("loc_4CA49D: push %ecx;");
    asm("loc_4CA49E: push %eax;");
    asm("loc_4CA49F: calll *0x48(%edx);");
    asm("loc_4CA4A2: mov 4(%esp),%eax;");
    asm("loc_4CA4A6: pop %esi;");
    asm("loc_4CA4A7: pop %ecx;");
    asm("loc_4CA4A8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA4B0() // _sub_4CA4B0
{
    __DEBUG_ASM(4CA4B0);
    // chunk 0x4CA4B0 _sub_4CA4B0
    asm("loc_4CA4B0: push %esi;");
    asm("loc_4CA4B1: mov %ecx,%esi;");
    asm("loc_4CA4B3: mov (%esi),%ecx;");
    asm("loc_4CA4B5: test %ecx,%ecx;");
    asm("loc_4CA4B7: push %edi;");
    asm("loc_4CA4B8: je loc_4CA4F6;");
    asm("loc_4CA4BA: mov _import_5C6D58,%eax;");
    asm("loc_4CA4BF: mov (%eax),%eax;");
    asm("loc_4CA4C1: mov (%eax),%edx;");
    asm("loc_4CA4C3: push %ecx;");
    asm("loc_4CA4C4: push %eax;");
    asm("loc_4CA4C5: calll *0x24(%edx);");
    asm("loc_4CA4C8: lea 0x254(%esi),%ecx;");
    asm("loc_4CA4CE: lea 0x44(%esi),%eax;");
    asm("loc_4CA4D1: mov $4,%edx;");
    asm("loc_4CA4D6: cmpl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CA4D9: je loc_4CA4EB;");
    asm("loc_4CA4DB: movl $0,(%eax);");
    asm("loc_4CA4E1: movb $0,4(%eax);");
    asm("loc_4CA4E5: movl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CA4EB: add $4,%ecx;");
    asm("loc_4CA4EE: add $0x84,%eax;");
    asm("loc_4CA4F3: dec %edx;");
    asm("loc_4CA4F4: jne loc_4CA4D6;");
    asm("loc_4CA4F6: push %ebp;");
    asm("loc_4CA4F7: lea 4(%esi),%edi;");
    asm("loc_4CA4FA: mov $4,%ebp;");
    asm("loc_4CA4FF: nop;");
    asm("loc_4CA500: mov %edi,%ecx;");
    asm("loc_4CA502: call _sub_420F70;");
    asm("loc_4CA507: add $0x10,%edi;");
    asm("loc_4CA50A: dec %ebp;");
    asm("loc_4CA50B: jne loc_4CA500;");
    asm("loc_4CA50D: mov (%esi),%ecx;");
    asm("loc_4CA50F: test %ecx,%ecx;");
    asm("loc_4CA511: pop %ebp;");
    asm("loc_4CA512: je loc_4CA528;");
    asm("loc_4CA514: mov _import_5C6D58,%eax;");
    asm("loc_4CA519: mov (%eax),%eax;");
    asm("loc_4CA51B: mov (%eax),%edx;");
    asm("loc_4CA51D: push %ecx;");
    asm("loc_4CA51E: push %eax;");
    asm("loc_4CA51F: calll *0x18(%edx);");
    asm("loc_4CA522: movl $0,(%esi);");
    asm("loc_4CA528: pop %edi;");
    asm("loc_4CA529: pop %esi;");
    asm("loc_4CA52A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA530() // _sub_4CA530
{
    __DEBUG_ASM(4CA530);
    // chunk 0x4CA530 _sub_4CA530
    asm("loc_4CA530: push $0xFFFFFFFF;");
    asm("loc_4CA532: push $_sub_5BD9A6;");
    asm("loc_4CA537: mov %fs:0,%eax;");
    asm("loc_4CA53D: push %eax;");
    asm("loc_4CA53E: mov %esp,%fs:0;");
    asm("loc_4CA545: push %ecx;");
    asm("loc_4CA546: push %ebx;");
    asm("loc_4CA547: push %ebp;");
    asm("loc_4CA548: push %esi;");
    asm("loc_4CA549: mov %ecx,%esi;");
    asm("loc_4CA54B: push %edi;");
    asm("loc_4CA54C: mov %esi,0x10(%esp);");
    asm("loc_4CA550: mov (%esi),%ecx;");
    asm("loc_4CA552: test %ecx,%ecx;");
    asm("loc_4CA554: movl $0,0x1C(%esp);");
    asm("loc_4CA55C: je loc_4CA5A0;");
    asm("loc_4CA55E: mov _import_5C6D58,%eax;");
    asm("loc_4CA563: mov (%eax),%eax;");
    asm("loc_4CA565: mov (%eax),%edx;");
    asm("loc_4CA567: push %ecx;");
    asm("loc_4CA568: push %eax;");
    asm("loc_4CA569: calll *0x24(%edx);");
    asm("loc_4CA56C: lea 0x254(%esi),%ecx;");
    asm("loc_4CA572: lea 0x44(%esi),%eax;");
    asm("loc_4CA575: mov $4,%edx;");
    asm("loc_4CA57A: lea (%ebx),%ebx;");
    asm("loc_4CA580: cmpl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CA583: je loc_4CA595;");
    asm("loc_4CA585: movl $0,(%eax);");
    asm("loc_4CA58B: movb $0,4(%eax);");
    asm("loc_4CA58F: movl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CA595: add $4,%ecx;");
    asm("loc_4CA598: add $0x84,%eax;");
    asm("loc_4CA59D: dec %edx;");
    asm("loc_4CA59E: jne loc_4CA580;");
    asm("loc_4CA5A0: lea 4(%esi),%ebx;");
    asm("loc_4CA5A3: mov %ebx,%edi;");
    asm("loc_4CA5A5: mov $4,%ebp;");
    asm("loc_4CA5AA: lea (%ebx),%ebx;");
    asm("loc_4CA5B0: mov %edi,%ecx;");
    asm("loc_4CA5B2: call _sub_420F70;");
    asm("loc_4CA5B7: add $0x10,%edi;");
    asm("loc_4CA5BA: dec %ebp;");
    asm("loc_4CA5BB: jne loc_4CA5B0;");
    asm("loc_4CA5BD: mov (%esi),%ecx;");
    asm("loc_4CA5BF: test %ecx,%ecx;");
    asm("loc_4CA5C1: je loc_4CA5D7;");
    asm("loc_4CA5C3: mov _import_5C6D58,%eax;");
    asm("loc_4CA5C8: mov (%eax),%eax;");
    asm("loc_4CA5CA: mov (%eax),%edx;");
    asm("loc_4CA5CC: push %ecx;");
    asm("loc_4CA5CD: push %eax;");
    asm("loc_4CA5CE: calll *0x18(%edx);");
    asm("loc_4CA5D1: movl $0,(%esi);");
    asm("loc_4CA5D7: push $_sub_420D10;");
    asm("loc_4CA5DC: push $4;");
    asm("loc_4CA5DE: push $0x10;");
    asm("loc_4CA5E0: push %ebx;");
    asm("loc_4CA5E1: movl $0xFFFFFFFF,0x2C(%esp);");
    asm("loc_4CA5E9: call _sub_5B7EC6;");
    asm("loc_4CA5EE: mov 0x14(%esp),%ecx;");
    asm("loc_4CA5F2: pop %edi;");
    asm("loc_4CA5F3: pop %esi;");
    asm("loc_4CA5F4: pop %ebp;");
    asm("loc_4CA5F5: pop %ebx;");
    asm("loc_4CA5F6: mov %ecx,%fs:0;");
    asm("loc_4CA5FD: add $0x10,%esp;");
    asm("loc_4CA600: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA610() // _sub_4CA610
{
    __DEBUG_ASM(4CA610);
    // chunk 0x4CA610 _sub_4CA610
    asm("loc_4CA610: push %esi;");
    asm("loc_4CA611: mov %ecx,%esi;");
    asm("loc_4CA613: mov 0x110(%esi),%eax;");
    asm("loc_4CA619: push %eax;");
    asm("loc_4CA61A: call _sub_5B7E1D;");
    asm("loc_4CA61F: xor %eax,%eax;");
    asm("loc_4CA621: add $4,%esp;");
    asm("loc_4CA624: mov %eax,0x110(%esi);");
    asm("loc_4CA62A: mov %eax,0x114(%esi);");
    asm("loc_4CA630: mov %eax,0x118(%esi);");
    asm("loc_4CA636: pop %esi;");
    asm("loc_4CA637: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA640() // __cfltcvt_init_2
{
    __DEBUG_ASM(4CA640);
    // chunk 0x4CA640 _sub_4CA640
    asm("loc_4CA640: movl $0,_data_6735A4;");
    asm("loc_4CA64A: movl $0,_data_6735A8;");
    asm("loc_4CA654: movl $0xBF800000,_data_6735AC;");
    asm("loc_4CA65E: movl $0,_data_6735B0;");
    asm("loc_4CA668: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA670() // _sub_4CA670
{
    __DEBUG_ASM(4CA670);
    // chunk 0x4CA670 _sub_4CA670
    asm("loc_4CA670: decl 0xC(%ecx);");
    asm("loc_4CA673: jne loc_4CA683;");
    asm("loc_4CA675: movl $0,(%ecx);");
    asm("loc_4CA67B: mov _data_6108F8,%eax;");
    asm("loc_4CA680: mov %eax,8(%ecx);");
    asm("loc_4CA683: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA690() // _sub_4CA690
{
    __DEBUG_ASM(4CA690);
    // chunk 0x4CA690 _sub_4CA690
    asm("loc_4CA690: push $0xFFFFFFFF;");
    asm("loc_4CA692: push $_sub_5BD9DF;");
    asm("loc_4CA697: mov %fs:0,%eax;");
    asm("loc_4CA69D: push %eax;");
    asm("loc_4CA69E: mov %esp,%fs:0;");
    asm("loc_4CA6A5: sub $0x1C,%esp;");
    asm("loc_4CA6A8: push %ebx;");
    asm("loc_4CA6A9: push %ebp;");
    asm("loc_4CA6AA: push %esi;");
    asm("loc_4CA6AB: mov %ecx,%esi;");
    asm("loc_4CA6AD: xor %ebx,%ebx;");
    asm("loc_4CA6AF: push %edi;");
    asm("loc_4CA6B0: mov %esi,0x18(%esp);");
    asm("loc_4CA6B4: mov %ebx,(%esi);");
    asm("loc_4CA6B6: mov %ebx,4(%esi);");
    asm("loc_4CA6B9: push %ebx;");
    asm("loc_4CA6BA: mov %ebx,0x38(%esp);");
    asm("loc_4CA6BE: calll *_import_5C645C;");
    asm("loc_4CA6C4: mov 0x13(%esp),%al;");
    asm("loc_4CA6C8: movl $1,0x34(%esp);");
    asm("loc_4CA6D0: mov %al,0x24(%esi);");
    asm("loc_4CA6D3: mov %ebx,0x28(%esi);");
    asm("loc_4CA6D6: mov %ebx,0x2C(%esi);");
    asm("loc_4CA6D9: mov %ebx,0x30(%esi);");
    asm("loc_4CA6DC: mov %esi,%ecx;");
    asm("loc_4CA6DE: movb $2,0x34(%esp);");
    asm("loc_4CA6E3: call _sub_4CA910;");
    asm("loc_4CA6E8: lea 0x38(%esi),%edi;");
    asm("loc_4CA6EB: lea 0x50(%edi),%ecx;");
    asm("loc_4CA6EE: movl $3,0x34(%esp);");
    asm("loc_4CA6F6: mov %edi,0x1C(%esp);");
    asm("loc_4CA6FA: call _sub_48E600;");
    asm("loc_4CA6FF: mov $4,%eax;");
    asm("loc_4CA704: mov %al,0x34(%esp);");
    asm("loc_4CA708: lea 0x78(%edi),%ebp;");
    asm("loc_4CA70B: mov %eax,0x14(%esp);");
    asm("loc_4CA70F: nop;");
    asm("loc_4CA710: mov %ebp,%ecx;");
    asm("loc_4CA712: call _sub_4B5150;");
    asm("loc_4CA717: mov 0x14(%esp),%eax;");
    asm("loc_4CA71B: add $0x30,%ebp;");
    asm("loc_4CA71E: dec %eax;");
    asm("loc_4CA71F: mov %eax,0x14(%esp);");
    asm("loc_4CA723: jne loc_4CA710;");
    asm("loc_4CA725: movl $0,0x20(%esp);");
    asm("loc_4CA72D: mov 0x20(%esp),%edx;");
    asm("loc_4CA731: lea 0x30(%edi),%ecx;");
    asm("loc_4CA734: mov %edx,(%ecx);");
    asm("loc_4CA736: movl $0,0x24(%esp);");
    asm("loc_4CA73E: mov 0x24(%esp),%eax;");
    asm("loc_4CA742: mov %eax,4(%ecx);");
    asm("loc_4CA745: movl $0xC0000000,0x28(%esp);");
    asm("loc_4CA74D: mov 0x28(%esp),%edx;");
    asm("loc_4CA751: mov %edx,8(%ecx);");
    asm("loc_4CA754: lea 0x24(%edi),%eax;");
    asm("loc_4CA757: movl $0x3E99999A,0x20(%esp);");
    asm("loc_4CA75F: mov 0x20(%esp),%ecx;");
    asm("loc_4CA763: mov %ecx,(%eax);");
    asm("loc_4CA765: mov %bl,(%edi);");
    asm("loc_4CA767: movl $0x3E99999A,0x24(%esp);");
    asm("loc_4CA76F: mov 0x24(%esp),%edx;");
    asm("loc_4CA773: mov %edx,4(%eax);");
    asm("loc_4CA776: mov %bl,0x4C(%edi);");
    asm("loc_4CA779: mov %bl,0x4D(%edi);");
    asm("loc_4CA77C: mov %ebx,0x44(%edi);");
    asm("loc_4CA77F: mov %ebx,4(%edi);");
    asm("loc_4CA782: mov %ebx,8(%edi);");
    asm("loc_4CA785: movb $1,0x4E(%edi);");
    asm("loc_4CA789: movl $0x3F000000,0x48(%edi);");
    asm("loc_4CA790: movl $0xBF800000,0x28(%esp);");
    asm("loc_4CA798: mov 0x28(%esp),%ecx;");
    asm("loc_4CA79C: mov %ecx,8(%eax);");
    asm("loc_4CA79F: mov 0x2C(%esp),%ecx;");
    asm("loc_4CA7A3: mov $0x3E4CCCCD,%eax;");
    asm("loc_4CA7A8: mov %eax,0x3C(%edi);");
    asm("loc_4CA7AB: mov %eax,0x40(%edi);");
    asm("loc_4CA7AE: mov $1,%eax;");
    asm("loc_4CA7B3: mov %eax,0xC(%edi);");
    asm("loc_4CA7B6: mov %eax,0x10(%edi);");
    asm("loc_4CA7B9: pop %edi;");
    asm("loc_4CA7BA: mov %ebx,0x170(%esi);");
    asm("loc_4CA7C0: mov %bl,0x174(%esi);");
    asm("loc_4CA7C6: mov %ebx,0x1B4(%esi);");
    asm("loc_4CA7CC: mov %ebx,0x1B8(%esi);");
    asm("loc_4CA7D2: mov %ebx,0x1C0(%esi);");
    asm("loc_4CA7D8: mov %ebx,0x1C4(%esi);");
    asm("loc_4CA7DE: mov %ebx,0x1C8(%esi);");
    asm("loc_4CA7E4: mov %ebx,0x1CC(%esi);");
    asm("loc_4CA7EA: mov %ebx,0x1BC(%esi);");
    asm("loc_4CA7F0: mov %esi,%eax;");
    asm("loc_4CA7F2: pop %esi;");
    asm("loc_4CA7F3: pop %ebp;");
    asm("loc_4CA7F4: pop %ebx;");
    asm("loc_4CA7F5: mov %ecx,%fs:0;");
    asm("loc_4CA7FC: add $0x28,%esp;");
    asm("loc_4CA7FF: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA800() // _sub_4CA800
{
    __DEBUG_ASM(4CA800);
    // chunk 0x4CA800 _sub_4CA800
    asm("loc_4CA800: push $0xFFFFFFFF;");
    asm("loc_4CA802: push $_sub_5BDA03;");
    asm("loc_4CA807: mov %fs:0,%eax;");
    asm("loc_4CA80D: push %eax;");
    asm("loc_4CA80E: mov %esp,%fs:0;");
    asm("loc_4CA815: push %ecx;");
    asm("loc_4CA816: push %ebx;");
    asm("loc_4CA817: push %edi;");
    asm("loc_4CA818: mov %ecx,%edi;");
    asm("loc_4CA81A: mov %edi,8(%esp);");
    asm("loc_4CA81E: mov 0xC(%edi),%ecx;");
    asm("loc_4CA821: xor %ebx,%ebx;");
    asm("loc_4CA823: cmp %ebx,%ecx;");
    asm("loc_4CA825: movl $1,0x14(%esp);");
    asm("loc_4CA82D: je loc_4CA840;");
    asm("loc_4CA82F: mov (%ecx),%eax;");
    asm("loc_4CA831: calll *0x60(%eax);");
    asm("loc_4CA834: mov 0xC(%edi),%eax;");
    asm("loc_4CA837: mov (%eax),%ecx;");
    asm("loc_4CA839: push %eax;");
    asm("loc_4CA83A: calll *8(%ecx);");
    asm("loc_4CA83D: mov %ebx,0xC(%edi);");
    asm("loc_4CA840: mov 0x2C(%edi),%eax;");
    asm("loc_4CA843: push %esi;");
    asm("loc_4CA844: mov 0x28(%edi),%esi;");
    asm("loc_4CA847: cmp %eax,%esi;");
    asm("loc_4CA849: je loc_4CA882;");
    asm("loc_4CA84B: nop;");
    asm("loc_4CA84C: lea (%esp),%esp;");
    asm("loc_4CA850: mov 4(%esi),%ecx;");
    asm("loc_4CA853: cmp %ebx,%ecx;");
    asm("loc_4CA855: je loc_4CA865;");
    asm("loc_4CA857: cmpb $1,8(%esi);");
    asm("loc_4CA85B: jne loc_4CA865;");
    asm("loc_4CA85D: mov (%ecx),%edx;");
    asm("loc_4CA85F: calll *0x10(%edx);");
    asm("loc_4CA862: mov %bl,8(%esi);");
    asm("loc_4CA865: mov 0xC(%esi),%ecx;");
    asm("loc_4CA868: cmp %ebx,%ecx;");
    asm("loc_4CA86A: lea 0xC(%esi),%eax;");
    asm("loc_4CA86D: je loc_4CA878;");
    asm("loc_4CA86F: push %eax;");
    asm("loc_4CA870: call _sub_489DC0;");
    asm("loc_4CA875: add $4,%esp;");
    asm("loc_4CA878: mov 0x2C(%edi),%eax;");
    asm("loc_4CA87B: add $0x10,%esi;");
    asm("loc_4CA87E: cmp %eax,%esi;");
    asm("loc_4CA880: jne loc_4CA850;");
    asm("loc_4CA882: mov 0x2C(%edi),%eax;");
    asm("loc_4CA885: mov 0x28(%edi),%ecx;");
    asm("loc_4CA888: lea 0x24(%edi),%esi;");
    asm("loc_4CA88B: push %eax;");
    asm("loc_4CA88C: push %ecx;");
    asm("loc_4CA88D: mov %esi,%ecx;");
    asm("loc_4CA88F: call _sub_501F80;");
    asm("loc_4CA894: cmp %bl,0x14(%edi);");
    asm("loc_4CA897: je loc_4CA8BD;");
    asm("loc_4CA899: call _sub_428DE0;");
    asm("loc_4CA89E: decl _data_6735B0;");
    asm("loc_4CA8A4: jne loc_4CA8BA;");
    asm("loc_4CA8A6: mov _data_6108F8,%eax;");
    asm("loc_4CA8AB: movl $0,_data_6735A4;");
    asm("loc_4CA8B5: mov %eax,_data_6735AC;");
    asm("loc_4CA8BA: mov %bl,0x14(%edi);");
    asm("loc_4CA8BD: mov %edi,%ecx;");
    asm("loc_4CA8BF: call _sub_4CA910;");
    asm("loc_4CA8C4: mov 4(%esi),%eax;");
    asm("loc_4CA8C7: push %eax;");
    asm("loc_4CA8C8: call _sub_5B7E1D;");
    asm("loc_4CA8CD: mov %ebx,4(%esi);");
    asm("loc_4CA8D0: mov %ebx,8(%esi);");
    asm("loc_4CA8D3: mov %ebx,0xC(%esi);");
    asm("loc_4CA8D6: mov (%edi),%eax;");
    asm("loc_4CA8D8: add $4,%esp;");
    asm("loc_4CA8DB: cmp %ebx,%eax;");
    asm("loc_4CA8DD: movl $0xFFFFFFFF,0x18(%esp);");
    asm("loc_4CA8E5: pop %esi;");
    asm("loc_4CA8E6: je loc_4CA8F1;");
    asm("loc_4CA8E8: push %ebx;");
    asm("loc_4CA8E9: mov %edi,%ecx;");
    asm("loc_4CA8EB: calll *_import_5C62A8;");
    asm("loc_4CA8F1: mov 0xC(%esp),%ecx;");
    asm("loc_4CA8F5: pop %edi;");
    asm("loc_4CA8F6: pop %ebx;");
    asm("loc_4CA8F7: mov %ecx,%fs:0;");
    asm("loc_4CA8FE: add $0x10,%esp;");
    asm("loc_4CA901: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA910() // _sub_4CA910
{
    __DEBUG_ASM(4CA910);
    // chunk 0x4CA910 _sub_4CA910
    asm("loc_4CA910: push %ebx;");
    asm("loc_4CA911: push %esi;");
    asm("loc_4CA912: mov %ecx,%esi;");
    asm("loc_4CA914: mov (%esi),%eax;");
    asm("loc_4CA916: xor %ebx,%ebx;");
    asm("loc_4CA918: cmp %ebx,%eax;");
    asm("loc_4CA91A: je loc_4CA923;");
    asm("loc_4CA91C: push %ebx;");
    asm("loc_4CA91D: calll *_import_5C62A8;");
    asm("loc_4CA923: mov $1,%al;");
    asm("loc_4CA925: mov %ebx,0xC(%esi);");
    asm("loc_4CA928: mov %ebx,0x10(%esi);");
    asm("loc_4CA92B: mov %bl,0x14(%esi);");
    asm("loc_4CA92E: mov %bl,0x15(%esi);");
    asm("loc_4CA931: mov %ebx,0x18(%esi);");
    asm("loc_4CA934: mov %ebx,0x1C(%esi);");
    asm("loc_4CA937: mov %al,8(%esi);");
    asm("loc_4CA93A: mov %al,0x20(%esi);");
    asm("loc_4CA93D: pop %esi;");
    asm("loc_4CA93E: pop %ebx;");
    asm("loc_4CA93F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CA940() // _sub_4CA940
{
    __DEBUG_ASM(4CA940);
    // chunk 0x4CA940 _sub_4CA940
    asm("loc_4CA940: push $0xFFFFFFFF;");
    asm("loc_4CA942: push $_sub_5BDA41;");
    asm("loc_4CA947: mov %fs:0,%eax;");
    asm("loc_4CA94D: push %eax;");
    asm("loc_4CA94E: mov %esp,%fs:0;");
    asm("loc_4CA955: sub $8,%esp;");
    asm("loc_4CA958: push %ebx;");
    asm("loc_4CA959: push %ebp;");
    asm("loc_4CA95A: push %esi;");
    asm("loc_4CA95B: mov %ecx,%esi;");
    asm("loc_4CA95D: push %edi;");
    asm("loc_4CA95E: mov %esi,0x10(%esp);");
    asm("loc_4CA962: mov 0x1BC(%esi),%ebp;");
    asm("loc_4CA968: xor %ebx,%ebx;");
    asm("loc_4CA96A: cmp %ebx,%ebp;");
    asm("loc_4CA96C: movl $1,0x20(%esp);");
    asm("loc_4CA974: je loc_4CA9A9;");
    asm("loc_4CA976: mov 0xC(%ebp),%eax;");
    asm("loc_4CA979: cmp %ebx,%eax;");
    asm("loc_4CA97B: je loc_4CA992;");
    asm("loc_4CA97D: lea (%ecx),%ecx;");
    asm("loc_4CA980: mov 8(%eax),%edi;");
    asm("loc_4CA983: push %eax;");
    asm("loc_4CA984: call _sub_43D2A0;");
    asm("loc_4CA989: add $4,%esp;");
    asm("loc_4CA98C: cmp %ebx,%edi;");
    asm("loc_4CA98E: mov %edi,%eax;");
    asm("loc_4CA990: jne loc_4CA980;");
    asm("loc_4CA992: mov (%ebp),%eax;");
    asm("loc_4CA995: mov %ebp,%ecx;");
    asm("loc_4CA997: calll *0x28(%eax);");
    asm("loc_4CA99A: mov (%ebp),%edx;");
    asm("loc_4CA99D: push $1;");
    asm("loc_4CA99F: mov %ebp,%ecx;");
    asm("loc_4CA9A1: calll *(%edx);");
    asm("loc_4CA9A3: mov %ebx,0x1BC(%esi);");
    asm("loc_4CA9A9: mov 0xC(%esi),%ecx;");
    asm("loc_4CA9AC: cmp %ebx,%ecx;");
    asm("loc_4CA9AE: je loc_4CA9C1;");
    asm("loc_4CA9B0: mov (%ecx),%eax;");
    asm("loc_4CA9B2: calll *0x60(%eax);");
    asm("loc_4CA9B5: mov 0xC(%esi),%eax;");
    asm("loc_4CA9B8: mov (%eax),%ecx;");
    asm("loc_4CA9BA: push %eax;");
    asm("loc_4CA9BB: calll *8(%ecx);");
    asm("loc_4CA9BE: mov %ebx,0xC(%esi);");
    asm("loc_4CA9C1: mov %esi,%ecx;");
    asm("loc_4CA9C3: call _sub_4CAAE0;");
    asm("loc_4CA9C8: cmp %bl,0x14(%esi);");
    asm("loc_4CA9CB: je loc_4CA9DF;");
    asm("loc_4CA9CD: call _sub_428DE0;");
    asm("loc_4CA9D2: mov $_data_6735A4,%ecx;");
    asm("loc_4CA9D7: call _sub_4CA670;");
    asm("loc_4CA9DC: mov %bl,0x14(%esi);");
    asm("loc_4CA9DF: mov %esi,%ecx;");
    asm("loc_4CA9E1: call _sub_4CA910;");
    asm("loc_4CA9E6: cmp %ebx,0x170(%esi);");
    asm("loc_4CA9EC: je loc_4CA9F4;");
    asm("loc_4CA9EE: mov %ebx,0x170(%esi);");
    asm("loc_4CA9F4: lea 0x38(%esi),%eax;");
    asm("loc_4CA9F7: mov %bl,0x174(%esi);");
    asm("loc_4CA9FD: mov %ebx,0x1C0(%esi);");
    asm("loc_4CAA03: mov %ebx,0x1C4(%esi);");
    asm("loc_4CAA09: mov %ebx,0x1C8(%esi);");
    asm("loc_4CAA0F: mov %ebx,0x1CC(%esi);");
    asm("loc_4CAA15: mov %eax,0x14(%esp);");
    asm("loc_4CAA19: lea 0x50(%eax),%edi;");
    asm("loc_4CAA1C: mov %edi,%ecx;");
    asm("loc_4CAA1E: movb $2,0x20(%esp);");
    asm("loc_4CAA23: call _sub_420D60;");
    asm("loc_4CAA28: test %al,%al;");
    asm("loc_4CAA2A: je loc_4CAA33;");
    asm("loc_4CAA2C: mov %edi,%ecx;");
    asm("loc_4CAA2E: call _sub_59EEE0;");
    asm("loc_4CAA33: mov %edi,%ecx;");
    asm("loc_4CAA35: mov %bl,0x20(%esp);");
    asm("loc_4CAA39: call _sub_59EF20;");
    asm("loc_4CAA3E: mov 0xC(%esi),%ecx;");
    asm("loc_4CAA41: cmp %ebx,%ecx;");
    asm("loc_4CAA43: movl $4,0x20(%esp);");
    asm("loc_4CAA4B: je loc_4CAA5E;");
    asm("loc_4CAA4D: mov (%ecx),%edx;");
    asm("loc_4CAA4F: calll *0x60(%edx);");
    asm("loc_4CAA52: mov 0xC(%esi),%eax;");
    asm("loc_4CAA55: mov (%eax),%ecx;");
    asm("loc_4CAA57: push %eax;");
    asm("loc_4CAA58: calll *8(%ecx);");
    asm("loc_4CAA5B: mov %ebx,0xC(%esi);");
    asm("loc_4CAA5E: mov %esi,%ecx;");
    asm("loc_4CAA60: call _sub_4CAAE0;");
    asm("loc_4CAA65: cmp %bl,0x14(%esi);");
    asm("loc_4CAA68: je loc_4CAA90;");
    asm("loc_4CAA6A: call _sub_428DE0;");
    asm("loc_4CAA6F: decl _data_6735B0;");
    asm("loc_4CAA75: jne loc_4CAA8D;");
    asm("loc_4CAA77: mov _data_6108F8,%edx;");
    asm("loc_4CAA7D: movl $0,_data_6735A4;");
    asm("loc_4CAA87: mov %edx,_data_6735AC;");
    asm("loc_4CAA8D: mov %bl,0x14(%esi);");
    asm("loc_4CAA90: mov %esi,%ecx;");
    asm("loc_4CAA92: call _sub_4CA910;");
    asm("loc_4CAA97: mov 0x28(%esi),%eax;");
    asm("loc_4CAA9A: push %eax;");
    asm("loc_4CAA9B: call _sub_5B7E1D;");
    asm("loc_4CAAA0: mov %ebx,0x28(%esi);");
    asm("loc_4CAAA3: mov %ebx,0x2C(%esi);");
    asm("loc_4CAAA6: mov %ebx,0x30(%esi);");
    asm("loc_4CAAA9: mov (%esi),%eax;");
    asm("loc_4CAAAB: add $4,%esp;");
    asm("loc_4CAAAE: cmp %ebx,%eax;");
    asm("loc_4CAAB0: movl $0xFFFFFFFF,0x20(%esp);");
    asm("loc_4CAAB8: je loc_4CAAC3;");
    asm("loc_4CAABA: push %ebx;");
    asm("loc_4CAABB: mov %esi,%ecx;");
    asm("loc_4CAABD: calll *_import_5C62A8;");
    asm("loc_4CAAC3: mov 0x18(%esp),%ecx;");
    asm("loc_4CAAC7: pop %edi;");
    asm("loc_4CAAC8: pop %esi;");
    asm("loc_4CAAC9: pop %ebp;");
    asm("loc_4CAACA: pop %ebx;");
    asm("loc_4CAACB: mov %ecx,%fs:0;");
    asm("loc_4CAAD2: add $0x14,%esp;");
    asm("loc_4CAAD5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CAAE0() // _sub_4CAAE0
{
    __DEBUG_ASM(4CAAE0);
    // chunk 0x4CAAE0 _sub_4CAAE0
    asm("loc_4CAAE0: push %ebx;");
    asm("loc_4CAAE1: push %esi;");
    asm("loc_4CAAE2: push %edi;");
    asm("loc_4CAAE3: mov %ecx,%edi;");
    asm("loc_4CAAE5: mov 0x28(%edi),%esi;");
    asm("loc_4CAAE8: cmp 0x2C(%edi),%esi;");
    asm("loc_4CAAEB: je loc_4CAB2D;");
    asm("loc_4CAAED: xor %ebx,%ebx;");
    asm("loc_4CAAEF: nop;");
    asm("loc_4CAAF0: mov 4(%esi),%ecx;");
    asm("loc_4CAAF3: cmp %ebx,%ecx;");
    asm("loc_4CAAF5: je loc_4CAB05;");
    asm("loc_4CAAF7: cmpb $1,8(%esi);");
    asm("loc_4CAAFB: jne loc_4CAB05;");
    asm("loc_4CAAFD: mov (%ecx),%eax;");
    asm("loc_4CAAFF: calll *0x10(%eax);");
    asm("loc_4CAB02: mov %bl,8(%esi);");
    asm("loc_4CAB05: mov 0xC(%esi),%eax;");
    asm("loc_4CAB08: cmp %ebx,%eax;");
    asm("loc_4CAB0A: je loc_4CAB23;");
    asm("loc_4CAB0C: mov %eax,%ecx;");
    asm("loc_4CAB0E: cmp %ebx,%ecx;");
    asm("loc_4CAB10: je loc_4CAB23;");
    asm("loc_4CAB12: mov (%ecx),%edx;");
    asm("loc_4CAB14: calll *0x60(%edx);");
    asm("loc_4CAB17: mov 0xC(%esi),%eax;");
    asm("loc_4CAB1A: mov (%eax),%ecx;");
    asm("loc_4CAB1C: push %eax;");
    asm("loc_4CAB1D: calll *8(%ecx);");
    asm("loc_4CAB20: mov %ebx,0xC(%esi);");
    asm("loc_4CAB23: mov 0x2C(%edi),%eax;");
    asm("loc_4CAB26: add $0x10,%esi;");
    asm("loc_4CAB29: cmp %eax,%esi;");
    asm("loc_4CAB2B: jne loc_4CAAF0;");
    asm("loc_4CAB2D: mov 0x2C(%edi),%edx;");
    asm("loc_4CAB30: mov 0x28(%edi),%ecx;");
    asm("loc_4CAB33: mov %edx,%eax;");
    asm("loc_4CAB35: cmp %edx,%eax;");
    asm("loc_4CAB37: je loc_4CAB65;");
    asm("loc_4CAB39: push %ebp;");
    asm("loc_4CAB3A: lea (%ebx),%ebx;");
    asm("loc_4CAB40: mov %eax,%esi;");
    asm("loc_4CAB42: mov (%esi),%ebp;");
    asm("loc_4CAB44: mov %ecx,%ebx;");
    asm("loc_4CAB46: mov %ebp,(%ebx);");
    asm("loc_4CAB48: mov 4(%esi),%ebp;");
    asm("loc_4CAB4B: mov %ebp,4(%ebx);");
    asm("loc_4CAB4E: mov 8(%esi),%ebp;");
    asm("loc_4CAB51: mov %ebp,8(%ebx);");
    asm("loc_4CAB54: mov 0xC(%esi),%esi;");
    asm("loc_4CAB57: add $0x10,%eax;");
    asm("loc_4CAB5A: add $0x10,%ecx;");
    asm("loc_4CAB5D: cmp %edx,%eax;");
    asm("loc_4CAB5F: mov %esi,0xC(%ebx);");
    asm("loc_4CAB62: jne loc_4CAB40;");
    asm("loc_4CAB64: pop %ebp;");
    asm("loc_4CAB65: mov %ecx,0x2C(%edi);");
    asm("loc_4CAB68: pop %edi;");
    asm("loc_4CAB69: pop %esi;");
    asm("loc_4CAB6A: pop %ebx;");
    asm("loc_4CAB6B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CAB70() // _sub_4CAB70
{
    __DEBUG_ASM(4CAB70);
    // chunk 0x4CAB70 _sub_4CAB70
    asm("loc_4CAB70: push $0xFFFFFFFF;");
    asm("loc_4CAB72: push $_sub_5BDBFB;");
    asm("loc_4CAB77: mov %fs:0,%eax;");
    asm("loc_4CAB7D: push %eax;");
    asm("loc_4CAB7E: mov %esp,%fs:0;");
    asm("loc_4CAB85: push %ecx;");
    asm("loc_4CAB86: push %esi;");
    asm("loc_4CAB87: mov %ecx,4(%esp);");
    asm("loc_4CAB8B: lea 0x50(%ecx),%esi;");
    asm("loc_4CAB8E: mov %esi,%ecx;");
    asm("loc_4CAB90: movl $0,0x10(%esp);");
    asm("loc_4CAB98: call _sub_420D60;");
    asm("loc_4CAB9D: test %al,%al;");
    asm("loc_4CAB9F: je loc_4CABA8;");
    asm("loc_4CABA1: mov %esi,%ecx;");
    asm("loc_4CABA3: call _sub_59EEE0;");
    asm("loc_4CABA8: mov %esi,%ecx;");
    asm("loc_4CABAA: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4CABB2: call _sub_59EF20;");
    asm("loc_4CABB7: mov 8(%esp),%ecx;");
    asm("loc_4CABBB: pop %esi;");
    asm("loc_4CABBC: mov %ecx,%fs:0;");
    asm("loc_4CABC3: add $0x10,%esp;");
    asm("loc_4CABC6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CABD0() // _sub_4CABD0
{
    __DEBUG_ASM(4CABD0);
    // chunk 0x4CABD0 _sub_4CABD0
    asm("loc_4CABD0: push %ebx;");
    asm("loc_4CABD1: push %ebp;");
    asm("loc_4CABD2: push %esi;");
    asm("loc_4CABD3: push %edi;");
    asm("loc_4CABD4: mov %ecx,%edi;");
    asm("loc_4CABD6: mov 0x1BC(%edi),%ebp;");
    asm("loc_4CABDC: xor %ebx,%ebx;");
    asm("loc_4CABDE: cmp %ebx,%ebp;");
    asm("loc_4CABE0: je loc_4CAC19;");
    asm("loc_4CABE2: mov 0xC(%ebp),%eax;");
    asm("loc_4CABE5: cmp %ebx,%eax;");
    asm("loc_4CABE7: je loc_4CAC02;");
    asm("loc_4CABE9: lea (%esp),%esp;");
    asm("loc_4CABF0: mov 8(%eax),%esi;");
    asm("loc_4CABF3: push %eax;");
    asm("loc_4CABF4: call _sub_43D2A0;");
    asm("loc_4CABF9: add $4,%esp;");
    asm("loc_4CABFC: cmp %ebx,%esi;");
    asm("loc_4CABFE: mov %esi,%eax;");
    asm("loc_4CAC00: jne loc_4CABF0;");
    asm("loc_4CAC02: mov (%ebp),%eax;");
    asm("loc_4CAC05: mov %ebp,%ecx;");
    asm("loc_4CAC07: calll *0x28(%eax);");
    asm("loc_4CAC0A: mov (%ebp),%edx;");
    asm("loc_4CAC0D: push $1;");
    asm("loc_4CAC0F: mov %ebp,%ecx;");
    asm("loc_4CAC11: calll *(%edx);");
    asm("loc_4CAC13: mov %ebx,0x1BC(%edi);");
    asm("loc_4CAC19: mov 0xC(%edi),%ecx;");
    asm("loc_4CAC1C: cmp %ebx,%ecx;");
    asm("loc_4CAC1E: je loc_4CAC31;");
    asm("loc_4CAC20: mov (%ecx),%eax;");
    asm("loc_4CAC22: calll *0x60(%eax);");
    asm("loc_4CAC25: mov 0xC(%edi),%eax;");
    asm("loc_4CAC28: mov (%eax),%ecx;");
    asm("loc_4CAC2A: push %eax;");
    asm("loc_4CAC2B: calll *8(%ecx);");
    asm("loc_4CAC2E: mov %ebx,0xC(%edi);");
    asm("loc_4CAC31: mov 0x28(%edi),%esi;");
    asm("loc_4CAC34: cmp 0x2C(%edi),%esi;");
    asm("loc_4CAC37: je loc_4CAC7D;");
    asm("loc_4CAC39: lea (%esp),%esp;");
    asm("loc_4CAC40: mov 4(%esi),%ecx;");
    asm("loc_4CAC43: cmp %ebx,%ecx;");
    asm("loc_4CAC45: je loc_4CAC55;");
    asm("loc_4CAC47: cmpb $1,8(%esi);");
    asm("loc_4CAC4B: jne loc_4CAC55;");
    asm("loc_4CAC4D: mov (%ecx),%edx;");
    asm("loc_4CAC4F: calll *0x10(%edx);");
    asm("loc_4CAC52: mov %bl,8(%esi);");
    asm("loc_4CAC55: mov 0xC(%esi),%eax;");
    asm("loc_4CAC58: cmp %ebx,%eax;");
    asm("loc_4CAC5A: je loc_4CAC73;");
    asm("loc_4CAC5C: mov %eax,%ecx;");
    asm("loc_4CAC5E: cmp %ebx,%ecx;");
    asm("loc_4CAC60: je loc_4CAC73;");
    asm("loc_4CAC62: mov (%ecx),%eax;");
    asm("loc_4CAC64: calll *0x60(%eax);");
    asm("loc_4CAC67: mov 0xC(%esi),%eax;");
    asm("loc_4CAC6A: mov (%eax),%ecx;");
    asm("loc_4CAC6C: push %eax;");
    asm("loc_4CAC6D: calll *8(%ecx);");
    asm("loc_4CAC70: mov %ebx,0xC(%esi);");
    asm("loc_4CAC73: mov 0x2C(%edi),%eax;");
    asm("loc_4CAC76: add $0x10,%esi;");
    asm("loc_4CAC79: cmp %eax,%esi;");
    asm("loc_4CAC7B: jne loc_4CAC40;");
    asm("loc_4CAC7D: lea 0x24(%edi),%ecx;");
    asm("loc_4CAC80: call _sub_4CD230;");
    asm("loc_4CAC85: cmp %bl,0x14(%edi);");
    asm("loc_4CAC88: je loc_4CACB0;");
    asm("loc_4CAC8A: call _sub_428DE0;");
    asm("loc_4CAC8F: decl _data_6735B0;");
    asm("loc_4CAC95: jne loc_4CACAD;");
    asm("loc_4CAC97: mov _data_6108F8,%edx;");
    asm("loc_4CAC9D: movl $0,_data_6735A4;");
    asm("loc_4CACA7: mov %edx,_data_6735AC;");
    asm("loc_4CACAD: mov %bl,0x14(%edi);");
    asm("loc_4CACB0: push %ebx;");
    asm("loc_4CACB1: mov %edi,%ecx;");
    asm("loc_4CACB3: calll *_import_5C645C;");
    asm("loc_4CACB9: movb $1,8(%edi);");
    asm("loc_4CACBD: mov %ebx,0xC(%edi);");
    asm("loc_4CACC0: mov %ebx,0x10(%edi);");
    asm("loc_4CACC3: mov %bl,0x14(%edi);");
    asm("loc_4CACC6: mov %bl,0x15(%edi);");
    asm("loc_4CACC9: mov %ebx,0x18(%edi);");
    asm("loc_4CACCC: mov %ebx,0x1C(%edi);");
    asm("loc_4CACCF: movb $1,0x20(%edi);");
    asm("loc_4CACD3: cmp %ebx,0x170(%edi);");
    asm("loc_4CACD9: je loc_4CACE1;");
    asm("loc_4CACDB: mov %ebx,0x170(%edi);");
    asm("loc_4CACE1: mov %bl,0x174(%edi);");
    asm("loc_4CACE7: mov %ebx,0x1C0(%edi);");
    asm("loc_4CACED: mov %ebx,0x1C4(%edi);");
    asm("loc_4CACF3: mov %ebx,0x1C8(%edi);");
    asm("loc_4CACF9: mov %ebx,0x1CC(%edi);");
    asm("loc_4CACFF: pop %edi;");
    asm("loc_4CAD00: pop %esi;");
    asm("loc_4CAD01: pop %ebp;");
    asm("loc_4CAD02: pop %ebx;");
    asm("loc_4CAD03: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CAD10() // _sub_4CAD10
{
    __DEBUG_ASM(4CAD10);
    // chunk 0x4CAD10 _sub_4CAD10
    asm("loc_4CAD10: push %ebx;");
    asm("loc_4CAD11: push %ebp;");
    asm("loc_4CAD12: push %esi;");
    asm("loc_4CAD13: mov %ecx,%esi;");
    asm("loc_4CAD15: mov 0x1BC(%esi),%ebp;");
    asm("loc_4CAD1B: xor %ebx,%ebx;");
    asm("loc_4CAD1D: cmp %ebx,%ebp;");
    asm("loc_4CAD1F: push %edi;");
    asm("loc_4CAD20: je loc_4CAD59;");
    asm("loc_4CAD22: mov 0xC(%ebp),%eax;");
    asm("loc_4CAD25: cmp %ebx,%eax;");
    asm("loc_4CAD27: je loc_4CAD42;");
    asm("loc_4CAD29: lea (%esp),%esp;");
    asm("loc_4CAD30: mov 8(%eax),%edi;");
    asm("loc_4CAD33: push %eax;");
    asm("loc_4CAD34: call _sub_43D2A0;");
    asm("loc_4CAD39: add $4,%esp;");
    asm("loc_4CAD3C: cmp %ebx,%edi;");
    asm("loc_4CAD3E: mov %edi,%eax;");
    asm("loc_4CAD40: jne loc_4CAD30;");
    asm("loc_4CAD42: mov (%ebp),%eax;");
    asm("loc_4CAD45: mov %ebp,%ecx;");
    asm("loc_4CAD47: calll *0x28(%eax);");
    asm("loc_4CAD4A: mov (%ebp),%edx;");
    asm("loc_4CAD4D: push $1;");
    asm("loc_4CAD4F: mov %ebp,%ecx;");
    asm("loc_4CAD51: calll *(%edx);");
    asm("loc_4CAD53: mov %ebx,0x1BC(%esi);");
    asm("loc_4CAD59: mov 0xC(%esi),%ecx;");
    asm("loc_4CAD5C: cmp %ebx,%ecx;");
    asm("loc_4CAD5E: je loc_4CAD71;");
    asm("loc_4CAD60: mov (%ecx),%eax;");
    asm("loc_4CAD62: calll *0x60(%eax);");
    asm("loc_4CAD65: mov 0xC(%esi),%eax;");
    asm("loc_4CAD68: mov (%eax),%ecx;");
    asm("loc_4CAD6A: push %eax;");
    asm("loc_4CAD6B: calll *8(%ecx);");
    asm("loc_4CAD6E: mov %ebx,0xC(%esi);");
    asm("loc_4CAD71: mov %esi,%ecx;");
    asm("loc_4CAD73: call _sub_4CAAE0;");
    asm("loc_4CAD78: cmp %bl,0x14(%esi);");
    asm("loc_4CAD7B: je loc_4CADA3;");
    asm("loc_4CAD7D: call _sub_428DE0;");
    asm("loc_4CAD82: decl _data_6735B0;");
    asm("loc_4CAD88: jne loc_4CADA0;");
    asm("loc_4CAD8A: mov _data_6108F8,%edx;");
    asm("loc_4CAD90: movl $0,_data_6735A4;");
    asm("loc_4CAD9A: mov %edx,_data_6735AC;");
    asm("loc_4CADA0: mov %bl,0x14(%esi);");
    asm("loc_4CADA3: mov %esi,%ecx;");
    asm("loc_4CADA5: call _sub_4CA910;");
    asm("loc_4CADAA: cmp %ebx,0x170(%esi);");
    asm("loc_4CADB0: je loc_4CADB8;");
    asm("loc_4CADB2: mov %ebx,0x170(%esi);");
    asm("loc_4CADB8: mov 0x14(%esp),%edi;");
    asm("loc_4CADBC: lea 0x1CC(%esi),%edx;");
    asm("loc_4CADC2: push %edx;");
    asm("loc_4CADC3: lea 0x1C8(%esi),%ecx;");
    asm("loc_4CADC9: push %ecx;");
    asm("loc_4CADCA: lea 0x1C4(%esi),%eax;");
    asm("loc_4CADD0: push %eax;");
    asm("loc_4CADD1: mov %ebx,(%eax);");
    asm("loc_4CADD3: mov 0x24(%esp),%eax;");
    asm("loc_4CADD7: push %eax;");
    asm("loc_4CADD8: push %ebx;");
    asm("loc_4CADD9: push %ebx;");
    asm("loc_4CADDA: mov %ebx,(%ecx);");
    asm("loc_4CADDC: push %edi;");
    asm("loc_4CADDD: mov %esi,%ecx;");
    asm("loc_4CADDF: mov %bl,0x174(%esi);");
    asm("loc_4CADE5: mov %ebx,0x1C0(%esi);");
    asm("loc_4CADEB: mov %ebx,(%edx);");
    asm("loc_4CADED: call _sub_4CAE10;");
    asm("loc_4CADF2: mov 0x90(%edi),%ecx;");
    asm("loc_4CADF8: pop %edi;");
    asm("loc_4CADF9: mov %ecx,0x1B8(%esi);");
    asm("loc_4CADFF: pop %esi;");
    asm("loc_4CAE00: pop %ebp;");
    asm("loc_4CAE01: pop %ebx;");
    asm("loc_4CAE02: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CAE10() // _sub_4CAE10
{
    __DEBUG_ASM(4CAE10);
    // chunk 0x4CAE10 _sub_4CAE10
    asm("loc_4CAE10: sub $0x264,%esp;");
    asm("loc_4CAE16: mov 0x278(%esp),%eax;");
    asm("loc_4CAE1D: mov 0x280(%esp),%edx;");
    asm("loc_4CAE24: push %ebx;");
    asm("loc_4CAE25: mov %ecx,%ebx;");
    asm("loc_4CAE27: mov 0x280(%esp),%ecx;");
    asm("loc_4CAE2E: push %ebp;");
    asm("loc_4CAE2F: movb $0,0x15(%ebx);");
    asm("loc_4CAE33: xor %ebp,%ebp;");
    asm("loc_4CAE35: mov %ebp,(%eax);");
    asm("loc_4CAE37: mov %ebp,(%ecx);");
    asm("loc_4CAE39: mov 0x27C(%esp),%cl;");
    asm("loc_4CAE40: push %esi;");
    asm("loc_4CAE41: mov %ebp,(%edx);");
    asm("loc_4CAE43: push %edi;");
    asm("loc_4CAE44: mov 0x278(%esp),%edi;");
    asm("loc_4CAE4B: mov 0x8C(%edi),%eax;");
    asm("loc_4CAE51: mov %eax,0x18(%ebx);");
    asm("loc_4CAE54: mov %cl,0x20(%ebx);");
    asm("loc_4CAE57: mov 0x3C(%edi),%edx;");
    asm("loc_4CAE5A: push %edx;");
    asm("loc_4CAE5B: call _sub_430AB0;");
    asm("loc_4CAE60: mov 0x28(%ebx),%esi;");
    asm("loc_4CAE63: mov %eax,0x1C(%esp);");
    asm("loc_4CAE67: mov 0x2C(%ebx),%eax;");
    asm("loc_4CAE6A: add $4,%esp;");
    asm("loc_4CAE6D: cmp %eax,%esi;");
    asm("loc_4CAE6F: je loc_4CAEAF;");
    asm("loc_4CAE71: mov 4(%esi),%ecx;");
    asm("loc_4CAE74: cmp %ebp,%ecx;");
    asm("loc_4CAE76: je loc_4CAE87;");
    asm("loc_4CAE78: cmpb $1,8(%esi);");
    asm("loc_4CAE7C: jne loc_4CAE87;");
    asm("loc_4CAE7E: mov (%ecx),%eax;");
    asm("loc_4CAE80: calll *0x10(%eax);");
    asm("loc_4CAE83: movb $0,8(%esi);");
    asm("loc_4CAE87: mov 0xC(%esi),%eax;");
    asm("loc_4CAE8A: cmp %ebp,%eax;");
    asm("loc_4CAE8C: je loc_4CAEA5;");
    asm("loc_4CAE8E: mov %eax,%ecx;");
    asm("loc_4CAE90: cmp %ebp,%ecx;");
    asm("loc_4CAE92: je loc_4CAEA5;");
    asm("loc_4CAE94: mov (%ecx),%edx;");
    asm("loc_4CAE96: calll *0x60(%edx);");
    asm("loc_4CAE99: mov 0xC(%esi),%eax;");
    asm("loc_4CAE9C: mov (%eax),%ecx;");
    asm("loc_4CAE9E: push %eax;");
    asm("loc_4CAE9F: calll *8(%ecx);");
    asm("loc_4CAEA2: mov %ebp,0xC(%esi);");
    asm("loc_4CAEA5: mov 0x2C(%ebx),%eax;");
    asm("loc_4CAEA8: add $0x10,%esi;");
    asm("loc_4CAEAB: cmp %eax,%esi;");
    asm("loc_4CAEAD: jne loc_4CAE71;");
    asm("loc_4CAEAF: mov 0x2C(%ebx),%edx;");
    asm("loc_4CAEB2: mov 0x28(%ebx),%eax;");
    asm("loc_4CAEB5: lea 0x24(%ebx),%ecx;");
    asm("loc_4CAEB8: push %edx;");
    asm("loc_4CAEB9: push %eax;");
    asm("loc_4CAEBA: call _sub_501F80;");
    asm("loc_4CAEBF: mov 0x88(%edi),%eax;");
    asm("loc_4CAEC5: test %eax,%eax;");
    asm("loc_4CAEC7: mov %ebp,0x14(%esp);");
    asm("loc_4CAECB: je loc_4CAF59;");
    asm("loc_4CAED1: mov _data_67ECA8,%edx;");
    asm("loc_4CAED7: push $0x100;");
    asm("loc_4CAEDC: lea 0x78(%esp),%ecx;");
    asm("loc_4CAEE0: push %ecx;");
    asm("loc_4CAEE1: push %eax;");
    asm("loc_4CAEE2: push %edx;");
    asm("loc_4CAEE3: call _sub_4347E0;");
    asm("loc_4CAEE8: add $0x10,%esp;");
    asm("loc_4CAEEB: test %eax,%eax;");
    asm("loc_4CAEED: je loc_4CAF30;");
    asm("loc_4CAEEF: lea 0x74(%esp),%esi;");
    asm("loc_4CAEF3: mov (%esi),%ax;");
    asm("loc_4CAEF6: cmp $0x20,%ax;");
    asm("loc_4CAEFA: je loc_4CAF08;");
    asm("loc_4CAEFC: cmp $9,%ax;");
    asm("loc_4CAF00: je loc_4CAF08;");
    asm("loc_4CAF02: cmp $0x2C,%ax;");
    asm("loc_4CAF06: jne loc_4CAF0D;");
    asm("loc_4CAF08: add $2,%esi;");
    asm("loc_4CAF0B: jmp loc_4CAEF3;");
    asm("loc_4CAF0D: push $0xA;");
    asm("loc_4CAF0F: lea 0x14(%esp),%eax;");
    asm("loc_4CAF13: push %eax;");
    asm("loc_4CAF14: push %esi;");
    asm("loc_4CAF15: calll *_import_5C7104;");
    asm("loc_4CAF1B: mov 0x1C(%esp),%ecx;");
    asm("loc_4CAF1F: add $0xC,%esp;");
    asm("loc_4CAF22: cmp %esi,%ecx;");
    asm("loc_4CAF24: jbe loc_4CAF9F;");
    asm("loc_4CAF26: mov %eax,0x34(%esp,%ebp,4);");
    asm("loc_4CAF2A: inc %ebp;");
    asm("loc_4CAF2B: mov %ecx,%esi;");
    asm("loc_4CAF2D: jmp loc_4CAEF3;");
    asm("loc_4CAF2F: nop;");
    asm("loc_4CAF30: mov 0x88(%edi),%ecx;");
    asm("loc_4CAF36: mov _import_5C6D18,%edx;");
    asm("loc_4CAF3C: push %ecx;");
    asm("loc_4CAF3D: push $0x2E8;");
    asm("loc_4CAF42: push $_data_5D7220;");
    asm("loc_4CAF47: mov $0x100001,%eax;");
    asm("loc_4CAF4C: push $_data_5D73B8;");
    asm("loc_4CAF51: push %eax;");
    asm("loc_4CAF52: calll *(%edx);");
    asm("loc_4CAF54: add $0x14,%esp;");
    asm("loc_4CAF57: jmp loc_4CAFA3;");
    asm("loc_4CAF59: mov 0x84(%edi),%eax;");
    asm("loc_4CAF5F: cmp $1,%eax;");
    asm("loc_4CAF62: jle loc_4CAF84;");
    asm("loc_4CAF64: push %eax;");
    asm("loc_4CAF65: mov _import_5C6D18,%eax;");
    asm("loc_4CAF6A: push $0x2F3;");
    asm("loc_4CAF6F: push $_data_5D7220;");
    asm("loc_4CAF74: mov $0x100002,%ecx;");
    asm("loc_4CAF79: push $_data_5D7368;");
    asm("loc_4CAF7E: push %ecx;");
    asm("loc_4CAF7F: calll *(%eax);");
    asm("loc_4CAF81: add $0x14,%esp;");
    asm("loc_4CAF84: mov 0x84(%edi),%ecx;");
    asm("loc_4CAF8A: xor %eax,%eax;");
    asm("loc_4CAF8C: test %ecx,%ecx;");
    asm("loc_4CAF8E: jle loc_4CAF99;");
    asm("loc_4CAF90: mov %eax,0x34(%esp,%eax,4);");
    asm("loc_4CAF94: inc %eax;");
    asm("loc_4CAF95: cmp %ecx,%eax;");
    asm("loc_4CAF97: jl loc_4CAF90;");
    asm("loc_4CAF99: mov %ecx,0x14(%esp);");
    asm("loc_4CAF9D: jmp loc_4CAFA3;");
    asm("loc_4CAF9F: mov %ebp,0x14(%esp);");
    asm("loc_4CAFA3: mov 0x84(%edi),%ecx;");
    asm("loc_4CAFA9: xor %ebp,%ebp;");
    asm("loc_4CAFAB: test %ecx,%ecx;");
    asm("loc_4CAFAD: mov %ebp,0x10(%esp);");
    asm("loc_4CAFB1: jle loc_4CB092;");
    asm("loc_4CAFB7: mov 0x14(%esp),%edx;");
    asm("loc_4CAFBB: cmp %edx,%ebp;");
    asm("loc_4CAFBD: jl loc_4CAFE6;");
    asm("loc_4CAFBF: mov _import_5C6D18,%ecx;");
    asm("loc_4CAFC5: push %edx;");
    asm("loc_4CAFC6: push %ebp;");
    asm("loc_4CAFC7: push $0x305;");
    asm("loc_4CAFCC: push $_data_5D7220;");
    asm("loc_4CAFD1: mov $0x100002,%eax;");
    asm("loc_4CAFD6: push $_data_5D7308;");
    asm("loc_4CAFDB: push %eax;");
    asm("loc_4CAFDC: calll *(%ecx);");
    asm("loc_4CAFDE: add $0x18,%esp;");
    asm("loc_4CAFE1: jmp loc_4CB083;");
    asm("loc_4CAFE6: mov 0x34(%esp,%ebp,4),%eax;");
    asm("loc_4CAFEA: cmp %ecx,%eax;");
    asm("loc_4CAFEC: jl loc_4CB012;");
    asm("loc_4CAFEE: push %ecx;");
    asm("loc_4CAFEF: push %eax;");
    asm("loc_4CAFF0: push $0x30F;");
    asm("loc_4CAFF5: push $_data_5D7220;");
    asm("loc_4CAFFA: mov $0x100002,%edx;");
    asm("loc_4CAFFF: push $_data_5D72A8;");
    asm("loc_4CB004: push %edx;");
    asm("loc_4CB005: mov _import_5C6D18,%edx;");
    asm("loc_4CB00B: calll *(%edx);");
    asm("loc_4CB00D: add $0x18,%esp;");
    asm("loc_4CB010: jmp loc_4CB083;");
    asm("loc_4CB012: mov 0x44(%edi,%eax,4),%esi;");
    asm("loc_4CB016: mov 0x18(%esp),%ecx;");
    asm("loc_4CB01A: mov (%ecx),%eax;");
    asm("loc_4CB01C: push %esi;");
    asm("loc_4CB01D: calll *0x14(%eax);");
    asm("loc_4CB020: test %eax,%eax;");
    asm("loc_4CB022: jne loc_4CB057;");
    asm("loc_4CB024: mov 0x18(%esp),%ecx;");
    asm("loc_4CB028: mov (%ecx),%edx;");
    asm("loc_4CB02A: mov $0x100002,%edi;");
    asm("loc_4CB02F: calll *0x10(%edx);");
    asm("loc_4CB032: push %eax;");
    asm("loc_4CB033: mov _import_5C6D18,%eax;");
    asm("loc_4CB038: push %esi;");
    asm("loc_4CB039: push $0x318;");
    asm("loc_4CB03E: push $_data_5D7220;");
    asm("loc_4CB043: push $_data_5D7260;");
    asm("loc_4CB048: push %edi;");
    asm("loc_4CB049: calll *(%eax);");
    asm("loc_4CB04B: mov 0x290(%esp),%edi;");
    asm("loc_4CB052: add $0x18,%esp;");
    asm("loc_4CB055: jmp loc_4CB083;");
    asm("loc_4CB057: mov 0x2C(%ebx),%edx;");
    asm("loc_4CB05A: lea 0x1C(%esp),%ecx;");
    asm("loc_4CB05E: push %ecx;");
    asm("loc_4CB05F: lea 0x24(%ebx),%ecx;");
    asm("loc_4CB062: push $1;");
    asm("loc_4CB064: push %edx;");
    asm("loc_4CB065: mov %esi,0x28(%esp);");
    asm("loc_4CB069: mov %eax,0x2C(%esp);");
    asm("loc_4CB06D: movl $0,0x34(%esp);");
    asm("loc_4CB075: movb $0,0x30(%esp);");
    asm("loc_4CB07A: call _sub_501C60;");
    asm("loc_4CB07F: mov %esi,0x10(%esp);");
    asm("loc_4CB083: mov 0x84(%edi),%ecx;");
    asm("loc_4CB089: inc %ebp;");
    asm("loc_4CB08A: cmp %ecx,%ebp;");
    asm("loc_4CB08C: jl loc_4CAFB7;");
    asm("loc_4CB092: mov 0x28(%ebx),%ecx;");
    asm("loc_4CB095: xor %esi,%esi;");
    asm("loc_4CB097: cmp %esi,%ecx;");
    asm("loc_4CB099: je loc_4CB237;");
    asm("loc_4CB09F: mov 0x2C(%ebx),%eax;");
    asm("loc_4CB0A2: sub %ecx,%eax;");
    asm("loc_4CB0A4: sar $4,%eax;");
    asm("loc_4CB0A7: cmp %esi,%eax;");
    asm("loc_4CB0A9: je loc_4CB237;");
    asm("loc_4CB0AF: mov (%edi),%ecx;");
    asm("loc_4CB0B1: mov 4(%edi),%eax;");
    asm("loc_4CB0B4: mov 0x288(%esp),%edx;");
    asm("loc_4CB0BB: mov %ecx,(%edx);");
    asm("loc_4CB0BD: mov 0x28C(%esp),%ecx;");
    asm("loc_4CB0C4: mov 0x290(%esp),%edx;");
    asm("loc_4CB0CB: mov %eax,(%ecx);");
    asm("loc_4CB0CD: mov 0x10(%esp),%eax;");
    asm("loc_4CB0D1: mov %eax,(%edx);");
    asm("loc_4CB0D3: mov (%edi),%eax;");
    asm("loc_4CB0D5: cmp %esi,%eax;");
    asm("loc_4CB0D7: je loc_4CB122;");
    asm("loc_4CB0D9: push %esi;");
    asm("loc_4CB0DA: push %eax;");
    asm("loc_4CB0DB: call _sub_5416C0;");
    asm("loc_4CB0E0: add $8,%esp;");
    asm("loc_4CB0E3: cmp %esi,%eax;");
    asm("loc_4CB0E5: je loc_4CB10D;");
    asm("loc_4CB0E7: add $0xC,%eax;");
    asm("loc_4CB0EA: cmp %esi,%eax;");
    asm("loc_4CB0EC: je loc_4CB10D;");
    asm("loc_4CB0EE: mov 4(%eax),%eax;");
    asm("loc_4CB0F1: cmp %esi,%eax;");
    asm("loc_4CB0F3: je loc_4CB10D;");
    asm("loc_4CB0F5: mov 0x4C(%eax),%ecx;");
    asm("loc_4CB0F8: and $0x103,%ecx;");
    asm("loc_4CB0FE: cmp $0x103,%ecx;");
    asm("loc_4CB104: jne loc_4CB10D;");
    asm("loc_4CB106: add $0x9C,%eax;");
    asm("loc_4CB10B: jmp loc_4CB10F;");
    asm("loc_4CB10D: xor %eax,%eax;");
    asm("loc_4CB10F: cmp (%ebx),%eax;");
    asm("loc_4CB111: je loc_4CB11C;");
    asm("loc_4CB113: push %eax;");
    asm("loc_4CB114: mov %ebx,%ecx;");
    asm("loc_4CB116: calll *_import_5C62A8;");
    asm("loc_4CB11C: movb $1,8(%ebx);");
    asm("loc_4CB120: jmp loc_4CB133;");
    asm("loc_4CB122: cmp %esi,(%ebx);");
    asm("loc_4CB124: je loc_4CB12F;");
    asm("loc_4CB126: push %esi;");
    asm("loc_4CB127: mov %ebx,%ecx;");
    asm("loc_4CB129: calll *_import_5C62A8;");
    asm("loc_4CB12F: movb $0,8(%ebx);");
    asm("loc_4CB133: mov 0x20(%esp),%al;");
    asm("loc_4CB137: flds 0x18(%ebx);");
    asm("loc_4CB13A: mov 0x15(%ebx),%dl;");
    asm("loc_4CB13D: fadds 0x1C(%ebx);");
    asm("loc_4CB140: mov 0x28(%ebx),%ecx;");
    asm("loc_4CB143: and $0xF8,%al;");
    asm("loc_4CB145: shl $2,%dl;");
    asm("loc_4CB148: fstps 0x30(%esp);");
    asm("loc_4CB14C: xor %al,%dl;");
    asm("loc_4CB14E: and $4,%dl;");
    asm("loc_4CB151: xor %dl,%al;");
    asm("loc_4CB153: mov %esi,0x10(%ebx);");
    asm("loc_4CB156: mov %ecx,0x34(%ebx);");
    asm("loc_4CB159: mov %esi,0x1C(%esp);");
    asm("loc_4CB15D: lea 0xC(%ecx),%esi;");
    asm("loc_4CB160: push $0;");
    asm("loc_4CB162: mov %al,0x24(%esp);");
    asm("loc_4CB166: mov 4(%ecx),%eax;");
    asm("loc_4CB169: push %esi;");
    asm("loc_4CB16A: lea 0x24(%esp),%ecx;");
    asm("loc_4CB16E: push %ecx;");
    asm("loc_4CB16F: push %eax;");
    asm("loc_4CB170: movl $0,0x34(%esp);");
    asm("loc_4CB178: movl $0,0x38(%esp);");
    asm("loc_4CB180: movl $0,0x3C(%esp);");
    asm("loc_4CB188: call _sub_428680;");
    asm("loc_4CB18D: add $0x10,%esp;");
    asm("loc_4CB190: test %al,%al;");
    asm("loc_4CB192: je loc_4CB1B3;");
    asm("loc_4CB194: mov (%esi),%edx;");
    asm("loc_4CB196: movl $2,4(%edx);");
    asm("loc_4CB19D: flds 0x18(%ebx);");
    asm("loc_4CB1A0: mov (%esi),%ecx;");
    asm("loc_4CB1A2: fadds 0x1C(%ebx);");
    asm("loc_4CB1A5: mov (%ecx),%eax;");
    asm("loc_4CB1A7: push %ecx;");
    asm("loc_4CB1A8: fstps (%esp);");
    asm("loc_4CB1AB: calll *0x80(%eax);");
    asm("loc_4CB1B1: jmp loc_4CB1BA;");
    asm("loc_4CB1B3: movl $0x40400000,0x10(%ebx);");
    asm("loc_4CB1BA: mov 0x280(%esp),%al;");
    asm("loc_4CB1C1: test %al,%al;");
    asm("loc_4CB1C3: je loc_4CB1F5;");
    asm("loc_4CB1C5: call _sub_428DB0;");
    asm("loc_4CB1CA: mov _data_6735B0,%eax;");
    asm("loc_4CB1CF: test %eax,%eax;");
    asm("loc_4CB1D1: jne loc_4CB1EB;");
    asm("loc_4CB1D3: mov _data_6108F0,%ecx;");
    asm("loc_4CB1D9: mov _data_6108F4,%edx;");
    asm("loc_4CB1DF: mov %ecx,_data_6735A4;");
    asm("loc_4CB1E5: mov %edx,_data_6735AC;");
    asm("loc_4CB1EB: incl _data_6735B0;");
    asm("loc_4CB1F1: movb $1,0x14(%ebx);");
    asm("loc_4CB1F5: mov 0x27C(%esp),%al;");
    asm("loc_4CB1FC: test %al,%al;");
    asm("loc_4CB1FE: je loc_4CB237;");
    asm("loc_4CB200: push $_data_5D7250;");
    asm("loc_4CB205: calll *_import_5C6020;");
    asm("loc_4CB20B: mov %eax,0x14(%esp);");
    asm("loc_4CB20F: lea 0x14(%esp),%eax;");
    asm("loc_4CB213: push %eax;");
    asm("loc_4CB214: call _sub_42AE40;");
    asm("loc_4CB219: push $0;");
    asm("loc_4CB21B: add $0xC,%ebx;");
    asm("loc_4CB21E: push %ebx;");
    asm("loc_4CB21F: push $0;");
    asm("loc_4CB221: push %eax;");
    asm("loc_4CB222: call _sub_428680;");
    asm("loc_4CB227: add $0x18,%esp;");
    asm("loc_4CB22A: test %al,%al;");
    asm("loc_4CB22C: je loc_4CB237;");
    asm("loc_4CB22E: mov (%ebx),%ecx;");
    asm("loc_4CB230: movl $2,4(%ecx);");
    asm("loc_4CB237: pop %edi;");
    asm("loc_4CB238: pop %esi;");
    asm("loc_4CB239: pop %ebp;");
    asm("loc_4CB23A: pop %ebx;");
    asm("loc_4CB23B: add $0x264,%esp;");
    asm("loc_4CB241: ret $0x1C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CB250() // _sub_4CB250
{
    __DEBUG_ASM(4CB250);
    // chunk 0x4CB250 _sub_4CB250
    asm("loc_4CB250: push $0xFFFFFFFF;");
    asm("loc_4CB252: push $_sub_5BDA5B;");
    asm("loc_4CB257: mov %fs:0,%eax;");
    asm("loc_4CB25D: push %eax;");
    asm("loc_4CB25E: mov %esp,%fs:0;");
    asm("loc_4CB265: sub $0x278,%esp;");
    asm("loc_4CB26B: push %ebx;");
    asm("loc_4CB26C: push %ebp;");
    asm("loc_4CB26D: push %esi;");
    asm("loc_4CB26E: mov %ecx,%esi;");
    asm("loc_4CB270: mov 0x1BC(%esi),%eax;");
    asm("loc_4CB276: push %edi;");
    asm("loc_4CB277: xor %edi,%edi;");
    asm("loc_4CB279: cmp %edi,%eax;");
    asm("loc_4CB27B: mov %esi,0x14(%esp);");
    asm("loc_4CB27F: je loc_4CB290;");
    asm("loc_4CB281: push %eax;");
    asm("loc_4CB282: call _sub_43D2A0;");
    asm("loc_4CB287: add $4,%esp;");
    asm("loc_4CB28A: mov %edi,0x1BC(%esi);");
    asm("loc_4CB290: mov %esi,%ecx;");
    asm("loc_4CB292: call _sub_4CBB40;");
    asm("loc_4CB297: cmp %edi,0x170(%esi);");
    asm("loc_4CB29D: je loc_4CB2A5;");
    asm("loc_4CB29F: mov %edi,0x170(%esi);");
    asm("loc_4CB2A5: mov 0x298(%esp),%eax;");
    asm("loc_4CB2AC: cmp %edi,%eax;");
    asm("loc_4CB2AE: movb $0,0x174(%esi);");
    asm("loc_4CB2B5: mov %edi,0x1C0(%esi);");
    asm("loc_4CB2BB: mov %edi,0x1C4(%esi);");
    asm("loc_4CB2C1: mov %edi,0x1C8(%esi);");
    asm("loc_4CB2C7: mov %edi,0x1CC(%esi);");
    asm("loc_4CB2CD: je loc_4CB2D6;");
    asm("loc_4CB2CF: add $0x9C,%eax;");
    asm("loc_4CB2D4: jmp loc_4CB2D8;");
    asm("loc_4CB2D6: xor %eax,%eax;");
    asm("loc_4CB2D8: cmp (%esi),%eax;");
    asm("loc_4CB2DA: je loc_4CB2E5;");
    asm("loc_4CB2DC: push %eax;");
    asm("loc_4CB2DD: mov %esi,%ecx;");
    asm("loc_4CB2DF: calll *_import_5C62A8;");
    asm("loc_4CB2E5: mov 0x2D4(%esp),%eax;");
    asm("loc_4CB2EC: mov %eax,0x1B4(%esi);");
    asm("loc_4CB2F2: push $5;");
    asm("loc_4CB2F4: movb $1,0x84(%esi);");
    asm("loc_4CB2FB: movb $0,0x85(%esi);");
    asm("loc_4CB302: movb $1,0x38(%esi);");
    asm("loc_4CB306: call _sub_5B3510;");
    asm("loc_4CB30B: fcompl _data_5C8BA8;");
    asm("loc_4CB311: add $4,%esp;");
    asm("loc_4CB314: fnstsw %ax;");
    asm("loc_4CB316: test $0x41,%ah;");
    asm("loc_4CB319: jne loc_4CB75C;");
    asm("loc_4CB31F: lea 0x2A0(%esp),%ecx;");
    asm("loc_4CB326: push %ecx;");
    asm("loc_4CB327: mov $_data_6735B4,%ecx;");
    asm("loc_4CB32C: call _sub_4C9A80;");
    asm("loc_4CB331: cmp %edi,%eax;");
    asm("loc_4CB333: mov %eax,0x170(%esi);");
    asm("loc_4CB339: movb $0,0x174(%esi);");
    asm("loc_4CB340: je loc_4CB769;");
    asm("loc_4CB346: lea 0x2A0(%esp),%edx;");
    asm("loc_4CB34D: push %edx;");
    asm("loc_4CB34E: calll *_import_5C60E4;");
    asm("loc_4CB354: mov %eax,%ecx;");
    asm("loc_4CB356: calll *_import_5C61E8;");
    asm("loc_4CB35C: lea 0x28(%esp),%ecx;");
    asm("loc_4CB360: mov %eax,%ebp;");
    asm("loc_4CB362: call _sub_4215B0;");
    asm("loc_4CB367: cmp $1,%ebp;");
    asm("loc_4CB36A: mov 0x14(%esp),%ebx;");
    asm("loc_4CB36E: lea 0x178(%ebx),%esi;");
    asm("loc_4CB374: mov $9,%ecx;");
    asm("loc_4CB379: lea 0x28(%esp),%edi;");
    asm("loc_4CB37D: movl $0,0x54(%esp);");
    asm("loc_4CB385: movl $0,0x50(%esp);");
    asm("loc_4CB38D: movl $0,0x4C(%esp);");
    asm("loc_4CB395: rep movsl (%esi),(%edi);");
    asm("loc_4CB397: je loc_4CB3E5;");
    asm("loc_4CB399: cmp $2,%ebp;");
    asm("loc_4CB39C: jne loc_4CB3C0;");
    asm("loc_4CB39E: lea 0x1A8(%ebx),%ecx;");
    asm("loc_4CB3A4: mov (%ecx),%edx;");
    asm("loc_4CB3A6: mov 4(%ecx),%eax;");
    asm("loc_4CB3A9: mov 8(%ecx),%ecx;");
    asm("loc_4CB3AC: mov %edx,0x4C(%esp);");
    asm("loc_4CB3B0: mov %eax,0x50(%esp);");
    asm("loc_4CB3B4: mov %ecx,0x54(%esp);");
    asm("loc_4CB3B8: jmp loc_4CB3FF;");
    asm("loc_4CB3BA: lea (%ebx),%ebx;");
    asm("loc_4CB3C0: mov _import_5C6D18,%edx;");
    asm("loc_4CB3C6: push $_data_5D7448;");
    asm("loc_4CB3CB: push $0x523;");
    asm("loc_4CB3D0: push $_data_5D7220;");
    asm("loc_4CB3D5: mov $0x100002,%eax;");
    asm("loc_4CB3DA: push $_data_5C8BD4;");
    asm("loc_4CB3DF: push %eax;");
    asm("loc_4CB3E0: calll *(%edx);");
    asm("loc_4CB3E2: add $0x14,%esp;");
    asm("loc_4CB3E5: lea 0x19C(%ebx),%eax;");
    asm("loc_4CB3EB: mov (%eax),%ecx;");
    asm("loc_4CB3ED: mov 4(%eax),%edx;");
    asm("loc_4CB3F0: mov 8(%eax),%eax;");
    asm("loc_4CB3F3: mov %ecx,0x4C(%esp);");
    asm("loc_4CB3F7: mov %edx,0x50(%esp);");
    asm("loc_4CB3FB: mov %eax,0x54(%esp);");
    asm("loc_4CB3FF: mov 0x170(%ebx),%eax;");
    asm("loc_4CB405: mov (%eax),%eax;");
    asm("loc_4CB407: test %eax,%eax;");
    asm("loc_4CB409: je loc_4CB422;");
    asm("loc_4CB40B: mov _import_5C6D58,%ecx;");
    asm("loc_4CB411: flds 0x50(%esp);");
    asm("loc_4CB415: mov (%ecx),%ecx;");
    asm("loc_4CB417: mov (%ecx),%edx;");
    asm("loc_4CB419: push %ecx;");
    asm("loc_4CB41A: fstps (%esp);");
    asm("loc_4CB41D: push %eax;");
    asm("loc_4CB41E: push %ecx;");
    asm("loc_4CB41F: calll *0x60(%edx);");
    asm("loc_4CB422: mov 0x170(%ebx),%esi;");
    asm("loc_4CB428: mov _import_5C6D58,%eax;");
    asm("loc_4CB42D: mov (%eax),%eax;");
    asm("loc_4CB42F: mov (%eax),%ecx;");
    asm("loc_4CB431: lea 0x4C(%esp),%edx;");
    asm("loc_4CB435: push %edx;");
    asm("loc_4CB436: mov (%esi),%edx;");
    asm("loc_4CB438: push %edx;");
    asm("loc_4CB439: push %eax;");
    asm("loc_4CB43A: calll *0x4C(%ecx);");
    asm("loc_4CB43D: mov _import_5C6D58,%eax;");
    asm("loc_4CB442: mov (%eax),%eax;");
    asm("loc_4CB444: mov (%eax),%ecx;");
    asm("loc_4CB446: lea 0x28(%esp),%edx;");
    asm("loc_4CB44A: push %edx;");
    asm("loc_4CB44B: mov (%esi),%edx;");
    asm("loc_4CB44D: push %edx;");
    asm("loc_4CB44E: push %eax;");
    asm("loc_4CB44F: calll *0x50(%ecx);");
    asm("loc_4CB452: mov 0x2D8(%esp),%ecx;");
    asm("loc_4CB459: mov (%ecx),%eax;");
    asm("loc_4CB45B: calll *0x18(%eax);");
    asm("loc_4CB45E: mov %eax,0x1C(%esp);");
    asm("loc_4CB462: mov 4(%eax),%eax;");
    asm("loc_4CB465: mov (%eax),%ecx;");
    asm("loc_4CB467: cmp %eax,%ecx;");
    asm("loc_4CB469: mov %ecx,0x10(%esp);");
    asm("loc_4CB46D: je loc_4CB597;");
    asm("loc_4CB473: mov 0x10(%esp),%ecx;");
    asm("loc_4CB477: mov 0xC(%ecx),%ebx;");
    asm("loc_4CB47A: test %ebx,%ebx;");
    asm("loc_4CB47C: jne loc_4CB484;");
    asm("loc_4CB47E: mov _import_5C7078,%ebx;");
    asm("loc_4CB484: mov _import_5C6D90,%eax;");
    asm("loc_4CB489: mov 0x14(%esp),%edx;");
    asm("loc_4CB48D: mov (%eax),%ecx;");
    asm("loc_4CB48F: mov 0x170(%edx),%ebp;");
    asm("loc_4CB495: mov (%ecx),%esi;");
    asm("loc_4CB497: mov %ebp,%ecx;");
    asm("loc_4CB499: call _sub_4CA480;");
    asm("loc_4CB49E: mov _import_5C6D90,%edx;");
    asm("loc_4CB4A4: push %eax;");
    asm("loc_4CB4A5: mov (%edx),%eax;");
    asm("loc_4CB4A7: push %eax;");
    asm("loc_4CB4A8: calll *0xA0(%esi);");
    asm("loc_4CB4AE: push %eax;");
    asm("loc_4CB4AF: lea 0x5C(%esp),%ecx;");
    asm("loc_4CB4B3: call _sub_406880;");
    asm("loc_4CB4B8: test %ebx,%ebx;");
    asm("loc_4CB4BA: lea 0x268(%ebp),%edi;");
    asm("loc_4CB4C0: mov $0xC,%ecx;");
    asm("loc_4CB4C5: lea 0x58(%esp),%esi;");
    asm("loc_4CB4C9: rep movsl (%esi),(%edi);");
    asm("loc_4CB4CB: je loc_4CB580;");
    asm("loc_4CB4D1: cmpb $0,(%ebx);");
    asm("loc_4CB4D4: je loc_4CB580;");
    asm("loc_4CB4DA: or $0xFFFFFFFF,%edi;");
    asm("loc_4CB4DD: xor %eax,%eax;");
    asm("loc_4CB4DF: lea 0x254(%ebp),%ecx;");
    asm("loc_4CB4E5: cmpl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CB4E8: je loc_4CB4F5;");
    asm("loc_4CB4EA: inc %eax;");
    asm("loc_4CB4EB: add $4,%ecx;");
    asm("loc_4CB4EE: cmp $4,%eax;");
    asm("loc_4CB4F1: jl loc_4CB4E5;");
    asm("loc_4CB4F3: jmp loc_4CB4F7;");
    asm("loc_4CB4F5: mov %eax,%edi;");
    asm("loc_4CB4F7: mov %edi,%ecx;");
    asm("loc_4CB4F9: imul $0x84,%ecx;");
    asm("loc_4CB4FF: lea (%ecx,%ebp),%esi;");
    asm("loc_4CB502: lea 0x44(%esi),%ecx;");
    asm("loc_4CB505: push %ebx;");
    asm("loc_4CB506: call _sub_4CEC20;");
    asm("loc_4CB50B: add $0x48,%esi;");
    asm("loc_4CB50E: push %esi;");
    asm("loc_4CB50F: call _sub_4356C0;");
    asm("loc_4CB514: mov %eax,%ecx;");
    asm("loc_4CB516: call _sub_434E90;");
    asm("loc_4CB51B: mov _import_5C6D58,%edx;");
    asm("loc_4CB521: mov (%edx),%ecx;");
    asm("loc_4CB523: push $0;");
    asm("loc_4CB525: mov (%ecx),%edx;");
    asm("loc_4CB527: push $0xBF800000;");
    asm("loc_4CB52C: push $0;");
    asm("loc_4CB52E: push $0x3F800000;");
    asm("loc_4CB533: push $0x3F800000;");
    asm("loc_4CB538: push $0;");
    asm("loc_4CB53A: push $0;");
    asm("loc_4CB53C: push %ebx;");
    asm("loc_4CB53D: push %eax;");
    asm("loc_4CB53E: lea 0x254(%ebp,%edi,4),%eax;");
    asm("loc_4CB545: push %eax;");
    asm("loc_4CB546: mov (%ebp),%eax;");
    asm("loc_4CB549: push %eax;");
    asm("loc_4CB54A: push %ecx;");
    asm("loc_4CB54B: calll *0x1C(%edx);");
    asm("loc_4CB54E: test %eax,%eax;");
    asm("loc_4CB550: je loc_4CB580;");
    asm("loc_4CB552: push $2;");
    asm("loc_4CB554: push $0x10000;");
    asm("loc_4CB559: lea 0x20(%esp),%ecx;");
    asm("loc_4CB55D: call _sub_411C50;");
    asm("loc_4CB562: mov (%eax),%ecx;");
    asm("loc_4CB564: mov _import_5C6D18,%edx;");
    asm("loc_4CB56A: push %ebx;");
    asm("loc_4CB56B: push $0x1F7;");
    asm("loc_4CB570: push $_data_5D7188;");
    asm("loc_4CB575: push $_data_5D7408;");
    asm("loc_4CB57A: push %ecx;");
    asm("loc_4CB57B: calll *(%edx);");
    asm("loc_4CB57D: add $0x14,%esp;");
    asm("loc_4CB580: mov 0x10(%esp),%eax;");
    asm("loc_4CB584: mov 0x1C(%esp),%ecx;");
    asm("loc_4CB588: mov (%eax),%eax;");
    asm("loc_4CB58A: cmp 4(%ecx),%eax;");
    asm("loc_4CB58D: mov %eax,0x10(%esp);");
    asm("loc_4CB591: jne loc_4CB473;");
    asm("loc_4CB597: mov 0x14(%esp),%edx;");
    asm("loc_4CB59B: mov 0x170(%edx),%esi;");
    asm("loc_4CB5A1: movl $0x3DCCCCCD,0x10(%esp);");
    asm("loc_4CB5A9: lea (%esp),%esp;");
    asm("loc_4CB5B0: flds 0x10(%esp);");
    asm("loc_4CB5B4: fcomps _data_5D043C;");
    asm("loc_4CB5BA: fnstsw %ax;");
    asm("loc_4CB5BC: test $5,%ah;");
    asm("loc_4CB5BF: jp loc_4CB5CB;");
    asm("loc_4CB5C1: mov 0x10(%esp),%eax;");
    asm("loc_4CB5C5: mov %eax,0x18(%esp);");
    asm("loc_4CB5C9: jmp loc_4CB5D3;");
    asm("loc_4CB5CB: movl $0x3E4CCCCD,0x18(%esp);");
    asm("loc_4CB5D3: mov 0x18(%esp),%ecx;");
    asm("loc_4CB5D7: push %ecx;");
    asm("loc_4CB5D8: mov %esi,%ecx;");
    asm("loc_4CB5DA: call _sub_4CBA60;");
    asm("loc_4CB5DF: flds 0x10(%esp);");
    asm("loc_4CB5E3: fsubs 0x18(%esp);");
    asm("loc_4CB5E7: fsts 0x10(%esp);");
    asm("loc_4CB5EB: fcompl _data_5C8BA8;");
    asm("loc_4CB5F1: fnstsw %ax;");
    asm("loc_4CB5F3: test $0x41,%ah;");
    asm("loc_4CB5F6: je loc_4CB5B0;");
    asm("loc_4CB5F8: mov 0x14(%esp),%edx;");
    asm("loc_4CB5FC: mov 0x170(%edx),%esi;");
    asm("loc_4CB602: mov (%esi),%ecx;");
    asm("loc_4CB604: test %ecx,%ecx;");
    asm("loc_4CB606: je loc_4CB644;");
    asm("loc_4CB608: mov _import_5C6D58,%eax;");
    asm("loc_4CB60D: mov (%eax),%eax;");
    asm("loc_4CB60F: mov (%eax),%edx;");
    asm("loc_4CB611: push %ecx;");
    asm("loc_4CB612: push %eax;");
    asm("loc_4CB613: calll *0x24(%edx);");
    asm("loc_4CB616: lea 0x254(%esi),%ecx;");
    asm("loc_4CB61C: lea 0x44(%esi),%eax;");
    asm("loc_4CB61F: mov $4,%edx;");
    asm("loc_4CB624: cmpl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CB627: je loc_4CB639;");
    asm("loc_4CB629: movl $0,(%eax);");
    asm("loc_4CB62F: movb $0,4(%eax);");
    asm("loc_4CB633: movl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CB639: add $4,%ecx;");
    asm("loc_4CB63C: add $0x84,%eax;");
    asm("loc_4CB641: dec %edx;");
    asm("loc_4CB642: jne loc_4CB624;");
    asm("loc_4CB644: mov 0x1C(%esp),%eax;");
    asm("loc_4CB648: mov 4(%eax),%eax;");
    asm("loc_4CB64B: mov (%eax),%ecx;");
    asm("loc_4CB64D: cmp %eax,%ecx;");
    asm("loc_4CB64F: mov %ecx,0x10(%esp);");
    asm("loc_4CB653: je loc_4CB769;");
    asm("loc_4CB659: lea (%esp),%esp;");
    asm("loc_4CB660: mov 0x10(%esp),%ecx;");
    asm("loc_4CB664: mov 0xC(%ecx),%ebx;");
    asm("loc_4CB667: test %ebx,%ebx;");
    asm("loc_4CB669: jne loc_4CB671;");
    asm("loc_4CB66B: mov _import_5C7078,%ebx;");
    asm("loc_4CB671: mov 0x14(%esp),%edx;");
    asm("loc_4CB675: mov 0x170(%edx),%ebp;");
    asm("loc_4CB67B: lea 0x58(%esp),%eax;");
    asm("loc_4CB67F: push %eax;");
    asm("loc_4CB680: mov %ebp,%ecx;");
    asm("loc_4CB682: call _sub_4CBA10;");
    asm("loc_4CB687: test %ebx,%ebx;");
    asm("loc_4CB689: lea 0x268(%ebp),%edi;");
    asm("loc_4CB68F: mov $0xC,%ecx;");
    asm("loc_4CB694: mov %eax,%esi;");
    asm("loc_4CB696: rep movsl (%esi),(%edi);");
    asm("loc_4CB698: je loc_4CB743;");
    asm("loc_4CB69E: cmpb $0,(%ebx);");
    asm("loc_4CB6A1: je loc_4CB743;");
    asm("loc_4CB6A7: or $0xFFFFFFFF,%edi;");
    asm("loc_4CB6AA: xor %eax,%eax;");
    asm("loc_4CB6AC: lea 0x254(%ebp),%ecx;");
    asm("loc_4CB6B2: cmpl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CB6B5: je loc_4CB6C2;");
    asm("loc_4CB6B7: inc %eax;");
    asm("loc_4CB6B8: add $4,%ecx;");
    asm("loc_4CB6BB: cmp $4,%eax;");
    asm("loc_4CB6BE: jl loc_4CB6B2;");
    asm("loc_4CB6C0: jmp loc_4CB6C4;");
    asm("loc_4CB6C2: mov %eax,%edi;");
    asm("loc_4CB6C4: mov %edi,%ecx;");
    asm("loc_4CB6C6: imul $0x84,%ecx;");
    asm("loc_4CB6CC: lea (%ecx,%ebp),%esi;");
    asm("loc_4CB6CF: lea 0x44(%esi),%ecx;");
    asm("loc_4CB6D2: push %ebx;");
    asm("loc_4CB6D3: call _sub_4CEC20;");
    asm("loc_4CB6D8: add $0x48,%esi;");
    asm("loc_4CB6DB: push %esi;");
    asm("loc_4CB6DC: call _sub_4356C0;");
    asm("loc_4CB6E1: mov %eax,%ecx;");
    asm("loc_4CB6E3: call _sub_434E90;");
    asm("loc_4CB6E8: mov _import_5C6D58,%edx;");
    asm("loc_4CB6EE: mov (%edx),%ecx;");
    asm("loc_4CB6F0: push $0;");
    asm("loc_4CB6F2: mov (%ecx),%edx;");
    asm("loc_4CB6F4: push $0xBF800000;");
    asm("loc_4CB6F9: push $2;");
    asm("loc_4CB6FB: push $0x3F800000;");
    asm("loc_4CB700: push $0x3F800000;");
    asm("loc_4CB705: push $0x3E99999A;");
    asm("loc_4CB70A: push $0;");
    asm("loc_4CB70C: push %ebx;");
    asm("loc_4CB70D: push %eax;");
    asm("loc_4CB70E: lea 0x254(%ebp,%edi,4),%eax;");
    asm("loc_4CB715: push %eax;");
    asm("loc_4CB716: mov (%ebp),%eax;");
    asm("loc_4CB719: push %eax;");
    asm("loc_4CB71A: push %ecx;");
    asm("loc_4CB71B: calll *0x1C(%edx);");
    asm("loc_4CB71E: test %eax,%eax;");
    asm("loc_4CB720: je loc_4CB743;");
    asm("loc_4CB722: mov _import_5C6D18,%ecx;");
    asm("loc_4CB728: push %ebx;");
    asm("loc_4CB729: push $0x1F7;");
    asm("loc_4CB72E: push $_data_5D7188;");
    asm("loc_4CB733: mov $0x100002,%eax;");
    asm("loc_4CB738: push $_data_5D7408;");
    asm("loc_4CB73D: push %eax;");
    asm("loc_4CB73E: calll *(%ecx);");
    asm("loc_4CB740: add $0x14,%esp;");
    asm("loc_4CB743: mov 0x10(%esp),%edx;");
    asm("loc_4CB747: mov (%edx),%eax;");
    asm("loc_4CB749: mov 0x1C(%esp),%ecx;");
    asm("loc_4CB74D: cmp 4(%ecx),%eax;");
    asm("loc_4CB750: mov %eax,0x10(%esp);");
    asm("loc_4CB754: jne loc_4CB660;");
    asm("loc_4CB75A: jmp loc_4CB769;");
    asm("loc_4CB75C: mov %edi,0x170(%esi);");
    asm("loc_4CB762: movb $1,0x174(%esi);");
    asm("loc_4CB769: mov 0x14(%esp),%esi;");
    asm("loc_4CB76D: mov 0x1BC(%esi),%eax;");
    asm("loc_4CB773: xor %ebp,%ebp;");
    asm("loc_4CB775: cmp %ebp,%eax;");
    asm("loc_4CB777: jne loc_4CB79A;");
    asm("loc_4CB779: mov 0x2DC(%esp),%edx;");
    asm("loc_4CB780: push %ebp;");
    asm("loc_4CB781: push %edx;");
    asm("loc_4CB782: push $_data_5D73FC;");
    asm("loc_4CB787: push $_data_5D73F0;");
    asm("loc_4CB78C: call _sub_59DB20;");
    asm("loc_4CB791: add $0x10,%esp;");
    asm("loc_4CB794: mov %eax,0x1BC(%esi);");
    asm("loc_4CB79A: mov 0x1BC(%esi),%eax;");
    asm("loc_4CB7A0: cmp %ebp,%eax;");
    asm("loc_4CB7A2: je loc_4CB9EA;");
    asm("loc_4CB7A8: mov 0x6C(%eax),%dl;");
    asm("loc_4CB7AB: push $1;");
    asm("loc_4CB7AD: push %ebp;");
    asm("loc_4CB7AE: push $1;");
    asm("loc_4CB7B0: push %ebp;");
    asm("loc_4CB7B1: push $0x3F800000;");
    asm("loc_4CB7B6: push $0x3D75C28F;");
    asm("loc_4CB7BB: push $0x3E041893;");
    asm("loc_4CB7C0: or $3,%dl;");
    asm("loc_4CB7C3: mov %dl,0x6C(%eax);");
    asm("loc_4CB7C6: mov 0x1BC(%esi),%ecx;");
    asm("loc_4CB7CC: push %ebp;");
    asm("loc_4CB7CD: lea 0x3C(%esp),%eax;");
    asm("loc_4CB7D1: push %eax;");
    asm("loc_4CB7D2: push $_data_5D0608;");
    asm("loc_4CB7D7: movl $0xBF028F5C,0x44(%esp);");
    asm("loc_4CB7DF: movl $0x3E6A7EFA,0x48(%esp);");
    asm("loc_4CB7E7: movl $0xBF800000,0x4C(%esp);");
    asm("loc_4CB7EF: call _sub_58A110;");
    asm("loc_4CB7F4: mov 0x1BC(%esi),%eax;");
    asm("loc_4CB7FA: mov 0x334(%eax),%eax;");
    asm("loc_4CB800: cmpb $1,0x30(%eax);");
    asm("loc_4CB804: je loc_4CB80D;");
    asm("loc_4CB806: movb $1,0x30(%eax);");
    asm("loc_4CB80A: mov %ebp,0x28(%eax);");
    asm("loc_4CB80D: mov 0x1BC(%esi),%ecx;");
    asm("loc_4CB813: mov (%ecx),%edx;");
    asm("loc_4CB815: push $1;");
    asm("loc_4CB817: push $_data_679BB4;");
    asm("loc_4CB81C: push $0x33;");
    asm("loc_4CB81E: calll *0xA8(%edx);");
    asm("loc_4CB824: mov _import_5C70AC,%ebx;");
    asm("loc_4CB82A: mov %bp,_data_66FC60;");
    asm("loc_4CB831: mov (%esi),%eax;");
    asm("loc_4CB833: xor %edi,%edi;");
    asm("loc_4CB835: cmp %ebp,%eax;");
    asm("loc_4CB837: je loc_4CB974;");
    asm("loc_4CB83D: add $0xFFFFFF64,%eax;");
    asm("loc_4CB842: cmp %ebp,%eax;");
    asm("loc_4CB844: je loc_4CB974;");
    asm("loc_4CB84A: mov %ebp,0x1C(%esp);");
    asm("loc_4CB84E: mov %ebp,0x20(%esp);");
    asm("loc_4CB852: lea 0x1C(%esp),%ecx;");
    asm("loc_4CB856: push %ecx;");
    asm("loc_4CB857: push %eax;");
    asm("loc_4CB858: mov %ebp,0x298(%esp);");
    asm("loc_4CB85F: call _sub_5472D0;");
    asm("loc_4CB864: add $8,%esp;");
    asm("loc_4CB867: test %eax,%eax;");
    asm("loc_4CB869: je loc_4CB87F;");
    asm("loc_4CB86B: mov 0x1C(%esp),%edx;");
    asm("loc_4CB86F: push %edx;");
    asm("loc_4CB870: push $_data_66FC60;");
    asm("loc_4CB875: call *%ebx;");
    asm("loc_4CB877: add $8,%esp;");
    asm("loc_4CB87A: mov $1,%edi;");
    asm("loc_4CB87F: mov (%esi),%eax;");
    asm("loc_4CB881: cmp %ebp,%eax;");
    asm("loc_4CB883: je loc_4CB8F7;");
    asm("loc_4CB885: lea -0x9C(%eax),%ecx;");
    asm("loc_4CB88B: cmp %ebp,%ecx;");
    asm("loc_4CB88D: je loc_4CB8F7;");
    asm("loc_4CB88F: mov 0x4C(%ecx),%eax;");
    asm("loc_4CB892: and $0x503,%eax;");
    asm("loc_4CB897: cmp $0x503,%eax;");
    asm("loc_4CB89C: jne loc_4CB8F7;");
    asm("loc_4CB89E: calll *_import_5C6354;");
    asm("loc_4CB8A4: cmp %ebp,%eax;");
    asm("loc_4CB8A6: je loc_4CB8F7;");
    asm("loc_4CB8A8: mov _data_67ECA8,%edx;");
    asm("loc_4CB8AE: push $0x100;");
    asm("loc_4CB8B3: lea 0x8C(%esp),%ecx;");
    asm("loc_4CB8BA: push %ecx;");
    asm("loc_4CB8BB: push %eax;");
    asm("loc_4CB8BC: push %edx;");
    asm("loc_4CB8BD: call _sub_4347E0;");
    asm("loc_4CB8C2: add $0x10,%esp;");
    asm("loc_4CB8C5: test %eax,%eax;");
    asm("loc_4CB8C7: jne loc_4CB8D1;");
    asm("loc_4CB8C9: mov %bp,0x88(%esp);");
    asm("loc_4CB8D1: cmp %ebp,%edi;");
    asm("loc_4CB8D3: jle loc_4CB8E4;");
    asm("loc_4CB8D5: push $_data_5D0254;");
    asm("loc_4CB8DA: push $_data_66FC60;");
    asm("loc_4CB8DF: call *%ebx;");
    asm("loc_4CB8E1: add $8,%esp;");
    asm("loc_4CB8E4: lea 0x88(%esp),%eax;");
    asm("loc_4CB8EB: push %eax;");
    asm("loc_4CB8EC: push $_data_66FC60;");
    asm("loc_4CB8F1: call *%ebx;");
    asm("loc_4CB8F3: add $8,%esp;");
    asm("loc_4CB8F6: inc %edi;");
    asm("loc_4CB8F7: cmp %ebp,%edi;");
    asm("loc_4CB8F9: jne loc_4CB957;");
    asm("loc_4CB8FB: mov (%esi),%eax;");
    asm("loc_4CB8FD: cmp %ebp,%eax;");
    asm("loc_4CB8FF: je loc_4CB908;");
    asm("loc_4CB901: add $0xFFFFFF64,%eax;");
    asm("loc_4CB906: jmp loc_4CB90A;");
    asm("loc_4CB908: xor %eax,%eax;");
    asm("loc_4CB90A: push %eax;");
    asm("loc_4CB90B: call _sub_5472A0;");
    asm("loc_4CB910: add $4,%esp;");
    asm("loc_4CB913: cmp %ebp,%eax;");
    asm("loc_4CB915: je loc_4CB957;");
    asm("loc_4CB917: mov _data_67ECA8,%edx;");
    asm("loc_4CB91D: push $0x100;");
    asm("loc_4CB922: lea 0x8C(%esp),%ecx;");
    asm("loc_4CB929: push %ecx;");
    asm("loc_4CB92A: push %eax;");
    asm("loc_4CB92B: push %edx;");
    asm("loc_4CB92C: call _sub_4347E0;");
    asm("loc_4CB931: add $0x10,%esp;");
    asm("loc_4CB934: test %eax,%eax;");
    asm("loc_4CB936: jne loc_4CB940;");
    asm("loc_4CB938: mov %bp,0x88(%esp);");
    asm("loc_4CB940: lea 0x88(%esp),%eax;");
    asm("loc_4CB947: push %eax;");
    asm("loc_4CB948: push $_data_66FC60;");
    asm("loc_4CB94D: call *%ebx;");
    asm("loc_4CB94F: add $8,%esp;");
    asm("loc_4CB952: mov $1,%edi;");
    asm("loc_4CB957: mov 0x1C(%esp),%eax;");
    asm("loc_4CB95B: cmp %ebp,%eax;");
    asm("loc_4CB95D: movl $0xFFFFFFFF,0x290(%esp);");
    asm("loc_4CB968: je loc_4CB974;");
    asm("loc_4CB96A: push %eax;");
    asm("loc_4CB96B: calll *_import_5C71D8;");
    asm("loc_4CB971: add $4,%esp;");
    asm("loc_4CB974: cmp %ebp,0x1B4(%esi);");
    asm("loc_4CB97A: je loc_4CB9D6;");
    asm("loc_4CB97C: cmp $2,%edi;");
    asm("loc_4CB97F: jge loc_4CB9D6;");
    asm("loc_4CB981: cmp %ebp,%edi;");
    asm("loc_4CB983: jle loc_4CB994;");
    asm("loc_4CB985: push $_data_5D0254;");
    asm("loc_4CB98A: push $_data_66FC60;");
    asm("loc_4CB98F: call *%ebx;");
    asm("loc_4CB991: add $8,%esp;");
    asm("loc_4CB994: mov 0x1B4(%esi),%eax;");
    asm("loc_4CB99A: mov _data_67ECA8,%edx;");
    asm("loc_4CB9A0: push $0x100;");
    asm("loc_4CB9A5: lea 0x8C(%esp),%ecx;");
    asm("loc_4CB9AC: push %ecx;");
    asm("loc_4CB9AD: push %eax;");
    asm("loc_4CB9AE: push %edx;");
    asm("loc_4CB9AF: call _sub_4347E0;");
    asm("loc_4CB9B4: add $0x10,%esp;");
    asm("loc_4CB9B7: test %eax,%eax;");
    asm("loc_4CB9B9: jne loc_4CB9C3;");
    asm("loc_4CB9BB: mov %bp,0x88(%esp);");
    asm("loc_4CB9C3: lea 0x88(%esp),%eax;");
    asm("loc_4CB9CA: push %eax;");
    asm("loc_4CB9CB: push $_data_66FC60;");
    asm("loc_4CB9D0: call *%ebx;");
    asm("loc_4CB9D2: add $8,%esp;");
    asm("loc_4CB9D5: inc %edi;");
    asm("loc_4CB9D6: cmp %ebp,%edi;");
    asm("loc_4CB9D8: jle loc_4CB9EA;");
    asm("loc_4CB9DA: mov 0x1BC(%esi),%ecx;");
    asm("loc_4CB9E0: push $_data_66FC60;");
    asm("loc_4CB9E5: call _sub_58A530;");
    asm("loc_4CB9EA: mov 0x288(%esp),%ecx;");
    asm("loc_4CB9F1: pop %edi;");
    asm("loc_4CB9F2: pop %esi;");
    asm("loc_4CB9F3: pop %ebp;");
    asm("loc_4CB9F4: pop %ebx;");
    asm("loc_4CB9F5: mov %ecx,%fs:0;");
    asm("loc_4CB9FC: add $0x284,%esp;");
    asm("loc_4CBA02: ret $0x48;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBA10() // _sub_4CBA10
{
    __DEBUG_ASM(4CBA10);
    // chunk 0x4CBA10 _sub_4CBA10
    asm("loc_4CBA10: push %ecx;");
    asm("loc_4CBA11: mov (%ecx),%ecx;");
    asm("loc_4CBA13: test %ecx,%ecx;");
    asm("loc_4CBA15: push %esi;");
    asm("loc_4CBA16: push %edi;");
    asm("loc_4CBA17: movl $0xFFFFFFFF,8(%esp);");
    asm("loc_4CBA1F: je loc_4CBA34;");
    asm("loc_4CBA21: mov _import_5C6D58,%eax;");
    asm("loc_4CBA26: mov (%eax),%eax;");
    asm("loc_4CBA28: mov (%eax),%edx;");
    asm("loc_4CBA2A: lea 8(%esp),%esi;");
    asm("loc_4CBA2E: push %esi;");
    asm("loc_4CBA2F: push %ecx;");
    asm("loc_4CBA30: push %eax;");
    asm("loc_4CBA31: calll *0x48(%edx);");
    asm("loc_4CBA34: mov _import_5C6D90,%eax;");
    asm("loc_4CBA39: mov 8(%esp),%edx;");
    asm("loc_4CBA3D: mov (%eax),%eax;");
    asm("loc_4CBA3F: mov (%eax),%ecx;");
    asm("loc_4CBA41: push %edx;");
    asm("loc_4CBA42: push %eax;");
    asm("loc_4CBA43: calll *0xA0(%ecx);");
    asm("loc_4CBA49: mov %eax,%esi;");
    asm("loc_4CBA4B: mov 0x10(%esp),%eax;");
    asm("loc_4CBA4F: mov $0xC,%ecx;");
    asm("loc_4CBA54: mov %eax,%edi;");
    asm("loc_4CBA56: rep movsl (%esi),(%edi);");
    asm("loc_4CBA58: pop %edi;");
    asm("loc_4CBA59: pop %esi;");
    asm("loc_4CBA5A: pop %ecx;");
    asm("loc_4CBA5B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBA60() // _sub_4CBA60
{
    __DEBUG_ASM(4CBA60);
    // chunk 0x4CBA60 _sub_4CBA60
    asm("loc_4CBA60: push %ecx;");
    asm("loc_4CBA61: push %esi;");
    asm("loc_4CBA62: mov %ecx,%esi;");
    asm("loc_4CBA64: mov (%esi),%ecx;");
    asm("loc_4CBA66: test %ecx,%ecx;");
    asm("loc_4CBA68: je loc_4CBB32;");
    asm("loc_4CBA6E: flds 0xC(%esp);");
    asm("loc_4CBA72: mov _import_5C6D58,%eax;");
    asm("loc_4CBA77: fmuls 0x264(%esi);");
    asm("loc_4CBA7D: push %ebp;");
    asm("loc_4CBA7E: push %edi;");
    asm("loc_4CBA7F: lea 0xC(%esp),%edi;");
    asm("loc_4CBA83: push %edi;");
    asm("loc_4CBA84: fstps 0x18(%esp);");
    asm("loc_4CBA88: or $0xFFFFFFFF,%ebp;");
    asm("loc_4CBA8B: mov %ebp,0x10(%esp);");
    asm("loc_4CBA8F: mov (%eax),%eax;");
    asm("loc_4CBA91: mov (%eax),%edx;");
    asm("loc_4CBA93: push %ecx;");
    asm("loc_4CBA94: push %eax;");
    asm("loc_4CBA95: calll *0x48(%edx);");
    asm("loc_4CBA98: mov 0x14(%esp),%edi;");
    asm("loc_4CBA9C: mov _import_5C6D40,%eax;");
    asm("loc_4CBAA1: mov 0xC(%esp),%edx;");
    asm("loc_4CBAA5: mov (%eax),%eax;");
    asm("loc_4CBAA7: mov (%eax),%ecx;");
    asm("loc_4CBAA9: push %edi;");
    asm("loc_4CBAAA: push %edx;");
    asm("loc_4CBAAB: push %eax;");
    asm("loc_4CBAAC: calll *0x6C(%ecx);");
    asm("loc_4CBAAF: mov (%esi),%eax;");
    asm("loc_4CBAB1: test %eax,%eax;");
    asm("loc_4CBAB3: mov %ebp,0x14(%esp);");
    asm("loc_4CBAB7: je loc_4CBACD;");
    asm("loc_4CBAB9: mov _import_5C6D58,%ecx;");
    asm("loc_4CBABF: mov (%ecx),%ecx;");
    asm("loc_4CBAC1: mov (%ecx),%edx;");
    asm("loc_4CBAC3: lea 0x14(%esp),%ebp;");
    asm("loc_4CBAC7: push %ebp;");
    asm("loc_4CBAC8: push %eax;");
    asm("loc_4CBAC9: push %ecx;");
    asm("loc_4CBACA: calll *0x48(%edx);");
    asm("loc_4CBACD: mov _import_5C6D90,%eax;");
    asm("loc_4CBAD2: mov 0x14(%esp),%edx;");
    asm("loc_4CBAD6: mov (%eax),%eax;");
    asm("loc_4CBAD8: mov (%eax),%ecx;");
    asm("loc_4CBADA: push %edi;");
    asm("loc_4CBADB: push $0;");
    asm("loc_4CBADD: push %edx;");
    asm("loc_4CBADE: push %eax;");
    asm("loc_4CBADF: calll *0x6C(%ecx);");
    asm("loc_4CBAE2: mov _import_5C6D58,%eax;");
    asm("loc_4CBAE7: lea 0x14(%esp),%edx;");
    asm("loc_4CBAEB: push %edx;");
    asm("loc_4CBAEC: mov (%esi),%edx;");
    asm("loc_4CBAEE: movl $0,0x18(%esp);");
    asm("loc_4CBAF6: mov (%eax),%eax;");
    asm("loc_4CBAF8: mov (%eax),%ecx;");
    asm("loc_4CBAFA: push %edx;");
    asm("loc_4CBAFB: push %eax;");
    asm("loc_4CBAFC: calll *0x68(%ecx);");
    asm("loc_4CBAFF: mov 0x14(%esp),%eax;");
    asm("loc_4CBB03: test %eax,%eax;");
    asm("loc_4CBB05: pop %edi;");
    asm("loc_4CBB06: pop %ebp;");
    asm("loc_4CBB07: jne loc_4CBB32;");
    asm("loc_4CBB09: lea 0x254(%esi),%ecx;");
    asm("loc_4CBB0F: lea 0x44(%esi),%eax;");
    asm("loc_4CBB12: mov $4,%edx;");
    asm("loc_4CBB17: movl $0,(%eax);");
    asm("loc_4CBB1D: movb $0,4(%eax);");
    asm("loc_4CBB21: movl $0xFFFFFFFF,(%ecx);");
    asm("loc_4CBB27: add $4,%ecx;");
    asm("loc_4CBB2A: add $0x84,%eax;");
    asm("loc_4CBB2F: dec %edx;");
    asm("loc_4CBB30: jne loc_4CBB17;");
    asm("loc_4CBB32: pop %esi;");
    asm("loc_4CBB33: pop %ecx;");
    asm("loc_4CBB34: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBB40() // _sub_4CBB40
{
    __DEBUG_ASM(4CBB40);
    // chunk 0x4CBB40 _sub_4CBB40
    asm("loc_4CBB40: push %ebx;");
    asm("loc_4CBB41: push %edi;");
    asm("loc_4CBB42: mov %ecx,%edi;");
    asm("loc_4CBB44: mov 0xC(%edi),%ecx;");
    asm("loc_4CBB47: xor %ebx,%ebx;");
    asm("loc_4CBB49: cmp %ebx,%ecx;");
    asm("loc_4CBB4B: je loc_4CBB5E;");
    asm("loc_4CBB4D: mov (%ecx),%eax;");
    asm("loc_4CBB4F: calll *0x60(%eax);");
    asm("loc_4CBB52: mov 0xC(%edi),%eax;");
    asm("loc_4CBB55: mov (%eax),%ecx;");
    asm("loc_4CBB57: push %eax;");
    asm("loc_4CBB58: calll *8(%ecx);");
    asm("loc_4CBB5B: mov %ebx,0xC(%edi);");
    asm("loc_4CBB5E: mov 0x2C(%edi),%eax;");
    asm("loc_4CBB61: push %esi;");
    asm("loc_4CBB62: mov 0x28(%edi),%esi;");
    asm("loc_4CBB65: cmp %eax,%esi;");
    asm("loc_4CBB67: je loc_4CBBAD;");
    asm("loc_4CBB69: lea (%esp),%esp;");
    asm("loc_4CBB70: mov 4(%esi),%ecx;");
    asm("loc_4CBB73: cmp %ebx,%ecx;");
    asm("loc_4CBB75: je loc_4CBB85;");
    asm("loc_4CBB77: cmpb $1,8(%esi);");
    asm("loc_4CBB7B: jne loc_4CBB85;");
    asm("loc_4CBB7D: mov (%ecx),%edx;");
    asm("loc_4CBB7F: calll *0x10(%edx);");
    asm("loc_4CBB82: mov %bl,8(%esi);");
    asm("loc_4CBB85: mov 0xC(%esi),%eax;");
    asm("loc_4CBB88: cmp %ebx,%eax;");
    asm("loc_4CBB8A: je loc_4CBBA3;");
    asm("loc_4CBB8C: mov %eax,%ecx;");
    asm("loc_4CBB8E: cmp %ebx,%ecx;");
    asm("loc_4CBB90: je loc_4CBBA3;");
    asm("loc_4CBB92: mov (%ecx),%eax;");
    asm("loc_4CBB94: calll *0x60(%eax);");
    asm("loc_4CBB97: mov 0xC(%esi),%eax;");
    asm("loc_4CBB9A: mov (%eax),%ecx;");
    asm("loc_4CBB9C: push %eax;");
    asm("loc_4CBB9D: calll *8(%ecx);");
    asm("loc_4CBBA0: mov %ebx,0xC(%esi);");
    asm("loc_4CBBA3: mov 0x2C(%edi),%eax;");
    asm("loc_4CBBA6: add $0x10,%esi;");
    asm("loc_4CBBA9: cmp %eax,%esi;");
    asm("loc_4CBBAB: jne loc_4CBB70;");
    asm("loc_4CBBAD: mov 0x2C(%edi),%edx;");
    asm("loc_4CBBB0: mov 0x28(%edi),%ecx;");
    asm("loc_4CBBB3: mov %edx,%eax;");
    asm("loc_4CBBB5: cmp %edx,%eax;");
    asm("loc_4CBBB7: je loc_4CBBE7;");
    asm("loc_4CBBB9: push %ebp;");
    asm("loc_4CBBBA: lea (%ebx),%ebx;");
    asm("loc_4CBBC0: mov %eax,%esi;");
    asm("loc_4CBBC2: mov (%esi),%ebp;");
    asm("loc_4CBBC4: mov %ecx,%ebx;");
    asm("loc_4CBBC6: mov %ebp,(%ebx);");
    asm("loc_4CBBC8: mov 4(%esi),%ebp;");
    asm("loc_4CBBCB: mov %ebp,4(%ebx);");
    asm("loc_4CBBCE: mov 8(%esi),%ebp;");
    asm("loc_4CBBD1: mov %ebp,8(%ebx);");
    asm("loc_4CBBD4: mov 0xC(%esi),%esi;");
    asm("loc_4CBBD7: add $0x10,%eax;");
    asm("loc_4CBBDA: add $0x10,%ecx;");
    asm("loc_4CBBDD: cmp %edx,%eax;");
    asm("loc_4CBBDF: mov %esi,0xC(%ebx);");
    asm("loc_4CBBE2: jne loc_4CBBC0;");
    asm("loc_4CBBE4: xor %ebx,%ebx;");
    asm("loc_4CBBE6: pop %ebp;");
    asm("loc_4CBBE7: mov %ecx,0x2C(%edi);");
    asm("loc_4CBBEA: cmp %bl,0x14(%edi);");
    asm("loc_4CBBED: pop %esi;");
    asm("loc_4CBBEE: je loc_4CBC16;");
    asm("loc_4CBBF0: call _sub_428DE0;");
    asm("loc_4CBBF5: decl _data_6735B0;");
    asm("loc_4CBBFB: jne loc_4CBC13;");
    asm("loc_4CBBFD: mov _data_6108F8,%edx;");
    asm("loc_4CBC03: movl $0,_data_6735A4;");
    asm("loc_4CBC0D: mov %edx,_data_6735AC;");
    asm("loc_4CBC13: mov %bl,0x14(%edi);");
    asm("loc_4CBC16: cmp %ebx,(%edi);");
    asm("loc_4CBC18: je loc_4CBC23;");
    asm("loc_4CBC1A: push %ebx;");
    asm("loc_4CBC1B: mov %edi,%ecx;");
    asm("loc_4CBC1D: calll *_import_5C62A8;");
    asm("loc_4CBC23: mov %ebx,0xC(%edi);");
    asm("loc_4CBC26: mov %ebx,0x10(%edi);");
    asm("loc_4CBC29: mov %bl,0x14(%edi);");
    asm("loc_4CBC2C: mov %bl,0x15(%edi);");
    asm("loc_4CBC2F: mov %ebx,0x18(%edi);");
    asm("loc_4CBC32: mov %ebx,0x1C(%edi);");
    asm("loc_4CBC35: movb $1,8(%edi);");
    asm("loc_4CBC39: movb $1,0x20(%edi);");
    asm("loc_4CBC3D: pop %edi;");
    asm("loc_4CBC3E: pop %ebx;");
    asm("loc_4CBC3F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBC40() // _sub_4CBC40
{
    __DEBUG_ASM(4CBC40);
    // chunk 0x4CBC40 _sub_4CBC40
    asm("loc_4CBC40: sub $0x90,%esp;");
    asm("loc_4CBC46: push %ebx;");
    asm("loc_4CBC47: push %ebp;");
    asm("loc_4CBC48: mov %ecx,%ebp;");
    asm("loc_4CBC4A: lea 0x24(%ebp),%ecx;");
    asm("loc_4CBC4D: call _sub_4CECD0;");
    asm("loc_4CBC52: mov 8(%ebp),%cl;");
    asm("loc_4CBC55: neg %eax;");
    asm("loc_4CBC57: sbb %al,%al;");
    asm("loc_4CBC59: inc %al;");
    asm("loc_4CBC5B: test %cl,%cl;");
    asm("loc_4CBC5D: je loc_4CBC78;");
    asm("loc_4CBC5F: mov (%ebp),%ecx;");
    asm("loc_4CBC62: test %ecx,%ecx;");
    asm("loc_4CBC64: je loc_4CBE42;");
    asm("loc_4CBC6A: add $0xFFFFFF64,%ecx;");
    asm("loc_4CBC70: test %ecx,%ecx;");
    asm("loc_4CBC72: je loc_4CBE42;");
    asm("loc_4CBC78: test %al,%al;");
    asm("loc_4CBC7A: jne loc_4CBE42;");
    asm("loc_4CBC80: mov 0x34(%ebp),%ebx;");
    asm("loc_4CBC83: movl $0,8(%esp);");
    asm("loc_4CBC8B: call _sub_54BC90;");
    asm("loc_4CBC90: test %al,%al;");
    asm("loc_4CBC92: jne loc_4CBDC3;");
    asm("loc_4CBC98: cmpb $1,0x20(%ebp);");
    asm("loc_4CBC9C: jne loc_4CBDC3;");
    asm("loc_4CBCA2: call _sub_40F130;");
    asm("loc_4CBCA7: mov (%ebp),%ecx;");
    asm("loc_4CBCAA: test %ecx,%ecx;");
    asm("loc_4CBCAC: je loc_4CBDC3;");
    asm("loc_4CBCB2: add $0xFFFFFF64,%ecx;");
    asm("loc_4CBCB8: test %ecx,%ecx;");
    asm("loc_4CBCBA: je loc_4CBDC3;");
    asm("loc_4CBCC0: test %eax,%eax;");
    asm("loc_4CBCC2: je loc_4CBDC3;");
    asm("loc_4CBCC8: add $0x2C,%ecx;");
    asm("loc_4CBCCB: mov (%ecx),%edx;");
    asm("loc_4CBCCD: mov %edx,0x2C(%esp);");
    asm("loc_4CBCD1: mov 4(%ecx),%edx;");
    asm("loc_4CBCD4: push %esi;");
    asm("loc_4CBCD5: mov %edx,0x34(%esp);");
    asm("loc_4CBCD9: mov 8(%ecx),%ecx;");
    asm("loc_4CBCDC: mov (%eax),%edx;");
    asm("loc_4CBCDE: push %edi;");
    asm("loc_4CBCDF: push %eax;");
    asm("loc_4CBCE0: mov %ecx,0x40(%esp);");
    asm("loc_4CBCE4: calll *0x10(%edx);");
    asm("loc_4CBCE7: mov %eax,%esi;");
    asm("loc_4CBCE9: mov $0xC,%ecx;");
    asm("loc_4CBCEE: lea 0x70(%esp),%edi;");
    asm("loc_4CBCF2: rep movsl (%esi),(%edi);");
    asm("loc_4CBCF4: mov 0x98(%esp),%ecx;");
    asm("loc_4CBCFB: mov 0x94(%esp),%eax;");
    asm("loc_4CBD02: mov 0x9C(%esp),%edx;");
    asm("loc_4CBD09: mov %ecx,0x2C(%esp);");
    asm("loc_4CBD0D: mov %eax,0x28(%esp);");
    asm("loc_4CBD11: mov $9,%ecx;");
    asm("loc_4CBD16: lea 0x70(%esp),%esi;");
    asm("loc_4CBD1A: lea 0x4C(%esp),%edi;");
    asm("loc_4CBD1E: lea 0x28(%esp),%eax;");
    asm("loc_4CBD22: rep movsl (%esi),(%edi);");
    asm("loc_4CBD24: push %eax;");
    asm("loc_4CBD25: lea 0x38(%esp),%ecx;");
    asm("loc_4CBD29: mov %edx,0x34(%esp);");
    asm("loc_4CBD2D: push %ecx;");
    asm("loc_4CBD2E: lea 0x24(%esp),%edx;");
    asm("loc_4CBD32: push %edx;");
    asm("loc_4CBD33: call _sub_423B60;");
    asm("loc_4CBD38: add $0xC,%esp;");
    asm("loc_4CBD3B: lea 0x40(%esp),%eax;");
    asm("loc_4CBD3F: push %eax;");
    asm("loc_4CBD40: lea 0x50(%esp),%ecx;");
    asm("loc_4CBD44: call _sub_4CBF60;");
    asm("loc_4CBD49: flds 0x24(%esp);");
    asm("loc_4CBD4D: lea 0x40(%esp),%ecx;");
    asm("loc_4CBD51: fmuls 8(%eax);");
    asm("loc_4CBD54: push %ecx;");
    asm("loc_4CBD55: flds 0x24(%esp);");
    asm("loc_4CBD59: lea 0x50(%esp),%ecx;");
    asm("loc_4CBD5D: fmuls 4(%eax);");
    asm("loc_4CBD60: faddp;");
    asm("loc_4CBD62: flds 0x20(%esp);");
    asm("loc_4CBD66: fmuls (%eax);");
    asm("loc_4CBD68: faddp;");
    asm("loc_4CBD6A: fstps 0x1C(%esp);");
    asm("loc_4CBD6E: call _sub_4CBF80;");
    asm("loc_4CBD73: push %eax;");
    asm("loc_4CBD74: lea 0x20(%esp),%edx;");
    asm("loc_4CBD78: push %edx;");
    asm("loc_4CBD79: call _sub_4CBF40;");
    asm("loc_4CBD7E: fchs;");
    asm("loc_4CBD80: add $8,%esp;");
    asm("loc_4CBD83: fstps 0x14(%esp);");
    asm("loc_4CBD87: lea 0x40(%esp),%eax;");
    asm("loc_4CBD8B: push %eax;");
    asm("loc_4CBD8C: lea 0x50(%esp),%ecx;");
    asm("loc_4CBD90: call _sub_4CBFA0;");
    asm("loc_4CBD95: push %eax;");
    asm("loc_4CBD96: lea 0x20(%esp),%ecx;");
    asm("loc_4CBD9A: push %ecx;");
    asm("loc_4CBD9B: call _sub_4CBF40;");
    asm("loc_4CBDA0: fstps 0x18(%esp);");
    asm("loc_4CBDA4: mov 0x18(%esp),%edx;");
    asm("loc_4CBDA8: mov 0x1C(%esp),%eax;");
    asm("loc_4CBDAC: mov 0x20(%esp),%ecx;");
    asm("loc_4CBDB0: add $8,%esp;");
    asm("loc_4CBDB3: push %edx;");
    asm("loc_4CBDB4: push %eax;");
    asm("loc_4CBDB5: push %ecx;");
    asm("loc_4CBDB6: mov %ebp,%ecx;");
    asm("loc_4CBDB8: call _sub_4CC060;");
    asm("loc_4CBDBD: fstps 0x10(%esp);");
    asm("loc_4CBDC1: pop %edi;");
    asm("loc_4CBDC2: pop %esi;");
    asm("loc_4CBDC3: mov 0xC(%ebx),%ecx;");
    asm("loc_4CBDC6: test %ecx,%ecx;");
    asm("loc_4CBDC8: je loc_4CBDEC;");
    asm("loc_4CBDCA: mov 8(%esp),%eax;");
    asm("loc_4CBDCE: mov (%ecx),%edx;");
    asm("loc_4CBDD0: push %eax;");
    asm("loc_4CBDD1: calll *0x84(%edx);");
    asm("loc_4CBDD7: flds 0x1C(%ebp);");
    asm("loc_4CBDDA: mov 0xC(%ebx),%ecx;");
    asm("loc_4CBDDD: fadds 0x18(%ebp);");
    asm("loc_4CBDE0: mov (%ecx),%edx;");
    asm("loc_4CBDE2: push %ecx;");
    asm("loc_4CBDE3: fstps (%esp);");
    asm("loc_4CBDE6: calll *0x80(%edx);");
    asm("loc_4CBDEC: mov 0xC(%ebx),%ecx;");
    asm("loc_4CBDEF: test %ecx,%ecx;");
    asm("loc_4CBDF1: je loc_4CBE18;");
    asm("loc_4CBDF3: mov (%ecx),%eax;");
    asm("loc_4CBDF5: calll *0x74(%eax);");
    asm("loc_4CBDF8: test %al,%al;");
    asm("loc_4CBDFA: je loc_4CBE18;");
    asm("loc_4CBDFC: mov 0x34(%ebp),%edx;");
    asm("loc_4CBDFF: mov 0x2C(%ebp),%ecx;");
    asm("loc_4CBE02: add $0x10,%edx;");
    asm("loc_4CBE05: mov %edx,%eax;");
    asm("loc_4CBE07: cmp %ecx,%eax;");
    asm("loc_4CBE09: mov %edx,0x34(%ebp);");
    asm("loc_4CBE0C: mov %ebp,%ecx;");
    asm("loc_4CBE0E: je loc_4CBE44;");
    asm("loc_4CBE10: push %eax;");
    asm("loc_4CBE11: call _sub_4CBFC0;");
    asm("loc_4CBE16: jmp loc_4CBE49;");
    asm("loc_4CBE18: flds 0x10(%ebp);");
    asm("loc_4CBE1B: fcomps _data_5C7474;");
    asm("loc_4CBE21: fnstsw %ax;");
    asm("loc_4CBE23: test $0x41,%ah;");
    asm("loc_4CBE26: jne loc_4CBE49;");
    asm("loc_4CBE28: flds 0x10(%ebp);");
    asm("loc_4CBE2B: fsubs 0x9C(%esp);");
    asm("loc_4CBE32: fsts 0x10(%ebp);");
    asm("loc_4CBE35: fcomps _data_5C7474;");
    asm("loc_4CBE3B: fnstsw %ax;");
    asm("loc_4CBE3D: test $5,%ah;");
    asm("loc_4CBE40: jp loc_4CBE49;");
    asm("loc_4CBE42: mov %ebp,%ecx;");
    asm("loc_4CBE44: call _sub_4CBB40;");
    asm("loc_4CBE49: mov 0x38(%ebp),%cl;");
    asm("loc_4CBE4C: xor %al,%al;");
    asm("loc_4CBE4E: test %cl,%cl;");
    asm("loc_4CBE50: je loc_4CBE5E;");
    asm("loc_4CBE52: mov 0x85(%ebp),%cl;");
    asm("loc_4CBE58: test %cl,%cl;");
    asm("loc_4CBE5A: jne loc_4CBE5E;");
    asm("loc_4CBE5C: mov $1,%al;");
    asm("loc_4CBE5E: mov 8(%ebp),%cl;");
    asm("loc_4CBE61: test %cl,%cl;");
    asm("loc_4CBE63: je loc_4CBE76;");
    asm("loc_4CBE65: mov (%ebp),%ecx;");
    asm("loc_4CBE68: test %ecx,%ecx;");
    asm("loc_4CBE6A: je loc_4CBE7A;");
    asm("loc_4CBE6C: add $0xFFFFFF64,%ecx;");
    asm("loc_4CBE72: test %ecx,%ecx;");
    asm("loc_4CBE74: je loc_4CBE7A;");
    asm("loc_4CBE76: mov $1,%al;");
    asm("loc_4CBE78: jmp loc_4CBEBD;");
    asm("loc_4CBE7A: test %al,%al;");
    asm("loc_4CBE7C: jne loc_4CBEBF;");
    asm("loc_4CBE7E: flds 0x1B8(%ebp);");
    asm("loc_4CBE84: fcompl _data_5C8BA8;");
    asm("loc_4CBE8A: fnstsw %ax;");
    asm("loc_4CBE8C: test $0x41,%ah;");
    asm("loc_4CBE8F: jne loc_4CBEA4;");
    asm("loc_4CBE91: flds 0x1B8(%ebp);");
    asm("loc_4CBE97: fsubs 0x9C(%esp);");
    asm("loc_4CBE9E: fstps 0x1B8(%ebp);");
    asm("loc_4CBEA4: flds 0x1B8(%ebp);");
    asm("loc_4CBEAA: fcompl _data_5C8BA8;");
    asm("loc_4CBEB0: fnstsw %ax;");
    asm("loc_4CBEB2: test $0x41,%ah;");
    asm("loc_4CBEB5: jne loc_4CBEBB;");
    asm("loc_4CBEB7: mov $1,%al;");
    asm("loc_4CBEB9: jmp loc_4CBEBD;");
    asm("loc_4CBEBB: xor %al,%al;");
    asm("loc_4CBEBD: test %al,%al;");
    asm("loc_4CBEBF: mov 0x1C0(%ebp),%edx;");
    asm("loc_4CBEC5: mov $1,%ecx;");
    asm("loc_4CBECA: sete %bl;");
    asm("loc_4CBECD: cmp %ecx,%edx;");
    asm("loc_4CBECF: jne loc_4CBF1B;");
    asm("loc_4CBED1: test %al,%al;");
    asm("loc_4CBED3: jne loc_4CBF0E;");
    asm("loc_4CBED5: movl $0,0x1C0(%ebp);");
    asm("loc_4CBEDF: calll *_import_5C60D0;");
    asm("loc_4CBEE5: test %al,%al;");
    asm("loc_4CBEE7: je loc_4CBF0E;");
    asm("loc_4CBEE9: mov 0x1CC(%ebp),%eax;");
    asm("loc_4CBEEF: mov _data_67ECD0,%ecx;");
    asm("loc_4CBEF5: mov (%ecx),%edx;");
    asm("loc_4CBEF7: push $0;");
    asm("loc_4CBEF9: push %eax;");
    asm("loc_4CBEFA: mov 0x1C8(%ebp),%eax;");
    asm("loc_4CBF00: push %eax;");
    asm("loc_4CBF01: mov 0x1C4(%ebp),%eax;");
    asm("loc_4CBF07: push %eax;");
    asm("loc_4CBF08: calll *0xFC(%edx);");
    asm("loc_4CBF0E: mov %bl,%al;");
    asm("loc_4CBF10: pop %ebp;");
    asm("loc_4CBF11: pop %ebx;");
    asm("loc_4CBF12: add $0x90,%esp;");
    asm("loc_4CBF18: ret $4;");
    asm("loc_4CBF1B: test %al,%al;");
    asm("loc_4CBF1D: mov %bl,%al;");
    asm("loc_4CBF1F: je loc_4CBF10;");
    asm("loc_4CBF21: mov %ecx,0x1C0(%ebp);");
    asm("loc_4CBF27: pop %ebp;");
    asm("loc_4CBF28: pop %ebx;");
    asm("loc_4CBF29: add $0x90,%esp;");
    asm("loc_4CBF2F: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBF40() // _sub_4CBF40
{
    __DEBUG_ASM(4CBF40);
    // chunk 0x4CBF40 _sub_4CBF40
    asm("loc_4CBF40: mov 4(%esp),%eax;");
    asm("loc_4CBF44: mov 8(%esp),%ecx;");
    asm("loc_4CBF48: flds 8(%eax);");
    asm("loc_4CBF4B: fmuls 8(%ecx);");
    asm("loc_4CBF4E: flds 4(%eax);");
    asm("loc_4CBF51: fmuls 4(%ecx);");
    asm("loc_4CBF54: faddp;");
    asm("loc_4CBF56: flds (%eax);");
    asm("loc_4CBF58: fmuls (%ecx);");
    asm("loc_4CBF5A: faddp;");
    asm("loc_4CBF5C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBF60() // _sub_4CBF60
{
    __DEBUG_ASM(4CBF60);
    // chunk 0x4CBF60 _sub_4CBF60
    asm("loc_4CBF60: flds 0x18(%ecx);");
    asm("loc_4CBF63: mov 4(%esp),%eax;");
    asm("loc_4CBF67: flds 0xC(%ecx);");
    asm("loc_4CBF6A: flds (%ecx);");
    asm("loc_4CBF6C: fstps (%eax);");
    asm("loc_4CBF6E: fstps 4(%eax);");
    asm("loc_4CBF71: fstps 8(%eax);");
    asm("loc_4CBF74: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBF80() // _sub_4CBF80
{
    __DEBUG_ASM(4CBF80);
    // chunk 0x4CBF80 _sub_4CBF80
    asm("loc_4CBF80: flds 0x1C(%ecx);");
    asm("loc_4CBF83: mov 4(%esp),%eax;");
    asm("loc_4CBF87: flds 0x10(%ecx);");
    asm("loc_4CBF8A: flds 4(%ecx);");
    asm("loc_4CBF8D: fstps (%eax);");
    asm("loc_4CBF8F: fstps 4(%eax);");
    asm("loc_4CBF92: fstps 8(%eax);");
    asm("loc_4CBF95: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBFA0() // _sub_4CBFA0
{
    __DEBUG_ASM(4CBFA0);
    // chunk 0x4CBFA0 _sub_4CBFA0
    asm("loc_4CBFA0: flds 0x20(%ecx);");
    asm("loc_4CBFA3: mov 4(%esp),%eax;");
    asm("loc_4CBFA7: flds 0x14(%ecx);");
    asm("loc_4CBFAA: flds 8(%ecx);");
    asm("loc_4CBFAD: fstps (%eax);");
    asm("loc_4CBFAF: fstps 4(%eax);");
    asm("loc_4CBFB2: fstps 8(%eax);");
    asm("loc_4CBFB5: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CBFC0() // _sub_4CBFC0
{
    __DEBUG_ASM(4CBFC0);
    // chunk 0x4CBFC0 _sub_4CBFC0
    asm("loc_4CBFC0: sub $0x18,%esp;");
    asm("loc_4CBFC3: mov 4(%esp),%al;");
    asm("loc_4CBFC7: push %esi;");
    asm("loc_4CBFC8: mov %ecx,%esi;");
    asm("loc_4CBFCA: mov 0x15(%esi),%cl;");
    asm("loc_4CBFCD: flds 0x18(%esi);");
    asm("loc_4CBFD0: fadds 0x1C(%esi);");
    asm("loc_4CBFD3: and $0xF8,%al;");
    asm("loc_4CBFD5: shl $2,%cl;");
    asm("loc_4CBFD8: xor %al,%cl;");
    asm("loc_4CBFDA: and $4,%cl;");
    asm("loc_4CBFDD: fstps 0x18(%esp);");
    asm("loc_4CBFE1: xor %cl,%al;");
    asm("loc_4CBFE3: push %edi;");
    asm("loc_4CBFE4: mov %al,0xC(%esp);");
    asm("loc_4CBFE8: mov 0x24(%esp),%eax;");
    asm("loc_4CBFEC: mov 4(%eax),%ecx;");
    asm("loc_4CBFEF: push $0;");
    asm("loc_4CBFF1: lea 0xC(%eax),%edi;");
    asm("loc_4CBFF4: push %edi;");
    asm("loc_4CBFF5: lea 0x10(%esp),%edx;");
    asm("loc_4CBFF9: push %edx;");
    asm("loc_4CBFFA: push %ecx;");
    asm("loc_4CBFFB: movl $0,0x18(%esp);");
    asm("loc_4CC003: movl $0,0x20(%esp);");
    asm("loc_4CC00B: movl $0,0x24(%esp);");
    asm("loc_4CC013: movl $0,0x28(%esp);");
    asm("loc_4CC01B: call _sub_428680;");
    asm("loc_4CC020: add $0x10,%esp;");
    asm("loc_4CC023: test %al,%al;");
    asm("loc_4CC025: je loc_4CC04E;");
    asm("loc_4CC027: mov (%edi),%eax;");
    asm("loc_4CC029: movl $2,4(%eax);");
    asm("loc_4CC030: flds 0x18(%esi);");
    asm("loc_4CC033: mov (%edi),%ecx;");
    asm("loc_4CC035: fadds 0x1C(%esi);");
    asm("loc_4CC038: mov (%ecx),%edx;");
    asm("loc_4CC03A: push %ecx;");
    asm("loc_4CC03B: fstps (%esp);");
    asm("loc_4CC03E: calll *0x80(%edx);");
    asm("loc_4CC044: pop %edi;");
    asm("loc_4CC045: mov $1,%al;");
    asm("loc_4CC047: pop %esi;");
    asm("loc_4CC048: add $0x18,%esp;");
    asm("loc_4CC04B: ret $4;");
    asm("loc_4CC04E: pop %edi;");
    asm("loc_4CC04F: movl $0x40400000,0x10(%esi);");
    asm("loc_4CC056: mov $1,%al;");
    asm("loc_4CC058: pop %esi;");
    asm("loc_4CC059: add $0x18,%esp;");
    asm("loc_4CC05C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC060() // _sub_4CC060
{
    __DEBUG_ASM(4CC060);
    // chunk 0x4CC060 _sub_4CC060
    asm("loc_4CC060: push %ecx;");
    asm("loc_4CC061: flds 8(%esp);");
    asm("loc_4CC065: fmuls 8(%esp);");
    asm("loc_4CC069: flds 0xC(%esp);");
    asm("loc_4CC06D: fmuls 0xC(%esp);");
    asm("loc_4CC071: faddp;");
    asm("loc_4CC073: fsqrt;");
    asm("loc_4CC075: fsts (%esp);");
    asm("loc_4CC079: flds 0x10(%esp);");
    asm("loc_4CC07D: fmuls _data_5D7478;");
    asm("loc_4CC083: fabs;");
    asm("loc_4CC085: fcompp;");
    asm("loc_4CC087: fnstsw %ax;");
    asm("loc_4CC089: test $0x41,%ah;");
    asm("loc_4CC08C: jne loc_4CC098;");
    asm("loc_4CC08E: flds _data_5C7474;");
    asm("loc_4CC094: pop %ecx;");
    asm("loc_4CC095: ret $0xC;");
    asm("loc_4CC098: flds (%esp);");
    asm("loc_4CC09C: fcompl _data_5C7720;");
    asm("loc_4CC0A2: fnstsw %ax;");
    asm("loc_4CC0A4: test $0x41,%ah;");
    asm("loc_4CC0A7: jp loc_4CC0B3;");
    asm("loc_4CC0A9: flds _data_5C7474;");
    asm("loc_4CC0AF: pop %ecx;");
    asm("loc_4CC0B0: ret $0xC;");
    asm("loc_4CC0B3: flds _data_5C75DC;");
    asm("loc_4CC0B9: fdivs (%esp);");
    asm("loc_4CC0BD: flds 8(%esp);");
    asm("loc_4CC0C1: fmul %st(1),%st;");
    asm("loc_4CC0C3: fstps 8(%esp);");
    asm("loc_4CC0C7: fmuls 0xC(%esp);");
    asm("loc_4CC0CB: fcoml _data_5C8BA8;");
    asm("loc_4CC0D1: fnstsw %ax;");
    asm("loc_4CC0D3: test $5,%ah;");
    asm("loc_4CC0D6: jp loc_4CC0DA;");
    asm("loc_4CC0D8: fchs;");
    asm("loc_4CC0DA: flds 8(%esp);");
    asm("loc_4CC0DE: mov _data_610900,%eax;");
    asm("loc_4CC0E3: fchs;");
    asm("loc_4CC0E5: mov %eax,0xC(%esp);");
    asm("loc_4CC0E9: fxch;");
    asm("loc_4CC0EB: fpatan;");
    asm("loc_4CC0ED: flds _data_6108FC;");
    asm("loc_4CC0F3: fmull _data_5D7470;");
    asm("loc_4CC0F9: fxch;");
    asm("loc_4CC0FB: fxch;");
    asm("loc_4CC0FD: fmulp;");
    asm("loc_4CC0FF: fld %st(0);");
    asm("loc_4CC101: fsin;");
    asm("loc_4CC103: fchs;");
    asm("loc_4CC105: fstps 0x10(%esp);");
    asm("loc_4CC109: fcos;");
    asm("loc_4CC10B: flds 0xC(%esp);");
    asm("loc_4CC10F: fmull _data_5D5138;");
    asm("loc_4CC115: fstps 8(%esp);");
    asm("loc_4CC119: fcoms 8(%esp);");
    asm("loc_4CC11D: fnstsw %ax;");
    asm("loc_4CC11F: test $5,%ah;");
    asm("loc_4CC122: jp loc_4CC12A;");
    asm("loc_4CC124: fstp %st(0);");
    asm("loc_4CC126: flds 8(%esp);");
    asm("loc_4CC12A: flds 0xC(%esp);");
    asm("loc_4CC12E: fmuls 0x10(%esp);");
    asm("loc_4CC132: fmull _data_5CA320;");
    asm("loc_4CC138: fdivp;");
    asm("loc_4CC13A: pop %ecx;");
    asm("loc_4CC13B: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC140() // _sub_4CC140
{
    __DEBUG_ASM(4CC140);
    // chunk 0x4CC140 _sub_4CC140
    asm("loc_4CC140: sub $0x38,%esp;");
    asm("loc_4CC143: push %ebx;");
    asm("loc_4CC144: push %ebp;");
    asm("loc_4CC145: push %esi;");
    asm("loc_4CC146: push %edi;");
    asm("loc_4CC147: mov %ecx,%edi;");
    asm("loc_4CC149: mov 0x38(%edi),%al;");
    asm("loc_4CC14C: lea 0x38(%edi),%esi;");
    asm("loc_4CC14F: xor %ebx,%ebx;");
    asm("loc_4CC151: cmp %bl,%al;");
    asm("loc_4CC153: je loc_4CC2AF;");
    asm("loc_4CC159: cmp %bl,0x4C(%esi);");
    asm("loc_4CC15C: je loc_4CC16D;");
    asm("loc_4CC15E: movl $0x3F800000,0x44(%esi);");
    asm("loc_4CC165: mov %bl,0x4C(%esi);");
    asm("loc_4CC168: movb $1,(%esi);");
    asm("loc_4CC16B: jmp loc_4CC17A;");
    asm("loc_4CC16D: cmp %bl,0x4D(%esi);");
    asm("loc_4CC170: je loc_4CC17A;");
    asm("loc_4CC172: mov %ebx,0x44(%esi);");
    asm("loc_4CC175: mov %bl,0x4D(%esi);");
    asm("loc_4CC178: mov %bl,(%esi);");
    asm("loc_4CC17A: push $_data_67DBF8;");
    asm("loc_4CC17F: mov %esi,%ecx;");
    asm("loc_4CC181: call _sub_4CCDE0;");
    asm("loc_4CC186: lea 0xD4(%edi),%eax;");
    asm("loc_4CC18C: mov (%eax),%ecx;");
    asm("loc_4CC18E: mov 4(%eax),%edx;");
    asm("loc_4CC191: mov 8(%eax),%eax;");
    asm("loc_4CC194: mov %ecx,0x1C(%esp);");
    asm("loc_4CC198: mov %edx,0x20(%esp);");
    asm("loc_4CC19C: lea 0x164(%edi),%ecx;");
    asm("loc_4CC1A2: mov (%ecx),%edx;");
    asm("loc_4CC1A4: mov %eax,0x24(%esp);");
    asm("loc_4CC1A8: mov 4(%ecx),%eax;");
    asm("loc_4CC1AB: mov 8(%ecx),%ecx;");
    asm("loc_4CC1AE: mov %edx,0x10(%esp);");
    asm("loc_4CC1B2: lea 0x10(%esp),%edx;");
    asm("loc_4CC1B6: mov %eax,0x14(%esp);");
    asm("loc_4CC1BA: push %edx;");
    asm("loc_4CC1BB: lea 0x20(%esp),%eax;");
    asm("loc_4CC1BF: mov %ecx,0x1C(%esp);");
    asm("loc_4CC1C3: push %eax;");
    asm("loc_4CC1C4: lea 0x40(%esp),%ecx;");
    asm("loc_4CC1C8: push %ecx;");
    asm("loc_4CC1C9: call _sub_4C71B0;");
    asm("loc_4CC1CE: mov (%eax),%ecx;");
    asm("loc_4CC1D0: mov 4(%eax),%edx;");
    asm("loc_4CC1D3: mov 8(%eax),%ebp;");
    asm("loc_4CC1D6: mov 0xC(%eax),%eax;");
    asm("loc_4CC1D9: add $0xC,%esp;");
    asm("loc_4CC1DC: mov %edx,0x2C(%esp);");
    asm("loc_4CC1E0: push $1;");
    asm("loc_4CC1E2: lea 0x2C(%esp),%edx;");
    asm("loc_4CC1E6: mov %ecx,0x2C(%esp);");
    asm("loc_4CC1EA: mov 0x54(%esp),%ecx;");
    asm("loc_4CC1EE: push %edx;");
    asm("loc_4CC1EF: mov %ebp,0x38(%esp);");
    asm("loc_4CC1F3: mov %eax,0x3C(%esp);");
    asm("loc_4CC1F7: call _sub_40FB80;");
    asm("loc_4CC1FC: cmp %bl,(%esi);");
    asm("loc_4CC1FE: je loc_4CC2AF;");
    asm("loc_4CC204: mov 0x170(%edi),%ebp;");
    asm("loc_4CC20A: cmp %ebx,%ebp;");
    asm("loc_4CC20C: je loc_4CC26F;");
    asm("loc_4CC20E: flds 0x4C(%esp);");
    asm("loc_4CC212: mov 0x4C(%esp),%eax;");
    asm("loc_4CC216: fcompl _data_5C8BA8;");
    asm("loc_4CC21C: mov %eax,0x50(%esp);");
    asm("loc_4CC220: fnstsw %ax;");
    asm("loc_4CC222: test $0x41,%ah;");
    asm("loc_4CC225: jne loc_4CC26F;");
    asm("loc_4CC227: flds 0x50(%esp);");
    asm("loc_4CC22B: fcomps _data_5D043C;");
    asm("loc_4CC231: fnstsw %ax;");
    asm("loc_4CC233: test $5,%ah;");
    asm("loc_4CC236: jp loc_4CC242;");
    asm("loc_4CC238: mov 0x50(%esp),%ecx;");
    asm("loc_4CC23C: mov %ecx,0x4C(%esp);");
    asm("loc_4CC240: jmp loc_4CC24A;");
    asm("loc_4CC242: movl $0x3E4CCCCD,0x4C(%esp);");
    asm("loc_4CC24A: mov 0x4C(%esp),%edx;");
    asm("loc_4CC24E: push %edx;");
    asm("loc_4CC24F: mov %ebp,%ecx;");
    asm("loc_4CC251: call _sub_4CBA60;");
    asm("loc_4CC256: flds 0x50(%esp);");
    asm("loc_4CC25A: fsubs 0x4C(%esp);");
    asm("loc_4CC25E: fsts 0x50(%esp);");
    asm("loc_4CC262: fcompl _data_5C8BA8;");
    asm("loc_4CC268: fnstsw %ax;");
    asm("loc_4CC26A: test $0x41,%ah;");
    asm("loc_4CC26D: je loc_4CC227;");
    asm("loc_4CC26F: cmp %bl,8(%edi);");
    asm("loc_4CC272: je loc_4CC2AF;");
    asm("loc_4CC274: mov (%edi),%eax;");
    asm("loc_4CC276: cmp %ebx,%eax;");
    asm("loc_4CC278: je loc_4CC283;");
    asm("loc_4CC27A: add $0xFFFFFF64,%eax;");
    asm("loc_4CC27F: cmp %ebx,%eax;");
    asm("loc_4CC281: jne loc_4CC2AF;");
    asm("loc_4CC283: cmp %bl,(%esi);");
    asm("loc_4CC285: je loc_4CC2AF;");
    asm("loc_4CC287: cmp %bl,0x4D(%esi);");
    asm("loc_4CC28A: jne loc_4CC2AF;");
    asm("loc_4CC28C: mov %bl,0x4C(%esi);");
    asm("loc_4CC28F: movb $1,0x4D(%esi);");
    asm("loc_4CC293: cmp %ebx,0x170(%edi);");
    asm("loc_4CC299: je loc_4CC2A1;");
    asm("loc_4CC29B: mov %ebx,0x170(%edi);");
    asm("loc_4CC2A1: mov 0x1BC(%edi),%edi;");
    asm("loc_4CC2A7: cmp %ebx,%edi;");
    asm("loc_4CC2A9: je loc_4CC2AF;");
    asm("loc_4CC2AB: andb $0xFC,0x6C(%edi);");
    asm("loc_4CC2AF: pop %edi;");
    asm("loc_4CC2B0: pop %esi;");
    asm("loc_4CC2B1: pop %ebp;");
    asm("loc_4CC2B2: pop %ebx;");
    asm("loc_4CC2B3: add $0x38,%esp;");
    asm("loc_4CC2B6: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC2C0() // _sub_4CC2C0
{
    __DEBUG_ASM(4CC2C0);
    // chunk 0x4CC2C0 _sub_4CC2C0
    asm("loc_4CC2C0: push %ecx;");
    asm("loc_4CC2C1: push %ebx;");
    asm("loc_4CC2C2: push %esi;");
    asm("loc_4CC2C3: mov %ecx,%esi;");
    asm("loc_4CC2C5: mov 0x38(%esi),%al;");
    asm("loc_4CC2C8: xor %ebx,%ebx;");
    asm("loc_4CC2CA: cmp %bl,%al;");
    asm("loc_4CC2CC: je loc_4CC2FF;");
    asm("loc_4CC2CE: cmp %bl,0x85(%esi);");
    asm("loc_4CC2D4: jne loc_4CC2FF;");
    asm("loc_4CC2D6: mov %bl,0x84(%esi);");
    asm("loc_4CC2DC: movb $1,0x85(%esi);");
    asm("loc_4CC2E3: cmp %ebx,0x170(%esi);");
    asm("loc_4CC2E9: je loc_4CC2F1;");
    asm("loc_4CC2EB: mov %ebx,0x170(%esi);");
    asm("loc_4CC2F1: mov 0x1BC(%esi),%eax;");
    asm("loc_4CC2F7: cmp %ebx,%eax;");
    asm("loc_4CC2F9: je loc_4CC2FF;");
    asm("loc_4CC2FB: andb $0xFC,0x6C(%eax);");
    asm("loc_4CC2FF: calll *_import_5C60D0;");
    asm("loc_4CC305: test %al,%al;");
    asm("loc_4CC307: je loc_4CC32E;");
    asm("loc_4CC309: mov 0x1CC(%esi),%edx;");
    asm("loc_4CC30F: mov _data_67ECD0,%ecx;");
    asm("loc_4CC315: mov (%ecx),%eax;");
    asm("loc_4CC317: push $2;");
    asm("loc_4CC319: push %edx;");
    asm("loc_4CC31A: mov 0x1C8(%esi),%edx;");
    asm("loc_4CC320: push %edx;");
    asm("loc_4CC321: mov 0x1C4(%esi),%edx;");
    asm("loc_4CC327: push %edx;");
    asm("loc_4CC328: calll *0xFC(%eax);");
    asm("loc_4CC32E: mov 0xC(%esi),%ecx;");
    asm("loc_4CC331: cmp %ebx,%ecx;");
    asm("loc_4CC333: je loc_4CC346;");
    asm("loc_4CC335: mov (%ecx),%eax;");
    asm("loc_4CC337: calll *0x60(%eax);");
    asm("loc_4CC33A: mov 0xC(%esi),%eax;");
    asm("loc_4CC33D: mov (%eax),%ecx;");
    asm("loc_4CC33F: push %eax;");
    asm("loc_4CC340: calll *8(%ecx);");
    asm("loc_4CC343: mov %ebx,0xC(%esi);");
    asm("loc_4CC346: mov 0x2C(%esi),%eax;");
    asm("loc_4CC349: push %ebp;");
    asm("loc_4CC34A: push %edi;");
    asm("loc_4CC34B: mov 0x28(%esi),%edi;");
    asm("loc_4CC34E: cmp %eax,%edi;");
    asm("loc_4CC350: je loc_4CC38F;");
    asm("loc_4CC352: mov 4(%edi),%ecx;");
    asm("loc_4CC355: cmp %ebx,%ecx;");
    asm("loc_4CC357: je loc_4CC367;");
    asm("loc_4CC359: cmpb $1,8(%edi);");
    asm("loc_4CC35D: jne loc_4CC367;");
    asm("loc_4CC35F: mov (%ecx),%edx;");
    asm("loc_4CC361: calll *0x10(%edx);");
    asm("loc_4CC364: mov %bl,8(%edi);");
    asm("loc_4CC367: mov 0xC(%edi),%eax;");
    asm("loc_4CC36A: cmp %ebx,%eax;");
    asm("loc_4CC36C: je loc_4CC385;");
    asm("loc_4CC36E: mov %eax,%ecx;");
    asm("loc_4CC370: cmp %ebx,%ecx;");
    asm("loc_4CC372: je loc_4CC385;");
    asm("loc_4CC374: mov (%ecx),%eax;");
    asm("loc_4CC376: calll *0x60(%eax);");
    asm("loc_4CC379: mov 0xC(%edi),%eax;");
    asm("loc_4CC37C: mov (%eax),%ecx;");
    asm("loc_4CC37E: push %eax;");
    asm("loc_4CC37F: calll *8(%ecx);");
    asm("loc_4CC382: mov %ebx,0xC(%edi);");
    asm("loc_4CC385: mov 0x2C(%esi),%eax;");
    asm("loc_4CC388: add $0x10,%edi;");
    asm("loc_4CC38B: cmp %eax,%edi;");
    asm("loc_4CC38D: jne loc_4CC352;");
    asm("loc_4CC38F: mov 0x2C(%esi),%eax;");
    asm("loc_4CC392: cmp %eax,%eax;");
    asm("loc_4CC394: mov 0x28(%esi),%edi;");
    asm("loc_4CC397: lea 0x24(%esi),%ebp;");
    asm("loc_4CC39A: mov %eax,0x10(%esp);");
    asm("loc_4CC39E: je loc_4CC3CA;");
    asm("loc_4CC3A0: mov %eax,%edx;");
    asm("loc_4CC3A2: mov (%edx),%ebx;");
    asm("loc_4CC3A4: mov %edi,%ecx;");
    asm("loc_4CC3A6: mov %ebx,(%ecx);");
    asm("loc_4CC3A8: mov 4(%edx),%ebx;");
    asm("loc_4CC3AB: mov %ebx,4(%ecx);");
    asm("loc_4CC3AE: mov 8(%edx),%ebx;");
    asm("loc_4CC3B1: mov %ebx,8(%ecx);");
    asm("loc_4CC3B4: mov 0xC(%edx),%edx;");
    asm("loc_4CC3B7: mov %edx,0xC(%ecx);");
    asm("loc_4CC3BA: mov 0x10(%esp),%ecx;");
    asm("loc_4CC3BE: add $0x10,%eax;");
    asm("loc_4CC3C1: add $0x10,%edi;");
    asm("loc_4CC3C4: cmp %ecx,%eax;");
    asm("loc_4CC3C6: jne loc_4CC3A0;");
    asm("loc_4CC3C8: xor %ebx,%ebx;");
    asm("loc_4CC3CA: mov 8(%ebp),%eax;");
    asm("loc_4CC3CD: push %eax;");
    asm("loc_4CC3CE: push %edi;");
    asm("loc_4CC3CF: mov %ebp,%ecx;");
    asm("loc_4CC3D1: call _sub_53AAA0;");
    asm("loc_4CC3D6: mov %edi,8(%ebp);");
    asm("loc_4CC3D9: cmp %bl,0x14(%esi);");
    asm("loc_4CC3DC: pop %edi;");
    asm("loc_4CC3DD: pop %ebp;");
    asm("loc_4CC3DE: je loc_4CC406;");
    asm("loc_4CC3E0: call _sub_428DE0;");
    asm("loc_4CC3E5: decl _data_6735B0;");
    asm("loc_4CC3EB: jne loc_4CC403;");
    asm("loc_4CC3ED: mov _data_6108F8,%ecx;");
    asm("loc_4CC3F3: movl $0,_data_6735A4;");
    asm("loc_4CC3FD: mov %ecx,_data_6735AC;");
    asm("loc_4CC403: mov %bl,0x14(%esi);");
    asm("loc_4CC406: cmp %ebx,(%esi);");
    asm("loc_4CC408: je loc_4CC413;");
    asm("loc_4CC40A: push %ebx;");
    asm("loc_4CC40B: mov %esi,%ecx;");
    asm("loc_4CC40D: calll *_import_5C62A8;");
    asm("loc_4CC413: mov %ebx,0xC(%esi);");
    asm("loc_4CC416: mov %ebx,0x10(%esi);");
    asm("loc_4CC419: mov %bl,0x14(%esi);");
    asm("loc_4CC41C: mov %bl,0x15(%esi);");
    asm("loc_4CC41F: mov %ebx,0x18(%esi);");
    asm("loc_4CC422: mov %ebx,0x1C(%esi);");
    asm("loc_4CC425: movb $1,8(%esi);");
    asm("loc_4CC429: movb $1,0x20(%esi);");
    asm("loc_4CC42D: pop %esi;");
    asm("loc_4CC42E: pop %ebx;");
    asm("loc_4CC42F: pop %ecx;");
    asm("loc_4CC430: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC440() // _sub_4CC440
{
    __DEBUG_ASM(4CC440);
    // chunk 0x4CC440 _sub_4CC440
    asm("loc_4CC440: sub $0x60,%esp;");
    asm("loc_4CC443: push %ebx;");
    asm("loc_4CC444: push %ebp;");
    asm("loc_4CC445: push %esi;");
    asm("loc_4CC446: push %edi;");
    asm("loc_4CC447: push $0xDE1;");
    asm("loc_4CC44C: mov %ecx,%esi;");
    asm("loc_4CC44E: call _sub_421ED0;");
    asm("loc_4CC453: push $0xB44;");
    asm("loc_4CC458: call _sub_421ED0;");
    asm("loc_4CC45D: push $0xB71;");
    asm("loc_4CC462: call _sub_421ED0;");
    asm("loc_4CC467: push $0xB60;");
    asm("loc_4CC46C: call _sub_421ED0;");
    asm("loc_4CC471: push $0x660;");
    asm("loc_4CC476: push $_data_5D7220;");
    asm("loc_4CC47B: push $_data_67DBF8;");
    asm("loc_4CC480: call _sub_422610;");
    asm("loc_4CC485: push $_data_67DBF8;");
    asm("loc_4CC48A: call _sub_422950;");
    asm("loc_4CC48F: add $0x20,%esp;");
    asm("loc_4CC492: call _sub_4101E0;");
    asm("loc_4CC497: mov _import_5C6DE0,%eax;");
    asm("loc_4CC49C: mov (%eax),%eax;");
    asm("loc_4CC49E: mov (%eax),%ecx;");
    asm("loc_4CC4A0: push $0xFFFFFFFF;");
    asm("loc_4CC4A2: push $0x8B;");
    asm("loc_4CC4A7: push %eax;");
    asm("loc_4CC4A8: calll *0xF0(%ecx);");
    asm("loc_4CC4AE: mov _import_5C6DE0,%edx;");
    asm("loc_4CC4B4: mov (%edx),%eax;");
    asm("loc_4CC4B6: mov (%eax),%ecx;");
    asm("loc_4CC4B8: push $1;");
    asm("loc_4CC4BA: push $0x16;");
    asm("loc_4CC4BC: push %eax;");
    asm("loc_4CC4BD: calll *0xF0(%ecx);");
    asm("loc_4CC4C3: add $0x5C,%esi;");
    asm("loc_4CC4C6: mov (%esi),%edx;");
    asm("loc_4CC4C8: mov 4(%esi),%eax;");
    asm("loc_4CC4CB: mov 8(%esi),%esi;");
    asm("loc_4CC4CE: lea 0x40(%esp),%ecx;");
    asm("loc_4CC4D2: mov %edx,0x28(%esp);");
    asm("loc_4CC4D6: mov %eax,0x2C(%esp);");
    asm("loc_4CC4DA: movl $0,0x1C(%esp);");
    asm("loc_4CC4E2: movl $0,0x20(%esp);");
    asm("loc_4CC4EA: movl $0,0x24(%esp);");
    asm("loc_4CC4F2: call _sub_4215B0;");
    asm("loc_4CC4F7: mov 0x1C(%esp),%ecx;");
    asm("loc_4CC4FB: mov 0x20(%esp),%edx;");
    asm("loc_4CC4FF: mov 0x24(%esp),%eax;");
    asm("loc_4CC503: mov %ecx,0x64(%esp);");
    asm("loc_4CC507: lea 0x40(%esp),%ecx;");
    asm("loc_4CC50B: push %ecx;");
    asm("loc_4CC50C: push $0;");
    asm("loc_4CC50E: mov %edx,0x70(%esp);");
    asm("loc_4CC512: mov %eax,0x74(%esp);");
    asm("loc_4CC516: call _sub_422690;");
    asm("loc_4CC51B: push $0xB71;");
    asm("loc_4CC520: call _sub_421ED0;");
    asm("loc_4CC525: push $0xB44;");
    asm("loc_4CC52A: call _sub_421ED0;");
    asm("loc_4CC52F: push $0xDE1;");
    asm("loc_4CC534: call _sub_421ED0;");
    asm("loc_4CC539: push $0xBE2;");
    asm("loc_4CC53E: call _sub_421DD0;");
    asm("loc_4CC543: push $1;");
    asm("loc_4CC545: push $2;");
    asm("loc_4CC547: call _sub_4220C0;");
    asm("loc_4CC54C: push $2;");
    asm("loc_4CC54E: call _sub_421670;");
    asm("loc_4CC553: push $_data_679BB4;");
    asm("loc_4CC558: call _sub_421BA0;");
    asm("loc_4CC55D: flds 0x54(%esp);");
    asm("loc_4CC561: fadds _data_5D2B1C;");
    asm("loc_4CC567: add $0x28,%esp;");
    asm("loc_4CC56A: push %esi;");
    asm("loc_4CC56B: sub $8,%esp;");
    asm("loc_4CC56E: fstps 4(%esp);");
    asm("loc_4CC572: lea 0x1C(%esp),%ecx;");
    asm("loc_4CC576: flds 0x34(%esp);");
    asm("loc_4CC57A: fsubs _data_5D2B1C;");
    asm("loc_4CC580: fstps (%esp);");
    asm("loc_4CC583: call _sub_422B80;");
    asm("loc_4CC588: flds 0x10(%esp);");
    asm("loc_4CC58C: fadds _data_5D747C;");
    asm("loc_4CC592: mov 0x10(%esp),%eax;");
    asm("loc_4CC596: mov 0x14(%esp),%ecx;");
    asm("loc_4CC59A: mov 0x18(%esp),%edx;");
    asm("loc_4CC59E: mov %eax,0x34(%esp);");
    asm("loc_4CC5A2: fsts 0x34(%esp);");
    asm("loc_4CC5A6: flds 0x14(%esp);");
    asm("loc_4CC5AA: mov %ecx,0x2C(%esp);");
    asm("loc_4CC5AE: fsubs _data_5D747C;");
    asm("loc_4CC5B4: mov %eax,0x1C(%esp);");
    asm("loc_4CC5B8: mov %ecx,0x20(%esp);");
    asm("loc_4CC5BC: push %edx;");
    asm("loc_4CC5BD: fstps 0x30(%esp);");
    asm("loc_4CC5C1: push %ecx;");
    asm("loc_4CC5C2: push %eax;");
    asm("loc_4CC5C3: fstps 0x28(%esp);");
    asm("loc_4CC5C7: mov %ecx,%esi;");
    asm("loc_4CC5C9: flds 0x2C(%esp);");
    asm("loc_4CC5CD: mov %edx,%edi;");
    asm("loc_4CC5CF: fsubs _data_5D747C;");
    asm("loc_4CC5D5: mov %eax,%ebx;");
    asm("loc_4CC5D7: mov %edx,0x3C(%esp);");
    asm("loc_4CC5DB: mov %edx,%ebp;");
    asm("loc_4CC5DD: fstps 0x2C(%esp);");
    asm("loc_4CC5E1: call _sub_421CC0;");
    asm("loc_4CC5E6: mov 0x40(%esp),%edx;");
    asm("loc_4CC5EA: push %edi;");
    asm("loc_4CC5EB: push %esi;");
    asm("loc_4CC5EC: push %edx;");
    asm("loc_4CC5ED: call _sub_421CC0;");
    asm("loc_4CC5F2: mov 0x4C(%esp),%eax;");
    asm("loc_4CC5F6: push %edi;");
    asm("loc_4CC5F7: push %esi;");
    asm("loc_4CC5F8: push %eax;");
    asm("loc_4CC5F9: call _sub_421CC0;");
    asm("loc_4CC5FE: mov 0x44(%esp),%esi;");
    asm("loc_4CC602: mov 0x40(%esp),%edi;");
    asm("loc_4CC606: push %ebp;");
    asm("loc_4CC607: push %esi;");
    asm("loc_4CC608: push %edi;");
    asm("loc_4CC609: call _sub_421CC0;");
    asm("loc_4CC60E: push %ebp;");
    asm("loc_4CC60F: push %esi;");
    asm("loc_4CC610: push %edi;");
    asm("loc_4CC611: call _sub_421CC0;");
    asm("loc_4CC616: mov 0x68(%esp),%edi;");
    asm("loc_4CC61A: mov %ebp,%esi;");
    asm("loc_4CC61C: push %esi;");
    asm("loc_4CC61D: push %edi;");
    asm("loc_4CC61E: push %ebx;");
    asm("loc_4CC61F: call _sub_421CC0;");
    asm("loc_4CC624: add $0x48,%esp;");
    asm("loc_4CC627: push %esi;");
    asm("loc_4CC628: push %edi;");
    asm("loc_4CC629: push %ebx;");
    asm("loc_4CC62A: call _sub_421CC0;");
    asm("loc_4CC62F: mov 0x24(%esp),%ecx;");
    asm("loc_4CC633: mov 0x20(%esp),%edx;");
    asm("loc_4CC637: mov 0x1C(%esp),%eax;");
    asm("loc_4CC63B: push %ecx;");
    asm("loc_4CC63C: push %edx;");
    asm("loc_4CC63D: push %eax;");
    asm("loc_4CC63E: call _sub_421CC0;");
    asm("loc_4CC643: add $0x18,%esp;");
    asm("loc_4CC646: pop %edi;");
    asm("loc_4CC647: pop %esi;");
    asm("loc_4CC648: pop %ebp;");
    asm("loc_4CC649: pop %ebx;");
    asm("loc_4CC64A: add $0x60,%esp;");
    asm("loc_4CC64D: jmp _sub_421690;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC660() // _sub_4CC660
{
    __DEBUG_ASM(4CC660);
    // chunk 0x4CC660 _sub_4CC660
    asm("loc_4CC660: sub $0x18,%esp;");
    asm("loc_4CC663: push %ebx;");
    asm("loc_4CC664: push %esi;");
    asm("loc_4CC665: push %edi;");
    asm("loc_4CC666: push $0xB71;");
    asm("loc_4CC66B: mov %ecx,%edi;");
    asm("loc_4CC66D: call _sub_421ED0;");
    asm("loc_4CC672: push $0xBE2;");
    asm("loc_4CC677: call _sub_421ED0;");
    asm("loc_4CC67C: mov 0x30(%esp),%esi;");
    asm("loc_4CC680: push %esi;");
    asm("loc_4CC681: call _sub_422950;");
    asm("loc_4CC686: push $0x6A1;");
    asm("loc_4CC68B: push $_data_5D7220;");
    asm("loc_4CC690: push %esi;");
    asm("loc_4CC691: call _sub_422610;");
    asm("loc_4CC696: push $0xBE2;");
    asm("loc_4CC69B: call _sub_421ED0;");
    asm("loc_4CC6A0: mov 0x4C(%esp),%eax;");
    asm("loc_4CC6A4: push %eax;");
    asm("loc_4CC6A5: call _sub_4220A0;");
    asm("loc_4CC6AA: push $0xC8;");
    asm("loc_4CC6AF: push $0x80;");
    asm("loc_4CC6B4: push $0x80;");
    asm("loc_4CC6B9: call _sub_421A70;");
    asm("loc_4CC6BE: push $8;");
    asm("loc_4CC6C0: call _sub_421670;");
    asm("loc_4CC6C5: xor %ebx,%ebx;");
    asm("loc_4CC6C7: push %ebx;");
    asm("loc_4CC6C8: push %ebx;");
    asm("loc_4CC6C9: call _sub_421CA0;");
    asm("loc_4CC6CE: mov _data_612370,%ecx;");
    asm("loc_4CC6D4: push %ecx;");
    asm("loc_4CC6D5: push $0x40400000;");
    asm("loc_4CC6DA: push $0xC0400000;");
    asm("loc_4CC6DF: call _sub_421CC0;");
    asm("loc_4CC6E4: mov _data_612368,%edx;");
    asm("loc_4CC6EA: add $0x44,%esp;");
    asm("loc_4CC6ED: push %ebx;");
    asm("loc_4CC6EE: push %edx;");
    asm("loc_4CC6EF: call _sub_421CA0;");
    asm("loc_4CC6F4: mov _data_612370,%eax;");
    asm("loc_4CC6F9: push %eax;");
    asm("loc_4CC6FA: push $0x40400000;");
    asm("loc_4CC6FF: push $0x40400000;");
    asm("loc_4CC704: call _sub_421CC0;");
    asm("loc_4CC709: mov _data_61236C,%ecx;");
    asm("loc_4CC70F: mov _data_612368,%edx;");
    asm("loc_4CC715: push %ecx;");
    asm("loc_4CC716: push %edx;");
    asm("loc_4CC717: call _sub_421CA0;");
    asm("loc_4CC71C: mov _data_612370,%eax;");
    asm("loc_4CC721: push %eax;");
    asm("loc_4CC722: push $0xC0400000;");
    asm("loc_4CC727: push $0x40400000;");
    asm("loc_4CC72C: call _sub_421CC0;");
    asm("loc_4CC731: mov _data_61236C,%ecx;");
    asm("loc_4CC737: push %ecx;");
    asm("loc_4CC738: push %ebx;");
    asm("loc_4CC739: call _sub_421CA0;");
    asm("loc_4CC73E: mov _data_612370,%edx;");
    asm("loc_4CC744: push %edx;");
    asm("loc_4CC745: push $0xC0400000;");
    asm("loc_4CC74A: push $0xC0400000;");
    asm("loc_4CC74F: call _sub_421CC0;");
    asm("loc_4CC754: call _sub_421690;");
    asm("loc_4CC759: mov $0x14,%al;");
    asm("loc_4CC75B: mov %al,0x4A(%esp);");
    asm("loc_4CC75F: mov %al,0x49(%esp);");
    asm("loc_4CC763: mov %al,0x48(%esp);");
    asm("loc_4CC767: lea 0x48(%esp),%eax;");
    asm("loc_4CC76B: push %eax;");
    asm("loc_4CC76C: call _sub_410240;");
    asm("loc_4CC771: add $0x40,%esp;");
    asm("loc_4CC774: push %ebx;");
    asm("loc_4CC775: push %esi;");
    asm("loc_4CC776: lea 0x34(%esp),%ecx;");
    asm("loc_4CC77A: push $1;");
    asm("loc_4CC77C: push %ecx;");
    asm("loc_4CC77D: call _sub_4102C0;");
    asm("loc_4CC782: push $0x18;");
    asm("loc_4CC784: call _sub_5792B0;");
    asm("loc_4CC789: add $0x14,%esp;");
    asm("loc_4CC78C: test %eax,%eax;");
    asm("loc_4CC78E: jne loc_4CC7AF;");
    asm("loc_4CC790: mov $0xFF,%al;");
    asm("loc_4CC792: lea 0x28(%esp),%edx;");
    asm("loc_4CC796: push %edx;");
    asm("loc_4CC797: mov %bl,0x2F(%esp);");
    asm("loc_4CC79B: mov %al,0x2C(%esp);");
    asm("loc_4CC79F: mov %al,0x2D(%esp);");
    asm("loc_4CC7A3: mov %al,0x2E(%esp);");
    asm("loc_4CC7A7: call _sub_410240;");
    asm("loc_4CC7AC: add $4,%esp;");
    asm("loc_4CC7AF: push $0xB44;");
    asm("loc_4CC7B4: call _sub_421DD0;");
    asm("loc_4CC7B9: push $0xB71;");
    asm("loc_4CC7BE: call _sub_421DD0;");
    asm("loc_4CC7C3: push $4;");
    asm("loc_4CC7C5: call _sub_422120;");
    asm("loc_4CC7CA: push $1;");
    asm("loc_4CC7CC: call _sub_422190;");
    asm("loc_4CC7D1: mov 0x170(%edi),%edi;");
    asm("loc_4CC7D7: add $0x10,%esp;");
    asm("loc_4CC7DA: cmp %ebx,%edi;");
    asm("loc_4CC7DC: je loc_4CC838;");
    asm("loc_4CC7DE: cmp %ebx,(%edi);");
    asm("loc_4CC7E0: je loc_4CC838;");
    asm("loc_4CC7E2: mov _import_5C6D58,%eax;");
    asm("loc_4CC7E7: lea 0x10(%esp),%edx;");
    asm("loc_4CC7EB: push %edx;");
    asm("loc_4CC7EC: mov %ebx,0x14(%esp);");
    asm("loc_4CC7F0: mov %ebx,0x18(%esp);");
    asm("loc_4CC7F4: mov %ebx,0x1C(%esp);");
    asm("loc_4CC7F8: mov %ebx,0x20(%esp);");
    asm("loc_4CC7FC: mov %ebx,0x24(%esp);");
    asm("loc_4CC800: mov (%edi),%edx;");
    asm("loc_4CC802: mov (%eax),%eax;");
    asm("loc_4CC804: mov (%eax),%ecx;");
    asm("loc_4CC806: push %ebx;");
    asm("loc_4CC807: push %edx;");
    asm("loc_4CC808: push %eax;");
    asm("loc_4CC809: calll *0x3C(%ecx);");
    asm("loc_4CC80C: mov _import_5C6D58,%eax;");
    asm("loc_4CC811: mov (%eax),%eax;");
    asm("loc_4CC813: mov (%eax),%ecx;");
    asm("loc_4CC815: push %ebx;");
    asm("loc_4CC816: lea 0x2C(%esp),%edx;");
    asm("loc_4CC81A: push %edx;");
    asm("loc_4CC81B: push %ebx;");
    asm("loc_4CC81C: lea 0x1C(%esp),%edx;");
    asm("loc_4CC820: push %edx;");
    asm("loc_4CC821: mov (%edi),%edx;");
    asm("loc_4CC823: push %esi;");
    asm("loc_4CC824: push %edx;");
    asm("loc_4CC825: push %eax;");
    asm("loc_4CC826: calll *0x40(%ecx);");
    asm("loc_4CC829: mov _import_5C6DCC,%eax;");
    asm("loc_4CC82E: mov (%eax),%eax;");
    asm("loc_4CC830: mov (%eax),%ecx;");
    asm("loc_4CC832: push $1;");
    asm("loc_4CC834: push %eax;");
    asm("loc_4CC835: calll *0x28(%ecx);");
    asm("loc_4CC838: call _sub_4101E0;");
    asm("loc_4CC83D: pop %edi;");
    asm("loc_4CC83E: pop %esi;");
    asm("loc_4CC83F: pop %ebx;");
    asm("loc_4CC840: add $0x18,%esp;");
    asm("loc_4CC843: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC850() // _sub_4CC850
{
    __DEBUG_ASM(4CC850);
    // chunk 0x4CC850 _sub_4CC850
    asm("loc_4CC850: push $_data_5D7480;");
    asm("loc_4CC855: mov $_data_673578,%ecx;");
    asm("loc_4CC85A: call _sub_4CD270;");
    asm("loc_4CC85F: push $_sub_4CC870;");
    asm("loc_4CC864: call _sub_5B7E6C;");
    asm("loc_4CC869: pop %ecx;");
    asm("loc_4CC86A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC870() // _unknown_libname_46
{
    __DEBUG_ASM(4CC870);
    // chunk 0x4CC870 _sub_4CC870
    asm("loc_4CC870: mov $_data_673578,%ecx;");
    asm("loc_4CC875: jmp _sub_4CF010;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC880() // _sub_4CC880
{
    __DEBUG_ASM(4CC880);
    // chunk 0x4CC880 _sub_4CC880
    asm("loc_4CC880: mov _data_6748F8,%ecx;");
    asm("loc_4CC886: test %ecx,%ecx;");
    asm("loc_4CC888: je loc_4CC8CA;");
    asm("loc_4CC88A: mov 0x284(%ecx),%eax;");
    asm("loc_4CC890: test %eax,%eax;");
    asm("loc_4CC892: mov 4(%esp),%edx;");
    asm("loc_4CC896: je loc_4CC8AC;");
    asm("loc_4CC898: add $0xFFFFFF64,%eax;");
    asm("loc_4CC89D: test %eax,%eax;");
    asm("loc_4CC89F: je loc_4CC8AC;");
    asm("loc_4CC8A1: cmp %edx,0xB0(%eax);");
    asm("loc_4CC8A7: jne loc_4CC8AC;");
    asm("loc_4CC8A9: mov $1,%al;");
    asm("loc_4CC8AB: ret;");
    asm("loc_4CC8AC: mov 0xB4(%ecx),%eax;");
    asm("loc_4CC8B2: test %eax,%eax;");
    asm("loc_4CC8B4: je loc_4CC8CA;");
    asm("loc_4CC8B6: add $0xFFFFFF64,%eax;");
    asm("loc_4CC8BB: test %eax,%eax;");
    asm("loc_4CC8BD: je loc_4CC8CA;");
    asm("loc_4CC8BF: cmp %edx,0xB0(%eax);");
    asm("loc_4CC8C5: jne loc_4CC8CA;");
    asm("loc_4CC8C7: mov $1,%al;");
    asm("loc_4CC8C9: ret;");
    asm("loc_4CC8CA: xor %al,%al;");
    asm("loc_4CC8CC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC8D0() // _sub_4CC8D0
{
    __DEBUG_ASM(4CC8D0);
    // chunk 0x4CC8D0 _sub_4CC8D0
    asm("loc_4CC8D0: push %ecx;");
    asm("loc_4CC8D1: mov _data_6748F8,%ecx;");
    asm("loc_4CC8D7: xor %al,%al;");
    asm("loc_4CC8D9: test %ecx,%ecx;");
    asm("loc_4CC8DB: je loc_4CC8F8;");
    asm("loc_4CC8DD: mov 0xEC(%ecx),%al;");
    asm("loc_4CC8E3: mov %al,(%esp);");
    asm("loc_4CC8E7: call _sub_41A3E0;");
    asm("loc_4CC8EC: mov (%esp),%ecx;");
    asm("loc_4CC8F0: neg %al;");
    asm("loc_4CC8F2: sbb %al,%al;");
    asm("loc_4CC8F4: not %al;");
    asm("loc_4CC8F6: and %ecx,%eax;");
    asm("loc_4CC8F8: pop %ecx;");
    asm("loc_4CC8F9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC900() // _sub_4CC900
{
    __DEBUG_ASM(4CC900);
    // chunk 0x4CC900 _sub_4CC900
    asm("loc_4CC900: mov _data_6748F8,%eax;");
    asm("loc_4CC905: test %eax,%eax;");
    asm("loc_4CC907: push %esi;");
    asm("loc_4CC908: je loc_4CC943;");
    asm("loc_4CC90A: mov 8(%esp),%esi;");
    asm("loc_4CC90E: push %esi;");
    asm("loc_4CC90F: mov $_data_6735B4,%ecx;");
    asm("loc_4CC914: call _sub_4C9A80;");
    asm("loc_4CC919: test %eax,%eax;");
    asm("loc_4CC91B: jne loc_4CC943;");
    asm("loc_4CC91D: mov (%esi),%ecx;");
    asm("loc_4CC91F: mov 4(%esi),%edx;");
    asm("loc_4CC922: push %ecx;");
    asm("loc_4CC923: push %edx;");
    asm("loc_4CC924: push $0x119;");
    asm("loc_4CC929: push $_data_5D7220;");
    asm("loc_4CC92E: mov $0x100002,%eax;");
    asm("loc_4CC933: push $_data_5D71EC;");
    asm("loc_4CC938: push %eax;");
    asm("loc_4CC939: mov _import_5C6D18,%eax;");
    asm("loc_4CC93E: calll *(%eax);");
    asm("loc_4CC940: add $0x18,%esp;");
    asm("loc_4CC943: pop %esi;");
    asm("loc_4CC944: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC950() // _sub_4CC950
{
    __DEBUG_ASM(4CC950);
    // chunk 0x4CC950 _sub_4CC950
    asm("loc_4CC950: push $_sub_4CC970;");
    asm("loc_4CC955: movl $0xFFFFFFFF,_data_673574;");
    asm("loc_4CC95F: movl $0,_data_673570;");
    asm("loc_4CC969: call _sub_5B7E6C;");
    asm("loc_4CC96E: pop %ecx;");
    asm("loc_4CC96F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC970() // _sub_4CC970
{
    __DEBUG_ASM(4CC970);
    // chunk 0x4CC970 _sub_4CC970
    asm("loc_4CC970: mov _data_673570,%ecx;");
    asm("loc_4CC976: test %ecx,%ecx;");
    asm("loc_4CC978: je loc_4CC992;");
    asm("loc_4CC97A: mov _import_5C6D4C,%eax;");
    asm("loc_4CC97F: mov (%eax),%eax;");
    asm("loc_4CC981: mov (%eax),%edx;");
    asm("loc_4CC983: push %ecx;");
    asm("loc_4CC984: push %eax;");
    asm("loc_4CC985: calll *0x38(%edx);");
    asm("loc_4CC988: movl $0,_data_673570;");
    asm("loc_4CC992: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CC9A0() // _sub_4CC9A0
{
    asm("jmp dgb_4CC9A0;"); // jumptable skip
    asm(".long _jmp_4CCBA8;"); // jumptable address
    __DEBUG_ASM(4CC9A0);
    // chunk 0x4CC9A0 _sub_4CC9A0
    asm("loc_4CC9A0: mov _data_673570,%eax;");
    asm("loc_4CC9A5: sub $8,%esp;");
    asm("loc_4CC9A8: test %eax,%eax;");
    asm("loc_4CC9AA: jne loc_4CC9BB;");
    asm("loc_4CC9AC: push $_data_5D7490;");
    asm("loc_4CC9B1: mov $_data_673570,%ecx;");
    asm("loc_4CC9B6: call _sub_4255C0;");
    asm("loc_4CC9BB: call _sub_4225E0;");
    asm("loc_4CC9C0: push $0;");
    asm("loc_4CC9C2: mov $_data_673570,%ecx;");
    asm("loc_4CC9C7: call _sub_425640;");
    asm("loc_4CC9CC: push %eax;");
    asm("loc_4CC9CD: call _sub_4220A0;");
    asm("loc_4CC9D2: push $0xB71;");
    asm("loc_4CC9D7: call _sub_421ED0;");
    asm("loc_4CC9DC: push $0xB44;");
    asm("loc_4CC9E1: call _sub_421ED0;");
    asm("loc_4CC9E6: push $0xBE2;");
    asm("loc_4CC9EB: call _sub_421DD0;");
    asm("loc_4CC9F0: xor %eax,%eax;");
    asm("loc_4CC9F2: mov _data_612378,%al;");
    asm("loc_4CC9F7: xor %ecx,%ecx;");
    asm("loc_4CC9F9: mov %al,%cl;");
    asm("loc_4CC9FB: xor %edx,%edx;");
    asm("loc_4CC9FD: mov %al,%dl;");
    asm("loc_4CC9FF: push %ecx;");
    asm("loc_4CCA00: push %edx;");
    asm("loc_4CCA01: push %eax;");
    asm("loc_4CCA02: call _sub_421A70;");
    asm("loc_4CCA07: mov _data_612374,%eax;");
    asm("loc_4CCA0C: add $0x1C,%esp;");
    asm("loc_4CCA0F: dec %eax;");
    asm("loc_4CCA10: cmp $6,%eax;");
    asm("loc_4CCA13: ja loc_4CCBA4;");
    asm("loc_4CCA19: jmpl *_jmp_4CCBA8(,%eax,4);");
    asm("loc_4CCA20: push $6;");
    asm("loc_4CCA22: push $5;");
    asm("loc_4CCA24: call _sub_4220C0;");
    asm("loc_4CCA29: add $8,%esp;");
    asm("loc_4CCA2C: jmp loc_4CCA9E;");
    asm("loc_4CCA2E: push $2;");
    asm("loc_4CCA30: push $5;");
    asm("loc_4CCA32: call _sub_4220C0;");
    asm("loc_4CCA37: add $8,%esp;");
    asm("loc_4CCA3A: jmp loc_4CCA9E;");
    asm("loc_4CCA3C: push $6;");
    asm("loc_4CCA3E: push $3;");
    asm("loc_4CCA40: call _sub_4220C0;");
    asm("loc_4CCA45: add $8,%esp;");
    asm("loc_4CCA48: jmp loc_4CCA9E;");
    asm("loc_4CCA4A: push $2;");
    asm("loc_4CCA4C: push $3;");
    asm("loc_4CCA4E: call _sub_4220C0;");
    asm("loc_4CCA53: add $8,%esp;");
    asm("loc_4CCA56: jmp loc_4CCA9E;");
    asm("loc_4CCA58: push $6;");
    asm("loc_4CCA5A: push $2;");
    asm("loc_4CCA5C: call _sub_4220C0;");
    asm("loc_4CCA61: add $8,%esp;");
    asm("loc_4CCA64: jmp loc_4CCA9E;");
    asm("loc_4CCA66: push $0x80;");
    asm("loc_4CCA6B: push $0x80;");
    asm("loc_4CCA70: push $0x80;");
    asm("loc_4CCA75: call _sub_421A70;");
    asm("loc_4CCA7A: push $2;");
    asm("loc_4CCA7C: push $2;");
    asm("loc_4CCA7E: call _sub_4220C0;");
    asm("loc_4CCA83: add $0x14,%esp;");
    asm("loc_4CCA86: jmp loc_4CCA9E;");
    asm("loc_4CCA88: push $0xBE2;");
    asm("loc_4CCA8D: call _sub_421ED0;");
    asm("loc_4CCA92: push $4;");
    asm("loc_4CCA94: push $3;");
    asm("loc_4CCA96: call _sub_4220C0;");
    asm("loc_4CCA9B: add $0xC,%esp;");
    asm("loc_4CCA9E: push %ebx;");
    asm("loc_4CCA9F: push %ebp;");
    asm("loc_4CCAA0: push %esi;");
    asm("loc_4CCAA1: push %edi;");
    asm("loc_4CCAA2: calll *_import_5C71DC;");
    asm("loc_4CCAA8: mov %eax,%ecx;");
    asm("loc_4CCAAA: and $0xFF,%ecx;");
    asm("loc_4CCAB0: mov %ecx,0x14(%esp);");
    asm("loc_4CCAB4: fildl 0x14(%esp);");
    asm("loc_4CCAB8: sar $4,%eax;");
    asm("loc_4CCABB: and $0xFC,%eax;");
    asm("loc_4CCAC0: mov %eax,0x14(%esp);");
    asm("loc_4CCAC4: fmuls _data_5D748C;");
    asm("loc_4CCACA: push $8;");
    asm("loc_4CCACC: fstps 0x14(%esp);");
    asm("loc_4CCAD0: fildl 0x18(%esp);");
    asm("loc_4CCAD4: fmuls _data_5D748C;");
    asm("loc_4CCADA: fstps 0x18(%esp);");
    asm("loc_4CCADE: call _sub_421670;");
    asm("loc_4CCAE3: mov 0x18(%esp),%edi;");
    asm("loc_4CCAE7: mov 0x14(%esp),%ebx;");
    asm("loc_4CCAEB: push %edi;");
    asm("loc_4CCAEC: push %ebx;");
    asm("loc_4CCAED: call _sub_421CA0;");
    asm("loc_4CCAF2: mov 0x28(%esp),%esi;");
    asm("loc_4CCAF6: fildl 4(%esi);");
    asm("loc_4CCAF9: add $0xC,%esp;");
    asm("loc_4CCAFC: push $0;");
    asm("loc_4CCAFE: sub $8,%esp;");
    asm("loc_4CCB01: fstps 4(%esp);");
    asm("loc_4CCB05: fildl (%esi);");
    asm("loc_4CCB07: fstps (%esp);");
    asm("loc_4CCB0A: call _sub_421CC0;");
    asm("loc_4CCB0F: flds 0x1C(%esp);");
    asm("loc_4CCB13: fadds _data_5C75DC;");
    asm("loc_4CCB19: push %edi;");
    asm("loc_4CCB1A: fstps 0x2C(%esp);");
    asm("loc_4CCB1E: mov 0x2C(%esp),%edi;");
    asm("loc_4CCB22: push %edi;");
    asm("loc_4CCB23: call _sub_421CA0;");
    asm("loc_4CCB28: fildl 4(%esi);");
    asm("loc_4CCB2B: add $0x14,%esp;");
    asm("loc_4CCB2E: push $0;");
    asm("loc_4CCB30: sub $8,%esp;");
    asm("loc_4CCB33: fstps 4(%esp);");
    asm("loc_4CCB37: fildl 8(%esi);");
    asm("loc_4CCB3A: fstps (%esp);");
    asm("loc_4CCB3D: call _sub_421CC0;");
    asm("loc_4CCB42: flds 0x20(%esp);");
    asm("loc_4CCB46: fadds _data_5C75DC;");
    asm("loc_4CCB4C: fstps 0x28(%esp);");
    asm("loc_4CCB50: mov 0x28(%esp),%ebp;");
    asm("loc_4CCB54: push %ebp;");
    asm("loc_4CCB55: push %edi;");
    asm("loc_4CCB56: call _sub_421CA0;");
    asm("loc_4CCB5B: fildl 0xC(%esi);");
    asm("loc_4CCB5E: add $0x14,%esp;");
    asm("loc_4CCB61: push $0;");
    asm("loc_4CCB63: sub $8,%esp;");
    asm("loc_4CCB66: fstps 4(%esp);");
    asm("loc_4CCB6A: fildl 8(%esi);");
    asm("loc_4CCB6D: fstps (%esp);");
    asm("loc_4CCB70: call _sub_421CC0;");
    asm("loc_4CCB75: push %ebp;");
    asm("loc_4CCB76: push %ebx;");
    asm("loc_4CCB77: call _sub_421CA0;");
    asm("loc_4CCB7C: fildl 0xC(%esi);");
    asm("loc_4CCB7F: add $0x14,%esp;");
    asm("loc_4CCB82: push $0;");
    asm("loc_4CCB84: sub $8,%esp;");
    asm("loc_4CCB87: fstps 4(%esp);");
    asm("loc_4CCB8B: fildl (%esi);");
    asm("loc_4CCB8D: fstps (%esp);");
    asm("loc_4CCB90: call _sub_421CC0;");
    asm("loc_4CCB95: add $0xC,%esp;");
    asm("loc_4CCB98: pop %edi;");
    asm("loc_4CCB99: pop %esi;");
    asm("loc_4CCB9A: pop %ebp;");
    asm("loc_4CCB9B: pop %ebx;");
    asm("loc_4CCB9C: add $8,%esp;");
    asm("loc_4CCB9F: jmp _sub_421690;");
    asm("loc_4CCBA4: add $8,%esp;");
    asm("loc_4CCBA7: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_4CCBA8: .long loc_4CCA20;");
    asm(".long loc_4CCA2E;");
    asm(".long loc_4CCA3C;");
    asm(".long loc_4CCA4A;");
    asm(".long loc_4CCA58;");
    asm(".long loc_4CCA66;");
    asm(".long loc_4CCA88;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4CC9A0);
_naked _weak void _sub_4CCBD0() // _sub_4CCBD0
{
    __DEBUG_ASM(4CCBD0);
    // chunk 0x4CCBD0 _sub_4CCBD0
    asm("loc_4CCBD0: sub $0x14,%esp;");
    asm("loc_4CCBD3: push %ebx;");
    asm("loc_4CCBD4: mov _import_5C6CF4,%ebx;");
    asm("loc_4CCBDA: push %esi;");
    asm("loc_4CCBDB: mov 0x20(%esp),%esi;");
    asm("loc_4CCBDF: push %edi;");
    asm("loc_4CCBE0: mov %ecx,%edi;");
    asm("loc_4CCBE2: push $_data_5D74C0;");
    asm("loc_4CCBE7: mov %esi,%ecx;");
    asm("loc_4CCBE9: call *%ebx;");
    asm("loc_4CCBEB: test %al,%al;");
    asm("loc_4CCBED: mov %esi,%ecx;");
    asm("loc_4CCBEF: je loc_4CCC75;");
    asm("loc_4CCBF5: push $0;");
    asm("loc_4CCBF7: push $0;");
    asm("loc_4CCBF9: add $0x50,%edi;");
    asm("loc_4CCBFC: calll *_import_5C6698;");
    asm("loc_4CCC02: push %eax;");
    asm("loc_4CCC03: mov %edi,%ecx;");
    asm("loc_4CCC05: call _sub_59EC80;");
    asm("loc_4CCC0A: movzbl _data_679BB0,%eax;");
    asm("loc_4CCC11: mov %eax,0x24(%esp);");
    asm("loc_4CCC15: fildl 0x24(%esp);");
    asm("loc_4CCC19: fmuls _data_5C7F68;");
    asm("loc_4CCC1F: fstps 0x14(%edi);");
    asm("loc_4CCC22: movzbl _data_679BB0+1,%ecx;");
    asm("loc_4CCC29: mov %ecx,0x24(%esp);");
    asm("loc_4CCC2D: fildl 0x24(%esp);");
    asm("loc_4CCC31: fmuls _data_5C7F68;");
    asm("loc_4CCC37: fstps 0x18(%edi);");
    asm("loc_4CCC3A: movzbl _data_679BB0+2,%edx;");
    asm("loc_4CCC41: mov %edx,0x24(%esp);");
    asm("loc_4CCC45: fildl 0x24(%esp);");
    asm("loc_4CCC49: fmuls _data_5C7F68;");
    asm("loc_4CCC4F: fstps 0x1C(%edi);");
    asm("loc_4CCC52: movzbl _data_679BB0+3,%eax;");
    asm("loc_4CCC59: mov %eax,0x24(%esp);");
    asm("loc_4CCC5D: mov $1,%al;");
    asm("loc_4CCC5F: fildl 0x24(%esp);");
    asm("loc_4CCC63: fmuls _data_5C7F68;");
    asm("loc_4CCC69: fstps 0x24(%edi);");
    asm("loc_4CCC6C: pop %edi;");
    asm("loc_4CCC6D: pop %esi;");
    asm("loc_4CCC6E: pop %ebx;");
    asm("loc_4CCC6F: add $0x14,%esp;");
    asm("loc_4CCC72: ret $4;");
    asm("loc_4CCC75: push $_data_5D74B8;");
    asm("loc_4CCC7A: call *%ebx;");
    asm("loc_4CCC7C: test %al,%al;");
    asm("loc_4CCC7E: mov %esi,%ecx;");
    asm("loc_4CCC80: je loc_4CCCD4;");
    asm("loc_4CCC82: push $1;");
    asm("loc_4CCC84: calll *_import_5C6CFC;");
    asm("loc_4CCC8A: fstpl 0xC(%esp);");
    asm("loc_4CCC8E: push $0;");
    asm("loc_4CCC90: mov %esi,%ecx;");
    asm("loc_4CCC92: calll *_import_5C6CFC;");
    asm("loc_4CCC98: fstps 0x14(%esp);");
    asm("loc_4CCC9C: fldl 0xC(%esp);");
    asm("loc_4CCCA0: push $2;");
    asm("loc_4CCCA2: mov %esi,%ecx;");
    asm("loc_4CCCA4: fstps 0x1C(%esp);");
    asm("loc_4CCCA8: calll *_import_5C6CFC;");
    asm("loc_4CCCAE: mov 0x14(%esp),%ecx;");
    asm("loc_4CCCB2: mov 0x18(%esp),%edx;");
    asm("loc_4CCCB6: add $0x30,%edi;");
    asm("loc_4CCCB9: mov %ecx,(%edi);");
    asm("loc_4CCCBB: fstps 0x1C(%esp);");
    asm("loc_4CCCBF: mov 0x1C(%esp),%eax;");
    asm("loc_4CCCC3: mov %edx,4(%edi);");
    asm("loc_4CCCC6: mov %eax,8(%edi);");
    asm("loc_4CCCC9: pop %edi;");
    asm("loc_4CCCCA: pop %esi;");
    asm("loc_4CCCCB: mov $1,%al;");
    asm("loc_4CCCCD: pop %ebx;");
    asm("loc_4CCCCE: add $0x14,%esp;");
    asm("loc_4CCCD1: ret $4;");
    asm("loc_4CCCD4: push $_data_5D74B0;");
    asm("loc_4CCCD9: call *%ebx;");
    asm("loc_4CCCDB: test %al,%al;");
    asm("loc_4CCCDD: mov %esi,%ecx;");
    asm("loc_4CCCDF: je loc_4CCD33;");
    asm("loc_4CCCE1: push $1;");
    asm("loc_4CCCE3: calll *_import_5C6CFC;");
    asm("loc_4CCCE9: fstpl 0xC(%esp);");
    asm("loc_4CCCED: push $0;");
    asm("loc_4CCCEF: mov %esi,%ecx;");
    asm("loc_4CCCF1: calll *_import_5C6CFC;");
    asm("loc_4CCCF7: fstps 0x14(%esp);");
    asm("loc_4CCCFB: fldl 0xC(%esp);");
    asm("loc_4CCCFF: push $2;");
    asm("loc_4CCD01: mov %esi,%ecx;");
    asm("loc_4CCD03: fstps 0x1C(%esp);");
    asm("loc_4CCD07: calll *_import_5C6CFC;");
    asm("loc_4CCD0D: mov 0x14(%esp),%ecx;");
    asm("loc_4CCD11: mov 0x18(%esp),%edx;");
    asm("loc_4CCD15: add $0x24,%edi;");
    asm("loc_4CCD18: mov %ecx,(%edi);");
    asm("loc_4CCD1A: fstps 0x1C(%esp);");
    asm("loc_4CCD1E: mov 0x1C(%esp),%eax;");
    asm("loc_4CCD22: mov %edx,4(%edi);");
    asm("loc_4CCD25: mov %eax,8(%edi);");
    asm("loc_4CCD28: pop %edi;");
    asm("loc_4CCD29: pop %esi;");
    asm("loc_4CCD2A: mov $1,%al;");
    asm("loc_4CCD2C: pop %ebx;");
    asm("loc_4CCD2D: add $0x14,%esp;");
    asm("loc_4CCD30: ret $4;");
    asm("loc_4CCD33: push $_data_5D74A4;");
    asm("loc_4CCD38: call *%ebx;");
    asm("loc_4CCD3A: test %al,%al;");
    asm("loc_4CCD3C: mov %esi,%ecx;");
    asm("loc_4CCD3E: je loc_4CCD63;");
    asm("loc_4CCD40: push $0;");
    asm("loc_4CCD42: calll *_import_5C6CFC;");
    asm("loc_4CCD48: fstps 0x3C(%edi);");
    asm("loc_4CCD4B: push $1;");
    asm("loc_4CCD4D: mov %esi,%ecx;");
    asm("loc_4CCD4F: calll *_import_5C6CFC;");
    asm("loc_4CCD55: fstps 0x40(%edi);");
    asm("loc_4CCD58: pop %edi;");
    asm("loc_4CCD59: pop %esi;");
    asm("loc_4CCD5A: mov $1,%al;");
    asm("loc_4CCD5C: pop %ebx;");
    asm("loc_4CCD5D: add $0x14,%esp;");
    asm("loc_4CCD60: ret $4;");
    asm("loc_4CCD63: push $_data_5D7498;");
    asm("loc_4CCD68: call *%ebx;");
    asm("loc_4CCD6A: test %al,%al;");
    asm("loc_4CCD6C: mov %esi,%ecx;");
    asm("loc_4CCD6E: je loc_4CCD86;");
    asm("loc_4CCD70: push $0;");
    asm("loc_4CCD72: calll *_import_5C6CFC;");
    asm("loc_4CCD78: fstps 0x48(%edi);");
    asm("loc_4CCD7B: pop %edi;");
    asm("loc_4CCD7C: pop %esi;");
    asm("loc_4CCD7D: mov $1,%al;");
    asm("loc_4CCD7F: pop %ebx;");
    asm("loc_4CCD80: add $0x14,%esp;");
    asm("loc_4CCD83: ret $4;");
    asm("loc_4CCD86: push $_data_5D7490;");
    asm("loc_4CCD8B: call *%ebx;");
    asm("loc_4CCD8D: test %al,%al;");
    asm("loc_4CCD8F: je loc_4CCDC9;");
    asm("loc_4CCD91: push $0;");
    asm("loc_4CCD93: mov %esi,%ecx;");
    asm("loc_4CCD95: calll *_import_5C6CFC;");
    asm("loc_4CCD9B: fcompl _data_5C8BA8;");
    asm("loc_4CCDA1: fnstsw %ax;");
    asm("loc_4CCDA3: test $0x44,%ah;");
    asm("loc_4CCDA6: jnp loc_4CCDB9;");
    asm("loc_4CCDA8: mov $1,%eax;");
    asm("loc_4CCDAD: mov %al,0x4E(%edi);");
    asm("loc_4CCDB0: pop %edi;");
    asm("loc_4CCDB1: pop %esi;");
    asm("loc_4CCDB2: pop %ebx;");
    asm("loc_4CCDB3: add $0x14,%esp;");
    asm("loc_4CCDB6: ret $4;");
    asm("loc_4CCDB9: xor %eax,%eax;");
    asm("loc_4CCDBB: mov %al,0x4E(%edi);");
    asm("loc_4CCDBE: pop %edi;");
    asm("loc_4CCDBF: pop %esi;");
    asm("loc_4CCDC0: mov $1,%al;");
    asm("loc_4CCDC2: pop %ebx;");
    asm("loc_4CCDC3: add $0x14,%esp;");
    asm("loc_4CCDC6: ret $4;");
    asm("loc_4CCDC9: pop %edi;");
    asm("loc_4CCDCA: pop %esi;");
    asm("loc_4CCDCB: xor %al,%al;");
    asm("loc_4CCDCD: pop %ebx;");
    asm("loc_4CCDCE: add $0x14,%esp;");
    asm("loc_4CCDD1: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CCDE0() // _sub_4CCDE0
{
    __DEBUG_ASM(4CCDE0);
    // chunk 0x4CCDE0 _sub_4CCDE0
    asm("loc_4CCDE0: sub $0x9C,%esp;");
    asm("loc_4CCDE6: push %ebx;");
    asm("loc_4CCDE7: mov %ecx,%ebx;");
    asm("loc_4CCDE9: flds 0x44(%ebx);");
    asm("loc_4CCDEC: push %ebp;");
    asm("loc_4CCDED: fmuls _data_5D74C8;");
    asm("loc_4CCDF3: push %esi;");
    asm("loc_4CCDF4: push %edi;");
    asm("loc_4CCDF5: fsts 0x10(%esp);");
    asm("loc_4CCDF9: fcomps _data_5C7474;");
    asm("loc_4CCDFF: fnstsw %ax;");
    asm("loc_4CCE01: test $5,%ah;");
    asm("loc_4CCE04: jp loc_4CCE10;");
    asm("loc_4CCE06: movl $0,0x10(%esp);");
    asm("loc_4CCE0E: jmp loc_4CCE29;");
    asm("loc_4CCE10: flds 0x10(%esp);");
    asm("loc_4CCE14: fcomps _data_5C75DC;");
    asm("loc_4CCE1A: fnstsw %ax;");
    asm("loc_4CCE1C: test $0x41,%ah;");
    asm("loc_4CCE1F: jne loc_4CCE29;");
    asm("loc_4CCE21: movl $0x3F800000,0x10(%esp);");
    asm("loc_4CCE29: flds 0x44(%ebx);");
    asm("loc_4CCE2C: fsts 0x14(%esp);");
    asm("loc_4CCE30: fcomps _data_5C7474;");
    asm("loc_4CCE36: fnstsw %ax;");
    asm("loc_4CCE38: test $5,%ah;");
    asm("loc_4CCE3B: jp loc_4CCE47;");
    asm("loc_4CCE3D: movl $0,0x14(%esp);");
    asm("loc_4CCE45: jmp loc_4CCE60;");
    asm("loc_4CCE47: flds 0x14(%esp);");
    asm("loc_4CCE4B: fcomps _data_5C75DC;");
    asm("loc_4CCE51: fnstsw %ax;");
    asm("loc_4CCE53: test $0x41,%ah;");
    asm("loc_4CCE56: jne loc_4CCE60;");
    asm("loc_4CCE58: movl $0x3F800000,0x14(%esp);");
    asm("loc_4CCE60: lea 0x30(%ebx),%esi;");
    asm("loc_4CCE63: push %esi;");
    asm("loc_4CCE64: lea 0x24(%ebx),%eax;");
    asm("loc_4CCE67: push %eax;");
    asm("loc_4CCE68: lea 0x2C(%esp),%ecx;");
    asm("loc_4CCE6C: push %ecx;");
    asm("loc_4CCE6D: call _sub_423B60;");
    asm("loc_4CCE72: flds 0x38(%esp);");
    asm("loc_4CCE76: fmuls 0x1C(%esp);");
    asm("loc_4CCE7A: lea 0x24(%esp),%ecx;");
    asm("loc_4CCE7E: fstps 8(%esp);");
    asm("loc_4CCE82: flds 0x34(%esp);");
    asm("loc_4CCE86: fmuls 0x1C(%esp);");
    asm("loc_4CCE8A: fstps 4(%esp);");
    asm("loc_4CCE8E: flds 0x30(%esp);");
    asm("loc_4CCE92: fmuls 0x1C(%esp);");
    asm("loc_4CCE96: fstps (%esp);");
    asm("loc_4CCE99: call _sub_422B80;");
    asm("loc_4CCE9E: lea 0x18(%esp),%edx;");
    asm("loc_4CCEA2: push %edx;");
    asm("loc_4CCEA3: lea 0x38(%esp),%eax;");
    asm("loc_4CCEA7: push %esi;");
    asm("loc_4CCEA8: push %eax;");
    asm("loc_4CCEA9: call _sub_423B30;");
    asm("loc_4CCEAE: flds 0x20(%esp);");
    asm("loc_4CCEB2: fmuls 0x3C(%ebx);");
    asm("loc_4CCEB5: add $0xC,%esp;");
    asm("loc_4CCEB8: lea 0x40(%esp),%ecx;");
    asm("loc_4CCEBC: fmuls _data_5C75E0;");
    asm("loc_4CCEC2: fstps 0x10(%esp);");
    asm("loc_4CCEC6: flds 0x14(%esp);");
    asm("loc_4CCECA: fmuls 0x40(%ebx);");
    asm("loc_4CCECD: fmuls _data_5C75E0;");
    asm("loc_4CCED3: fstps 0x14(%esp);");
    asm("loc_4CCED7: call _sub_4215B0;");
    asm("loc_4CCEDC: mov 0x14(%esp),%ecx;");
    asm("loc_4CCEE0: flds 0x10(%esp);");
    asm("loc_4CCEE4: lea 0x24(%esp),%edx;");
    asm("loc_4CCEE8: fchs;");
    asm("loc_4CCEEA: push %edx;");
    asm("loc_4CCEEB: fsts 0x34(%esp);");
    asm("loc_4CCEEF: lea 0x38(%esp),%eax;");
    asm("loc_4CCEF3: fstps 0x28(%esp);");
    asm("loc_4CCEF7: mov %ecx,0x2C(%esp);");
    asm("loc_4CCEFB: push %eax;");
    asm("loc_4CCEFC: lea 0x20(%esp),%ecx;");
    asm("loc_4CCF00: push %ecx;");
    asm("loc_4CCF01: movl $0,0x78(%esp);");
    asm("loc_4CCF09: movl $0,0x74(%esp);");
    asm("loc_4CCF11: movl $0,0x70(%esp);");
    asm("loc_4CCF19: movl $0,0x38(%esp);");
    asm("loc_4CCF21: call _sub_423B30;");
    asm("loc_4CCF26: mov 0x24(%esp),%edx;");
    asm("loc_4CCF2A: mov 0x28(%esp),%eax;");
    asm("loc_4CCF2E: mov 0x2C(%esp),%ecx;");
    asm("loc_4CCF32: mov _import_5C64B0,%ebp;");
    asm("loc_4CCF38: mov %edx,0x70(%esp);");
    asm("loc_4CCF3C: mov %eax,0x74(%esp);");
    asm("loc_4CCF40: lea 0x24(%esp),%edx;");
    asm("loc_4CCF44: mov %ecx,0x78(%esp);");
    asm("loc_4CCF48: push %edx;");
    asm("loc_4CCF49: lea 0x98(%esp),%eax;");
    asm("loc_4CCF50: lea 0x78(%ebx),%edi;");
    asm("loc_4CCF53: mov $0xC,%ecx;");
    asm("loc_4CCF58: lea 0x50(%esp),%esi;");
    asm("loc_4CCF5C: push %eax;");
    asm("loc_4CCF5D: rep movsl (%esi),(%edi);");
    asm("loc_4CCF5F: movl $0,0x2C(%esp);");
    asm("loc_4CCF67: movl $0x43340000,0x30(%esp);");
    asm("loc_4CCF6F: movl $0,0x34(%esp);");
    asm("loc_4CCF77: call *%ebp;");
    asm("loc_4CCF79: mov $9,%ecx;");
    asm("loc_4CCF7E: flds 0x4C(%esp);");
    asm("loc_4CCF82: mov %eax,%esi;");
    asm("loc_4CCF84: fadds 0x28(%esp);");
    asm("loc_4CCF88: lea 0x54(%esp),%edi;");
    asm("loc_4CCF8C: add $0x14,%esp;");
    asm("loc_4CCF8F: rep movsl (%esi),(%edi);");
    asm("loc_4CCF91: mov 0x3C(%esp),%ecx;");
    asm("loc_4CCF95: push %ecx;");
    asm("loc_4CCF96: sub $8,%esp;");
    asm("loc_4CCF99: fstps 4(%esp);");
    asm("loc_4CCF9D: lea 0x24(%esp),%ecx;");
    asm("loc_4CCFA1: flds 0x40(%esp);");
    asm("loc_4CCFA5: fadds 0x1C(%esp);");
    asm("loc_4CCFA9: fstps (%esp);");
    asm("loc_4CCFAC: call _sub_422B80;");
    asm("loc_4CCFB1: mov 0x18(%esp),%edx;");
    asm("loc_4CCFB5: mov 0x1C(%esp),%eax;");
    asm("loc_4CCFB9: mov 0x20(%esp),%ecx;");
    asm("loc_4CCFBD: mov %edx,0x64(%esp);");
    asm("loc_4CCFC1: mov %eax,0x68(%esp);");
    asm("loc_4CCFC5: lea 0x18(%esp),%edx;");
    asm("loc_4CCFC9: mov %ecx,0x6C(%esp);");
    asm("loc_4CCFCD: push %edx;");
    asm("loc_4CCFCE: lea 0x8C(%esp),%eax;");
    asm("loc_4CCFD5: lea 0xA8(%ebx),%edi;");
    asm("loc_4CCFDB: mov $0xC,%ecx;");
    asm("loc_4CCFE0: lea 0x44(%esp),%esi;");
    asm("loc_4CCFE4: push %eax;");
    asm("loc_4CCFE5: rep movsl (%esi),(%edi);");
    asm("loc_4CCFE7: movl $0x43340000,0x20(%esp);");
    asm("loc_4CCFEF: movl $0,0x24(%esp);");
    asm("loc_4CCFF7: movl $0,0x28(%esp);");
    asm("loc_4CCFFF: call *%ebp;");
    asm("loc_4CD001: mov %eax,%esi;");
    asm("loc_4CD003: flds 0x38(%esp);");
    asm("loc_4CD007: mov $9,%ecx;");
    asm("loc_4CD00C: flds 0x1C(%esp);");
    asm("loc_4CD010: lea 0x48(%esp),%edi;");
    asm("loc_4CD014: fchs;");
    asm("loc_4CD016: rep movsl (%esi),(%edi);");
    asm("loc_4CD018: fsts 0x38(%esp);");
    asm("loc_4CD01C: fadds 0x40(%esp);");
    asm("loc_4CD020: mov 0x44(%esp),%ecx;");
    asm("loc_4CD024: add $8,%esp;");
    asm("loc_4CD027: push %ecx;");
    asm("loc_4CD028: sub $8,%esp;");
    asm("loc_4CD02B: lea 0x24(%esp),%ecx;");
    asm("loc_4CD02F: fstps 4(%esp);");
    asm("loc_4CD033: fadds 0x40(%esp);");
    asm("loc_4CD037: fstps (%esp);");
    asm("loc_4CD03A: call _sub_422B80;");
    asm("loc_4CD03F: mov 0x18(%esp),%edx;");
    asm("loc_4CD043: mov 0x1C(%esp),%eax;");
    asm("loc_4CD047: mov 0x20(%esp),%ecx;");
    asm("loc_4CD04B: mov %edx,0x64(%esp);");
    asm("loc_4CD04F: mov %eax,0x68(%esp);");
    asm("loc_4CD053: lea 0x18(%esp),%edx;");
    asm("loc_4CD057: mov %ecx,0x6C(%esp);");
    asm("loc_4CD05B: push %edx;");
    asm("loc_4CD05C: lea 0x8C(%esp),%eax;");
    asm("loc_4CD063: lea 0xD8(%ebx),%edi;");
    asm("loc_4CD069: mov $0xC,%ecx;");
    asm("loc_4CD06E: lea 0x44(%esp),%esi;");
    asm("loc_4CD072: push %eax;");
    asm("loc_4CD073: rep movsl (%esi),(%edi);");
    asm("loc_4CD075: movl $0x43340000,0x20(%esp);");
    asm("loc_4CD07D: movl $0x43340000,0x24(%esp);");
    asm("loc_4CD085: movl $0,0x28(%esp);");
    asm("loc_4CD08D: call *%ebp;");
    asm("loc_4CD08F: mov %eax,%esi;");
    asm("loc_4CD091: flds 0x38(%esp);");
    asm("loc_4CD095: mov $9,%ecx;");
    asm("loc_4CD09A: flds 0x3C(%esp);");
    asm("loc_4CD09E: lea 0x48(%esp),%edi;");
    asm("loc_4CD0A2: fadds 0x18(%esp);");
    asm("loc_4CD0A6: rep movsl (%esi),(%edi);");
    asm("loc_4CD0A8: add $8,%esp;");
    asm("loc_4CD0AB: fstps 0x24(%esp);");
    asm("loc_4CD0AF: mov 0x24(%esp),%ecx;");
    asm("loc_4CD0B3: mov %ecx,0x64(%esp);");
    asm("loc_4CD0B7: fadds 0x38(%esp);");
    asm("loc_4CD0BB: fstps 0x28(%esp);");
    asm("loc_4CD0BF: flds 0x3C(%esp);");
    asm("loc_4CD0C3: mov 0x28(%esp),%edx;");
    asm("loc_4CD0C7: fstps 0x2C(%esp);");
    asm("loc_4CD0CB: mov 0x2C(%esp),%eax;");
    asm("loc_4CD0CF: mov %edx,0x68(%esp);");
    asm("loc_4CD0D3: mov %eax,0x6C(%esp);");
    asm("loc_4CD0D7: lea 0x9C(%ebx),%edx;");
    asm("loc_4CD0DD: push %edx;");
    asm("loc_4CD0DE: lea 0x108(%ebx),%edi;");
    asm("loc_4CD0E4: mov $0xC,%ecx;");
    asm("loc_4CD0E9: lea 0x44(%esp),%esi;");
    asm("loc_4CD0ED: rep movsl (%esi),(%edi);");
    asm("loc_4CD0EF: mov 0xB4(%esp),%esi;");
    asm("loc_4CD0F6: mov (%esi),%ecx;");
    asm("loc_4CD0F8: lea 0x74(%esp),%eax;");
    asm("loc_4CD0FC: push %eax;");
    asm("loc_4CD0FD: push %esi;");
    asm("loc_4CD0FE: calll *0x44(%ecx);");
    asm("loc_4CD101: mov (%esi),%ecx;");
    asm("loc_4CD103: lea 0x12C(%ebx),%edx;");
    asm("loc_4CD109: push %edx;");
    asm("loc_4CD10A: lea 0x80(%esp),%eax;");
    asm("loc_4CD111: push %eax;");
    asm("loc_4CD112: push %esi;");
    asm("loc_4CD113: calll *0x44(%ecx);");
    asm("loc_4CD116: flds 0x70(%esp);");
    asm("loc_4CD11A: call _sub_5B7EC0;");
    asm("loc_4CD11F: flds 0x74(%esp);");
    asm("loc_4CD123: mov %eax,4(%ebx);");
    asm("loc_4CD126: call _sub_5B7EC0;");
    asm("loc_4CD12B: flds 0x7C(%esp);");
    asm("loc_4CD12F: mov %eax,8(%ebx);");
    asm("loc_4CD132: call _sub_5B7EC0;");
    asm("loc_4CD137: flds 0x80(%esp);");
    asm("loc_4CD13E: mov %eax,0xC(%ebx);");
    asm("loc_4CD141: call _sub_5B7EC0;");
    asm("loc_4CD146: pop %edi;");
    asm("loc_4CD147: pop %esi;");
    asm("loc_4CD148: pop %ebp;");
    asm("loc_4CD149: mov %eax,0x10(%ebx);");
    asm("loc_4CD14C: pop %ebx;");
    asm("loc_4CD14D: add $0x9C,%esp;");
    asm("loc_4CD153: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CD160() // _sub_4CD160
{
    __DEBUG_ASM(4CD160);
    // chunk 0x4CD160 _sub_4CD160
    asm("loc_4CD160: push %ecx;");
    asm("loc_4CD161: push %esi;");
    asm("loc_4CD162: push %edi;");
    asm("loc_4CD163: mov %ecx,%edi;");
    asm("loc_4CD165: call _sub_4101E0;");
    asm("loc_4CD16A: mov $0xFF,%al;");
    asm("loc_4CD16C: mov %al,8(%esp);");
    asm("loc_4CD170: mov %al,9(%esp);");
    asm("loc_4CD174: mov %al,0xA(%esp);");
    asm("loc_4CD178: lea 8(%esp),%eax;");
    asm("loc_4CD17C: push %eax;");
    asm("loc_4CD17D: call _sub_410240;");
    asm("loc_4CD182: lea 0x50(%edi),%esi;");
    asm("loc_4CD185: add $4,%esp;");
    asm("loc_4CD188: mov %esi,%ecx;");
    asm("loc_4CD18A: call _sub_420D60;");
    asm("loc_4CD18F: test %al,%al;");
    asm("loc_4CD191: je loc_4CD21D;");
    asm("loc_4CD197: push $_data_67DBF8;");
    asm("loc_4CD19C: call _sub_422950;");
    asm("loc_4CD1A1: add $4,%esp;");
    asm("loc_4CD1A4: lea 0x78(%edi),%ecx;");
    asm("loc_4CD1A7: push %ecx;");
    asm("loc_4CD1A8: mov %esi,%ecx;");
    asm("loc_4CD1AA: call _sub_421050;");
    asm("loc_4CD1AF: push $0x100;");
    asm("loc_4CD1B4: push $_data_67DBF8;");
    asm("loc_4CD1B9: mov %esi,%ecx;");
    asm("loc_4CD1BB: call _sub_421120;");
    asm("loc_4CD1C0: lea 0xA8(%edi),%edx;");
    asm("loc_4CD1C6: push %edx;");
    asm("loc_4CD1C7: mov %esi,%ecx;");
    asm("loc_4CD1C9: call _sub_421050;");
    asm("loc_4CD1CE: push $0x100;");
    asm("loc_4CD1D3: push $_data_67DBF8;");
    asm("loc_4CD1D8: mov %esi,%ecx;");
    asm("loc_4CD1DA: call _sub_421120;");
    asm("loc_4CD1DF: lea 0xD8(%edi),%eax;");
    asm("loc_4CD1E5: push %eax;");
    asm("loc_4CD1E6: mov %esi,%ecx;");
    asm("loc_4CD1E8: call _sub_421050;");
    asm("loc_4CD1ED: push $0x100;");
    asm("loc_4CD1F2: push $_data_67DBF8;");
    asm("loc_4CD1F7: mov %esi,%ecx;");
    asm("loc_4CD1F9: call _sub_421120;");
    asm("loc_4CD1FE: add $0x108,%edi;");
    asm("loc_4CD204: push %edi;");
    asm("loc_4CD205: mov %esi,%ecx;");
    asm("loc_4CD207: call _sub_421050;");
    asm("loc_4CD20C: push $0x100;");
    asm("loc_4CD211: push $_data_67DBF8;");
    asm("loc_4CD216: mov %esi,%ecx;");
    asm("loc_4CD218: call _sub_421120;");
    asm("loc_4CD21D: pop %edi;");
    asm("loc_4CD21E: pop %esi;");
    asm("loc_4CD21F: pop %ecx;");
    asm("loc_4CD220: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CD230() // _sub_4CD230
{
    __DEBUG_ASM(4CD230);
    // chunk 0x4CD230 _sub_4CD230
    asm("loc_4CD230: mov 4(%ecx),%edx;");
    asm("loc_4CD233: push %esi;");
    asm("loc_4CD234: mov 8(%ecx),%esi;");
    asm("loc_4CD237: mov %esi,%eax;");
    asm("loc_4CD239: cmp %esi,%eax;");
    asm("loc_4CD23B: je loc_4CD267;");
    asm("loc_4CD23D: push %ebx;");
    asm("loc_4CD23E: push %ebp;");
    asm("loc_4CD23F: push %edi;");
    asm("loc_4CD240: mov %eax,%edi;");
    asm("loc_4CD242: mov (%edi),%ebp;");
    asm("loc_4CD244: mov %edx,%ebx;");
    asm("loc_4CD246: mov %ebp,(%ebx);");
    asm("loc_4CD248: mov 4(%edi),%ebp;");
    asm("loc_4CD24B: mov %ebp,4(%ebx);");
    asm("loc_4CD24E: mov 8(%edi),%ebp;");
    asm("loc_4CD251: mov %ebp,8(%ebx);");
    asm("loc_4CD254: mov 0xC(%edi),%edi;");
    asm("loc_4CD257: add $0x10,%eax;");
    asm("loc_4CD25A: add $0x10,%edx;");
    asm("loc_4CD25D: cmp %esi,%eax;");
    asm("loc_4CD25F: mov %edi,0xC(%ebx);");
    asm("loc_4CD262: jne loc_4CD240;");
    asm("loc_4CD264: pop %edi;");
    asm("loc_4CD265: pop %ebp;");
    asm("loc_4CD266: pop %ebx;");
    asm("loc_4CD267: mov %edx,8(%ecx);");
    asm("loc_4CD26A: pop %esi;");
    asm("loc_4CD26B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CD270() // _sub_4CD270
{
    __DEBUG_ASM(4CD270);
    // chunk 0x4CD270 _sub_4CD270
    asm("loc_4CD270: push %ebx;");
    asm("loc_4CD271: mov %ecx,%ebx;");
    asm("loc_4CD273: xor %eax,%eax;");
    asm("loc_4CD275: push %esi;");
    asm("loc_4CD276: mov 0xC(%esp),%esi;");
    asm("loc_4CD27A: cmp %eax,%esi;");
    asm("loc_4CD27C: mov %eax,8(%ebx);");
    asm("loc_4CD27F: mov %al,0xC(%ebx);");
    asm("loc_4CD282: movl $_off_5D6E30,(%ebx);");
    asm("loc_4CD288: mov %eax,4(%ebx);");
    asm("loc_4CD28B: jne loc_4CD292;");
    asm("loc_4CD28D: mov %al,0xC(%ebx);");
    asm("loc_4CD290: jmp loc_4CD2C7;");
    asm("loc_4CD292: push %ebp;");
    asm("loc_4CD293: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CD296: xor %eax,%eax;");
    asm("loc_4CD298: push %edi;");
    asm("loc_4CD299: mov %esi,%edi;");
    asm("loc_4CD29B: repne scas (%edi),%al;");
    asm("loc_4CD29D: not %ecx;");
    asm("loc_4CD29F: dec %ecx;");
    asm("loc_4CD2A0: mov %ecx,%eax;");
    asm("loc_4CD2A2: cmp $0x20,%eax;");
    asm("loc_4CD2A5: lea 0xC(%ebx),%ebp;");
    asm("loc_4CD2A8: jb loc_4CD2AF;");
    asm("loc_4CD2AA: mov $0x1F,%eax;");
    asm("loc_4CD2AF: mov %eax,%ecx;");
    asm("loc_4CD2B1: mov %ecx,%edx;");
    asm("loc_4CD2B3: shr $2,%ecx;");
    asm("loc_4CD2B6: mov %ebp,%edi;");
    asm("loc_4CD2B8: rep movsl (%esi),(%edi);");
    asm("loc_4CD2BA: mov %edx,%ecx;");
    asm("loc_4CD2BC: and $3,%ecx;");
    asm("loc_4CD2BF: rep movsb (%esi),(%edi);");
    asm("loc_4CD2C1: pop %edi;");
    asm("loc_4CD2C2: movb $0,(%eax,%ebp);");
    asm("loc_4CD2C6: pop %ebp;");
    asm("loc_4CD2C7: push %ebx;");
    asm("loc_4CD2C8: mov %eax,8(%ebx);");
    asm("loc_4CD2CB: call _sub_4C72B0;");
    asm("loc_4CD2D0: add $4,%esp;");
    asm("loc_4CD2D3: pop %esi;");
    asm("loc_4CD2D4: movl $_off_5D74D0,(%ebx);");
    asm("loc_4CD2DA: mov %ebx,%eax;");
    asm("loc_4CD2DC: pop %ebx;");
    asm("loc_4CD2DD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CD2E0() // _sub_4CD2E0
{
    __DEBUG_ASM(4CD2E0);
    // chunk 0x4CD2E0 _sub_4CD2E0
    asm("loc_4CD2E0: push $0xFFFFFFFF;");
    asm("loc_4CD2E2: push $_sub_5BDA7B;");
    asm("loc_4CD2E7: mov %fs:0,%eax;");
    asm("loc_4CD2ED: push %eax;");
    asm("loc_4CD2EE: mov %esp,%fs:0;");
    asm("loc_4CD2F5: push %ecx;");
    asm("loc_4CD2F6: push $0x5B8;");
    asm("loc_4CD2FB: call _sub_5B7E84;");
    asm("loc_4CD300: add $4,%esp;");
    asm("loc_4CD303: mov %eax,(%esp);");
    asm("loc_4CD307: test %eax,%eax;");
    asm("loc_4CD309: movl $0,0xC(%esp);");
    asm("loc_4CD311: je loc_4CD337;");
    asm("loc_4CD313: mov 0x14(%esp),%ecx;");
    asm("loc_4CD317: push %ecx;");
    asm("loc_4CD318: mov %eax,%ecx;");
    asm("loc_4CD31A: call _sub_4CD350;");
    asm("loc_4CD31F: test %eax,%eax;");
    asm("loc_4CD321: je loc_4CD337;");
    asm("loc_4CD323: add $0x7C,%eax;");
    asm("loc_4CD326: mov 4(%esp),%ecx;");
    asm("loc_4CD32A: mov %ecx,%fs:0;");
    asm("loc_4CD331: add $0x10,%esp;");
    asm("loc_4CD334: ret $4;");
    asm("loc_4CD337: mov 4(%esp),%ecx;");
    asm("loc_4CD33B: xor %eax,%eax;");
    asm("loc_4CD33D: mov %ecx,%fs:0;");
    asm("loc_4CD344: add $0x10,%esp;");
    asm("loc_4CD347: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CD350() // _sub_4CD350
{
    __DEBUG_ASM(4CD350);
    // chunk 0x4CD350 _sub_4CD350
    asm("loc_4CD350: push $0xFFFFFFFF;");
    asm("loc_4CD352: push $_sub_5BDB0D;");
    asm("loc_4CD357: mov %fs:0,%eax;");
    asm("loc_4CD35D: push %eax;");
    asm("loc_4CD35E: mov %esp,%fs:0;");
    asm("loc_4CD365: sub $0x54,%esp;");
    asm("loc_4CD368: push %ebp;");
    asm("loc_4CD369: mov %ecx,%ebp;");
    asm("loc_4CD36B: push %esi;");
    asm("loc_4CD36C: push %edi;");
    asm("loc_4CD36D: xor %edi,%edi;");
    asm("loc_4CD36F: mov %edi,0xC(%ebp);");
    asm("loc_4CD372: mov %edi,8(%ebp);");
    asm("loc_4CD375: mov %edi,4(%ebp);");
    asm("loc_4CD378: lea 0x3C(%ebp),%ecx;");
    asm("loc_4CD37B: mov %ebp,0x10(%esp);");
    asm("loc_4CD37F: mov %edi,0x14(%ebp);");
    asm("loc_4CD382: movb $0,0x18(%ebp);");
    asm("loc_4CD386: call _sub_4B5150;");
    asm("loc_4CD38B: mov 0x6C(%ebp),%al;");
    asm("loc_4CD38E: and $0xF8,%al;");
    asm("loc_4CD390: or $8,%al;");
    asm("loc_4CD392: movl $_off_5D5544,(%ebp);");
    asm("loc_4CD399: mov %edi,0x10(%ebp);");
    asm("loc_4CD39C: mov %edi,0x70(%ebp);");
    asm("loc_4CD39F: mov %edi,0x38(%ebp);");
    asm("loc_4CD3A2: mov %edi,0x74(%ebp);");
    asm("loc_4CD3A5: mov %edi,0x78(%ebp);");
    asm("loc_4CD3A8: mov %al,0x6C(%ebp);");
    asm("loc_4CD3AB: incl _data_67DCD4;");
    asm("loc_4CD3B1: lea 0x7C(%ebp),%esi;");
    asm("loc_4CD3B4: lea 0x28(%esi),%ecx;");
    asm("loc_4CD3B7: push %edi;");
    asm("loc_4CD3B8: mov %edi,0x6C(%esp);");
    asm("loc_4CD3BC: mov %esi,0x18(%esp);");
    asm("loc_4CD3C0: mov %edi,4(%esi);");
    asm("loc_4CD3C3: movb $0,8(%esi);");
    asm("loc_4CD3C7: call _sub_4C95B0;");
    asm("loc_4CD3CC: lea 0x28(%esi),%ecx;");
    asm("loc_4CD3CF: movl $_off_5D6EAC,(%esi);");
    asm("loc_4CD3D5: mov %edi,0x34(%esi);");
    asm("loc_4CD3D8: cmp %edi,(%ecx);");
    asm("loc_4CD3DA: movb $1,0x68(%esp);");
    asm("loc_4CD3DF: je loc_4CD3E8;");
    asm("loc_4CD3E1: push %edi;");
    asm("loc_4CD3E2: calll *_import_5C62A8;");
    asm("loc_4CD3E8: push %ebx;");
    asm("loc_4CD3E9: mov %edi,0x30(%esi);");
    asm("loc_4CD3EC: lea 0xB4(%ebp),%ecx;");
    asm("loc_4CD3F2: movb $2,0x6C(%esp);");
    asm("loc_4CD3F7: call _sub_4CA690;");
    asm("loc_4CD3FC: lea 0x284(%ebp),%ecx;");
    asm("loc_4CD402: movb $3,0x6C(%esp);");
    asm("loc_4CD407: call _sub_4CA690;");
    asm("loc_4CD40C: mov %edi,0x454(%ebp);");
    asm("loc_4CD412: mov %edi,0x458(%ebp);");
    asm("loc_4CD418: mov %edi,0x45C(%ebp);");
    asm("loc_4CD41E: movb $0,0x460(%ebp);");
    asm("loc_4CD425: movb $0,0x461(%ebp);");
    asm("loc_4CD42C: mov %edi,0x464(%ebp);");
    asm("loc_4CD432: mov %edi,0x468(%ebp);");
    asm("loc_4CD438: mov %edi,0x46C(%ebp);");
    asm("loc_4CD43E: movb $0,0x470(%ebp);");
    asm("loc_4CD445: movb $0,0x471(%ebp);");
    asm("loc_4CD44C: movl $0xFFFFFFFF,0x478(%ebp);");
    asm("loc_4CD456: mov %edi,0x474(%ebp);");
    asm("loc_4CD45C: lea 0x4B8(%ebp),%ebx;");
    asm("loc_4CD462: mov %ebx,%ecx;");
    asm("loc_4CD464: movb $7,0x6C(%esp);");
    asm("loc_4CD469: call _sub_51B2F0;");
    asm("loc_4CD46E: push %edi;");
    asm("loc_4CD46F: push %ebp;");
    asm("loc_4CD470: movb $8,0x74(%esp);");
    asm("loc_4CD475: movl $_off_5D764C,(%ebp);");
    asm("loc_4CD47C: movl $_off_5D761C,(%esi);");
    asm("loc_4CD482: call _sub_59DD00;");
    asm("loc_4CD487: push %ebp;");
    asm("loc_4CD488: call _sub_59DBF0;");
    asm("loc_4CD48D: mov 0x6C(%ebp),%cl;");
    asm("loc_4CD490: push $_data_5D7608;");
    asm("loc_4CD495: and $0xFB,%cl;");
    asm("loc_4CD498: lea 0x84(%ebp),%edx;");
    asm("loc_4CD49E: or $3,%cl;");
    asm("loc_4CD4A1: push $0x20;");
    asm("loc_4CD4A3: push %edx;");
    asm("loc_4CD4A4: mov %cl,0x6C(%ebp);");
    asm("loc_4CD4A7: call _sub_417C50;");
    asm("loc_4CD4AC: add $0x18,%esp;");
    asm("loc_4CD4AF: push $0x42480000;");
    asm("loc_4CD4B4: mov %eax,0x80(%ebp);");
    asm("loc_4CD4BA: push $0x3FB33333;");
    asm("loc_4CD4BF: mov %ebx,%ecx;");
    asm("loc_4CD4C1: mov %edi,0x5B0(%ebp);");
    asm("loc_4CD4C7: call _sub_40FB60;");
    asm("loc_4CD4CC: mov 0x74(%esp),%ebx;");
    asm("loc_4CD4D0: mov %ebx,%ecx;");
    asm("loc_4CD4D2: calll *_import_5C669C;");
    asm("loc_4CD4D8: test %al,%al;");
    asm("loc_4CD4DA: je loc_4CD69A;");
    asm("loc_4CD4E0: push %ebx;");
    asm("loc_4CD4E1: lea 0xEC(%ebp),%ecx;");
    asm("loc_4CD4E7: call _sub_4CCBD0;");
    asm("loc_4CD4EC: test %al,%al;");
    asm("loc_4CD4EE: jne loc_4CD68A;");
    asm("loc_4CD4F4: push $_data_5D75F8;");
    asm("loc_4CD4F9: mov %ebx,%ecx;");
    asm("loc_4CD4FB: calll *_import_5C6CF4;");
    asm("loc_4CD501: test %al,%al;");
    asm("loc_4CD503: mov %ebx,%ecx;");
    asm("loc_4CD505: je loc_4CD532;");
    asm("loc_4CD507: mov $0x100002,%esi;");
    asm("loc_4CD50C: calll *_import_5C64B4;");
    asm("loc_4CD512: push %eax;");
    asm("loc_4CD513: mov _import_5C6D18,%eax;");
    asm("loc_4CD518: push $0x7E7;");
    asm("loc_4CD51D: push $_data_5D7220;");
    asm("loc_4CD522: push $_data_5D7578;");
    asm("loc_4CD527: push %esi;");
    asm("loc_4CD528: calll *(%eax);");
    asm("loc_4CD52A: add $0x14,%esp;");
    asm("loc_4CD52D: jmp loc_4CD68A;");
    asm("loc_4CD532: push $_data_5D7560;");
    asm("loc_4CD537: calll *_import_5C6CF4;");
    asm("loc_4CD53D: test %al,%al;");
    asm("loc_4CD53F: mov %ebx,%ecx;");
    asm("loc_4CD541: je loc_4CD589;");
    asm("loc_4CD543: push %edi;");
    asm("loc_4CD544: calll *_import_5C6CFC;");
    asm("loc_4CD54A: fstps 0x1C(%esp);");
    asm("loc_4CD54E: push $1;");
    asm("loc_4CD550: mov %ebx,%ecx;");
    asm("loc_4CD552: calll *_import_5C6CFC;");
    asm("loc_4CD558: fstps 0x20(%esp);");
    asm("loc_4CD55C: push $2;");
    asm("loc_4CD55E: mov %ebx,%ecx;");
    asm("loc_4CD560: calll *_import_5C6CFC;");
    asm("loc_4CD566: fstps 0x24(%esp);");
    asm("loc_4CD56A: mov 0x1C(%esp),%edx;");
    asm("loc_4CD56E: mov 0x20(%esp),%eax;");
    asm("loc_4CD572: lea 0x4A0(%ebp),%ecx;");
    asm("loc_4CD578: mov %edx,(%ecx);");
    asm("loc_4CD57A: mov 0x24(%esp),%edx;");
    asm("loc_4CD57E: mov %eax,4(%ecx);");
    asm("loc_4CD581: mov %edx,8(%ecx);");
    asm("loc_4CD584: jmp loc_4CD68A;");
    asm("loc_4CD589: push $_data_5D7548;");
    asm("loc_4CD58E: calll *_import_5C6CF4;");
    asm("loc_4CD594: test %al,%al;");
    asm("loc_4CD596: mov %ebx,%ecx;");
    asm("loc_4CD598: je loc_4CD5E0;");
    asm("loc_4CD59A: push %edi;");
    asm("loc_4CD59B: calll *_import_5C6CFC;");
    asm("loc_4CD5A1: fstps 0x28(%esp);");
    asm("loc_4CD5A5: push $1;");
    asm("loc_4CD5A7: mov %ebx,%ecx;");
    asm("loc_4CD5A9: calll *_import_5C6CFC;");
    asm("loc_4CD5AF: fstps 0x2C(%esp);");
    asm("loc_4CD5B3: push $2;");
    asm("loc_4CD5B5: mov %ebx,%ecx;");
    asm("loc_4CD5B7: calll *_import_5C6CFC;");
    asm("loc_4CD5BD: fstps 0x30(%esp);");
    asm("loc_4CD5C1: mov 0x28(%esp),%ecx;");
    asm("loc_4CD5C5: mov 0x2C(%esp),%edx;");
    asm("loc_4CD5C9: lea 0x4AC(%ebp),%eax;");
    asm("loc_4CD5CF: mov %ecx,(%eax);");
    asm("loc_4CD5D1: mov 0x30(%esp),%ecx;");
    asm("loc_4CD5D5: mov %edx,4(%eax);");
    asm("loc_4CD5D8: mov %ecx,8(%eax);");
    asm("loc_4CD5DB: jmp loc_4CD68A;");
    asm("loc_4CD5E0: push $_data_5D7538;");
    asm("loc_4CD5E5: calll *_import_5C6CF4;");
    asm("loc_4CD5EB: test %al,%al;");
    asm("loc_4CD5ED: mov %ebx,%ecx;");
    asm("loc_4CD5EF: je loc_4CD63E;");
    asm("loc_4CD5F1: push %edi;");
    asm("loc_4CD5F2: calll *_import_5C6CFC;");
    asm("loc_4CD5F8: fstps 0x34(%esp);");
    asm("loc_4CD5FC: push $1;");
    asm("loc_4CD5FE: mov %ebx,%ecx;");
    asm("loc_4CD600: calll *_import_5C6CFC;");
    asm("loc_4CD606: fstps 0x38(%esp);");
    asm("loc_4CD60A: push $2;");
    asm("loc_4CD60C: mov %ebx,%ecx;");
    asm("loc_4CD60E: calll *_import_5C6CFC;");
    asm("loc_4CD614: fstps 0x3C(%esp);");
    asm("loc_4CD618: lea 0x34(%esp),%edx;");
    asm("loc_4CD61C: push %edx;");
    asm("loc_4CD61D: lea 0x44(%esp),%eax;");
    asm("loc_4CD621: push %eax;");
    asm("loc_4CD622: calll *_import_5C64B0;");
    asm("loc_4CD628: lea 0x47C(%ebp),%edi;");
    asm("loc_4CD62E: mov $9,%ecx;");
    asm("loc_4CD633: mov %eax,%esi;");
    asm("loc_4CD635: add $8,%esp;");
    asm("loc_4CD638: rep movsl (%esi),(%edi);");
    asm("loc_4CD63A: xor %edi,%edi;");
    asm("loc_4CD63C: jmp loc_4CD68A;");
    asm("loc_4CD63E: push $_data_5D752C;");
    asm("loc_4CD643: calll *_import_5C6CF4;");
    asm("loc_4CD649: test %al,%al;");
    asm("loc_4CD64B: mov %ebx,%ecx;");
    asm("loc_4CD64D: je loc_4CD667;");
    asm("loc_4CD64F: push %edi;");
    asm("loc_4CD650: calll *_import_5C6CFC;");
    asm("loc_4CD656: push %ecx;");
    asm("loc_4CD657: lea 0x4B8(%ebp),%ecx;");
    asm("loc_4CD65D: fstps (%esp);");
    asm("loc_4CD660: call _sub_40F8C0;");
    asm("loc_4CD665: jmp loc_4CD68A;");
    asm("loc_4CD667: push $_data_5D7520;");
    asm("loc_4CD66C: calll *_import_5C6CF4;");
    asm("loc_4CD672: test %al,%al;");
    asm("loc_4CD674: je loc_4CD68A;");
    asm("loc_4CD676: mov %ebx,%ecx;");
    asm("loc_4CD678: calll *_import_5C6698;");
    asm("loc_4CD67E: push %eax;");
    asm("loc_4CD67F: lea 0x474(%ebp),%ecx;");
    asm("loc_4CD685: call _sub_4255C0;");
    asm("loc_4CD68A: mov %ebx,%ecx;");
    asm("loc_4CD68C: calll *_import_5C669C;");
    asm("loc_4CD692: test %al,%al;");
    asm("loc_4CD694: jne loc_4CD4E0;");
    asm("loc_4CD69A: mov $0x80,%al;");
    asm("loc_4CD69C: push $0xC8;");
    asm("loc_4CD6A1: mov %al,0x14(%esp);");
    asm("loc_4CD6A5: mov %al,0x15(%esp);");
    asm("loc_4CD6A9: mov %al,0x16(%esp);");
    asm("loc_4CD6AD: movl $0x3E6B851F,0x38(%esp);");
    asm("loc_4CD6B5: movl $0x3E9EB852,0x3C(%esp);");
    asm("loc_4CD6BD: movl $0xBF6B851F,0x40(%esp);");
    asm("loc_4CD6C5: call _sub_5B7E84;");
    asm("loc_4CD6CA: add $4,%esp;");
    asm("loc_4CD6CD: mov %eax,0x74(%esp);");
    asm("loc_4CD6D1: cmp %edi,%eax;");
    asm("loc_4CD6D3: movb $9,0x6C(%esp);");
    asm("loc_4CD6D8: pop %ebx;");
    asm("loc_4CD6D9: je loc_4CD6E8;");
    asm("loc_4CD6DB: push $0xFFFFFFFF;");
    asm("loc_4CD6DD: mov %eax,%ecx;");
    asm("loc_4CD6DF: call _sub_410CA0;");
    asm("loc_4CD6E4: mov %eax,%esi;");
    asm("loc_4CD6E6: jmp loc_4CD6EA;");
    asm("loc_4CD6E8: xor %esi,%esi;");
    asm("loc_4CD6EA: push %edi;");
    asm("loc_4CD6EB: push $1;");
    asm("loc_4CD6ED: mov %esi,%ecx;");
    asm("loc_4CD6EF: movb $8,0x70(%esp);");
    asm("loc_4CD6F4: mov %esi,0x78(%esp);");
    asm("loc_4CD6F8: call _sub_4110C0;");
    asm("loc_4CD6FD: lea 0x30(%esp),%ecx;");
    asm("loc_4CD701: push %ecx;");
    asm("loc_4CD702: mov %esi,%ecx;");
    asm("loc_4CD704: call _sub_410EF0;");
    asm("loc_4CD709: lea 0xC(%esp),%edx;");
    asm("loc_4CD70D: push %edx;");
    asm("loc_4CD70E: mov %esi,%ecx;");
    asm("loc_4CD710: call _sub_4115B0;");
    asm("loc_4CD715: push $0x4E6E6B28;");
    asm("loc_4CD71A: mov %esi,%ecx;");
    asm("loc_4CD71C: call _sub_411300;");
    asm("loc_4CD721: mov (%esi),%eax;");
    asm("loc_4CD723: mov %esi,%ecx;");
    asm("loc_4CD725: calll *4(%eax);");
    asm("loc_4CD728: test %al,%al;");
    asm("loc_4CD72A: jne loc_4CD736;");
    asm("loc_4CD72C: mov (%esi),%edx;");
    asm("loc_4CD72E: push $1;");
    asm("loc_4CD730: mov %esi,%ecx;");
    asm("loc_4CD732: calll *(%edx);");
    asm("loc_4CD734: jmp loc_4CD73A;");
    asm("loc_4CD736: mov 0x70(%esp),%edi;");
    asm("loc_4CD73A: mov %edi,0x5B0(%ebp);");
    asm("loc_4CD740: lea 0xB4(%ebp),%eax;");
    asm("loc_4CD746: lea 0x47C(%ebp),%esi;");
    asm("loc_4CD74C: lea 0x22C(%ebp),%edi;");
    asm("loc_4CD752: mov $9,%ecx;");
    asm("loc_4CD757: rep movsl (%esi),(%edi);");
    asm("loc_4CD759: lea 0x4A0(%ebp),%ecx;");
    asm("loc_4CD75F: mov (%ecx),%esi;");
    asm("loc_4CD761: lea 0x19C(%eax),%edx;");
    asm("loc_4CD767: mov %esi,(%edx);");
    asm("loc_4CD769: mov 4(%ecx),%esi;");
    asm("loc_4CD76C: mov %esi,4(%edx);");
    asm("loc_4CD76F: mov 8(%ecx),%ecx;");
    asm("loc_4CD772: mov %ecx,8(%edx);");
    asm("loc_4CD775: lea 0x4AC(%ebp),%edx;");
    asm("loc_4CD77B: mov (%edx),%esi;");
    asm("loc_4CD77D: lea 0x1A8(%eax),%ecx;");
    asm("loc_4CD783: mov %esi,(%ecx);");
    asm("loc_4CD785: mov 4(%edx),%esi;");
    asm("loc_4CD788: mov %esi,4(%ecx);");
    asm("loc_4CD78B: mov 8(%edx),%edx;");
    asm("loc_4CD78E: mov %edx,8(%ecx);");
    asm("loc_4CD791: lea 0x5C(%eax),%ecx;");
    asm("loc_4CD794: movl $0xBF88B439,0x24(%esp);");
    asm("loc_4CD79C: mov 0x24(%esp),%edx;");
    asm("loc_4CD7A0: mov %edx,(%ecx);");
    asm("loc_4CD7A2: movl $0x3F266666,0x28(%esp);");
    asm("loc_4CD7AA: mov 0x28(%esp),%edx;");
    asm("loc_4CD7AE: mov %edx,4(%ecx);");
    asm("loc_4CD7B1: xor %esi,%esi;");
    asm("loc_4CD7B3: movl $0xC0191687,0x2C(%esp);");
    asm("loc_4CD7BB: mov 0x2C(%esp),%edx;");
    asm("loc_4CD7BF: mov %edx,8(%ecx);");
    asm("loc_4CD7C2: mov %eax,0x458(%ebp);");
    asm("loc_4CD7C8: movl $_data_673F48,0x454(%ebp);");
    asm("loc_4CD7D2: push %esi;");
    asm("loc_4CD7D3: movl $_data_6735C0,0x464(%ebp);");
    asm("loc_4CD7DD: push %ebp;");
    asm("loc_4CD7DE: lea 0x284(%ebp),%eax;");
    asm("loc_4CD7E4: mov %eax,0x468(%ebp);");
    asm("loc_4CD7EA: push $_data_5D7510;");
    asm("loc_4CD7EF: movl $0,_data_6735A4;");
    asm("loc_4CD7F9: movl $0,_data_6735A8;");
    asm("loc_4CD803: movl $0xBF800000,_data_6735AC;");
    asm("loc_4CD80D: mov %esi,_data_6735B0;");
    asm("loc_4CD813: mov %ebp,_data_6748F8;");
    asm("loc_4CD819: push $_data_5D74FC;");
    asm("loc_4CD81E: mov %esi,0x5B4(%ebp);");
    asm("loc_4CD824: call _sub_59DB20;");
    asm("loc_4CD829: add $0x10,%esp;");
    asm("loc_4CD82C: cmp %esi,%eax;");
    asm("loc_4CD82E: mov %eax,0x5B4(%ebp);");
    asm("loc_4CD834: je loc_4CD885;");
    asm("loc_4CD836: push %esi;");
    asm("loc_4CD837: push %esi;");
    asm("loc_4CD838: push %esi;");
    asm("loc_4CD839: push %esi;");
    asm("loc_4CD83A: push %esi;");
    asm("loc_4CD83B: push %esi;");
    asm("loc_4CD83C: push %esi;");
    asm("loc_4CD83D: lea 0x4C(%esp),%ecx;");
    asm("loc_4CD841: push %ecx;");
    asm("loc_4CD842: push %esi;");
    asm("loc_4CD843: lea 0x48(%esp),%edx;");
    asm("loc_4CD847: push %edx;");
    asm("loc_4CD848: push %esi;");
    asm("loc_4CD849: push %esi;");
    asm("loc_4CD84A: push %esi;");
    asm("loc_4CD84B: push $_data_5D74D8;");
    asm("loc_4CD850: mov %eax,%ecx;");
    asm("loc_4CD852: mov %esi,0x68(%esp);");
    asm("loc_4CD856: mov %esi,0x6C(%esp);");
    asm("loc_4CD85A: mov %esi,0x70(%esp);");
    asm("loc_4CD85E: movl $0xBE2594AF,0x5C(%esp);");
    asm("loc_4CD866: movl $0x3DC9EECC,0x60(%esp);");
    asm("loc_4CD86E: movl $0xBEB95810,0x64(%esp);");
    asm("loc_4CD876: call _sub_55AC30;");
    asm("loc_4CD87B: mov 0x5B4(%ebp),%eax;");
    asm("loc_4CD881: andb $0xFC,0x6C(%eax);");
    asm("loc_4CD885: mov 0x60(%esp),%ecx;");
    asm("loc_4CD889: pop %edi;");
    asm("loc_4CD88A: pop %esi;");
    asm("loc_4CD88B: mov %ebp,%eax;");
    asm("loc_4CD88D: pop %ebp;");
    asm("loc_4CD88E: mov %ecx,%fs:0;");
    asm("loc_4CD895: add $0x60,%esp;");
    asm("loc_4CD898: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CD8A0() // _sub_4CD8A0
{
    __DEBUG_ASM(4CD8A0);
    // chunk 0x4CD8A0 _sub_4CD8A0
    asm("loc_4CD8A0: push %ecx;");
    asm("loc_4CD8A1: push %edi;");
    asm("loc_4CD8A2: mov %ecx,%edi;");
    asm("loc_4CD8A4: call _sub_41A3E0;");
    asm("loc_4CD8A9: test %al,%al;");
    asm("loc_4CD8AB: jne loc_4CD9CA;");
    asm("loc_4CD8B1: call _sub_4A2C50;");
    asm("loc_4CD8B6: test %al,%al;");
    asm("loc_4CD8B8: jne loc_4CD9CA;");
    asm("loc_4CD8BE: push $_data_5D0228;");
    asm("loc_4CD8C3: call _sub_59DA10;");
    asm("loc_4CD8C8: add $4,%esp;");
    asm("loc_4CD8CB: test %eax,%eax;");
    asm("loc_4CD8CD: jne loc_4CD9CA;");
    asm("loc_4CD8D3: push %ebx;");
    asm("loc_4CD8D4: push %ebp;");
    asm("loc_4CD8D5: push %esi;");
    asm("loc_4CD8D6: push %eax;");
    asm("loc_4CD8D7: lea 0x474(%edi),%ecx;");
    asm("loc_4CD8DD: call _sub_425640;");
    asm("loc_4CD8E2: mov %eax,%ebp;");
    asm("loc_4CD8E4: mov 0x5B0(%edi),%eax;");
    asm("loc_4CD8EA: lea 0xB4(%edi),%esi;");
    asm("loc_4CD8F0: lea 0x38(%esi),%ebx;");
    asm("loc_4CD8F3: mov %eax,0x10(%esp);");
    asm("loc_4CD8F7: cmpb $0,(%ebx);");
    asm("loc_4CD8FA: je loc_4CD9BC;");
    asm("loc_4CD900: mov %esi,%ecx;");
    asm("loc_4CD902: call _sub_4CC440;");
    asm("loc_4CD907: push $5;");
    asm("loc_4CD909: call _sub_5B3510;");
    asm("loc_4CD90E: fcompl _data_5C8BA8;");
    asm("loc_4CD914: add $4,%esp;");
    asm("loc_4CD917: fnstsw %ax;");
    asm("loc_4CD919: test $0x41,%ah;");
    asm("loc_4CD91C: jne loc_4CD99B;");
    asm("loc_4CD91E: mov 0x170(%esi),%eax;");
    asm("loc_4CD924: test %eax,%eax;");
    asm("loc_4CD926: je loc_4CD958;");
    asm("loc_4CD928: cmpl $0,(%eax);");
    asm("loc_4CD92B: je loc_4CD958;");
    asm("loc_4CD92D: mov 0x10(%esp),%ecx;");
    asm("loc_4CD931: push %ebp;");
    asm("loc_4CD932: push %ecx;");
    asm("loc_4CD933: lea 0x4B8(%edi),%edx;");
    asm("loc_4CD939: push %edx;");
    asm("loc_4CD93A: mov %esi,%ecx;");
    asm("loc_4CD93C: call _sub_4CC660;");
    asm("loc_4CD941: push $0x6EE;");
    asm("loc_4CD946: push $_data_5D7220;");
    asm("loc_4CD94B: push $_data_67DBF8;");
    asm("loc_4CD950: call _sub_422610;");
    asm("loc_4CD955: add $0xC,%esp;");
    asm("loc_4CD958: push $0xBD8;");
    asm("loc_4CD95D: push $_data_5D7220;");
    asm("loc_4CD962: push $_data_67DBF8;");
    asm("loc_4CD967: call _sub_422610;");
    asm("loc_4CD96C: add $0xC,%esp;");
    asm("loc_4CD96F: mov %ebx,%ecx;");
    asm("loc_4CD971: call _sub_4CD160;");
    asm("loc_4CD976: call _sub_4225E0;");
    asm("loc_4CD97B: push $0xB44;");
    asm("loc_4CD980: call _sub_421ED0;");
    asm("loc_4CD985: mov 0x4E(%ebx),%al;");
    asm("loc_4CD988: add $4,%esp;");
    asm("loc_4CD98B: test %al,%al;");
    asm("loc_4CD98D: je loc_4CD99B;");
    asm("loc_4CD98F: add $4,%ebx;");
    asm("loc_4CD992: push %ebx;");
    asm("loc_4CD993: call _sub_4CC9A0;");
    asm("loc_4CD998: add $4,%esp;");
    asm("loc_4CD99B: push $0x6F5;");
    asm("loc_4CD9A0: push $_data_5D7220;");
    asm("loc_4CD9A5: push $_data_67DBF8;");
    asm("loc_4CD9AA: call _sub_422610;");
    asm("loc_4CD9AF: push $_data_67DBF8;");
    asm("loc_4CD9B4: call _sub_422950;");
    asm("loc_4CD9B9: add $0x10,%esp;");
    asm("loc_4CD9BC: pop %esi;");
    asm("loc_4CD9BD: pop %ebp;");
    asm("loc_4CD9BE: pop %ebx;");
    asm("loc_4CD9BF: mov %edi,%ecx;");
    asm("loc_4CD9C1: pop %edi;");
    asm("loc_4CD9C2: add $4,%esp;");
    asm("loc_4CD9C5: jmp _sub_59E5C0;");
    asm("loc_4CD9CA: pop %edi;");
    asm("loc_4CD9CB: pop %ecx;");
    asm("loc_4CD9CC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CD9D0() // _sub_4CD9D0
{
    __DEBUG_ASM(4CD9D0);
    // chunk 0x4CD9D0 _sub_4CD9D0
    asm("loc_4CD9D0: sub $0x13C,%esp;");
    asm("loc_4CD9D6: push %esi;");
    asm("loc_4CD9D7: push %edi;");
    asm("loc_4CD9D8: mov %ecx,%edi;");
    asm("loc_4CD9DA: mov 0xEC(%edi),%al;");
    asm("loc_4CD9E0: test %al,%al;");
    asm("loc_4CD9E2: lea 0xB4(%edi),%esi;");
    asm("loc_4CD9E8: mov %esi,0x10(%esp);");
    asm("loc_4CD9EC: je loc_4CDA1C;");
    asm("loc_4CD9EE: push $5;");
    asm("loc_4CD9F0: call _sub_5B3510;");
    asm("loc_4CD9F5: fcompl _data_5C8BA8;");
    asm("loc_4CD9FB: add $4,%esp;");
    asm("loc_4CD9FE: fnstsw %ax;");
    asm("loc_4CDA00: test $0x41,%ah;");
    asm("loc_4CDA03: jne loc_4CDA0E;");
    asm("loc_4CDA05: cmpb $1,0x174(%esi);");
    asm("loc_4CDA0C: jne loc_4CDA1C;");
    asm("loc_4CDA0E: mov 0x5B4(%edi),%eax;");
    asm("loc_4CDA14: mov 0x6C(%eax),%cl;");
    asm("loc_4CDA17: or $3,%cl;");
    asm("loc_4CDA1A: jmp loc_4CDA28;");
    asm("loc_4CDA1C: mov 0x5B4(%edi),%eax;");
    asm("loc_4CDA22: mov 0x6C(%eax),%cl;");
    asm("loc_4CDA25: and $0xFC,%cl;");
    asm("loc_4CDA28: mov %cl,0x6C(%eax);");
    asm("loc_4CDA2B: call _sub_42D740;");
    asm("loc_4CDA30: test %al,%al;");
    asm("loc_4CDA32: jne loc_4CDC04;");
    asm("loc_4CDA38: mov 0xC(%edi),%ecx;");
    asm("loc_4CDA3B: push %ebx;");
    asm("loc_4CDA3C: xor %ebx,%ebx;");
    asm("loc_4CDA3E: cmp %ebx,%ecx;");
    asm("loc_4CDA40: je loc_4CDA5D;");
    asm("loc_4CDA42: testb $1,0x6C(%ecx);");
    asm("loc_4CDA46: mov 8(%ecx),%esi;");
    asm("loc_4CDA49: je loc_4CDA52;");
    asm("loc_4CDA4B: mov (%ecx),%eax;");
    asm("loc_4CDA4D: calll *0x2C(%eax);");
    asm("loc_4CDA50: jmp loc_4CDA57;");
    asm("loc_4CDA52: mov (%ecx),%edx;");
    asm("loc_4CDA54: calll *0x30(%edx);");
    asm("loc_4CDA57: cmp %ebx,%esi;");
    asm("loc_4CDA59: mov %esi,%ecx;");
    asm("loc_4CDA5B: jne loc_4CDA42;");
    asm("loc_4CDA5D: call _sub_42D680;");
    asm("loc_4CDA62: fstps 0x10(%esp);");
    asm("loc_4CDA66: mov 0x10(%esp),%eax;");
    asm("loc_4CDA6A: mov 0x458(%edi),%ecx;");
    asm("loc_4CDA70: lea 0x454(%edi),%esi;");
    asm("loc_4CDA76: push %eax;");
    asm("loc_4CDA77: call _sub_4CBC40;");
    asm("loc_4CDA7C: test %al,%al;");
    asm("loc_4CDA7E: mov %al,0xF(%esp);");
    asm("loc_4CDA82: je loc_4CDA8B;");
    asm("loc_4CDA84: mov %ebx,8(%esi);");
    asm("loc_4CDA87: movb $0,0xC(%esi);");
    asm("loc_4CDA8B: push %ebp;");
    asm("loc_4CDA8C: lea 0x24(%esp),%ecx;");
    asm("loc_4CDA90: call _sub_4CDC10;");
    asm("loc_4CDA95: lea 0x1C(%esp),%ecx;");
    asm("loc_4CDA99: push %ecx;");
    asm("loc_4CDA9A: mov (%esi),%ecx;");
    asm("loc_4CDA9C: movl $1,0xA4(%esp);");
    asm("loc_4CDAA7: mov %ebx,0xA8(%esp);");
    asm("loc_4CDAAE: movl $0,0xB0(%esp);");
    asm("loc_4CDAB9: call _sub_4CDE50;");
    asm("loc_4CDABE: test %al,%al;");
    asm("loc_4CDAC0: je loc_4CDBAD;");
    asm("loc_4CDAC6: lea 0x1C(%esp),%edx;");
    asm("loc_4CDACA: push %edx;");
    asm("loc_4CDACB: mov %edi,%ecx;");
    asm("loc_4CDACD: call _sub_4CDF40;");
    asm("loc_4CDAD2: mov %eax,%ebp;");
    asm("loc_4CDAD4: xor %bl,%bl;");
    asm("loc_4CDAD6: test %ebp,%ebp;");
    asm("loc_4CDAD8: jge loc_4CDB1D;");
    asm("loc_4CDADA: mov 0xC(%esi),%al;");
    asm("loc_4CDADD: test %al,%al;");
    asm("loc_4CDADF: je loc_4CDB37;");
    asm("loc_4CDAE1: cmp 8(%esi),%ebp;");
    asm("loc_4CDAE4: jge loc_4CDB1D;");
    asm("loc_4CDAE6: lea 0xB4(%esp),%ecx;");
    asm("loc_4CDAED: call _sub_4CDC30;");
    asm("loc_4CDAF2: mov (%esi),%ecx;");
    asm("loc_4CDAF4: lea 0xB4(%esp),%eax;");
    asm("loc_4CDAFB: push %eax;");
    asm("loc_4CDAFC: call _sub_4CDC60;");
    asm("loc_4CDB01: lea 0xB4(%esp),%ecx;");
    asm("loc_4CDB08: push %ecx;");
    asm("loc_4CDB09: mov %edi,%ecx;");
    asm("loc_4CDB0B: mov $1,%bl;");
    asm("loc_4CDB0D: movl $2,0x14C(%esp);");
    asm("loc_4CDB18: call _sub_4CDFC0;");
    asm("loc_4CDB1D: mov 0xC(%esi),%al;");
    asm("loc_4CDB20: test %al,%al;");
    asm("loc_4CDB22: je loc_4CDB37;");
    asm("loc_4CDB24: mov 8(%esi),%eax;");
    asm("loc_4CDB27: test %eax,%eax;");
    asm("loc_4CDB29: jge loc_4CDB37;");
    asm("loc_4CDB2B: cmp %eax,%ebp;");
    asm("loc_4CDB2D: jle loc_4CDB37;");
    asm("loc_4CDB2F: mov 4(%esi),%ecx;");
    asm("loc_4CDB32: call _sub_4CC2C0;");
    asm("loc_4CDB37: test %bl,%bl;");
    asm("loc_4CDB39: jne loc_4CDBAD;");
    asm("loc_4CDB3B: mov 0x13(%esp),%al;");
    asm("loc_4CDB3F: test %al,%al;");
    asm("loc_4CDB41: je loc_4CDB61;");
    asm("loc_4CDB43: mov (%esi),%ecx;");
    asm("loc_4CDB45: lea 0x1C(%esp),%edx;");
    asm("loc_4CDB49: push %edx;");
    asm("loc_4CDB4A: call _sub_4CDC60;");
    asm("loc_4CDB4F: lea 0x1C(%esp),%eax;");
    asm("loc_4CDB53: push %eax;");
    asm("loc_4CDB54: push %esi;");
    asm("loc_4CDB55: mov %edi,%ecx;");
    asm("loc_4CDB57: call _sub_4CE000;");
    asm("loc_4CDB5C: mov %bl,0xD(%esi);");
    asm("loc_4CDB5F: jmp loc_4CDBAD;");
    asm("loc_4CDB61: mov _import_5C64B8,%ecx;");
    asm("loc_4CDB67: cmp (%ecx),%ebp;");
    asm("loc_4CDB69: jle loc_4CDB78;");
    asm("loc_4CDB6B: mov 0xD(%esi),%al;");
    asm("loc_4CDB6E: test %al,%al;");
    asm("loc_4CDB70: jne loc_4CDBAD;");
    asm("loc_4CDB72: movb $1,0xD(%esi);");
    asm("loc_4CDB76: jmp loc_4CDBAD;");
    asm("loc_4CDB78: lea 0xB4(%esp),%ecx;");
    asm("loc_4CDB7F: call _sub_4CDC30;");
    asm("loc_4CDB84: mov (%esi),%ecx;");
    asm("loc_4CDB86: lea 0xB4(%esp),%edx;");
    asm("loc_4CDB8D: push %edx;");
    asm("loc_4CDB8E: call _sub_4CDC60;");
    asm("loc_4CDB93: lea 0xB4(%esp),%eax;");
    asm("loc_4CDB9A: push %eax;");
    asm("loc_4CDB9B: mov %edi,%ecx;");
    asm("loc_4CDB9D: movl $2,0x14C(%esp);");
    asm("loc_4CDBA8: call _sub_4CDFC0;");
    asm("loc_4CDBAD: mov 0x14(%esp),%ebx;");
    asm("loc_4CDBB1: push %ebx;");
    asm("loc_4CDBB2: lea 0x464(%edi),%esi;");
    asm("loc_4CDBB8: push %esi;");
    asm("loc_4CDBB9: mov %edi,%ecx;");
    asm("loc_4CDBBB: call _sub_4CE4C0;");
    asm("loc_4CDBC0: mov _data_6735A4,%ecx;");
    asm("loc_4CDBC6: mov _data_6735A8,%edx;");
    asm("loc_4CDBCC: push $_data_6735A8;");
    asm("loc_4CDBD1: push $_data_6735AC;");
    asm("loc_4CDBD6: push %ebx;");
    asm("loc_4CDBD7: push %ecx;");
    asm("loc_4CDBD8: push %edx;");
    asm("loc_4CDBD9: call _sub_427940;");
    asm("loc_4CDBDE: mov 4(%esi),%esi;");
    asm("loc_4CDBE1: add $0x14,%esp;");
    asm("loc_4CDBE4: test %esi,%esi;");
    asm("loc_4CDBE6: pop %ebp;");
    asm("loc_4CDBE7: je loc_4CDBF2;");
    asm("loc_4CDBE9: flds _data_6735A8;");
    asm("loc_4CDBEF: fstps 0x1C(%esi);");
    asm("loc_4CDBF2: mov 0x14(%esp),%ecx;");
    asm("loc_4CDBF6: add $0x4B8,%edi;");
    asm("loc_4CDBFC: push %edi;");
    asm("loc_4CDBFD: push %ebx;");
    asm("loc_4CDBFE: call _sub_4CC140;");
    asm("loc_4CDC03: pop %ebx;");
    asm("loc_4CDC04: pop %edi;");
    asm("loc_4CDC05: pop %esi;");
    asm("loc_4CDC06: add $0x13C,%esp;");
    asm("loc_4CDC0C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CDC10() // _sub_4CDC10
{
    __DEBUG_ASM(4CDC10);
    // chunk 0x4CDC10 _sub_4CDC10
    asm("loc_4CDC10: mov %ecx,%eax;");
    asm("loc_4CDC12: xor %ecx,%ecx;");
    asm("loc_4CDC14: mov %ecx,(%eax);");
    asm("loc_4CDC16: mov %ecx,4(%eax);");
    asm("loc_4CDC19: mov %ecx,8(%eax);");
    asm("loc_4CDC1C: mov %ecx,0xC(%eax);");
    asm("loc_4CDC1F: mov %ecx,0x30(%eax);");
    asm("loc_4CDC22: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CDC30() // _sub_4CDC30
{
    __DEBUG_ASM(4CDC30);
    // chunk 0x4CDC30 _sub_4CDC30
    asm("loc_4CDC30: mov %ecx,%eax;");
    asm("loc_4CDC32: xor %ecx,%ecx;");
    asm("loc_4CDC34: mov %ecx,8(%eax);");
    asm("loc_4CDC37: mov %ecx,0xC(%eax);");
    asm("loc_4CDC3A: mov %ecx,0x10(%eax);");
    asm("loc_4CDC3D: mov %ecx,0x14(%eax);");
    asm("loc_4CDC40: mov %ecx,0x38(%eax);");
    asm("loc_4CDC43: movl $1,0x84(%eax);");
    asm("loc_4CDC4D: mov %ecx,0x88(%eax);");
    asm("loc_4CDC53: mov %ecx,0x90(%eax);");
    asm("loc_4CDC59: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CDC60() // _sub_4CDC60
{
    __DEBUG_ASM(4CDC60);
    // chunk 0x4CDC60 _sub_4CDC60
    asm("loc_4CDC60: push %ecx;");
    asm("loc_4CDC61: cmpl $0,(%ecx);");
    asm("loc_4CDC64: mov %ecx,(%esp);");
    asm("loc_4CDC68: jbe loc_4CDE3C;");
    asm("loc_4CDC6E: mov 4(%ecx),%eax;");
    asm("loc_4CDC71: push %ebx;");
    asm("loc_4CDC72: push %ebp;");
    asm("loc_4CDC73: lea 4(%ecx),%edx;");
    asm("loc_4CDC76: push %esi;");
    asm("loc_4CDC77: mov 0x14(%esp),%esi;");
    asm("loc_4CDC7B: mov %eax,(%esi);");
    asm("loc_4CDC7D: mov 4(%edx),%eax;");
    asm("loc_4CDC80: mov %eax,4(%esi);");
    asm("loc_4CDC83: mov 8(%edx),%ebx;");
    asm("loc_4CDC86: lea 8(%esi),%eax;");
    asm("loc_4CDC89: push %edi;");
    asm("loc_4CDC8A: lea 8(%edx),%edi;");
    asm("loc_4CDC8D: mov %ebx,(%eax);");
    asm("loc_4CDC8F: mov 4(%edi),%ebx;");
    asm("loc_4CDC92: mov %ebx,4(%eax);");
    asm("loc_4CDC95: mov 8(%edi),%ebx;");
    asm("loc_4CDC98: mov %ebx,8(%eax);");
    asm("loc_4CDC9B: mov 0xC(%edi),%ebx;");
    asm("loc_4CDC9E: mov %ebx,0xC(%eax);");
    asm("loc_4CDCA1: mov 0x30(%edi),%ebx;");
    asm("loc_4CDCA4: xor %ebp,%ebp;");
    asm("loc_4CDCA6: test %ebx,%ebx;");
    asm("loc_4CDCA8: mov %ebx,0x30(%eax);");
    asm("loc_4CDCAB: jle loc_4CDCC6;");
    asm("loc_4CDCAD: lea 0x10(%eax),%ebx;");
    asm("loc_4CDCB0: sub %eax,%edi;");
    asm("loc_4CDCB2: mov (%edi,%ebx),%ecx;");
    asm("loc_4CDCB5: mov %ecx,(%ebx);");
    asm("loc_4CDCB7: mov 0x30(%eax),%ecx;");
    asm("loc_4CDCBA: inc %ebp;");
    asm("loc_4CDCBB: add $4,%ebx;");
    asm("loc_4CDCBE: cmp %ecx,%ebp;");
    asm("loc_4CDCC0: jl loc_4CDCB2;");
    asm("loc_4CDCC2: mov 0x10(%esp),%ecx;");
    asm("loc_4CDCC6: mov 0x3C(%edx),%eax;");
    asm("loc_4CDCC9: mov %eax,0x3C(%esi);");
    asm("loc_4CDCCC: mov 0x40(%edx),%eax;");
    asm("loc_4CDCCF: mov %edx,%edi;");
    asm("loc_4CDCD1: mov %eax,0x40(%esi);");
    asm("loc_4CDCD4: lea 0x44(%esi),%eax;");
    asm("loc_4CDCD7: sub %esi,%edi;");
    asm("loc_4CDCD9: mov $0x10,%ebx;");
    asm("loc_4CDCDE: mov %edi,%edi;");
    asm("loc_4CDCE0: mov (%edi,%eax),%ebp;");
    asm("loc_4CDCE3: mov %ebp,(%eax);");
    asm("loc_4CDCE5: add $4,%eax;");
    asm("loc_4CDCE8: dec %ebx;");
    asm("loc_4CDCE9: jne loc_4CDCE0;");
    asm("loc_4CDCEB: mov 0x84(%edx),%eax;");
    asm("loc_4CDCF1: mov %eax,0x84(%esi);");
    asm("loc_4CDCF7: mov 0x88(%edx),%eax;");
    asm("loc_4CDCFD: mov %eax,0x88(%esi);");
    asm("loc_4CDD03: mov 0x8C(%edx),%eax;");
    asm("loc_4CDD09: mov %eax,0x8C(%esi);");
    asm("loc_4CDD0F: mov 0x90(%edx),%eax;");
    asm("loc_4CDD15: mov %eax,0x90(%esi);");
    asm("loc_4CDD1B: mov 0x94(%edx),%edx;");
    asm("loc_4CDD21: mov %edx,0x94(%esi);");
    asm("loc_4CDD27: cmpl $1,(%ecx);");
    asm("loc_4CDD2A: movl $1,0x18(%esp);");
    asm("loc_4CDD32: jbe loc_4CDE2D;");
    asm("loc_4CDD38: lea 0x10(%ecx),%eax;");
    asm("loc_4CDD3B: nop;");
    asm("loc_4CDD3C: lea (%esp),%esp;");
    asm("loc_4CDD40: mov 0x8C(%eax),%ecx;");
    asm("loc_4CDD46: mov %ecx,-0xC(%eax);");
    asm("loc_4CDD49: mov 0x90(%eax),%ecx;");
    asm("loc_4CDD4F: mov %ecx,-8(%eax);");
    asm("loc_4CDD52: mov 0x94(%eax),%edi;");
    asm("loc_4CDD58: lea 0x8C(%eax),%esi;");
    asm("loc_4CDD5E: lea -0xC(%eax),%edx;");
    asm("loc_4CDD61: lea 0x94(%eax),%ebp;");
    asm("loc_4CDD67: mov %edi,-4(%eax);");
    asm("loc_4CDD6A: mov 0x98(%eax),%edi;");
    asm("loc_4CDD70: lea -4(%eax),%ecx;");
    asm("loc_4CDD73: mov %edi,(%eax);");
    asm("loc_4CDD75: mov 0x9C(%eax),%edi;");
    asm("loc_4CDD7B: mov %edi,4(%eax);");
    asm("loc_4CDD7E: mov 0xA0(%eax),%edi;");
    asm("loc_4CDD84: mov %edi,8(%eax);");
    asm("loc_4CDD87: mov 0xC4(%eax),%edi;");
    asm("loc_4CDD8D: xor %ebx,%ebx;");
    asm("loc_4CDD8F: test %edi,%edi;");
    asm("loc_4CDD91: mov %edi,0x2C(%eax);");
    asm("loc_4CDD94: jle loc_4CDDB0;");
    asm("loc_4CDD96: lea 0xC(%eax),%edi;");
    asm("loc_4CDD99: sub %ecx,%ebp;");
    asm("loc_4CDD9B: nop;");
    asm("loc_4CDD9C: lea (%esp),%esp;");
    asm("loc_4CDDA0: mov (%edi,%ebp),%ecx;");
    asm("loc_4CDDA3: mov %ecx,(%edi);");
    asm("loc_4CDDA5: mov 0x2C(%eax),%ecx;");
    asm("loc_4CDDA8: inc %ebx;");
    asm("loc_4CDDA9: add $4,%edi;");
    asm("loc_4CDDAC: cmp %ecx,%ebx;");
    asm("loc_4CDDAE: jl loc_4CDDA0;");
    asm("loc_4CDDB0: mov 0x3C(%esi),%ecx;");
    asm("loc_4CDDB3: mov %ecx,0x3C(%edx);");
    asm("loc_4CDDB6: mov 0x40(%esi),%ecx;");
    asm("loc_4CDDB9: mov %ecx,0x40(%edx);");
    asm("loc_4CDDBC: mov %esi,%ecx;");
    asm("loc_4CDDBE: lea 0x44(%edx),%edi;");
    asm("loc_4CDDC1: sub %edx,%ecx;");
    asm("loc_4CDDC3: mov $0x10,%ebx;");
    asm("loc_4CDDC8: mov (%ecx,%edi),%ebp;");
    asm("loc_4CDDCB: mov %ebp,(%edi);");
    asm("loc_4CDDCD: add $4,%edi;");
    asm("loc_4CDDD0: dec %ebx;");
    asm("loc_4CDDD1: jne loc_4CDDC8;");
    asm("loc_4CDDD3: mov 0x84(%esi),%ecx;");
    asm("loc_4CDDD9: mov %ecx,0x84(%edx);");
    asm("loc_4CDDDF: mov 0x88(%esi),%ecx;");
    asm("loc_4CDDE5: mov %ecx,0x88(%edx);");
    asm("loc_4CDDEB: mov 0x8C(%esi),%ecx;");
    asm("loc_4CDDF1: mov %ecx,0x8C(%edx);");
    asm("loc_4CDDF7: mov 0x90(%esi),%ecx;");
    asm("loc_4CDDFD: mov %ecx,0x90(%edx);");
    asm("loc_4CDE03: mov 0x94(%esi),%ecx;");
    asm("loc_4CDE09: mov %ecx,0x94(%edx);");
    asm("loc_4CDE0F: mov 0x18(%esp),%ecx;");
    asm("loc_4CDE13: mov 0x10(%esp),%edx;");
    asm("loc_4CDE17: mov (%edx),%esi;");
    asm("loc_4CDE19: inc %ecx;");
    asm("loc_4CDE1A: add $0x98,%eax;");
    asm("loc_4CDE1F: cmp %esi,%ecx;");
    asm("loc_4CDE21: mov %ecx,0x18(%esp);");
    asm("loc_4CDE25: jb loc_4CDD40;");
    asm("loc_4CDE2B: mov %edx,%ecx;");
    asm("loc_4CDE2D: mov (%ecx),%eax;");
    asm("loc_4CDE2F: pop %edi;");
    asm("loc_4CDE30: pop %esi;");
    asm("loc_4CDE31: dec %eax;");
    asm("loc_4CDE32: pop %ebp;");
    asm("loc_4CDE33: mov %eax,(%ecx);");
    asm("loc_4CDE35: mov $1,%al;");
    asm("loc_4CDE37: pop %ebx;");
    asm("loc_4CDE38: pop %ecx;");
    asm("loc_4CDE39: ret $4;");
    asm("loc_4CDE3C: xor %al,%al;");
    asm("loc_4CDE3E: pop %ecx;");
    asm("loc_4CDE3F: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CDE50() // _sub_4CDE50
{
    __DEBUG_ASM(4CDE50);
    // chunk 0x4CDE50 _sub_4CDE50
    asm("loc_4CDE50: cmpl $0,(%ecx);");
    asm("loc_4CDE53: jbe loc_4CDF1F;");
    asm("loc_4CDE59: mov 4(%ecx),%eax;");
    asm("loc_4CDE5C: push %ebx;");
    asm("loc_4CDE5D: lea 4(%ecx),%edx;");
    asm("loc_4CDE60: push %esi;");
    asm("loc_4CDE61: mov 0xC(%esp),%esi;");
    asm("loc_4CDE65: mov %eax,(%esi);");
    asm("loc_4CDE67: mov 4(%edx),%ecx;");
    asm("loc_4CDE6A: mov %ecx,4(%esi);");
    asm("loc_4CDE6D: lea 8(%edx),%ecx;");
    asm("loc_4CDE70: push %edi;");
    asm("loc_4CDE71: mov (%ecx),%edi;");
    asm("loc_4CDE73: lea 8(%esi),%eax;");
    asm("loc_4CDE76: mov %edi,(%eax);");
    asm("loc_4CDE78: mov 4(%ecx),%edi;");
    asm("loc_4CDE7B: mov %edi,4(%eax);");
    asm("loc_4CDE7E: mov 8(%ecx),%edi;");
    asm("loc_4CDE81: mov %edi,8(%eax);");
    asm("loc_4CDE84: mov 0xC(%ecx),%edi;");
    asm("loc_4CDE87: mov %edi,0xC(%eax);");
    asm("loc_4CDE8A: mov 0x30(%ecx),%edi;");
    asm("loc_4CDE8D: xor %ebx,%ebx;");
    asm("loc_4CDE8F: test %edi,%edi;");
    asm("loc_4CDE91: mov %edi,0x30(%eax);");
    asm("loc_4CDE94: jle loc_4CDEB1;");
    asm("loc_4CDE96: lea 0x10(%eax),%edi;");
    asm("loc_4CDE99: sub %eax,%ecx;");
    asm("loc_4CDE9B: push %ebp;");
    asm("loc_4CDE9C: lea (%esp),%esp;");
    asm("loc_4CDEA0: mov (%ecx,%edi),%ebp;");
    asm("loc_4CDEA3: mov %ebp,(%edi);");
    asm("loc_4CDEA5: mov 0x30(%eax),%ebp;");
    asm("loc_4CDEA8: inc %ebx;");
    asm("loc_4CDEA9: add $4,%edi;");
    asm("loc_4CDEAC: cmp %ebp,%ebx;");
    asm("loc_4CDEAE: jl loc_4CDEA0;");
    asm("loc_4CDEB0: pop %ebp;");
    asm("loc_4CDEB1: mov 0x3C(%edx),%eax;");
    asm("loc_4CDEB4: mov %eax,0x3C(%esi);");
    asm("loc_4CDEB7: mov 0x40(%edx),%ecx;");
    asm("loc_4CDEBA: mov %ecx,0x40(%esi);");
    asm("loc_4CDEBD: mov %edx,%ecx;");
    asm("loc_4CDEBF: lea 0x44(%esi),%eax;");
    asm("loc_4CDEC2: sub %esi,%ecx;");
    asm("loc_4CDEC4: mov $0x10,%edi;");
    asm("loc_4CDEC9: lea (%esp),%esp;");
    asm("loc_4CDED0: mov (%ecx,%eax),%ebx;");
    asm("loc_4CDED3: mov %ebx,(%eax);");
    asm("loc_4CDED5: add $4,%eax;");
    asm("loc_4CDED8: dec %edi;");
    asm("loc_4CDED9: jne loc_4CDED0;");
    asm("loc_4CDEDB: mov 0x84(%edx),%eax;");
    asm("loc_4CDEE1: mov %eax,0x84(%esi);");
    asm("loc_4CDEE7: mov 0x88(%edx),%ecx;");
    asm("loc_4CDEED: mov %ecx,0x88(%esi);");
    asm("loc_4CDEF3: mov 0x8C(%edx),%eax;");
    asm("loc_4CDEF9: mov %eax,0x8C(%esi);");
    asm("loc_4CDEFF: mov 0x90(%edx),%ecx;");
    asm("loc_4CDF05: mov %ecx,0x90(%esi);");
    asm("loc_4CDF0B: mov 0x94(%edx),%edx;");
    asm("loc_4CDF11: pop %edi;");
    asm("loc_4CDF12: mov %edx,0x94(%esi);");
    asm("loc_4CDF18: pop %esi;");
    asm("loc_4CDF19: mov $1,%al;");
    asm("loc_4CDF1B: pop %ebx;");
    asm("loc_4CDF1C: ret $4;");
    asm("loc_4CDF1F: xor %al,%al;");
    asm("loc_4CDF21: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CDF30() // _sub_4CDF30
{
    __DEBUG_ASM(4CDF30);
    // chunk 0x4CDF30 _sub_4CDF30
    asm("loc_4CDF30: xor %eax,%eax;");
    asm("loc_4CDF32: mov %eax,_data_673F48;");
    asm("loc_4CDF37: mov %eax,_data_6735C0;");
    asm("loc_4CDF3C: mov $1,%al;");
    asm("loc_4CDF3E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CDF40() // _sub_4CDF40
{
    __DEBUG_ASM(4CDF40);
    // chunk 0x4CDF40 _sub_4CDF40
    asm("loc_4CDF40: push %ecx;");
    asm("loc_4CDF41: push %ebx;");
    asm("loc_4CDF42: push %ebp;");
    asm("loc_4CDF43: mov 0x10(%esp),%ebp;");
    asm("loc_4CDF47: mov 0x3C(%ebp),%eax;");
    asm("loc_4CDF4A: push %esi;");
    asm("loc_4CDF4B: push %edi;");
    asm("loc_4CDF4C: mov $0xFFFFFF9C,%esi;");
    asm("loc_4CDF51: push %eax;");
    asm("loc_4CDF52: mov %esi,0x14(%esp);");
    asm("loc_4CDF56: call _sub_430AB0;");
    asm("loc_4CDF5B: mov %eax,%edi;");
    asm("loc_4CDF5D: add $4,%esp;");
    asm("loc_4CDF60: test %edi,%edi;");
    asm("loc_4CDF62: je loc_4CDFAC;");
    asm("loc_4CDF64: mov 0x84(%ebp),%eax;");
    asm("loc_4CDF6A: xor %ebx,%ebx;");
    asm("loc_4CDF6C: test %eax,%eax;");
    asm("loc_4CDF6E: jle loc_4CDFAC;");
    asm("loc_4CDF70: lea 0x44(%ebp),%esi;");
    asm("loc_4CDF73: mov (%esi),%eax;");
    asm("loc_4CDF75: mov (%edi),%edx;");
    asm("loc_4CDF77: push %eax;");
    asm("loc_4CDF78: mov %edi,%ecx;");
    asm("loc_4CDF7A: calll *0x14(%edx);");
    asm("loc_4CDF7D: test %eax,%eax;");
    asm("loc_4CDF7F: je loc_4CDF92;");
    asm("loc_4CDF81: mov (%eax),%edx;");
    asm("loc_4CDF83: mov %eax,%ecx;");
    asm("loc_4CDF85: calll *0x38(%edx);");
    asm("loc_4CDF88: cmp 0x10(%esp),%eax;");
    asm("loc_4CDF8C: jle loc_4CDF92;");
    asm("loc_4CDF8E: mov %eax,0x10(%esp);");
    asm("loc_4CDF92: mov 0x84(%ebp),%eax;");
    asm("loc_4CDF98: inc %ebx;");
    asm("loc_4CDF99: add $4,%esi;");
    asm("loc_4CDF9C: cmp %eax,%ebx;");
    asm("loc_4CDF9E: jl loc_4CDF73;");
    asm("loc_4CDFA0: mov 0x10(%esp),%eax;");
    asm("loc_4CDFA4: pop %edi;");
    asm("loc_4CDFA5: pop %esi;");
    asm("loc_4CDFA6: pop %ebp;");
    asm("loc_4CDFA7: pop %ebx;");
    asm("loc_4CDFA8: pop %ecx;");
    asm("loc_4CDFA9: ret $4;");
    asm("loc_4CDFAC: pop %edi;");
    asm("loc_4CDFAD: mov %esi,%eax;");
    asm("loc_4CDFAF: pop %esi;");
    asm("loc_4CDFB0: pop %ebp;");
    asm("loc_4CDFB1: pop %ebx;");
    asm("loc_4CDFB2: pop %ecx;");
    asm("loc_4CDFB3: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CDFC0() // _sub_4CDFC0
{
    __DEBUG_ASM(4CDFC0);
    // chunk 0x4CDFC0 _sub_4CDFC0
    asm("loc_4CDFC0: calll *_import_5C60D0;");
    asm("loc_4CDFC6: test %al,%al;");
    asm("loc_4CDFC8: je loc_4CDFF7;");
    asm("loc_4CDFCA: mov 4(%esp),%eax;");
    asm("loc_4CDFCE: mov _data_67ECD0,%ecx;");
    asm("loc_4CDFD4: mov (%ecx),%edx;");
    asm("loc_4CDFD6: push %esi;");
    asm("loc_4CDFD7: mov 0x94(%eax),%esi;");
    asm("loc_4CDFDD: push %esi;");
    asm("loc_4CDFDE: mov 0x84(%eax),%esi;");
    asm("loc_4CDFE4: mov 0x40(%eax,%esi,4),%esi;");
    asm("loc_4CDFE8: push %esi;");
    asm("loc_4CDFE9: mov 4(%eax),%esi;");
    asm("loc_4CDFEC: mov (%eax),%eax;");
    asm("loc_4CDFEE: push %esi;");
    asm("loc_4CDFEF: push %eax;");
    asm("loc_4CDFF0: calll *0xFC(%edx);");
    asm("loc_4CDFF6: pop %esi;");
    asm("loc_4CDFF7: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CE000() // _sub_4CE000
{
    __DEBUG_ASM(4CE000);
    // chunk 0x4CE000 _sub_4CE000
    asm("loc_4CE000: sub $0x34,%esp;");
    asm("loc_4CE003: push %ebx;");
    asm("loc_4CE004: push %ebp;");
    asm("loc_4CE005: mov 0x44(%esp),%ebp;");
    asm("loc_4CE009: mov 0x3C(%ebp),%eax;");
    asm("loc_4CE00C: push %esi;");
    asm("loc_4CE00D: push %edi;");
    asm("loc_4CE00E: mov %ecx,%esi;");
    asm("loc_4CE010: push %eax;");
    asm("loc_4CE011: mov %esi,0x1C(%esp);");
    asm("loc_4CE015: call _sub_430AB0;");
    asm("loc_4CE01A: add $4,%esp;");
    asm("loc_4CE01D: test %eax,%eax;");
    asm("loc_4CE01F: mov %eax,0x1C(%esp);");
    asm("loc_4CE023: jne loc_4CE053;");
    asm("loc_4CE025: mov 0x3C(%ebp),%ecx;");
    asm("loc_4CE028: mov _import_5C6D18,%edx;");
    asm("loc_4CE02E: push %ecx;");
    asm("loc_4CE02F: push $0x934;");
    asm("loc_4CE034: push $_data_5D7220;");
    asm("loc_4CE039: mov $0x100002,%eax;");
    asm("loc_4CE03E: push $_data_5D76C0;");
    asm("loc_4CE043: push %eax;");
    asm("loc_4CE044: calll *(%edx);");
    asm("loc_4CE046: add $0x14,%esp;");
    asm("loc_4CE049: pop %edi;");
    asm("loc_4CE04A: pop %esi;");
    asm("loc_4CE04B: pop %ebp;");
    asm("loc_4CE04C: pop %ebx;");
    asm("loc_4CE04D: add $0x34,%esp;");
    asm("loc_4CE050: ret $8;");
    asm("loc_4CE053: movl $0,0x8C(%ebp);");
    asm("loc_4CE05D: mov 0xA4(%esi),%eax;");
    asm("loc_4CE063: test %eax,%eax;");
    asm("loc_4CE065: je loc_4CE1FE;");
    asm("loc_4CE06B: add $0xFFFFFFF8,%eax;");
    asm("loc_4CE06E: test %eax,%eax;");
    asm("loc_4CE070: je loc_4CE1FE;");
    asm("loc_4CE076: mov (%ebp),%eax;");
    asm("loc_4CE079: test %eax,%eax;");
    asm("loc_4CE07B: je loc_4CE1FE;");
    asm("loc_4CE081: push $0;");
    asm("loc_4CE083: push %eax;");
    asm("loc_4CE084: call _sub_5416C0;");
    asm("loc_4CE089: add $8,%esp;");
    asm("loc_4CE08C: test %eax,%eax;");
    asm("loc_4CE08E: je loc_4CE441;");
    asm("loc_4CE094: add $0xC,%eax;");
    asm("loc_4CE097: test %eax,%eax;");
    asm("loc_4CE099: je loc_4CE441;");
    asm("loc_4CE09F: mov 4(%eax),%esi;");
    asm("loc_4CE0A2: test %esi,%esi;");
    asm("loc_4CE0A4: je loc_4CE441;");
    asm("loc_4CE0AA: mov 0x4C(%esi),%eax;");
    asm("loc_4CE0AD: and $0x103,%eax;");
    asm("loc_4CE0B2: cmp $0x103,%eax;");
    asm("loc_4CE0B7: jne loc_4CE441;");
    asm("loc_4CE0BD: mov %ebp,%ecx;");
    asm("loc_4CE0BF: call _sub_4CE460;");
    asm("loc_4CE0C4: test %al,%al;");
    asm("loc_4CE0C6: jne loc_4CE1FE;");
    asm("loc_4CE0CC: mov 0x18(%esp),%edi;");
    asm("loc_4CE0D0: lea 0x2C(%esi),%ecx;");
    asm("loc_4CE0D3: mov (%ecx),%edx;");
    asm("loc_4CE0D5: mov 4(%ecx),%eax;");
    asm("loc_4CE0D8: mov 8(%ecx),%ecx;");
    asm("loc_4CE0DB: mov %eax,0x30(%esp);");
    asm("loc_4CE0DF: mov 0xA4(%edi),%eax;");
    asm("loc_4CE0E5: test %eax,%eax;");
    asm("loc_4CE0E7: mov %edx,0x2C(%esp);");
    asm("loc_4CE0EB: mov %ecx,0x34(%esp);");
    asm("loc_4CE0EF: je loc_4CE0F6;");
    asm("loc_4CE0F1: lea -8(%eax),%ecx;");
    asm("loc_4CE0F4: jmp loc_4CE0F8;");
    asm("loc_4CE0F6: xor %ecx,%ecx;");
    asm("loc_4CE0F8: mov (%ecx),%edx;");
    asm("loc_4CE0FA: calll *(%edx);");
    asm("loc_4CE0FC: mov (%eax),%ecx;");
    asm("loc_4CE0FE: mov 4(%eax),%edx;");
    asm("loc_4CE101: mov 8(%eax),%eax;");
    asm("loc_4CE104: mov %ecx,0x20(%esp);");
    asm("loc_4CE108: lea 0x20(%esp),%ecx;");
    asm("loc_4CE10C: mov %edx,0x24(%esp);");
    asm("loc_4CE110: push %ecx;");
    asm("loc_4CE111: lea 0x30(%esp),%edx;");
    asm("loc_4CE115: mov %eax,0x2C(%esp);");
    asm("loc_4CE119: push %edx;");
    asm("loc_4CE11A: lea 0x40(%esp),%eax;");
    asm("loc_4CE11E: push %eax;");
    asm("loc_4CE11F: call _sub_423B60;");
    asm("loc_4CE124: add $0xC,%esp;");
    asm("loc_4CE127: lea 0x38(%esp),%ecx;");
    asm("loc_4CE12B: call _sub_410190;");
    asm("loc_4CE130: flds 0x38(%esi);");
    asm("loc_4CE133: fsubr %st(1),%st;");
    asm("loc_4CE135: mov %ebp,%ecx;");
    asm("loc_4CE137: fstps 0x4C(%esp);");
    asm("loc_4CE13B: fstp %st(0);");
    asm("loc_4CE13D: call _sub_4CE490;");
    asm("loc_4CE142: test %al,%al;");
    asm("loc_4CE144: je loc_4CE170;");
    asm("loc_4CE146: mov _import_5C64DC,%ecx;");
    asm("loc_4CE14C: mov _import_5C64D8,%edx;");
    asm("loc_4CE152: flds (%ecx);");
    asm("loc_4CE154: flds (%edx);");
    asm("loc_4CE156: fcomps 0x4C(%esp);");
    asm("loc_4CE15A: fnstsw %ax;");
    asm("loc_4CE15C: test $0x41,%ah;");
    asm("loc_4CE15F: jne loc_4CE1CD;");
    asm("loc_4CE161: movl $0,0x8C(%ebp);");
    asm("loc_4CE16B: jmp loc_4CE1FC;");
    asm("loc_4CE170: push %ebp;");
    asm("loc_4CE171: mov %edi,%ecx;");
    asm("loc_4CE173: call _sub_4CDF40;");
    asm("loc_4CE178: mov _import_5C64D4,%ecx;");
    asm("loc_4CE17E: cmp (%ecx),%eax;");
    asm("loc_4CE180: jle loc_4CE1A0;");
    asm("loc_4CE182: mov _import_5C64D0,%edx;");
    asm("loc_4CE188: mov (%edx),%eax;");
    asm("loc_4CE18A: mov _import_5C64CC,%ecx;");
    asm("loc_4CE190: mov _import_5C64C8,%edx;");
    asm("loc_4CE196: flds (%ecx);");
    asm("loc_4CE198: flds (%edx);");
    asm("loc_4CE19A: mov %eax,0x14(%esp);");
    asm("loc_4CE19E: jmp loc_4CE1BA;");
    asm("loc_4CE1A0: mov _import_5C64C4,%eax;");
    asm("loc_4CE1A5: mov (%eax),%ecx;");
    asm("loc_4CE1A7: mov _import_5C64C0,%edx;");
    asm("loc_4CE1AD: mov _import_5C64BC,%eax;");
    asm("loc_4CE1B2: flds (%edx);");
    asm("loc_4CE1B4: flds (%eax);");
    asm("loc_4CE1B6: mov %ecx,0x14(%esp);");
    asm("loc_4CE1BA: flds 0x4C(%esp);");
    asm("loc_4CE1BE: fcompl _data_5C8BA8;");
    asm("loc_4CE1C4: fnstsw %ax;");
    asm("loc_4CE1C6: test $0x41,%ah;");
    asm("loc_4CE1C9: jp loc_4CE1D5;");
    asm("loc_4CE1CB: fstp %st(0);");
    asm("loc_4CE1CD: fstps 0x8C(%ebp);");
    asm("loc_4CE1D3: jmp loc_4CE1FE;");
    asm("loc_4CE1D5: flds 0x4C(%esp);");
    asm("loc_4CE1D9: fcomps 0x14(%esp);");
    asm("loc_4CE1DD: fnstsw %ax;");
    asm("loc_4CE1DF: test $0x41,%ah;");
    asm("loc_4CE1E2: je loc_4CE43D;");
    asm("loc_4CE1E8: fsub %st(1),%st;");
    asm("loc_4CE1EA: flds 0x4C(%esp);");
    asm("loc_4CE1EE: fdivs 0x14(%esp);");
    asm("loc_4CE1F2: fmulp;");
    asm("loc_4CE1F4: fadd %st(1),%st;");
    asm("loc_4CE1F6: fstps 0x8C(%ebp);");
    asm("loc_4CE1FC: fstp %st(0);");
    asm("loc_4CE1FE: mov 0x3C(%ebp),%ecx;");
    asm("loc_4CE201: push %ecx;");
    asm("loc_4CE202: movl $0xFFFFFF9C,0x50(%esp);");
    asm("loc_4CE20A: call _sub_430AB0;");
    asm("loc_4CE20F: mov %eax,%ebx;");
    asm("loc_4CE211: add $4,%esp;");
    asm("loc_4CE214: test %ebx,%ebx;");
    asm("loc_4CE216: je loc_4CE254;");
    asm("loc_4CE218: mov 0x84(%ebp),%eax;");
    asm("loc_4CE21E: xor %edi,%edi;");
    asm("loc_4CE220: test %eax,%eax;");
    asm("loc_4CE222: jle loc_4CE254;");
    asm("loc_4CE224: lea 0x44(%ebp),%esi;");
    asm("loc_4CE227: mov (%esi),%eax;");
    asm("loc_4CE229: mov (%ebx),%edx;");
    asm("loc_4CE22B: push %eax;");
    asm("loc_4CE22C: mov %ebx,%ecx;");
    asm("loc_4CE22E: calll *0x14(%edx);");
    asm("loc_4CE231: test %eax,%eax;");
    asm("loc_4CE233: je loc_4CE246;");
    asm("loc_4CE235: mov (%eax),%edx;");
    asm("loc_4CE237: mov %eax,%ecx;");
    asm("loc_4CE239: calll *0x38(%edx);");
    asm("loc_4CE23C: cmp 0x4C(%esp),%eax;");
    asm("loc_4CE240: jle loc_4CE246;");
    asm("loc_4CE242: mov %eax,0x4C(%esp);");
    asm("loc_4CE246: mov 0x84(%ebp),%eax;");
    asm("loc_4CE24C: inc %edi;");
    asm("loc_4CE24D: add $4,%esi;");
    asm("loc_4CE250: cmp %eax,%edi;");
    asm("loc_4CE252: jl loc_4CE227;");
    asm("loc_4CE254: mov 0x48(%esp),%edi;");
    asm("loc_4CE258: mov 0x4C(%esp),%eax;");
    asm("loc_4CE25C: mov %ebp,%ecx;");
    asm("loc_4CE25E: mov %eax,8(%edi);");
    asm("loc_4CE261: movb $1,0xC(%edi);");
    asm("loc_4CE265: call _sub_4CE490;");
    asm("loc_4CE26A: test %al,%al;");
    asm("loc_4CE26C: jne loc_4CE2BC;");
    asm("loc_4CE26E: mov %ebp,%ecx;");
    asm("loc_4CE270: call _sub_4CE460;");
    asm("loc_4CE275: test %al,%al;");
    asm("loc_4CE277: jne loc_4CE2BC;");
    asm("loc_4CE279: mov 4(%edi),%esi;");
    asm("loc_4CE27C: mov %esi,%ecx;");
    asm("loc_4CE27E: call _sub_4CABD0;");
    asm("loc_4CE283: lea 0x1CC(%esi),%ecx;");
    asm("loc_4CE289: push %ecx;");
    asm("loc_4CE28A: lea 0x1C8(%esi),%edx;");
    asm("loc_4CE290: push %edx;");
    asm("loc_4CE291: lea 0x1C4(%esi),%eax;");
    asm("loc_4CE297: push %eax;");
    asm("loc_4CE298: push $1;");
    asm("loc_4CE29A: push $0;");
    asm("loc_4CE29C: push $0;");
    asm("loc_4CE29E: push %ebp;");
    asm("loc_4CE29F: mov %esi,%ecx;");
    asm("loc_4CE2A1: call _sub_4CAE10;");
    asm("loc_4CE2A6: mov 0x90(%ebp),%ecx;");
    asm("loc_4CE2AC: mov %ecx,0x1B8(%esi);");
    asm("loc_4CE2B2: pop %edi;");
    asm("loc_4CE2B3: pop %esi;");
    asm("loc_4CE2B4: pop %ebp;");
    asm("loc_4CE2B5: pop %ebx;");
    asm("loc_4CE2B6: add $0x34,%esp;");
    asm("loc_4CE2B9: ret $8;");
    asm("loc_4CE2BC: mov %ebp,%ecx;");
    asm("loc_4CE2BE: call _sub_4CE490;");
    asm("loc_4CE2C3: mov %al,0x13(%esp);");
    asm("loc_4CE2C7: movb $0,0x4C(%esp);");
    asm("loc_4CE2CC: call _sub_54BAF0;");
    asm("loc_4CE2D1: test %eax,%eax;");
    asm("loc_4CE2D3: je loc_4CE2E4;");
    asm("loc_4CE2D5: mov (%eax),%edx;");
    asm("loc_4CE2D7: mov %eax,%ecx;");
    asm("loc_4CE2D9: calll *0x20(%edx);");
    asm("loc_4CE2DC: cmp (%ebp),%eax;");
    asm("loc_4CE2DF: sete 0x4C(%esp);");
    asm("loc_4CE2E4: mov 8(%ebp),%eax;");
    asm("loc_4CE2E7: test %eax,%eax;");
    asm("loc_4CE2E9: lea 8(%ebp),%esi;");
    asm("loc_4CE2EC: movb $1,0x48(%esp);");
    asm("loc_4CE2F1: jne loc_4CE30F;");
    asm("loc_4CE2F3: mov 4(%esi),%eax;");
    asm("loc_4CE2F6: test %eax,%eax;");
    asm("loc_4CE2F8: jne loc_4CE30F;");
    asm("loc_4CE2FA: mov 8(%esi),%eax;");
    asm("loc_4CE2FD: test %eax,%eax;");
    asm("loc_4CE2FF: jne loc_4CE30F;");
    asm("loc_4CE301: mov 0xC(%esi),%eax;");
    asm("loc_4CE304: test %eax,%eax;");
    asm("loc_4CE306: jne loc_4CE30F;");
    asm("loc_4CE308: mov 0x30(%esi),%eax;");
    asm("loc_4CE30B: test %eax,%eax;");
    asm("loc_4CE30D: je loc_4CE314;");
    asm("loc_4CE30F: movb $0,0x48(%esp);");
    asm("loc_4CE314: call _sub_41A3E0;");
    asm("loc_4CE319: cmpb $1,0x13(%esp);");
    asm("loc_4CE31E: jne loc_4CE424;");
    asm("loc_4CE324: mov 0x4C(%esp),%cl;");
    asm("loc_4CE328: test %cl,%cl;");
    asm("loc_4CE32A: jne loc_4CE424;");
    asm("loc_4CE330: mov 0x48(%esp),%cl;");
    asm("loc_4CE334: test %cl,%cl;");
    asm("loc_4CE336: jne loc_4CE424;");
    asm("loc_4CE33C: test %al,%al;");
    asm("loc_4CE33E: jne loc_4CE426;");
    asm("loc_4CE344: mov 4(%edi),%ebx;");
    asm("loc_4CE347: mov %ebx,%ecx;");
    asm("loc_4CE349: call _sub_4CABD0;");
    asm("loc_4CE34E: push $0x2C;");
    asm("loc_4CE350: call _sub_5645C0;");
    asm("loc_4CE355: mov (%ebp),%eax;");
    asm("loc_4CE358: xor %edi,%edi;");
    asm("loc_4CE35A: push %edi;");
    asm("loc_4CE35B: push %eax;");
    asm("loc_4CE35C: call _sub_5416C0;");
    asm("loc_4CE361: add $0xC,%esp;");
    asm("loc_4CE364: cmp %edi,%eax;");
    asm("loc_4CE366: je loc_4CE38B;");
    asm("loc_4CE368: add $0xC,%eax;");
    asm("loc_4CE36B: cmp %edi,%eax;");
    asm("loc_4CE36D: je loc_4CE38B;");
    asm("loc_4CE36F: mov 4(%eax),%eax;");
    asm("loc_4CE372: cmp %edi,%eax;");
    asm("loc_4CE374: je loc_4CE38B;");
    asm("loc_4CE376: mov 0x4C(%eax),%ecx;");
    asm("loc_4CE379: and $0x103,%ecx;");
    asm("loc_4CE37F: cmp $0x103,%ecx;");
    asm("loc_4CE385: mov %eax,0x4C(%esp);");
    asm("loc_4CE389: je loc_4CE38F;");
    asm("loc_4CE38B: mov %edi,0x4C(%esp);");
    asm("loc_4CE38F: mov 4(%ebp),%edx;");
    asm("loc_4CE392: push %edi;");
    asm("loc_4CE393: push %edx;");
    asm("loc_4CE394: call _sub_5416C0;");
    asm("loc_4CE399: add $8,%esp;");
    asm("loc_4CE39C: cmp %edi,%eax;");
    asm("loc_4CE39E: je loc_4CE3BF;");
    asm("loc_4CE3A0: add $0xC,%eax;");
    asm("loc_4CE3A3: cmp %edi,%eax;");
    asm("loc_4CE3A5: je loc_4CE3BF;");
    asm("loc_4CE3A7: mov 4(%eax),%eax;");
    asm("loc_4CE3AA: cmp %edi,%eax;");
    asm("loc_4CE3AC: je loc_4CE3BF;");
    asm("loc_4CE3AE: mov 0x4C(%eax),%ecx;");
    asm("loc_4CE3B1: and $0x103,%ecx;");
    asm("loc_4CE3B7: cmp $0x103,%ecx;");
    asm("loc_4CE3BD: je loc_4CE3C1;");
    asm("loc_4CE3BF: xor %eax,%eax;");
    asm("loc_4CE3C1: mov 0x18(%esp),%edx;");
    asm("loc_4CE3C5: mov 0x1C(%esp),%ecx;");
    asm("loc_4CE3C9: push %edx;");
    asm("loc_4CE3CA: mov 0x40(%ebp),%edx;");
    asm("loc_4CE3CD: push %ecx;");
    asm("loc_4CE3CE: push %edx;");
    asm("loc_4CE3CF: sub $0x34,%esp;");
    asm("loc_4CE3D2: mov %esp,%edi;");
    asm("loc_4CE3D4: push %eax;");
    asm("loc_4CE3D5: mov 0x90(%esp),%eax;");
    asm("loc_4CE3DC: mov $0xD,%ecx;");
    asm("loc_4CE3E1: rep movsl (%esi),(%edi);");
    asm("loc_4CE3E3: push %eax;");
    asm("loc_4CE3E4: mov %ebx,%ecx;");
    asm("loc_4CE3E6: call _sub_4CB250;");
    asm("loc_4CE3EB: lea 0x1CC(%ebx),%ecx;");
    asm("loc_4CE3F1: push %ecx;");
    asm("loc_4CE3F2: lea 0x1C8(%ebx),%edx;");
    asm("loc_4CE3F8: push %edx;");
    asm("loc_4CE3F9: lea 0x1C4(%ebx),%eax;");
    asm("loc_4CE3FF: push %eax;");
    asm("loc_4CE400: push $0;");
    asm("loc_4CE402: push $1;");
    asm("loc_4CE404: push $0;");
    asm("loc_4CE406: push %ebp;");
    asm("loc_4CE407: mov %ebx,%ecx;");
    asm("loc_4CE409: call _sub_4CAE10;");
    asm("loc_4CE40E: mov 0x90(%ebp),%ecx;");
    asm("loc_4CE414: mov %ecx,0x1B8(%ebx);");
    asm("loc_4CE41A: pop %edi;");
    asm("loc_4CE41B: pop %esi;");
    asm("loc_4CE41C: pop %ebp;");
    asm("loc_4CE41D: pop %ebx;");
    asm("loc_4CE41E: add $0x34,%esp;");
    asm("loc_4CE421: ret $8;");
    asm("loc_4CE424: test %al,%al;");
    asm("loc_4CE426: mov 4(%edi),%ecx;");
    asm("loc_4CE429: sete %dl;");
    asm("loc_4CE42C: push %edx;");
    asm("loc_4CE42D: push %ebp;");
    asm("loc_4CE42E: call _sub_4CAD10;");
    asm("loc_4CE433: pop %edi;");
    asm("loc_4CE434: pop %esi;");
    asm("loc_4CE435: pop %ebp;");
    asm("loc_4CE436: pop %ebx;");
    asm("loc_4CE437: add $0x34,%esp;");
    asm("loc_4CE43A: ret $8;");
    asm("loc_4CE43D: fstp %st(0);");
    asm("loc_4CE43F: fstp %st(0);");
    asm("loc_4CE441: mov 0x18(%esp),%ecx;");
    asm("loc_4CE445: push %ebp;");
    asm("loc_4CE446: call _sub_4CDFC0;");
    asm("loc_4CE44B: pop %edi;");
    asm("loc_4CE44C: pop %esi;");
    asm("loc_4CE44D: pop %ebp;");
    asm("loc_4CE44E: pop %ebx;");
    asm("loc_4CE44F: add $0x34,%esp;");
    asm("loc_4CE452: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CE460() // _sub_4CE460
{
    __DEBUG_ASM(4CE460);
    // chunk 0x4CE460 _sub_4CE460
    asm("loc_4CE460: push %ebx;");
    asm("loc_4CE461: push %esi;");
    asm("loc_4CE462: mov %ecx,%esi;");
    asm("loc_4CE464: xor %bl,%bl;");
    asm("loc_4CE466: call _sub_54BAF0;");
    asm("loc_4CE46B: test %eax,%eax;");
    asm("loc_4CE46D: je loc_4CE47E;");
    asm("loc_4CE46F: mov (%eax),%edx;");
    asm("loc_4CE471: mov %eax,%ecx;");
    asm("loc_4CE473: calll *0x20(%edx);");
    asm("loc_4CE476: cmp (%esi),%eax;");
    asm("loc_4CE478: pop %esi;");
    asm("loc_4CE479: sete %al;");
    asm("loc_4CE47C: pop %ebx;");
    asm("loc_4CE47D: ret;");
    asm("loc_4CE47E: pop %esi;");
    asm("loc_4CE47F: mov %bl,%al;");
    asm("loc_4CE481: pop %ebx;");
    asm("loc_4CE482: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CE490() // _sub_4CE490
{
    __DEBUG_ASM(4CE490);
    // chunk 0x4CE490 _sub_4CE490
    asm("loc_4CE490: push %ebx;");
    asm("loc_4CE491: push %esi;");
    asm("loc_4CE492: mov %ecx,%esi;");
    asm("loc_4CE494: xor %bl,%bl;");
    asm("loc_4CE496: call _sub_54BAF0;");
    asm("loc_4CE49B: test %eax,%eax;");
    asm("loc_4CE49D: je loc_4CE4AF;");
    asm("loc_4CE49F: mov (%eax),%edx;");
    asm("loc_4CE4A1: mov %eax,%ecx;");
    asm("loc_4CE4A3: calll *0x20(%edx);");
    asm("loc_4CE4A6: cmp 4(%esi),%eax;");
    asm("loc_4CE4A9: pop %esi;");
    asm("loc_4CE4AA: sete %al;");
    asm("loc_4CE4AD: pop %ebx;");
    asm("loc_4CE4AE: ret;");
    asm("loc_4CE4AF: pop %esi;");
    asm("loc_4CE4B0: mov %bl,%al;");
    asm("loc_4CE4B2: pop %ebx;");
    asm("loc_4CE4B3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CE4C0() // _sub_4CE4C0
{
    __DEBUG_ASM(4CE4C0);
    // chunk 0x4CE4C0 _sub_4CE4C0
    asm("loc_4CE4C0: sub $0x13C,%esp;");
    asm("loc_4CE4C6: mov 0x144(%esp),%eax;");
    asm("loc_4CE4CD: push %ebx;");
    asm("loc_4CE4CE: push %ebp;");
    asm("loc_4CE4CF: mov 0x148(%esp),%ebp;");
    asm("loc_4CE4D6: push %esi;");
    asm("loc_4CE4D7: push %edi;");
    asm("loc_4CE4D8: mov %ecx,0x18(%esp);");
    asm("loc_4CE4DC: mov 4(%ebp),%ecx;");
    asm("loc_4CE4DF: push %eax;");
    asm("loc_4CE4E0: call _sub_4CBC40;");
    asm("loc_4CE4E5: xor %ebx,%ebx;");
    asm("loc_4CE4E7: cmp %bl,%al;");
    asm("loc_4CE4E9: mov %al,0x13(%esp);");
    asm("loc_4CE4ED: je loc_4CE4F5;");
    asm("loc_4CE4EF: mov %ebx,8(%ebp);");
    asm("loc_4CE4F2: mov %bl,0xC(%ebp);");
    asm("loc_4CE4F5: mov (%ebp),%eax;");
    asm("loc_4CE4F8: mov %ebx,0xBC(%esp);");
    asm("loc_4CE4FF: mov %ebx,0xC0(%esp);");
    asm("loc_4CE506: mov %ebx,0xC4(%esp);");
    asm("loc_4CE50D: mov %ebx,0xC8(%esp);");
    asm("loc_4CE514: mov %ebx,0xEC(%esp);");
    asm("loc_4CE51B: movl $1,0x138(%esp);");
    asm("loc_4CE526: mov %ebx,0x13C(%esp);");
    asm("loc_4CE52D: movl $0,0x144(%esp);");
    asm("loc_4CE538: cmp %ebx,(%eax);");
    asm("loc_4CE53A: jbe loc_4CE7FA;");
    asm("loc_4CE540: add $4,%eax;");
    asm("loc_4CE543: push %eax;");
    asm("loc_4CE544: lea 0xB8(%esp),%ecx;");
    asm("loc_4CE54B: call _sub_4CE810;");
    asm("loc_4CE550: mov 0xF0(%esp),%ecx;");
    asm("loc_4CE557: push %ecx;");
    asm("loc_4CE558: movl $0xFFFFFF9C,0x18(%esp);");
    asm("loc_4CE560: call _sub_430AB0;");
    asm("loc_4CE565: mov %eax,%esi;");
    asm("loc_4CE567: add $4,%esp;");
    asm("loc_4CE56A: cmp %ebx,%esi;");
    asm("loc_4CE56C: je loc_4CE5B0;");
    asm("loc_4CE56E: mov 0x138(%esp),%eax;");
    asm("loc_4CE575: xor %edi,%edi;");
    asm("loc_4CE577: cmp %ebx,%eax;");
    asm("loc_4CE579: jle loc_4CE5B0;");
    asm("loc_4CE57B: nop;");
    asm("loc_4CE57C: lea (%esp),%esp;");
    asm("loc_4CE580: mov 0xF8(%esp,%edi,4),%eax;");
    asm("loc_4CE587: mov (%esi),%edx;");
    asm("loc_4CE589: push %eax;");
    asm("loc_4CE58A: mov %esi,%ecx;");
    asm("loc_4CE58C: calll *0x14(%edx);");
    asm("loc_4CE58F: cmp %ebx,%eax;");
    asm("loc_4CE591: je loc_4CE5A4;");
    asm("loc_4CE593: mov (%eax),%edx;");
    asm("loc_4CE595: mov %eax,%ecx;");
    asm("loc_4CE597: calll *0x38(%edx);");
    asm("loc_4CE59A: cmp 0x14(%esp),%eax;");
    asm("loc_4CE59E: jle loc_4CE5A4;");
    asm("loc_4CE5A0: mov %eax,0x14(%esp);");
    asm("loc_4CE5A4: mov 0x138(%esp),%eax;");
    asm("loc_4CE5AB: inc %edi;");
    asm("loc_4CE5AC: cmp %eax,%edi;");
    asm("loc_4CE5AE: jl loc_4CE580;");
    asm("loc_4CE5B0: mov 0x14(%esp),%eax;");
    asm("loc_4CE5B4: cmp %ebx,%eax;");
    asm("loc_4CE5B6: mov %bl,0x12(%esp);");
    asm("loc_4CE5BA: jge loc_4CE68F;");
    asm("loc_4CE5C0: cmp %bl,0xC(%ebp);");
    asm("loc_4CE5C3: je loc_4CE68F;");
    asm("loc_4CE5C9: cmp 8(%ebp),%eax;");
    asm("loc_4CE5CC: jge loc_4CE68F;");
    asm("loc_4CE5D2: mov (%ebp),%edi;");
    asm("loc_4CE5D5: mov %ebx,0x24(%esp);");
    asm("loc_4CE5D9: mov %ebx,0x28(%esp);");
    asm("loc_4CE5DD: mov %ebx,0x2C(%esp);");
    asm("loc_4CE5E1: mov %ebx,0x30(%esp);");
    asm("loc_4CE5E5: mov %ebx,0x54(%esp);");
    asm("loc_4CE5E9: movl $1,0xA0(%esp);");
    asm("loc_4CE5F4: mov %ebx,0xA4(%esp);");
    asm("loc_4CE5FB: movl $0,0xAC(%esp);");
    asm("loc_4CE606: cmp %ebx,(%edi);");
    asm("loc_4CE608: jbe loc_4CE649;");
    asm("loc_4CE60A: lea 4(%edi),%esi;");
    asm("loc_4CE60D: push %esi;");
    asm("loc_4CE60E: lea 0x20(%esp),%ecx;");
    asm("loc_4CE612: call _sub_4CE810;");
    asm("loc_4CE617: mov (%edi),%eax;");
    asm("loc_4CE619: mov $1,%ebp;");
    asm("loc_4CE61E: cmp %ebp,%eax;");
    asm("loc_4CE620: jbe loc_4CE63D;");
    asm("loc_4CE622: lea 0x98(%esi),%eax;");
    asm("loc_4CE628: push %eax;");
    asm("loc_4CE629: mov %esi,%ecx;");
    asm("loc_4CE62B: call _sub_4CE810;");
    asm("loc_4CE630: mov (%edi),%eax;");
    asm("loc_4CE632: inc %ebp;");
    asm("loc_4CE633: add $0x98,%esi;");
    asm("loc_4CE639: cmp %eax,%ebp;");
    asm("loc_4CE63B: jb loc_4CE622;");
    asm("loc_4CE63D: mov (%edi),%eax;");
    asm("loc_4CE63F: mov 0x150(%esp),%ebp;");
    asm("loc_4CE646: dec %eax;");
    asm("loc_4CE647: mov %eax,(%edi);");
    asm("loc_4CE649: movb $1,0x12(%esp);");
    asm("loc_4CE64E: movl $2,0xB0(%esp);");
    asm("loc_4CE659: calll *_import_5C60D0;");
    asm("loc_4CE65F: test %al,%al;");
    asm("loc_4CE661: je loc_4CE68F;");
    asm("loc_4CE663: mov 0xB0(%esp),%eax;");
    asm("loc_4CE66A: mov _data_67ECD0,%ecx;");
    asm("loc_4CE670: mov (%ecx),%edx;");
    asm("loc_4CE672: push %eax;");
    asm("loc_4CE673: mov 0xA4(%esp),%eax;");
    asm("loc_4CE67A: mov 0x60(%esp,%eax,4),%eax;");
    asm("loc_4CE67E: push %eax;");
    asm("loc_4CE67F: mov 0x28(%esp),%eax;");
    asm("loc_4CE683: push %eax;");
    asm("loc_4CE684: mov 0x28(%esp),%eax;");
    asm("loc_4CE688: push %eax;");
    asm("loc_4CE689: calll *0xFC(%edx);");
    asm("loc_4CE68F: cmp %bl,0xC(%ebp);");
    asm("loc_4CE692: je loc_4CE710;");
    asm("loc_4CE694: mov 8(%ebp),%eax;");
    asm("loc_4CE697: cmp %ebx,%eax;");
    asm("loc_4CE699: jge loc_4CE710;");
    asm("loc_4CE69B: cmp %eax,0x14(%esp);");
    asm("loc_4CE69F: jle loc_4CE710;");
    asm("loc_4CE6A1: mov 4(%ebp),%esi;");
    asm("loc_4CE6A4: cmp %bl,0x38(%esi);");
    asm("loc_4CE6A7: je loc_4CE6DA;");
    asm("loc_4CE6A9: cmp %bl,0x85(%esi);");
    asm("loc_4CE6AF: jne loc_4CE6DA;");
    asm("loc_4CE6B1: mov %bl,0x84(%esi);");
    asm("loc_4CE6B7: movb $1,0x85(%esi);");
    asm("loc_4CE6BE: cmp %ebx,0x170(%esi);");
    asm("loc_4CE6C4: je loc_4CE6CC;");
    asm("loc_4CE6C6: mov %ebx,0x170(%esi);");
    asm("loc_4CE6CC: mov 0x1BC(%esi),%eax;");
    asm("loc_4CE6D2: cmp %ebx,%eax;");
    asm("loc_4CE6D4: je loc_4CE6DA;");
    asm("loc_4CE6D6: andb $0xFC,0x6C(%eax);");
    asm("loc_4CE6DA: calll *_import_5C60D0;");
    asm("loc_4CE6E0: test %al,%al;");
    asm("loc_4CE6E2: je loc_4CE709;");
    asm("loc_4CE6E4: mov 0x1CC(%esi),%eax;");
    asm("loc_4CE6EA: mov _data_67ECD0,%ecx;");
    asm("loc_4CE6F0: mov (%ecx),%edx;");
    asm("loc_4CE6F2: push $2;");
    asm("loc_4CE6F4: push %eax;");
    asm("loc_4CE6F5: mov 0x1C8(%esi),%eax;");
    asm("loc_4CE6FB: push %eax;");
    asm("loc_4CE6FC: mov 0x1C4(%esi),%eax;");
    asm("loc_4CE702: push %eax;");
    asm("loc_4CE703: calll *0xFC(%edx);");
    asm("loc_4CE709: mov %esi,%ecx;");
    asm("loc_4CE70B: call _sub_4CBB40;");
    asm("loc_4CE710: cmp %bl,0x12(%esp);");
    asm("loc_4CE714: jne loc_4CE7FA;");
    asm("loc_4CE71A: cmp %bl,0x13(%esp);");
    asm("loc_4CE71E: je loc_4CE78B;");
    asm("loc_4CE720: mov (%ebp),%edi;");
    asm("loc_4CE723: cmp %ebx,(%edi);");
    asm("loc_4CE725: jbe loc_4CE769;");
    asm("loc_4CE727: lea 4(%edi),%esi;");
    asm("loc_4CE72A: push %esi;");
    asm("loc_4CE72B: lea 0xB8(%esp),%ecx;");
    asm("loc_4CE732: call _sub_4CE810;");
    asm("loc_4CE737: mov (%edi),%eax;");
    asm("loc_4CE739: mov $1,%ebp;");
    asm("loc_4CE73E: cmp %ebp,%eax;");
    asm("loc_4CE740: jbe loc_4CE75D;");
    asm("loc_4CE742: lea 0x98(%esi),%ecx;");
    asm("loc_4CE748: push %ecx;");
    asm("loc_4CE749: mov %esi,%ecx;");
    asm("loc_4CE74B: call _sub_4CE810;");
    asm("loc_4CE750: mov (%edi),%eax;");
    asm("loc_4CE752: inc %ebp;");
    asm("loc_4CE753: add $0x98,%esi;");
    asm("loc_4CE759: cmp %eax,%ebp;");
    asm("loc_4CE75B: jb loc_4CE742;");
    asm("loc_4CE75D: mov (%edi),%eax;");
    asm("loc_4CE75F: mov 0x150(%esp),%ebp;");
    asm("loc_4CE766: dec %eax;");
    asm("loc_4CE767: mov %eax,(%edi);");
    asm("loc_4CE769: mov 0x18(%esp),%ecx;");
    asm("loc_4CE76D: lea 0xB4(%esp),%edx;");
    asm("loc_4CE774: push %edx;");
    asm("loc_4CE775: push %ebp;");
    asm("loc_4CE776: call _sub_4CE000;");
    asm("loc_4CE77B: pop %edi;");
    asm("loc_4CE77C: pop %esi;");
    asm("loc_4CE77D: mov %bl,0xD(%ebp);");
    asm("loc_4CE780: pop %ebp;");
    asm("loc_4CE781: pop %ebx;");
    asm("loc_4CE782: add $0x13C,%esp;");
    asm("loc_4CE788: ret $8;");
    asm("loc_4CE78B: mov _import_5C64B8,%eax;");
    asm("loc_4CE790: mov 0x14(%esp),%ecx;");
    asm("loc_4CE794: cmp (%eax),%ecx;");
    asm("loc_4CE796: jle loc_4CE7AE;");
    asm("loc_4CE798: cmp %bl,0xD(%ebp);");
    asm("loc_4CE79B: jne loc_4CE7FA;");
    asm("loc_4CE79D: pop %edi;");
    asm("loc_4CE79E: pop %esi;");
    asm("loc_4CE79F: movb $1,0xD(%ebp);");
    asm("loc_4CE7A3: pop %ebp;");
    asm("loc_4CE7A4: pop %ebx;");
    asm("loc_4CE7A5: add $0x13C,%esp;");
    asm("loc_4CE7AB: ret $8;");
    asm("loc_4CE7AE: lea 0x24(%esp),%ecx;");
    asm("loc_4CE7B2: call _sub_4CDC10;");
    asm("loc_4CE7B7: mov (%ebp),%ecx;");
    asm("loc_4CE7BA: lea 0x1C(%esp),%edx;");
    asm("loc_4CE7BE: push %edx;");
    asm("loc_4CE7BF: movl $1,0xA4(%esp);");
    asm("loc_4CE7CA: mov %ebx,0xA8(%esp);");
    asm("loc_4CE7D1: movl $0,0xB0(%esp);");
    asm("loc_4CE7DC: call _sub_4CDC60;");
    asm("loc_4CE7E1: mov 0x18(%esp),%ecx;");
    asm("loc_4CE7E5: lea 0x1C(%esp),%eax;");
    asm("loc_4CE7E9: push %eax;");
    asm("loc_4CE7EA: movl $2,0xB4(%esp);");
    asm("loc_4CE7F5: call _sub_4CDFC0;");
    asm("loc_4CE7FA: pop %edi;");
    asm("loc_4CE7FB: pop %esi;");
    asm("loc_4CE7FC: pop %ebp;");
    asm("loc_4CE7FD: pop %ebx;");
    asm("loc_4CE7FE: add $0x13C,%esp;");
    asm("loc_4CE804: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CE810() // _sub_4CE810
{
    __DEBUG_ASM(4CE810);
    // chunk 0x4CE810 _sub_4CE810
    asm("loc_4CE810: push %ebx;");
    asm("loc_4CE811: mov %ecx,%eax;");
    asm("loc_4CE813: push %esi;");
    asm("loc_4CE814: mov 0xC(%esp),%esi;");
    asm("loc_4CE818: mov (%esi),%ecx;");
    asm("loc_4CE81A: mov %ecx,(%eax);");
    asm("loc_4CE81C: mov 4(%esi),%edx;");
    asm("loc_4CE81F: mov %edx,4(%eax);");
    asm("loc_4CE822: lea 8(%esi),%ecx;");
    asm("loc_4CE825: push %edi;");
    asm("loc_4CE826: mov (%ecx),%edi;");
    asm("loc_4CE828: lea 8(%eax),%edx;");
    asm("loc_4CE82B: mov %edi,(%edx);");
    asm("loc_4CE82D: mov 4(%ecx),%edi;");
    asm("loc_4CE830: mov %edi,4(%edx);");
    asm("loc_4CE833: mov 8(%ecx),%edi;");
    asm("loc_4CE836: mov %edi,8(%edx);");
    asm("loc_4CE839: mov 0xC(%ecx),%edi;");
    asm("loc_4CE83C: mov %edi,0xC(%edx);");
    asm("loc_4CE83F: mov 0x30(%ecx),%edi;");
    asm("loc_4CE842: xor %ebx,%ebx;");
    asm("loc_4CE844: test %edi,%edi;");
    asm("loc_4CE846: mov %edi,0x30(%edx);");
    asm("loc_4CE849: jle loc_4CE862;");
    asm("loc_4CE84B: lea 0x10(%edx),%edi;");
    asm("loc_4CE84E: sub %edx,%ecx;");
    asm("loc_4CE850: push %ebp;");
    asm("loc_4CE851: mov (%ecx,%edi),%ebp;");
    asm("loc_4CE854: mov %ebp,(%edi);");
    asm("loc_4CE856: mov 0x30(%edx),%ebp;");
    asm("loc_4CE859: inc %ebx;");
    asm("loc_4CE85A: add $4,%edi;");
    asm("loc_4CE85D: cmp %ebp,%ebx;");
    asm("loc_4CE85F: jl loc_4CE851;");
    asm("loc_4CE861: pop %ebp;");
    asm("loc_4CE862: mov 0x3C(%esi),%ecx;");
    asm("loc_4CE865: mov %ecx,0x3C(%eax);");
    asm("loc_4CE868: mov 0x40(%esi),%edx;");
    asm("loc_4CE86B: mov %edx,0x40(%eax);");
    asm("loc_4CE86E: mov %esi,%edx;");
    asm("loc_4CE870: lea 0x44(%eax),%ecx;");
    asm("loc_4CE873: sub %eax,%edx;");
    asm("loc_4CE875: mov $0x10,%edi;");
    asm("loc_4CE87A: lea (%ebx),%ebx;");
    asm("loc_4CE880: mov (%edx,%ecx),%ebx;");
    asm("loc_4CE883: mov %ebx,(%ecx);");
    asm("loc_4CE885: add $4,%ecx;");
    asm("loc_4CE888: dec %edi;");
    asm("loc_4CE889: jne loc_4CE880;");
    asm("loc_4CE88B: mov 0x84(%esi),%ecx;");
    asm("loc_4CE891: mov %ecx,0x84(%eax);");
    asm("loc_4CE897: mov 0x88(%esi),%edx;");
    asm("loc_4CE89D: mov %edx,0x88(%eax);");
    asm("loc_4CE8A3: mov 0x8C(%esi),%ecx;");
    asm("loc_4CE8A9: mov %ecx,0x8C(%eax);");
    asm("loc_4CE8AF: mov 0x90(%esi),%edx;");
    asm("loc_4CE8B5: pop %edi;");
    asm("loc_4CE8B6: mov %edx,0x90(%eax);");
    asm("loc_4CE8BC: mov 0x94(%esi),%ecx;");
    asm("loc_4CE8C2: pop %esi;");
    asm("loc_4CE8C3: mov %ecx,0x94(%eax);");
    asm("loc_4CE8C9: pop %ebx;");
    asm("loc_4CE8CA: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CE8D0() // _sub_4CE8D0
{
    __DEBUG_ASM(4CE8D0);
    // chunk 0x4CE8D0 _sub_4CE8D0
    asm("loc_4CE8D0: push %esi;");
    asm("loc_4CE8D1: mov %ecx,%esi;");
    asm("loc_4CE8D3: call _sub_4CE8F0;");
    asm("loc_4CE8D8: testb $1,8(%esp);");
    asm("loc_4CE8DD: je loc_4CE8E8;");
    asm("loc_4CE8DF: push %esi;");
    asm("loc_4CE8E0: call _sub_5B7E1D;");
    asm("loc_4CE8E5: add $4,%esp;");
    asm("loc_4CE8E8: mov %esi,%eax;");
    asm("loc_4CE8EA: pop %esi;");
    asm("loc_4CE8EB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CE8F0() // _sub_4CE8F0
{
    __DEBUG_ASM(4CE8F0);
    // chunk 0x4CE8F0 _sub_4CE8F0
    asm("loc_4CE8F0: push $0xFFFFFFFF;");
    asm("loc_4CE8F2: push $_sub_5BDBDB;");
    asm("loc_4CE8F7: mov %fs:0,%eax;");
    asm("loc_4CE8FD: push %eax;");
    asm("loc_4CE8FE: mov %esp,%fs:0;");
    asm("loc_4CE905: sub $0xC,%esp;");
    asm("loc_4CE908: push %ebx;");
    asm("loc_4CE909: push %ebp;");
    asm("loc_4CE90A: push %esi;");
    asm("loc_4CE90B: mov %ecx,%esi;");
    asm("loc_4CE90D: push %edi;");
    asm("loc_4CE90E: mov %esi,0x10(%esp);");
    asm("loc_4CE912: movl $_off_5D764C,(%esi);");
    asm("loc_4CE918: movl $_off_5D761C,0x7C(%esi);");
    asm("loc_4CE91F: mov 0x5B4(%esi),%ebp;");
    asm("loc_4CE925: xor %ebx,%ebx;");
    asm("loc_4CE927: cmp %ebx,%ebp;");
    asm("loc_4CE929: movl $5,0x24(%esp);");
    asm("loc_4CE931: je loc_4CE963;");
    asm("loc_4CE933: mov 0xC(%ebp),%eax;");
    asm("loc_4CE936: cmp %ebx,%eax;");
    asm("loc_4CE938: je loc_4CE952;");
    asm("loc_4CE93A: lea (%ebx),%ebx;");
    asm("loc_4CE940: mov 8(%eax),%edi;");
    asm("loc_4CE943: push %eax;");
    asm("loc_4CE944: call _sub_43D2A0;");
    asm("loc_4CE949: add $4,%esp;");
    asm("loc_4CE94C: cmp %ebx,%edi;");
    asm("loc_4CE94E: mov %edi,%eax;");
    asm("loc_4CE950: jne loc_4CE940;");
    asm("loc_4CE952: mov (%ebp),%eax;");
    asm("loc_4CE955: mov %ebp,%ecx;");
    asm("loc_4CE957: calll *0x28(%eax);");
    asm("loc_4CE95A: mov (%ebp),%edx;");
    asm("loc_4CE95D: push $1;");
    asm("loc_4CE95F: mov %ebp,%ecx;");
    asm("loc_4CE961: calll *(%edx);");
    asm("loc_4CE963: mov 0x474(%esi),%ecx;");
    asm("loc_4CE969: cmp %ebx,%ecx;");
    asm("loc_4CE96B: je loc_4CE981;");
    asm("loc_4CE96D: mov _import_5C6D4C,%eax;");
    asm("loc_4CE972: mov (%eax),%eax;");
    asm("loc_4CE974: mov (%eax),%edx;");
    asm("loc_4CE976: push %ecx;");
    asm("loc_4CE977: push %eax;");
    asm("loc_4CE978: calll *0x38(%edx);");
    asm("loc_4CE97B: mov %ebx,0x474(%esi);");
    asm("loc_4CE981: mov 0x5B0(%esi),%ecx;");
    asm("loc_4CE987: cmp %ebx,%ecx;");
    asm("loc_4CE989: je loc_4CE991;");
    asm("loc_4CE98B: mov (%ecx),%eax;");
    asm("loc_4CE98D: push $1;");
    asm("loc_4CE98F: calll *(%eax);");
    asm("loc_4CE991: mov %ebx,0x5B0(%esi);");
    asm("loc_4CE997: mov %ebx,0x5B0(%esi);");
    asm("loc_4CE99D: mov _data_6735B8,%eax;");
    asm("loc_4CE9A2: mov (%eax),%edi;");
    asm("loc_4CE9A4: cmp %eax,%edi;");
    asm("loc_4CE9A6: je loc_4CE9D3;");
    asm("loc_4CE9A8: mov 0x3C(%edi),%ecx;");
    asm("loc_4CE9AB: cmp %ebx,%ecx;");
    asm("loc_4CE9AD: je loc_4CE9B6;");
    asm("loc_4CE9AF: push $1;");
    asm("loc_4CE9B1: call _sub_4CEB30;");
    asm("loc_4CE9B6: push %edi;");
    asm("loc_4CE9B7: lea 0x18(%esp),%ecx;");
    asm("loc_4CE9BB: push %ecx;");
    asm("loc_4CE9BC: mov $_data_6735B4,%ecx;");
    asm("loc_4CE9C1: mov %ebx,0x3C(%edi);");
    asm("loc_4CE9C4: call _sub_516F70;");
    asm("loc_4CE9C9: mov (%eax),%edi;");
    asm("loc_4CE9CB: cmp _data_6735B8,%edi;");
    asm("loc_4CE9D1: jne loc_4CE9A8;");
    asm("loc_4CE9D3: lea 0x4B8(%esi),%edi;");
    asm("loc_4CE9D9: mov %ebx,_data_6748F8;");
    asm("loc_4CE9DF: mov %edi,0x18(%esp);");
    asm("loc_4CE9E3: lea 0xC0(%edi),%ecx;");
    asm("loc_4CE9E9: push %ebx;");
    asm("loc_4CE9EA: movb $6,0x28(%esp);");
    asm("loc_4CE9EF: calll *_import_5C645C;");
    asm("loc_4CE9F5: mov %edi,%ecx;");
    asm("loc_4CE9F7: movb $4,0x24(%esp);");
    asm("loc_4CE9FC: movl $_off_5C8944,(%edi);");
    asm("loc_4CEA02: call _sub_401E90;");
    asm("loc_4CEA07: mov 0x474(%esi),%eax;");
    asm("loc_4CEA0D: cmp %ebx,%eax;");
    asm("loc_4CEA0F: movb $3,0x24(%esp);");
    asm("loc_4CEA14: je loc_4CEA2B;");
    asm("loc_4CEA16: mov _import_5C6D4C,%edx;");
    asm("loc_4CEA1C: mov (%edx),%ecx;");
    asm("loc_4CEA1E: mov (%ecx),%edx;");
    asm("loc_4CEA20: push %eax;");
    asm("loc_4CEA21: push %ecx;");
    asm("loc_4CEA22: calll *0x38(%edx);");
    asm("loc_4CEA25: mov %ebx,0x474(%esi);");
    asm("loc_4CEA2B: lea 0x284(%esi),%edi;");
    asm("loc_4CEA31: mov %edi,0x18(%esp);");
    asm("loc_4CEA35: mov %edi,%ecx;");
    asm("loc_4CEA37: movb $8,0x24(%esp);");
    asm("loc_4CEA3C: call _sub_4CABD0;");
    asm("loc_4CEA41: lea 0x38(%edi),%ecx;");
    asm("loc_4CEA44: movb $7,0x24(%esp);");
    asm("loc_4CEA49: call _sub_4CAB70;");
    asm("loc_4CEA4E: mov %edi,%ecx;");
    asm("loc_4CEA50: movb $0xA,0x24(%esp);");
    asm("loc_4CEA55: call _sub_4CBB40;");
    asm("loc_4CEA5A: lea 0x24(%edi),%ecx;");
    asm("loc_4CEA5D: call _sub_4DE730;");
    asm("loc_4CEA62: cmp %ebx,(%edi);");
    asm("loc_4CEA64: mov _import_5C62A8,%ebp;");
    asm("loc_4CEA6A: movb $2,0x24(%esp);");
    asm("loc_4CEA6F: je loc_4CEA76;");
    asm("loc_4CEA71: push %ebx;");
    asm("loc_4CEA72: mov %edi,%ecx;");
    asm("loc_4CEA74: call *%ebp;");
    asm("loc_4CEA76: lea 0xB4(%esi),%edi;");
    asm("loc_4CEA7C: mov %edi,0x18(%esp);");
    asm("loc_4CEA80: mov %edi,%ecx;");
    asm("loc_4CEA82: movb $0xC,0x24(%esp);");
    asm("loc_4CEA87: call _sub_4CABD0;");
    asm("loc_4CEA8C: lea 0x38(%edi),%ecx;");
    asm("loc_4CEA8F: movb $0xB,0x24(%esp);");
    asm("loc_4CEA94: call _sub_4CAB70;");
    asm("loc_4CEA99: mov %edi,%ecx;");
    asm("loc_4CEA9B: movb $0xE,0x24(%esp);");
    asm("loc_4CEAA0: call _sub_4CBB40;");
    asm("loc_4CEAA5: lea 0x24(%edi),%ecx;");
    asm("loc_4CEAA8: call _sub_4DE730;");
    asm("loc_4CEAAD: push %ebx;");
    asm("loc_4CEAAE: mov %edi,%ecx;");
    asm("loc_4CEAB0: movb $1,0x28(%esp);");
    asm("loc_4CEAB5: calll *_import_5C645C;");
    asm("loc_4CEABB: lea 0xA4(%esi),%ecx;");
    asm("loc_4CEAC1: movl $_off_5D6EAC,0x7C(%esi);");
    asm("loc_4CEAC8: cmp %ebx,(%ecx);");
    asm("loc_4CEACA: mov %bl,0x24(%esp);");
    asm("loc_4CEACE: je loc_4CEAD3;");
    asm("loc_4CEAD0: push %ebx;");
    asm("loc_4CEAD1: call *%ebp;");
    asm("loc_4CEAD3: movl $_off_5D5544,(%esi);");
    asm("loc_4CEAD9: decl _data_67DCD4;");
    asm("loc_4CEADF: mov 0x6C(%esi),%cl;");
    asm("loc_4CEAE2: mov 0xC(%esi),%edi;");
    asm("loc_4CEAE5: and $0xFC,%cl;");
    asm("loc_4CEAE8: cmp %ebx,%edi;");
    asm("loc_4CEAEA: movl $0xFFFFFFFF,0x24(%esp);");
    asm("loc_4CEAF2: mov %cl,0x6C(%esi);");
    asm("loc_4CEAF5: je loc_4CEB05;");
    asm("loc_4CEAF7: mov (%edi),%eax;");
    asm("loc_4CEAF9: mov %edi,%ecx;");
    asm("loc_4CEAFB: calll *0x28(%eax);");
    asm("loc_4CEAFE: mov 8(%edi),%edi;");
    asm("loc_4CEB01: cmp %ebx,%edi;");
    asm("loc_4CEB03: jne loc_4CEAF7;");
    asm("loc_4CEB05: push %esi;");
    asm("loc_4CEB06: call _sub_59DC00;");
    asm("loc_4CEB0B: mov 0x20(%esp),%ecx;");
    asm("loc_4CEB0F: add $4,%esp;");
    asm("loc_4CEB12: pop %edi;");
    asm("loc_4CEB13: pop %esi;");
    asm("loc_4CEB14: pop %ebp;");
    asm("loc_4CEB15: pop %ebx;");
    asm("loc_4CEB16: mov %ecx,%fs:0;");
    asm("loc_4CEB1D: add $0x18,%esp;");
    asm("loc_4CEB20: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEB30() // _sub_4CEB30
{
    __DEBUG_ASM(4CEB30);
    // chunk 0x4CEB30 _sub_4CEB30
    asm("loc_4CEB30: push %esi;");
    asm("loc_4CEB31: mov %ecx,%esi;");
    asm("loc_4CEB33: call _sub_4CA530;");
    asm("loc_4CEB38: testb $1,8(%esp);");
    asm("loc_4CEB3D: je loc_4CEB48;");
    asm("loc_4CEB3F: push %esi;");
    asm("loc_4CEB40: call _sub_5B7E1D;");
    asm("loc_4CEB45: add $4,%esp;");
    asm("loc_4CEB48: mov %esi,%eax;");
    asm("loc_4CEB4A: pop %esi;");
    asm("loc_4CEB4B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEB50() // _sub_4CEB50
{
    __DEBUG_ASM(4CEB50);
    // chunk 0x4CEB50 _sub_4CEB50
    asm("loc_4CEB50: push $0xFFFFFFFF;");
    asm("loc_4CEB52: push $_sub_5BDC18;");
    asm("loc_4CEB57: mov %fs:0,%eax;");
    asm("loc_4CEB5D: push %eax;");
    asm("loc_4CEB5E: mov %esp,%fs:0;");
    asm("loc_4CEB65: push %ecx;");
    asm("loc_4CEB66: push %esi;");
    asm("loc_4CEB67: mov %ecx,%esi;");
    asm("loc_4CEB69: mov %esi,4(%esp);");
    asm("loc_4CEB6D: mov 0xC0(%esi),%eax;");
    asm("loc_4CEB73: test %eax,%eax;");
    asm("loc_4CEB75: lea 0xC0(%esi),%ecx;");
    asm("loc_4CEB7B: movl $0,0x10(%esp);");
    asm("loc_4CEB83: je loc_4CEB8D;");
    asm("loc_4CEB85: push $0;");
    asm("loc_4CEB87: calll *_import_5C62A8;");
    asm("loc_4CEB8D: mov %esi,%ecx;");
    asm("loc_4CEB8F: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4CEB97: movl $_off_5C8944,(%esi);");
    asm("loc_4CEB9D: call _sub_401E90;");
    asm("loc_4CEBA2: mov 8(%esp),%ecx;");
    asm("loc_4CEBA6: pop %esi;");
    asm("loc_4CEBA7: mov %ecx,%fs:0;");
    asm("loc_4CEBAE: add $0x10,%esp;");
    asm("loc_4CEBB1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEBC0() // _sub_4CEBC0
{
    __DEBUG_ASM(4CEBC0);
    // chunk 0x4CEBC0 _sub_4CEBC0
    asm("loc_4CEBC0: push %esi;");
    asm("loc_4CEBC1: mov 8(%esp),%esi;");
    asm("loc_4CEBC5: test %esi,%esi;");
    asm("loc_4CEBC7: mov %ecx,%edx;");
    asm("loc_4CEBC9: jne loc_4CEBD5;");
    asm("loc_4CEBCB: mov %esi,(%edx);");
    asm("loc_4CEBCD: movb $0,4(%edx);");
    asm("loc_4CEBD1: pop %esi;");
    asm("loc_4CEBD2: ret $4;");
    asm("loc_4CEBD5: push %ebx;");
    asm("loc_4CEBD6: push %ebp;");
    asm("loc_4CEBD7: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CEBDA: xor %eax,%eax;");
    asm("loc_4CEBDC: push %edi;");
    asm("loc_4CEBDD: mov %esi,%edi;");
    asm("loc_4CEBDF: repne scas (%edi),%al;");
    asm("loc_4CEBE1: not %ecx;");
    asm("loc_4CEBE3: dec %ecx;");
    asm("loc_4CEBE4: mov %ecx,%eax;");
    asm("loc_4CEBE6: cmp $0x40,%eax;");
    asm("loc_4CEBE9: lea 4(%edx),%ebx;");
    asm("loc_4CEBEC: jb loc_4CEBF3;");
    asm("loc_4CEBEE: mov $0x3F,%eax;");
    asm("loc_4CEBF3: mov %eax,%ecx;");
    asm("loc_4CEBF5: mov %ecx,%ebp;");
    asm("loc_4CEBF7: shr $2,%ecx;");
    asm("loc_4CEBFA: mov %ebx,%edi;");
    asm("loc_4CEBFC: rep movsl (%esi),(%edi);");
    asm("loc_4CEBFE: mov %ebp,%ecx;");
    asm("loc_4CEC00: and $3,%ecx;");
    asm("loc_4CEC03: rep movsb (%esi),(%edi);");
    asm("loc_4CEC05: pop %edi;");
    asm("loc_4CEC06: pop %ebp;");
    asm("loc_4CEC07: movb $0,(%eax,%ebx);");
    asm("loc_4CEC0B: pop %ebx;");
    asm("loc_4CEC0C: mov %eax,(%edx);");
    asm("loc_4CEC0E: pop %esi;");
    asm("loc_4CEC0F: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEC20() // _sub_4CEC20
{
    __DEBUG_ASM(4CEC20);
    // chunk 0x4CEC20 _sub_4CEC20
    asm("loc_4CEC20: push %esi;");
    asm("loc_4CEC21: mov 8(%esp),%esi;");
    asm("loc_4CEC25: test %esi,%esi;");
    asm("loc_4CEC27: mov %ecx,%edx;");
    asm("loc_4CEC29: jne loc_4CEC35;");
    asm("loc_4CEC2B: mov %esi,(%edx);");
    asm("loc_4CEC2D: movb $0,4(%edx);");
    asm("loc_4CEC31: pop %esi;");
    asm("loc_4CEC32: ret $4;");
    asm("loc_4CEC35: push %ebx;");
    asm("loc_4CEC36: push %ebp;");
    asm("loc_4CEC37: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CEC3A: xor %eax,%eax;");
    asm("loc_4CEC3C: push %edi;");
    asm("loc_4CEC3D: mov %esi,%edi;");
    asm("loc_4CEC3F: repne scas (%edi),%al;");
    asm("loc_4CEC41: not %ecx;");
    asm("loc_4CEC43: dec %ecx;");
    asm("loc_4CEC44: mov %ecx,%eax;");
    asm("loc_4CEC46: cmp $0x80,%eax;");
    asm("loc_4CEC4B: lea 4(%edx),%ebx;");
    asm("loc_4CEC4E: jb loc_4CEC55;");
    asm("loc_4CEC50: mov $0x7F,%eax;");
    asm("loc_4CEC55: mov %eax,%ecx;");
    asm("loc_4CEC57: mov %ecx,%ebp;");
    asm("loc_4CEC59: shr $2,%ecx;");
    asm("loc_4CEC5C: mov %ebx,%edi;");
    asm("loc_4CEC5E: rep movsl (%esi),(%edi);");
    asm("loc_4CEC60: mov %ebp,%ecx;");
    asm("loc_4CEC62: and $3,%ecx;");
    asm("loc_4CEC65: rep movsb (%esi),(%edi);");
    asm("loc_4CEC67: pop %edi;");
    asm("loc_4CEC68: pop %ebp;");
    asm("loc_4CEC69: movb $0,(%eax,%ebx);");
    asm("loc_4CEC6D: pop %ebx;");
    asm("loc_4CEC6E: mov %eax,(%edx);");
    asm("loc_4CEC70: pop %esi;");
    asm("loc_4CEC71: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEC80() // _sub_4CEC80
{
    __DEBUG_ASM(4CEC80);
    // chunk 0x4CEC80 _sub_4CEC80
    asm("loc_4CEC80: push %ebx;");
    asm("loc_4CEC81: push %esi;");
    asm("loc_4CEC82: mov 0x10(%esp),%esi;");
    asm("loc_4CEC86: push %edi;");
    asm("loc_4CEC87: mov 4(%esi),%edi;");
    asm("loc_4CEC8A: push $0x44;");
    asm("loc_4CEC8C: mov %ecx,%ebx;");
    asm("loc_4CEC8E: call _sub_5B7E84;");
    asm("loc_4CEC93: add $4,%esp;");
    asm("loc_4CEC96: test %edi,%edi;");
    asm("loc_4CEC98: mov %esi,(%eax);");
    asm("loc_4CEC9A: jne loc_4CEC9E;");
    asm("loc_4CEC9C: mov %eax,%edi;");
    asm("loc_4CEC9E: mov %edi,4(%eax);");
    asm("loc_4CECA1: mov %eax,4(%esi);");
    asm("loc_4CECA4: mov 4(%eax),%ecx;");
    asm("loc_4CECA7: lea 8(%eax),%edi;");
    asm("loc_4CECAA: test %edi,%edi;");
    asm("loc_4CECAC: mov %eax,(%ecx);");
    asm("loc_4CECAE: je loc_4CECBB;");
    asm("loc_4CECB0: mov 0x18(%esp),%esi;");
    asm("loc_4CECB4: mov $0xF,%ecx;");
    asm("loc_4CECB9: rep movsl (%esi),(%edi);");
    asm("loc_4CECBB: incl 8(%ebx);");
    asm("loc_4CECBE: mov 0x10(%esp),%ecx;");
    asm("loc_4CECC2: pop %edi;");
    asm("loc_4CECC3: pop %esi;");
    asm("loc_4CECC4: mov %eax,(%ecx);");
    asm("loc_4CECC6: mov %ecx,%eax;");
    asm("loc_4CECC8: pop %ebx;");
    asm("loc_4CECC9: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CECD0() // _sub_4CECD0
{
    __DEBUG_ASM(4CECD0);
    // chunk 0x4CECD0 _sub_4CECD0
    asm("loc_4CECD0: mov 4(%ecx),%edx;");
    asm("loc_4CECD3: test %edx,%edx;");
    asm("loc_4CECD5: jne loc_4CECDA;");
    asm("loc_4CECD7: xor %eax,%eax;");
    asm("loc_4CECD9: ret;");
    asm("loc_4CECDA: mov 8(%ecx),%eax;");
    asm("loc_4CECDD: sub %edx,%eax;");
    asm("loc_4CECDF: sar $4,%eax;");
    asm("loc_4CECE2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CECF0() // ?free@?$OwnerList@UCargoDesc@SpaceObj@pub@@@@QAEXXZ
{
    __DEBUG_ASM(4CECF0);
    // chunk 0x4CECF0 _sub_4CECF0
    asm("loc_4CECF0: push %ebx;");
    asm("loc_4CECF1: push %esi;");
    asm("loc_4CECF2: push %edi;");
    asm("loc_4CECF3: xor %ebx,%ebx;");
    asm("loc_4CECF5: mov %ecx,%edi;");
    asm("loc_4CECF7: xor %esi,%esi;");
    asm("loc_4CECF9: lea (%esp),%esp;");
    asm("loc_4CED00: cmp %ebx,%esi;");
    asm("loc_4CED02: jne loc_4CED09;");
    asm("loc_4CED04: mov 4(%edi),%esi;");
    asm("loc_4CED07: jmp loc_4CED0B;");
    asm("loc_4CED09: mov (%esi),%esi;");
    asm("loc_4CED0B: cmp %ebx,%esi;");
    asm("loc_4CED0D: je loc_4CED20;");
    asm("loc_4CED0F: mov 8(%esi),%eax;");
    asm("loc_4CED12: push %eax;");
    asm("loc_4CED13: call _sub_5B7E1D;");
    asm("loc_4CED18: add $4,%esp;");
    asm("loc_4CED1B: mov %ebx,8(%esi);");
    asm("loc_4CED1E: jmp loc_4CED00;");
    asm("loc_4CED20: mov 4(%edi),%esi;");
    asm("loc_4CED23: cmp %ebx,%esi;");
    asm("loc_4CED25: je loc_4CED47;");
    asm("loc_4CED27: cmp %bl,0xC(%edi);");
    asm("loc_4CED2A: mov %esi,%eax;");
    asm("loc_4CED2C: mov (%esi),%esi;");
    asm("loc_4CED2E: je loc_4CED3A;");
    asm("loc_4CED30: mov 0x10(%edi),%ecx;");
    asm("loc_4CED33: mov %ecx,(%eax);");
    asm("loc_4CED35: mov %eax,0x10(%edi);");
    asm("loc_4CED38: jmp loc_4CED43;");
    asm("loc_4CED3A: push %eax;");
    asm("loc_4CED3B: call _sub_5B7E1D;");
    asm("loc_4CED40: add $4,%esp;");
    asm("loc_4CED43: cmp %ebx,%esi;");
    asm("loc_4CED45: jne loc_4CED27;");
    asm("loc_4CED47: mov %ebx,8(%edi);");
    asm("loc_4CED4A: mov %ebx,4(%edi);");
    asm("loc_4CED4D: pop %edi;");
    asm("loc_4CED4E: pop %esi;");
    asm("loc_4CED4F: pop %ebx;");
    asm("loc_4CED50: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CED60() // ??1?$OwnerList@UCargoDesc@SpaceObj@pub@@@@UAE@XZ
{
    __DEBUG_ASM(4CED60);
    // chunk 0x4CED60 _sub_4CED60
    asm("loc_4CED60: push %ebx;");
    asm("loc_4CED61: push %esi;");
    asm("loc_4CED62: mov %ecx,%esi;");
    asm("loc_4CED64: push %edi;");
    asm("loc_4CED65: xor %ebx,%ebx;");
    asm("loc_4CED67: movl $_off_5D711C,(%esi);");
    asm("loc_4CED6D: xor %edi,%edi;");
    asm("loc_4CED6F: nop;");
    asm("loc_4CED70: cmp %ebx,%edi;");
    asm("loc_4CED72: jne loc_4CED79;");
    asm("loc_4CED74: mov 4(%esi),%edi;");
    asm("loc_4CED77: jmp loc_4CED7B;");
    asm("loc_4CED79: mov (%edi),%edi;");
    asm("loc_4CED7B: cmp %ebx,%edi;");
    asm("loc_4CED7D: je loc_4CED90;");
    asm("loc_4CED7F: mov 8(%edi),%eax;");
    asm("loc_4CED82: push %eax;");
    asm("loc_4CED83: call _sub_5B7E1D;");
    asm("loc_4CED88: add $4,%esp;");
    asm("loc_4CED8B: mov %ebx,8(%edi);");
    asm("loc_4CED8E: jmp loc_4CED70;");
    asm("loc_4CED90: mov 4(%esi),%edi;");
    asm("loc_4CED93: cmp %ebx,%edi;");
    asm("loc_4CED95: je loc_4CEDB7;");
    asm("loc_4CED97: cmp %bl,0xC(%esi);");
    asm("loc_4CED9A: mov %edi,%eax;");
    asm("loc_4CED9C: mov (%edi),%edi;");
    asm("loc_4CED9E: je loc_4CEDAA;");
    asm("loc_4CEDA0: mov 0x10(%esi),%ecx;");
    asm("loc_4CEDA3: mov %ecx,(%eax);");
    asm("loc_4CEDA5: mov %eax,0x10(%esi);");
    asm("loc_4CEDA8: jmp loc_4CEDB3;");
    asm("loc_4CEDAA: push %eax;");
    asm("loc_4CEDAB: call _sub_5B7E1D;");
    asm("loc_4CEDB0: add $4,%esp;");
    asm("loc_4CEDB3: cmp %ebx,%edi;");
    asm("loc_4CEDB5: jne loc_4CED97;");
    asm("loc_4CEDB7: mov 0x10(%esi),%edi;");
    asm("loc_4CEDBA: cmp %ebx,%edi;");
    asm("loc_4CEDBC: movl $_off_5D7704,(%esi);");
    asm("loc_4CEDC2: mov %ebx,8(%esi);");
    asm("loc_4CEDC5: mov %ebx,4(%esi);");
    asm("loc_4CEDC8: je loc_4CEDE1;");
    asm("loc_4CEDCA: lea (%ebx),%ebx;");
    asm("loc_4CEDD0: mov %edi,%eax;");
    asm("loc_4CEDD2: mov (%edi),%edi;");
    asm("loc_4CEDD4: push %eax;");
    asm("loc_4CEDD5: call _sub_5B7E1D;");
    asm("loc_4CEDDA: add $4,%esp;");
    asm("loc_4CEDDD: cmp %ebx,%edi;");
    asm("loc_4CEDDF: jne loc_4CEDD0;");
    asm("loc_4CEDE1: pop %edi;");
    asm("loc_4CEDE2: mov %ebx,0x10(%esi);");
    asm("loc_4CEDE5: pop %esi;");
    asm("loc_4CEDE6: pop %ebx;");
    asm("loc_4CEDE7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEDF0() // _sub_4CEDF0
{
    __DEBUG_ASM(4CEDF0);
    // chunk 0x4CEDF0 _sub_4CEDF0
    asm("loc_4CEDF0: push %esi;");
    asm("loc_4CEDF1: mov %ecx,%esi;");
    asm("loc_4CEDF3: push %edi;");
    asm("loc_4CEDF4: mov 4(%esi),%edi;");
    asm("loc_4CEDF7: test %edi,%edi;");
    asm("loc_4CEDF9: movl $_off_5D7704,(%esi);");
    asm("loc_4CEDFF: je loc_4CEE23;");
    asm("loc_4CEE01: mov 0xC(%esi),%cl;");
    asm("loc_4CEE04: test %cl,%cl;");
    asm("loc_4CEE06: mov %edi,%eax;");
    asm("loc_4CEE08: mov (%edi),%edi;");
    asm("loc_4CEE0A: je loc_4CEE16;");
    asm("loc_4CEE0C: mov 0x10(%esi),%ecx;");
    asm("loc_4CEE0F: mov %ecx,(%eax);");
    asm("loc_4CEE11: mov %eax,0x10(%esi);");
    asm("loc_4CEE14: jmp loc_4CEE1F;");
    asm("loc_4CEE16: push %eax;");
    asm("loc_4CEE17: call _sub_5B7E1D;");
    asm("loc_4CEE1C: add $4,%esp;");
    asm("loc_4CEE1F: test %edi,%edi;");
    asm("loc_4CEE21: jne loc_4CEE01;");
    asm("loc_4CEE23: mov 0x10(%esi),%edi;");
    asm("loc_4CEE26: test %edi,%edi;");
    asm("loc_4CEE28: movl $0,8(%esi);");
    asm("loc_4CEE2F: movl $0,4(%esi);");
    asm("loc_4CEE36: je loc_4CEE49;");
    asm("loc_4CEE38: mov %edi,%eax;");
    asm("loc_4CEE3A: mov (%edi),%edi;");
    asm("loc_4CEE3C: push %eax;");
    asm("loc_4CEE3D: call _sub_5B7E1D;");
    asm("loc_4CEE42: add $4,%esp;");
    asm("loc_4CEE45: test %edi,%edi;");
    asm("loc_4CEE47: jne loc_4CEE38;");
    asm("loc_4CEE49: testb $1,0xC(%esp);");
    asm("loc_4CEE4E: movl $0,0x10(%esi);");
    asm("loc_4CEE55: je loc_4CEE60;");
    asm("loc_4CEE57: push %esi;");
    asm("loc_4CEE58: call _sub_5B7E1D;");
    asm("loc_4CEE5D: add $4,%esp;");
    asm("loc_4CEE60: pop %edi;");
    asm("loc_4CEE61: mov %esi,%eax;");
    asm("loc_4CEE63: pop %esi;");
    asm("loc_4CEE64: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEE70() // _sub_4CEE70
{
    __DEBUG_ASM(4CEE70);
    // chunk 0x4CEE70 _sub_4CEE70
    asm("loc_4CEE70: sub $0x7C,%ecx;");
    asm("loc_4CEE73: jmp _sub_4CE8D0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEE80() // _sub_4CEE80
{
    __DEBUG_ASM(4CEE80);
    // chunk 0x4CEE80 _sub_4CEE80
    asm("loc_4CEE80: mov _data_5D7954,%eax;");
    asm("loc_4CEE85: mov %eax,_data_674944;");
    asm("loc_4CEE8A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEE90() // _sub_4CEE90
{
    __DEBUG_ASM(4CEE90);
    // chunk 0x4CEE90 _sub_4CEE90
    asm("loc_4CEE90: mov _data_5D7954,%eax;");
    asm("loc_4CEE95: mov %eax,_data_674940;");
    asm("loc_4CEE9A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEEA0() // _sub_4CEEA0
{
    __DEBUG_ASM(4CEEA0);
    // chunk 0x4CEEA0 _sub_4CEEA0
    asm("loc_4CEEA0: mov _data_5D7958,%eax;");
    asm("loc_4CEEA5: mov %eax,_data_67493C;");
    asm("loc_4CEEAA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEEB0() // _sub_4CEEB0
{
    __DEBUG_ASM(4CEEB0);
    // chunk 0x4CEEB0 _sub_4CEEB0
    asm("loc_4CEEB0: sub $0x28,%esp;");
    asm("loc_4CEEB3: push %esi;");
    asm("loc_4CEEB4: call _sub_4C4690;");
    asm("loc_4CEEB9: mov 0x30(%esp),%esi;");
    asm("loc_4CEEBD: cmp %eax,%esi;");
    asm("loc_4CEEBF: jge loc_4CEF22;");
    asm("loc_4CEEC1: push %esi;");
    asm("loc_4CEEC2: call _sub_4C46A0;");
    asm("loc_4CEEC7: mov 0x10(%eax),%edx;");
    asm("loc_4CEECA: add $4,%esp;");
    asm("loc_4CEECD: test %edx,%edx;");
    asm("loc_4CEECF: je loc_4CEF0F;");
    asm("loc_4CEED1: push %edi;");
    asm("loc_4CEED2: xor %eax,%eax;");
    asm("loc_4CEED4: mov $0xA,%ecx;");
    asm("loc_4CEED9: lea 8(%esp),%edi;");
    asm("loc_4CEEDD: rep stos %eax,(%edi);");
    asm("loc_4CEEDF: mov _import_5C6368,%eax;");
    asm("loc_4CEEE4: movb $1,0x2E(%esp);");
    asm("loc_4CEEE9: movl $0x1C,8(%esp);");
    asm("loc_4CEEF1: movzwl (%eax),%ecx;");
    asm("loc_4CEEF4: mov %edx,0x18(%esp);");
    asm("loc_4CEEF8: lea 8(%esp),%edx;");
    asm("loc_4CEEFC: push %edx;");
    asm("loc_4CEEFD: mov %ecx,0x20(%esp);");
    asm("loc_4CEF01: call _sub_54BCB0;");
    asm("loc_4CEF06: add $4,%esp;");
    asm("loc_4CEF09: pop %edi;");
    asm("loc_4CEF0A: pop %esi;");
    asm("loc_4CEF0B: add $0x28,%esp;");
    asm("loc_4CEF0E: ret;");
    asm("loc_4CEF0F: mov 0x14(%eax),%ecx;");
    asm("loc_4CEF12: push %ecx;");
    asm("loc_4CEF13: mov _data_674BC8,%ecx;");
    asm("loc_4CEF19: push %esi;");
    asm("loc_4CEF1A: push $1;");
    asm("loc_4CEF1C: push %eax;");
    asm("loc_4CEF1D: call _sub_4F42E0;");
    asm("loc_4CEF22: pop %esi;");
    asm("loc_4CEF23: add $0x28,%esp;");
    asm("loc_4CEF26: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEF30() // _sub_4CEF30
{
    __DEBUG_ASM(4CEF30);
    // chunk 0x4CEF30 _sub_4CEF30
    asm("loc_4CEF30: sub $0x38,%esp;");
    asm("loc_4CEF33: push %esi;");
    asm("loc_4CEF34: push %edi;");
    asm("loc_4CEF35: call _sub_4C4FB0;");
    asm("loc_4CEF3A: mov 0x44(%esp),%edi;");
    asm("loc_4CEF3E: cmp %eax,%edi;");
    asm("loc_4CEF40: jge loc_4CEFCB;");
    asm("loc_4CEF46: push %edi;");
    asm("loc_4CEF47: call _sub_4C4FF0;");
    asm("loc_4CEF4C: mov %eax,%esi;");
    asm("loc_4CEF4E: add $4,%esp;");
    asm("loc_4CEF51: mov %esi,%ecx;");
    asm("loc_4CEF53: call _sub_4C5110;");
    asm("loc_4CEF58: mov %eax,%edx;");
    asm("loc_4CEF5A: test %edx,%edx;");
    asm("loc_4CEF5C: je loc_4CEFA2;");
    asm("loc_4CEF5E: xor %eax,%eax;");
    asm("loc_4CEF60: mov $0xA,%ecx;");
    asm("loc_4CEF65: lea 0x18(%esp),%edi;");
    asm("loc_4CEF69: rep stos %eax,(%edi);");
    asm("loc_4CEF6B: mov _import_5C6368,%eax;");
    asm("loc_4CEF70: movb $1,0x3E(%esp);");
    asm("loc_4CEF75: movl $0x1C,0x18(%esp);");
    asm("loc_4CEF7D: movzwl (%eax),%ecx;");
    asm("loc_4CEF80: mov (%edx),%eax;");
    asm("loc_4CEF82: mov %ecx,0x2C(%esp);");
    asm("loc_4CEF86: mov %edx,%ecx;");
    asm("loc_4CEF88: calll *0x20(%eax);");
    asm("loc_4CEF8B: lea 0x18(%esp),%ecx;");
    asm("loc_4CEF8F: push %ecx;");
    asm("loc_4CEF90: mov %eax,0x2C(%esp);");
    asm("loc_4CEF94: call _sub_54BCB0;");
    asm("loc_4CEF99: add $4,%esp;");
    asm("loc_4CEF9C: pop %edi;");
    asm("loc_4CEF9D: pop %esi;");
    asm("loc_4CEF9E: add $0x38,%esp;");
    asm("loc_4CEFA1: ret;");
    asm("loc_4CEFA2: lea 8(%esp),%edx;");
    asm("loc_4CEFA6: push %edx;");
    asm("loc_4CEFA7: lea 0x10(%esp),%eax;");
    asm("loc_4CEFAB: push %eax;");
    asm("loc_4CEFAC: mov %esi,%ecx;");
    asm("loc_4CEFAE: call _sub_4C52D0;");
    asm("loc_4CEFB3: test %al,%al;");
    asm("loc_4CEFB5: je loc_4CEFCB;");
    asm("loc_4CEFB7: push %edi;");
    asm("loc_4CEFB8: push %edi;");
    asm("loc_4CEFB9: push $0;");
    asm("loc_4CEFBB: lea 0x18(%esp),%ecx;");
    asm("loc_4CEFBF: push %ecx;");
    asm("loc_4CEFC0: mov _data_674BC8,%ecx;");
    asm("loc_4CEFC6: call _sub_4F42E0;");
    asm("loc_4CEFCB: pop %edi;");
    asm("loc_4CEFCC: pop %esi;");
    asm("loc_4CEFCD: add $0x38,%esp;");
    asm("loc_4CEFD0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CEFE0() // _sub_4CEFE0
{
    __DEBUG_ASM(4CEFE0);
    // chunk 0x4CEFE0 _sub_4CEFE0
    asm("loc_4CEFE0: push $_data_5D796C;");
    asm("loc_4CEFE5: mov $_data_674910,%ecx;");
    asm("loc_4CEFEA: call _sub_4D4630;");
    asm("loc_4CEFEF: push $_sub_4CF000;");
    asm("loc_4CEFF4: call _sub_5B7E6C;");
    asm("loc_4CEFF9: pop %ecx;");
    asm("loc_4CEFFA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CF000() // _sub_4CF000
{
    __DEBUG_ASM(4CF000);
    // chunk 0x4CF000 _sub_4CF000
    asm("loc_4CF000: mov $_data_674910,%ecx;");
    asm("loc_4CF005: jmp _sub_4CF010;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CF010() // _sub_4CF010
{
    __DEBUG_ASM(4CF010);
    // chunk 0x4CF010 _sub_4CF010
    asm("loc_4CF010: push %ecx;");
    asm("loc_4CF011: movl $_off_5D6E30,(%ecx);");
    asm("loc_4CF017: call _sub_4C72E0;");
    asm("loc_4CF01C: pop %ecx;");
    asm("loc_4CF01D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CF020() // _nullsub_23
{
    __DEBUG_ASM(4CF020);
    // chunk 0x4CF020 _sub_4CF020
    asm("loc_4CF020: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CF030() // _sub_4CF030
{
    __DEBUG_ASM(4CF030);
    // chunk 0x4CF030 _sub_4CF030
    asm("loc_4CF030: push $0xFFFFFFFF;");
    asm("loc_4CF032: push $_sub_5BDC44;");
    asm("loc_4CF037: mov %fs:0,%eax;");
    asm("loc_4CF03D: push %eax;");
    asm("loc_4CF03E: mov %esp,%fs:0;");
    asm("loc_4CF045: sub $0x1C,%esp;");
    asm("loc_4CF048: push %ebx;");
    asm("loc_4CF049: push %esi;");
    asm("loc_4CF04A: mov %ecx,%esi;");
    asm("loc_4CF04C: push %edi;");
    asm("loc_4CF04D: lea 4(%esi),%edi;");
    asm("loc_4CF050: xor %ebx,%ebx;");
    asm("loc_4CF052: mov %esi,0xC(%esp);");
    asm("loc_4CF056: mov %ebx,(%edi);");
    asm("loc_4CF058: mov %ebx,4(%edi);");
    asm("loc_4CF05B: mov 0x38(%esp),%eax;");
    asm("loc_4CF05F: mov %eax,(%esi);");
    asm("loc_4CF061: mov 0x3C(%esp),%eax;");
    asm("loc_4CF065: cmp %ebx,%eax;");
    asm("loc_4CF067: movl $1,0x30(%esp);");
    asm("loc_4CF06F: je loc_4CF076;");
    asm("loc_4CF071: add $8,%eax;");
    asm("loc_4CF074: jmp loc_4CF078;");
    asm("loc_4CF076: xor %eax,%eax;");
    asm("loc_4CF078: cmp (%edi),%eax;");
    asm("loc_4CF07A: je loc_4CF085;");
    asm("loc_4CF07C: push %eax;");
    asm("loc_4CF07D: mov %edi,%ecx;");
    asm("loc_4CF07F: calll *_import_5C62A8;");
    asm("loc_4CF085: mov 0x48(%esp),%eax;");
    asm("loc_4CF089: mov 0x40(%esp),%ecx;");
    asm("loc_4CF08D: mov 0x44(%esp),%edx;");
    asm("loc_4CF091: mov %ecx,0xC(%esi);");
    asm("loc_4CF094: mov %edx,0x10(%esi);");
    asm("loc_4CF097: mov %eax,0x14(%esi);");
    asm("loc_4CF09A: mov %bl,0x18(%esi);");
    asm("loc_4CF09D: mov (%edi),%eax;");
    asm("loc_4CF09F: cmp %ebx,%eax;");
    asm("loc_4CF0A1: je loc_4CF167;");
    asm("loc_4CF0A7: add $0xFFFFFFF8,%eax;");
    asm("loc_4CF0AA: cmp %ebx,%eax;");
    asm("loc_4CF0AC: je loc_4CF167;");
    asm("loc_4CF0B2: mov (%edi),%eax;");
    asm("loc_4CF0B4: cmp %ebx,%eax;");
    asm("loc_4CF0B6: je loc_4CF0BD;");
    asm("loc_4CF0B8: lea -8(%eax),%ecx;");
    asm("loc_4CF0BB: jmp loc_4CF0BF;");
    asm("loc_4CF0BD: xor %ecx,%ecx;");
    asm("loc_4CF0BF: mov (%ecx),%edx;");
    asm("loc_4CF0C1: calll *0x20(%edx);");
    asm("loc_4CF0C4: mov %eax,0x10(%esi);");
    asm("loc_4CF0C7: cmp %eax,_data_674900;");
    asm("loc_4CF0CD: jne loc_4CF0D6;");
    asm("loc_4CF0CF: movb $1,_data_6748FC;");
    asm("loc_4CF0D6: mov (%edi),%eax;");
    asm("loc_4CF0D8: cmp %ebx,%eax;");
    asm("loc_4CF0DA: push %ebp;");
    asm("loc_4CF0DB: je loc_4CF0E2;");
    asm("loc_4CF0DD: lea -8(%eax),%ebp;");
    asm("loc_4CF0E0: jmp loc_4CF0E4;");
    asm("loc_4CF0E2: xor %ebp,%ebp;");
    asm("loc_4CF0E4: call _sub_54BAF0;");
    asm("loc_4CF0E9: cmp %eax,%ebp;");
    asm("loc_4CF0EB: pop %ebp;");
    asm("loc_4CF0EC: je loc_4CF365;");
    asm("loc_4CF0F2: mov (%edi),%edi;");
    asm("loc_4CF0F4: cmp %ebx,%edi;");
    asm("loc_4CF0F6: je loc_4CF0FD;");
    asm("loc_4CF0F8: lea -8(%edi),%ecx;");
    asm("loc_4CF0FB: jmp loc_4CF0FF;");
    asm("loc_4CF0FD: xor %ecx,%ecx;");
    asm("loc_4CF0FF: mov (%ecx),%eax;");
    asm("loc_4CF101: calll *0x150(%eax);");
    asm("loc_4CF107: mov (%eax),%edx;");
    asm("loc_4CF109: lea 0x10(%esp),%ecx;");
    asm("loc_4CF10D: push %ecx;");
    asm("loc_4CF10E: mov %eax,%ecx;");
    asm("loc_4CF110: calll *0x64(%edx);");
    asm("loc_4CF113: flds 0x10(%esp);");
    asm("loc_4CF117: fsubs _data_674904;");
    asm("loc_4CF11D: flds 0x14(%esp);");
    asm("loc_4CF121: fsubs _data_674908;");
    asm("loc_4CF127: flds 0x18(%esp);");
    asm("loc_4CF12B: fsubs _data_67490C;");
    asm("loc_4CF131: fld %st(0);");
    asm("loc_4CF133: fmul %st(1),%st;");
    asm("loc_4CF135: fld %st(2);");
    asm("loc_4CF137: fmul %st(3),%st;");
    asm("loc_4CF139: faddp;");
    asm("loc_4CF13B: fld %st(3);");
    asm("loc_4CF13D: fmul %st(4),%st;");
    asm("loc_4CF13F: faddp;");
    asm("loc_4CF141: fsqrt;");
    asm("loc_4CF143: fstp %st(3);");
    asm("loc_4CF145: fstp %st(0);");
    asm("loc_4CF147: fstp %st(0);");
    asm("loc_4CF149: fsubp;");
    asm("loc_4CF14B: fsts 0xC(%esi);");
    asm("loc_4CF14E: fcomps _data_5C7474;");
    asm("loc_4CF154: fnstsw %ax;");
    asm("loc_4CF156: test $5,%ah;");
    asm("loc_4CF159: jp loc_4CF365;");
    asm("loc_4CF15F: mov %ebx,0xC(%esi);");
    asm("loc_4CF162: jmp loc_4CF365;");
    asm("loc_4CF167: mov (%esi),%eax;");
    asm("loc_4CF169: cmp $4,%eax;");
    asm("loc_4CF16C: jne loc_4CF25A;");
    asm("loc_4CF172: mov 0x14(%esi),%edi;");
    asm("loc_4CF175: call _sub_4C4690;");
    asm("loc_4CF17A: cmp %eax,%edi;");
    asm("loc_4CF17C: jl loc_4CF186;");
    asm("loc_4CF17E: mov %ebx,0xC(%esi);");
    asm("loc_4CF181: jmp loc_4CF228;");
    asm("loc_4CF186: push %edi;");
    asm("loc_4CF187: call _sub_4C46A0;");
    asm("loc_4CF18C: mov %eax,%edx;");
    asm("loc_4CF18E: mov (%edx),%ecx;");
    asm("loc_4CF190: mov %ecx,0x14(%esp);");
    asm("loc_4CF194: flds 0x14(%esp);");
    asm("loc_4CF198: fsubs _data_674904;");
    asm("loc_4CF19E: mov 4(%edx),%ecx;");
    asm("loc_4CF1A1: mov 8(%edx),%edx;");
    asm("loc_4CF1A4: mov %ecx,0x18(%esp);");
    asm("loc_4CF1A8: flds 0x18(%esp);");
    asm("loc_4CF1AC: fsubs _data_674908;");
    asm("loc_4CF1B2: mov %edx,0x1C(%esp);");
    asm("loc_4CF1B6: flds 0x1C(%esp);");
    asm("loc_4CF1BA: add $4,%esp;");
    asm("loc_4CF1BD: fsubs _data_67490C;");
    asm("loc_4CF1C3: fld %st(0);");
    asm("loc_4CF1C5: fmul %st(1),%st;");
    asm("loc_4CF1C7: fld %st(2);");
    asm("loc_4CF1C9: fmul %st(3),%st;");
    asm("loc_4CF1CB: faddp;");
    asm("loc_4CF1CD: fld %st(3);");
    asm("loc_4CF1CF: fmul %st(4),%st;");
    asm("loc_4CF1D1: faddp;");
    asm("loc_4CF1D3: fsqrt;");
    asm("loc_4CF1D5: fstps 0xC(%esi);");
    asm("loc_4CF1D8: mov 0x10(%eax),%eax;");
    asm("loc_4CF1DB: cmp %ebx,%eax;");
    asm("loc_4CF1DD: fstp %st(0);");
    asm("loc_4CF1DF: fstp %st(0);");
    asm("loc_4CF1E1: fstp %st(0);");
    asm("loc_4CF1E3: je loc_4CF228;");
    asm("loc_4CF1E5: push %ebx;");
    asm("loc_4CF1E6: push %eax;");
    asm("loc_4CF1E7: call _sub_5416C0;");
    asm("loc_4CF1EC: mov %eax,%edi;");
    asm("loc_4CF1EE: add $8,%esp;");
    asm("loc_4CF1F1: cmp %ebx,%edi;");
    asm("loc_4CF1F3: je loc_4CF228;");
    asm("loc_4CF1F5: flds 0xC(%esi);");
    asm("loc_4CF1F8: call _sub_5B7EC0;");
    asm("loc_4CF1FD: mov %eax,0x38(%esp);");
    asm("loc_4CF201: fildl 0x38(%esp);");
    asm("loc_4CF205: mov %edi,%ecx;");
    asm("loc_4CF207: fstps 0xC(%esi);");
    asm("loc_4CF20A: mov (%edi),%eax;");
    asm("loc_4CF20C: calll *0x150(%eax);");
    asm("loc_4CF212: mov (%eax),%edx;");
    asm("loc_4CF214: lea 0x10(%esp),%ecx;");
    asm("loc_4CF218: push %ecx;");
    asm("loc_4CF219: mov %eax,%ecx;");
    asm("loc_4CF21B: calll *0x64(%edx);");
    asm("loc_4CF21E: flds 0xC(%esi);");
    asm("loc_4CF221: fsub %st(1),%st;");
    asm("loc_4CF223: fstps 0xC(%esi);");
    asm("loc_4CF226: fstp %st(0);");
    asm("loc_4CF228: cmp %bl,_data_6748FC;");
    asm("loc_4CF22E: jne loc_4CF365;");
    asm("loc_4CF234: mov _data_674900,%edx;");
    asm("loc_4CF23A: push $1;");
    asm("loc_4CF23C: push %edx;");
    asm("loc_4CF23D: push %esi;");
    asm("loc_4CF23E: call _sub_4D4120;");
    asm("loc_4CF243: add $0xC,%esp;");
    asm("loc_4CF246: test %al,%al;");
    asm("loc_4CF248: je loc_4CF365;");
    asm("loc_4CF24E: movb $1,_data_6748FC;");
    asm("loc_4CF255: jmp loc_4CF365;");
    asm("loc_4CF25A: cmp $3,%eax;");
    asm("loc_4CF25D: jne loc_4CF365;");
    asm("loc_4CF263: cmp %bl,_data_6748FC;");
    asm("loc_4CF269: jne loc_4CF287;");
    asm("loc_4CF26B: mov _data_674900,%eax;");
    asm("loc_4CF270: push $1;");
    asm("loc_4CF272: push %eax;");
    asm("loc_4CF273: push %esi;");
    asm("loc_4CF274: call _sub_4D4120;");
    asm("loc_4CF279: add $0xC,%esp;");
    asm("loc_4CF27C: test %al,%al;");
    asm("loc_4CF27E: je loc_4CF287;");
    asm("loc_4CF280: movb $1,_data_6748FC;");
    asm("loc_4CF287: mov 0x14(%esi),%edi;");
    asm("loc_4CF28A: call _sub_4C4FB0;");
    asm("loc_4CF28F: cmp %eax,%edi;");
    asm("loc_4CF291: jl loc_4CF29B;");
    asm("loc_4CF293: mov %ebx,0xC(%esi);");
    asm("loc_4CF296: jmp loc_4CF365;");
    asm("loc_4CF29B: push %edi;");
    asm("loc_4CF29C: call _sub_4C4FF0;");
    asm("loc_4CF2A1: add $4,%esp;");
    asm("loc_4CF2A4: lea 0x38(%esp),%ecx;");
    asm("loc_4CF2A8: push %ecx;");
    asm("loc_4CF2A9: mov %eax,%edi;");
    asm("loc_4CF2AB: lea 0x14(%esp),%edx;");
    asm("loc_4CF2AF: push %edx;");
    asm("loc_4CF2B0: mov %edi,%ecx;");
    asm("loc_4CF2B2: call _sub_4C52D0;");
    asm("loc_4CF2B7: test %al,%al;");
    asm("loc_4CF2B9: je loc_4CF375;");
    asm("loc_4CF2BF: call _sub_4C4830;");
    asm("loc_4CF2C4: push %eax;");
    asm("loc_4CF2C5: calll *_import_5C6094;");
    asm("loc_4CF2CB: mov (%eax),%edx;");
    asm("loc_4CF2CD: add $4,%esp;");
    asm("loc_4CF2D0: mov %eax,%ecx;");
    asm("loc_4CF2D2: calll *(%edx);");
    asm("loc_4CF2D4: cmp %eax,0x38(%esp);");
    asm("loc_4CF2D8: jne loc_4CF375;");
    asm("loc_4CF2DE: flds 0x10(%esp);");
    asm("loc_4CF2E2: mov %edi,%ecx;");
    asm("loc_4CF2E4: fsubs _data_674904;");
    asm("loc_4CF2EA: fstps 0x10(%esp);");
    asm("loc_4CF2EE: flds 0x14(%esp);");
    asm("loc_4CF2F2: fsubs _data_674908;");
    asm("loc_4CF2F8: fstps 0x14(%esp);");
    asm("loc_4CF2FC: flds 0x18(%esp);");
    asm("loc_4CF300: fsubs _data_67490C;");
    asm("loc_4CF306: fsts 0x18(%esp);");
    asm("loc_4CF30A: fmuls 0x18(%esp);");
    asm("loc_4CF30E: flds 0x14(%esp);");
    asm("loc_4CF312: fmuls 0x14(%esp);");
    asm("loc_4CF316: faddp;");
    asm("loc_4CF318: flds 0x10(%esp);");
    asm("loc_4CF31C: fmuls 0x10(%esp);");
    asm("loc_4CF320: faddp;");
    asm("loc_4CF322: fsqrt;");
    asm("loc_4CF324: fstps 0xC(%esi);");
    asm("loc_4CF327: call _sub_4C5110;");
    asm("loc_4CF32C: mov %eax,%edi;");
    asm("loc_4CF32E: cmp %ebx,%edi;");
    asm("loc_4CF330: je loc_4CF365;");
    asm("loc_4CF332: flds 0xC(%esi);");
    asm("loc_4CF335: call _sub_5B7EC0;");
    asm("loc_4CF33A: mov %eax,0x3C(%esp);");
    asm("loc_4CF33E: fildl 0x3C(%esp);");
    asm("loc_4CF342: mov %edi,%ecx;");
    asm("loc_4CF344: fstps 0xC(%esi);");
    asm("loc_4CF347: mov (%edi),%eax;");
    asm("loc_4CF349: calll *0x150(%eax);");
    asm("loc_4CF34F: mov (%eax),%edx;");
    asm("loc_4CF351: lea 0x1C(%esp),%ecx;");
    asm("loc_4CF355: push %ecx;");
    asm("loc_4CF356: mov %eax,%ecx;");
    asm("loc_4CF358: calll *0x64(%edx);");
    asm("loc_4CF35B: flds 0xC(%esi);");
    asm("loc_4CF35E: fsub %st(1),%st;");
    asm("loc_4CF360: fstps 0xC(%esi);");
    asm("loc_4CF363: fstp %st(0);");
    asm("loc_4CF365: flds 0xC(%esi);");
    asm("loc_4CF368: fcomps _data_5C7474;");
    asm("loc_4CF36E: fnstsw %ax;");
    asm("loc_4CF370: test $5,%ah;");
    asm("loc_4CF373: jp loc_4CF378;");
    asm("loc_4CF375: mov %ebx,0xC(%esi);");
    asm("loc_4CF378: mov 0x28(%esp),%ecx;");
    asm("loc_4CF37C: pop %edi;");
    asm("loc_4CF37D: mov %esi,%eax;");
    asm("loc_4CF37F: pop %esi;");
    asm("loc_4CF380: pop %ebx;");
    asm("loc_4CF381: mov %ecx,%fs:0;");
    asm("loc_4CF388: add $0x28,%esp;");
    asm("loc_4CF38B: ret $0x14;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CF390() // _sub_4CF390
{
    __DEBUG_ASM(4CF390);
    // chunk 0x4CF390 _sub_4CF390
    asm("loc_4CF390: push $0xFFFFFFFF;");
    asm("loc_4CF392: push $_sub_5BDC93;");
    asm("loc_4CF397: mov %fs:0,%eax;");
    asm("loc_4CF39D: push %eax;");
    asm("loc_4CF39E: mov %esp,%fs:0;");
    asm("loc_4CF3A5: sub $0xC,%esp;");
    asm("loc_4CF3A8: push %ebp;");
    asm("loc_4CF3A9: mov %ecx,%ebp;");
    asm("loc_4CF3AB: push %esi;");
    asm("loc_4CF3AC: push %edi;");
    asm("loc_4CF3AD: xor %esi,%esi;");
    asm("loc_4CF3AF: lea 0x28(%ebp),%edi;");
    asm("loc_4CF3B2: mov %edi,%ecx;");
    asm("loc_4CF3B4: mov %esi,4(%ebp);");
    asm("loc_4CF3B7: movb $0,8(%ebp);");
    asm("loc_4CF3BB: mov %ebp,0x10(%esp);");
    asm("loc_4CF3BF: mov %ecx,0x14(%esp);");
    asm("loc_4CF3C3: mov %esi,(%ecx);");
    asm("loc_4CF3C5: mov %esi,4(%ecx);");
    asm("loc_4CF3C8: push %esi;");
    asm("loc_4CF3C9: mov %esi,0x24(%esp);");
    asm("loc_4CF3CD: calll *_import_5C645C;");
    asm("loc_4CF3D3: movl $_off_5D6EAC,(%ebp);");
    asm("loc_4CF3DA: mov %esi,0x34(%ebp);");
    asm("loc_4CF3DD: cmp %esi,(%edi);");
    asm("loc_4CF3DF: movl $1,0x20(%esp);");
    asm("loc_4CF3E7: je loc_4CF3F2;");
    asm("loc_4CF3E9: push %esi;");
    asm("loc_4CF3EA: mov %edi,%ecx;");
    asm("loc_4CF3EC: calll *_import_5C62A8;");
    asm("loc_4CF3F2: push %ebx;");
    asm("loc_4CF3F3: mov %esi,0x30(%ebp);");
    asm("loc_4CF3F6: lea 0x38(%ebp),%ebx;");
    asm("loc_4CF3F9: mov %ebx,%ecx;");
    asm("loc_4CF3FB: movl $2,0x24(%esp);");
    asm("loc_4CF403: call _sub_59F860;");
    asm("loc_4CF408: movl $_off_5CBED8,0x364(%ebp);");
    asm("loc_4CF412: mov 0x13(%esp),%al;");
    asm("loc_4CF416: push $0x24;");
    asm("loc_4CF418: movb $4,0x28(%esp);");
    asm("loc_4CF41D: mov %al,0x410(%ebp);");
    asm("loc_4CF423: call _sub_5B7E84;");
    asm("loc_4CF428: mov %eax,(%eax);");
    asm("loc_4CF42A: mov %eax,4(%eax);");
    asm("loc_4CF42D: add $4,%esp;");
    asm("loc_4CF430: mov %eax,0x414(%ebp);");
    asm("loc_4CF436: mov %esi,0x418(%ebp);");
    asm("loc_4CF43C: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CF43F: xor %eax,%eax;");
    asm("loc_4CF441: mov $_data_5D796C,%edi;");
    asm("loc_4CF446: movl $_off_5D7A5C,(%ebp);");
    asm("loc_4CF44D: movl $_off_5D79A4,(%ebx);");
    asm("loc_4CF453: movl $_off_5D7994,0xB4(%ebp);");
    asm("loc_4CF45D: movl $_off_5D798C,0x364(%ebp);");
    asm("loc_4CF467: repne scas (%edi),%al;");
    asm("loc_4CF469: not %ecx;");
    asm("loc_4CF46B: dec %ecx;");
    asm("loc_4CF46C: mov %ecx,%eax;");
    asm("loc_4CF46E: cmp $0x20,%eax;");
    asm("loc_4CF471: movb $5,0x24(%esp);");
    asm("loc_4CF476: lea 8(%ebp),%edx;");
    asm("loc_4CF479: jb loc_4CF480;");
    asm("loc_4CF47B: mov $0x1F,%eax;");
    asm("loc_4CF480: mov %eax,%ecx;");
    asm("loc_4CF482: mov %edx,%edi;");
    asm("loc_4CF484: mov %ecx,%edx;");
    asm("loc_4CF486: shr $2,%ecx;");
    asm("loc_4CF489: mov $_data_5D796C,%esi;");
    asm("loc_4CF48E: rep movsl (%esi),(%edi);");
    asm("loc_4CF490: mov %edx,%ecx;");
    asm("loc_4CF492: and $3,%ecx;");
    asm("loc_4CF495: rep movsb (%esi),(%edi);");
    asm("loc_4CF497: push $0;");
    asm("loc_4CF499: movb $0,8(%eax,%ebp);");
    asm("loc_4CF49E: push $0;");
    asm("loc_4CF4A0: mov %ebx,%ecx;");
    asm("loc_4CF4A2: mov %eax,4(%ebp);");
    asm("loc_4CF4A5: call _sub_4CF6A0;");
    asm("loc_4CF4AA: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CF4AD: xor %eax,%eax;");
    asm("loc_4CF4AF: mov $_data_5D7978,%edi;");
    asm("loc_4CF4B4: repne scas (%edi),%al;");
    asm("loc_4CF4B6: not %ecx;");
    asm("loc_4CF4B8: dec %ecx;");
    asm("loc_4CF4B9: mov %ecx,%eax;");
    asm("loc_4CF4BB: cmp $0x20,%eax;");
    asm("loc_4CF4BE: lea 0x50(%ebp),%edx;");
    asm("loc_4CF4C1: jb loc_4CF4C8;");
    asm("loc_4CF4C3: mov $0x1F,%eax;");
    asm("loc_4CF4C8: mov %eax,%ecx;");
    asm("loc_4CF4CA: mov %ecx,%ebx;");
    asm("loc_4CF4CC: shr $2,%ecx;");
    asm("loc_4CF4CF: mov %edx,%edi;");
    asm("loc_4CF4D1: mov $_data_5D7978,%esi;");
    asm("loc_4CF4D6: rep movsl (%esi),(%edi);");
    asm("loc_4CF4D8: mov %ebx,%ecx;");
    asm("loc_4CF4DA: and $3,%ecx;");
    asm("loc_4CF4DD: rep movsb (%esi),(%edi);");
    asm("loc_4CF4DF: movb $0,(%eax,%edx);");
    asm("loc_4CF4E3: mov %eax,0x4C(%ebp);");
    asm("loc_4CF4E6: xor %esi,%esi;");
    asm("loc_4CF4E8: movl $_data_5D7978,0x48(%ebp);");
    asm("loc_4CF4EF: mov %esi,0x41C(%ebp);");
    asm("loc_4CF4F5: mov _data_5D7964,%eax;");
    asm("loc_4CF4FA: mov %eax,0x420(%ebp);");
    asm("loc_4CF500: mov %esi,0x438(%ebp);");
    asm("loc_4CF506: movb $0,0x43C(%ebp);");
    asm("loc_4CF50D: movl $0xFFFFFFFF,0x444(%ebp);");
    asm("loc_4CF517: mov %esi,0x440(%ebp);");
    asm("loc_4CF51D: call _sub_54BAF0;");
    asm("loc_4CF522: cmp %esi,%eax;");
    asm("loc_4CF524: pop %ebx;");
    asm("loc_4CF525: je loc_4CF55F;");
    asm("loc_4CF527: mov (%eax),%edx;");
    asm("loc_4CF529: mov %eax,%ecx;");
    asm("loc_4CF52B: calll *0x150(%edx);");
    asm("loc_4CF531: cmp %esi,%eax;");
    asm("loc_4CF533: je loc_4CF546;");
    asm("loc_4CF535: mov 0x4C(%eax),%ecx;");
    asm("loc_4CF538: and $0x503,%ecx;");
    asm("loc_4CF53E: cmp $0x503,%ecx;");
    asm("loc_4CF544: je loc_4CF548;");
    asm("loc_4CF546: xor %eax,%eax;");
    asm("loc_4CF548: push $0x80000;");
    asm("loc_4CF54D: lea 0xE4(%eax),%ecx;");
    asm("loc_4CF553: calll *_import_5C649C;");
    asm("loc_4CF559: mov %eax,0x440(%ebp);");
    asm("loc_4CF55F: push $_data_5D4DDC;");
    asm("loc_4CF564: call _sub_4177B0;");
    asm("loc_4CF569: push $_data_5D6B98;");
    asm("loc_4CF56E: mov %eax,0x44C(%ebp);");
    asm("loc_4CF574: call _sub_4177B0;");
    asm("loc_4CF579: mov 0x20(%esp),%ecx;");
    asm("loc_4CF57D: add $8,%esp;");
    asm("loc_4CF580: mov %esi,0x474(%ebp);");
    asm("loc_4CF586: mov %eax,0x450(%ebp);");
    asm("loc_4CF58C: pop %edi;");
    asm("loc_4CF58D: pop %esi;");
    asm("loc_4CF58E: mov %ebp,%eax;");
    asm("loc_4CF590: movb $0,_data_67494C;");
    asm("loc_4CF597: pop %ebp;");
    asm("loc_4CF598: mov %ecx,%fs:0;");
    asm("loc_4CF59F: add $0x18,%esp;");
    asm("loc_4CF5A2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CF5B0() // _sub_4CF5B0
{
    __DEBUG_ASM(4CF5B0);
    // chunk 0x4CF5B0 _sub_4CF5B0
    asm("loc_4CF5B0: push %esi;");
    asm("loc_4CF5B1: mov %ecx,%esi;");
    asm("loc_4CF5B3: call _sub_4CF5D0;");
    asm("loc_4CF5B8: testb $1,8(%esp);");
    asm("loc_4CF5BD: je loc_4CF5C8;");
    asm("loc_4CF5BF: push %esi;");
    asm("loc_4CF5C0: call _sub_5B7E1D;");
    asm("loc_4CF5C5: add $4,%esp;");
    asm("loc_4CF5C8: mov %esi,%eax;");
    asm("loc_4CF5CA: pop %esi;");
    asm("loc_4CF5CB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CF5D0() // _sub_4CF5D0
{
    __DEBUG_ASM(4CF5D0);
    // chunk 0x4CF5D0 _sub_4CF5D0
    asm("loc_4CF5D0: push $0xFFFFFFFF;");
    asm("loc_4CF5D2: push $_sub_5BDCF8;");
    asm("loc_4CF5D7: mov %fs:0,%eax;");
    asm("loc_4CF5DD: push %eax;");
    asm("loc_4CF5DE: mov %esp,%fs:0;");
    asm("loc_4CF5E5: sub $0x10,%esp;");
    asm("loc_4CF5E8: push %ebx;");
    asm("loc_4CF5E9: push %ebp;");
    asm("loc_4CF5EA: push %esi;");
    asm("loc_4CF5EB: mov %ecx,%ebp;");
    asm("loc_4CF5ED: push %edi;");
    asm("loc_4CF5EE: mov %ebp,0x18(%esp);");
    asm("loc_4CF5F2: mov 0x414(%ebp),%ebx;");
    asm("loc_4CF5F8: mov (%ebx),%esi;");
    asm("loc_4CF5FA: cmp %ebx,%esi;");
    asm("loc_4CF5FC: lea 0x410(%ebp),%edi;");
    asm("loc_4CF602: movl $2,0x28(%esp);");
    asm("loc_4CF60A: je loc_4CF625;");
    asm("loc_4CF60C: lea (%esp),%esp;");
    asm("loc_4CF610: mov %esi,%eax;");
    asm("loc_4CF612: mov (%esi),%esi;");
    asm("loc_4CF614: push %eax;");
    asm("loc_4CF615: lea 0x20(%esp),%eax;");
    asm("loc_4CF619: push %eax;");
    asm("loc_4CF61A: mov %edi,%ecx;");
    asm("loc_4CF61C: call _sub_4D4930;");
    asm("loc_4CF621: cmp %ebx,%esi;");
    asm("loc_4CF623: jne loc_4CF610;");
    asm("loc_4CF625: mov 4(%edi),%eax;");
    asm("loc_4CF628: push %eax;");
    asm("loc_4CF629: call _sub_5B7E1D;");
    asm("loc_4CF62E: xor %ebx,%ebx;");
    asm("loc_4CF630: add $4,%esp;");
    asm("loc_4CF633: cmp %ebx,%ebp;");
    asm("loc_4CF635: mov %ebx,4(%edi);");
    asm("loc_4CF638: mov %ebx,8(%edi);");
    asm("loc_4CF63B: movb $1,0x28(%esp);");
    asm("loc_4CF640: je loc_4CF64A;");
    asm("loc_4CF642: lea 0x364(%ebp),%ecx;");
    asm("loc_4CF648: jmp loc_4CF64C;");
    asm("loc_4CF64A: xor %ecx,%ecx;");
    asm("loc_4CF64C: call _sub_576010;");
    asm("loc_4CF651: cmp %ebx,%ebp;");
    asm("loc_4CF653: mov %bl,0x28(%esp);");
    asm("loc_4CF657: je loc_4CF65E;");
    asm("loc_4CF659: lea 0x38(%ebp),%ecx;");
    asm("loc_4CF65C: jmp loc_4CF660;");
    asm("loc_4CF65E: xor %ecx,%ecx;");
    asm("loc_4CF660: call _sub_59FA50;");
    asm("loc_4CF665: lea 0x28(%ebp),%ecx;");
    asm("loc_4CF668: movl $_off_5D6EAC,(%ebp);");
    asm("loc_4CF66F: cmp %ebx,(%ecx);");
    asm("loc_4CF671: movl $0xFFFFFFFF,0x28(%esp);");
    asm("loc_4CF679: je loc_4CF682;");
    asm("loc_4CF67B: push %ebx;");
    asm("loc_4CF67C: calll *_import_5C62A8;");
    asm("loc_4CF682: mov 0x20(%esp),%ecx;");
    asm("loc_4CF686: pop %edi;");
    asm("loc_4CF687: pop %esi;");
    asm("loc_4CF688: pop %ebp;");
    asm("loc_4CF689: pop %ebx;");
    asm("loc_4CF68A: mov %ecx,%fs:0;");
    asm("loc_4CF691: add $0x1C,%esp;");
    asm("loc_4CF694: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CF6A0() // _sub_4CF6A0
{
    __DEBUG_ASM(4CF6A0);
    // chunk 0x4CF6A0 _sub_4CF6A0
    asm("loc_4CF6A0: sub $0x128,%esp;");
    asm("loc_4CF6A6: push %ebx;");
    asm("loc_4CF6A7: push %ebp;");
    asm("loc_4CF6A8: push %esi;");
    asm("loc_4CF6A9: push %edi;");
    asm("loc_4CF6AA: mov %ecx,%ebp;");
    asm("loc_4CF6AC: mov $_off_612438,%esi;");
    asm("loc_4CF6B1: mov (%esi),%eax;");
    asm("loc_4CF6B3: push $0;");
    asm("loc_4CF6B5: push %eax;");
    asm("loc_4CF6B6: mov $_data_67DCF4,%ecx;");
    asm("loc_4CF6BB: call _sub_59E980;");
    asm("loc_4CF6C0: add $4,%esi;");
    asm("loc_4CF6C3: cmp $_data_612478,%esi;");
    asm("loc_4CF6C9: jl loc_4CF6B1;");
    asm("loc_4CF6CB: push $1;");
    asm("loc_4CF6CD: push $0;");
    asm("loc_4CF6CF: push $1;");
    asm("loc_4CF6D1: push $0x60D;");
    asm("loc_4CF6D6: push $0x3FD9999A;");
    asm("loc_4CF6DB: push $0x3C75C28F;");
    asm("loc_4CF6E0: push $0x3E89BA5E;");
    asm("loc_4CF6E5: push $0;");
    asm("loc_4CF6E7: lea 0x30(%esp),%ecx;");
    asm("loc_4CF6EB: push %ecx;");
    asm("loc_4CF6EC: push $_data_5CE91C;");
    asm("loc_4CF6F1: push $_data_5D7BE0;");
    asm("loc_4CF6F6: mov %ebp,%ecx;");
    asm("loc_4CF6F8: movl $0xBE418937,0x3C(%esp);");
    asm("loc_4CF700: movl $0x3D3020C5,0x40(%esp);");
    asm("loc_4CF708: movl $0,0x44(%esp);");
    asm("loc_4CF710: call _sub_5A0E30;");
    asm("loc_4CF715: mov _import_5C71E8,%ebx;");
    asm("loc_4CF71B: mov %eax,0x410(%ebp);");
    asm("loc_4CF721: mov 0x6C(%eax),%cl;");
    asm("loc_4CF724: and $0xFC,%cl;");
    asm("loc_4CF727: xor %edi,%edi;");
    asm("loc_4CF729: mov %cl,0x6C(%eax);");
    asm("loc_4CF72C: mov %edi,0x1C(%esp);");
    asm("loc_4CF730: lea 0x3B4(%ebp),%esi;");
    asm("loc_4CF736: push %edi;");
    asm("loc_4CF737: push $_data_5D7BC8;");
    asm("loc_4CF73C: lea 0x40(%esp),%edx;");
    asm("loc_4CF740: push $0x100;");
    asm("loc_4CF745: push %edx;");
    asm("loc_4CF746: call *%ebx;");
    asm("loc_4CF748: fildl 0x2C(%esp);");
    asm("loc_4CF74C: add $0x10,%esp;");
    asm("loc_4CF74F: push $0;");
    asm("loc_4CF751: fmuls _data_5D3EE8;");
    asm("loc_4CF757: push $0;");
    asm("loc_4CF759: push $1;");
    asm("loc_4CF75B: push $0;");
    asm("loc_4CF75D: fsubrs _data_5D7BC4;");
    asm("loc_4CF763: push $0x3F666666;");
    asm("loc_4CF768: push $0x3C75C28F;");
    asm("loc_4CF76D: push $0x3D3020C5;");
    asm("loc_4CF772: push $0;");
    asm("loc_4CF774: fsts 0x3C(%esp);");
    asm("loc_4CF778: fadds _data_5D7BC0;");
    asm("loc_4CF77E: lea 0x40(%esp),%eax;");
    asm("loc_4CF782: push %eax;");
    asm("loc_4CF783: push $_data_5D4DDC;");
    asm("loc_4CF788: lea 0x60(%esp),%ecx;");
    asm("loc_4CF78C: fstps 0x4C(%esp);");
    asm("loc_4CF790: push %ecx;");
    asm("loc_4CF791: mov %ebp,%ecx;");
    asm("loc_4CF793: movl $0xBE010625,0x4C(%esp);");
    asm("loc_4CF79B: movl $0,0x54(%esp);");
    asm("loc_4CF7A3: call _sub_5A0E30;");
    asm("loc_4CF7A8: push $0;");
    asm("loc_4CF7AA: push $1;");
    asm("loc_4CF7AC: mov %eax,-0x20(%esi);");
    asm("loc_4CF7AF: mov (%eax),%edx;");
    asm("loc_4CF7B1: push $0x24;");
    asm("loc_4CF7B3: mov %eax,%ecx;");
    asm("loc_4CF7B5: calll *0xA8(%edx);");
    asm("loc_4CF7BB: push %edi;");
    asm("loc_4CF7BC: push $_data_5D7BA8;");
    asm("loc_4CF7C1: lea 0x40(%esp),%eax;");
    asm("loc_4CF7C5: push $0x100;");
    asm("loc_4CF7CA: push %eax;");
    asm("loc_4CF7CB: call *%ebx;");
    asm("loc_4CF7CD: flds 0x2C(%esp);");
    asm("loc_4CF7D1: mov _data_5D7960,%ecx;");
    asm("loc_4CF7D7: fadds _data_5D1F04;");
    asm("loc_4CF7DD: mov _data_5D795C,%edx;");
    asm("loc_4CF7E3: add $0x10,%esp;");
    asm("loc_4CF7E6: push $1;");
    asm("loc_4CF7E8: fstps 0x18(%esp);");
    asm("loc_4CF7EC: push $0;");
    asm("loc_4CF7EE: push $0;");
    asm("loc_4CF7F0: push $0;");
    asm("loc_4CF7F2: push %ecx;");
    asm("loc_4CF7F3: push $0x3C9374BC;");
    asm("loc_4CF7F8: push %edx;");
    asm("loc_4CF7F9: push $0;");
    asm("loc_4CF7FB: lea 0x30(%esp),%eax;");
    asm("loc_4CF7FF: push %eax;");
    asm("loc_4CF800: push $_data_5D4DDC;");
    asm("loc_4CF805: lea 0x60(%esp),%ecx;");
    asm("loc_4CF809: push %ecx;");
    asm("loc_4CF80A: mov %ebp,%ecx;");
    asm("loc_4CF80C: movl $0xBDDB22D1,0x3C(%esp);");
    asm("loc_4CF814: movl $0,0x44(%esp);");
    asm("loc_4CF81C: call _sub_5A0E30;");
    asm("loc_4CF821: mov 0x10(%esp),%edx;");
    asm("loc_4CF825: mov %eax,(%esi);");
    asm("loc_4CF827: add $0x2D4,%eax;");
    asm("loc_4CF82C: mov %edx,(%eax);");
    asm("loc_4CF82E: mov 0x14(%esp),%ecx;");
    asm("loc_4CF832: mov %ecx,4(%eax);");
    asm("loc_4CF835: mov 0x18(%esp),%edx;");
    asm("loc_4CF839: push $0;");
    asm("loc_4CF83B: mov %edx,8(%eax);");
    asm("loc_4CF83E: mov (%esi),%ecx;");
    asm("loc_4CF840: mov (%ecx),%eax;");
    asm("loc_4CF842: push $1;");
    asm("loc_4CF844: push $0x24;");
    asm("loc_4CF846: calll *0xA8(%eax);");
    asm("loc_4CF84C: push $1;");
    asm("loc_4CF84E: mov (%esi),%ecx;");
    asm("loc_4CF850: call _sub_58B770;");
    asm("loc_4CF855: inc %edi;");
    asm("loc_4CF856: add $4,%esi;");
    asm("loc_4CF859: cmp $8,%edi;");
    asm("loc_4CF85C: mov %edi,0x1C(%esp);");
    asm("loc_4CF860: jl loc_4CF736;");
    asm("loc_4CF866: xor %esi,%esi;");
    asm("loc_4CF868: mov %esi,0x1C(%esp);");
    asm("loc_4CF86C: lea 0x374(%ebp),%edi;");
    asm("loc_4CF872: push %esi;");
    asm("loc_4CF873: push $_data_5D7B94;");
    asm("loc_4CF878: lea 0x40(%esp),%ecx;");
    asm("loc_4CF87C: push $0x100;");
    asm("loc_4CF881: push %ecx;");
    asm("loc_4CF882: call *%ebx;");
    asm("loc_4CF884: fildl 0x2C(%esp);");
    asm("loc_4CF888: add $0x10,%esp;");
    asm("loc_4CF88B: push $0;");
    asm("loc_4CF88D: fmuls _data_5D3EE8;");
    asm("loc_4CF893: push $0;");
    asm("loc_4CF895: push $1;");
    asm("loc_4CF897: push $0;");
    asm("loc_4CF899: fsubrs _data_5D7B90;");
    asm("loc_4CF89F: push $0;");
    asm("loc_4CF8A1: push $1;");
    asm("loc_4CF8A3: push $0;");
    asm("loc_4CF8A5: lea 0x3C(%esp),%edx;");
    asm("loc_4CF8A9: fstps 0x30(%esp);");
    asm("loc_4CF8AD: push %edx;");
    asm("loc_4CF8AE: push $0;");
    asm("loc_4CF8B0: lea 0x34(%esp),%eax;");
    asm("loc_4CF8B4: push %eax;");
    asm("loc_4CF8B5: push $0;");
    asm("loc_4CF8B7: push $_data_5CED30;");
    asm("loc_4CF8BC: push $0;");
    asm("loc_4CF8BE: push $_data_5D7B68;");
    asm("loc_4CF8C3: lea 0x70(%esp),%ecx;");
    asm("loc_4CF8C7: push %ecx;");
    asm("loc_4CF8C8: mov %ebp,%ecx;");
    asm("loc_4CF8CA: movl $0x3BC49BA6,0x5C(%esp);");
    asm("loc_4CF8D2: movl $0x3BC49BA6,0x60(%esp);");
    asm("loc_4CF8DA: movl $0,0x64(%esp);");
    asm("loc_4CF8E2: movl $0xBE2E147B,0x4C(%esp);");
    asm("loc_4CF8EA: movl $0,0x54(%esp);");
    asm("loc_4CF8F2: call _sub_5A0C90;");
    asm("loc_4CF8F7: inc %esi;");
    asm("loc_4CF8F8: mov %eax,(%edi);");
    asm("loc_4CF8FA: add $4,%edi;");
    asm("loc_4CF8FD: cmp $8,%esi;");
    asm("loc_4CF900: mov %esi,0x1C(%esp);");
    asm("loc_4CF904: jl loc_4CF872;");
    asm("loc_4CF90A: push $0;");
    asm("loc_4CF90C: push $0;");
    asm("loc_4CF90E: push $0x623;");
    asm("loc_4CF913: push $0;");
    asm("loc_4CF915: push $0;");
    asm("loc_4CF917: push $1;");
    asm("loc_4CF919: push $0;");
    asm("loc_4CF91B: lea 0x3C(%esp),%edx;");
    asm("loc_4CF91F: push %edx;");
    asm("loc_4CF920: push $0;");
    asm("loc_4CF922: lea 0x34(%esp),%eax;");
    asm("loc_4CF926: push %eax;");
    asm("loc_4CF927: push $0;");
    asm("loc_4CF929: push $_data_5D13A0;");
    asm("loc_4CF92E: push $0;");
    asm("loc_4CF930: push $_data_5D7B40;");
    asm("loc_4CF935: push $_data_5D7B28;");
    asm("loc_4CF93A: mov %ebp,%ecx;");
    asm("loc_4CF93C: movl $0x3C656042,0x5C(%esp);");
    asm("loc_4CF944: movl $0x3C656042,0x60(%esp);");
    asm("loc_4CF94C: movl $0,0x64(%esp);");
    asm("loc_4CF954: movl $0xBE03126F,0x4C(%esp);");
    asm("loc_4CF95C: movl $0x3CC49BA6,0x50(%esp);");
    asm("loc_4CF964: movl $0,0x54(%esp);");
    asm("loc_4CF96C: call _sub_5A0C90;");
    asm("loc_4CF971: push $0;");
    asm("loc_4CF973: push $0;");
    asm("loc_4CF975: push $0x4FC;");
    asm("loc_4CF97A: push $0;");
    asm("loc_4CF97C: push $0;");
    asm("loc_4CF97E: push $1;");
    asm("loc_4CF980: push $0;");
    asm("loc_4CF982: lea 0x3C(%esp),%ecx;");
    asm("loc_4CF986: push %ecx;");
    asm("loc_4CF987: push $0;");
    asm("loc_4CF989: lea 0x34(%esp),%edx;");
    asm("loc_4CF98D: push %edx;");
    asm("loc_4CF98E: push $0;");
    asm("loc_4CF990: push $_data_5D13A0;");
    asm("loc_4CF995: push $0;");
    asm("loc_4CF997: push $_data_5D7930;");
    asm("loc_4CF99C: push $_data_5D7B14;");
    asm("loc_4CF9A1: mov %ebp,%ecx;");
    asm("loc_4CF9A3: mov %eax,0x3EC(%ebp);");
    asm("loc_4CF9A9: movl $0x3C656042,0x5C(%esp);");
    asm("loc_4CF9B1: movl $0x3C656042,0x60(%esp);");
    asm("loc_4CF9B9: movl $0,0x64(%esp);");
    asm("loc_4CF9C1: movl $0xBDC08312,0x4C(%esp);");
    asm("loc_4CF9C9: movl $0x3CC49BA6,0x50(%esp);");
    asm("loc_4CF9D1: movl $0,0x54(%esp);");
    asm("loc_4CF9D9: call _sub_5A0C90;");
    asm("loc_4CF9DE: push $0;");
    asm("loc_4CF9E0: push $0;");
    asm("loc_4CF9E2: push $0x4FD;");
    asm("loc_4CF9E7: push $0;");
    asm("loc_4CF9E9: push $0;");
    asm("loc_4CF9EB: push $1;");
    asm("loc_4CF9ED: push $0;");
    asm("loc_4CF9EF: mov %eax,0x3F0(%ebp);");
    asm("loc_4CF9F5: lea 0x3C(%esp),%eax;");
    asm("loc_4CF9F9: push %eax;");
    asm("loc_4CF9FA: push $0;");
    asm("loc_4CF9FC: lea 0x34(%esp),%ecx;");
    asm("loc_4CFA00: push %ecx;");
    asm("loc_4CFA01: push $0;");
    asm("loc_4CFA03: push $_data_5D13A0;");
    asm("loc_4CFA08: push $0;");
    asm("loc_4CFA0A: push $_data_5D78E4;");
    asm("loc_4CFA0F: push $_data_5D7B00;");
    asm("loc_4CFA14: mov %ebp,%ecx;");
    asm("loc_4CFA16: movl $0x3C656042,0x5C(%esp);");
    asm("loc_4CFA1E: movl $0x3C656042,0x60(%esp);");
    asm("loc_4CFA26: movl $0,0x64(%esp);");
    asm("loc_4CFA2E: movl $0xBD75C28F,0x4C(%esp);");
    asm("loc_4CFA36: movl $0x3CC49BA6,0x50(%esp);");
    asm("loc_4CFA3E: movl $0,0x54(%esp);");
    asm("loc_4CFA46: call _sub_5A0C90;");
    asm("loc_4CFA4B: mov %eax,0x3F4(%ebp);");
    asm("loc_4CFA51: movl $0x3C656042,0x20(%esp);");
    asm("loc_4CFA59: movl $0x3C656042,0x24(%esp);");
    asm("loc_4CFA61: movl $0,0x28(%esp);");
    asm("loc_4CFA69: push $0;");
    asm("loc_4CFA6B: push $0;");
    asm("loc_4CFA6D: push $0x520;");
    asm("loc_4CFA72: push $0;");
    asm("loc_4CFA74: push $0;");
    asm("loc_4CFA76: push $1;");
    asm("loc_4CFA78: push $0;");
    asm("loc_4CFA7A: lea 0x3C(%esp),%edx;");
    asm("loc_4CFA7E: push %edx;");
    asm("loc_4CFA7F: push $0;");
    asm("loc_4CFA81: lea 0x34(%esp),%eax;");
    asm("loc_4CFA85: push %eax;");
    asm("loc_4CFA86: push $0;");
    asm("loc_4CFA88: push $_data_5D13A0;");
    asm("loc_4CFA8D: push $0;");
    asm("loc_4CFA8F: push $_data_5D77AC;");
    asm("loc_4CFA94: push $_data_5D7AEC;");
    asm("loc_4CFA99: mov %ebp,%ecx;");
    asm("loc_4CFA9B: movl $0xBCD4FDF4,0x4C(%esp);");
    asm("loc_4CFAA3: movl $0x3CC49BA6,0x50(%esp);");
    asm("loc_4CFAAB: movl $0,0x54(%esp);");
    asm("loc_4CFAB3: call _sub_5A0C90;");
    asm("loc_4CFAB8: push $0;");
    asm("loc_4CFABA: push $0;");
    asm("loc_4CFABC: push $0x624;");
    asm("loc_4CFAC1: push $0;");
    asm("loc_4CFAC3: push $0;");
    asm("loc_4CFAC5: push $1;");
    asm("loc_4CFAC7: push $0;");
    asm("loc_4CFAC9: lea 0x3C(%esp),%ecx;");
    asm("loc_4CFACD: push %ecx;");
    asm("loc_4CFACE: push $0;");
    asm("loc_4CFAD0: lea 0x34(%esp),%edx;");
    asm("loc_4CFAD4: push %edx;");
    asm("loc_4CFAD5: push $0;");
    asm("loc_4CFAD7: push $_data_5D13A0;");
    asm("loc_4CFADC: push $0;");
    asm("loc_4CFADE: push $_data_5D7AC8;");
    asm("loc_4CFAE3: push $_data_5D7AB8;");
    asm("loc_4CFAE8: mov %ebp,%ecx;");
    asm("loc_4CFAEA: mov %eax,0x3F8(%ebp);");
    asm("loc_4CFAF0: movl $0x3C656042,0x5C(%esp);");
    asm("loc_4CFAF8: movl $0x3C656042,0x60(%esp);");
    asm("loc_4CFB00: movl $0,0x64(%esp);");
    asm("loc_4CFB08: movl $0x3C03126F,0x4C(%esp);");
    asm("loc_4CFB10: movl $0x3CC49BA6,0x50(%esp);");
    asm("loc_4CFB18: movl $0,0x54(%esp);");
    asm("loc_4CFB20: call _sub_5A0C90;");
    asm("loc_4CFB25: mov %eax,0x3FC(%ebp);");
    asm("loc_4CFB2B: mov (%eax),%esi;");
    asm("loc_4CFB2D: push $0;");
    asm("loc_4CFB2F: calll *_import_5C60D0;");
    asm("loc_4CFB35: mov 0x3FC(%ebp),%ecx;");
    asm("loc_4CFB3B: movzbl %al,%eax;");
    asm("loc_4CFB3E: push %eax;");
    asm("loc_4CFB3F: push $1;");
    asm("loc_4CFB41: calll *0xA8(%esi);");
    asm("loc_4CFB47: push $0;");
    asm("loc_4CFB49: push $8;");
    asm("loc_4CFB4B: push $5;");
    asm("loc_4CFB4D: push $0;");
    asm("loc_4CFB4F: push $0x3DF1A9FC;");
    asm("loc_4CFB54: push $0x3C83126F;");
    asm("loc_4CFB59: lea 0x38(%esp),%ecx;");
    asm("loc_4CFB5D: push %ecx;");
    asm("loc_4CFB5E: push $_data_5D7AA4;");
    asm("loc_4CFB63: mov %ebp,%ecx;");
    asm("loc_4CFB65: movl $0xBE88B439,0x40(%esp);");
    asm("loc_4CFB6D: movl $0xBE6F9DB2,0x44(%esp);");
    asm("loc_4CFB75: movl $0xBF800000,0x48(%esp);");
    asm("loc_4CFB7D: call _sub_5A17E0;");
    asm("loc_4CFB82: mov (%ebp),%edx;");
    asm("loc_4CFB85: mov %eax,0x3D4(%ebp);");
    asm("loc_4CFB8B: sub $0xC,%esp;");
    asm("loc_4CFB8E: movl $0xBEA56042,0x1C(%esp);");
    asm("loc_4CFB96: mov 0x1C(%esp),%ecx;");
    asm("loc_4CFB9A: mov %esp,%eax;");
    asm("loc_4CFB9C: movl $0xBE76C8B4,0x20(%esp);");
    asm("loc_4CFBA4: mov %ecx,(%eax);");
    asm("loc_4CFBA6: mov 0x20(%esp),%ecx;");
    asm("loc_4CFBAA: movl $0xBF800000,0x24(%esp);");
    asm("loc_4CFBB2: mov %ecx,4(%eax);");
    asm("loc_4CFBB5: mov 0x24(%esp),%ecx;");
    asm("loc_4CFBB9: mov %ecx,8(%eax);");
    asm("loc_4CFBBC: mov %ebp,%ecx;");
    asm("loc_4CFBBE: calll *0x7C(%edx);");
    asm("loc_4CFBC1: mov (%ebp),%edx;");
    asm("loc_4CFBC4: lea 0x60(%ebp),%eax;");
    asm("loc_4CFBC7: push %eax;");
    asm("loc_4CFBC8: mov %ebp,%ecx;");
    asm("loc_4CFBCA: calll *0x14(%edx);");
    asm("loc_4CFBCD: push $1;");
    asm("loc_4CFBCF: mov %ebp,%ecx;");
    asm("loc_4CFBD1: call _sub_5A0C30;");
    asm("loc_4CFBD6: movl $0x1D,0x10(%esp);");
    asm("loc_4CFBDE: movl $0x1E,0x14(%esp);");
    asm("loc_4CFBE6: xor %esi,%esi;");
    asm("loc_4CFBE8: lea 0x32C(%ebp),%edi;");
    asm("loc_4CFBEE: mov %edi,%edi;");
    asm("loc_4CFBF0: mov 0x10(%esp,%esi,4),%ecx;");
    asm("loc_4CFBF4: push %ecx;");
    asm("loc_4CFBF5: mov %edi,%ecx;");
    asm("loc_4CFBF7: call _sub_5760D0;");
    asm("loc_4CFBFC: inc %esi;");
    asm("loc_4CFBFD: cmp $2,%esi;");
    asm("loc_4CFC00: jb loc_4CFBF0;");
    asm("loc_4CFC02: mov $_off_612438,%esi;");
    asm("loc_4CFC07: lea 0x330(%ebp),%edx;");
    asm("loc_4CFC0D: mov %esi,0x1C(%esp);");
    asm("loc_4CFC11: mov %edx,0x30(%esp);");
    asm("loc_4CFC15: mov (%esi),%edi;");
    asm("loc_4CFC17: mov 0x2F(%esp),%al;");
    asm("loc_4CFC1B: sub $0x10,%esp;");
    asm("loc_4CFC1E: mov %esp,%ebx;");
    asm("loc_4CFC20: xor %edx,%edx;");
    asm("loc_4CFC22: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CFC25: mov %al,(%ebx);");
    asm("loc_4CFC27: xor %eax,%eax;");
    asm("loc_4CFC29: mov %edi,0x44(%esp);");
    asm("loc_4CFC2D: mov %edx,4(%ebx);");
    asm("loc_4CFC30: mov %edx,8(%ebx);");
    asm("loc_4CFC33: mov %edx,0xC(%ebx);");
    asm("loc_4CFC36: repne scas (%edi),%al;");
    asm("loc_4CFC38: not %ecx;");
    asm("loc_4CFC3A: dec %ecx;");
    asm("loc_4CFC3B: mov %ecx,%edi;");
    asm("loc_4CFC3D: cmp $0xFFFFFFFD,%edi;");
    asm("loc_4CFC40: mov %esp,0x20(%esp);");
    asm("loc_4CFC44: mov %edi,0x20(%esp);");
    asm("loc_4CFC48: jbe loc_4CFC52;");
    asm("loc_4CFC4A: calll *_import_5C7070;");
    asm("loc_4CFC50: xor %edx,%edx;");
    asm("loc_4CFC52: mov 4(%ebx),%eax;");
    asm("loc_4CFC55: cmp %edx,%eax;");
    asm("loc_4CFC57: je loc_4CFC79;");
    asm("loc_4CFC59: mov -1(%eax),%cl;");
    asm("loc_4CFC5C: test %cl,%cl;");
    asm("loc_4CFC5E: je loc_4CFC79;");
    asm("loc_4CFC60: cmp $0xFF,%cl;");
    asm("loc_4CFC63: je loc_4CFC79;");
    asm("loc_4CFC65: cmp %edx,%edi;");
    asm("loc_4CFC67: jne loc_4CFC9F;");
    asm("loc_4CFC69: dec %cl;");
    asm("loc_4CFC6B: mov %cl,-1(%eax);");
    asm("loc_4CFC6E: push %edx;");
    asm("loc_4CFC6F: mov %ebx,%ecx;");
    asm("loc_4CFC71: calll *_import_5C7084;");
    asm("loc_4CFC77: jmp loc_4CFCD1;");
    asm("loc_4CFC79: cmp %edx,%edi;");
    asm("loc_4CFC7B: jne loc_4CFC89;");
    asm("loc_4CFC7D: push $1;");
    asm("loc_4CFC7F: mov %ebx,%ecx;");
    asm("loc_4CFC81: calll *_import_5C7084;");
    asm("loc_4CFC87: jmp loc_4CFCD1;");
    asm("loc_4CFC89: mov 0xC(%ebx),%eax;");
    asm("loc_4CFC8C: cmp $0x1F,%eax;");
    asm("loc_4CFC8F: ja loc_4CFC95;");
    asm("loc_4CFC91: cmp %edi,%eax;");
    asm("loc_4CFC93: jae loc_4CFCA8;");
    asm("loc_4CFC95: push $1;");
    asm("loc_4CFC97: mov %ebx,%ecx;");
    asm("loc_4CFC99: calll *_import_5C7084;");
    asm("loc_4CFC9F: mov %ebx,%ecx;");
    asm("loc_4CFCA1: push %edi;");
    asm("loc_4CFCA2: calll *_import_5C7074;");
    asm("loc_4CFCA8: mov 0x44(%esp),%esi;");
    asm("loc_4CFCAC: mov 0x20(%esp),%eax;");
    asm("loc_4CFCB0: mov %edi,%ecx;");
    asm("loc_4CFCB2: mov 4(%ebx),%edi;");
    asm("loc_4CFCB5: mov %ecx,%edx;");
    asm("loc_4CFCB7: shr $2,%ecx;");
    asm("loc_4CFCBA: rep movsl (%esi),(%edi);");
    asm("loc_4CFCBC: mov %edx,%ecx;");
    asm("loc_4CFCBE: and $3,%ecx;");
    asm("loc_4CFCC1: rep movsb (%esi),(%edi);");
    asm("loc_4CFCC3: mov 4(%ebx),%ecx;");
    asm("loc_4CFCC6: mov 0x2C(%esp),%esi;");
    asm("loc_4CFCCA: mov %eax,8(%ebx);");
    asm("loc_4CFCCD: movb $0,(%eax,%ecx);");
    asm("loc_4CFCD1: call _sub_55A360;");
    asm("loc_4CFCD6: mov 0x40(%esp),%ecx;");
    asm("loc_4CFCDA: add $4,%esi;");
    asm("loc_4CFCDD: mov %eax,(%ecx);");
    asm("loc_4CFCDF: add $4,%ecx;");
    asm("loc_4CFCE2: add $0x10,%esp;");
    asm("loc_4CFCE5: cmp $_data_612478,%esi;");
    asm("loc_4CFCEB: mov %esi,0x1C(%esp);");
    asm("loc_4CFCEF: mov %ecx,0x30(%esp);");
    asm("loc_4CFCF3: jl loc_4CFC15;");
    asm("loc_4CFCF9: mov 0x2F(%esp),%dl;");
    asm("loc_4CFCFD: sub $0x10,%esp;");
    asm("loc_4CFD00: xor %esi,%esi;");
    asm("loc_4CFD02: mov %esp,%ebx;");
    asm("loc_4CFD04: or $0xFFFFFFFF,%ecx;");
    asm("loc_4CFD07: xor %eax,%eax;");
    asm("loc_4CFD09: mov $_data_5D7A88,%edi;");
    asm("loc_4CFD0E: mov %dl,(%ebx);");
    asm("loc_4CFD10: mov %esi,4(%ebx);");
    asm("loc_4CFD13: mov %esi,8(%ebx);");
    asm("loc_4CFD16: mov %esi,0xC(%ebx);");
    asm("loc_4CFD19: repne scas (%edi),%al;");
    asm("loc_4CFD1B: not %ecx;");
    asm("loc_4CFD1D: dec %ecx;");
    asm("loc_4CFD1E: mov %ecx,%edi;");
    asm("loc_4CFD20: cmp $0xFFFFFFFD,%edi;");
    asm("loc_4CFD23: mov %esp,0x20(%esp);");
    asm("loc_4CFD27: mov %edi,0x20(%esp);");
    asm("loc_4CFD2B: jbe loc_4CFD33;");
    asm("loc_4CFD2D: calll *_import_5C7070;");
    asm("loc_4CFD33: mov 4(%ebx),%eax;");
    asm("loc_4CFD36: cmp %esi,%eax;");
    asm("loc_4CFD38: je loc_4CFD5A;");
    asm("loc_4CFD3A: mov -1(%eax),%cl;");
    asm("loc_4CFD3D: test %cl,%cl;");
    asm("loc_4CFD3F: je loc_4CFD5A;");
    asm("loc_4CFD41: cmp $0xFF,%cl;");
    asm("loc_4CFD44: je loc_4CFD5A;");
    asm("loc_4CFD46: cmp %esi,%edi;");
    asm("loc_4CFD48: jne loc_4CFD80;");
    asm("loc_4CFD4A: dec %cl;");
    asm("loc_4CFD4C: mov %cl,-1(%eax);");
    asm("loc_4CFD4F: push %esi;");
    asm("loc_4CFD50: mov %ebx,%ecx;");
    asm("loc_4CFD52: calll *_import_5C7084;");
    asm("loc_4CFD58: jmp loc_4CFDAF;");
    asm("loc_4CFD5A: cmp %esi,%edi;");
    asm("loc_4CFD5C: jne loc_4CFD6A;");
    asm("loc_4CFD5E: push $1;");
    asm("loc_4CFD60: mov %ebx,%ecx;");
    asm("loc_4CFD62: calll *_import_5C7084;");
    asm("loc_4CFD68: jmp loc_4CFDAF;");
    asm("loc_4CFD6A: mov 0xC(%ebx),%eax;");
    asm("loc_4CFD6D: cmp $0x1F,%eax;");
    asm("loc_4CFD70: ja loc_4CFD76;");
    asm("loc_4CFD72: cmp %edi,%eax;");
    asm("loc_4CFD74: jae loc_4CFD89;");
    asm("loc_4CFD76: push $1;");
    asm("loc_4CFD78: mov %ebx,%ecx;");
    asm("loc_4CFD7A: calll *_import_5C7084;");
    asm("loc_4CFD80: mov %ebx,%ecx;");
    asm("loc_4CFD82: push %edi;");
    asm("loc_4CFD83: calll *_import_5C7074;");
    asm("loc_4CFD89: mov %edi,%ecx;");
    asm("loc_4CFD8B: mov 4(%ebx),%edi;");
    asm("loc_4CFD8E: mov %ecx,%eax;");
    asm("loc_4CFD90: shr $2,%ecx;");
    asm("loc_4CFD93: mov $_data_5D7A88,%esi;");
    asm("loc_4CFD98: rep movsl (%esi),(%edi);");
    asm("loc_4CFD9A: mov %eax,%ecx;");
    asm("loc_4CFD9C: mov 0x20(%esp),%eax;");
    asm("loc_4CFDA0: and $3,%ecx;");
    asm("loc_4CFDA3: rep movsb (%esi),(%edi);");
    asm("loc_4CFDA5: mov 4(%ebx),%ecx;");
    asm("loc_4CFDA8: mov %eax,8(%ebx);");
    asm("loc_4CFDAB: movb $0,(%eax,%ecx);");
    asm("loc_4CFDAF: call _sub_55A360;");
    asm("loc_4CFDB4: mov 0x150(%esp),%edx;");
    asm("loc_4CFDBB: add $0x10,%esp;");
    asm("loc_4CFDBE: mov %eax,0x370(%ebp);");
    asm("loc_4CFDC4: mov 0x13C(%esp),%eax;");
    asm("loc_4CFDCB: push %edx;");
    asm("loc_4CFDCC: push %eax;");
    asm("loc_4CFDCD: mov %ebp,%ecx;");
    asm("loc_4CFDCF: call _sub_4B5060;");
    asm("loc_4CFDD4: pop %edi;");
    asm("loc_4CFDD5: pop %esi;");
    asm("loc_4CFDD6: test %al,%al;");
    asm("loc_4CFDD8: pop %ebp;");
    asm("loc_4CFDD9: setne %al;");
    asm("loc_4CFDDC: pop %ebx;");
    asm("loc_4CFDDD: add $0x128,%esp;");
    asm("loc_4CFDE3: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CFDF0() // _sub_4CFDF0
{
    __DEBUG_ASM(4CFDF0);
    // chunk 0x4CFDF0 _sub_4CFDF0
    asm("loc_4CFDF0: mov 4(%esp),%eax;");
    asm("loc_4CFDF4: sub $0x26,%eax;");
    asm("loc_4CFDF7: push %esi;");
    asm("loc_4CFDF8: mov %ecx,%esi;");
    asm("loc_4CFDFA: je loc_4CFE8E;");
    asm("loc_4CFE00: dec %eax;");
    asm("loc_4CFE01: je loc_4CFE2D;");
    asm("loc_4CFE03: sub $0x17,%eax;");
    asm("loc_4CFE06: jne loc_4CFE27;");
    asm("loc_4CFE08: call _sub_45A740;");
    asm("loc_4CFE0D: test %al,%al;");
    asm("loc_4CFE0F: jne loc_4CFE27;");
    asm("loc_4CFE11: mov 0xC(%esp),%eax;");
    asm("loc_4CFE15: cmp 0x3D4(%esi),%eax;");
    asm("loc_4CFE1B: jne loc_4CFE27;");
    asm("loc_4CFE1D: mov 0x10(%esp),%ecx;");
    asm("loc_4CFE21: mov %ecx,0x3E4(%esi);");
    asm("loc_4CFE27: xor %eax,%eax;");
    asm("loc_4CFE29: pop %esi;");
    asm("loc_4CFE2A: ret $0xC;");
    asm("loc_4CFE2D: mov 0xC(%esp),%edx;");
    asm("loc_4CFE31: xor %ecx,%ecx;");
    asm("loc_4CFE33: lea 0x394(%esi),%eax;");
    asm("loc_4CFE39: lea (%esp),%esp;");
    asm("loc_4CFE40: cmp -0x20(%eax),%edx;");
    asm("loc_4CFE43: je loc_4CFE5D;");
    asm("loc_4CFE45: cmp (%eax),%edx;");
    asm("loc_4CFE47: je loc_4CFE5D;");
    asm("loc_4CFE49: cmp 0x20(%eax),%edx;");
    asm("loc_4CFE4C: je loc_4CFE5D;");
    asm("loc_4CFE4E: inc %ecx;");
    asm("loc_4CFE4F: add $4,%eax;");
    asm("loc_4CFE52: cmp $8,%ecx;");
    asm("loc_4CFE55: jl loc_4CFE40;");
    asm("loc_4CFE57: xor %eax,%eax;");
    asm("loc_4CFE59: pop %esi;");
    asm("loc_4CFE5A: ret $0xC;");
    asm("loc_4CFE5D: mov 0x3E4(%esi),%edx;");
    asm("loc_4CFE63: add %ecx,%edx;");
    asm("loc_4CFE65: push %edx;");
    asm("loc_4CFE66: lea -0x38(%esi),%ecx;");
    asm("loc_4CFE69: call _sub_4CFFA0;");
    asm("loc_4CFE6E: mov _data_674B04,%ecx;");
    asm("loc_4CFE74: push $1;");
    asm("loc_4CFE76: call _sub_4E5460;");
    asm("loc_4CFE7B: push $0;");
    asm("loc_4CFE7D: call _sub_5645C0;");
    asm("loc_4CFE82: add $4,%esp;");
    asm("loc_4CFE85: mov $1,%eax;");
    asm("loc_4CFE8A: pop %esi;");
    asm("loc_4CFE8B: ret $0xC;");
    asm("loc_4CFE8E: call _sub_45A740;");
    asm("loc_4CFE93: test %al,%al;");
    asm("loc_4CFE95: jne loc_4CFE27;");
    asm("loc_4CFE97: mov 0xC(%esp),%edx;");
    asm("loc_4CFE9B: cmp 0x3EC(%esi),%edx;");
    asm("loc_4CFEA1: jne loc_4CFEBD;");
    asm("loc_4CFEA3: movl $0,0x400(%esi);");
    asm("loc_4CFEAD: movb $1,0x404(%esi);");
    asm("loc_4CFEB4: mov $1,%eax;");
    asm("loc_4CFEB9: pop %esi;");
    asm("loc_4CFEBA: ret $0xC;");
    asm("loc_4CFEBD: cmp 0x3F0(%esi),%edx;");
    asm("loc_4CFEC3: jne loc_4CFEDF;");
    asm("loc_4CFEC5: movl $1,0x400(%esi);");
    asm("loc_4CFECF: movb $1,0x404(%esi);");
    asm("loc_4CFED6: mov $1,%eax;");
    asm("loc_4CFEDB: pop %esi;");
    asm("loc_4CFEDC: ret $0xC;");
    asm("loc_4CFEDF: cmp 0x3F4(%esi),%edx;");
    asm("loc_4CFEE5: jne loc_4CFF01;");
    asm("loc_4CFEE7: movl $2,0x400(%esi);");
    asm("loc_4CFEF1: movb $1,0x404(%esi);");
    asm("loc_4CFEF8: mov $1,%eax;");
    asm("loc_4CFEFD: pop %esi;");
    asm("loc_4CFEFE: ret $0xC;");
    asm("loc_4CFF01: cmp 0x3FC(%esi),%edx;");
    asm("loc_4CFF07: jne loc_4CFF23;");
    asm("loc_4CFF09: movl $4,0x400(%esi);");
    asm("loc_4CFF13: movb $1,0x404(%esi);");
    asm("loc_4CFF1A: mov $1,%eax;");
    asm("loc_4CFF1F: pop %esi;");
    asm("loc_4CFF20: ret $0xC;");
    asm("loc_4CFF23: cmp 0x3F8(%esi),%edx;");
    asm("loc_4CFF29: jne loc_4CFF45;");
    asm("loc_4CFF2B: movl $3,0x400(%esi);");
    asm("loc_4CFF35: movb $1,0x404(%esi);");
    asm("loc_4CFF3C: mov $1,%eax;");
    asm("loc_4CFF41: pop %esi;");
    asm("loc_4CFF42: ret $0xC;");
    asm("loc_4CFF45: xor %ecx,%ecx;");
    asm("loc_4CFF47: lea 0x394(%esi),%eax;");
    asm("loc_4CFF4D: lea (%ecx),%ecx;");
    asm("loc_4CFF50: cmp -0x20(%eax),%edx;");
    asm("loc_4CFF53: je loc_4CFF6D;");
    asm("loc_4CFF55: cmp (%eax),%edx;");
    asm("loc_4CFF57: je loc_4CFF6D;");
    asm("loc_4CFF59: cmp 0x20(%eax),%edx;");
    asm("loc_4CFF5C: je loc_4CFF6D;");
    asm("loc_4CFF5E: inc %ecx;");
    asm("loc_4CFF5F: add $4,%eax;");
    asm("loc_4CFF62: cmp $8,%ecx;");
    asm("loc_4CFF65: jl loc_4CFF50;");
    asm("loc_4CFF67: xor %eax,%eax;");
    asm("loc_4CFF69: pop %esi;");
    asm("loc_4CFF6A: ret $0xC;");
    asm("loc_4CFF6D: mov 0x3E4(%esi),%eax;");
    asm("loc_4CFF73: add %ecx,%eax;");
    asm("loc_4CFF75: push %eax;");
    asm("loc_4CFF76: lea -0x38(%esi),%ecx;");
    asm("loc_4CFF79: call _sub_4CFFA0;");
    asm("loc_4CFF7E: push $0;");
    asm("loc_4CFF80: call _sub_5645C0;");
    asm("loc_4CFF85: add $4,%esp;");
    asm("loc_4CFF88: mov $1,%eax;");
    asm("loc_4CFF8D: pop %esi;");
    asm("loc_4CFF8E: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4CFFA0() // _sub_4CFFA0
{
    __DEBUG_ASM(4CFFA0);
    // chunk 0x4CFFA0 _sub_4CFFA0
    asm("loc_4CFFA0: mov 0x418(%ecx),%eax;");
    asm("loc_4CFFA6: sub $0x34,%esp;");
    asm("loc_4CFFA9: test %eax,%eax;");
    asm("loc_4CFFAB: push %esi;");
    asm("loc_4CFFAC: push %edi;");
    asm("loc_4CFFAD: jle loc_4D0166;");
    asm("loc_4CFFB3: mov 0x40(%esp),%edx;");
    asm("loc_4CFFB7: cmp %eax,%edx;");
    asm("loc_4CFFB9: jge loc_4D0166;");
    asm("loc_4CFFBF: mov 0x414(%ecx),%ecx;");
    asm("loc_4CFFC5: mov (%ecx),%eax;");
    asm("loc_4CFFC7: cmp %ecx,%eax;");
    asm("loc_4CFFC9: je loc_4D0166;");
    asm("loc_4CFFCF: nop;");
    asm("loc_4CFFD0: test %edx,%edx;");
    asm("loc_4CFFD2: je loc_4CFFE3;");
    asm("loc_4CFFD4: mov (%eax),%eax;");
    asm("loc_4CFFD6: dec %edx;");
    asm("loc_4CFFD7: cmp %ecx,%eax;");
    asm("loc_4CFFD9: jne loc_4CFFD0;");
    asm("loc_4CFFDB: pop %edi;");
    asm("loc_4CFFDC: pop %esi;");
    asm("loc_4CFFDD: add $0x34,%esp;");
    asm("loc_4CFFE0: ret $4;");
    asm("loc_4CFFE3: lea 8(%eax),%esi;");
    asm("loc_4CFFE6: test %esi,%esi;");
    asm("loc_4CFFE8: je loc_4D0166;");
    asm("loc_4CFFEE: mov (%esi),%eax;");
    asm("loc_4CFFF0: cmp $4,%eax;");
    asm("loc_4CFFF3: jne loc_4D006F;");
    asm("loc_4CFFF5: mov 0x14(%esi),%esi;");
    asm("loc_4CFFF8: call _sub_4C4690;");
    asm("loc_4CFFFD: cmp %eax,%esi;");
    asm("loc_4CFFFF: jge loc_4D0166;");
    asm("loc_4D0005: push %esi;");
    asm("loc_4D0006: call _sub_4C46A0;");
    asm("loc_4D000B: mov 0x10(%eax),%edx;");
    asm("loc_4D000E: add $4,%esp;");
    asm("loc_4D0011: test %edx,%edx;");
    asm("loc_4D0013: je loc_4D0054;");
    asm("loc_4D0015: xor %eax,%eax;");
    asm("loc_4D0017: mov $0xA,%ecx;");
    asm("loc_4D001C: lea 0x14(%esp),%edi;");
    asm("loc_4D0020: rep stos %eax,(%edi);");
    asm("loc_4D0022: mov _import_5C6368,%eax;");
    asm("loc_4D0027: movb $1,0x3A(%esp);");
    asm("loc_4D002C: movl $0x1C,0x14(%esp);");
    asm("loc_4D0034: movzwl (%eax),%ecx;");
    asm("loc_4D0037: mov %edx,0x24(%esp);");
    asm("loc_4D003B: lea 0x14(%esp),%edx;");
    asm("loc_4D003F: push %edx;");
    asm("loc_4D0040: mov %ecx,0x2C(%esp);");
    asm("loc_4D0044: call _sub_54BCB0;");
    asm("loc_4D0049: add $4,%esp;");
    asm("loc_4D004C: pop %edi;");
    asm("loc_4D004D: pop %esi;");
    asm("loc_4D004E: add $0x34,%esp;");
    asm("loc_4D0051: ret $4;");
    asm("loc_4D0054: mov 0x14(%eax),%ecx;");
    asm("loc_4D0057: push %ecx;");
    asm("loc_4D0058: mov _data_674BC8,%ecx;");
    asm("loc_4D005E: push %esi;");
    asm("loc_4D005F: push $1;");
    asm("loc_4D0061: push %eax;");
    asm("loc_4D0062: call _sub_4F42E0;");
    asm("loc_4D0067: pop %edi;");
    asm("loc_4D0068: pop %esi;");
    asm("loc_4D0069: add $0x34,%esp;");
    asm("loc_4D006C: ret $4;");
    asm("loc_4D006F: cmp $3,%eax;");
    asm("loc_4D0072: jne loc_4D0117;");
    asm("loc_4D0078: mov 0x14(%esi),%esi;");
    asm("loc_4D007B: call _sub_4C4FB0;");
    asm("loc_4D0080: cmp %eax,%esi;");
    asm("loc_4D0082: jge loc_4D0166;");
    asm("loc_4D0088: push %esi;");
    asm("loc_4D0089: call _sub_4C4FF0;");
    asm("loc_4D008E: mov %eax,%edi;");
    asm("loc_4D0090: add $4,%esp;");
    asm("loc_4D0093: mov %edi,%ecx;");
    asm("loc_4D0095: call _sub_4C5110;");
    asm("loc_4D009A: mov %eax,%edx;");
    asm("loc_4D009C: test %edx,%edx;");
    asm("loc_4D009E: je loc_4D00E6;");
    asm("loc_4D00A0: xor %eax,%eax;");
    asm("loc_4D00A2: mov $0xA,%ecx;");
    asm("loc_4D00A7: lea 0x14(%esp),%edi;");
    asm("loc_4D00AB: rep stos %eax,(%edi);");
    asm("loc_4D00AD: mov _import_5C6368,%eax;");
    asm("loc_4D00B2: movb $1,0x3A(%esp);");
    asm("loc_4D00B7: movl $0x1C,0x14(%esp);");
    asm("loc_4D00BF: movzwl (%eax),%ecx;");
    asm("loc_4D00C2: mov (%edx),%eax;");
    asm("loc_4D00C4: mov %ecx,0x28(%esp);");
    asm("loc_4D00C8: mov %edx,%ecx;");
    asm("loc_4D00CA: calll *0x20(%eax);");
    asm("loc_4D00CD: lea 0x14(%esp),%ecx;");
    asm("loc_4D00D1: push %ecx;");
    asm("loc_4D00D2: mov %eax,0x28(%esp);");
    asm("loc_4D00D6: call _sub_54BCB0;");
    asm("loc_4D00DB: add $4,%esp;");
    asm("loc_4D00DE: pop %edi;");
    asm("loc_4D00DF: pop %esi;");
    asm("loc_4D00E0: add $0x34,%esp;");
    asm("loc_4D00E3: ret $4;");
    asm("loc_4D00E6: lea 0x40(%esp),%edx;");
    asm("loc_4D00EA: push %edx;");
    asm("loc_4D00EB: lea 0xC(%esp),%eax;");
    asm("loc_4D00EF: push %eax;");
    asm("loc_4D00F0: mov %edi,%ecx;");
    asm("loc_4D00F2: call _sub_4C52D0;");
    asm("loc_4D00F7: test %al,%al;");
    asm("loc_4D00F9: je loc_4D0166;");
    asm("loc_4D00FB: push %esi;");
    asm("loc_4D00FC: push %esi;");
    asm("loc_4D00FD: push $0;");
    asm("loc_4D00FF: lea 0x14(%esp),%ecx;");
    asm("loc_4D0103: push %ecx;");
    asm("loc_4D0104: mov _data_674BC8,%ecx;");
    asm("loc_4D010A: call _sub_4F42E0;");
    asm("loc_4D010F: pop %edi;");
    asm("loc_4D0110: pop %esi;");
    asm("loc_4D0111: add $0x34,%esp;");
    asm("loc_4D0114: ret $4;");
    asm("loc_4D0117: call _sub_54BAF0;");
    asm("loc_4D011C: test %eax,%eax;");
    asm("loc_4D011E: je loc_4D012C;");
    asm("loc_4D0120: mov (%eax),%edx;");
    asm("loc_4D0122: mov %eax,%ecx;");
    asm("loc_4D0124: calll *0x20(%edx);");
    asm("loc_4D0127: cmp %eax,0x10(%esi);");
    asm("loc_4D012A: je loc_4D0166;");
    asm("loc_4D012C: mov 0x10(%esi),%edx;");
    asm("loc_4D012F: xor %eax,%eax;");
    asm("loc_4D0131: mov $0xA,%ecx;");
    asm("loc_4D0136: lea 0x14(%esp),%edi;");
    asm("loc_4D013A: rep stos %eax,(%edi);");
    asm("loc_4D013C: mov _import_5C6368,%eax;");
    asm("loc_4D0141: movb $1,0x3A(%esp);");
    asm("loc_4D0146: movl $0x1C,0x14(%esp);");
    asm("loc_4D014E: movzwl (%eax),%ecx;");
    asm("loc_4D0151: lea 0x14(%esp),%eax;");
    asm("loc_4D0155: push %eax;");
    asm("loc_4D0156: mov %edx,0x28(%esp);");
    asm("loc_4D015A: mov %ecx,0x2C(%esp);");
    asm("loc_4D015E: call _sub_54BCB0;");
    asm("loc_4D0163: add $4,%esp;");
    asm("loc_4D0166: pop %edi;");
    asm("loc_4D0167: pop %esi;");
    asm("loc_4D0168: add $0x34,%esp;");
    asm("loc_4D016B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D0170() // _sub_4D0170
{
    __DEBUG_ASM(4D0170);
    // chunk 0x4D0170 _sub_4D0170
    asm("loc_4D0170: push %ebx;");
    asm("loc_4D0171: push %esi;");
    asm("loc_4D0172: mov %ecx,%esi;");
    asm("loc_4D0174: mov _data_674B04,%ecx;");
    asm("loc_4D017A: push $0;");
    asm("loc_4D017C: call _sub_4E5470;");
    asm("loc_4D0181: test %eax,%eax;");
    asm("loc_4D0183: je loc_4D01A0;");
    asm("loc_4D0185: cmp $2,%eax;");
    asm("loc_4D0188: je loc_4D01A0;");
    asm("loc_4D018A: movl $0xFFFFFFFF,0x444(%esi);");
    asm("loc_4D0194: andb $0xFC,0xA4(%esi);");
    asm("loc_4D019B: pop %esi;");
    asm("loc_4D019C: pop %ebx;");
    asm("loc_4D019D: ret $8;");
    asm("loc_4D01A0: mov 0xA4(%esi),%dl;");
    asm("loc_4D01A6: mov $3,%cl;");
    asm("loc_4D01A8: or %cl,%dl;");
    asm("loc_4D01AA: mov %dl,0xA4(%esi);");
    asm("loc_4D01B0: cmp 0x444(%esi),%eax;");
    asm("loc_4D01B6: je loc_4D0241;");
    asm("loc_4D01BC: mov %eax,0x444(%esi);");
    asm("loc_4D01C2: cmp $2,%eax;");
    asm("loc_4D01C5: mov 0x424(%esi),%eax;");
    asm("loc_4D01CB: movb $1,0x43C(%esi);");
    asm("loc_4D01D2: jne loc_4D0210;");
    asm("loc_4D01D4: mov 0x6C(%eax),%bl;");
    asm("loc_4D01D7: mov $0xFC,%dl;");
    asm("loc_4D01D9: and %dl,%bl;");
    asm("loc_4D01DB: mov %bl,0x6C(%eax);");
    asm("loc_4D01DE: mov 0x428(%esi),%eax;");
    asm("loc_4D01E4: and %dl,0x6C(%eax);");
    asm("loc_4D01E7: mov 0x42C(%esi),%eax;");
    asm("loc_4D01ED: and %dl,0x6C(%eax);");
    asm("loc_4D01F0: mov 0x434(%esi),%eax;");
    asm("loc_4D01F6: and %dl,0x6C(%eax);");
    asm("loc_4D01F9: mov 0x430(%esi),%eax;");
    asm("loc_4D01FF: and %dl,0x6C(%eax);");
    asm("loc_4D0202: mov 0x448(%esi),%esi;");
    asm("loc_4D0208: or %cl,0x6C(%esi);");
    asm("loc_4D020B: pop %esi;");
    asm("loc_4D020C: pop %ebx;");
    asm("loc_4D020D: ret $8;");
    asm("loc_4D0210: or %cl,0x6C(%eax);");
    asm("loc_4D0213: mov 0x428(%esi),%eax;");
    asm("loc_4D0219: or %cl,0x6C(%eax);");
    asm("loc_4D021C: mov 0x42C(%esi),%eax;");
    asm("loc_4D0222: or %cl,0x6C(%eax);");
    asm("loc_4D0225: mov 0x430(%esi),%eax;");
    asm("loc_4D022B: or %cl,0x6C(%eax);");
    asm("loc_4D022E: mov 0x434(%esi),%eax;");
    asm("loc_4D0234: or %cl,0x6C(%eax);");
    asm("loc_4D0237: mov 0x448(%esi),%esi;");
    asm("loc_4D023D: andb $0xFC,0x6C(%esi);");
    asm("loc_4D0241: pop %esi;");
    asm("loc_4D0242: pop %ebx;");
    asm("loc_4D0243: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D0250() // _sub_4D0250
{
    __DEBUG_ASM(4D0250);
    // chunk 0x4D0250 _sub_4D0250
    asm("loc_4D0250: mov %fs:0,%eax;");
    asm("loc_4D0256: push $0xFFFFFFFF;");
    asm("loc_4D0258: push $_sub_5BDD48;");
    asm("loc_4D025D: push %eax;");
    asm("loc_4D025E: mov %esp,%fs:0;");
    asm("loc_4D0265: sub $0x38,%esp;");
    asm("loc_4D0268: push %ebx;");
    asm("loc_4D0269: mov 0x4C(%esp),%ebx;");
    asm("loc_4D026D: mov 0xE0(%ebx),%eax;");
    asm("loc_4D0273: push %esi;");
    asm("loc_4D0274: push %edi;");
    asm("loc_4D0275: mov 0x58(%esp),%edi;");
    asm("loc_4D0279: test %edi,%edi;");
    asm("loc_4D027B: mov %ecx,%esi;");
    asm("loc_4D027D: je loc_4D045B;");
    asm("loc_4D0283: mov 0x2BD(%ebx),%cl;");
    asm("loc_4D0289: test %cl,%cl;");
    asm("loc_4D028B: je loc_4D0324;");
    asm("loc_4D0291: mov 0x1B4(%ebx),%eax;");
    asm("loc_4D0297: test %eax,%eax;");
    asm("loc_4D0299: je loc_4D0305;");
    asm("loc_4D029B: call _sub_54BAF0;");
    asm("loc_4D02A0: test %eax,%eax;");
    asm("loc_4D02A2: je loc_4D0305;");
    asm("loc_4D02A4: add $0xC,%eax;");
    asm("loc_4D02A7: test %eax,%eax;");
    asm("loc_4D02A9: je loc_4D02C3;");
    asm("loc_4D02AB: mov 4(%eax),%eax;");
    asm("loc_4D02AE: test %eax,%eax;");
    asm("loc_4D02B0: je loc_4D02C3;");
    asm("loc_4D02B2: mov 0x4C(%eax),%ecx;");
    asm("loc_4D02B5: and $0x503,%ecx;");
    asm("loc_4D02BB: cmp $0x503,%ecx;");
    asm("loc_4D02C1: je loc_4D02C5;");
    asm("loc_4D02C3: xor %eax,%eax;");
    asm("loc_4D02C5: mov 0x1B4(%eax),%edx;");
    asm("loc_4D02CB: cmp 0x1B4(%ebx),%edx;");
    asm("loc_4D02D1: jne loc_4D0305;");
    asm("loc_4D02D3: push $0;");
    asm("loc_4D02D5: push $0;");
    asm("loc_4D02D7: push $0;");
    asm("loc_4D02D9: push %edi;");
    asm("loc_4D02DA: push $0xF;");
    asm("loc_4D02DC: lea 0x20(%esp),%ecx;");
    asm("loc_4D02E0: call _sub_4CF030;");
    asm("loc_4D02E5: movl $0,0x4C(%esp);");
    asm("loc_4D02ED: mov 0x414(%esi),%edx;");
    asm("loc_4D02F3: lea 0x410(%esi),%ecx;");
    asm("loc_4D02F9: push %eax;");
    asm("loc_4D02FA: push %edx;");
    asm("loc_4D02FB: lea 0x5C(%esp),%eax;");
    asm("loc_4D02FF: push %eax;");
    asm("loc_4D0300: jmp loc_4D03DB;");
    asm("loc_4D0305: push $0;");
    asm("loc_4D0307: push $0;");
    asm("loc_4D0309: push $0;");
    asm("loc_4D030B: push %edi;");
    asm("loc_4D030C: push $0xE;");
    asm("loc_4D030E: lea 0x20(%esp),%ecx;");
    asm("loc_4D0312: call _sub_4CF030;");
    asm("loc_4D0317: movl $1,0x4C(%esp);");
    asm("loc_4D031F: jmp loc_4D03C8;");
    asm("loc_4D0324: test $0x420000,%eax;");
    asm("loc_4D0329: je loc_4D0347;");
    asm("loc_4D032B: push $0;");
    asm("loc_4D032D: push $0;");
    asm("loc_4D032F: push $0;");
    asm("loc_4D0331: push %edi;");
    asm("loc_4D0332: push $8;");
    asm("loc_4D0334: lea 0x20(%esp),%ecx;");
    asm("loc_4D0338: call _sub_4CF030;");
    asm("loc_4D033D: movl $2,0x4C(%esp);");
    asm("loc_4D0345: jmp loc_4D02ED;");
    asm("loc_4D0347: mov 0x4C(%ebx),%ecx;");
    asm("loc_4D034A: and $0x103,%ecx;");
    asm("loc_4D0350: cmp $0x103,%ecx;");
    asm("loc_4D0356: jne loc_4D0388;");
    asm("loc_4D0358: mov 0x88(%ebx),%ebx;");
    asm("loc_4D035E: test %ebx,%ebx;");
    asm("loc_4D0360: je loc_4D0388;");
    asm("loc_4D0362: mov 0x80(%ebx),%cl;");
    asm("loc_4D0368: test %cl,%cl;");
    asm("loc_4D036A: je loc_4D0388;");
    asm("loc_4D036C: push $0;");
    asm("loc_4D036E: push $0;");
    asm("loc_4D0370: push $0;");
    asm("loc_4D0372: push %edi;");
    asm("loc_4D0373: push $0xA;");
    asm("loc_4D0375: lea 0x20(%esp),%ecx;");
    asm("loc_4D0379: call _sub_4CF030;");
    asm("loc_4D037E: movl $3,0x4C(%esp);");
    asm("loc_4D0386: jmp loc_4D03C8;");
    asm("loc_4D0388: test $0x100000,%eax;");
    asm("loc_4D038D: push $0;");
    asm("loc_4D038F: push $0;");
    asm("loc_4D0391: push $0;");
    asm("loc_4D0393: push %edi;");
    asm("loc_4D0394: je loc_4D03AE;");
    asm("loc_4D0396: push $9;");
    asm("loc_4D0398: lea 0x20(%esp),%ecx;");
    asm("loc_4D039C: call _sub_4CF030;");
    asm("loc_4D03A1: movl $4,0x4C(%esp);");
    asm("loc_4D03A9: jmp loc_4D02ED;");
    asm("loc_4D03AE: test $0x200000,%eax;");
    asm("loc_4D03B3: je loc_4D03F6;");
    asm("loc_4D03B5: push $5;");
    asm("loc_4D03B7: lea 0x20(%esp),%ecx;");
    asm("loc_4D03BB: call _sub_4CF030;");
    asm("loc_4D03C0: movl $5,0x4C(%esp);");
    asm("loc_4D03C8: mov 0x414(%esi),%edx;");
    asm("loc_4D03CE: lea 0x410(%esi),%ecx;");
    asm("loc_4D03D4: push %eax;");
    asm("loc_4D03D5: push %edx;");
    asm("loc_4D03D6: lea 0x5C(%esp),%edx;");
    asm("loc_4D03DA: push %edx;");
    asm("loc_4D03DB: call _sub_4D4740;");
    asm("loc_4D03E0: mov 0x10(%esp),%eax;");
    asm("loc_4D03E4: test %eax,%eax;");
    asm("loc_4D03E6: movl $0xFFFFFFFF,0x4C(%esp);");
    asm("loc_4D03EE: je loc_4D045B;");
    asm("loc_4D03F0: lea 0x10(%esp),%ecx;");
    asm("loc_4D03F4: jmp loc_4D0453;");
    asm("loc_4D03F6: push $0;");
    asm("loc_4D03F8: lea 0x3C(%esp),%ecx;");
    asm("loc_4D03FC: call _sub_4CF030;");
    asm("loc_4D0401: mov %eax,%ebx;");
    asm("loc_4D0403: mov 0x414(%esi),%edi;");
    asm("loc_4D0409: mov 4(%edi),%eax;");
    asm("loc_4D040C: add $0x410,%esi;");
    asm("loc_4D0412: push %eax;");
    asm("loc_4D0413: push %edi;");
    asm("loc_4D0414: mov %esi,%ecx;");
    asm("loc_4D0416: movl $6,0x54(%esp);");
    asm("loc_4D041E: call _sub_4D48F0;");
    asm("loc_4D0423: mov %eax,4(%edi);");
    asm("loc_4D0426: mov 4(%eax),%ecx;");
    asm("loc_4D0429: mov %eax,(%ecx);");
    asm("loc_4D042B: add $8,%eax;");
    asm("loc_4D042E: push %ebx;");
    asm("loc_4D042F: push %eax;");
    asm("loc_4D0430: call _sub_4D49B0;");
    asm("loc_4D0435: mov 8(%esi),%ecx;");
    asm("loc_4D0438: mov 0x34(%esp),%eax;");
    asm("loc_4D043C: add $8,%esp;");
    asm("loc_4D043F: inc %ecx;");
    asm("loc_4D0440: test %eax,%eax;");
    asm("loc_4D0442: mov %ecx,8(%esi);");
    asm("loc_4D0445: movl $0xFFFFFFFF,0x4C(%esp);");
    asm("loc_4D044D: je loc_4D045B;");
    asm("loc_4D044F: lea 0x2C(%esp),%ecx;");
    asm("loc_4D0453: push $0;");
    asm("loc_4D0455: calll *_import_5C62A8;");
    asm("loc_4D045B: mov 0x44(%esp),%ecx;");
    asm("loc_4D045F: pop %edi;");
    asm("loc_4D0460: pop %esi;");
    asm("loc_4D0461: pop %ebx;");
    asm("loc_4D0462: mov %ecx,%fs:0;");
    asm("loc_4D0469: add $0x44,%esp;");
    asm("loc_4D046C: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D0470() // _sub_4D0470
{
    __DEBUG_ASM(4D0470);
    // chunk 0x4D0470 _sub_4D0470
    asm("loc_4D0470: mov 4(%ecx),%eax;");
    asm("loc_4D0473: add $4,%ecx;");
    asm("loc_4D0476: test %eax,%eax;");
    asm("loc_4D0478: je loc_4D0482;");
    asm("loc_4D047A: push $0;");
    asm("loc_4D047C: calll *_import_5C62A8;");
    asm("loc_4D0482: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D0490() // _sub_4D0490
{
    __DEBUG_ASM(4D0490);
    // chunk 0x4D0490 _sub_4D0490
    asm("loc_4D0490: push $0xFFFFFFFF;");
    asm("loc_4D0492: mov %fs:0,%eax;");
    asm("loc_4D0498: push $_sub_5BDF10;");
    asm("loc_4D049D: push %eax;");
    asm("loc_4D049E: mov $0x220C,%eax;");
    asm("loc_4D04A3: mov %esp,%fs:0;");
    asm("loc_4D04AA: call _sub_5B7E90;");
    asm("loc_4D04AF: push %ebx;");
    asm("loc_4D04B0: push %ebp;");
    asm("loc_4D04B1: push %esi;");
    asm("loc_4D04B2: push %edi;");
    asm("loc_4D04B3: mov %ecx,%edi;");
    asm("loc_4D04B5: mov %edi,0x14(%esp);");
    asm("loc_4D04B9: call _sub_42D740;");
    asm("loc_4D04BE: test %al,%al;");
    asm("loc_4D04C0: jne loc_4D248E;");
    asm("loc_4D04C6: mov 0x414(%edi),%eax;");
    asm("loc_4D04CC: mov (%eax),%ecx;");
    asm("loc_4D04CE: lea 0x410(%edi),%esi;");
    asm("loc_4D04D4: push %eax;");
    asm("loc_4D04D5: push %ecx;");
    asm("loc_4D04D6: lea 0x80(%esp),%eax;");
    asm("loc_4D04DD: push %eax;");
    asm("loc_4D04DE: mov %esi,%ecx;");
    asm("loc_4D04E0: call _sub_4D47A0;");
    asm("loc_4D04E5: call _sub_54BAF0;");
    asm("loc_4D04EA: test %eax,%eax;");
    asm("loc_4D04EC: mov %eax,0x38(%esp);");
    asm("loc_4D04F0: je loc_4D248E;");
    asm("loc_4D04F6: lea 0xC(%eax),%ebp;");
    asm("loc_4D04F9: test %ebp,%ebp;");
    asm("loc_4D04FB: je loc_4D248E;");
    asm("loc_4D0501: mov 4(%ebp),%ebx;");
    asm("loc_4D0504: test %ebx,%ebx;");
    asm("loc_4D0506: mov %ebx,0x78(%esp);");
    asm("loc_4D050A: je loc_4D248E;");
    asm("loc_4D0510: mov 0x4C(%ebx),%ecx;");
    asm("loc_4D0513: and $0x503,%ecx;");
    asm("loc_4D0519: cmp $0x503,%ecx;");
    asm("loc_4D051F: jne loc_4D248E;");
    asm("loc_4D0525: mov (%eax),%edx;");
    asm("loc_4D0527: mov %eax,%ecx;");
    asm("loc_4D0529: calll *(%edx);");
    asm("loc_4D052B: mov (%eax),%ecx;");
    asm("loc_4D052D: mov 4(%eax),%edx;");
    asm("loc_4D0530: mov 8(%eax),%eax;");
    asm("loc_4D0533: mov %ecx,_data_674904;");
    asm("loc_4D0539: mov %ecx,0x24(%esp);");
    asm("loc_4D053D: xor %ecx,%ecx;");
    asm("loc_4D053F: mov %eax,0x2C(%esp);");
    asm("loc_4D0543: mov %edx,_data_674908;");
    asm("loc_4D0549: mov %eax,_data_67490C;");
    asm("loc_4D054E: mov %ecx,_data_674900;");
    asm("loc_4D0554: mov %cl,_data_6748FC;");
    asm("loc_4D055A: mov 0x438(%edi),%eax;");
    asm("loc_4D0560: cmp %ecx,%eax;");
    asm("loc_4D0562: mov %edx,0x28(%esp);");
    asm("loc_4D0566: mov %ecx,0x3C(%esp);");
    asm("loc_4D056A: je loc_4D0571;");
    asm("loc_4D056C: cmp $4,%eax;");
    asm("loc_4D056F: jne loc_4D05D1;");
    asm("loc_4D0571: mov %ebx,%ecx;");
    asm("loc_4D0573: calll *_import_5C6348;");
    asm("loc_4D0579: test %eax,%eax;");
    asm("loc_4D057B: je loc_4D05A4;");
    asm("loc_4D057D: mov (%eax),%edx;");
    asm("loc_4D057F: mov %eax,%ecx;");
    asm("loc_4D0581: calll *0x150(%edx);");
    asm("loc_4D0587: test %eax,%eax;");
    asm("loc_4D0589: je loc_4D0596;");
    asm("loc_4D058B: mov 0x4C(%eax),%ecx;");
    asm("loc_4D058E: and $3,%ecx;");
    asm("loc_4D0591: cmp $3,%cl;");
    asm("loc_4D0594: je loc_4D0598;");
    asm("loc_4D0596: xor %eax,%eax;");
    asm("loc_4D0598: mov 0xB0(%eax),%edx;");
    asm("loc_4D059E: mov %edx,_data_674900;");
    asm("loc_4D05A4: call _sub_4C4FB0;");
    asm("loc_4D05A9: test %eax,%eax;");
    asm("loc_4D05AB: jle loc_4D05D1;");
    asm("loc_4D05AD: push $0;");
    asm("loc_4D05AF: call _sub_4C4FF0;");
    asm("loc_4D05B4: add $4,%esp;");
    asm("loc_4D05B7: test %eax,%eax;");
    asm("loc_4D05B9: je loc_4D05D1;");
    asm("loc_4D05BB: mov %eax,%ecx;");
    asm("loc_4D05BD: call _sub_4C5110;");
    asm("loc_4D05C2: test %eax,%eax;");
    asm("loc_4D05C4: je loc_4D05D1;");
    asm("loc_4D05C6: mov (%eax),%edx;");
    asm("loc_4D05C8: mov %eax,%ecx;");
    asm("loc_4D05CA: calll *0x20(%edx);");
    asm("loc_4D05CD: mov %eax,0x3C(%esp);");
    asm("loc_4D05D1: mov 0x440(%edi),%ecx;");
    asm("loc_4D05D7: flds _data_612434;");
    asm("loc_4D05DD: test %ecx,%ecx;");
    asm("loc_4D05DF: je loc_4D05E9;");
    asm("loc_4D05E1: fstp %st(0);");
    asm("loc_4D05E3: calll *_import_5C64E4;");
    asm("loc_4D05E9: fcoms _data_612434;");
    asm("loc_4D05EF: movb $0,0x1B(%esp);");
    asm("loc_4D05F4: movl $0x7149F2CA,0x30(%esp);");
    asm("loc_4D05FC: fnstsw %ax;");
    asm("loc_4D05FE: test $5,%ah;");
    asm("loc_4D0601: jp loc_4D060C;");
    asm("loc_4D0603: fsts 0x30(%esp);");
    asm("loc_4D0607: movb $1,0x1B(%esp);");
    asm("loc_4D060C: mov _data_674B04,%ecx;");
    asm("loc_4D0612: fld %st(0);");
    asm("loc_4D0614: fmul %st(1),%st;");
    asm("loc_4D0616: push $0;");
    asm("loc_4D0618: fstps 0x60(%esp);");
    asm("loc_4D061C: fstp %st(0);");
    asm("loc_4D061E: call _sub_4E5470;");
    asm("loc_4D0623: cmp $2,%eax;");
    asm("loc_4D0626: jne loc_4D07E2;");
    asm("loc_4D062C: test %ebp,%ebp;");
    asm("loc_4D062E: je loc_4D2102;");
    asm("loc_4D0634: mov 4(%ebp),%edi;");
    asm("loc_4D0637: test %edi,%edi;");
    asm("loc_4D0639: je loc_4D2102;");
    asm("loc_4D063F: mov 0x4C(%edi),%eax;");
    asm("loc_4D0642: and $0x503,%eax;");
    asm("loc_4D0647: cmp $0x503,%eax;");
    asm("loc_4D064C: jne loc_4D2102;");
    asm("loc_4D0652: calll *_import_5C60D0;");
    asm("loc_4D0658: test %al,%al;");
    asm("loc_4D065A: je loc_4D074A;");
    asm("loc_4D0660: mov 0x1B8(%edi),%edi;");
    asm("loc_4D0666: test %edi,%edi;");
    asm("loc_4D0668: je loc_4D2102;");
    asm("loc_4D066E: add $0xFFFFFFF8,%edi;");
    asm("loc_4D0671: test %edi,%edi;");
    asm("loc_4D0673: je loc_4D2102;");
    asm("loc_4D0679: mov (%edi),%edx;");
    asm("loc_4D067B: mov %edi,%ecx;");
    asm("loc_4D067D: calll *0x150(%edx);");
    asm("loc_4D0683: mov %eax,%ebx;");
    asm("loc_4D0685: test %ebx,%ebx;");
    asm("loc_4D0687: je loc_4D2102;");
    asm("loc_4D068D: mov 0x4C(%ebx),%eax;");
    asm("loc_4D0690: and $0x503,%eax;");
    asm("loc_4D0695: cmp $0x503,%eax;");
    asm("loc_4D069A: jne loc_4D2102;");
    asm("loc_4D06A0: mov (%edi),%edx;");
    asm("loc_4D06A2: push $1;");
    asm("loc_4D06A4: mov %edi,%ecx;");
    asm("loc_4D06A6: calll *0x20(%edx);");
    asm("loc_4D06A9: push %eax;");
    asm("loc_4D06AA: call _sub_5416C0;");
    asm("loc_4D06AF: mov 0x1C(%esp),%ecx;");
    asm("loc_4D06B3: add $8,%esp;");
    asm("loc_4D06B6: push %eax;");
    asm("loc_4D06B7: push %ebx;");
    asm("loc_4D06B8: call _sub_4D0250;");
    asm("loc_4D06BD: mov 0x1D4(%ebx),%eax;");
    asm("loc_4D06C3: xor %ebp,%ebp;");
    asm("loc_4D06C5: cmp %ebp,%eax;");
    asm("loc_4D06C7: jne loc_4D06CF;");
    asm("loc_4D06C9: mov %ebp,0x30(%esp);");
    asm("loc_4D06CD: jmp loc_4D06DE;");
    asm("loc_4D06CF: mov 0x1D8(%ebx),%ecx;");
    asm("loc_4D06D5: sub %eax,%ecx;");
    asm("loc_4D06D7: sar $3,%ecx;");
    asm("loc_4D06DA: mov %ecx,0x30(%esp);");
    asm("loc_4D06DE: cmp %ebp,0x30(%esp);");
    asm("loc_4D06E2: jle loc_4D2102;");
    asm("loc_4D06E8: mov 0x1D4(%ebx),%eax;");
    asm("loc_4D06EE: mov (%eax,%ebp,8),%eax;");
    asm("loc_4D06F1: test %eax,%eax;");
    asm("loc_4D06F3: je loc_4D073C;");
    asm("loc_4D06F5: lea -8(%eax),%ecx;");
    asm("loc_4D06F8: test %ecx,%ecx;");
    asm("loc_4D06FA: je loc_4D073C;");
    asm("loc_4D06FC: mov (%ecx),%eax;");
    asm("loc_4D06FE: push $1;");
    asm("loc_4D0700: calll *0x20(%eax);");
    asm("loc_4D0703: push %eax;");
    asm("loc_4D0704: call _sub_5416C0;");
    asm("loc_4D0709: mov %eax,%edi;");
    asm("loc_4D070B: add $8,%esp;");
    asm("loc_4D070E: test %edi,%edi;");
    asm("loc_4D0710: je loc_4D073C;");
    asm("loc_4D0712: mov (%edi),%edx;");
    asm("loc_4D0714: mov %edi,%ecx;");
    asm("loc_4D0716: calll *0x150(%edx);");
    asm("loc_4D071C: test %eax,%eax;");
    asm("loc_4D071E: je loc_4D073C;");
    asm("loc_4D0720: mov 0x4C(%eax),%ecx;");
    asm("loc_4D0723: and $0x503,%ecx;");
    asm("loc_4D0729: cmp $0x503,%ecx;");
    asm("loc_4D072F: jne loc_4D073C;");
    asm("loc_4D0731: mov 0x14(%esp),%ecx;");
    asm("loc_4D0735: push %edi;");
    asm("loc_4D0736: push %eax;");
    asm("loc_4D0737: call _sub_4D0250;");
    asm("loc_4D073C: mov 0x30(%esp),%eax;");
    asm("loc_4D0740: inc %ebp;");
    asm("loc_4D0741: cmp %eax,%ebp;");
    asm("loc_4D0743: jl loc_4D06E8;");
    asm("loc_4D0745: jmp loc_4D2102;");
    asm("loc_4D074A: call _sub_4C5890;");
    asm("loc_4D074F: mov %eax,%ebp;");
    asm("loc_4D0751: mov 0x1B8(%edi),%eax;");
    asm("loc_4D0757: test %eax,%eax;");
    asm("loc_4D0759: je loc_4D0762;");
    asm("loc_4D075B: add $0xFFFFFFF8,%eax;");
    asm("loc_4D075E: test %eax,%eax;");
    asm("loc_4D0760: jne loc_4D0782;");
    asm("loc_4D0762: test %ebp,%ebp;");
    asm("loc_4D0764: je loc_4D2102;");
    asm("loc_4D076A: push $0;");
    asm("loc_4D076C: call _sub_4C58B0;");
    asm("loc_4D0771: mov 0xB0(%edi),%ecx;");
    asm("loc_4D0777: add $4,%esp;");
    asm("loc_4D077A: cmp %ecx,%eax;");
    asm("loc_4D077C: jne loc_4D2102;");
    asm("loc_4D0782: xor %ebx,%ebx;");
    asm("loc_4D0784: test %ebp,%ebp;");
    asm("loc_4D0786: jle loc_4D2102;");
    asm("loc_4D078C: lea (%esp),%esp;");
    asm("loc_4D0790: push %ebx;");
    asm("loc_4D0791: call _sub_4C58B0;");
    asm("loc_4D0796: add $4,%esp;");
    asm("loc_4D0799: test %eax,%eax;");
    asm("loc_4D079B: je loc_4D07D8;");
    asm("loc_4D079D: push $1;");
    asm("loc_4D079F: push %eax;");
    asm("loc_4D07A0: call _sub_5416C0;");
    asm("loc_4D07A5: mov %eax,%edi;");
    asm("loc_4D07A7: add $8,%esp;");
    asm("loc_4D07AA: test %edi,%edi;");
    asm("loc_4D07AC: je loc_4D07D8;");
    asm("loc_4D07AE: mov (%edi),%edx;");
    asm("loc_4D07B0: mov %edi,%ecx;");
    asm("loc_4D07B2: calll *0x150(%edx);");
    asm("loc_4D07B8: test %eax,%eax;");
    asm("loc_4D07BA: je loc_4D07D8;");
    asm("loc_4D07BC: mov 0x4C(%eax),%ecx;");
    asm("loc_4D07BF: and $0x503,%ecx;");
    asm("loc_4D07C5: cmp $0x503,%ecx;");
    asm("loc_4D07CB: jne loc_4D07D8;");
    asm("loc_4D07CD: mov 0x14(%esp),%ecx;");
    asm("loc_4D07D1: push %edi;");
    asm("loc_4D07D2: push %eax;");
    asm("loc_4D07D3: call _sub_4D0250;");
    asm("loc_4D07D8: inc %ebx;");
    asm("loc_4D07D9: cmp %ebp,%ebx;");
    asm("loc_4D07DB: jl loc_4D0790;");
    asm("loc_4D07DD: jmp loc_4D2102;");
    asm("loc_4D07E2: mov 0x438(%edi),%eax;");
    asm("loc_4D07E8: test %eax,%eax;");
    asm("loc_4D07EA: je loc_4D07FA;");
    asm("loc_4D07EC: cmp $1,%eax;");
    asm("loc_4D07EF: je loc_4D07FA;");
    asm("loc_4D07F1: cmp $4,%eax;");
    asm("loc_4D07F4: jne loc_4D0E86;");
    asm("loc_4D07FA: lea 0x1C(%esp),%edx;");
    asm("loc_4D07FE: push %edx;");
    asm("loc_4D07FF: movl $1,0x20(%esp);");
    asm("loc_4D0807: call _sub_540FC0;");
    asm("loc_4D080C: mov %eax,%edi;");
    asm("loc_4D080E: add $4,%esp;");
    asm("loc_4D0811: test %edi,%edi;");
    asm("loc_4D0813: je loc_4D0E86;");
    asm("loc_4D0819: lea (%esp),%esp;");
    asm("loc_4D0820: mov (%edi),%eax;");
    asm("loc_4D0822: mov %edi,%ecx;");
    asm("loc_4D0824: calll *0x150(%eax);");
    asm("loc_4D082A: mov %eax,%ebp;");
    asm("loc_4D082C: test %ebp,%ebp;");
    asm("loc_4D082E: je loc_4D0E7B;");
    asm("loc_4D0834: mov 0x4C(%ebp),%ecx;");
    asm("loc_4D0837: and $0x503,%ecx;");
    asm("loc_4D083D: cmp $0x503,%ecx;");
    asm("loc_4D0843: jne loc_4D0E7B;");
    asm("loc_4D0849: flds 0x140(%ebp);");
    asm("loc_4D084F: fcomps _data_5C75DC;");
    asm("loc_4D0855: fnstsw %ax;");
    asm("loc_4D0857: test $1,%ah;");
    asm("loc_4D085A: je loc_4D0E7B;");
    asm("loc_4D0860: mov 0x3C(%esp),%edx;");
    asm("loc_4D0864: cmp %edx,0xB0(%ebp);");
    asm("loc_4D086A: je loc_4D0E7B;");
    asm("loc_4D0870: flds 0x34(%ebp);");
    asm("loc_4D0873: sub $0xC,%esp;");
    asm("loc_4D0876: fsubs 0x38(%esp);");
    asm("loc_4D087A: lea 0x4C(%esp),%ecx;");
    asm("loc_4D087E: fstps 8(%esp);");
    asm("loc_4D0882: flds 0x30(%ebp);");
    asm("loc_4D0885: fsubs 0x34(%esp);");
    asm("loc_4D0889: fstps 4(%esp);");
    asm("loc_4D088D: flds 0x2C(%ebp);");
    asm("loc_4D0890: fsubs 0x30(%esp);");
    asm("loc_4D0894: fstps (%esp);");
    asm("loc_4D0897: call _sub_422B80;");
    asm("loc_4D089C: cmp 0x38(%esp),%edi;");
    asm("loc_4D08A0: je loc_4D08C9;");
    asm("loc_4D08A2: flds 0x44(%esp);");
    asm("loc_4D08A6: fmuls 0x44(%esp);");
    asm("loc_4D08AA: flds 0x48(%esp);");
    asm("loc_4D08AE: fmuls 0x48(%esp);");
    asm("loc_4D08B2: faddp;");
    asm("loc_4D08B4: flds 0x40(%esp);");
    asm("loc_4D08B8: fmuls 0x40(%esp);");
    asm("loc_4D08BC: faddp;");
    asm("loc_4D08BE: fcomps 0x5C(%esp);");
    asm("loc_4D08C2: fnstsw %ax;");
    asm("loc_4D08C4: test $5,%ah;");
    asm("loc_4D08C7: jnp loc_4D08E1;");
    asm("loc_4D08C9: mov 0x2BD(%ebp),%al;");
    asm("loc_4D08CF: test %al,%al;");
    asm("loc_4D08D1: je loc_4D0E7B;");
    asm("loc_4D08D7: cmp 0x38(%esp),%edi;");
    asm("loc_4D08DB: je loc_4D0E7B;");
    asm("loc_4D08E1: mov %edi,%ecx;");
    asm("loc_4D08E3: call _sub_53A960;");
    asm("loc_4D08E8: mov %eax,%ebx;");
    asm("loc_4D08EA: mov 0x2BD(%ebp),%al;");
    asm("loc_4D08F0: test %al,%al;");
    asm("loc_4D08F2: jne loc_4D0926;");
    asm("loc_4D08F4: mov 0x104(%ebp),%eax;");
    asm("loc_4D08FA: mov %eax,0x34(%esp);");
    asm("loc_4D08FE: push $0;");
    asm("loc_4D0900: lea 0x24(%esp),%eax;");
    asm("loc_4D0904: push %eax;");
    asm("loc_4D0905: lea 0x3C(%esp),%ecx;");
    asm("loc_4D0909: push %ecx;");
    asm("loc_4D090A: calll *_import_5C6320;");
    asm("loc_4D0910: add $0xC,%esp;");
    asm("loc_4D0913: test %eax,%eax;");
    asm("loc_4D0915: jne loc_4D0E7B;");
    asm("loc_4D091B: cmpl $0xFFFFFFFF,0x20(%esp);");
    asm("loc_4D0920: je loc_4D0E7B;");
    asm("loc_4D0926: mov 0x2BD(%ebp),%cl;");
    asm("loc_4D092C: test %cl,%cl;");
    asm("loc_4D092E: mov 0xE0(%ebp),%eax;");
    asm("loc_4D0934: je loc_4D0A40;");
    asm("loc_4D093A: mov 0x14(%esp),%edx;");
    asm("loc_4D093E: mov 0x438(%edx),%eax;");
    asm("loc_4D0944: test %eax,%eax;");
    asm("loc_4D0946: je loc_4D0951;");
    asm("loc_4D0948: cmp $4,%eax;");
    asm("loc_4D094B: jne loc_4D0E7B;");
    asm("loc_4D0951: mov 0x1B4(%ebp),%ebp;");
    asm("loc_4D0957: test %ebp,%ebp;");
    asm("loc_4D0959: je loc_4D09E6;");
    asm("loc_4D095F: mov 0x38(%esp),%eax;");
    asm("loc_4D0963: add $0xC,%eax;");
    asm("loc_4D0966: test %eax,%eax;");
    asm("loc_4D0968: je loc_4D0982;");
    asm("loc_4D096A: mov 4(%eax),%eax;");
    asm("loc_4D096D: test %eax,%eax;");
    asm("loc_4D096F: je loc_4D0982;");
    asm("loc_4D0971: mov 0x4C(%eax),%ecx;");
    asm("loc_4D0974: and $0x503,%ecx;");
    asm("loc_4D097A: cmp $0x503,%ecx;");
    asm("loc_4D0980: je loc_4D0984;");
    asm("loc_4D0982: xor %eax,%eax;");
    asm("loc_4D0984: cmp %ebp,0x1B4(%eax);");
    asm("loc_4D098A: jne loc_4D09E6;");
    asm("loc_4D098C: push $0;");
    asm("loc_4D098E: push $0;");
    asm("loc_4D0990: push $0;");
    asm("loc_4D0992: push %edi;");
    asm("loc_4D0993: push $0xF;");
    asm("loc_4D0995: lea 0xAC(%esp),%ecx;");
    asm("loc_4D099C: call _sub_4CF030;");
    asm("loc_4D09A1: mov 4(%esi),%ecx;");
    asm("loc_4D09A4: push %eax;");
    asm("loc_4D09A5: push %ecx;");
    asm("loc_4D09A6: lea 0x1A4(%esp),%edx;");
    asm("loc_4D09AD: push %edx;");
    asm("loc_4D09AE: mov %esi,%ecx;");
    asm("loc_4D09B0: movl $0,0x2230(%esp);");
    asm("loc_4D09BB: call _sub_4D4740;");
    asm("loc_4D09C0: mov 0x9C(%esp),%eax;");
    asm("loc_4D09C7: test %eax,%eax;");
    asm("loc_4D09C9: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D09D4: je loc_4D0E7B;");
    asm("loc_4D09DA: lea 0x9C(%esp),%ecx;");
    asm("loc_4D09E1: jmp loc_4D0E73;");
    asm("loc_4D09E6: push $0;");
    asm("loc_4D09E8: push $0;");
    asm("loc_4D09EA: push $0;");
    asm("loc_4D09EC: push %edi;");
    asm("loc_4D09ED: push $0xE;");
    asm("loc_4D09EF: lea 0x1B8(%esp),%ecx;");
    asm("loc_4D09F6: call _sub_4CF030;");
    asm("loc_4D09FB: mov 4(%esi),%ecx;");
    asm("loc_4D09FE: push %eax;");
    asm("loc_4D09FF: push %ecx;");
    asm("loc_4D0A00: lea 0x19C(%esp),%eax;");
    asm("loc_4D0A07: push %eax;");
    asm("loc_4D0A08: mov %esi,%ecx;");
    asm("loc_4D0A0A: movl $1,0x2230(%esp);");
    asm("loc_4D0A15: call _sub_4D4740;");
    asm("loc_4D0A1A: mov 0x1A8(%esp),%eax;");
    asm("loc_4D0A21: test %eax,%eax;");
    asm("loc_4D0A23: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D0A2E: je loc_4D0E7B;");
    asm("loc_4D0A34: lea 0x1A8(%esp),%ecx;");
    asm("loc_4D0A3B: jmp loc_4D0E73;");
    asm("loc_4D0A40: test $0x420000,%eax;");
    asm("loc_4D0A45: je loc_4D0B18;");
    asm("loc_4D0A4B: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_4D0A4E: jne loc_4D0AA6;");
    asm("loc_4D0A50: push $0;");
    asm("loc_4D0A52: push $0;");
    asm("loc_4D0A54: push $0;");
    asm("loc_4D0A56: push %edi;");
    asm("loc_4D0A57: push $8;");
    asm("loc_4D0A59: lea 0x1F0(%esp),%ecx;");
    asm("loc_4D0A60: call _sub_4CF030;");
    asm("loc_4D0A65: mov 4(%esi),%ecx;");
    asm("loc_4D0A68: push %eax;");
    asm("loc_4D0A69: push %ecx;");
    asm("loc_4D0A6A: lea 0x1A0(%esp),%ecx;");
    asm("loc_4D0A71: push %ecx;");
    asm("loc_4D0A72: mov %esi,%ecx;");
    asm("loc_4D0A74: movl $2,0x2230(%esp);");
    asm("loc_4D0A7F: call _sub_4D4740;");
    asm("loc_4D0A84: mov 0x1E0(%esp),%eax;");
    asm("loc_4D0A8B: test %eax,%eax;");
    asm("loc_4D0A8D: mov %ebx,0x2224(%esp);");
    asm("loc_4D0A94: je loc_4D0E7B;");
    asm("loc_4D0A9A: lea 0x1E0(%esp),%ecx;");
    asm("loc_4D0AA1: jmp loc_4D0E73;");
    asm("loc_4D0AA6: mov 0x14(%esp),%edx;");
    asm("loc_4D0AAA: mov 0x438(%edx),%eax;");
    asm("loc_4D0AB0: cmp $1,%eax;");
    asm("loc_4D0AB3: je loc_4D0ABE;");
    asm("loc_4D0AB5: cmp $4,%eax;");
    asm("loc_4D0AB8: jne loc_4D0E7B;");
    asm("loc_4D0ABE: push $0;");
    asm("loc_4D0AC0: push $0;");
    asm("loc_4D0AC2: push $0;");
    asm("loc_4D0AC4: push %edi;");
    asm("loc_4D0AC5: push $8;");
    asm("loc_4D0AC7: lea 0x1D4(%esp),%ecx;");
    asm("loc_4D0ACE: call _sub_4CF030;");
    asm("loc_4D0AD3: mov 4(%esi),%ecx;");
    asm("loc_4D0AD6: push %eax;");
    asm("loc_4D0AD7: push %ecx;");
    asm("loc_4D0AD8: lea 0x1A8(%esp),%eax;");
    asm("loc_4D0ADF: push %eax;");
    asm("loc_4D0AE0: mov %esi,%ecx;");
    asm("loc_4D0AE2: movl $3,0x2230(%esp);");
    asm("loc_4D0AED: call _sub_4D4740;");
    asm("loc_4D0AF2: mov 0x1C4(%esp),%eax;");
    asm("loc_4D0AF9: test %eax,%eax;");
    asm("loc_4D0AFB: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D0B06: je loc_4D0E7B;");
    asm("loc_4D0B0C: lea 0x1C4(%esp),%ecx;");
    asm("loc_4D0B13: jmp loc_4D0E73;");
    asm("loc_4D0B18: test $0x100000,%eax;");
    asm("loc_4D0B1D: je loc_4D0BF0;");
    asm("loc_4D0B23: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_4D0B26: jne loc_4D0B7E;");
    asm("loc_4D0B28: push $0;");
    asm("loc_4D0B2A: push $0;");
    asm("loc_4D0B2C: push $0;");
    asm("loc_4D0B2E: push %edi;");
    asm("loc_4D0B2F: push $9;");
    asm("loc_4D0B31: lea 0x100(%esp),%ecx;");
    asm("loc_4D0B38: call _sub_4CF030;");
    asm("loc_4D0B3D: mov 4(%esi),%ecx;");
    asm("loc_4D0B40: push %eax;");
    asm("loc_4D0B41: push %ecx;");
    asm("loc_4D0B42: lea 0xCC(%esp),%ecx;");
    asm("loc_4D0B49: push %ecx;");
    asm("loc_4D0B4A: mov %esi,%ecx;");
    asm("loc_4D0B4C: movl $4,0x2230(%esp);");
    asm("loc_4D0B57: call _sub_4D4740;");
    asm("loc_4D0B5C: mov 0xF0(%esp),%eax;");
    asm("loc_4D0B63: test %eax,%eax;");
    asm("loc_4D0B65: mov %ebx,0x2224(%esp);");
    asm("loc_4D0B6C: je loc_4D0E7B;");
    asm("loc_4D0B72: lea 0xF0(%esp),%ecx;");
    asm("loc_4D0B79: jmp loc_4D0E73;");
    asm("loc_4D0B7E: mov 0x14(%esp),%edx;");
    asm("loc_4D0B82: mov 0x438(%edx),%eax;");
    asm("loc_4D0B88: cmp $1,%eax;");
    asm("loc_4D0B8B: je loc_4D0B96;");
    asm("loc_4D0B8D: cmp $4,%eax;");
    asm("loc_4D0B90: jne loc_4D0E7B;");
    asm("loc_4D0B96: push $0;");
    asm("loc_4D0B98: push $0;");
    asm("loc_4D0B9A: push $0;");
    asm("loc_4D0B9C: push %edi;");
    asm("loc_4D0B9D: push $9;");
    asm("loc_4D0B9F: lea 0x138(%esp),%ecx;");
    asm("loc_4D0BA6: call _sub_4CF030;");
    asm("loc_4D0BAB: mov 4(%esi),%ecx;");
    asm("loc_4D0BAE: push %eax;");
    asm("loc_4D0BAF: push %ecx;");
    asm("loc_4D0BB0: lea 0xD4(%esp),%eax;");
    asm("loc_4D0BB7: push %eax;");
    asm("loc_4D0BB8: mov %esi,%ecx;");
    asm("loc_4D0BBA: movl $5,0x2230(%esp);");
    asm("loc_4D0BC5: call _sub_4D4740;");
    asm("loc_4D0BCA: mov 0x128(%esp),%eax;");
    asm("loc_4D0BD1: test %eax,%eax;");
    asm("loc_4D0BD3: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D0BDE: je loc_4D0E7B;");
    asm("loc_4D0BE4: lea 0x128(%esp),%ecx;");
    asm("loc_4D0BEB: jmp loc_4D0E73;");
    asm("loc_4D0BF0: test $0x200000,%eax;");
    asm("loc_4D0BF5: je loc_4D0CC8;");
    asm("loc_4D0BFB: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_4D0BFE: jne loc_4D0C56;");
    asm("loc_4D0C00: push $0;");
    asm("loc_4D0C02: push $0;");
    asm("loc_4D0C04: push $0;");
    asm("loc_4D0C06: push %edi;");
    asm("loc_4D0C07: push $5;");
    asm("loc_4D0C09: lea 0x170(%esp),%ecx;");
    asm("loc_4D0C10: call _sub_4CF030;");
    asm("loc_4D0C15: mov 4(%esi),%ecx;");
    asm("loc_4D0C18: push %eax;");
    asm("loc_4D0C19: push %ecx;");
    asm("loc_4D0C1A: lea 0xC8(%esp),%ecx;");
    asm("loc_4D0C21: push %ecx;");
    asm("loc_4D0C22: mov %esi,%ecx;");
    asm("loc_4D0C24: movl $6,0x2230(%esp);");
    asm("loc_4D0C2F: call _sub_4D4740;");
    asm("loc_4D0C34: mov 0x160(%esp),%eax;");
    asm("loc_4D0C3B: test %eax,%eax;");
    asm("loc_4D0C3D: mov %ebx,0x2224(%esp);");
    asm("loc_4D0C44: je loc_4D0E7B;");
    asm("loc_4D0C4A: lea 0x160(%esp),%ecx;");
    asm("loc_4D0C51: jmp loc_4D0E73;");
    asm("loc_4D0C56: mov 0x14(%esp),%edx;");
    asm("loc_4D0C5A: mov 0x438(%edx),%eax;");
    asm("loc_4D0C60: cmp $1,%eax;");
    asm("loc_4D0C63: je loc_4D0C6E;");
    asm("loc_4D0C65: cmp $4,%eax;");
    asm("loc_4D0C68: jne loc_4D0E7B;");
    asm("loc_4D0C6E: push $0;");
    asm("loc_4D0C70: push $0;");
    asm("loc_4D0C72: push $0;");
    asm("loc_4D0C74: push %edi;");
    asm("loc_4D0C75: push $5;");
    asm("loc_4D0C77: lea 0x11C(%esp),%ecx;");
    asm("loc_4D0C7E: call _sub_4CF030;");
    asm("loc_4D0C83: mov 4(%esi),%ecx;");
    asm("loc_4D0C86: push %eax;");
    asm("loc_4D0C87: push %ecx;");
    asm("loc_4D0C88: lea 0xD0(%esp),%eax;");
    asm("loc_4D0C8F: push %eax;");
    asm("loc_4D0C90: mov %esi,%ecx;");
    asm("loc_4D0C92: movl $7,0x2230(%esp);");
    asm("loc_4D0C9D: call _sub_4D4740;");
    asm("loc_4D0CA2: mov 0x10C(%esp),%eax;");
    asm("loc_4D0CA9: test %eax,%eax;");
    asm("loc_4D0CAB: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D0CB6: je loc_4D0E7B;");
    asm("loc_4D0CBC: lea 0x10C(%esp),%ecx;");
    asm("loc_4D0CC3: jmp loc_4D0E73;");
    asm("loc_4D0CC8: mov 0x4C(%ebp),%ecx;");
    asm("loc_4D0CCB: and $0x103,%ecx;");
    asm("loc_4D0CD1: cmp $0x103,%ecx;");
    asm("loc_4D0CD7: jne loc_4D0DC0;");
    asm("loc_4D0CDD: mov 0x88(%ebp),%ebp;");
    asm("loc_4D0CE3: test %ebp,%ebp;");
    asm("loc_4D0CE5: je loc_4D0DC0;");
    asm("loc_4D0CEB: mov 0x80(%ebp),%al;");
    asm("loc_4D0CF1: test %al,%al;");
    asm("loc_4D0CF3: je loc_4D0DC0;");
    asm("loc_4D0CF9: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_4D0CFC: jne loc_4D0D51;");
    asm("loc_4D0CFE: push $0;");
    asm("loc_4D0D00: push $0;");
    asm("loc_4D0D02: push $0;");
    asm("loc_4D0D04: push %edi;");
    asm("loc_4D0D05: push $0xA;");
    asm("loc_4D0D07: lea 0x154(%esp),%ecx;");
    asm("loc_4D0D0E: call _sub_4CF030;");
    asm("loc_4D0D13: mov 4(%esi),%ecx;");
    asm("loc_4D0D16: push %eax;");
    asm("loc_4D0D17: push %ecx;");
    asm("loc_4D0D18: lea 0x7C(%esp),%edx;");
    asm("loc_4D0D1C: push %edx;");
    asm("loc_4D0D1D: mov %esi,%ecx;");
    asm("loc_4D0D1F: movl $8,0x2230(%esp);");
    asm("loc_4D0D2A: call _sub_4D4740;");
    asm("loc_4D0D2F: mov 0x144(%esp),%eax;");
    asm("loc_4D0D36: test %eax,%eax;");
    asm("loc_4D0D38: mov %ebx,0x2224(%esp);");
    asm("loc_4D0D3F: je loc_4D0E7B;");
    asm("loc_4D0D45: lea 0x144(%esp),%ecx;");
    asm("loc_4D0D4C: jmp loc_4D0E73;");
    asm("loc_4D0D51: mov 0x14(%esp),%eax;");
    asm("loc_4D0D55: mov 0x438(%eax),%eax;");
    asm("loc_4D0D5B: cmp $1,%eax;");
    asm("loc_4D0D5E: je loc_4D0D69;");
    asm("loc_4D0D60: cmp $4,%eax;");
    asm("loc_4D0D63: jne loc_4D0E7B;");
    asm("loc_4D0D69: push $0;");
    asm("loc_4D0D6B: push $0;");
    asm("loc_4D0D6D: push $0;");
    asm("loc_4D0D6F: push %edi;");
    asm("loc_4D0D70: push $0xA;");
    asm("loc_4D0D72: lea 0x18C(%esp),%ecx;");
    asm("loc_4D0D79: call _sub_4CF030;");
    asm("loc_4D0D7E: mov 4(%esi),%ecx;");
    asm("loc_4D0D81: push %eax;");
    asm("loc_4D0D82: push %ecx;");
    asm("loc_4D0D83: lea 0x78(%esp),%ecx;");
    asm("loc_4D0D87: push %ecx;");
    asm("loc_4D0D88: mov %esi,%ecx;");
    asm("loc_4D0D8A: movl $9,0x2230(%esp);");
    asm("loc_4D0D95: call _sub_4D4740;");
    asm("loc_4D0D9A: mov 0x17C(%esp),%eax;");
    asm("loc_4D0DA1: test %eax,%eax;");
    asm("loc_4D0DA3: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D0DAE: je loc_4D0E7B;");
    asm("loc_4D0DB4: lea 0x17C(%esp),%ecx;");
    asm("loc_4D0DBB: jmp loc_4D0E73;");
    asm("loc_4D0DC0: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_4D0DC3: jne loc_4D0E11;");
    asm("loc_4D0DC5: push $0;");
    asm("loc_4D0DC7: push $0;");
    asm("loc_4D0DC9: push $0;");
    asm("loc_4D0DCB: push %edi;");
    asm("loc_4D0DCC: push $0;");
    asm("loc_4D0DCE: lea 0xE4(%esp),%ecx;");
    asm("loc_4D0DD5: call _sub_4CF030;");
    asm("loc_4D0DDA: mov 4(%esi),%ecx;");
    asm("loc_4D0DDD: push %eax;");
    asm("loc_4D0DDE: push %ecx;");
    asm("loc_4D0DDF: lea 0x68(%esp),%edx;");
    asm("loc_4D0DE3: push %edx;");
    asm("loc_4D0DE4: mov %esi,%ecx;");
    asm("loc_4D0DE6: movl $0xA,0x2230(%esp);");
    asm("loc_4D0DF1: call _sub_4D4740;");
    asm("loc_4D0DF6: mov 0xD4(%esp),%eax;");
    asm("loc_4D0DFD: test %eax,%eax;");
    asm("loc_4D0DFF: mov %ebx,0x2224(%esp);");
    asm("loc_4D0E06: je loc_4D0E7B;");
    asm("loc_4D0E08: lea 0xD4(%esp),%ecx;");
    asm("loc_4D0E0F: jmp loc_4D0E73;");
    asm("loc_4D0E11: mov 0x14(%esp),%eax;");
    asm("loc_4D0E15: mov 0x438(%eax),%eax;");
    asm("loc_4D0E1B: cmp $1,%eax;");
    asm("loc_4D0E1E: je loc_4D0E25;");
    asm("loc_4D0E20: cmp $4,%eax;");
    asm("loc_4D0E23: jne loc_4D0E7B;");
    asm("loc_4D0E25: push $0;");
    asm("loc_4D0E27: push $0;");
    asm("loc_4D0E29: push $0;");
    asm("loc_4D0E2B: push %edi;");
    asm("loc_4D0E2C: push $0;");
    asm("loc_4D0E2E: lea 0x90(%esp),%ecx;");
    asm("loc_4D0E35: call _sub_4CF030;");
    asm("loc_4D0E3A: mov 4(%esi),%ecx;");
    asm("loc_4D0E3D: push %eax;");
    asm("loc_4D0E3E: push %ecx;");
    asm("loc_4D0E3F: lea 0x54(%esp),%ecx;");
    asm("loc_4D0E43: push %ecx;");
    asm("loc_4D0E44: mov %esi,%ecx;");
    asm("loc_4D0E46: movl $0xB,0x2230(%esp);");
    asm("loc_4D0E51: call _sub_4D4740;");
    asm("loc_4D0E56: mov 0x80(%esp),%eax;");
    asm("loc_4D0E5D: test %eax,%eax;");
    asm("loc_4D0E5F: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D0E6A: je loc_4D0E7B;");
    asm("loc_4D0E6C: lea 0x80(%esp),%ecx;");
    asm("loc_4D0E73: push $0;");
    asm("loc_4D0E75: calll *_import_5C62A8;");
    asm("loc_4D0E7B: mov 0x14(%edi),%edi;");
    asm("loc_4D0E7E: test %edi,%edi;");
    asm("loc_4D0E80: jne loc_4D0820;");
    asm("loc_4D0E86: mov 0x14(%esp),%edx;");
    asm("loc_4D0E8A: mov 0x438(%edx),%eax;");
    asm("loc_4D0E90: cmp $3,%eax;");
    asm("loc_4D0E93: je loc_4D0E9E;");
    asm("loc_4D0E95: cmp $4,%eax;");
    asm("loc_4D0E98: jne loc_4D1002;");
    asm("loc_4D0E9E: lea 0x20(%esp),%eax;");
    asm("loc_4D0EA2: push %eax;");
    asm("loc_4D0EA3: movl $7,0x24(%esp);");
    asm("loc_4D0EAB: call _sub_540FC0;");
    asm("loc_4D0EB0: mov %eax,%edi;");
    asm("loc_4D0EB2: add $4,%esp;");
    asm("loc_4D0EB5: test %edi,%edi;");
    asm("loc_4D0EB7: je loc_4D1002;");
    asm("loc_4D0EBD: mov $0xC,%ebp;");
    asm("loc_4D0EC2: or $0xFFFFFFFF,%ebx;");
    asm("loc_4D0EC5: mov (%edi),%edx;");
    asm("loc_4D0EC7: mov %edi,%ecx;");
    asm("loc_4D0EC9: calll *0x20(%edx);");
    asm("loc_4D0ECC: cmp 0x3C(%esp),%eax;");
    asm("loc_4D0ED0: je loc_4D0FF7;");
    asm("loc_4D0ED6: mov 0x1B(%esp),%al;");
    asm("loc_4D0EDA: test %al,%al;");
    asm("loc_4D0EDC: mov %edi,%ecx;");
    asm("loc_4D0EDE: je loc_4D0F51;");
    asm("loc_4D0EE0: mov (%edi),%eax;");
    asm("loc_4D0EE2: calll *0x150(%eax);");
    asm("loc_4D0EE8: mov (%eax),%edx;");
    asm("loc_4D0EEA: lea 0x64(%esp),%ecx;");
    asm("loc_4D0EEE: push %ecx;");
    asm("loc_4D0EEF: mov %eax,%ecx;");
    asm("loc_4D0EF1: calll *0x64(%edx);");
    asm("loc_4D0EF4: fstps 0x34(%esp);");
    asm("loc_4D0EF8: flds 0x6C(%esp);");
    asm("loc_4D0EFC: sub $0xC,%esp;");
    asm("loc_4D0EFF: fsubs 0x38(%esp);");
    asm("loc_4D0F03: lea 0x4C(%esp),%ecx;");
    asm("loc_4D0F07: fstps 8(%esp);");
    asm("loc_4D0F0B: flds 0x74(%esp);");
    asm("loc_4D0F0F: fsubs 0x34(%esp);");
    asm("loc_4D0F13: fstps 4(%esp);");
    asm("loc_4D0F17: flds 0x70(%esp);");
    asm("loc_4D0F1B: fsubs 0x30(%esp);");
    asm("loc_4D0F1F: fstps (%esp);");
    asm("loc_4D0F22: call _sub_422B80;");
    asm("loc_4D0F27: flds 0x40(%esp);");
    asm("loc_4D0F2B: fmuls 0x40(%esp);");
    asm("loc_4D0F2F: flds 0x44(%esp);");
    asm("loc_4D0F33: fmuls 0x44(%esp);");
    asm("loc_4D0F37: faddp;");
    asm("loc_4D0F39: flds 0x48(%esp);");
    asm("loc_4D0F3D: fmuls 0x48(%esp);");
    asm("loc_4D0F41: faddp;");
    asm("loc_4D0F43: fsqrt;");
    asm("loc_4D0F45: fsubs 0x34(%esp);");
    asm("loc_4D0F49: fabs;");
    asm("loc_4D0F4B: fcomps 0x30(%esp);");
    asm("loc_4D0F4F: jmp loc_4D0FA2;");
    asm("loc_4D0F51: mov (%edi),%edx;");
    asm("loc_4D0F53: calll *(%edx);");
    asm("loc_4D0F55: flds 8(%eax);");
    asm("loc_4D0F58: fsubs 0x2C(%esp);");
    asm("loc_4D0F5C: sub $0xC,%esp;");
    asm("loc_4D0F5F: lea 0x5C(%esp),%ecx;");
    asm("loc_4D0F63: fstps 8(%esp);");
    asm("loc_4D0F67: flds 4(%eax);");
    asm("loc_4D0F6A: fsubs 0x34(%esp);");
    asm("loc_4D0F6E: fstps 4(%esp);");
    asm("loc_4D0F72: flds (%eax);");
    asm("loc_4D0F74: fsubs 0x30(%esp);");
    asm("loc_4D0F78: fstps (%esp);");
    asm("loc_4D0F7B: call _sub_422B80;");
    asm("loc_4D0F80: flds 0x50(%esp);");
    asm("loc_4D0F84: fmuls 0x50(%esp);");
    asm("loc_4D0F88: flds 0x54(%esp);");
    asm("loc_4D0F8C: fmuls 0x54(%esp);");
    asm("loc_4D0F90: faddp;");
    asm("loc_4D0F92: flds 0x58(%esp);");
    asm("loc_4D0F96: fmuls 0x58(%esp);");
    asm("loc_4D0F9A: faddp;");
    asm("loc_4D0F9C: fcomps _data_5D7968;");
    asm("loc_4D0FA2: fnstsw %ax;");
    asm("loc_4D0FA4: test $0x41,%ah;");
    asm("loc_4D0FA7: je loc_4D0FF7;");
    asm("loc_4D0FA9: push $0;");
    asm("loc_4D0FAB: push $0;");
    asm("loc_4D0FAD: push $0;");
    asm("loc_4D0FAF: push %edi;");
    asm("loc_4D0FB0: push $0xB;");
    asm("loc_4D0FB2: lea 0x90(%esp),%ecx;");
    asm("loc_4D0FB9: call _sub_4CF030;");
    asm("loc_4D0FBE: mov 4(%esi),%ecx;");
    asm("loc_4D0FC1: push %eax;");
    asm("loc_4D0FC2: push %ecx;");
    asm("loc_4D0FC3: lea 0x54(%esp),%eax;");
    asm("loc_4D0FC7: push %eax;");
    asm("loc_4D0FC8: mov %esi,%ecx;");
    asm("loc_4D0FCA: mov %ebp,0x2230(%esp);");
    asm("loc_4D0FD1: call _sub_4D4740;");
    asm("loc_4D0FD6: mov 0x80(%esp),%eax;");
    asm("loc_4D0FDD: test %eax,%eax;");
    asm("loc_4D0FDF: mov %ebx,0x2224(%esp);");
    asm("loc_4D0FE6: je loc_4D0FF7;");
    asm("loc_4D0FE8: push $0;");
    asm("loc_4D0FEA: lea 0x84(%esp),%ecx;");
    asm("loc_4D0FF1: calll *_import_5C62A8;");
    asm("loc_4D0FF7: mov 0x14(%edi),%edi;");
    asm("loc_4D0FFA: test %edi,%edi;");
    asm("loc_4D0FFC: jne loc_4D0EC5;");
    asm("loc_4D1002: mov 0x14(%esp),%ecx;");
    asm("loc_4D1006: mov 0x438(%ecx),%eax;");
    asm("loc_4D100C: test %eax,%eax;");
    asm("loc_4D100E: je loc_4D1023;");
    asm("loc_4D1010: cmp $2,%eax;");
    asm("loc_4D1013: je loc_4D1023;");
    asm("loc_4D1015: cmp $4,%eax;");
    asm("loc_4D1018: je loc_4D1023;");
    asm("loc_4D101A: cmp $3,%eax;");
    asm("loc_4D101D: jne loc_4D1EE0;");
    asm("loc_4D1023: lea 0x5C(%esp),%ecx;");
    asm("loc_4D1027: call _sub_540A00;");
    asm("loc_4D102C: mov %eax,%edi;");
    asm("loc_4D102E: test %edi,%edi;");
    asm("loc_4D1030: je loc_4D16EE;");
    asm("loc_4D1036: lea 0xC(%edi),%eax;");
    asm("loc_4D1039: test %eax,%eax;");
    asm("loc_4D103B: je loc_4D1082;");
    asm("loc_4D103D: mov 4(%eax),%ecx;");
    asm("loc_4D1040: test %ecx,%ecx;");
    asm("loc_4D1042: je loc_4D1082;");
    asm("loc_4D1044: mov 0x4C(%ecx),%edx;");
    asm("loc_4D1047: mov %edx,%eax;");
    asm("loc_4D1049: and $0x103,%eax;");
    asm("loc_4D104E: cmp $0x103,%eax;");
    asm("loc_4D1053: jne loc_4D1082;");
    asm("loc_4D1055: flds 0x140(%ecx);");
    asm("loc_4D105B: mov %ecx,%ebp;");
    asm("loc_4D105D: fcomps _data_5C75DC;");
    asm("loc_4D1063: fnstsw %ax;");
    asm("loc_4D1065: test $1,%ah;");
    asm("loc_4D1068: je loc_4D16DB;");
    asm("loc_4D106E: and $0x303,%edx;");
    asm("loc_4D1074: cmp $0x303,%edx;");
    asm("loc_4D107A: jne loc_4D1084;");
    asm("loc_4D107C: mov %ecx,0x20(%esp);");
    asm("loc_4D1080: jmp loc_4D1088;");
    asm("loc_4D1082: xor %ebp,%ebp;");
    asm("loc_4D1084: xor %eax,%eax;");
    asm("loc_4D1086: jmp loc_4D10A2;");
    asm("loc_4D1088: calll *_import_5C64E0;");
    asm("loc_4D108E: mov %eax,%ecx;");
    asm("loc_4D1090: calll *_import_5C6040;");
    asm("loc_4D1096: test %al,%al;");
    asm("loc_4D1098: je loc_4D16DB;");
    asm("loc_4D109E: mov 0x20(%esp),%eax;");
    asm("loc_4D10A2: mov 0xB0(%eax),%ecx;");
    asm("loc_4D10A8: cmp 0x3C(%esp),%ecx;");
    asm("loc_4D10AC: je loc_4D16DB;");
    asm("loc_4D10B2: mov 0x1B(%esp),%al;");
    asm("loc_4D10B6: test %al,%al;");
    asm("loc_4D10B8: movb $0,0x13(%esp);");
    asm("loc_4D10BD: je loc_4D114B;");
    asm("loc_4D10C3: mov (%edi),%edx;");
    asm("loc_4D10C5: mov %edi,%ecx;");
    asm("loc_4D10C7: calll *0x150(%edx);");
    asm("loc_4D10CD: mov (%eax),%edx;");
    asm("loc_4D10CF: lea 0x98(%esp),%ecx;");
    asm("loc_4D10D6: push %ecx;");
    asm("loc_4D10D7: mov %eax,%ecx;");
    asm("loc_4D10D9: calll *0x64(%edx);");
    asm("loc_4D10DC: fstps 0x20(%esp);");
    asm("loc_4D10E0: flds 0xA0(%esp);");
    asm("loc_4D10E7: sub $0xC,%esp;");
    asm("loc_4D10EA: fsubs 0x38(%esp);");
    asm("loc_4D10EE: lea 0x5C(%esp),%ecx;");
    asm("loc_4D10F2: fstps 8(%esp);");
    asm("loc_4D10F6: flds 0xA8(%esp);");
    asm("loc_4D10FD: fsubs 0x34(%esp);");
    asm("loc_4D1101: fstps 4(%esp);");
    asm("loc_4D1105: flds 0xA4(%esp);");
    asm("loc_4D110C: fsubs 0x30(%esp);");
    asm("loc_4D1110: fstps (%esp);");
    asm("loc_4D1113: call _sub_422B80;");
    asm("loc_4D1118: flds 0x50(%esp);");
    asm("loc_4D111C: fmuls 0x50(%esp);");
    asm("loc_4D1120: flds 0x54(%esp);");
    asm("loc_4D1124: fmuls 0x54(%esp);");
    asm("loc_4D1128: faddp;");
    asm("loc_4D112A: flds 0x58(%esp);");
    asm("loc_4D112E: fmuls 0x58(%esp);");
    asm("loc_4D1132: faddp;");
    asm("loc_4D1134: fsqrt;");
    asm("loc_4D1136: fsubs 0x20(%esp);");
    asm("loc_4D113A: fabs;");
    asm("loc_4D113C: fcomps 0x30(%esp);");
    asm("loc_4D1140: fnstsw %ax;");
    asm("loc_4D1142: test $0x41,%ah;");
    asm("loc_4D1145: je loc_4D16DB;");
    asm("loc_4D114B: mov %edi,%ecx;");
    asm("loc_4D114D: call _sub_53A960;");
    asm("loc_4D1152: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4D1155: mov %eax,0x34(%esp);");
    asm("loc_4D1159: jne loc_4D11C3;");
    asm("loc_4D115B: flds 0x34(%ebp);");
    asm("loc_4D115E: sub $0xC,%esp;");
    asm("loc_4D1161: fsubs 0x38(%esp);");
    asm("loc_4D1165: lea 0x4C(%esp),%ecx;");
    asm("loc_4D1169: fstps 8(%esp);");
    asm("loc_4D116D: flds 0x30(%ebp);");
    asm("loc_4D1170: fsubs 0x34(%esp);");
    asm("loc_4D1174: fstps 4(%esp);");
    asm("loc_4D1178: flds 0x2C(%ebp);");
    asm("loc_4D117B: fsubs 0x30(%esp);");
    asm("loc_4D117F: fstps (%esp);");
    asm("loc_4D1182: call _sub_422B80;");
    asm("loc_4D1187: mov 0x14(%esp),%edx;");
    asm("loc_4D118B: mov 0x438(%edx),%eax;");
    asm("loc_4D1191: test %eax,%eax;");
    asm("loc_4D1193: jne loc_4D11C3;");
    asm("loc_4D1195: flds 0x40(%esp);");
    asm("loc_4D1199: fmuls 0x40(%esp);");
    asm("loc_4D119D: flds 0x44(%esp);");
    asm("loc_4D11A1: fmuls 0x44(%esp);");
    asm("loc_4D11A5: faddp;");
    asm("loc_4D11A7: flds 0x48(%esp);");
    asm("loc_4D11AB: fmuls 0x48(%esp);");
    asm("loc_4D11AF: faddp;");
    asm("loc_4D11B1: fcomps _data_5D7968;");
    asm("loc_4D11B7: fnstsw %ax;");
    asm("loc_4D11B9: test $5,%ah;");
    asm("loc_4D11BC: jp loc_4D11C3;");
    asm("loc_4D11BE: movb $1,0x13(%esp);");
    asm("loc_4D11C3: mov 0xE0(%ebp),%ebx;");
    asm("loc_4D11C9: test $_off_600DE0+3,%ebx;");
    asm("loc_4D11CF: mov %ebx,0x20(%esp);");
    asm("loc_4D11D3: je loc_4D1454;");
    asm("loc_4D11D9: push %ebp;");
    asm("loc_4D11DA: call _sub_4D4C70;");
    asm("loc_4D11DF: add $4,%esp;");
    asm("loc_4D11E2: test %al,%al;");
    asm("loc_4D11E4: jne loc_4D16DB;");
    asm("loc_4D11EA: mov %ebx,%eax;");
    asm("loc_4D11EC: test %al,%al;");
    asm("loc_4D11EE: jns loc_4D12D9;");
    asm("loc_4D11F4: flds 0x34(%ebp);");
    asm("loc_4D11F7: sub $0xC,%esp;");
    asm("loc_4D11FA: fsubs 0x38(%esp);");
    asm("loc_4D11FE: lea 0xC0(%esp),%ecx;");
    asm("loc_4D1205: fstps 8(%esp);");
    asm("loc_4D1209: flds 0x30(%ebp);");
    asm("loc_4D120C: fsubs 0x34(%esp);");
    asm("loc_4D1210: fstps 4(%esp);");
    asm("loc_4D1214: flds 0x2C(%ebp);");
    asm("loc_4D1217: fsubs 0x30(%esp);");
    asm("loc_4D121B: fstps (%esp);");
    asm("loc_4D121E: call _sub_422B80;");
    asm("loc_4D1223: flds 0xB4(%esp);");
    asm("loc_4D122A: fmuls 0xB4(%esp);");
    asm("loc_4D1231: flds 0xB8(%esp);");
    asm("loc_4D1238: fmuls 0xB8(%esp);");
    asm("loc_4D123F: faddp;");
    asm("loc_4D1241: flds 0xBC(%esp);");
    asm("loc_4D1248: fmuls 0xBC(%esp);");
    asm("loc_4D124F: faddp;");
    asm("loc_4D1251: fcomps _data_5D7968;");
    asm("loc_4D1257: fnstsw %ax;");
    asm("loc_4D1259: test $5,%ah;");
    asm("loc_4D125C: jp loc_4D16DB;");
    asm("loc_4D1262: mov 0x14(%esp),%eax;");
    asm("loc_4D1266: mov 0x438(%eax),%eax;");
    asm("loc_4D126C: cmp $2,%eax;");
    asm("loc_4D126F: je loc_4D1282;");
    asm("loc_4D1271: cmp $4,%eax;");
    asm("loc_4D1274: je loc_4D1282;");
    asm("loc_4D1276: mov 0x13(%esp),%al;");
    asm("loc_4D127A: test %al,%al;");
    asm("loc_4D127C: je loc_4D16DB;");
    asm("loc_4D1282: push $0;");
    asm("loc_4D1284: push $0;");
    asm("loc_4D1286: push $0;");
    asm("loc_4D1288: push %edi;");
    asm("loc_4D1289: push $7;");
    asm("loc_4D128B: lea 0x90(%esp),%ecx;");
    asm("loc_4D1292: call _sub_4CF030;");
    asm("loc_4D1297: mov 4(%esi),%ecx;");
    asm("loc_4D129A: push %eax;");
    asm("loc_4D129B: push %ecx;");
    asm("loc_4D129C: lea 0x54(%esp),%ecx;");
    asm("loc_4D12A0: push %ecx;");
    asm("loc_4D12A1: mov %esi,%ecx;");
    asm("loc_4D12A3: movl $0xD,0x2230(%esp);");
    asm("loc_4D12AE: call _sub_4D4740;");
    asm("loc_4D12B3: mov 0x80(%esp),%eax;");
    asm("loc_4D12BA: test %eax,%eax;");
    asm("loc_4D12BC: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D12C7: je loc_4D16DB;");
    asm("loc_4D12CD: lea 0x80(%esp),%ecx;");
    asm("loc_4D12D4: jmp loc_4D16D3;");
    asm("loc_4D12D9: test $3,%al;");
    asm("loc_4D12DB: je loc_4D1354;");
    asm("loc_4D12DD: mov 0x14(%esp),%edx;");
    asm("loc_4D12E1: mov 0x438(%edx),%eax;");
    asm("loc_4D12E7: cmp $2,%eax;");
    asm("loc_4D12EA: je loc_4D12FD;");
    asm("loc_4D12EC: cmp $4,%eax;");
    asm("loc_4D12EF: je loc_4D12FD;");
    asm("loc_4D12F1: mov 0x13(%esp),%al;");
    asm("loc_4D12F5: test %al,%al;");
    asm("loc_4D12F7: je loc_4D16DB;");
    asm("loc_4D12FD: push $0;");
    asm("loc_4D12FF: push $0;");
    asm("loc_4D1301: push $0;");
    asm("loc_4D1303: push %edi;");
    asm("loc_4D1304: push $1;");
    asm("loc_4D1306: lea 0xE4(%esp),%ecx;");
    asm("loc_4D130D: call _sub_4CF030;");
    asm("loc_4D1312: mov 4(%esi),%ecx;");
    asm("loc_4D1315: push %eax;");
    asm("loc_4D1316: push %ecx;");
    asm("loc_4D1317: lea 0x68(%esp),%eax;");
    asm("loc_4D131B: push %eax;");
    asm("loc_4D131C: mov %esi,%ecx;");
    asm("loc_4D131E: movl $0xE,0x2230(%esp);");
    asm("loc_4D1329: call _sub_4D4740;");
    asm("loc_4D132E: mov 0xD4(%esp),%eax;");
    asm("loc_4D1335: test %eax,%eax;");
    asm("loc_4D1337: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1342: je loc_4D16DB;");
    asm("loc_4D1348: lea 0xD4(%esp),%ecx;");
    asm("loc_4D134F: jmp loc_4D16D3;");
    asm("loc_4D1354: test $0x200000,%eax;");
    asm("loc_4D1359: jne loc_4D16DB;");
    asm("loc_4D135F: test $0xC40,%eax;");
    asm("loc_4D1364: je loc_4D13DD;");
    asm("loc_4D1366: mov 0x14(%esp),%ecx;");
    asm("loc_4D136A: mov 0x438(%ecx),%eax;");
    asm("loc_4D1370: cmp $2,%eax;");
    asm("loc_4D1373: je loc_4D1386;");
    asm("loc_4D1375: cmp $4,%eax;");
    asm("loc_4D1378: je loc_4D1386;");
    asm("loc_4D137A: mov 0x13(%esp),%al;");
    asm("loc_4D137E: test %al,%al;");
    asm("loc_4D1380: je loc_4D16DB;");
    asm("loc_4D1386: push $0;");
    asm("loc_4D1388: push $0;");
    asm("loc_4D138A: push $0;");
    asm("loc_4D138C: push %edi;");
    asm("loc_4D138D: push $6;");
    asm("loc_4D138F: lea 0x18C(%esp),%ecx;");
    asm("loc_4D1396: call _sub_4CF030;");
    asm("loc_4D139B: mov 4(%esi),%ecx;");
    asm("loc_4D139E: push %eax;");
    asm("loc_4D139F: push %ecx;");
    asm("loc_4D13A0: lea 0x78(%esp),%edx;");
    asm("loc_4D13A4: push %edx;");
    asm("loc_4D13A5: mov %esi,%ecx;");
    asm("loc_4D13A7: movl $0xF,0x2230(%esp);");
    asm("loc_4D13B2: call _sub_4D4740;");
    asm("loc_4D13B7: mov 0x17C(%esp),%eax;");
    asm("loc_4D13BE: test %eax,%eax;");
    asm("loc_4D13C0: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D13CB: je loc_4D16DB;");
    asm("loc_4D13D1: lea 0x17C(%esp),%ecx;");
    asm("loc_4D13D8: jmp loc_4D16D3;");
    asm("loc_4D13DD: mov 0x13(%esp),%al;");
    asm("loc_4D13E1: test %al,%al;");
    asm("loc_4D13E3: jne loc_4D13FD;");
    asm("loc_4D13E5: mov 0x14(%esp),%eax;");
    asm("loc_4D13E9: mov 0x438(%eax),%eax;");
    asm("loc_4D13EF: cmp $2,%eax;");
    asm("loc_4D13F2: je loc_4D13FD;");
    asm("loc_4D13F4: cmp $4,%eax;");
    asm("loc_4D13F7: jne loc_4D16DB;");
    asm("loc_4D13FD: push $0;");
    asm("loc_4D13FF: push $0;");
    asm("loc_4D1401: push $0;");
    asm("loc_4D1403: push %edi;");
    asm("loc_4D1404: push $2;");
    asm("loc_4D1406: lea 0x154(%esp),%ecx;");
    asm("loc_4D140D: call _sub_4CF030;");
    asm("loc_4D1412: mov 4(%esi),%ecx;");
    asm("loc_4D1415: push %eax;");
    asm("loc_4D1416: push %ecx;");
    asm("loc_4D1417: lea 0x7C(%esp),%ecx;");
    asm("loc_4D141B: push %ecx;");
    asm("loc_4D141C: mov %esi,%ecx;");
    asm("loc_4D141E: movl $0x10,0x2230(%esp);");
    asm("loc_4D1429: call _sub_4D4740;");
    asm("loc_4D142E: mov 0x144(%esp),%eax;");
    asm("loc_4D1435: test %eax,%eax;");
    asm("loc_4D1437: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1442: je loc_4D16DB;");
    asm("loc_4D1448: lea 0x144(%esp),%ecx;");
    asm("loc_4D144F: jmp loc_4D16D3;");
    asm("loc_4D1454: flds 0x34(%ebp);");
    asm("loc_4D1457: sub $0xC,%esp;");
    asm("loc_4D145A: fsubs 0x38(%esp);");
    asm("loc_4D145E: lea 0x70(%esp),%ecx;");
    asm("loc_4D1462: fstps 8(%esp);");
    asm("loc_4D1466: flds 0x30(%ebp);");
    asm("loc_4D1469: fsubs 0x34(%esp);");
    asm("loc_4D146D: fstps 4(%esp);");
    asm("loc_4D1471: flds 0x2C(%ebp);");
    asm("loc_4D1474: fsubs 0x30(%esp);");
    asm("loc_4D1478: fstps (%esp);");
    asm("loc_4D147B: call _sub_422B80;");
    asm("loc_4D1480: flds 0x64(%esp);");
    asm("loc_4D1484: fmuls 0x64(%esp);");
    asm("loc_4D1488: flds 0x68(%esp);");
    asm("loc_4D148C: fmuls 0x68(%esp);");
    asm("loc_4D1490: faddp;");
    asm("loc_4D1492: flds 0x6C(%esp);");
    asm("loc_4D1496: fmuls 0x6C(%esp);");
    asm("loc_4D149A: faddp;");
    asm("loc_4D149C: fcomps _data_5D7968;");
    asm("loc_4D14A2: fnstsw %ax;");
    asm("loc_4D14A4: test $5,%ah;");
    asm("loc_4D14A7: jp loc_4D16DB;");
    asm("loc_4D14AD: mov 0x4C(%ebp),%edx;");
    asm("loc_4D14B0: and $0x103,%edx;");
    asm("loc_4D14B6: cmp $0x103,%edx;");
    asm("loc_4D14BC: jne loc_4D15B9;");
    asm("loc_4D14C2: mov 0x88(%ebp),%eax;");
    asm("loc_4D14C8: test %eax,%eax;");
    asm("loc_4D14CA: je loc_4D15B9;");
    asm("loc_4D14D0: mov 0x80(%eax),%cl;");
    asm("loc_4D14D6: test %cl,%cl;");
    asm("loc_4D14D8: je loc_4D15B9;");
    asm("loc_4D14DE: mov 0x14(%esp),%eax;");
    asm("loc_4D14E2: mov 0x438(%eax),%eax;");
    asm("loc_4D14E8: cmp $3,%eax;");
    asm("loc_4D14EB: je loc_4D15B9;");
    asm("loc_4D14F1: mov 0x34(%esp),%ecx;");
    asm("loc_4D14F5: or $0xFFFFFFFF,%ebx;");
    asm("loc_4D14F8: cmp %ebx,%ecx;");
    asm("loc_4D14FA: jne loc_4D1552;");
    asm("loc_4D14FC: push $0;");
    asm("loc_4D14FE: push $0;");
    asm("loc_4D1500: push $0;");
    asm("loc_4D1502: push %edi;");
    asm("loc_4D1503: push $0xA;");
    asm("loc_4D1505: lea 0x11C(%esp),%ecx;");
    asm("loc_4D150C: call _sub_4CF030;");
    asm("loc_4D1511: mov 4(%esi),%ecx;");
    asm("loc_4D1514: push %eax;");
    asm("loc_4D1515: push %ecx;");
    asm("loc_4D1516: lea 0xD0(%esp),%ecx;");
    asm("loc_4D151D: push %ecx;");
    asm("loc_4D151E: mov %esi,%ecx;");
    asm("loc_4D1520: movl $0x11,0x2230(%esp);");
    asm("loc_4D152B: call _sub_4D4740;");
    asm("loc_4D1530: mov 0x10C(%esp),%eax;");
    asm("loc_4D1537: test %eax,%eax;");
    asm("loc_4D1539: mov %ebx,0x2224(%esp);");
    asm("loc_4D1540: je loc_4D16DB;");
    asm("loc_4D1546: lea 0x10C(%esp),%ecx;");
    asm("loc_4D154D: jmp loc_4D16D3;");
    asm("loc_4D1552: cmp $2,%eax;");
    asm("loc_4D1555: je loc_4D1563;");
    asm("loc_4D1557: cmp $4,%eax;");
    asm("loc_4D155A: jne loc_4D16DB;");
    asm("loc_4D1560: or $0xFFFFFFFF,%ebx;");
    asm("loc_4D1563: push $0;");
    asm("loc_4D1565: push $0;");
    asm("loc_4D1567: push $0;");
    asm("loc_4D1569: push %edi;");
    asm("loc_4D156A: push $0xA;");
    asm("loc_4D156C: lea 0x170(%esp),%ecx;");
    asm("loc_4D1573: call _sub_4CF030;");
    asm("loc_4D1578: mov 4(%esi),%ecx;");
    asm("loc_4D157B: push %eax;");
    asm("loc_4D157C: push %ecx;");
    asm("loc_4D157D: lea 0xC8(%esp),%edx;");
    asm("loc_4D1584: push %edx;");
    asm("loc_4D1585: mov %esi,%ecx;");
    asm("loc_4D1587: movl $0x12,0x2230(%esp);");
    asm("loc_4D1592: call _sub_4D4740;");
    asm("loc_4D1597: mov 0x160(%esp),%eax;");
    asm("loc_4D159E: test %eax,%eax;");
    asm("loc_4D15A0: mov %ebx,0x2224(%esp);");
    asm("loc_4D15A7: je loc_4D16DB;");
    asm("loc_4D15AD: lea 0x160(%esp),%ecx;");
    asm("loc_4D15B4: jmp loc_4D16D3;");
    asm("loc_4D15B9: test $0x9010,%ebx;");
    asm("loc_4D15BF: je loc_4D1650;");
    asm("loc_4D15C5: push %ebp;");
    asm("loc_4D15C6: call _sub_4D4C70;");
    asm("loc_4D15CB: add $4,%esp;");
    asm("loc_4D15CE: test %al,%al;");
    asm("loc_4D15D0: jne loc_4D16DB;");
    asm("loc_4D15D6: mov 0x14(%esp),%eax;");
    asm("loc_4D15DA: mov 0x438(%eax),%eax;");
    asm("loc_4D15E0: cmp $2,%eax;");
    asm("loc_4D15E3: je loc_4D15F6;");
    asm("loc_4D15E5: cmp $4,%eax;");
    asm("loc_4D15E8: je loc_4D15F6;");
    asm("loc_4D15EA: mov 0x13(%esp),%al;");
    asm("loc_4D15EE: test %al,%al;");
    asm("loc_4D15F0: je loc_4D16DB;");
    asm("loc_4D15F6: push $0;");
    asm("loc_4D15F8: push $0;");
    asm("loc_4D15FA: push $0;");
    asm("loc_4D15FC: push %edi;");
    asm("loc_4D15FD: push $0xC;");
    asm("loc_4D15FF: lea 0x138(%esp),%ecx;");
    asm("loc_4D1606: call _sub_4CF030;");
    asm("loc_4D160B: mov 4(%esi),%ecx;");
    asm("loc_4D160E: push %eax;");
    asm("loc_4D160F: push %ecx;");
    asm("loc_4D1610: lea 0xD4(%esp),%ecx;");
    asm("loc_4D1617: push %ecx;");
    asm("loc_4D1618: mov %esi,%ecx;");
    asm("loc_4D161A: movl $0x13,0x2230(%esp);");
    asm("loc_4D1625: call _sub_4D4740;");
    asm("loc_4D162A: mov 0x128(%esp),%eax;");
    asm("loc_4D1631: test %eax,%eax;");
    asm("loc_4D1633: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D163E: je loc_4D16DB;");
    asm("loc_4D1644: lea 0x128(%esp),%ecx;");
    asm("loc_4D164B: jmp loc_4D16D3;");
    asm("loc_4D1650: test $0x20,%bh;");
    asm("loc_4D1653: je loc_4D16DB;");
    asm("loc_4D1659: push %ebp;");
    asm("loc_4D165A: call _sub_4D4C70;");
    asm("loc_4D165F: add $4,%esp;");
    asm("loc_4D1662: test %al,%al;");
    asm("loc_4D1664: jne loc_4D16DB;");
    asm("loc_4D1666: mov 0x14(%esp),%edx;");
    asm("loc_4D166A: mov 0x438(%edx),%eax;");
    asm("loc_4D1670: cmp $2,%eax;");
    asm("loc_4D1673: je loc_4D1682;");
    asm("loc_4D1675: cmp $4,%eax;");
    asm("loc_4D1678: je loc_4D1682;");
    asm("loc_4D167A: mov 0x13(%esp),%al;");
    asm("loc_4D167E: test %al,%al;");
    asm("loc_4D1680: je loc_4D16DB;");
    asm("loc_4D1682: push $0;");
    asm("loc_4D1684: push $0;");
    asm("loc_4D1686: push $0;");
    asm("loc_4D1688: push %edi;");
    asm("loc_4D1689: push $0xD;");
    asm("loc_4D168B: lea 0x100(%esp),%ecx;");
    asm("loc_4D1692: call _sub_4CF030;");
    asm("loc_4D1697: mov 4(%esi),%ecx;");
    asm("loc_4D169A: push %eax;");
    asm("loc_4D169B: push %ecx;");
    asm("loc_4D169C: lea 0xCC(%esp),%eax;");
    asm("loc_4D16A3: push %eax;");
    asm("loc_4D16A4: mov %esi,%ecx;");
    asm("loc_4D16A6: movl $0x14,0x2230(%esp);");
    asm("loc_4D16B1: call _sub_4D4740;");
    asm("loc_4D16B6: mov 0xF0(%esp),%eax;");
    asm("loc_4D16BD: test %eax,%eax;");
    asm("loc_4D16BF: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D16CA: je loc_4D16DB;");
    asm("loc_4D16CC: lea 0xF0(%esp),%ecx;");
    asm("loc_4D16D3: push $0;");
    asm("loc_4D16D5: calll *_import_5C62A8;");
    asm("loc_4D16DB: lea 0x5C(%esp),%ecx;");
    asm("loc_4D16DF: call _sub_540A20;");
    asm("loc_4D16E4: mov %eax,%edi;");
    asm("loc_4D16E6: test %edi,%edi;");
    asm("loc_4D16E8: jne loc_4D1036;");
    asm("loc_4D16EE: mov _off_613ED0,%ecx;");
    asm("loc_4D16F4: mov (%ecx),%edx;");
    asm("loc_4D16F6: push $0xFDFF;");
    asm("loc_4D16FB: calll *0xC(%edx);");
    asm("loc_4D16FE: mov 0x24(%esp),%ecx;");
    asm("loc_4D1702: mov 0x28(%esp),%edx;");
    asm("loc_4D1706: mov %ecx,0x98(%esp);");
    asm("loc_4D170D: mov 0x2C(%esp),%ecx;");
    asm("loc_4D1711: mov %ecx,0xA0(%esp);");
    asm("loc_4D1718: lea 0x214(%esp),%ecx;");
    asm("loc_4D171F: push %ecx;");
    asm("loc_4D1720: lea 0x9C(%esp),%ecx;");
    asm("loc_4D1727: movl $0,0x21C(%esp);");
    asm("loc_4D1732: movl $0x800,0x218(%esp);");
    asm("loc_4D173D: mov %edx,0xA0(%esp);");
    asm("loc_4D1744: mov (%eax),%edx;");
    asm("loc_4D1746: push %ecx;");
    asm("loc_4D1747: mov %eax,%ecx;");
    asm("loc_4D1749: movl $0x465AC000,0xAC(%esp);");
    asm("loc_4D1754: calll *0x1C(%edx);");
    asm("loc_4D1757: test %eax,%eax;");
    asm("loc_4D1759: jbe loc_4D1EE0;");
    asm("loc_4D175F: mov 0x218(%esp),%ecx;");
    asm("loc_4D1766: test %ecx,%ecx;");
    asm("loc_4D1768: movl $0,0x38(%esp);");
    asm("loc_4D1770: jbe loc_4D1EE0;");
    asm("loc_4D1776: lea 0x21C(%esp),%edx;");
    asm("loc_4D177D: mov %edx,0x1C(%esp);");
    asm("loc_4D1781: cmp %ecx,0x38(%esp);");
    asm("loc_4D1785: jae loc_4D178F;");
    asm("loc_4D1787: mov 0x1C(%esp),%eax;");
    asm("loc_4D178B: mov (%eax),%edi;");
    asm("loc_4D178D: jmp loc_4D1791;");
    asm("loc_4D178F: xor %edi,%edi;");
    asm("loc_4D1791: push %edi;");
    asm("loc_4D1792: call _sub_540990;");
    asm("loc_4D1797: add $4,%esp;");
    asm("loc_4D179A: test %al,%al;");
    asm("loc_4D179C: jne loc_4D1EBD;");
    asm("loc_4D17A2: mov (%edi),%edx;");
    asm("loc_4D17A4: mov %edi,%ecx;");
    asm("loc_4D17A6: calll *0x20(%edx);");
    asm("loc_4D17A9: cmp 0x3C(%esp),%eax;");
    asm("loc_4D17AD: je loc_4D1EBD;");
    asm("loc_4D17B3: mov (%edi),%eax;");
    asm("loc_4D17B5: mov %edi,%ecx;");
    asm("loc_4D17B7: calll *0x150(%eax);");
    asm("loc_4D17BD: test %eax,%eax;");
    asm("loc_4D17BF: je loc_4D1911;");
    asm("loc_4D17C5: mov 0x4C(%eax),%ecx;");
    asm("loc_4D17C8: and $0x103,%ecx;");
    asm("loc_4D17CE: cmp $0x103,%ecx;");
    asm("loc_4D17D4: jne loc_4D1911;");
    asm("loc_4D17DA: flds 0x140(%eax);");
    asm("loc_4D17E0: mov %eax,%ebx;");
    asm("loc_4D17E2: fcomps _data_5C75DC;");
    asm("loc_4D17E8: fnstsw %ax;");
    asm("loc_4D17EA: test $1,%ah;");
    asm("loc_4D17ED: je loc_4D1EBD;");
    asm("loc_4D17F3: mov (%edi),%edx;");
    asm("loc_4D17F5: mov %edi,%ecx;");
    asm("loc_4D17F7: calll *0x150(%edx);");
    asm("loc_4D17FD: mov %eax,%ebp;");
    asm("loc_4D17FF: test %ebp,%ebp;");
    asm("loc_4D1801: je loc_4D1EBD;");
    asm("loc_4D1807: mov 0x4C(%ebp),%eax;");
    asm("loc_4D180A: and $3,%eax;");
    asm("loc_4D180D: cmp $3,%al;");
    asm("loc_4D180F: jne loc_4D1EBD;");
    asm("loc_4D1815: test %ebx,%ebx;");
    asm("loc_4D1817: je loc_4D1842;");
    asm("loc_4D1819: mov 0x4C(%ebx),%ecx;");
    asm("loc_4D181C: and $0x303,%ecx;");
    asm("loc_4D1822: cmp $0x303,%ecx;");
    asm("loc_4D1828: jne loc_4D1842;");
    asm("loc_4D182A: mov %ebx,%ecx;");
    asm("loc_4D182C: calll *_import_5C64E0;");
    asm("loc_4D1832: mov %eax,%ecx;");
    asm("loc_4D1834: calll *_import_5C6040;");
    asm("loc_4D183A: test %al,%al;");
    asm("loc_4D183C: je loc_4D1EBD;");
    asm("loc_4D1842: mov 0x1B(%esp),%al;");
    asm("loc_4D1846: xor %bl,%bl;");
    asm("loc_4D1848: test %al,%al;");
    asm("loc_4D184A: mov %bl,0x13(%esp);");
    asm("loc_4D184E: je loc_4D18B5;");
    asm("loc_4D1850: mov (%edi),%edx;");
    asm("loc_4D1852: mov %edi,%ecx;");
    asm("loc_4D1854: calll *0x150(%edx);");
    asm("loc_4D185A: mov (%eax),%edx;");
    asm("loc_4D185C: lea 0x98(%esp),%ecx;");
    asm("loc_4D1863: push %ecx;");
    asm("loc_4D1864: mov %eax,%ecx;");
    asm("loc_4D1866: calll *0x64(%edx);");
    asm("loc_4D1869: flds 0xA0(%esp);");
    asm("loc_4D1870: fsubs 0x2C(%esp);");
    asm("loc_4D1874: flds 0x9C(%esp);");
    asm("loc_4D187B: fsubs 0x28(%esp);");
    asm("loc_4D187F: flds 0x98(%esp);");
    asm("loc_4D1886: fsubs 0x24(%esp);");
    asm("loc_4D188A: fld %st(0);");
    asm("loc_4D188C: fmul %st(1),%st;");
    asm("loc_4D188E: fld %st(2);");
    asm("loc_4D1890: fmul %st(3),%st;");
    asm("loc_4D1892: faddp;");
    asm("loc_4D1894: fld %st(3);");
    asm("loc_4D1896: fmul %st(4),%st;");
    asm("loc_4D1898: faddp;");
    asm("loc_4D189A: fsqrt;");
    asm("loc_4D189C: fstp %st(3);");
    asm("loc_4D189E: fstp %st(0);");
    asm("loc_4D18A0: fstp %st(0);");
    asm("loc_4D18A2: fsubp;");
    asm("loc_4D18A4: fabs;");
    asm("loc_4D18A6: fcomps 0x30(%esp);");
    asm("loc_4D18AA: fnstsw %ax;");
    asm("loc_4D18AC: test $0x41,%ah;");
    asm("loc_4D18AF: je loc_4D1EBD;");
    asm("loc_4D18B5: mov %edi,%ecx;");
    asm("loc_4D18B7: call _sub_53A960;");
    asm("loc_4D18BC: mov %eax,%edx;");
    asm("loc_4D18BE: cmp $0xFFFFFFFF,%edx;");
    asm("loc_4D18C1: jne loc_4D191E;");
    asm("loc_4D18C3: flds 0x34(%ebp);");
    asm("loc_4D18C6: mov 0x14(%esp),%eax;");
    asm("loc_4D18CA: fsubs 0x2C(%esp);");
    asm("loc_4D18CE: mov 0x438(%eax),%ecx;");
    asm("loc_4D18D4: test %ecx,%ecx;");
    asm("loc_4D18D6: flds 0x30(%ebp);");
    asm("loc_4D18D9: fsubs 0x28(%esp);");
    asm("loc_4D18DD: flds 0x2C(%ebp);");
    asm("loc_4D18E0: fsubs 0x24(%esp);");
    asm("loc_4D18E4: jne loc_4D1918;");
    asm("loc_4D18E6: fld %st(0);");
    asm("loc_4D18E8: fmul %st(1),%st;");
    asm("loc_4D18EA: fld %st(2);");
    asm("loc_4D18EC: fmul %st(3),%st;");
    asm("loc_4D18EE: faddp;");
    asm("loc_4D18F0: fld %st(3);");
    asm("loc_4D18F2: fmul %st(4),%st;");
    asm("loc_4D18F4: faddp;");
    asm("loc_4D18F6: fcomps _data_5D7968;");
    asm("loc_4D18FC: fstp %st(0);");
    asm("loc_4D18FE: fnstsw %ax;");
    asm("loc_4D1900: fstp %st(0);");
    asm("loc_4D1902: test $5,%ah;");
    asm("loc_4D1905: fstp %st(0);");
    asm("loc_4D1907: jp loc_4D191E;");
    asm("loc_4D1909: mov $1,%bl;");
    asm("loc_4D190B: mov %bl,0x13(%esp);");
    asm("loc_4D190F: jmp loc_4D191E;");
    asm("loc_4D1911: xor %ebx,%ebx;");
    asm("loc_4D1913: jmp loc_4D17F3;");
    asm("loc_4D1918: fstp %st(0);");
    asm("loc_4D191A: fstp %st(0);");
    asm("loc_4D191C: fstp %st(0);");
    asm("loc_4D191E: mov 0xE0(%ebp),%ecx;");
    asm("loc_4D1924: test $_off_600DE0+3,%ecx;");
    asm("loc_4D192A: mov %ecx,0x20(%esp);");
    asm("loc_4D192E: je loc_4D1BF7;");
    asm("loc_4D1934: push %ebp;");
    asm("loc_4D1935: call _sub_4D4C70;");
    asm("loc_4D193A: add $4,%esp;");
    asm("loc_4D193D: test %al,%al;");
    asm("loc_4D193F: jne loc_4D1EBD;");
    asm("loc_4D1945: mov 0x20(%esp),%eax;");
    asm("loc_4D1949: test %al,%al;");
    asm("loc_4D194B: jns loc_4D1A20;");
    asm("loc_4D1951: flds 0x34(%ebp);");
    asm("loc_4D1954: fsubs 0x2C(%esp);");
    asm("loc_4D1958: flds 0x30(%ebp);");
    asm("loc_4D195B: fsubs 0x28(%esp);");
    asm("loc_4D195F: flds 0x2C(%ebp);");
    asm("loc_4D1962: fsubs 0x24(%esp);");
    asm("loc_4D1966: fld %st(0);");
    asm("loc_4D1968: fmul %st(1),%st;");
    asm("loc_4D196A: fld %st(2);");
    asm("loc_4D196C: fmul %st(3),%st;");
    asm("loc_4D196E: faddp;");
    asm("loc_4D1970: fld %st(3);");
    asm("loc_4D1972: fmul %st(4),%st;");
    asm("loc_4D1974: faddp;");
    asm("loc_4D1976: fcomps _data_5D7968;");
    asm("loc_4D197C: fstp %st(0);");
    asm("loc_4D197E: fnstsw %ax;");
    asm("loc_4D1980: fstp %st(0);");
    asm("loc_4D1982: test $5,%ah;");
    asm("loc_4D1985: fstp %st(0);");
    asm("loc_4D1987: jp loc_4D1EBD;");
    asm("loc_4D198D: mov 0x14(%esp),%ecx;");
    asm("loc_4D1991: mov 0x438(%ecx),%eax;");
    asm("loc_4D1997: cmp $2,%eax;");
    asm("loc_4D199A: je loc_4D19AD;");
    asm("loc_4D199C: cmp $4,%eax;");
    asm("loc_4D199F: je loc_4D19AD;");
    asm("loc_4D19A1: mov 0x13(%esp),%al;");
    asm("loc_4D19A5: test %al,%al;");
    asm("loc_4D19A7: je loc_4D1EBD;");
    asm("loc_4D19AD: push $0;");
    asm("loc_4D19AF: push $0;");
    asm("loc_4D19B1: push $0;");
    asm("loc_4D19B3: push %edi;");
    asm("loc_4D19B4: push $7;");
    asm("loc_4D19B6: lea 0x90(%esp),%ecx;");
    asm("loc_4D19BD: call _sub_4CF030;");
    asm("loc_4D19C2: mov %eax,%ebp;");
    asm("loc_4D19C4: mov 4(%esi),%edi;");
    asm("loc_4D19C7: mov 4(%edi),%edx;");
    asm("loc_4D19CA: push %edx;");
    asm("loc_4D19CB: push %edi;");
    asm("loc_4D19CC: mov %esi,%ecx;");
    asm("loc_4D19CE: movl $0x15,0x222C(%esp);");
    asm("loc_4D19D9: call _sub_4D48F0;");
    asm("loc_4D19DE: mov %eax,4(%edi);");
    asm("loc_4D19E1: mov 4(%eax),%ecx;");
    asm("loc_4D19E4: mov %eax,(%ecx);");
    asm("loc_4D19E6: add $8,%eax;");
    asm("loc_4D19E9: push %ebp;");
    asm("loc_4D19EA: push %eax;");
    asm("loc_4D19EB: call _sub_4D49B0;");
    asm("loc_4D19F0: mov 8(%esi),%ecx;");
    asm("loc_4D19F3: mov 0x88(%esp),%eax;");
    asm("loc_4D19FA: add $8,%esp;");
    asm("loc_4D19FD: inc %ecx;");
    asm("loc_4D19FE: test %eax,%eax;");
    asm("loc_4D1A00: mov %ecx,8(%esi);");
    asm("loc_4D1A03: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1A0E: je loc_4D1EBD;");
    asm("loc_4D1A14: lea 0x80(%esp),%ecx;");
    asm("loc_4D1A1B: jmp loc_4D1EB5;");
    asm("loc_4D1A20: test $3,%al;");
    asm("loc_4D1A22: je loc_4D1ABB;");
    asm("loc_4D1A28: mov 0x14(%esp),%eax;");
    asm("loc_4D1A2C: mov 0x438(%eax),%eax;");
    asm("loc_4D1A32: cmp $2,%eax;");
    asm("loc_4D1A35: je loc_4D1A48;");
    asm("loc_4D1A37: cmp $4,%eax;");
    asm("loc_4D1A3A: je loc_4D1A48;");
    asm("loc_4D1A3C: mov 0x13(%esp),%al;");
    asm("loc_4D1A40: test %al,%al;");
    asm("loc_4D1A42: je loc_4D1EBD;");
    asm("loc_4D1A48: push $0;");
    asm("loc_4D1A4A: push $0;");
    asm("loc_4D1A4C: push $0;");
    asm("loc_4D1A4E: push %edi;");
    asm("loc_4D1A4F: push $1;");
    asm("loc_4D1A51: lea 0xE4(%esp),%ecx;");
    asm("loc_4D1A58: call _sub_4CF030;");
    asm("loc_4D1A5D: mov %eax,%ebp;");
    asm("loc_4D1A5F: mov 4(%esi),%edi;");
    asm("loc_4D1A62: mov 4(%edi),%ecx;");
    asm("loc_4D1A65: push %ecx;");
    asm("loc_4D1A66: push %edi;");
    asm("loc_4D1A67: mov %esi,%ecx;");
    asm("loc_4D1A69: movl $0x16,0x222C(%esp);");
    asm("loc_4D1A74: call _sub_4D48F0;");
    asm("loc_4D1A79: mov %eax,4(%edi);");
    asm("loc_4D1A7C: mov 4(%eax),%ecx;");
    asm("loc_4D1A7F: mov %eax,(%ecx);");
    asm("loc_4D1A81: add $8,%eax;");
    asm("loc_4D1A84: push %ebp;");
    asm("loc_4D1A85: push %eax;");
    asm("loc_4D1A86: call _sub_4D49B0;");
    asm("loc_4D1A8B: mov 8(%esi),%ecx;");
    asm("loc_4D1A8E: mov 0xDC(%esp),%eax;");
    asm("loc_4D1A95: add $8,%esp;");
    asm("loc_4D1A98: inc %ecx;");
    asm("loc_4D1A99: test %eax,%eax;");
    asm("loc_4D1A9B: mov %ecx,8(%esi);");
    asm("loc_4D1A9E: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1AA9: je loc_4D1EBD;");
    asm("loc_4D1AAF: lea 0xD4(%esp),%ecx;");
    asm("loc_4D1AB6: jmp loc_4D1EB5;");
    asm("loc_4D1ABB: test $0x200000,%eax;");
    asm("loc_4D1AC0: jne loc_4D1EBD;");
    asm("loc_4D1AC6: test $0xC40,%eax;");
    asm("loc_4D1ACB: je loc_4D1B64;");
    asm("loc_4D1AD1: mov 0x14(%esp),%edx;");
    asm("loc_4D1AD5: mov 0x438(%edx),%eax;");
    asm("loc_4D1ADB: cmp $2,%eax;");
    asm("loc_4D1ADE: je loc_4D1AF1;");
    asm("loc_4D1AE0: cmp $4,%eax;");
    asm("loc_4D1AE3: je loc_4D1AF1;");
    asm("loc_4D1AE5: mov 0x13(%esp),%al;");
    asm("loc_4D1AE9: test %al,%al;");
    asm("loc_4D1AEB: je loc_4D1EBD;");
    asm("loc_4D1AF1: push $0;");
    asm("loc_4D1AF3: push $0;");
    asm("loc_4D1AF5: push $0;");
    asm("loc_4D1AF7: push %edi;");
    asm("loc_4D1AF8: push $6;");
    asm("loc_4D1AFA: lea 0x18C(%esp),%ecx;");
    asm("loc_4D1B01: call _sub_4CF030;");
    asm("loc_4D1B06: mov %eax,%ebp;");
    asm("loc_4D1B08: mov 4(%esi),%edi;");
    asm("loc_4D1B0B: mov 4(%edi),%eax;");
    asm("loc_4D1B0E: push %eax;");
    asm("loc_4D1B0F: push %edi;");
    asm("loc_4D1B10: mov %esi,%ecx;");
    asm("loc_4D1B12: movl $0x17,0x222C(%esp);");
    asm("loc_4D1B1D: call _sub_4D48F0;");
    asm("loc_4D1B22: mov %eax,4(%edi);");
    asm("loc_4D1B25: mov 4(%eax),%ecx;");
    asm("loc_4D1B28: mov %eax,(%ecx);");
    asm("loc_4D1B2A: add $8,%eax;");
    asm("loc_4D1B2D: push %ebp;");
    asm("loc_4D1B2E: push %eax;");
    asm("loc_4D1B2F: call _sub_4D49B0;");
    asm("loc_4D1B34: mov 8(%esi),%ecx;");
    asm("loc_4D1B37: mov 0x184(%esp),%eax;");
    asm("loc_4D1B3E: add $8,%esp;");
    asm("loc_4D1B41: inc %ecx;");
    asm("loc_4D1B42: test %eax,%eax;");
    asm("loc_4D1B44: mov %ecx,8(%esi);");
    asm("loc_4D1B47: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1B52: je loc_4D1EBD;");
    asm("loc_4D1B58: lea 0x17C(%esp),%ecx;");
    asm("loc_4D1B5F: jmp loc_4D1EB5;");
    asm("loc_4D1B64: mov 0x13(%esp),%al;");
    asm("loc_4D1B68: test %al,%al;");
    asm("loc_4D1B6A: jne loc_4D1B84;");
    asm("loc_4D1B6C: mov 0x14(%esp),%ecx;");
    asm("loc_4D1B70: mov 0x438(%ecx),%eax;");
    asm("loc_4D1B76: cmp $2,%eax;");
    asm("loc_4D1B79: je loc_4D1B84;");
    asm("loc_4D1B7B: cmp $4,%eax;");
    asm("loc_4D1B7E: jne loc_4D1EBD;");
    asm("loc_4D1B84: push $0;");
    asm("loc_4D1B86: push $0;");
    asm("loc_4D1B88: push $0;");
    asm("loc_4D1B8A: push %edi;");
    asm("loc_4D1B8B: push $2;");
    asm("loc_4D1B8D: lea 0x154(%esp),%ecx;");
    asm("loc_4D1B94: call _sub_4CF030;");
    asm("loc_4D1B99: mov %eax,%ebp;");
    asm("loc_4D1B9B: mov 4(%esi),%edi;");
    asm("loc_4D1B9E: mov 4(%edi),%edx;");
    asm("loc_4D1BA1: push %edx;");
    asm("loc_4D1BA2: push %edi;");
    asm("loc_4D1BA3: mov %esi,%ecx;");
    asm("loc_4D1BA5: movl $0x18,0x222C(%esp);");
    asm("loc_4D1BB0: call _sub_4D48F0;");
    asm("loc_4D1BB5: mov %eax,4(%edi);");
    asm("loc_4D1BB8: mov 4(%eax),%ecx;");
    asm("loc_4D1BBB: mov %eax,(%ecx);");
    asm("loc_4D1BBD: add $8,%eax;");
    asm("loc_4D1BC0: push %ebp;");
    asm("loc_4D1BC1: push %eax;");
    asm("loc_4D1BC2: call _sub_4D49B0;");
    asm("loc_4D1BC7: mov 8(%esi),%ecx;");
    asm("loc_4D1BCA: mov 0x14C(%esp),%eax;");
    asm("loc_4D1BD1: add $8,%esp;");
    asm("loc_4D1BD4: inc %ecx;");
    asm("loc_4D1BD5: test %eax,%eax;");
    asm("loc_4D1BD7: mov %ecx,8(%esi);");
    asm("loc_4D1BDA: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1BE5: je loc_4D1EBD;");
    asm("loc_4D1BEB: lea 0x144(%esp),%ecx;");
    asm("loc_4D1BF2: jmp loc_4D1EB5;");
    asm("loc_4D1BF7: flds 0x34(%ebp);");
    asm("loc_4D1BFA: fsubs 0x2C(%esp);");
    asm("loc_4D1BFE: flds 0x30(%ebp);");
    asm("loc_4D1C01: fsubs 0x28(%esp);");
    asm("loc_4D1C05: flds 0x2C(%ebp);");
    asm("loc_4D1C08: fsubs 0x24(%esp);");
    asm("loc_4D1C0C: fld %st(0);");
    asm("loc_4D1C0E: fmul %st(1),%st;");
    asm("loc_4D1C10: fld %st(2);");
    asm("loc_4D1C12: fmul %st(3),%st;");
    asm("loc_4D1C14: faddp;");
    asm("loc_4D1C16: fld %st(3);");
    asm("loc_4D1C18: fmul %st(4),%st;");
    asm("loc_4D1C1A: faddp;");
    asm("loc_4D1C1C: fcomps _data_5D7968;");
    asm("loc_4D1C22: fstp %st(0);");
    asm("loc_4D1C24: fnstsw %ax;");
    asm("loc_4D1C26: fstp %st(0);");
    asm("loc_4D1C28: test $5,%ah;");
    asm("loc_4D1C2B: fstp %st(0);");
    asm("loc_4D1C2D: jp loc_4D1EBD;");
    asm("loc_4D1C33: mov 0x4C(%ebp),%eax;");
    asm("loc_4D1C36: and $0x103,%eax;");
    asm("loc_4D1C3B: cmp $0x103,%eax;");
    asm("loc_4D1C40: jne loc_4D1D6D;");
    asm("loc_4D1C46: mov 0x88(%ebp),%eax;");
    asm("loc_4D1C4C: test %eax,%eax;");
    asm("loc_4D1C4E: je loc_4D1D6D;");
    asm("loc_4D1C54: cmpb $0,0x80(%eax);");
    asm("loc_4D1C5B: je loc_4D1D6D;");
    asm("loc_4D1C61: mov 0x14(%esp),%eax;");
    asm("loc_4D1C65: mov 0x438(%eax),%eax;");
    asm("loc_4D1C6B: cmp $3,%eax;");
    asm("loc_4D1C6E: je loc_4D1D6D;");
    asm("loc_4D1C74: cmp $0xFFFFFFFF,%edx;");
    asm("loc_4D1C77: jne loc_4D1CEC;");
    asm("loc_4D1C79: push $0;");
    asm("loc_4D1C7B: push $0;");
    asm("loc_4D1C7D: push $0;");
    asm("loc_4D1C7F: push %edi;");
    asm("loc_4D1C80: push $0xA;");
    asm("loc_4D1C82: lea 0x11C(%esp),%ecx;");
    asm("loc_4D1C89: call _sub_4CF030;");
    asm("loc_4D1C8E: mov %eax,%ebp;");
    asm("loc_4D1C90: mov 4(%esi),%edi;");
    asm("loc_4D1C93: mov 4(%edi),%ecx;");
    asm("loc_4D1C96: push %ecx;");
    asm("loc_4D1C97: push %edi;");
    asm("loc_4D1C98: mov %esi,%ecx;");
    asm("loc_4D1C9A: movl $0x19,0x222C(%esp);");
    asm("loc_4D1CA5: call _sub_4D48F0;");
    asm("loc_4D1CAA: mov %eax,4(%edi);");
    asm("loc_4D1CAD: mov 4(%eax),%ecx;");
    asm("loc_4D1CB0: mov %eax,(%ecx);");
    asm("loc_4D1CB2: add $8,%eax;");
    asm("loc_4D1CB5: push %ebp;");
    asm("loc_4D1CB6: push %eax;");
    asm("loc_4D1CB7: call _sub_4D49B0;");
    asm("loc_4D1CBC: mov 8(%esi),%ecx;");
    asm("loc_4D1CBF: mov 0x114(%esp),%eax;");
    asm("loc_4D1CC6: add $8,%esp;");
    asm("loc_4D1CC9: inc %ecx;");
    asm("loc_4D1CCA: test %eax,%eax;");
    asm("loc_4D1CCC: mov %ecx,8(%esi);");
    asm("loc_4D1CCF: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1CDA: je loc_4D1EBD;");
    asm("loc_4D1CE0: lea 0x10C(%esp),%ecx;");
    asm("loc_4D1CE7: jmp loc_4D1EB5;");
    asm("loc_4D1CEC: cmp $2,%eax;");
    asm("loc_4D1CEF: je loc_4D1CFA;");
    asm("loc_4D1CF1: cmp $4,%eax;");
    asm("loc_4D1CF4: jne loc_4D1EBD;");
    asm("loc_4D1CFA: push $0;");
    asm("loc_4D1CFC: push $0;");
    asm("loc_4D1CFE: push $0;");
    asm("loc_4D1D00: push %edi;");
    asm("loc_4D1D01: push $0xA;");
    asm("loc_4D1D03: lea 0x170(%esp),%ecx;");
    asm("loc_4D1D0A: call _sub_4CF030;");
    asm("loc_4D1D0F: mov %eax,%ebp;");
    asm("loc_4D1D11: mov 4(%esi),%edi;");
    asm("loc_4D1D14: mov 4(%edi),%edx;");
    asm("loc_4D1D17: push %edx;");
    asm("loc_4D1D18: push %edi;");
    asm("loc_4D1D19: mov %esi,%ecx;");
    asm("loc_4D1D1B: movl $0x1A,0x222C(%esp);");
    asm("loc_4D1D26: call _sub_4D48F0;");
    asm("loc_4D1D2B: mov %eax,4(%edi);");
    asm("loc_4D1D2E: mov 4(%eax),%ecx;");
    asm("loc_4D1D31: mov %eax,(%ecx);");
    asm("loc_4D1D33: add $8,%eax;");
    asm("loc_4D1D36: push %ebp;");
    asm("loc_4D1D37: push %eax;");
    asm("loc_4D1D38: call _sub_4D49B0;");
    asm("loc_4D1D3D: mov 8(%esi),%ecx;");
    asm("loc_4D1D40: mov 0x168(%esp),%eax;");
    asm("loc_4D1D47: add $8,%esp;");
    asm("loc_4D1D4A: inc %ecx;");
    asm("loc_4D1D4B: test %eax,%eax;");
    asm("loc_4D1D4D: mov %ecx,8(%esi);");
    asm("loc_4D1D50: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1D5B: je loc_4D1EBD;");
    asm("loc_4D1D61: lea 0x160(%esp),%ecx;");
    asm("loc_4D1D68: jmp loc_4D1EB5;");
    asm("loc_4D1D6D: test $0x9010,%ecx;");
    asm("loc_4D1D73: je loc_4D1E19;");
    asm("loc_4D1D79: push %ebp;");
    asm("loc_4D1D7A: call _sub_4D4C70;");
    asm("loc_4D1D7F: add $4,%esp;");
    asm("loc_4D1D82: test %al,%al;");
    asm("loc_4D1D84: jne loc_4D1EBD;");
    asm("loc_4D1D8A: mov 0x14(%esp),%eax;");
    asm("loc_4D1D8E: mov 0x438(%eax),%eax;");
    asm("loc_4D1D94: cmp $2,%eax;");
    asm("loc_4D1D97: je loc_4D1DA6;");
    asm("loc_4D1D99: cmp $4,%eax;");
    asm("loc_4D1D9C: je loc_4D1DA6;");
    asm("loc_4D1D9E: test %bl,%bl;");
    asm("loc_4D1DA0: je loc_4D1EBD;");
    asm("loc_4D1DA6: push $0;");
    asm("loc_4D1DA8: push $0;");
    asm("loc_4D1DAA: push $0;");
    asm("loc_4D1DAC: push %edi;");
    asm("loc_4D1DAD: push $0xC;");
    asm("loc_4D1DAF: lea 0x138(%esp),%ecx;");
    asm("loc_4D1DB6: call _sub_4CF030;");
    asm("loc_4D1DBB: mov %eax,%ebp;");
    asm("loc_4D1DBD: mov 4(%esi),%edi;");
    asm("loc_4D1DC0: mov 4(%edi),%ecx;");
    asm("loc_4D1DC3: push %ecx;");
    asm("loc_4D1DC4: push %edi;");
    asm("loc_4D1DC5: mov %esi,%ecx;");
    asm("loc_4D1DC7: movl $0x1B,0x222C(%esp);");
    asm("loc_4D1DD2: call _sub_4D48F0;");
    asm("loc_4D1DD7: mov %eax,4(%edi);");
    asm("loc_4D1DDA: mov 4(%eax),%ecx;");
    asm("loc_4D1DDD: mov %eax,(%ecx);");
    asm("loc_4D1DDF: add $8,%eax;");
    asm("loc_4D1DE2: push %ebp;");
    asm("loc_4D1DE3: push %eax;");
    asm("loc_4D1DE4: call _sub_4D49B0;");
    asm("loc_4D1DE9: mov 8(%esi),%ecx;");
    asm("loc_4D1DEC: mov 0x130(%esp),%eax;");
    asm("loc_4D1DF3: add $8,%esp;");
    asm("loc_4D1DF6: inc %ecx;");
    asm("loc_4D1DF7: test %eax,%eax;");
    asm("loc_4D1DF9: mov %ecx,8(%esi);");
    asm("loc_4D1DFC: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1E07: je loc_4D1EBD;");
    asm("loc_4D1E0D: lea 0x128(%esp),%ecx;");
    asm("loc_4D1E14: jmp loc_4D1EB5;");
    asm("loc_4D1E19: test $0x20,%ch;");
    asm("loc_4D1E1C: je loc_4D1EBD;");
    asm("loc_4D1E22: push %ebp;");
    asm("loc_4D1E23: call _sub_4D4C70;");
    asm("loc_4D1E28: add $4,%esp;");
    asm("loc_4D1E2B: test %al,%al;");
    asm("loc_4D1E2D: jne loc_4D1EBD;");
    asm("loc_4D1E33: mov 0x14(%esp),%edx;");
    asm("loc_4D1E37: mov 0x438(%edx),%eax;");
    asm("loc_4D1E3D: cmp $3,%eax;");
    asm("loc_4D1E40: je loc_4D1E4B;");
    asm("loc_4D1E42: cmp $4,%eax;");
    asm("loc_4D1E45: je loc_4D1E4B;");
    asm("loc_4D1E47: test %bl,%bl;");
    asm("loc_4D1E49: je loc_4D1EBD;");
    asm("loc_4D1E4B: push $0;");
    asm("loc_4D1E4D: push $0;");
    asm("loc_4D1E4F: push $0;");
    asm("loc_4D1E51: push %edi;");
    asm("loc_4D1E52: push $0xD;");
    asm("loc_4D1E54: lea 0x100(%esp),%ecx;");
    asm("loc_4D1E5B: call _sub_4CF030;");
    asm("loc_4D1E60: mov %eax,%ebp;");
    asm("loc_4D1E62: mov 4(%esi),%edi;");
    asm("loc_4D1E65: mov 4(%edi),%eax;");
    asm("loc_4D1E68: push %eax;");
    asm("loc_4D1E69: push %edi;");
    asm("loc_4D1E6A: mov %esi,%ecx;");
    asm("loc_4D1E6C: movl $0x1C,0x222C(%esp);");
    asm("loc_4D1E77: call _sub_4D48F0;");
    asm("loc_4D1E7C: mov %eax,4(%edi);");
    asm("loc_4D1E7F: mov 4(%eax),%ecx;");
    asm("loc_4D1E82: mov %eax,(%ecx);");
    asm("loc_4D1E84: add $8,%eax;");
    asm("loc_4D1E87: push %ebp;");
    asm("loc_4D1E88: push %eax;");
    asm("loc_4D1E89: call _sub_4D49B0;");
    asm("loc_4D1E8E: mov 8(%esi),%ecx;");
    asm("loc_4D1E91: mov 0xF8(%esp),%eax;");
    asm("loc_4D1E98: add $8,%esp;");
    asm("loc_4D1E9B: inc %ecx;");
    asm("loc_4D1E9C: test %eax,%eax;");
    asm("loc_4D1E9E: mov %ecx,8(%esi);");
    asm("loc_4D1EA1: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1EAC: je loc_4D1EBD;");
    asm("loc_4D1EAE: lea 0xF0(%esp),%ecx;");
    asm("loc_4D1EB5: push $0;");
    asm("loc_4D1EB7: calll *_import_5C62A8;");
    asm("loc_4D1EBD: mov 0x38(%esp),%eax;");
    asm("loc_4D1EC1: mov 0x1C(%esp),%edi;");
    asm("loc_4D1EC5: mov 0x218(%esp),%ecx;");
    asm("loc_4D1ECC: inc %eax;");
    asm("loc_4D1ECD: add $4,%edi;");
    asm("loc_4D1ED0: cmp %ecx,%eax;");
    asm("loc_4D1ED2: mov %eax,0x38(%esp);");
    asm("loc_4D1ED6: mov %edi,0x1C(%esp);");
    asm("loc_4D1EDA: jb loc_4D1781;");
    asm("loc_4D1EE0: mov 0x14(%esp),%ecx;");
    asm("loc_4D1EE4: mov 0x438(%ecx),%eax;");
    asm("loc_4D1EEA: test %eax,%eax;");
    asm("loc_4D1EEC: je loc_4D1EF7;");
    asm("loc_4D1EEE: cmp $4,%eax;");
    asm("loc_4D1EF1: jne loc_4D2102;");
    asm("loc_4D1EF7: call _sub_4C4690;");
    asm("loc_4D1EFC: mov %eax,%ebp;");
    asm("loc_4D1EFE: xor %edi,%edi;");
    asm("loc_4D1F00: test %ebp,%ebp;");
    asm("loc_4D1F02: jle loc_4D1F9A;");
    asm("loc_4D1F08: push %edi;");
    asm("loc_4D1F09: call _sub_4C46A0;");
    asm("loc_4D1F0E: mov %eax,%ebx;");
    asm("loc_4D1F10: add $4,%esp;");
    asm("loc_4D1F13: test %ebx,%ebx;");
    asm("loc_4D1F15: je loc_4D1F21;");
    asm("loc_4D1F17: call _sub_4C4830;");
    asm("loc_4D1F1C: cmp %eax,0xC(%ebx);");
    asm("loc_4D1F1F: je loc_4D1F28;");
    asm("loc_4D1F21: inc %edi;");
    asm("loc_4D1F22: cmp %ebp,%edi;");
    asm("loc_4D1F24: jl loc_4D1F08;");
    asm("loc_4D1F26: jmp loc_4D1F9A;");
    asm("loc_4D1F28: push %edi;");
    asm("loc_4D1F29: push $0;");
    asm("loc_4D1F2B: push $0;");
    asm("loc_4D1F2D: push $0;");
    asm("loc_4D1F2F: push $4;");
    asm("loc_4D1F31: lea 0x90(%esp),%ecx;");
    asm("loc_4D1F38: call _sub_4CF030;");
    asm("loc_4D1F3D: mov %eax,%ebp;");
    asm("loc_4D1F3F: mov 4(%esi),%edi;");
    asm("loc_4D1F42: mov 4(%edi),%edx;");
    asm("loc_4D1F45: push %edx;");
    asm("loc_4D1F46: push %edi;");
    asm("loc_4D1F47: mov %esi,%ecx;");
    asm("loc_4D1F49: movl $0x1D,0x222C(%esp);");
    asm("loc_4D1F54: call _sub_4D48F0;");
    asm("loc_4D1F59: mov %eax,4(%edi);");
    asm("loc_4D1F5C: mov 4(%eax),%ecx;");
    asm("loc_4D1F5F: mov %eax,(%ecx);");
    asm("loc_4D1F61: add $8,%eax;");
    asm("loc_4D1F64: push %ebp;");
    asm("loc_4D1F65: push %eax;");
    asm("loc_4D1F66: call _sub_4D49B0;");
    asm("loc_4D1F6B: mov 8(%esi),%ecx;");
    asm("loc_4D1F6E: mov 0x88(%esp),%eax;");
    asm("loc_4D1F75: add $8,%esp;");
    asm("loc_4D1F78: inc %ecx;");
    asm("loc_4D1F79: test %eax,%eax;");
    asm("loc_4D1F7B: mov %ecx,8(%esi);");
    asm("loc_4D1F7E: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D1F89: je loc_4D1F9A;");
    asm("loc_4D1F8B: push $0;");
    asm("loc_4D1F8D: lea 0x84(%esp),%ecx;");
    asm("loc_4D1F94: calll *_import_5C62A8;");
    asm("loc_4D1F9A: call _sub_4C4FB0;");
    asm("loc_4D1F9F: mov %eax,%edi;");
    asm("loc_4D1FA1: cmp $1,%edi;");
    asm("loc_4D1FA4: mov %edi,0x1C(%esp);");
    asm("loc_4D1FA8: jle loc_4D1FB3;");
    asm("loc_4D1FAA: mov $1,%edi;");
    asm("loc_4D1FAF: mov %edi,0x1C(%esp);");
    asm("loc_4D1FB3: call _sub_4C4830;");
    asm("loc_4D1FB8: push %eax;");
    asm("loc_4D1FB9: calll *_import_5C6094;");
    asm("loc_4D1FBF: add $4,%esp;");
    asm("loc_4D1FC2: xor %ebp,%ebp;");
    asm("loc_4D1FC4: test %edi,%edi;");
    asm("loc_4D1FC6: mov %eax,0x20(%esp);");
    asm("loc_4D1FCA: jle loc_4D2102;");
    asm("loc_4D1FD0: push %ebp;");
    asm("loc_4D1FD1: call _sub_4C4FF0;");
    asm("loc_4D1FD6: mov %eax,%edi;");
    asm("loc_4D1FD8: add $4,%esp;");
    asm("loc_4D1FDB: mov %edi,%ecx;");
    asm("loc_4D1FDD: call _sub_4C5110;");
    asm("loc_4D1FE2: test %eax,%eax;");
    asm("loc_4D1FE4: je loc_4D2059;");
    asm("loc_4D1FE6: push %ebp;");
    asm("loc_4D1FE7: push $0;");
    asm("loc_4D1FE9: push $0;");
    asm("loc_4D1FEB: push $0;");
    asm("loc_4D1FED: push $3;");
    asm("loc_4D1FEF: lea 0x90(%esp),%ecx;");
    asm("loc_4D1FF6: call _sub_4CF030;");
    asm("loc_4D1FFB: mov %eax,%ebx;");
    asm("loc_4D1FFD: mov 4(%esi),%edi;");
    asm("loc_4D2000: mov 4(%edi),%eax;");
    asm("loc_4D2003: push %eax;");
    asm("loc_4D2004: push %edi;");
    asm("loc_4D2005: mov %esi,%ecx;");
    asm("loc_4D2007: movl $0x1E,0x222C(%esp);");
    asm("loc_4D2012: call _sub_4D48F0;");
    asm("loc_4D2017: mov %eax,4(%edi);");
    asm("loc_4D201A: mov 4(%eax),%ecx;");
    asm("loc_4D201D: mov %eax,(%ecx);");
    asm("loc_4D201F: add $8,%eax;");
    asm("loc_4D2022: push %ebx;");
    asm("loc_4D2023: push %eax;");
    asm("loc_4D2024: call _sub_4D49B0;");
    asm("loc_4D2029: mov 8(%esi),%ecx;");
    asm("loc_4D202C: mov 0x88(%esp),%eax;");
    asm("loc_4D2033: add $8,%esp;");
    asm("loc_4D2036: inc %ecx;");
    asm("loc_4D2037: test %eax,%eax;");
    asm("loc_4D2039: mov %ecx,8(%esi);");
    asm("loc_4D203C: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D2047: je loc_4D20F5;");
    asm("loc_4D204D: lea 0x80(%esp),%ecx;");
    asm("loc_4D2054: jmp loc_4D20ED;");
    asm("loc_4D2059: lea 0x34(%esp),%ecx;");
    asm("loc_4D205D: push %ecx;");
    asm("loc_4D205E: lea 0x9C(%esp),%edx;");
    asm("loc_4D2065: push %edx;");
    asm("loc_4D2066: mov %edi,%ecx;");
    asm("loc_4D2068: call _sub_4C52D0;");
    asm("loc_4D206D: test %al,%al;");
    asm("loc_4D206F: je loc_4D20F5;");
    asm("loc_4D2075: mov 0x20(%esp),%ecx;");
    asm("loc_4D2079: mov (%ecx),%eax;");
    asm("loc_4D207B: calll *(%eax);");
    asm("loc_4D207D: cmp %eax,0x34(%esp);");
    asm("loc_4D2081: jne loc_4D20F5;");
    asm("loc_4D2083: push %ebp;");
    asm("loc_4D2084: push $0;");
    asm("loc_4D2086: push $0;");
    asm("loc_4D2088: push $0;");
    asm("loc_4D208A: push $3;");
    asm("loc_4D208C: lea 0xE4(%esp),%ecx;");
    asm("loc_4D2093: call _sub_4CF030;");
    asm("loc_4D2098: mov %eax,%ebx;");
    asm("loc_4D209A: mov 4(%esi),%edi;");
    asm("loc_4D209D: mov 4(%edi),%ecx;");
    asm("loc_4D20A0: push %ecx;");
    asm("loc_4D20A1: push %edi;");
    asm("loc_4D20A2: mov %esi,%ecx;");
    asm("loc_4D20A4: movl $0x1F,0x222C(%esp);");
    asm("loc_4D20AF: call _sub_4D48F0;");
    asm("loc_4D20B4: mov %eax,4(%edi);");
    asm("loc_4D20B7: mov 4(%eax),%ecx;");
    asm("loc_4D20BA: mov %eax,(%ecx);");
    asm("loc_4D20BC: add $8,%eax;");
    asm("loc_4D20BF: push %ebx;");
    asm("loc_4D20C0: push %eax;");
    asm("loc_4D20C1: call _sub_4D49B0;");
    asm("loc_4D20C6: mov 8(%esi),%ecx;");
    asm("loc_4D20C9: mov 0xDC(%esp),%eax;");
    asm("loc_4D20D0: add $8,%esp;");
    asm("loc_4D20D3: inc %ecx;");
    asm("loc_4D20D4: test %eax,%eax;");
    asm("loc_4D20D6: mov %ecx,8(%esi);");
    asm("loc_4D20D9: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D20E4: je loc_4D20F5;");
    asm("loc_4D20E6: lea 0xD4(%esp),%ecx;");
    asm("loc_4D20ED: push $0;");
    asm("loc_4D20EF: calll *_import_5C62A8;");
    asm("loc_4D20F5: mov 0x1C(%esp),%eax;");
    asm("loc_4D20F9: inc %ebp;");
    asm("loc_4D20FA: cmp %eax,%ebp;");
    asm("loc_4D20FC: jl loc_4D1FD0;");
    asm("loc_4D2102: mov _data_66D33C,%eax;");
    asm("loc_4D2107: mov (%eax),%ebp;");
    asm("loc_4D2109: cmp %eax,%ebp;");
    asm("loc_4D210B: movb $0,0x1B(%esp);");
    asm("loc_4D2110: mov %ebp,0x1C(%esp);");
    asm("loc_4D2114: je loc_4D22F5;");
    asm("loc_4D211A: lea (%ebx),%ebx;");
    asm("loc_4D2120: mov 8(%ebp),%ecx;");
    asm("loc_4D2123: test %ecx,%ecx;");
    asm("loc_4D2125: je loc_4D212E;");
    asm("loc_4D2127: add $0xFFFFFFF8,%ecx;");
    asm("loc_4D212A: test %ecx,%ecx;");
    asm("loc_4D212C: jne loc_4D2138;");
    asm("loc_4D212E: movb $1,0x1B(%esp);");
    asm("loc_4D2133: jmp loc_4D22D0;");
    asm("loc_4D2138: mov (%ecx),%edx;");
    asm("loc_4D213A: calll *0x150(%edx);");
    asm("loc_4D2140: test %eax,%eax;");
    asm("loc_4D2142: je loc_4D22D0;");
    asm("loc_4D2148: mov 0x4C(%eax),%ecx;");
    asm("loc_4D214B: and $3,%ecx;");
    asm("loc_4D214E: cmp $3,%cl;");
    asm("loc_4D2151: jne loc_4D22D0;");
    asm("loc_4D2157: mov 0xB0(%eax),%edx;");
    asm("loc_4D215D: cmp 0x3C(%esp),%edx;");
    asm("loc_4D2161: je loc_4D22D0;");
    asm("loc_4D2167: mov 0x14(%esp),%edi;");
    asm("loc_4D216B: push %eax;");
    asm("loc_4D216C: mov %edi,%ecx;");
    asm("loc_4D216E: call _sub_4D3FD0;");
    asm("loc_4D2173: test %eax,%eax;");
    asm("loc_4D2175: jl loc_4D22D0;");
    asm("loc_4D217B: mov 0x438(%edi),%ecx;");
    asm("loc_4D2181: cmp $3,%ecx;");
    asm("loc_4D2184: jne loc_4D218B;");
    asm("loc_4D2186: cmp $0xB,%eax;");
    asm("loc_4D2189: jmp loc_4D21C8;");
    asm("loc_4D218B: cmp $1,%ecx;");
    asm("loc_4D218E: jne loc_4D21A8;");
    asm("loc_4D2190: test %eax,%eax;");
    asm("loc_4D2192: je loc_4D21CE;");
    asm("loc_4D2194: cmp $5,%eax;");
    asm("loc_4D2197: je loc_4D21CE;");
    asm("loc_4D2199: cmp $8,%eax;");
    asm("loc_4D219C: je loc_4D21CE;");
    asm("loc_4D219E: cmp $9,%eax;");
    asm("loc_4D21A1: je loc_4D21CE;");
    asm("loc_4D21A3: cmp $0xA,%eax;");
    asm("loc_4D21A6: jmp loc_4D21C8;");
    asm("loc_4D21A8: cmp $2,%ecx;");
    asm("loc_4D21AB: jne loc_4D21CE;");
    asm("loc_4D21AD: cmp $1,%eax;");
    asm("loc_4D21B0: je loc_4D21CE;");
    asm("loc_4D21B2: cmp %ecx,%eax;");
    asm("loc_4D21B4: je loc_4D21CE;");
    asm("loc_4D21B6: cmp $6,%eax;");
    asm("loc_4D21B9: je loc_4D21CE;");
    asm("loc_4D21BB: cmp $7,%eax;");
    asm("loc_4D21BE: je loc_4D21CE;");
    asm("loc_4D21C0: cmp $0xC,%eax;");
    asm("loc_4D21C3: je loc_4D21CE;");
    asm("loc_4D21C5: cmp $0xD,%eax;");
    asm("loc_4D21C8: jne loc_4D22D0;");
    asm("loc_4D21CE: mov 8(%ebp),%ecx;");
    asm("loc_4D21D1: test %ecx,%ecx;");
    asm("loc_4D21D3: je loc_4D21DA;");
    asm("loc_4D21D5: lea -8(%ecx),%edi;");
    asm("loc_4D21D8: jmp loc_4D21DC;");
    asm("loc_4D21DA: xor %edi,%edi;");
    asm("loc_4D21DC: mov 0x14(%esp),%ecx;");
    asm("loc_4D21E0: mov 0x414(%ecx),%ebx;");
    asm("loc_4D21E6: mov (%ebx),%ecx;");
    asm("loc_4D21E8: cmp %ebx,%ecx;");
    asm("loc_4D21EA: je loc_4D220C;");
    asm("loc_4D21EC: lea (%esp),%esp;");
    asm("loc_4D21F0: mov 0xC(%ecx),%edx;");
    asm("loc_4D21F3: test %edx,%edx;");
    asm("loc_4D21F5: je loc_4D21FC;");
    asm("loc_4D21F7: add $0xFFFFFFF8,%edx;");
    asm("loc_4D21FA: jmp loc_4D21FE;");
    asm("loc_4D21FC: xor %edx,%edx;");
    asm("loc_4D21FE: cmp %edi,%edx;");
    asm("loc_4D2200: je loc_4D235F;");
    asm("loc_4D2206: mov (%ecx),%ecx;");
    asm("loc_4D2208: cmp %ebx,%ecx;");
    asm("loc_4D220A: jne loc_4D21F0;");
    asm("loc_4D220C: push $0;");
    asm("loc_4D220E: push $0;");
    asm("loc_4D2210: push $0;");
    asm("loc_4D2212: push %edi;");
    asm("loc_4D2213: push %eax;");
    asm("loc_4D2214: lea 0x90(%esp),%ecx;");
    asm("loc_4D221B: call _sub_4CF030;");
    asm("loc_4D2220: mov %eax,%ebx;");
    asm("loc_4D2222: mov 4(%esi),%edi;");
    asm("loc_4D2225: mov 4(%edi),%ebp;");
    asm("loc_4D2228: push $0x24;");
    asm("loc_4D222A: movl $0x20,0x2228(%esp);");
    asm("loc_4D2235: call _sub_5B7E84;");
    asm("loc_4D223A: add $4,%esp;");
    asm("loc_4D223D: test %ebp,%ebp;");
    asm("loc_4D223F: mov %edi,(%eax);");
    asm("loc_4D2241: jne loc_4D2245;");
    asm("loc_4D2243: mov %eax,%ebp;");
    asm("loc_4D2245: mov %ebp,4(%eax);");
    asm("loc_4D2248: mov %eax,4(%edi);");
    asm("loc_4D224B: mov 4(%eax),%ecx;");
    asm("loc_4D224E: lea 8(%eax),%edi;");
    asm("loc_4D2251: mov %eax,(%ecx);");
    asm("loc_4D2253: mov %edi,0x4C(%esp);");
    asm("loc_4D2257: mov %edi,0x60(%esp);");
    asm("loc_4D225B: test %edi,%edi;");
    asm("loc_4D225D: movb $0x21,0x2224(%esp);");
    asm("loc_4D2265: je loc_4D228F;");
    asm("loc_4D2267: mov (%ebx),%edx;");
    asm("loc_4D2269: lea 4(%ebx),%eax;");
    asm("loc_4D226C: push %eax;");
    asm("loc_4D226D: lea 4(%edi),%ecx;");
    asm("loc_4D2270: mov %edx,(%edi);");
    asm("loc_4D2272: call _sub_4D4A40;");
    asm("loc_4D2277: mov 0xC(%ebx),%ecx;");
    asm("loc_4D227A: mov %ecx,0xC(%edi);");
    asm("loc_4D227D: mov 0x10(%ebx),%edx;");
    asm("loc_4D2280: mov %edx,0x10(%edi);");
    asm("loc_4D2283: mov 0x14(%ebx),%eax;");
    asm("loc_4D2286: mov %eax,0x14(%edi);");
    asm("loc_4D2289: mov 0x18(%ebx),%cl;");
    asm("loc_4D228C: mov %cl,0x18(%edi);");
    asm("loc_4D228F: mov 8(%esi),%ecx;");
    asm("loc_4D2292: mov 0x80(%esp),%eax;");
    asm("loc_4D2299: inc %ecx;");
    asm("loc_4D229A: test %eax,%eax;");
    asm("loc_4D229C: mov %ecx,8(%esi);");
    asm("loc_4D229F: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D22AA: je loc_4D22BB;");
    asm("loc_4D22AC: push $0;");
    asm("loc_4D22AE: lea 0x84(%esp),%ecx;");
    asm("loc_4D22B5: calll *_import_5C62A8;");
    asm("loc_4D22BB: mov 0x14(%esp),%edx;");
    asm("loc_4D22BF: mov 0x414(%edx),%eax;");
    asm("loc_4D22C5: mov 4(%eax),%eax;");
    asm("loc_4D22C8: mov 0x1C(%esp),%ebp;");
    asm("loc_4D22CC: movb $1,0x20(%eax);");
    asm("loc_4D22D0: mov (%ebp),%ebp;");
    asm("loc_4D22D3: cmp _data_66D33C,%ebp;");
    asm("loc_4D22D9: mov %ebp,0x1C(%esp);");
    asm("loc_4D22DD: jne loc_4D2120;");
    asm("loc_4D22E3: mov 0x1B(%esp),%al;");
    asm("loc_4D22E7: test %al,%al;");
    asm("loc_4D22E9: je loc_4D22F5;");
    asm("loc_4D22EB: push $0;");
    asm("loc_4D22ED: call _sub_45A990;");
    asm("loc_4D22F2: add $4,%esp;");
    asm("loc_4D22F5: mov _data_674B04,%ecx;");
    asm("loc_4D22FB: push $0;");
    asm("loc_4D22FD: call _sub_4E5470;");
    asm("loc_4D2302: cmp $2,%eax;");
    asm("loc_4D2305: je loc_4D2475;");
    asm("loc_4D230B: mov 0x14(%esp),%edi;");
    asm("loc_4D230F: mov 0x438(%edi),%eax;");
    asm("loc_4D2315: test %eax,%eax;");
    asm("loc_4D2317: je loc_4D2322;");
    asm("loc_4D2319: cmp $4,%eax;");
    asm("loc_4D231C: jne loc_4D2475;");
    asm("loc_4D2322: mov 0x78(%esp),%ecx;");
    asm("loc_4D2326: calll *_import_5C6348;");
    asm("loc_4D232C: test %eax,%eax;");
    asm("loc_4D232E: je loc_4D2475;");
    asm("loc_4D2334: mov _data_6748FC,%cl;");
    asm("loc_4D233A: test %cl,%cl;");
    asm("loc_4D233C: jne loc_4D2475;");
    asm("loc_4D2342: mov (%eax),%edx;");
    asm("loc_4D2344: mov %eax,%ecx;");
    asm("loc_4D2346: calll *0x150(%edx);");
    asm("loc_4D234C: test %eax,%eax;");
    asm("loc_4D234E: je loc_4D2368;");
    asm("loc_4D2350: mov 0x4C(%eax),%ecx;");
    asm("loc_4D2353: and $3,%ecx;");
    asm("loc_4D2356: cmp $3,%cl;");
    asm("loc_4D2359: jne loc_4D2368;");
    asm("loc_4D235B: mov %eax,%ebx;");
    asm("loc_4D235D: jmp loc_4D236A;");
    asm("loc_4D235F: movb $1,0x20(%ecx);");
    asm("loc_4D2363: jmp loc_4D22D0;");
    asm("loc_4D2368: xor %ebx,%ebx;");
    asm("loc_4D236A: push %ebx;");
    asm("loc_4D236B: mov %edi,%ecx;");
    asm("loc_4D236D: call _sub_4D3FD0;");
    asm("loc_4D2372: mov %eax,%edi;");
    asm("loc_4D2374: test %edi,%edi;");
    asm("loc_4D2376: jl loc_4D2475;");
    asm("loc_4D237C: mov 0xB0(%ebx),%edx;");
    asm("loc_4D2382: push $0;");
    asm("loc_4D2384: push %edx;");
    asm("loc_4D2385: call _sub_5416C0;");
    asm("loc_4D238A: add $8,%esp;");
    asm("loc_4D238D: test %eax,%eax;");
    asm("loc_4D238F: je loc_4D2475;");
    asm("loc_4D2395: push $0;");
    asm("loc_4D2397: push $0;");
    asm("loc_4D2399: push $0;");
    asm("loc_4D239B: push %eax;");
    asm("loc_4D239C: push %edi;");
    asm("loc_4D239D: lea 0x20C(%esp),%ecx;");
    asm("loc_4D23A4: call _sub_4CF030;");
    asm("loc_4D23A9: mov %eax,0x1C(%esp);");
    asm("loc_4D23AD: mov 4(%esi),%ebp;");
    asm("loc_4D23B0: mov 4(%ebp),%ebx;");
    asm("loc_4D23B3: push $0x24;");
    asm("loc_4D23B5: movl $0x22,0x2228(%esp);");
    asm("loc_4D23C0: call _sub_5B7E84;");
    asm("loc_4D23C5: add $4,%esp;");
    asm("loc_4D23C8: test %ebx,%ebx;");
    asm("loc_4D23CA: mov %eax,%edi;");
    asm("loc_4D23CC: mov %ebp,(%edi);");
    asm("loc_4D23CE: jne loc_4D23D2;");
    asm("loc_4D23D0: mov %edi,%ebx;");
    asm("loc_4D23D2: mov %ebx,4(%edi);");
    asm("loc_4D23D5: mov %edi,4(%ebp);");
    asm("loc_4D23D8: mov 4(%edi),%eax;");
    asm("loc_4D23DB: lea 8(%edi),%ebp;");
    asm("loc_4D23DE: mov %edi,(%eax);");
    asm("loc_4D23E0: mov %ebp,0x4C(%esp);");
    asm("loc_4D23E4: mov %ebp,0x60(%esp);");
    asm("loc_4D23E8: test %ebp,%ebp;");
    asm("loc_4D23EA: je loc_4D2449;");
    asm("loc_4D23EC: mov 0x1C(%esp),%edx;");
    asm("loc_4D23F0: mov (%edx),%eax;");
    asm("loc_4D23F2: lea 4(%ebp),%ecx;");
    asm("loc_4D23F5: mov %eax,(%ebp);");
    asm("loc_4D23F8: mov %ecx,0x70(%esp);");
    asm("loc_4D23FC: movl $0,(%ecx);");
    asm("loc_4D2402: movl $0,4(%ecx);");
    asm("loc_4D2409: mov 4(%edx),%eax;");
    asm("loc_4D240C: test %eax,%eax;");
    asm("loc_4D240E: movb $0x24,0x2224(%esp);");
    asm("loc_4D2416: je loc_4D2431;");
    asm("loc_4D2418: add $0xFFFFFFF8,%eax;");
    asm("loc_4D241B: test %eax,%eax;");
    asm("loc_4D241D: je loc_4D2431;");
    asm("loc_4D241F: add $8,%eax;");
    asm("loc_4D2422: test %eax,%eax;");
    asm("loc_4D2424: je loc_4D2431;");
    asm("loc_4D2426: push %eax;");
    asm("loc_4D2427: calll *_import_5C62A8;");
    asm("loc_4D242D: mov 0x1C(%esp),%edx;");
    asm("loc_4D2431: mov 0xC(%edx),%ecx;");
    asm("loc_4D2434: mov %ecx,0xC(%ebp);");
    asm("loc_4D2437: mov 0x10(%edx),%eax;");
    asm("loc_4D243A: mov %eax,0x10(%ebp);");
    asm("loc_4D243D: mov 0x14(%edx),%ecx;");
    asm("loc_4D2440: mov %ecx,0x14(%ebp);");
    asm("loc_4D2443: mov 0x18(%edx),%dl;");
    asm("loc_4D2446: mov %dl,0x18(%ebp);");
    asm("loc_4D2449: incl 8(%esi);");
    asm("loc_4D244C: push %edi;");
    asm("loc_4D244D: lea 0x78(%esp),%ecx;");
    asm("loc_4D2451: movb $0x22,0x2228(%esp);");
    asm("loc_4D2459: call _sub_4D4920;");
    asm("loc_4D245E: lea 0x1F8(%esp),%ecx;");
    asm("loc_4D2465: movl $0xFFFFFFFF,0x2224(%esp);");
    asm("loc_4D2470: call _sub_4D0470;");
    asm("loc_4D2475: mov _data_674B04,%ecx;");
    asm("loc_4D247B: push $0;");
    asm("loc_4D247D: call _sub_4E5470;");
    asm("loc_4D2482: cmp $2,%eax;");
    asm("loc_4D2485: je loc_4D248E;");
    asm("loc_4D2487: mov %esi,%ecx;");
    asm("loc_4D2489: call _sub_4D4340;");
    asm("loc_4D248E: mov 0x221C(%esp),%ecx;");
    asm("loc_4D2495: pop %edi;");
    asm("loc_4D2496: pop %esi;");
    asm("loc_4D2497: pop %ebp;");
    asm("loc_4D2498: pop %ebx;");
    asm("loc_4D2499: mov %ecx,%fs:0;");
    asm("loc_4D24A0: add $0x2218,%esp;");
    asm("loc_4D24A6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D24B0() // _sub_4D24B0
{
    __DEBUG_ASM(4D24B0);
    // chunk 0x4D24B0 _sub_4D24B0
    asm("loc_4D24B0: push $0xFFFFFFFF;");
    asm("loc_4D24B2: mov %fs:0,%eax;");
    asm("loc_4D24B8: push $_sub_5BDF5B;");
    asm("loc_4D24BD: push %eax;");
    asm("loc_4D24BE: mov $0x6DD0,%eax;");
    asm("loc_4D24C3: mov %esp,%fs:0;");
    asm("loc_4D24CA: call _sub_5B7E90;");
    asm("loc_4D24CF: push %ebx;");
    asm("loc_4D24D0: push %ebp;");
    asm("loc_4D24D1: push %esi;");
    asm("loc_4D24D2: push %edi;");
    asm("loc_4D24D3: push $6;");
    asm("loc_4D24D5: mov %ecx,%ebp;");
    asm("loc_4D24D7: call _sub_5792B0;");
    asm("loc_4D24DC: add $4,%esp;");
    asm("loc_4D24DF: test %eax,%eax;");
    asm("loc_4D24E1: je loc_4D3D94;");
    asm("loc_4D24E7: push $0xA;");
    asm("loc_4D24E9: call _sub_5792B0;");
    asm("loc_4D24EE: add $4,%esp;");
    asm("loc_4D24F1: test %eax,%eax;");
    asm("loc_4D24F3: je loc_4D3D94;");
    asm("loc_4D24F9: call _sub_41DD90;");
    asm("loc_4D24FE: test %al,%al;");
    asm("loc_4D2500: je loc_4D3D94;");
    asm("loc_4D2506: call _sub_54BAF0;");
    asm("loc_4D250B: test %eax,%eax;");
    asm("loc_4D250D: je loc_4D3D94;");
    asm("loc_4D2513: call _sub_41A3E0;");
    asm("loc_4D2518: test %al,%al;");
    asm("loc_4D251A: jne loc_4D3D94;");
    asm("loc_4D2520: mov _data_67494C,%al;");
    asm("loc_4D2525: xor %esi,%esi;");
    asm("loc_4D2527: test %al,%al;");
    asm("loc_4D2529: je loc_4D2539;");
    asm("loc_4D252B: movb $1,0x404(%ebp);");
    asm("loc_4D2532: movb $0,_data_67494C;");
    asm("loc_4D2539: call _sub_42D680;");
    asm("loc_4D253E: fadds 0x43C(%ebp);");
    asm("loc_4D2544: xor %eax,%eax;");
    asm("loc_4D2546: lea 0x41C(%ebp),%edi;");
    asm("loc_4D254C: fstps 0x43C(%ebp);");
    asm("loc_4D2552: mov $8,%ecx;");
    asm("loc_4D2557: rep stos %eax,(%edi);");
    asm("loc_4D2559: mov 0x400(%ebp),%ebx;");
    asm("loc_4D255F: mov 0x3EC(%ebp),%ecx;");
    asm("loc_4D2565: mov (%ecx),%eax;");
    asm("loc_4D2567: xor %edx,%edx;");
    asm("loc_4D2569: cmp %esi,%ebx;");
    asm("loc_4D256B: sete %dl;");
    asm("loc_4D256E: push %esi;");
    asm("loc_4D256F: push %edx;");
    asm("loc_4D2570: push $0xC;");
    asm("loc_4D2572: calll *0xA8(%eax);");
    asm("loc_4D2578: mov 0x400(%ebp),%edi;");
    asm("loc_4D257E: mov 0x3F0(%ebp),%ecx;");
    asm("loc_4D2584: mov (%ecx),%eax;");
    asm("loc_4D2586: xor %edx,%edx;");
    asm("loc_4D2588: cmp $1,%edi;");
    asm("loc_4D258B: sete %dl;");
    asm("loc_4D258E: push %esi;");
    asm("loc_4D258F: push %edx;");
    asm("loc_4D2590: push $0xC;");
    asm("loc_4D2592: calll *0xA8(%eax);");
    asm("loc_4D2598: mov 0x400(%ebp),%ebx;");
    asm("loc_4D259E: mov 0x3F4(%ebp),%ecx;");
    asm("loc_4D25A4: mov (%ecx),%eax;");
    asm("loc_4D25A6: xor %edx,%edx;");
    asm("loc_4D25A8: cmp $2,%ebx;");
    asm("loc_4D25AB: sete %dl;");
    asm("loc_4D25AE: push %esi;");
    asm("loc_4D25AF: push %edx;");
    asm("loc_4D25B0: push $0xC;");
    asm("loc_4D25B2: calll *0xA8(%eax);");
    asm("loc_4D25B8: mov 0x400(%ebp),%edi;");
    asm("loc_4D25BE: mov 0x3FC(%ebp),%ecx;");
    asm("loc_4D25C4: mov (%ecx),%eax;");
    asm("loc_4D25C6: xor %edx,%edx;");
    asm("loc_4D25C8: cmp $4,%edi;");
    asm("loc_4D25CB: sete %dl;");
    asm("loc_4D25CE: push %esi;");
    asm("loc_4D25CF: push %edx;");
    asm("loc_4D25D0: push $0xC;");
    asm("loc_4D25D2: calll *0xA8(%eax);");
    asm("loc_4D25D8: mov 0x400(%ebp),%ebx;");
    asm("loc_4D25DE: mov 0x3F8(%ebp),%ecx;");
    asm("loc_4D25E4: mov (%ecx),%eax;");
    asm("loc_4D25E6: xor %edx,%edx;");
    asm("loc_4D25E8: cmp $3,%ebx;");
    asm("loc_4D25EB: sete %dl;");
    asm("loc_4D25EE: push %esi;");
    asm("loc_4D25EF: push %edx;");
    asm("loc_4D25F0: push $0xC;");
    asm("loc_4D25F2: calll *0xA8(%eax);");
    asm("loc_4D25F8: xor %bl,%bl;");
    asm("loc_4D25FA: call _sub_42D680;");
    asm("loc_4D25FF: fadds 0x3E8(%ebp);");
    asm("loc_4D2605: fsts 0x3E8(%ebp);");
    asm("loc_4D260B: fcoms _data_5D7964;");
    asm("loc_4D2611: fnstsw %ax;");
    asm("loc_4D2613: test $1,%ah;");
    asm("loc_4D2616: je loc_4D2622;");
    asm("loc_4D2618: mov 0x404(%ebp),%al;");
    asm("loc_4D261E: test %al,%al;");
    asm("loc_4D2620: je loc_4D2654;");
    asm("loc_4D2622: fsubs _data_5D7964;");
    asm("loc_4D2628: fsts 0x3E8(%ebp);");
    asm("loc_4D262E: fcomps _data_5C7474;");
    asm("loc_4D2634: fnstsw %ax;");
    asm("loc_4D2636: test $5,%ah;");
    asm("loc_4D2639: jp loc_4D2641;");
    asm("loc_4D263B: mov %esi,0x3E8(%ebp);");
    asm("loc_4D2641: lea -0x38(%ebp),%ecx;");
    asm("loc_4D2644: call _sub_4D0490;");
    asm("loc_4D2649: movb $0,0x404(%ebp);");
    asm("loc_4D2650: mov $1,%bl;");
    asm("loc_4D2652: jmp loc_4D2656;");
    asm("loc_4D2654: fstp %st(0);");
    asm("loc_4D2656: mov %esi,0x50(%esp);");
    asm("loc_4D265A: call _sub_54BAF0;");
    asm("loc_4D265F: cmp %esi,%eax;");
    asm("loc_4D2661: mov %eax,0x24(%esp);");
    asm("loc_4D2665: je loc_4D269D;");
    asm("loc_4D2667: mov (%eax),%edx;");
    asm("loc_4D2669: mov %eax,%ecx;");
    asm("loc_4D266B: calll *0x150(%edx);");
    asm("loc_4D2671: cmp %esi,%eax;");
    asm("loc_4D2673: je loc_4D269D;");
    asm("loc_4D2675: mov 0x4C(%eax),%ecx;");
    asm("loc_4D2678: and $0x503,%ecx;");
    asm("loc_4D267E: cmp $0x503,%ecx;");
    asm("loc_4D2684: jne loc_4D269D;");
    asm("loc_4D2686: mov %eax,%ecx;");
    asm("loc_4D2688: calll *_import_5C6348;");
    asm("loc_4D268E: cmp %esi,%eax;");
    asm("loc_4D2690: je loc_4D269D;");
    asm("loc_4D2692: mov (%eax),%edx;");
    asm("loc_4D2694: mov %eax,%ecx;");
    asm("loc_4D2696: calll *0x20(%edx);");
    asm("loc_4D2699: mov %eax,0x50(%esp);");
    asm("loc_4D269D: mov 0x3E0(%ebp),%eax;");
    asm("loc_4D26A3: xor %ecx,%ecx;");
    asm("loc_4D26A5: cmp $8,%eax;");
    asm("loc_4D26A8: jbe loc_4D26AD;");
    asm("loc_4D26AA: lea -8(%eax),%ecx;");
    asm("loc_4D26AD: cmp %ecx,0x3E4(%ebp);");
    asm("loc_4D26B3: jbe loc_4D26BB;");
    asm("loc_4D26B5: mov %ecx,0x3E4(%ebp);");
    asm("loc_4D26BB: mov 0x3DC(%ebp),%edi;");
    asm("loc_4D26C1: mov 0x3E4(%ebp),%eax;");
    asm("loc_4D26C7: mov (%edi),%ecx;");
    asm("loc_4D26C9: xor %esi,%esi;");
    asm("loc_4D26CB: xor %edx,%edx;");
    asm("loc_4D26CD: test %eax,%eax;");
    asm("loc_4D26CF: mov %esi,0x1C(%esp);");
    asm("loc_4D26D3: mov %ecx,0x14(%esp);");
    asm("loc_4D26D7: je loc_4D26EF;");
    asm("loc_4D26D9: lea (%esp),%esp;");
    asm("loc_4D26E0: cmp %edi,%ecx;");
    asm("loc_4D26E2: je loc_4D26EB;");
    asm("loc_4D26E4: mov (%ecx),%ecx;");
    asm("loc_4D26E6: inc %edx;");
    asm("loc_4D26E7: cmp %eax,%edx;");
    asm("loc_4D26E9: jne loc_4D26E0;");
    asm("loc_4D26EB: mov %ecx,0x14(%esp);");
    asm("loc_4D26EF: cmp %eax,_data_6124B8;");
    asm("loc_4D26F5: jne loc_4D2B59;");
    asm("loc_4D26FB: test %bl,%bl;");
    asm("loc_4D26FD: jne loc_4D2B59;");
    asm("loc_4D2703: cmp %edi,%ecx;");
    asm("loc_4D2705: je loc_4D2AD6;");
    asm("loc_4D270B: lea 0x374(%ebp),%ebx;");
    asm("loc_4D2711: mov 0x14(%esp),%edx;");
    asm("loc_4D2715: mov 0xC(%edx),%eax;");
    asm("loc_4D2718: test %eax,%eax;");
    asm("loc_4D271A: lea 8(%edx),%edi;");
    asm("loc_4D271D: mov %edi,0x2C(%esp);");
    asm("loc_4D2721: je loc_4D274C;");
    asm("loc_4D2723: lea -8(%eax),%ecx;");
    asm("loc_4D2726: test %ecx,%ecx;");
    asm("loc_4D2728: mov %ecx,0x28(%esp);");
    asm("loc_4D272C: jne loc_4D2756;");
    asm("loc_4D272E: mov (%edi),%eax;");
    asm("loc_4D2730: cmp $4,%eax;");
    asm("loc_4D2733: je loc_4D276E;");
    asm("loc_4D2735: cmp $3,%eax;");
    asm("loc_4D2738: je loc_4D276E;");
    asm("loc_4D273A: movb $1,0x404(%ebp);");
    asm("loc_4D2741: mov (%edx),%eax;");
    asm("loc_4D2743: mov %eax,0x14(%esp);");
    asm("loc_4D2747: jmp loc_4D2AC6;");
    asm("loc_4D274C: movl $0,0x28(%esp);");
    asm("loc_4D2754: jmp loc_4D272E;");
    asm("loc_4D2756: call _sub_53A9F0;");
    asm("loc_4D275B: test %al,%al;");
    asm("loc_4D275D: je loc_4D276E;");
    asm("loc_4D275F: mov 0x28(%esp),%ecx;");
    asm("loc_4D2763: call _sub_53A9E0;");
    asm("loc_4D2768: mov %eax,0xA8(%ebx);");
    asm("loc_4D276E: mov 0x400(%ebp),%ecx;");
    asm("loc_4D2774: mov 0x50(%esp),%edx;");
    asm("loc_4D2778: cmp $4,%ecx;");
    asm("loc_4D277B: setne %cl;");
    asm("loc_4D277E: push %ecx;");
    asm("loc_4D277F: push %edx;");
    asm("loc_4D2780: push %edi;");
    asm("loc_4D2781: call _sub_4D4120;");
    asm("loc_4D2786: mov 0x34(%esp),%ecx;");
    asm("loc_4D278A: mov %al,0x1F(%esp);");
    asm("loc_4D278E: mov (%edi),%eax;");
    asm("loc_4D2790: mov _off_612438(,%eax,4),%edi;");
    asm("loc_4D2797: mov 0x330(%ebp,%eax,4),%eax;");
    asm("loc_4D279E: add $0xC,%esp;");
    asm("loc_4D27A1: test %ecx,%ecx;");
    asm("loc_4D27A3: mov %eax,0x20(%esp);");
    asm("loc_4D27A7: je loc_4D27CA;");
    asm("loc_4D27A9: mov (%ecx),%edx;");
    asm("loc_4D27AB: calll *0x20(%edx);");
    asm("loc_4D27AE: push %eax;");
    asm("loc_4D27AF: call _sub_4CC880;");
    asm("loc_4D27B4: add $4,%esp;");
    asm("loc_4D27B7: test %al,%al;");
    asm("loc_4D27B9: je loc_4D27CA;");
    asm("loc_4D27BB: mov 0x370(%ebp),%eax;");
    asm("loc_4D27C1: mov $_data_5D7A88,%edi;");
    asm("loc_4D27C6: mov %eax,0x20(%esp);");
    asm("loc_4D27CA: mov (%ebx),%ecx;");
    asm("loc_4D27CC: mov (%ecx),%edx;");
    asm("loc_4D27CE: push $0x100;");
    asm("loc_4D27D3: lea 0x364(%esp),%eax;");
    asm("loc_4D27DA: push %eax;");
    asm("loc_4D27DB: push $0xB;");
    asm("loc_4D27DD: calll *0xA8(%edx);");
    asm("loc_4D27E3: mov %edi,%esi;");
    asm("loc_4D27E5: lea 0x360(%esp),%eax;");
    asm("loc_4D27EC: lea (%esp),%esp;");
    asm("loc_4D27F0: mov (%eax),%dl;");
    asm("loc_4D27F2: mov %dl,%cl;");
    asm("loc_4D27F4: cmp (%esi),%dl;");
    asm("loc_4D27F6: jne loc_4D2814;");
    asm("loc_4D27F8: test %cl,%cl;");
    asm("loc_4D27FA: je loc_4D2810;");
    asm("loc_4D27FC: mov 1(%eax),%dl;");
    asm("loc_4D27FF: mov %dl,%cl;");
    asm("loc_4D2801: cmp 1(%esi),%dl;");
    asm("loc_4D2804: jne loc_4D2814;");
    asm("loc_4D2806: add $2,%eax;");
    asm("loc_4D2809: add $2,%esi;");
    asm("loc_4D280C: test %cl,%cl;");
    asm("loc_4D280E: jne loc_4D27F0;");
    asm("loc_4D2810: xor %eax,%eax;");
    asm("loc_4D2812: jmp loc_4D2819;");
    asm("loc_4D2814: sbb %eax,%eax;");
    asm("loc_4D2816: sbb $0xFFFFFFFF,%eax;");
    asm("loc_4D2819: test %eax,%eax;");
    asm("loc_4D281B: je loc_4D2838;");
    asm("loc_4D281D: mov (%ebx),%ecx;");
    asm("loc_4D281F: mov (%ecx),%eax;");
    asm("loc_4D2821: push $0;");
    asm("loc_4D2823: push %edi;");
    asm("loc_4D2824: push $4;");
    asm("loc_4D2826: calll *0xA8(%eax);");
    asm("loc_4D282C: mov (%ebx),%ecx;");
    asm("loc_4D282E: mov 0x20(%esp),%edx;");
    asm("loc_4D2832: mov %edx,0x338(%ecx);");
    asm("loc_4D2838: mov _data_679BB0,%eax;");
    asm("loc_4D283D: mov 0x2C(%esp),%ecx;");
    asm("loc_4D2841: mov %eax,0x18(%esp);");
    asm("loc_4D2845: mov (%ecx),%eax;");
    asm("loc_4D2847: cmp $4,%eax;");
    asm("loc_4D284A: je loc_4D2910;");
    asm("loc_4D2850: cmp $3,%eax;");
    asm("loc_4D2853: je loc_4D2910;");
    asm("loc_4D2859: mov 4(%ecx),%eax;");
    asm("loc_4D285C: test %eax,%eax;");
    asm("loc_4D285E: je loc_4D2865;");
    asm("loc_4D2860: add $0xFFFFFFF8,%eax;");
    asm("loc_4D2863: jmp loc_4D2867;");
    asm("loc_4D2865: xor %eax,%eax;");
    asm("loc_4D2867: mov 0x24(%esp),%ecx;");
    asm("loc_4D286B: push %eax;");
    asm("loc_4D286C: push %ecx;");
    asm("loc_4D286D: lea 0xD4(%esp),%edx;");
    asm("loc_4D2874: push %edx;");
    asm("loc_4D2875: call _sub_45A4E0;");
    asm("loc_4D287A: mov (%eax),%eax;");
    asm("loc_4D287C: mov _data_679B84,%ecx;");
    asm("loc_4D2882: add $0xC,%esp;");
    asm("loc_4D2885: cmp %cl,%al;");
    asm("loc_4D2887: mov %eax,0x18(%esp);");
    asm("loc_4D288B: jne loc_4D291A;");
    asm("loc_4D2891: cmp %ch,%ah;");
    asm("loc_4D2893: jne loc_4D291A;");
    asm("loc_4D2899: mov 0x1A(%esp),%al;");
    asm("loc_4D289D: cmp _data_679B84+2,%al;");
    asm("loc_4D28A3: jne loc_4D291A;");
    asm("loc_4D28A5: mov 0x28(%esp),%ecx;");
    asm("loc_4D28A9: mov (%ecx),%edx;");
    asm("loc_4D28AB: calll *0x150(%edx);");
    asm("loc_4D28B1: test %eax,%eax;");
    asm("loc_4D28B3: je loc_4D291A;");
    asm("loc_4D28B5: mov 0x4C(%eax),%ecx;");
    asm("loc_4D28B8: and $0x503,%ecx;");
    asm("loc_4D28BE: cmp $0x503,%ecx;");
    asm("loc_4D28C4: jne loc_4D291A;");
    asm("loc_4D28C6: mov 0x2BD(%eax),%cl;");
    asm("loc_4D28CC: test %cl,%cl;");
    asm("loc_4D28CE: jne loc_4D291A;");
    asm("loc_4D28D0: mov 0x104(%eax),%edx;");
    asm("loc_4D28D6: push $0;");
    asm("loc_4D28D8: lea 0x34(%esp),%eax;");
    asm("loc_4D28DC: push %eax;");
    asm("loc_4D28DD: lea 0x54(%esp),%ecx;");
    asm("loc_4D28E1: push %ecx;");
    asm("loc_4D28E2: mov %edx,0x58(%esp);");
    asm("loc_4D28E6: calll *_import_5C6320;");
    asm("loc_4D28EC: add $0xC,%esp;");
    asm("loc_4D28EF: test %eax,%eax;");
    asm("loc_4D28F1: jne loc_4D28FA;");
    asm("loc_4D28F3: cmpl $0xFFFFFFFF,0x30(%esp);");
    asm("loc_4D28F8: jne loc_4D291A;");
    asm("loc_4D28FA: mov 0x14(%esp),%edx;");
    asm("loc_4D28FE: movb $1,0x404(%ebp);");
    asm("loc_4D2905: mov (%edx),%eax;");
    asm("loc_4D2907: mov %eax,0x14(%esp);");
    asm("loc_4D290B: jmp loc_4D2AC6;");
    asm("loc_4D2910: mov _data_679B80,%ecx;");
    asm("loc_4D2916: mov %ecx,0x18(%esp);");
    asm("loc_4D291A: mov 0x13(%esp),%al;");
    asm("loc_4D291E: test %al,%al;");
    asm("loc_4D2920: je loc_4D292D;");
    asm("loc_4D2922: mov _data_679BA4,%edx;");
    asm("loc_4D2928: jmp loc_4D2A6C;");
    asm("loc_4D292D: fildl _data_616840;");
    asm("loc_4D2933: mov $_data_67DBFC,%esi;");
    asm("loc_4D2938: lea 0xD0(%esp),%edi;");
    asm("loc_4D293F: fsubs _data_67DC60;");
    asm("loc_4D2945: fdivs _data_67DC70;");
    asm("loc_4D294B: fmuls _data_67DC9C;");
    asm("loc_4D2951: fstps 0x34(%esp);");
    asm("loc_4D2955: mov 0x34(%esp),%eax;");
    asm("loc_4D2959: fildl _data_616844;");
    asm("loc_4D295F: mov %eax,0x8C(%esp);");
    asm("loc_4D2966: lea 0x8C(%esp),%eax;");
    asm("loc_4D296D: push %eax;");
    asm("loc_4D296E: fsubs _data_67DC64;");
    asm("loc_4D2974: fdivs _data_67DC74;");
    asm("loc_4D297A: fmuls _data_67DC9C;");
    asm("loc_4D2980: fstps 0x3C(%esp);");
    asm("loc_4D2984: mov 0x3C(%esp),%ecx;");
    asm("loc_4D2988: flds _data_67DC9C;");
    asm("loc_4D298E: mov %ecx,0x94(%esp);");
    asm("loc_4D2995: fchs;");
    asm("loc_4D2997: mov $9,%ecx;");
    asm("loc_4D299C: fstps 0x40(%esp);");
    asm("loc_4D29A0: mov 0x40(%esp),%edx;");
    asm("loc_4D29A4: rep movsl (%esi),(%edi);");
    asm("loc_4D29A6: lea 0xD4(%esp),%ecx;");
    asm("loc_4D29AD: mov %edx,0x98(%esp);");
    asm("loc_4D29B4: push %ecx;");
    asm("loc_4D29B5: lea 0x5C(%esp),%edx;");
    asm("loc_4D29B9: push %edx;");
    asm("loc_4D29BA: call _sub_423B90;");
    asm("loc_4D29BF: mov 0x60(%esp),%eax;");
    asm("loc_4D29C3: flds 0x60(%esp);");
    asm("loc_4D29C7: mov 0x64(%esp),%ecx;");
    asm("loc_4D29CB: fmuls 0x60(%esp);");
    asm("loc_4D29CF: mov 0x68(%esp),%edx;");
    asm("loc_4D29D3: flds 0x64(%esp);");
    asm("loc_4D29D7: mov %ecx,0x50(%esp);");
    asm("loc_4D29DB: fmuls 0x64(%esp);");
    asm("loc_4D29DF: mov (%ebx),%ecx;");
    asm("loc_4D29E1: mov %eax,0x4C(%esp);");
    asm("loc_4D29E5: mov %edx,0x54(%esp);");
    asm("loc_4D29E9: faddp;");
    asm("loc_4D29EB: add $0xC,%esp;");
    asm("loc_4D29EE: flds 0x5C(%esp);");
    asm("loc_4D29F2: lea 0x40(%esp),%edx;");
    asm("loc_4D29F6: fmuls 0x5C(%esp);");
    asm("loc_4D29FA: push %edx;");
    asm("loc_4D29FB: faddp;");
    asm("loc_4D29FD: fsqrt;");
    asm("loc_4D29FF: fdivrs _data_5C75DC;");
    asm("loc_4D2A05: flds 0x58(%esp);");
    asm("loc_4D2A09: fmul %st(1),%st;");
    asm("loc_4D2A0B: fstps 0x44(%esp);");
    asm("loc_4D2A0F: flds 0x48(%esp);");
    asm("loc_4D2A13: fmul %st(1),%st;");
    asm("loc_4D2A15: fstps 0x48(%esp);");
    asm("loc_4D2A19: fmuls 0x4C(%esp);");
    asm("loc_4D2A1D: fstps 0x4C(%esp);");
    asm("loc_4D2A21: mov (%ecx),%eax;");
    asm("loc_4D2A23: calll *0x10(%eax);");
    asm("loc_4D2A26: test %al,%al;");
    asm("loc_4D2A28: jne loc_4D2A4C;");
    asm("loc_4D2A2A: mov 0x20(%ebx),%ecx;");
    asm("loc_4D2A2D: mov (%ecx),%eax;");
    asm("loc_4D2A2F: lea 0x40(%esp),%edx;");
    asm("loc_4D2A33: push %edx;");
    asm("loc_4D2A34: calll *0x10(%eax);");
    asm("loc_4D2A37: test %al,%al;");
    asm("loc_4D2A39: jne loc_4D2A4C;");
    asm("loc_4D2A3B: mov 0x40(%ebx),%ecx;");
    asm("loc_4D2A3E: mov (%ecx),%eax;");
    asm("loc_4D2A40: lea 0x40(%esp),%edx;");
    asm("loc_4D2A44: push %edx;");
    asm("loc_4D2A45: calll *0x10(%eax);");
    asm("loc_4D2A48: test %al,%al;");
    asm("loc_4D2A4A: je loc_4D2A70;");
    asm("loc_4D2A4C: call _sub_45A740;");
    asm("loc_4D2A51: test %al,%al;");
    asm("loc_4D2A53: jne loc_4D2A70;");
    asm("loc_4D2A55: mov 0x18(%esp),%eax;");
    asm("loc_4D2A59: push %eax;");
    asm("loc_4D2A5A: lea 0xCC(%esp),%ecx;");
    asm("loc_4D2A61: push %ecx;");
    asm("loc_4D2A62: call _sub_561F20;");
    asm("loc_4D2A67: mov (%eax),%edx;");
    asm("loc_4D2A69: add $8,%esp;");
    asm("loc_4D2A6C: mov %edx,0x18(%esp);");
    asm("loc_4D2A70: mov (%ebx),%ecx;");
    asm("loc_4D2A72: mov (%ecx),%eax;");
    asm("loc_4D2A74: push $1;");
    asm("loc_4D2A76: lea 0x1C(%esp),%edx;");
    asm("loc_4D2A7A: push %edx;");
    asm("loc_4D2A7B: push $0x33;");
    asm("loc_4D2A7D: calll *0xA8(%eax);");
    asm("loc_4D2A83: mov 0x20(%ebx),%ecx;");
    asm("loc_4D2A86: mov (%ecx),%eax;");
    asm("loc_4D2A88: push $1;");
    asm("loc_4D2A8A: lea 0x1C(%esp),%edx;");
    asm("loc_4D2A8E: push %edx;");
    asm("loc_4D2A8F: push $0x33;");
    asm("loc_4D2A91: calll *0xA8(%eax);");
    asm("loc_4D2A97: mov 0x40(%ebx),%ecx;");
    asm("loc_4D2A9A: mov (%ecx),%eax;");
    asm("loc_4D2A9C: push $1;");
    asm("loc_4D2A9E: lea 0x1C(%esp),%edx;");
    asm("loc_4D2AA2: push %edx;");
    asm("loc_4D2AA3: push $0x33;");
    asm("loc_4D2AA5: calll *0xA8(%eax);");
    asm("loc_4D2AAB: mov 0x1C(%esp),%eax;");
    asm("loc_4D2AAF: inc %eax;");
    asm("loc_4D2AB0: add $4,%ebx;");
    asm("loc_4D2AB3: cmp $8,%eax;");
    asm("loc_4D2AB6: mov %eax,0x1C(%esp);");
    asm("loc_4D2ABA: jge loc_4D2AD6;");
    asm("loc_4D2ABC: mov 0x14(%esp),%eax;");
    asm("loc_4D2AC0: mov (%eax),%ecx;");
    asm("loc_4D2AC2: mov %ecx,0x14(%esp);");
    asm("loc_4D2AC6: mov 0x14(%esp),%edx;");
    asm("loc_4D2ACA: cmp 0x3DC(%ebp),%edx;");
    asm("loc_4D2AD0: jne loc_4D2711;");
    asm("loc_4D2AD6: lea 0x41C(%ebp),%esi;");
    asm("loc_4D2ADC: movl $8,0x24(%esp);");
    asm("loc_4D2AE4: mov (%esi),%ebx;");
    asm("loc_4D2AE6: test %ebx,%ebx;");
    asm("loc_4D2AE8: je loc_4D2AFE;");
    asm("loc_4D2AEA: mov -0x68(%esi),%edi;");
    asm("loc_4D2AED: mov %edi,%ecx;");
    asm("loc_4D2AEF: call _sub_58A5D0;");
    asm("loc_4D2AF4: push %ebx;");
    asm("loc_4D2AF5: mov %edi,%ecx;");
    asm("loc_4D2AF7: mov %eax,(%esi);");
    asm("loc_4D2AF9: call _sub_58A5E0;");
    asm("loc_4D2AFE: mov 0x24(%esp),%eax;");
    asm("loc_4D2B02: add $4,%esi;");
    asm("loc_4D2B05: dec %eax;");
    asm("loc_4D2B06: mov %eax,0x24(%esp);");
    asm("loc_4D2B0A: jne loc_4D2AE4;");
    asm("loc_4D2B0C: mov %ebp,%ecx;");
    asm("loc_4D2B0E: call _sub_5A0760;");
    asm("loc_4D2B13: lea 0x41C(%ebp),%esi;");
    asm("loc_4D2B19: movl $8,0x24(%esp);");
    asm("loc_4D2B21: mov (%esi),%ebx;");
    asm("loc_4D2B23: test %ebx,%ebx;");
    asm("loc_4D2B25: je loc_4D2B3B;");
    asm("loc_4D2B27: mov -0x68(%esi),%edi;");
    asm("loc_4D2B2A: mov %edi,%ecx;");
    asm("loc_4D2B2C: call _sub_58A5D0;");
    asm("loc_4D2B31: push %ebx;");
    asm("loc_4D2B32: mov %edi,%ecx;");
    asm("loc_4D2B34: mov %eax,(%esi);");
    asm("loc_4D2B36: call _sub_58A5E0;");
    asm("loc_4D2B3B: mov 0x24(%esp),%eax;");
    asm("loc_4D2B3F: add $4,%esi;");
    asm("loc_4D2B42: dec %eax;");
    asm("loc_4D2B43: mov %eax,0x24(%esp);");
    asm("loc_4D2B47: jne loc_4D2B21;");
    asm("loc_4D2B49: mov (%ebp),%eax;");
    asm("loc_4D2B4C: mov %ebp,%ecx;");
    asm("loc_4D2B4E: calll *0x9C(%eax);");
    asm("loc_4D2B54: jmp loc_4D3D94;");
    asm("loc_4D2B59: mov %eax,_data_6124B8;");
    asm("loc_4D2B5E: flds 0x43C(%ebp);");
    asm("loc_4D2B64: fcomps _data_5D3E40;");
    asm("loc_4D2B6A: movb $0,0x13(%esp);");
    asm("loc_4D2B6F: fnstsw %ax;");
    asm("loc_4D2B71: test $0x41,%ah;");
    asm("loc_4D2B74: jne loc_4D2B85;");
    asm("loc_4D2B76: movl $0,0x43C(%ebp);");
    asm("loc_4D2B80: movb $1,0x13(%esp);");
    asm("loc_4D2B85: cmp 0x3DC(%ebp),%ecx;");
    asm("loc_4D2B8B: je loc_4D3CD5;");
    asm("loc_4D2B91: mov 0x374(%ebp,%esi,4),%eax;");
    asm("loc_4D2B98: orb $3,0x6C(%eax);");
    asm("loc_4D2B9C: mov 0x394(%ebp,%esi,4),%eax;");
    asm("loc_4D2BA3: orb $3,0x6C(%eax);");
    asm("loc_4D2BA7: mov 0x3B4(%ebp,%esi,4),%eax;");
    asm("loc_4D2BAE: mov 0x6C(%eax),%bl;");
    asm("loc_4D2BB1: or $3,%bl;");
    asm("loc_4D2BB4: lea 8(%ecx),%edi;");
    asm("loc_4D2BB7: mov %bl,0x6C(%eax);");
    asm("loc_4D2BBA: mov 4(%edi),%eax;");
    asm("loc_4D2BBD: test %eax,%eax;");
    asm("loc_4D2BBF: mov %edi,0x28(%esp);");
    asm("loc_4D2BC3: je loc_4D2BEE;");
    asm("loc_4D2BC5: lea -8(%eax),%ebx;");
    asm("loc_4D2BC8: test %ebx,%ebx;");
    asm("loc_4D2BCA: mov %ebx,0x18(%esp);");
    asm("loc_4D2BCE: jne loc_4D2BF6;");
    asm("loc_4D2BD0: mov (%edi),%eax;");
    asm("loc_4D2BD2: cmp $4,%eax;");
    asm("loc_4D2BD5: je loc_4D2BF6;");
    asm("loc_4D2BD7: cmp $3,%eax;");
    asm("loc_4D2BDA: je loc_4D2BF6;");
    asm("loc_4D2BDC: movb $1,0x404(%ebp);");
    asm("loc_4D2BE3: mov (%ecx),%ecx;");
    asm("loc_4D2BE5: mov %ecx,0x14(%esp);");
    asm("loc_4D2BE9: jmp loc_4D3CC0;");
    asm("loc_4D2BEE: xor %ebx,%ebx;");
    asm("loc_4D2BF0: mov %ebx,0x18(%esp);");
    asm("loc_4D2BF4: jmp loc_4D2BD0;");
    asm("loc_4D2BF6: flds 0xC(%edi);");
    asm("loc_4D2BF9: call _sub_5B7EC0;");
    asm("loc_4D2BFE: mov %eax,%ecx;");
    asm("loc_4D2C00: cmp $0x7D0,%ecx;");
    asm("loc_4D2C06: jge loc_4D2C30;");
    asm("loc_4D2C08: push %ecx;");
    asm("loc_4D2C09: push $_data_5D7C04;");
    asm("loc_4D2C0E: lea 0xDE8(%esp),%ecx;");
    asm("loc_4D2C15: push %ecx;");
    asm("loc_4D2C16: call _sub_402180;");
    asm("loc_4D2C1B: mov 0x394(%ebp,%esi,4),%ecx;");
    asm("loc_4D2C22: add $0xC,%esp;");
    asm("loc_4D2C25: push %eax;");
    asm("loc_4D2C26: call _sub_58A580;");
    asm("loc_4D2C2B: jmp loc_4D2CD5;");
    asm("loc_4D2C30: cmp $0x2710,%ecx;");
    asm("loc_4D2C36: jge loc_4D2C92;");
    asm("loc_4D2C38: mov $0x10624DD3,%eax;");
    asm("loc_4D2C3D: imul %ecx;");
    asm("loc_4D2C3F: sar $6,%edx;");
    asm("loc_4D2C42: mov %edx,%eax;");
    asm("loc_4D2C44: shr $0x1F,%eax;");
    asm("loc_4D2C47: add %eax,%edx;");
    asm("loc_4D2C49: mov %edx,%esi;");
    asm("loc_4D2C4B: imul $0x3E8,%edx;");
    asm("loc_4D2C51: sub %edx,%ecx;");
    asm("loc_4D2C53: mov $0x51EB851F,%eax;");
    asm("loc_4D2C58: imul %ecx;");
    asm("loc_4D2C5A: sar $5,%edx;");
    asm("loc_4D2C5D: mov %edx,%eax;");
    asm("loc_4D2C5F: shr $0x1F,%eax;");
    asm("loc_4D2C62: add %eax,%edx;");
    asm("loc_4D2C64: push %edx;");
    asm("loc_4D2C65: push %esi;");
    asm("loc_4D2C66: lea 0x2DE8(%esp),%ecx;");
    asm("loc_4D2C6D: push $_data_5D7BFC;");
    asm("loc_4D2C72: push %ecx;");
    asm("loc_4D2C73: call _sub_402180;");
    asm("loc_4D2C78: mov 0x2C(%esp),%edx;");
    asm("loc_4D2C7C: mov 0x394(%ebp,%edx,4),%ecx;");
    asm("loc_4D2C83: add $0x10,%esp;");
    asm("loc_4D2C86: push %eax;");
    asm("loc_4D2C87: call _sub_58A580;");
    asm("loc_4D2C8C: mov 0x1C(%esp),%esi;");
    asm("loc_4D2C90: jmp loc_4D2CD5;");
    asm("loc_4D2C92: cmp $0x1869F,%ecx;");
    asm("loc_4D2C98: jge loc_4D2CBD;");
    asm("loc_4D2C9A: mov $0x10624DD3,%eax;");
    asm("loc_4D2C9F: imul %ecx;");
    asm("loc_4D2CA1: sar $6,%edx;");
    asm("loc_4D2CA4: mov %edx,%eax;");
    asm("loc_4D2CA6: shr $0x1F,%eax;");
    asm("loc_4D2CA9: add %eax,%edx;");
    asm("loc_4D2CAB: push %edx;");
    asm("loc_4D2CAC: push $_data_5D7BF8;");
    asm("loc_4D2CB1: lea 0x4DE8(%esp),%ecx;");
    asm("loc_4D2CB8: jmp loc_4D2C15;");
    asm("loc_4D2CBD: mov 0x394(%ebp,%esi,4),%ecx;");
    asm("loc_4D2CC4: mov (%ecx),%edx;");
    asm("loc_4D2CC6: push $0;");
    asm("loc_4D2CC8: push $0x3CE;");
    asm("loc_4D2CCD: push $0x1E;");
    asm("loc_4D2CCF: calll *0xA8(%edx);");
    asm("loc_4D2CD5: test %ebx,%ebx;");
    asm("loc_4D2CD7: movw $0,0x13C(%esp);");
    asm("loc_4D2CE1: movb $0,0x12(%esp);");
    asm("loc_4D2CE6: jne loc_4D2D98;");
    asm("loc_4D2CEC: mov (%edi),%eax;");
    asm("loc_4D2CEE: cmp $4,%eax;");
    asm("loc_4D2CF1: jne loc_4D2D69;");
    asm("loc_4D2CF3: mov 0x14(%edi),%esi;");
    asm("loc_4D2CF6: call _sub_4C4690;");
    asm("loc_4D2CFB: cmp %eax,%esi;");
    asm("loc_4D2CFD: jge loc_4D2D44;");
    asm("loc_4D2CFF: push %esi;");
    asm("loc_4D2D00: call _sub_4C46A0;");
    asm("loc_4D2D05: mov _data_67ECA8,%ecx;");
    asm("loc_4D2D0B: mov %eax,%esi;");
    asm("loc_4D2D0D: push $0x40;");
    asm("loc_4D2D0F: lea 0x468(%esp),%eax;");
    asm("loc_4D2D16: push %eax;");
    asm("loc_4D2D17: push $0x444;");
    asm("loc_4D2D1C: push %ecx;");
    asm("loc_4D2D1D: call _sub_4347E0;");
    asm("loc_4D2D22: mov 0x14(%esi),%edx;");
    asm("loc_4D2D25: push %edx;");
    asm("loc_4D2D26: lea 0x478(%esp),%eax;");
    asm("loc_4D2D2D: push %eax;");
    asm("loc_4D2D2E: lea 0x158(%esp),%ecx;");
    asm("loc_4D2D35: push %ecx;");
    asm("loc_4D2D36: calll *_import_5C70EC;");
    asm("loc_4D2D3C: add $0x20,%esp;");
    asm("loc_4D2D3F: jmp loc_4D38B3;");
    asm("loc_4D2D44: mov _data_67ECA8,%eax;");
    asm("loc_4D2D49: push $0xFF;");
    asm("loc_4D2D4E: lea 0x140(%esp),%edx;");
    asm("loc_4D2D55: push %edx;");
    asm("loc_4D2D56: push $0x442;");
    asm("loc_4D2D5B: push %eax;");
    asm("loc_4D2D5C: call _sub_4347E0;");
    asm("loc_4D2D61: add $0x10,%esp;");
    asm("loc_4D2D64: jmp loc_4D38B3;");
    asm("loc_4D2D69: cmp $3,%eax;");
    asm("loc_4D2D6C: jne loc_4D389D;");
    asm("loc_4D2D72: mov _data_67ECA8,%edx;");
    asm("loc_4D2D78: push $0xFF;");
    asm("loc_4D2D7D: lea 0x140(%esp),%ecx;");
    asm("loc_4D2D84: push %ecx;");
    asm("loc_4D2D85: push $0x443;");
    asm("loc_4D2D8A: push %edx;");
    asm("loc_4D2D8B: call _sub_4347E0;");
    asm("loc_4D2D90: add $0x10,%esp;");
    asm("loc_4D2D93: jmp loc_4D38B3;");
    asm("loc_4D2D98: mov %ebx,%ecx;");
    asm("loc_4D2D9A: call _sub_53A9F0;");
    asm("loc_4D2D9F: test %al,%al;");
    asm("loc_4D2DA1: je loc_4D2DC5;");
    asm("loc_4D2DA3: mov 0x13(%esp),%al;");
    asm("loc_4D2DA7: test %al,%al;");
    asm("loc_4D2DA9: je loc_4D2DB0;");
    asm("loc_4D2DAB: cmpl $7,(%edi);");
    asm("loc_4D2DAE: je loc_4D2DC5;");
    asm("loc_4D2DB0: mov 0x18(%esp),%ecx;");
    asm("loc_4D2DB4: call _sub_53A9E0;");
    asm("loc_4D2DB9: mov %eax,0x41C(%ebp,%esi,4);");
    asm("loc_4D2DC0: jmp loc_4D389D;");
    asm("loc_4D2DC5: mov 0x18(%esp),%ecx;");
    asm("loc_4D2DC9: mov (%ecx),%eax;");
    asm("loc_4D2DCB: calll *0x150(%eax);");
    asm("loc_4D2DD1: mov %eax,%edi;");
    asm("loc_4D2DD3: test %edi,%edi;");
    asm("loc_4D2DD5: mov %edi,0x20(%esp);");
    asm("loc_4D2DD9: je loc_4D35AF;");
    asm("loc_4D2DDF: mov 0x4C(%edi),%ecx;");
    asm("loc_4D2DE2: and $0x503,%ecx;");
    asm("loc_4D2DE8: cmp $0x503,%ecx;");
    asm("loc_4D2DEE: jne loc_4D35AF;");
    asm("loc_4D2DF4: mov 0x18(%esp),%ecx;");
    asm("loc_4D2DF8: mov (%ecx),%edx;");
    asm("loc_4D2DFA: calll *0x150(%edx);");
    asm("loc_4D2E00: xor %esi,%esi;");
    asm("loc_4D2E02: cmp %esi,%eax;");
    asm("loc_4D2E04: je loc_4D2E15;");
    asm("loc_4D2E06: mov 0x4C(%eax),%ecx;");
    asm("loc_4D2E09: and $3,%ecx;");
    asm("loc_4D2E0C: cmp $3,%cl;");
    asm("loc_4D2E0F: jne loc_4D2E15;");
    asm("loc_4D2E11: mov %eax,%ebx;");
    asm("loc_4D2E13: jmp loc_4D2E17;");
    asm("loc_4D2E15: xor %ebx,%ebx;");
    asm("loc_4D2E17: mov 0x2BD(%edi),%al;");
    asm("loc_4D2E1D: test %al,%al;");
    asm("loc_4D2E1F: jne loc_4D3175;");
    asm("loc_4D2E25: mov 0x28(%esp),%edx;");
    asm("loc_4D2E29: mov 0x18(%edx),%al;");
    asm("loc_4D2E2C: test %al,%al;");
    asm("loc_4D2E2E: jne loc_4D3175;");
    asm("loc_4D2E34: mov 0x20(%esp),%eax;");
    asm("loc_4D2E38: mov 0x104(%eax),%eax;");
    asm("loc_4D2E3E: xor %edi,%edi;");
    asm("loc_4D2E40: push %edi;");
    asm("loc_4D2E41: lea 0x50(%esp),%ecx;");
    asm("loc_4D2E45: push %ecx;");
    asm("loc_4D2E46: lea 0x38(%esp),%edx;");
    asm("loc_4D2E4A: push %edx;");
    asm("loc_4D2E4B: xor %esi,%esi;");
    asm("loc_4D2E4D: mov %eax,0x3C(%esp);");
    asm("loc_4D2E51: calll *_import_5C6320;");
    asm("loc_4D2E57: add $0xC,%esp;");
    asm("loc_4D2E5A: test %eax,%eax;");
    asm("loc_4D2E5C: jne loc_4D2E6E;");
    asm("loc_4D2E5E: mov 0x4C(%esp),%eax;");
    asm("loc_4D2E62: push %eax;");
    asm("loc_4D2E63: calll *_import_5C64E8;");
    asm("loc_4D2E69: add $4,%esp;");
    asm("loc_4D2E6C: mov %eax,%esi;");
    asm("loc_4D2E6E: mov %edi,0x98(%esp);");
    asm("loc_4D2E75: mov %edi,0x9C(%esp);");
    asm("loc_4D2E7C: movb $0,0xA0(%esp);");
    asm("loc_4D2E84: movb $0,0xA1(%esp);");
    asm("loc_4D2E8C: movb $0,0xA2(%esp);");
    asm("loc_4D2E94: movb $0,0xA3(%esp);");
    asm("loc_4D2E9C: movb $0,0xA4(%esp);");
    asm("loc_4D2EA4: movb $0,0xA5(%esp);");
    asm("loc_4D2EAC: movb $0,0xA6(%esp);");
    asm("loc_4D2EB4: movb $0,0xA7(%esp);");
    asm("loc_4D2EBC: movb $0,0xA8(%esp);");
    asm("loc_4D2EC4: movb $0,0xA9(%esp);");
    asm("loc_4D2ECC: movb $0,0xAA(%esp);");
    asm("loc_4D2ED4: movb $0,0xAB(%esp);");
    asm("loc_4D2EDC: movb $0,0xAC(%esp);");
    asm("loc_4D2EE4: movb $0,0xAD(%esp);");
    asm("loc_4D2EEC: movl $2,0x6DE8(%esp);");
    asm("loc_4D2EF7: mov %edi,0x74(%esp);");
    asm("loc_4D2EFB: mov %edi,0x78(%esp);");
    asm("loc_4D2EFF: movb $0,0x7C(%esp);");
    asm("loc_4D2F04: movb $0,0x7D(%esp);");
    asm("loc_4D2F09: movb $0,0x7E(%esp);");
    asm("loc_4D2F0E: movb $0,0x7F(%esp);");
    asm("loc_4D2F13: movb $0,0x80(%esp);");
    asm("loc_4D2F1B: movb $0,0x81(%esp);");
    asm("loc_4D2F23: movb $0,0x82(%esp);");
    asm("loc_4D2F2B: movb $0,0x83(%esp);");
    asm("loc_4D2F33: movb $0,0x84(%esp);");
    asm("loc_4D2F3B: movb $0,0x85(%esp);");
    asm("loc_4D2F43: movb $0,0x86(%esp);");
    asm("loc_4D2F4B: movb $0,0x87(%esp);");
    asm("loc_4D2F53: movb $0,0x88(%esp);");
    asm("loc_4D2F5B: movb $0,0x89(%esp);");
    asm("loc_4D2F63: mov 0x20(%esp),%ecx;");
    asm("loc_4D2F67: mov 0x104(%ecx),%eax;");
    asm("loc_4D2F6D: lea 0x138(%esp),%edx;");
    asm("loc_4D2F74: push %edx;");
    asm("loc_4D2F75: mov %eax,0x34(%esp);");
    asm("loc_4D2F79: lea 0x78(%esp),%eax;");
    asm("loc_4D2F7D: push %eax;");
    asm("loc_4D2F7E: lea 0xA0(%esp),%ecx;");
    asm("loc_4D2F85: push %ecx;");
    asm("loc_4D2F86: lea 0x3C(%esp),%edx;");
    asm("loc_4D2F8A: push %edx;");
    asm("loc_4D2F8B: movb $3,0x6DF8(%esp);");
    asm("loc_4D2F93: calll *_import_5C60A0;");
    asm("loc_4D2F99: add $0x10,%esp;");
    asm("loc_4D2F9C: test %eax,%eax;");
    asm("loc_4D2F9E: jne loc_4D305D;");
    asm("loc_4D2FA4: cmp %edi,0x9C(%esp);");
    asm("loc_4D2FAB: jne loc_4D305D;");
    asm("loc_4D2FB1: cmp %edi,0x78(%esp);");
    asm("loc_4D2FB5: je loc_4D305D;");
    asm("loc_4D2FBB: cmp %edi,%esi;");
    asm("loc_4D2FBD: je loc_4D3027;");
    asm("loc_4D2FBF: cmp $0xFFFFFFFF,%esi;");
    asm("loc_4D2FC2: je loc_4D3027;");
    asm("loc_4D2FC4: cmp $0x30386,%esi;");
    asm("loc_4D2FCA: je loc_4D3027;");
    asm("loc_4D2FCC: cmp $0x303B8,%esi;");
    asm("loc_4D2FD2: je loc_4D3027;");
    asm("loc_4D2FD4: mov _data_67ECA8,%ecx;");
    asm("loc_4D2FDA: push $0x80;");
    asm("loc_4D2FDF: lea 0x4E4(%esp),%eax;");
    asm("loc_4D2FE6: push %eax;");
    asm("loc_4D2FE7: push %esi;");
    asm("loc_4D2FE8: push %ecx;");
    asm("loc_4D2FE9: call _sub_4347E0;");
    asm("loc_4D2FEE: add $0x10,%esp;");
    asm("loc_4D2FF1: test %eax,%eax;");
    asm("loc_4D2FF3: jne loc_4D2FFD;");
    asm("loc_4D2FF5: mov %di,0x4E0(%esp);");
    asm("loc_4D2FFD: mov _import_5C70AC,%esi;");
    asm("loc_4D3003: lea 0x4E0(%esp),%edx;");
    asm("loc_4D300A: push %edx;");
    asm("loc_4D300B: lea 0x140(%esp),%eax;");
    asm("loc_4D3012: push %eax;");
    asm("loc_4D3013: call *%esi;");
    asm("loc_4D3015: lea 0x144(%esp),%ecx;");
    asm("loc_4D301C: push $_data_5D01F4;");
    asm("loc_4D3021: push %ecx;");
    asm("loc_4D3022: call *%esi;");
    asm("loc_4D3024: add $0x10,%esp;");
    asm("loc_4D3027: push $0xFF;");
    asm("loc_4D302C: lea 0xBE4(%esp),%edx;");
    asm("loc_4D3033: push %edx;");
    asm("loc_4D3034: lea 0x7C(%esp),%ecx;");
    asm("loc_4D3038: call _sub_41C970;");
    asm("loc_4D303D: lea 0xBE0(%esp),%eax;");
    asm("loc_4D3044: push %eax;");
    asm("loc_4D3045: lea 0x140(%esp),%ecx;");
    asm("loc_4D304C: push %ecx;");
    asm("loc_4D304D: calll *_import_5C70AC;");
    asm("loc_4D3053: movb $1,0x1A(%esp);");
    asm("loc_4D3058: jmp loc_4D3152;");
    asm("loc_4D305D: cmp %edi,%esi;");
    asm("loc_4D305F: je loc_4D30EC;");
    asm("loc_4D3065: cmp $0xFFFFFFFF,%esi;");
    asm("loc_4D3068: je loc_4D30EC;");
    asm("loc_4D306E: cmp $0x30386,%esi;");
    asm("loc_4D3074: je loc_4D30EC;");
    asm("loc_4D3076: cmp $0x303B8,%esi;");
    asm("loc_4D307C: je loc_4D30EC;");
    asm("loc_4D307E: mov _data_67ECA8,%eax;");
    asm("loc_4D3083: push $0x80;");
    asm("loc_4D3088: lea 0x7E4(%esp),%edx;");
    asm("loc_4D308F: push %edx;");
    asm("loc_4D3090: push %esi;");
    asm("loc_4D3091: push %eax;");
    asm("loc_4D3092: call _sub_4347E0;");
    asm("loc_4D3097: add $0x10,%esp;");
    asm("loc_4D309A: test %eax,%eax;");
    asm("loc_4D309C: jne loc_4D30A6;");
    asm("loc_4D309E: mov %di,0x7E0(%esp);");
    asm("loc_4D30A6: lea 0x7E0(%esp),%ecx;");
    asm("loc_4D30AD: push %ecx;");
    asm("loc_4D30AE: lea 0x140(%esp),%edx;");
    asm("loc_4D30B5: push %edx;");
    asm("loc_4D30B6: calll *_import_5C70AC;");
    asm("loc_4D30BC: lea 0x144(%esp),%eax;");
    asm("loc_4D30C3: push %eax;");
    asm("loc_4D30C4: calll *_import_5C71C8;");
    asm("loc_4D30CA: add $0xC,%esp;");
    asm("loc_4D30CD: cmp $1,%eax;");
    asm("loc_4D30D0: jne loc_4D30E7;");
    asm("loc_4D30D2: cmpw $0x20,0x13C(%esp);");
    asm("loc_4D30DB: jne loc_4D30E7;");
    asm("loc_4D30DD: mov %di,0x13C(%esp);");
    asm("loc_4D30E5: jmp loc_4D30EC;");
    asm("loc_4D30E7: movb $1,0x12(%esp);");
    asm("loc_4D30EC: cmp %edi,%ebx;");
    asm("loc_4D30EE: je loc_4D3155;");
    asm("loc_4D30F0: mov 0x12(%esp),%al;");
    asm("loc_4D30F4: test %al,%al;");
    asm("loc_4D30F6: je loc_4D310E;");
    asm("loc_4D30F8: lea 0x13C(%esp),%ecx;");
    asm("loc_4D30FF: push $_data_5D01F4;");
    asm("loc_4D3104: push %ecx;");
    asm("loc_4D3105: calll *_import_5C70AC;");
    asm("loc_4D310B: add $8,%esp;");
    asm("loc_4D310E: push %ebx;");
    asm("loc_4D310F: call _sub_5472A0;");
    asm("loc_4D3114: push $0x80;");
    asm("loc_4D3119: lea 0x6E8(%esp),%edx;");
    asm("loc_4D3120: push %edx;");
    asm("loc_4D3121: push %eax;");
    asm("loc_4D3122: mov _data_67ECA8,%eax;");
    asm("loc_4D3127: push %eax;");
    asm("loc_4D3128: call _sub_4347E0;");
    asm("loc_4D312D: add $0x14,%esp;");
    asm("loc_4D3130: test %eax,%eax;");
    asm("loc_4D3132: jne loc_4D313C;");
    asm("loc_4D3134: mov %di,0x6E0(%esp);");
    asm("loc_4D313C: lea 0x6E0(%esp),%ecx;");
    asm("loc_4D3143: push %ecx;");
    asm("loc_4D3144: lea 0x140(%esp),%edx;");
    asm("loc_4D314B: push %edx;");
    asm("loc_4D314C: calll *_import_5C70AC;");
    asm("loc_4D3152: add $8,%esp;");
    asm("loc_4D3155: mov _import_5C6098,%esi;");
    asm("loc_4D315B: lea 0x74(%esp),%ecx;");
    asm("loc_4D315F: movb $2,0x6DE8(%esp);");
    asm("loc_4D3167: call *%esi;");
    asm("loc_4D3169: lea 0x98(%esp),%ecx;");
    asm("loc_4D3170: jmp loc_4D3414;");
    asm("loc_4D3175: mov 0x28(%esp),%eax;");
    asm("loc_4D3179: mov 0x18(%eax),%cl;");
    asm("loc_4D317C: test %cl,%cl;");
    asm("loc_4D317E: je loc_4D326A;");
    asm("loc_4D3184: mov 0x104(%edi),%eax;");
    asm("loc_4D318A: push %esi;");
    asm("loc_4D318B: lea 0xCC(%esp),%ecx;");
    asm("loc_4D3192: push %ecx;");
    asm("loc_4D3193: lea 0x38(%esp),%edx;");
    asm("loc_4D3197: push %edx;");
    asm("loc_4D3198: mov %eax,0x3C(%esp);");
    asm("loc_4D319C: calll *_import_5C6320;");
    asm("loc_4D31A2: add $0xC,%esp;");
    asm("loc_4D31A5: test %eax,%eax;");
    asm("loc_4D31A7: jne loc_4D326A;");
    asm("loc_4D31AD: mov 0xC8(%esp),%eax;");
    asm("loc_4D31B4: push %eax;");
    asm("loc_4D31B5: calll *_import_5C64E8;");
    asm("loc_4D31BB: add $4,%esp;");
    asm("loc_4D31BE: cmp %esi,%eax;");
    asm("loc_4D31C0: je loc_4D326A;");
    asm("loc_4D31C6: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4D31C9: je loc_4D326A;");
    asm("loc_4D31CF: cmp $0x30386,%eax;");
    asm("loc_4D31D4: je loc_4D326A;");
    asm("loc_4D31DA: cmp $0x303B8,%eax;");
    asm("loc_4D31DF: je loc_4D326A;");
    asm("loc_4D31E5: mov _data_67ECA8,%edx;");
    asm("loc_4D31EB: push $0x80;");
    asm("loc_4D31F0: lea 0x9E4(%esp),%ecx;");
    asm("loc_4D31F7: push %ecx;");
    asm("loc_4D31F8: push %eax;");
    asm("loc_4D31F9: push %edx;");
    asm("loc_4D31FA: call _sub_4347E0;");
    asm("loc_4D31FF: add $0x10,%esp;");
    asm("loc_4D3202: test %eax,%eax;");
    asm("loc_4D3204: jne loc_4D320E;");
    asm("loc_4D3206: mov %si,0x9E0(%esp);");
    asm("loc_4D320E: mov _import_5C70AC,%ebx;");
    asm("loc_4D3214: lea 0x9E0(%esp),%eax;");
    asm("loc_4D321B: push %eax;");
    asm("loc_4D321C: lea 0x140(%esp),%ecx;");
    asm("loc_4D3223: push %ecx;");
    asm("loc_4D3224: call *%ebx;");
    asm("loc_4D3226: lea 0x144(%esp),%edx;");
    asm("loc_4D322D: push %edx;");
    asm("loc_4D322E: calll *_import_5C71C8;");
    asm("loc_4D3234: add $0xC,%esp;");
    asm("loc_4D3237: cmp $1,%eax;");
    asm("loc_4D323A: jne loc_4D3251;");
    asm("loc_4D323C: cmpw $0x20,0x13C(%esp);");
    asm("loc_4D3245: jne loc_4D3251;");
    asm("loc_4D3247: mov %si,0x13C(%esp);");
    asm("loc_4D324F: jmp loc_4D3270;");
    asm("loc_4D3251: lea 0x13C(%esp),%eax;");
    asm("loc_4D3258: push $_data_5D01F4;");
    asm("loc_4D325D: push %eax;");
    asm("loc_4D325E: movb $1,0x1A(%esp);");
    asm("loc_4D3263: call *%ebx;");
    asm("loc_4D3265: add $8,%esp;");
    asm("loc_4D3268: jmp loc_4D3270;");
    asm("loc_4D326A: mov _import_5C70AC,%ebx;");
    asm("loc_4D3270: mov 0x24(%esp),%ecx;");
    asm("loc_4D3274: cmp %esi,%ecx;");
    asm("loc_4D3276: je loc_4D329D;");
    asm("loc_4D3278: mov (%ecx),%edx;");
    asm("loc_4D327A: calll *0x20(%edx);");
    asm("loc_4D327D: mov 0x28(%esp),%ecx;");
    asm("loc_4D3281: cmp %eax,0x10(%ecx);");
    asm("loc_4D3284: jne loc_4D329D;");
    asm("loc_4D3286: lea 0x13C(%esp),%edx;");
    asm("loc_4D328D: push $_data_6732F0;");
    asm("loc_4D3292: push %edx;");
    asm("loc_4D3293: call *%ebx;");
    asm("loc_4D3295: add $8,%esp;");
    asm("loc_4D3298: jmp loc_4D3431;");
    asm("loc_4D329D: mov %esi,0xD0(%esp);");
    asm("loc_4D32A4: mov %esi,0xD4(%esp);");
    asm("loc_4D32AB: movb $0,0xD8(%esp);");
    asm("loc_4D32B3: movb $0,0xD9(%esp);");
    asm("loc_4D32BB: movb $0,0xDA(%esp);");
    asm("loc_4D32C3: movb $0,0xDB(%esp);");
    asm("loc_4D32CB: movb $0,0xDC(%esp);");
    asm("loc_4D32D3: movb $0,0xDD(%esp);");
    asm("loc_4D32DB: movb $0,0xDE(%esp);");
    asm("loc_4D32E3: movb $0,0xDF(%esp);");
    asm("loc_4D32EB: movb $0,0xE0(%esp);");
    asm("loc_4D32F3: movb $0,0xE1(%esp);");
    asm("loc_4D32FB: movb $0,0xE2(%esp);");
    asm("loc_4D3303: movb $0,0xE3(%esp);");
    asm("loc_4D330B: movb $0,0xE4(%esp);");
    asm("loc_4D3313: movb $0,0xE5(%esp);");
    asm("loc_4D331B: mov %esi,0x6DE8(%esp);");
    asm("loc_4D3322: mov %esi,0xB0(%esp);");
    asm("loc_4D3329: mov %esi,0xB4(%esp);");
    asm("loc_4D3330: movb $0,0xB8(%esp);");
    asm("loc_4D3338: movb $0,0xB9(%esp);");
    asm("loc_4D3340: movb $0,0xBA(%esp);");
    asm("loc_4D3348: movb $0,0xBB(%esp);");
    asm("loc_4D3350: movb $0,0xBC(%esp);");
    asm("loc_4D3358: movb $0,0xBD(%esp);");
    asm("loc_4D3360: movb $0,0xBE(%esp);");
    asm("loc_4D3368: movb $0,0xBF(%esp);");
    asm("loc_4D3370: movb $0,0xC0(%esp);");
    asm("loc_4D3378: movb $0,0xC1(%esp);");
    asm("loc_4D3380: movb $0,0xC2(%esp);");
    asm("loc_4D3388: movb $0,0xC3(%esp);");
    asm("loc_4D3390: movb $0,0xC4(%esp);");
    asm("loc_4D3398: movb $0,0xC5(%esp);");
    asm("loc_4D33A0: mov 0x104(%edi),%eax;");
    asm("loc_4D33A6: mov %eax,0x30(%esp);");
    asm("loc_4D33AA: lea 0xCC(%esp),%eax;");
    asm("loc_4D33B1: push %eax;");
    asm("loc_4D33B2: lea 0xB4(%esp),%ecx;");
    asm("loc_4D33B9: push %ecx;");
    asm("loc_4D33BA: lea 0xD8(%esp),%edx;");
    asm("loc_4D33C1: push %edx;");
    asm("loc_4D33C2: lea 0x3C(%esp),%eax;");
    asm("loc_4D33C6: push %eax;");
    asm("loc_4D33C7: movb $1,0x6DF8(%esp);");
    asm("loc_4D33CF: calll *_import_5C60A0;");
    asm("loc_4D33D5: add $0x10,%esp;");
    asm("loc_4D33D8: test %eax,%eax;");
    asm("loc_4D33DA: jne loc_4D33F6;");
    asm("loc_4D33DC: mov 0xCC(%esp),%ecx;");
    asm("loc_4D33E3: push %ecx;");
    asm("loc_4D33E4: lea 0x140(%esp),%edx;");
    asm("loc_4D33EB: push %edx;");
    asm("loc_4D33EC: call *%ebx;");
    asm("loc_4D33EE: add $8,%esp;");
    asm("loc_4D33F1: movb $1,0x12(%esp);");
    asm("loc_4D33F6: mov _import_5C6098,%esi;");
    asm("loc_4D33FC: lea 0xB0(%esp),%ecx;");
    asm("loc_4D3403: movb $0,0x6DE8(%esp);");
    asm("loc_4D340B: call *%esi;");
    asm("loc_4D340D: lea 0xD0(%esp),%ecx;");
    asm("loc_4D3414: movl $0xFFFFFFFF,0x6DE8(%esp);");
    asm("loc_4D341F: call *%esi;");
    asm("loc_4D3421: mov 0x12(%esp),%al;");
    asm("loc_4D3425: test %al,%al;");
    asm("loc_4D3427: je loc_4D35AF;");
    asm("loc_4D342D: mov 0x20(%esp),%edi;");
    asm("loc_4D3431: mov 0x18(%esp),%esi;");
    asm("loc_4D3435: push $1;");
    asm("loc_4D3437: mov %esi,%ecx;");
    asm("loc_4D3439: call _sub_53AA10;");
    asm("loc_4D343E: mov %esi,%ecx;");
    asm("loc_4D3440: call _sub_53A9E0;");
    asm("loc_4D3445: mov %eax,%esi;");
    asm("loc_4D3447: mov 0x2BD(%edi),%al;");
    asm("loc_4D344D: test %al,%al;");
    asm("loc_4D344F: mov 0x1C(%esi),%ecx;");
    asm("loc_4D3452: je loc_4D348E;");
    asm("loc_4D3454: mov 0x418(%ebp),%eax;");
    asm("loc_4D345A: cmp %eax,%ecx;");
    asm("loc_4D345C: je loc_4D34C9;");
    asm("loc_4D345E: xor %ebx,%ebx;");
    asm("loc_4D3460: mov %eax,0x1C(%esi);");
    asm("loc_4D3463: xor %edi,%edi;");
    asm("loc_4D3465: mov 0x10(%esi),%ecx;");
    asm("loc_4D3468: cmp %ebx,%ecx;");
    asm("loc_4D346A: je loc_4D3489;");
    asm("loc_4D346C: mov 0x14(%esi),%eax;");
    asm("loc_4D346F: sub %ecx,%eax;");
    asm("loc_4D3471: sar $3,%eax;");
    asm("loc_4D3474: cmp %eax,%edi;");
    asm("loc_4D3476: jae loc_4D3489;");
    asm("loc_4D3478: mov %ecx,%eax;");
    asm("loc_4D347A: mov (%eax,%edi,8),%ecx;");
    asm("loc_4D347D: mov 0x1C(%esi),%eax;");
    asm("loc_4D3480: mov (%ecx),%edx;");
    asm("loc_4D3482: push %eax;");
    asm("loc_4D3483: calll *8(%edx);");
    asm("loc_4D3486: inc %edi;");
    asm("loc_4D3487: jmp loc_4D3465;");
    asm("loc_4D3489: mov %ebx,0x28(%esi);");
    asm("loc_4D348C: jmp loc_4D34CB;");
    asm("loc_4D348E: mov 0x414(%ebp),%eax;");
    asm("loc_4D3494: cmp %eax,%ecx;");
    asm("loc_4D3496: je loc_4D34C9;");
    asm("loc_4D3498: mov %eax,0x1C(%esi);");
    asm("loc_4D349B: xor %edi,%edi;");
    asm("loc_4D349D: lea (%ecx),%ecx;");
    asm("loc_4D34A0: mov 0x10(%esi),%ecx;");
    asm("loc_4D34A3: test %ecx,%ecx;");
    asm("loc_4D34A5: je loc_4D34C2;");
    asm("loc_4D34A7: mov 0x14(%esi),%eax;");
    asm("loc_4D34AA: sub %ecx,%eax;");
    asm("loc_4D34AC: sar $3,%eax;");
    asm("loc_4D34AF: cmp %eax,%edi;");
    asm("loc_4D34B1: jae loc_4D34C2;");
    asm("loc_4D34B3: mov (%ecx,%edi,8),%ecx;");
    asm("loc_4D34B6: mov 0x1C(%esi),%eax;");
    asm("loc_4D34B9: mov (%ecx),%edx;");
    asm("loc_4D34BB: push %eax;");
    asm("loc_4D34BC: calll *8(%edx);");
    asm("loc_4D34BF: inc %edi;");
    asm("loc_4D34C0: jmp loc_4D34A0;");
    asm("loc_4D34C2: movl $0,0x28(%esi);");
    asm("loc_4D34C9: xor %ebx,%ebx;");
    asm("loc_4D34CB: mov _data_5D795C,%ecx;");
    asm("loc_4D34D1: push $0xBF800000;");
    asm("loc_4D34D6: push %ecx;");
    asm("loc_4D34D7: mov %esi,%ecx;");
    asm("loc_4D34D9: call _sub_4145D0;");
    asm("loc_4D34DE: mov 0x1C(%esi),%edi;");
    asm("loc_4D34E1: mov (%edi),%edx;");
    asm("loc_4D34E3: push $0xFFFFFFFF;");
    asm("loc_4D34E5: lea 0x140(%esp),%eax;");
    asm("loc_4D34EC: push %eax;");
    asm("loc_4D34ED: lea 0xFC(%esp),%ecx;");
    asm("loc_4D34F4: push %ecx;");
    asm("loc_4D34F5: mov %edi,%ecx;");
    asm("loc_4D34F7: calll *0x20(%edx);");
    asm("loc_4D34FA: fildl _data_610850;");
    asm("loc_4D3500: mov 0xF4(%esp),%edx;");
    asm("loc_4D3507: mov %edx,0x11C(%esp);");
    asm("loc_4D350E: fmuls _data_612430;");
    asm("loc_4D3514: mov %ebx,0x120(%esp);");
    asm("loc_4D351B: fmuls _data_5C8D30;");
    asm("loc_4D3521: fstps 0x20(%esp);");
    asm("loc_4D3525: fildll 0x11C(%esp);");
    asm("loc_4D352C: fcomps 0x20(%esp);");
    asm("loc_4D3530: fnstsw %ax;");
    asm("loc_4D3532: test $0x41,%ah;");
    asm("loc_4D3535: jne loc_4D3879;");
    asm("loc_4D353B: nop;");
    asm("loc_4D353C: lea (%esp),%esp;");
    asm("loc_4D3540: lea 0x13C(%esp),%eax;");
    asm("loc_4D3547: push %eax;");
    asm("loc_4D3548: calll *_import_5C71C8;");
    asm("loc_4D354E: add $4,%esp;");
    asm("loc_4D3551: dec %eax;");
    asm("loc_4D3552: cmp %ebx,%eax;");
    asm("loc_4D3554: jle loc_4D3879;");
    asm("loc_4D355A: push %eax;");
    asm("loc_4D355B: mov %bx,0x140(%esp,%eax,2);");
    asm("loc_4D3563: mov (%edi),%edx;");
    asm("loc_4D3565: lea 0x140(%esp),%eax;");
    asm("loc_4D356C: push %eax;");
    asm("loc_4D356D: lea 0x48(%esp),%ecx;");
    asm("loc_4D3571: push %ecx;");
    asm("loc_4D3572: mov %edi,%ecx;");
    asm("loc_4D3574: calll *0x20(%edx);");
    asm("loc_4D3577: mov (%eax),%ecx;");
    asm("loc_4D3579: mov %ecx,0x104(%esp);");
    asm("loc_4D3580: mov %ebx,0x108(%esp);");
    asm("loc_4D3587: fildll 0x104(%esp);");
    asm("loc_4D358E: mov %ecx,0xF4(%esp);");
    asm("loc_4D3595: mov 4(%eax),%edx;");
    asm("loc_4D3598: mov %edx,0xF8(%esp);");
    asm("loc_4D359F: fcomps 0x20(%esp);");
    asm("loc_4D35A3: fnstsw %ax;");
    asm("loc_4D35A5: test $0x41,%ah;");
    asm("loc_4D35A8: je loc_4D3540;");
    asm("loc_4D35AA: jmp loc_4D3879;");
    asm("loc_4D35AF: mov 0x28(%esp),%edi;");
    asm("loc_4D35B3: mov (%edi),%eax;");
    asm("loc_4D35B5: xor %ebx,%ebx;");
    asm("loc_4D35B7: cmp %ebx,%eax;");
    asm("loc_4D35B9: je loc_4D35FA;");
    asm("loc_4D35BB: cmp $8,%eax;");
    asm("loc_4D35BE: je loc_4D35FA;");
    asm("loc_4D35C0: cmp $9,%eax;");
    asm("loc_4D35C3: je loc_4D35FA;");
    asm("loc_4D35C5: mov 0x18(%esp),%ecx;");
    asm("loc_4D35C9: mov (%ecx),%edx;");
    asm("loc_4D35CB: calll *0x150(%edx);");
    asm("loc_4D35D1: mov %eax,%esi;");
    asm("loc_4D35D3: cmp %ebx,%esi;");
    asm("loc_4D35D5: je loc_4D3895;");
    asm("loc_4D35DB: mov 0x4C(%esi),%eax;");
    asm("loc_4D35DE: and $3,%eax;");
    asm("loc_4D35E1: cmp $3,%al;");
    asm("loc_4D35E3: jne loc_4D3895;");
    asm("loc_4D35E9: cmpl $0xA,(%edi);");
    asm("loc_4D35EC: jne loc_4D3609;");
    asm("loc_4D35EE: testl $0x7F0000,0xE0(%esi);");
    asm("loc_4D35F8: je loc_4D3609;");
    asm("loc_4D35FA: mov 0x14(%esp),%ecx;");
    asm("loc_4D35FE: mov (%ecx),%edx;");
    asm("loc_4D3600: mov %edx,0x14(%esp);");
    asm("loc_4D3604: jmp loc_4D3CB8;");
    asm("loc_4D3609: push %esi;");
    asm("loc_4D360A: call _sub_4D4C70;");
    asm("loc_4D360F: add $4,%esp;");
    asm("loc_4D3612: test %al,%al;");
    asm("loc_4D3614: je loc_4D365A;");
    asm("loc_4D3616: push %esi;");
    asm("loc_4D3617: call _sub_4D4D50;");
    asm("loc_4D361C: mov _data_67ECA8,%edx;");
    asm("loc_4D3622: push $0x80;");
    asm("loc_4D3627: lea 0x8E8(%esp),%ecx;");
    asm("loc_4D362E: push %ecx;");
    asm("loc_4D362F: push %eax;");
    asm("loc_4D3630: push %edx;");
    asm("loc_4D3631: call _sub_4347E0;");
    asm("loc_4D3636: add $0x14,%esp;");
    asm("loc_4D3639: test %eax,%eax;");
    asm("loc_4D363B: jne loc_4D3645;");
    asm("loc_4D363D: mov %bx,0x8E0(%esp);");
    asm("loc_4D3645: lea 0x8E0(%esp),%eax;");
    asm("loc_4D364C: push %eax;");
    asm("loc_4D364D: lea 0x140(%esp),%ecx;");
    asm("loc_4D3654: push %ecx;");
    asm("loc_4D3655: jmp loc_4D38AA;");
    asm("loc_4D365A: mov 0xE0(%esi),%al;");
    asm("loc_4D3660: test %al,%al;");
    asm("loc_4D3662: jns loc_4D3713;");
    asm("loc_4D3668: mov %ebx,0x6C(%esp);");
    asm("loc_4D366C: mov %ebx,0x70(%esp);");
    asm("loc_4D3670: push %ebx;");
    asm("loc_4D3671: push $1;");
    asm("loc_4D3673: lea 0x74(%esp),%edx;");
    asm("loc_4D3677: push %edx;");
    asm("loc_4D3678: push %esi;");
    asm("loc_4D3679: movl $4,0x6DF8(%esp);");
    asm("loc_4D3684: call _sub_4E8100;");
    asm("loc_4D3689: add $0x10,%esp;");
    asm("loc_4D368C: test %al,%al;");
    asm("loc_4D368E: je loc_4D36A5;");
    asm("loc_4D3690: mov 0x6C(%esp),%eax;");
    asm("loc_4D3694: push %eax;");
    asm("loc_4D3695: lea 0x140(%esp),%ecx;");
    asm("loc_4D369C: push %ecx;");
    asm("loc_4D369D: calll *_import_5C70B4;");
    asm("loc_4D36A3: jmp loc_4D36E9;");
    asm("loc_4D36A5: push %esi;");
    asm("loc_4D36A6: call _sub_5472A0;");
    asm("loc_4D36AB: push $0x80;");
    asm("loc_4D36B0: lea 0x5E8(%esp),%edx;");
    asm("loc_4D36B7: push %edx;");
    asm("loc_4D36B8: push %eax;");
    asm("loc_4D36B9: mov _data_67ECA8,%eax;");
    asm("loc_4D36BE: push %eax;");
    asm("loc_4D36BF: call _sub_4347E0;");
    asm("loc_4D36C4: add $0x14,%esp;");
    asm("loc_4D36C7: test %eax,%eax;");
    asm("loc_4D36C9: jne loc_4D36D3;");
    asm("loc_4D36CB: mov %bx,0x5E0(%esp);");
    asm("loc_4D36D3: lea 0x5E0(%esp),%ecx;");
    asm("loc_4D36DA: push %ecx;");
    asm("loc_4D36DB: lea 0x140(%esp),%edx;");
    asm("loc_4D36E2: push %edx;");
    asm("loc_4D36E3: calll *_import_5C70AC;");
    asm("loc_4D36E9: mov 0x74(%esp),%eax;");
    asm("loc_4D36ED: add $8,%esp;");
    asm("loc_4D36F0: cmp %ebx,%eax;");
    asm("loc_4D36F2: movl $0xFFFFFFFF,0x6DE8(%esp);");
    asm("loc_4D36FD: je loc_4D375B;");
    asm("loc_4D36FF: push %eax;");
    asm("loc_4D3700: calll *_import_5C71D8;");
    asm("loc_4D3706: add $4,%esp;");
    asm("loc_4D3709: mov %ebx,0x6C(%esp);");
    asm("loc_4D370D: mov %ebx,0x70(%esp);");
    asm("loc_4D3711: jmp loc_4D375B;");
    asm("loc_4D3713: push %esi;");
    asm("loc_4D3714: call _sub_5472A0;");
    asm("loc_4D3719: mov _data_67ECA8,%edx;");
    asm("loc_4D371F: push $0x80;");
    asm("loc_4D3724: lea 0x368(%esp),%ecx;");
    asm("loc_4D372B: push %ecx;");
    asm("loc_4D372C: push %eax;");
    asm("loc_4D372D: push %edx;");
    asm("loc_4D372E: call _sub_4347E0;");
    asm("loc_4D3733: add $0x14,%esp;");
    asm("loc_4D3736: test %eax,%eax;");
    asm("loc_4D3738: jne loc_4D3742;");
    asm("loc_4D373A: mov %bx,0x360(%esp);");
    asm("loc_4D3742: lea 0x360(%esp),%eax;");
    asm("loc_4D3749: push %eax;");
    asm("loc_4D374A: lea 0x140(%esp),%ecx;");
    asm("loc_4D3751: push %ecx;");
    asm("loc_4D3752: calll *_import_5C70AC;");
    asm("loc_4D3758: add $8,%esp;");
    asm("loc_4D375B: mov 0x18(%esp),%esi;");
    asm("loc_4D375F: push $1;");
    asm("loc_4D3761: mov %esi,%ecx;");
    asm("loc_4D3763: call _sub_53AA10;");
    asm("loc_4D3768: mov %esi,%ecx;");
    asm("loc_4D376A: call _sub_53A9E0;");
    asm("loc_4D376F: mov %eax,%esi;");
    asm("loc_4D3771: mov 0x414(%ebp),%eax;");
    asm("loc_4D3777: cmp %eax,0x1C(%esi);");
    asm("loc_4D377A: je loc_4D37A8;");
    asm("loc_4D377C: mov %eax,0x1C(%esi);");
    asm("loc_4D377F: xor %edi,%edi;");
    asm("loc_4D3781: mov 0x10(%esi),%ecx;");
    asm("loc_4D3784: cmp %ebx,%ecx;");
    asm("loc_4D3786: je loc_4D37A5;");
    asm("loc_4D3788: mov 0x14(%esi),%eax;");
    asm("loc_4D378B: sub %ecx,%eax;");
    asm("loc_4D378D: sar $3,%eax;");
    asm("loc_4D3790: cmp %eax,%edi;");
    asm("loc_4D3792: jae loc_4D37A5;");
    asm("loc_4D3794: mov %ecx,%edx;");
    asm("loc_4D3796: mov (%edx,%edi,8),%ecx;");
    asm("loc_4D3799: mov 0x1C(%esi),%edx;");
    asm("loc_4D379C: mov (%ecx),%eax;");
    asm("loc_4D379E: push %edx;");
    asm("loc_4D379F: calll *8(%eax);");
    asm("loc_4D37A2: inc %edi;");
    asm("loc_4D37A3: jmp loc_4D3781;");
    asm("loc_4D37A5: mov %ebx,0x28(%esi);");
    asm("loc_4D37A8: mov _data_5D795C,%eax;");
    asm("loc_4D37AD: push $0xBF800000;");
    asm("loc_4D37B2: push %eax;");
    asm("loc_4D37B3: mov %esi,%ecx;");
    asm("loc_4D37B5: call _sub_4145D0;");
    asm("loc_4D37BA: mov 0x1C(%esi),%edi;");
    asm("loc_4D37BD: mov (%edi),%edx;");
    asm("loc_4D37BF: push $0xFFFFFFFF;");
    asm("loc_4D37C1: lea 0x140(%esp),%eax;");
    asm("loc_4D37C8: push %eax;");
    asm("loc_4D37C9: lea 0x104(%esp),%ecx;");
    asm("loc_4D37D0: push %ecx;");
    asm("loc_4D37D1: mov %edi,%ecx;");
    asm("loc_4D37D3: calll *0x20(%edx);");
    asm("loc_4D37D6: fildl _data_610850;");
    asm("loc_4D37DC: mov 0xFC(%esp),%edx;");
    asm("loc_4D37E3: mov %edx,0x114(%esp);");
    asm("loc_4D37EA: fmuls _data_612430;");
    asm("loc_4D37F0: mov %ebx,0x118(%esp);");
    asm("loc_4D37F7: fmuls _data_5C8D30;");
    asm("loc_4D37FD: fstps 0x20(%esp);");
    asm("loc_4D3801: fildll 0x114(%esp);");
    asm("loc_4D3808: fcomps 0x20(%esp);");
    asm("loc_4D380C: fnstsw %ax;");
    asm("loc_4D380E: test $0x41,%ah;");
    asm("loc_4D3811: jne loc_4D3879;");
    asm("loc_4D3813: lea 0x13C(%esp),%eax;");
    asm("loc_4D381A: push %eax;");
    asm("loc_4D381B: calll *_import_5C71C8;");
    asm("loc_4D3821: add $4,%esp;");
    asm("loc_4D3824: dec %eax;");
    asm("loc_4D3825: cmp %ebx,%eax;");
    asm("loc_4D3827: jle loc_4D3879;");
    asm("loc_4D3829: push %eax;");
    asm("loc_4D382A: mov %bx,0x140(%esp,%eax,2);");
    asm("loc_4D3832: mov (%edi),%edx;");
    asm("loc_4D3834: lea 0x140(%esp),%eax;");
    asm("loc_4D383B: push %eax;");
    asm("loc_4D383C: lea 0x5C(%esp),%ecx;");
    asm("loc_4D3840: push %ecx;");
    asm("loc_4D3841: mov %edi,%ecx;");
    asm("loc_4D3843: calll *0x20(%edx);");
    asm("loc_4D3846: mov (%eax),%ecx;");
    asm("loc_4D3848: mov %ecx,0x10C(%esp);");
    asm("loc_4D384F: mov %ebx,0x110(%esp);");
    asm("loc_4D3856: fildll 0x10C(%esp);");
    asm("loc_4D385D: mov %ecx,0xFC(%esp);");
    asm("loc_4D3864: mov 4(%eax),%edx;");
    asm("loc_4D3867: mov %edx,0x100(%esp);");
    asm("loc_4D386E: fcomps 0x20(%esp);");
    asm("loc_4D3872: fnstsw %ax;");
    asm("loc_4D3874: test $0x41,%ah;");
    asm("loc_4D3877: je loc_4D3813;");
    asm("loc_4D3879: lea 0x13C(%esp),%eax;");
    asm("loc_4D3880: push %eax;");
    asm("loc_4D3881: mov %esi,%ecx;");
    asm("loc_4D3883: call _sub_415860;");
    asm("loc_4D3888: mov 0x1C(%esp),%ebx;");
    asm("loc_4D388C: mov %esi,0x41C(%ebp,%ebx,4);");
    asm("loc_4D3893: jmp loc_4D38B7;");
    asm("loc_4D3895: mov 0x12(%esp),%al;");
    asm("loc_4D3899: test %al,%al;");
    asm("loc_4D389B: jne loc_4D38B3;");
    asm("loc_4D389D: push $_data_5D0214;");
    asm("loc_4D38A2: lea 0x140(%esp),%eax;");
    asm("loc_4D38A9: push %eax;");
    asm("loc_4D38AA: calll *_import_5C70AC;");
    asm("loc_4D38B0: add $8,%esp;");
    asm("loc_4D38B3: mov 0x1C(%esp),%ebx;");
    asm("loc_4D38B7: mov 0x28(%esp),%ecx;");
    asm("loc_4D38BB: mov (%ecx),%eax;");
    asm("loc_4D38BD: cmp $0xE,%eax;");
    asm("loc_4D38C0: mov 0x3B4(%ebp,%ebx,4),%esi;");
    asm("loc_4D38C7: je loc_4D3907;");
    asm("loc_4D38C9: cmp $0xF,%eax;");
    asm("loc_4D38CC: je loc_4D3907;");
    asm("loc_4D38CE: mov 0x41C(%ebp,%ebx,4),%eax;");
    asm("loc_4D38D5: test %eax,%eax;");
    asm("loc_4D38D7: jne loc_4D38E7;");
    asm("loc_4D38D9: mov 0x414(%ebp),%edx;");
    asm("loc_4D38DF: push %edx;");
    asm("loc_4D38E0: mov %esi,%ecx;");
    asm("loc_4D38E2: call _sub_58A740;");
    asm("loc_4D38E7: lea 0x2D4(%esi),%ecx;");
    asm("loc_4D38ED: mov (%ecx),%edi;");
    asm("loc_4D38EF: lea 0xA8(%esi),%eax;");
    asm("loc_4D38F5: mov %eax,%edx;");
    asm("loc_4D38F7: mov %edi,(%edx);");
    asm("loc_4D38F9: mov 4(%ecx),%edi;");
    asm("loc_4D38FC: mov 8(%ecx),%ecx;");
    asm("loc_4D38FF: mov %edi,4(%edx);");
    asm("loc_4D3902: mov %ecx,8(%edx);");
    asm("loc_4D3905: jmp loc_4D3950;");
    asm("loc_4D3907: mov 0x41C(%ebp,%ebx,4),%eax;");
    asm("loc_4D390E: test %eax,%eax;");
    asm("loc_4D3910: jne loc_4D3920;");
    asm("loc_4D3912: mov 0x418(%ebp),%eax;");
    asm("loc_4D3918: push %eax;");
    asm("loc_4D3919: mov %esi,%ecx;");
    asm("loc_4D391B: call _sub_58A740;");
    asm("loc_4D3920: lea 0x2D4(%esi),%ecx;");
    asm("loc_4D3926: mov (%ecx),%edi;");
    asm("loc_4D3928: lea 0xA8(%esi),%eax;");
    asm("loc_4D392E: mov %eax,%edx;");
    asm("loc_4D3930: mov %edi,(%edx);");
    asm("loc_4D3932: mov 4(%ecx),%edi;");
    asm("loc_4D3935: mov 8(%ecx),%ecx;");
    asm("loc_4D3938: mov %edi,4(%edx);");
    asm("loc_4D393B: mov %ecx,8(%edx);");
    asm("loc_4D393E: flds 0xAC(%esi);");
    asm("loc_4D3944: fsubl _data_5D7BF0;");
    asm("loc_4D394A: fstps 0xAC(%esi);");
    asm("loc_4D3950: mov (%esi),%edx;");
    asm("loc_4D3952: push $0;");
    asm("loc_4D3954: push %eax;");
    asm("loc_4D3955: mov %esi,%ecx;");
    asm("loc_4D3957: push $6;");
    asm("loc_4D3959: calll *0xA8(%edx);");
    asm("loc_4D395F: mov 0x41C(%ebp,%ebx,4),%eax;");
    asm("loc_4D3966: test %eax,%eax;");
    asm("loc_4D3968: jne loc_4D3985;");
    asm("loc_4D396A: mov 0x3B4(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3971: mov (%ecx),%eax;");
    asm("loc_4D3973: push $0;");
    asm("loc_4D3975: lea 0x140(%esp),%edx;");
    asm("loc_4D397C: push %edx;");
    asm("loc_4D397D: push $0x1D;");
    asm("loc_4D397F: calll *0xA8(%eax);");
    asm("loc_4D3985: mov 0x400(%ebp),%eax;");
    asm("loc_4D398B: mov 0x50(%esp),%ecx;");
    asm("loc_4D398F: mov 0x28(%esp),%esi;");
    asm("loc_4D3993: cmp $4,%eax;");
    asm("loc_4D3996: setne %al;");
    asm("loc_4D3999: push %eax;");
    asm("loc_4D399A: push %ecx;");
    asm("loc_4D399B: push %esi;");
    asm("loc_4D399C: call _sub_4D4120;");
    asm("loc_4D39A1: mov 0x24(%esp),%ecx;");
    asm("loc_4D39A5: mov %al,0x1E(%esp);");
    asm("loc_4D39A9: mov (%esi),%eax;");
    asm("loc_4D39AB: mov 0x330(%ebp,%eax,4),%edx;");
    asm("loc_4D39B2: mov _off_612438(,%eax,4),%edi;");
    asm("loc_4D39B9: add $0xC,%esp;");
    asm("loc_4D39BC: test %ecx,%ecx;");
    asm("loc_4D39BE: mov %edx,0x20(%esp);");
    asm("loc_4D39C2: je loc_4D39E5;");
    asm("loc_4D39C4: mov (%ecx),%eax;");
    asm("loc_4D39C6: calll *0x20(%eax);");
    asm("loc_4D39C9: push %eax;");
    asm("loc_4D39CA: call _sub_4CC880;");
    asm("loc_4D39CF: add $4,%esp;");
    asm("loc_4D39D2: test %al,%al;");
    asm("loc_4D39D4: je loc_4D39E5;");
    asm("loc_4D39D6: mov 0x370(%ebp),%ecx;");
    asm("loc_4D39DC: mov $_data_5D7A88,%edi;");
    asm("loc_4D39E1: mov %ecx,0x20(%esp);");
    asm("loc_4D39E5: mov 0x374(%ebp,%ebx,4),%ecx;");
    asm("loc_4D39EC: mov (%ecx),%edx;");
    asm("loc_4D39EE: push $0x100;");
    asm("loc_4D39F3: lea 0xAE4(%esp),%eax;");
    asm("loc_4D39FA: push %eax;");
    asm("loc_4D39FB: push $0xB;");
    asm("loc_4D39FD: calll *0xA8(%edx);");
    asm("loc_4D3A03: mov %edi,%esi;");
    asm("loc_4D3A05: lea 0xAE0(%esp),%eax;");
    asm("loc_4D3A0C: lea (%esp),%esp;");
    asm("loc_4D3A10: mov (%eax),%dl;");
    asm("loc_4D3A12: mov %dl,%cl;");
    asm("loc_4D3A14: cmp (%esi),%dl;");
    asm("loc_4D3A16: jne loc_4D3A34;");
    asm("loc_4D3A18: test %cl,%cl;");
    asm("loc_4D3A1A: je loc_4D3A30;");
    asm("loc_4D3A1C: mov 1(%eax),%dl;");
    asm("loc_4D3A1F: mov %dl,%cl;");
    asm("loc_4D3A21: cmp 1(%esi),%dl;");
    asm("loc_4D3A24: jne loc_4D3A34;");
    asm("loc_4D3A26: add $2,%eax;");
    asm("loc_4D3A29: add $2,%esi;");
    asm("loc_4D3A2C: test %cl,%cl;");
    asm("loc_4D3A2E: jne loc_4D3A10;");
    asm("loc_4D3A30: xor %eax,%eax;");
    asm("loc_4D3A32: jmp loc_4D3A39;");
    asm("loc_4D3A34: sbb %eax,%eax;");
    asm("loc_4D3A36: sbb $0xFFFFFFFF,%eax;");
    asm("loc_4D3A39: test %eax,%eax;");
    asm("loc_4D3A3B: je loc_4D3A62;");
    asm("loc_4D3A3D: mov 0x374(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3A44: mov (%ecx),%eax;");
    asm("loc_4D3A46: push $0;");
    asm("loc_4D3A48: push %edi;");
    asm("loc_4D3A49: push $4;");
    asm("loc_4D3A4B: calll *0xA8(%eax);");
    asm("loc_4D3A51: mov 0x374(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3A58: mov 0x20(%esp),%edx;");
    asm("loc_4D3A5C: mov %edx,0x338(%ecx);");
    asm("loc_4D3A62: mov _data_679BB0,%eax;");
    asm("loc_4D3A67: mov 0x28(%esp),%ecx;");
    asm("loc_4D3A6B: mov %eax,0x2C(%esp);");
    asm("loc_4D3A6F: mov (%ecx),%eax;");
    asm("loc_4D3A71: cmp $4,%eax;");
    asm("loc_4D3A74: je loc_4D3AA7;");
    asm("loc_4D3A76: cmp $3,%eax;");
    asm("loc_4D3A79: je loc_4D3AA7;");
    asm("loc_4D3A7B: mov 4(%ecx),%eax;");
    asm("loc_4D3A7E: test %eax,%eax;");
    asm("loc_4D3A80: je loc_4D3A87;");
    asm("loc_4D3A82: add $0xFFFFFFF8,%eax;");
    asm("loc_4D3A85: jmp loc_4D3A89;");
    asm("loc_4D3A87: xor %eax,%eax;");
    asm("loc_4D3A89: mov 0x24(%esp),%ecx;");
    asm("loc_4D3A8D: push %eax;");
    asm("loc_4D3A8E: push %ecx;");
    asm("loc_4D3A8F: lea 0x138(%esp),%edx;");
    asm("loc_4D3A96: push %edx;");
    asm("loc_4D3A97: call _sub_45A4E0;");
    asm("loc_4D3A9C: mov (%eax),%eax;");
    asm("loc_4D3A9E: add $0xC,%esp;");
    asm("loc_4D3AA1: mov %eax,0x2C(%esp);");
    asm("loc_4D3AA5: jmp loc_4D3AB1;");
    asm("loc_4D3AA7: mov _data_679B80,%ecx;");
    asm("loc_4D3AAD: mov %ecx,0x2C(%esp);");
    asm("loc_4D3AB1: mov 0x12(%esp),%al;");
    asm("loc_4D3AB5: test %al,%al;");
    asm("loc_4D3AB7: je loc_4D3AC4;");
    asm("loc_4D3AB9: mov _data_679BA4,%edx;");
    asm("loc_4D3ABF: jmp loc_4D3C37;");
    asm("loc_4D3AC4: fildl _data_616840;");
    asm("loc_4D3ACA: mov $_data_67DBFC,%esi;");
    asm("loc_4D3ACF: lea 0x33C(%esp),%edi;");
    asm("loc_4D3AD6: fsubs _data_67DC60;");
    asm("loc_4D3ADC: fdivs _data_67DC70;");
    asm("loc_4D3AE2: fmuls _data_67DC9C;");
    asm("loc_4D3AE8: fstps 0x8C(%esp);");
    asm("loc_4D3AEF: mov 0x8C(%esp),%eax;");
    asm("loc_4D3AF6: fildl _data_616844;");
    asm("loc_4D3AFC: mov %eax,0x124(%esp);");
    asm("loc_4D3B03: mov _data_674948,%eax;");
    asm("loc_4D3B08: test %eax,%eax;");
    asm("loc_4D3B0A: fsubs _data_67DC64;");
    asm("loc_4D3B10: fdivs _data_67DC74;");
    asm("loc_4D3B16: fmuls _data_67DC9C;");
    asm("loc_4D3B1C: fstps 0x90(%esp);");
    asm("loc_4D3B23: mov 0x90(%esp),%ecx;");
    asm("loc_4D3B2A: flds _data_67DC9C;");
    asm("loc_4D3B30: mov %ecx,0x128(%esp);");
    asm("loc_4D3B37: fchs;");
    asm("loc_4D3B39: mov $9,%ecx;");
    asm("loc_4D3B3E: fstps 0x94(%esp);");
    asm("loc_4D3B45: mov 0x94(%esp),%edx;");
    asm("loc_4D3B4C: mov %edx,0x12C(%esp);");
    asm("loc_4D3B53: rep movsl (%esi),(%edi);");
    asm("loc_4D3B55: jne loc_4D3B61;");
    asm("loc_4D3B57: call _sub_5B73E0;");
    asm("loc_4D3B5C: mov %eax,_data_674948;");
    asm("loc_4D3B61: mov (%eax),%ecx;");
    asm("loc_4D3B63: lea 0x124(%esp),%edx;");
    asm("loc_4D3B6A: push %edx;");
    asm("loc_4D3B6B: lea 0x340(%esp),%edx;");
    asm("loc_4D3B72: push %edx;");
    asm("loc_4D3B73: lea 0x3C(%esp),%edx;");
    asm("loc_4D3B77: push %edx;");
    asm("loc_4D3B78: push %eax;");
    asm("loc_4D3B79: calll *0x2C(%ecx);");
    asm("loc_4D3B7C: flds 0x34(%esp);");
    asm("loc_4D3B80: fmuls 0x34(%esp);");
    asm("loc_4D3B84: mov 0x34(%esp),%eax;");
    asm("loc_4D3B88: flds 0x38(%esp);");
    asm("loc_4D3B8C: mov 0x38(%esp),%ecx;");
    asm("loc_4D3B90: fmuls 0x38(%esp);");
    asm("loc_4D3B94: mov 0x3C(%esp),%edx;");
    asm("loc_4D3B98: mov %ecx,0x64(%esp);");
    asm("loc_4D3B9C: mov 0x374(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3BA3: faddp;");
    asm("loc_4D3BA5: mov %eax,0x60(%esp);");
    asm("loc_4D3BA9: flds 0x3C(%esp);");
    asm("loc_4D3BAD: mov %edx,0x68(%esp);");
    asm("loc_4D3BB1: fmuls 0x3C(%esp);");
    asm("loc_4D3BB5: lea 0x60(%esp),%edx;");
    asm("loc_4D3BB9: push %edx;");
    asm("loc_4D3BBA: faddp;");
    asm("loc_4D3BBC: fsqrt;");
    asm("loc_4D3BBE: fdivrs _data_5C75DC;");
    asm("loc_4D3BC4: flds 0x38(%esp);");
    asm("loc_4D3BC8: fmul %st(1),%st;");
    asm("loc_4D3BCA: fstps 0x64(%esp);");
    asm("loc_4D3BCE: flds 0x68(%esp);");
    asm("loc_4D3BD2: fmul %st(1),%st;");
    asm("loc_4D3BD4: fstps 0x68(%esp);");
    asm("loc_4D3BD8: flds 0x6C(%esp);");
    asm("loc_4D3BDC: fmul %st(1),%st;");
    asm("loc_4D3BDE: fstps 0x6C(%esp);");
    asm("loc_4D3BE2: mov (%ecx),%eax;");
    asm("loc_4D3BE4: fstp %st(0);");
    asm("loc_4D3BE6: calll *0x10(%eax);");
    asm("loc_4D3BE9: test %al,%al;");
    asm("loc_4D3BEB: jne loc_4D3C17;");
    asm("loc_4D3BED: mov 0x394(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3BF4: mov (%ecx),%eax;");
    asm("loc_4D3BF6: lea 0x60(%esp),%edx;");
    asm("loc_4D3BFA: push %edx;");
    asm("loc_4D3BFB: calll *0x10(%eax);");
    asm("loc_4D3BFE: test %al,%al;");
    asm("loc_4D3C00: jne loc_4D3C17;");
    asm("loc_4D3C02: mov 0x3B4(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3C09: mov (%ecx),%eax;");
    asm("loc_4D3C0B: lea 0x60(%esp),%edx;");
    asm("loc_4D3C0F: push %edx;");
    asm("loc_4D3C10: calll *0x10(%eax);");
    asm("loc_4D3C13: test %al,%al;");
    asm("loc_4D3C15: je loc_4D3C3B;");
    asm("loc_4D3C17: call _sub_45A740;");
    asm("loc_4D3C1C: test %al,%al;");
    asm("loc_4D3C1E: jne loc_4D3C3B;");
    asm("loc_4D3C20: mov 0x2C(%esp),%eax;");
    asm("loc_4D3C24: push %eax;");
    asm("loc_4D3C25: lea 0x138(%esp),%ecx;");
    asm("loc_4D3C2C: push %ecx;");
    asm("loc_4D3C2D: call _sub_561F20;");
    asm("loc_4D3C32: mov (%eax),%edx;");
    asm("loc_4D3C34: add $8,%esp;");
    asm("loc_4D3C37: mov %edx,0x2C(%esp);");
    asm("loc_4D3C3B: mov 0x374(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3C42: mov (%ecx),%eax;");
    asm("loc_4D3C44: push $1;");
    asm("loc_4D3C46: lea 0x30(%esp),%edx;");
    asm("loc_4D3C4A: push %edx;");
    asm("loc_4D3C4B: push $0x33;");
    asm("loc_4D3C4D: calll *0xA8(%eax);");
    asm("loc_4D3C53: mov 0x394(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3C5A: mov (%ecx),%eax;");
    asm("loc_4D3C5C: push $1;");
    asm("loc_4D3C5E: lea 0x30(%esp),%edx;");
    asm("loc_4D3C62: push %edx;");
    asm("loc_4D3C63: push $0x33;");
    asm("loc_4D3C65: calll *0xA8(%eax);");
    asm("loc_4D3C6B: mov 0x3B4(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3C72: mov (%ecx),%eax;");
    asm("loc_4D3C74: push $1;");
    asm("loc_4D3C76: lea 0x30(%esp),%edx;");
    asm("loc_4D3C7A: push %edx;");
    asm("loc_4D3C7B: push $0x33;");
    asm("loc_4D3C7D: calll *0xA8(%eax);");
    asm("loc_4D3C83: mov 0x28(%esp),%edx;");
    asm("loc_4D3C87: mov (%edx),%edx;");
    asm("loc_4D3C89: mov _data_612478(,%edx,4),%edx;");
    asm("loc_4D3C90: mov 0x374(%ebp,%ebx,4),%ecx;");
    asm("loc_4D3C97: mov (%ecx),%eax;");
    asm("loc_4D3C99: push $0;");
    asm("loc_4D3C9B: push %edx;");
    asm("loc_4D3C9C: push $3;");
    asm("loc_4D3C9E: calll *0xA8(%eax);");
    asm("loc_4D3CA4: inc %ebx;");
    asm("loc_4D3CA5: cmp $8,%ebx;");
    asm("loc_4D3CA8: mov %ebx,0x1C(%esp);");
    asm("loc_4D3CAC: jge loc_4D3CFC;");
    asm("loc_4D3CAE: mov 0x14(%esp),%eax;");
    asm("loc_4D3CB2: mov (%eax),%ecx;");
    asm("loc_4D3CB4: mov %ecx,0x14(%esp);");
    asm("loc_4D3CB8: mov 0x1C(%esp),%esi;");
    asm("loc_4D3CBC: mov 0x14(%esp),%ecx;");
    asm("loc_4D3CC0: cmp 0x3DC(%ebp),%ecx;");
    asm("loc_4D3CC6: jne loc_4D2B91;");
    asm("loc_4D3CCC: cmp $8,%esi;");
    asm("loc_4D3CCF: jge loc_4D3CFC;");
    asm("loc_4D3CD1: mov 0x1C(%esp),%esi;");
    asm("loc_4D3CD5: mov $8,%edx;");
    asm("loc_4D3CDA: lea 0x3B4(%ebp,%esi,4),%eax;");
    asm("loc_4D3CE1: sub %esi,%edx;");
    asm("loc_4D3CE3: mov $0xFC,%bl;");
    asm("loc_4D3CE5: mov -0x20(%eax),%ecx;");
    asm("loc_4D3CE8: and %bl,0x6C(%ecx);");
    asm("loc_4D3CEB: mov (%eax),%ecx;");
    asm("loc_4D3CED: and %bl,0x6C(%ecx);");
    asm("loc_4D3CF0: mov -0x40(%eax),%ecx;");
    asm("loc_4D3CF3: and %bl,0x6C(%ecx);");
    asm("loc_4D3CF6: add $4,%eax;");
    asm("loc_4D3CF9: dec %edx;");
    asm("loc_4D3CFA: jne loc_4D3CE5;");
    asm("loc_4D3CFC: mov 0x3E0(%ebp),%eax;");
    asm("loc_4D3D02: mov 0x3D4(%ebp),%ecx;");
    asm("loc_4D3D08: mov (%ecx),%edx;");
    asm("loc_4D3D0A: dec %eax;");
    asm("loc_4D3D0B: push %eax;");
    asm("loc_4D3D0C: push $0;");
    asm("loc_4D3D0E: push $0x37;");
    asm("loc_4D3D10: calll *0xA8(%edx);");
    asm("loc_4D3D16: lea 0x41C(%ebp),%esi;");
    asm("loc_4D3D1C: movl $8,0x24(%esp);");
    asm("loc_4D3D24: mov (%esi),%ebx;");
    asm("loc_4D3D26: test %ebx,%ebx;");
    asm("loc_4D3D28: je loc_4D3D3E;");
    asm("loc_4D3D2A: mov -0x68(%esi),%edi;");
    asm("loc_4D3D2D: mov %edi,%ecx;");
    asm("loc_4D3D2F: call _sub_58A5D0;");
    asm("loc_4D3D34: push %ebx;");
    asm("loc_4D3D35: mov %edi,%ecx;");
    asm("loc_4D3D37: mov %eax,(%esi);");
    asm("loc_4D3D39: call _sub_58A5E0;");
    asm("loc_4D3D3E: mov 0x24(%esp),%eax;");
    asm("loc_4D3D42: add $4,%esi;");
    asm("loc_4D3D45: dec %eax;");
    asm("loc_4D3D46: mov %eax,0x24(%esp);");
    asm("loc_4D3D4A: jne loc_4D3D24;");
    asm("loc_4D3D4C: mov %ebp,%ecx;");
    asm("loc_4D3D4E: call _sub_5A0760;");
    asm("loc_4D3D53: lea 0x41C(%ebp),%esi;");
    asm("loc_4D3D59: movl $8,0x24(%esp);");
    asm("loc_4D3D61: mov (%esi),%ebx;");
    asm("loc_4D3D63: test %ebx,%ebx;");
    asm("loc_4D3D65: je loc_4D3D7B;");
    asm("loc_4D3D67: mov -0x68(%esi),%edi;");
    asm("loc_4D3D6A: mov %edi,%ecx;");
    asm("loc_4D3D6C: call _sub_58A5D0;");
    asm("loc_4D3D71: push %ebx;");
    asm("loc_4D3D72: mov %edi,%ecx;");
    asm("loc_4D3D74: mov %eax,(%esi);");
    asm("loc_4D3D76: call _sub_58A5E0;");
    asm("loc_4D3D7B: mov 0x24(%esp),%eax;");
    asm("loc_4D3D7F: add $4,%esi;");
    asm("loc_4D3D82: dec %eax;");
    asm("loc_4D3D83: mov %eax,0x24(%esp);");
    asm("loc_4D3D87: jne loc_4D3D61;");
    asm("loc_4D3D89: mov (%ebp),%edx;");
    asm("loc_4D3D8C: mov %ebp,%ecx;");
    asm("loc_4D3D8E: calll *0x9C(%edx);");
    asm("loc_4D3D94: mov 0x6DE0(%esp),%ecx;");
    asm("loc_4D3D9B: pop %edi;");
    asm("loc_4D3D9C: pop %esi;");
    asm("loc_4D3D9D: pop %ebp;");
    asm("loc_4D3D9E: pop %ebx;");
    asm("loc_4D3D9F: mov %ecx,%fs:0;");
    asm("loc_4D3DA6: add $0x6DDC,%esp;");
    asm("loc_4D3DAC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D3DB0() // _sub_4D3DB0
{
    __DEBUG_ASM(4D3DB0);
    // chunk 0x4D3DB0 _sub_4D3DB0
    asm("loc_4D3DB0: push %esi;");
    asm("loc_4D3DB1: mov %ecx,%esi;");
    asm("loc_4D3DB3: call _sub_45A740;");
    asm("loc_4D3DB8: test %al,%al;");
    asm("loc_4D3DBA: jne loc_4D3DC4;");
    asm("loc_4D3DBC: mov %esi,%ecx;");
    asm("loc_4D3DBE: pop %esi;");
    asm("loc_4D3DBF: jmp _sub_5A17B0;");
    asm("loc_4D3DC4: pop %esi;");
    asm("loc_4D3DC5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D3DD0() // _sub_4D3DD0
{
    __DEBUG_ASM(4D3DD0);
    // chunk 0x4D3DD0 _sub_4D3DD0
    asm("loc_4D3DD0: push %esi;");
    asm("loc_4D3DD1: mov %ecx,%esi;");
    asm("loc_4D3DD3: mov _data_674B04,%ecx;");
    asm("loc_4D3DD9: push $0;");
    asm("loc_4D3DDB: call _sub_4E5470;");
    asm("loc_4D3DE0: test %eax,%eax;");
    asm("loc_4D3DE2: je loc_4D3DE9;");
    asm("loc_4D3DE4: cmp $2,%eax;");
    asm("loc_4D3DE7: jne loc_4D3E0D;");
    asm("loc_4D3DE9: call _sub_41DD90;");
    asm("loc_4D3DEE: test %al,%al;");
    asm("loc_4D3DF0: je loc_4D3E0D;");
    asm("loc_4D3DF2: call _sub_54BAF0;");
    asm("loc_4D3DF7: test %eax,%eax;");
    asm("loc_4D3DF9: je loc_4D3E0D;");
    asm("loc_4D3DFB: call _sub_41A3E0;");
    asm("loc_4D3E00: test %al,%al;");
    asm("loc_4D3E02: jne loc_4D3E0D;");
    asm("loc_4D3E04: push $0;");
    asm("loc_4D3E06: mov %esi,%ecx;");
    asm("loc_4D3E08: call _sub_5A0C30;");
    asm("loc_4D3E0D: mov 0xC(%esi),%esi;");
    asm("loc_4D3E10: test %esi,%esi;");
    asm("loc_4D3E12: je loc_4D3E28;");
    asm("loc_4D3E14: testb $1,0x6C(%esi);");
    asm("loc_4D3E18: jne loc_4D3E21;");
    asm("loc_4D3E1A: mov (%esi),%eax;");
    asm("loc_4D3E1C: mov %esi,%ecx;");
    asm("loc_4D3E1E: calll *0x30(%eax);");
    asm("loc_4D3E21: mov 8(%esi),%esi;");
    asm("loc_4D3E24: test %esi,%esi;");
    asm("loc_4D3E26: jne loc_4D3E14;");
    asm("loc_4D3E28: pop %esi;");
    asm("loc_4D3E29: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D3E30() // _sub_4D3E30
{
    __DEBUG_ASM(4D3E30);
    // chunk 0x4D3E30 _sub_4D3E30
    asm("loc_4D3E30: sub $0xC,%esp;");
    asm("loc_4D3E33: push %ebx;");
    asm("loc_4D3E34: push %esi;");
    asm("loc_4D3E35: push %edi;");
    asm("loc_4D3E36: mov %ecx,%ebx;");
    asm("loc_4D3E38: call _sub_45A740;");
    asm("loc_4D3E3D: test %al,%al;");
    asm("loc_4D3E3F: je loc_4D3E4C;");
    asm("loc_4D3E41: pop %edi;");
    asm("loc_4D3E42: pop %esi;");
    asm("loc_4D3E43: xor %al,%al;");
    asm("loc_4D3E45: pop %ebx;");
    asm("loc_4D3E46: add $0xC,%esp;");
    asm("loc_4D3E49: ret $4;");
    asm("loc_4D3E4C: call _sub_54BAF0;");
    asm("loc_4D3E51: test %eax,%eax;");
    asm("loc_4D3E53: mov %eax,0x10(%esp);");
    asm("loc_4D3E57: je loc_4D3E7C;");
    asm("loc_4D3E59: cmpl $1,0x1C(%eax);");
    asm("loc_4D3E5D: jne loc_4D3E7C;");
    asm("loc_4D3E5F: add $0xC,%eax;");
    asm("loc_4D3E62: test %eax,%eax;");
    asm("loc_4D3E64: je loc_4D3E7C;");
    asm("loc_4D3E66: mov 4(%eax),%ecx;");
    asm("loc_4D3E69: test %ecx,%ecx;");
    asm("loc_4D3E6B: je loc_4D3E7C;");
    asm("loc_4D3E6D: mov 0x4C(%ecx),%eax;");
    asm("loc_4D3E70: and $0x503,%eax;");
    asm("loc_4D3E75: cmp $0x503,%eax;");
    asm("loc_4D3E7A: je loc_4D3E87;");
    asm("loc_4D3E7C: pop %edi;");
    asm("loc_4D3E7D: pop %esi;");
    asm("loc_4D3E7E: xor %al,%al;");
    asm("loc_4D3E80: pop %ebx;");
    asm("loc_4D3E81: add $0xC,%esp;");
    asm("loc_4D3E84: ret $4;");
    asm("loc_4D3E87: mov 0xB4(%ebx),%eax;");
    asm("loc_4D3E8D: test %eax,%eax;");
    asm("loc_4D3E8F: mov %eax,0xC(%esp);");
    asm("loc_4D3E93: jne loc_4D3EA0;");
    asm("loc_4D3E95: pop %edi;");
    asm("loc_4D3E96: pop %esi;");
    asm("loc_4D3E97: xor %al,%al;");
    asm("loc_4D3E99: pop %ebx;");
    asm("loc_4D3E9A: add $0xC,%esp;");
    asm("loc_4D3E9D: ret $4;");
    asm("loc_4D3EA0: calll *_import_5C6348;");
    asm("loc_4D3EA6: test %eax,%eax;");
    asm("loc_4D3EA8: je loc_4D3EE7;");
    asm("loc_4D3EAA: mov (%eax),%edx;");
    asm("loc_4D3EAC: mov %eax,%ecx;");
    asm("loc_4D3EAE: calll *0x20(%edx);");
    asm("loc_4D3EB1: mov %eax,0x14(%esp);");
    asm("loc_4D3EB5: mov 0xB0(%ebx),%eax;");
    asm("loc_4D3EBB: mov (%eax),%esi;");
    asm("loc_4D3EBD: xor %edi,%edi;");
    asm("loc_4D3EBF: cmp %eax,%esi;");
    asm("loc_4D3EC1: je loc_4D3EE7;");
    asm("loc_4D3EC3: mov 0x14(%esp),%eax;");
    asm("loc_4D3EC7: push $1;");
    asm("loc_4D3EC9: push %eax;");
    asm("loc_4D3ECA: lea 8(%esi),%ecx;");
    asm("loc_4D3ECD: push %ecx;");
    asm("loc_4D3ECE: call _sub_4D4120;");
    asm("loc_4D3ED3: add $0xC,%esp;");
    asm("loc_4D3ED6: test %al,%al;");
    asm("loc_4D3ED8: jne loc_4D3EFF;");
    asm("loc_4D3EDA: mov (%esi),%esi;");
    asm("loc_4D3EDC: mov 0xB0(%ebx),%eax;");
    asm("loc_4D3EE2: inc %edi;");
    asm("loc_4D3EE3: cmp %eax,%esi;");
    asm("loc_4D3EE5: jne loc_4D3EC3;");
    asm("loc_4D3EE7: lea -0x364(%ebx),%ecx;");
    asm("loc_4D3EED: push $0;");
    asm("loc_4D3EEF: call _sub_4CFFA0;");
    asm("loc_4D3EF4: pop %edi;");
    asm("loc_4D3EF5: pop %esi;");
    asm("loc_4D3EF6: mov $1,%al;");
    asm("loc_4D3EF8: pop %ebx;");
    asm("loc_4D3EF9: add $0xC,%esp;");
    asm("loc_4D3EFC: ret $4;");
    asm("loc_4D3EFF: mov 0x1C(%esp),%eax;");
    asm("loc_4D3F03: sub $0x1D,%eax;");
    asm("loc_4D3F06: je loc_4D3F71;");
    asm("loc_4D3F08: dec %eax;");
    asm("loc_4D3F09: je loc_4D3F16;");
    asm("loc_4D3F0B: pop %edi;");
    asm("loc_4D3F0C: pop %esi;");
    asm("loc_4D3F0D: xor %al,%al;");
    asm("loc_4D3F0F: pop %ebx;");
    asm("loc_4D3F10: add $0xC,%esp;");
    asm("loc_4D3F13: ret $4;");
    asm("loc_4D3F16: dec %edi;");
    asm("loc_4D3F17: jns loc_4D3F20;");
    asm("loc_4D3F19: mov 0xC(%esp),%edx;");
    asm("loc_4D3F1D: lea -1(%edx),%edi;");
    asm("loc_4D3F20: mov 0xB0(%ebx),%ecx;");
    asm("loc_4D3F26: mov (%ecx),%eax;");
    asm("loc_4D3F28: add $0xFFFFFC9C,%ebx;");
    asm("loc_4D3F2E: cmp %ecx,%eax;");
    asm("loc_4D3F30: mov %edi,%edx;");
    asm("loc_4D3F32: je loc_4D3F3F;");
    asm("loc_4D3F34: test %edx,%edx;");
    asm("loc_4D3F36: je loc_4D3F6C;");
    asm("loc_4D3F38: mov (%eax),%eax;");
    asm("loc_4D3F3A: dec %edx;");
    asm("loc_4D3F3B: cmp %ecx,%eax;");
    asm("loc_4D3F3D: jne loc_4D3F34;");
    asm("loc_4D3F3F: xor %esi,%esi;");
    asm("loc_4D3F41: mov 0x10(%esp),%ecx;");
    asm("loc_4D3F45: mov (%ecx),%eax;");
    asm("loc_4D3F47: calll *0x20(%eax);");
    asm("loc_4D3F4A: cmp %eax,0x10(%esi);");
    asm("loc_4D3F4D: jne loc_4D3F59;");
    asm("loc_4D3F4F: dec %edi;");
    asm("loc_4D3F50: jns loc_4D3F59;");
    asm("loc_4D3F52: mov 0xC(%esp),%ecx;");
    asm("loc_4D3F56: lea -1(%ecx),%edi;");
    asm("loc_4D3F59: push %edi;");
    asm("loc_4D3F5A: mov %ebx,%ecx;");
    asm("loc_4D3F5C: call _sub_4CFFA0;");
    asm("loc_4D3F61: pop %edi;");
    asm("loc_4D3F62: pop %esi;");
    asm("loc_4D3F63: mov $1,%al;");
    asm("loc_4D3F65: pop %ebx;");
    asm("loc_4D3F66: add $0xC,%esp;");
    asm("loc_4D3F69: ret $4;");
    asm("loc_4D3F6C: lea 8(%eax),%esi;");
    asm("loc_4D3F6F: jmp loc_4D3F41;");
    asm("loc_4D3F71: push %ebp;");
    asm("loc_4D3F72: mov 0x10(%esp),%ebp;");
    asm("loc_4D3F76: inc %edi;");
    asm("loc_4D3F77: cmp %ebp,%edi;");
    asm("loc_4D3F79: jl loc_4D3F7D;");
    asm("loc_4D3F7B: xor %edi,%edi;");
    asm("loc_4D3F7D: mov 0xB0(%ebx),%ecx;");
    asm("loc_4D3F83: mov (%ecx),%eax;");
    asm("loc_4D3F85: add $0xFFFFFC9C,%ebx;");
    asm("loc_4D3F8B: cmp %ecx,%eax;");
    asm("loc_4D3F8D: mov %edi,%edx;");
    asm("loc_4D3F8F: je loc_4D3F9C;");
    asm("loc_4D3F91: test %edx,%edx;");
    asm("loc_4D3F93: je loc_4D3FC7;");
    asm("loc_4D3F95: mov (%eax),%eax;");
    asm("loc_4D3F97: dec %edx;");
    asm("loc_4D3F98: cmp %ecx,%eax;");
    asm("loc_4D3F9A: jne loc_4D3F91;");
    asm("loc_4D3F9C: xor %esi,%esi;");
    asm("loc_4D3F9E: mov 0x14(%esp),%ecx;");
    asm("loc_4D3FA2: mov (%ecx),%edx;");
    asm("loc_4D3FA4: calll *0x20(%edx);");
    asm("loc_4D3FA7: cmp %eax,0x10(%esi);");
    asm("loc_4D3FAA: jne loc_4D3FB3;");
    asm("loc_4D3FAC: inc %edi;");
    asm("loc_4D3FAD: cmp %ebp,%edi;");
    asm("loc_4D3FAF: jl loc_4D3FB3;");
    asm("loc_4D3FB1: xor %edi,%edi;");
    asm("loc_4D3FB3: push %edi;");
    asm("loc_4D3FB4: mov %ebx,%ecx;");
    asm("loc_4D3FB6: call _sub_4CFFA0;");
    asm("loc_4D3FBB: pop %ebp;");
    asm("loc_4D3FBC: pop %edi;");
    asm("loc_4D3FBD: pop %esi;");
    asm("loc_4D3FBE: mov $1,%al;");
    asm("loc_4D3FC0: pop %ebx;");
    asm("loc_4D3FC1: add $0xC,%esp;");
    asm("loc_4D3FC4: ret $4;");
    asm("loc_4D3FC7: lea 8(%eax),%esi;");
    asm("loc_4D3FCA: jmp loc_4D3F9E;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D3FD0() // _sub_4D3FD0
{
    __DEBUG_ASM(4D3FD0);
    // chunk 0x4D3FD0 _sub_4D3FD0
    asm("loc_4D3FD0: push %esi;");
    asm("loc_4D3FD1: mov 8(%esp),%esi;");
    asm("loc_4D3FD5: test %esi,%esi;");
    asm("loc_4D3FD7: jne loc_4D3FE0;");
    asm("loc_4D3FD9: or $0xFFFFFFFF,%eax;");
    asm("loc_4D3FDC: pop %esi;");
    asm("loc_4D3FDD: ret $4;");
    asm("loc_4D3FE0: mov 0x4C(%esi),%ecx;");
    asm("loc_4D3FE3: mov 0xE0(%esi),%eax;");
    asm("loc_4D3FE9: mov %ecx,%edx;");
    asm("loc_4D3FEB: and $0x503,%edx;");
    asm("loc_4D3FF1: cmp $0x503,%edx;");
    asm("loc_4D3FF7: jne loc_4D40B6;");
    asm("loc_4D3FFD: mov 0x2BD(%esi),%dl;");
    asm("loc_4D4003: test %dl,%dl;");
    asm("loc_4D4005: je loc_4D405B;");
    asm("loc_4D4007: mov 0x1B4(%esi),%eax;");
    asm("loc_4D400D: test %eax,%eax;");
    asm("loc_4D400F: je loc_4D4052;");
    asm("loc_4D4011: call _sub_54BAF0;");
    asm("loc_4D4016: test %eax,%eax;");
    asm("loc_4D4018: je loc_4D4052;");
    asm("loc_4D401A: add $0xC,%eax;");
    asm("loc_4D401D: test %eax,%eax;");
    asm("loc_4D401F: je loc_4D4039;");
    asm("loc_4D4021: mov 4(%eax),%eax;");
    asm("loc_4D4024: test %eax,%eax;");
    asm("loc_4D4026: je loc_4D4039;");
    asm("loc_4D4028: mov 0x4C(%eax),%ecx;");
    asm("loc_4D402B: and $0x503,%ecx;");
    asm("loc_4D4031: cmp $0x503,%ecx;");
    asm("loc_4D4037: je loc_4D403B;");
    asm("loc_4D4039: xor %eax,%eax;");
    asm("loc_4D403B: mov 0x1B4(%eax),%edx;");
    asm("loc_4D4041: cmp 0x1B4(%esi),%edx;");
    asm("loc_4D4047: jne loc_4D4052;");
    asm("loc_4D4049: mov $0xF,%eax;");
    asm("loc_4D404E: pop %esi;");
    asm("loc_4D404F: ret $4;");
    asm("loc_4D4052: mov $0xE,%eax;");
    asm("loc_4D4057: pop %esi;");
    asm("loc_4D4058: ret $4;");
    asm("loc_4D405B: test $0x420000,%eax;");
    asm("loc_4D4060: je loc_4D406B;");
    asm("loc_4D4062: mov $8,%eax;");
    asm("loc_4D4067: pop %esi;");
    asm("loc_4D4068: ret $4;");
    asm("loc_4D406B: and $0x103,%ecx;");
    asm("loc_4D4071: cmp $0x103,%ecx;");
    asm("loc_4D4077: jne loc_4D4096;");
    asm("loc_4D4079: mov 0x88(%esi),%esi;");
    asm("loc_4D407F: test %esi,%esi;");
    asm("loc_4D4081: je loc_4D4096;");
    asm("loc_4D4083: mov 0x80(%esi),%cl;");
    asm("loc_4D4089: test %cl,%cl;");
    asm("loc_4D408B: je loc_4D4096;");
    asm("loc_4D408D: mov $0xA,%eax;");
    asm("loc_4D4092: pop %esi;");
    asm("loc_4D4093: ret $4;");
    asm("loc_4D4096: test $0x100000,%eax;");
    asm("loc_4D409B: je loc_4D40A6;");
    asm("loc_4D409D: mov $9,%eax;");
    asm("loc_4D40A2: pop %esi;");
    asm("loc_4D40A3: ret $4;");
    asm("loc_4D40A6: and $0x200000,%eax;");
    asm("loc_4D40AB: neg %eax;");
    asm("loc_4D40AD: sbb %eax,%eax;");
    asm("loc_4D40AF: and $5,%eax;");
    asm("loc_4D40B2: pop %esi;");
    asm("loc_4D40B3: ret $4;");
    asm("loc_4D40B6: test %al,%al;");
    asm("loc_4D40B8: jns loc_4D40C3;");
    asm("loc_4D40BA: mov $7,%eax;");
    asm("loc_4D40BF: pop %esi;");
    asm("loc_4D40C0: ret $4;");
    asm("loc_4D40C3: test $3,%al;");
    asm("loc_4D40C5: je loc_4D40D0;");
    asm("loc_4D40C7: mov $1,%eax;");
    asm("loc_4D40CC: pop %esi;");
    asm("loc_4D40CD: ret $4;");
    asm("loc_4D40D0: test $0xC40,%eax;");
    asm("loc_4D40D5: je loc_4D40E0;");
    asm("loc_4D40D7: mov $6,%eax;");
    asm("loc_4D40DC: pop %esi;");
    asm("loc_4D40DD: ret $4;");
    asm("loc_4D40E0: test $_off_600DE0,%eax;");
    asm("loc_4D40E5: je loc_4D40F0;");
    asm("loc_4D40E7: mov $2,%eax;");
    asm("loc_4D40EC: pop %esi;");
    asm("loc_4D40ED: ret $4;");
    asm("loc_4D40F0: test $0x9010,%eax;");
    asm("loc_4D40F5: je loc_4D4100;");
    asm("loc_4D40F7: mov $0xC,%eax;");
    asm("loc_4D40FC: pop %esi;");
    asm("loc_4D40FD: ret $4;");
    asm("loc_4D4100: test $0x20,%ah;");
    asm("loc_4D4103: je loc_4D410E;");
    asm("loc_4D4105: mov $0xD,%eax;");
    asm("loc_4D410A: pop %esi;");
    asm("loc_4D410B: ret $4;");
    asm("loc_4D410E: and $0x10000000,%eax;");
    asm("loc_4D4113: neg %eax;");
    asm("loc_4D4115: sbb %eax,%eax;");
    asm("loc_4D4117: and $0xC,%eax;");
    asm("loc_4D411A: dec %eax;");
    asm("loc_4D411B: pop %esi;");
    asm("loc_4D411C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4120() // _sub_4D4120
{
    __DEBUG_ASM(4D4120);
    // chunk 0x4D4120 _sub_4D4120
    asm("loc_4D4120: mov 4(%esp),%ecx;");
    asm("loc_4D4124: mov 4(%ecx),%eax;");
    asm("loc_4D4127: sub $0xC,%esp;");
    asm("loc_4D412A: test %eax,%eax;");
    asm("loc_4D412C: push %esi;");
    asm("loc_4D412D: push %edi;");
    asm("loc_4D412E: mov 0x1C(%esp),%edi;");
    asm("loc_4D4132: je loc_4D4148;");
    asm("loc_4D4134: add $0xFFFFFFF8,%eax;");
    asm("loc_4D4137: test %eax,%eax;");
    asm("loc_4D4139: je loc_4D4148;");
    asm("loc_4D413B: cmp %edi,0x10(%ecx);");
    asm("loc_4D413E: jne loc_4D4148;");
    asm("loc_4D4140: pop %edi;");
    asm("loc_4D4141: mov $1,%al;");
    asm("loc_4D4143: pop %esi;");
    asm("loc_4D4144: add $0xC,%esp;");
    asm("loc_4D4147: ret;");
    asm("loc_4D4148: mov (%ecx),%eax;");
    asm("loc_4D414A: cmp $4,%eax;");
    asm("loc_4D414D: jne loc_4D41A1;");
    asm("loc_4D414F: mov 0x14(%ecx),%esi;");
    asm("loc_4D4152: call _sub_4C4690;");
    asm("loc_4D4157: cmp %eax,%esi;");
    asm("loc_4D4159: jge loc_4D4214;");
    asm("loc_4D415F: push %esi;");
    asm("loc_4D4160: call _sub_4C46A0;");
    asm("loc_4D4165: mov _data_674BC8,%ecx;");
    asm("loc_4D416B: add $4,%esp;");
    asm("loc_4D416E: mov %eax,%esi;");
    asm("loc_4D4170: push %esi;");
    asm("loc_4D4171: call _sub_4F4B90;");
    asm("loc_4D4176: test %al,%al;");
    asm("loc_4D4178: je loc_4D4182;");
    asm("loc_4D417A: pop %edi;");
    asm("loc_4D417B: mov $1,%al;");
    asm("loc_4D417D: pop %esi;");
    asm("loc_4D417E: add $0xC,%esp;");
    asm("loc_4D4181: ret;");
    asm("loc_4D4182: mov 0x20(%esp),%al;");
    asm("loc_4D4186: test %al,%al;");
    asm("loc_4D4188: je loc_4D4214;");
    asm("loc_4D418E: mov 0x10(%esi),%eax;");
    asm("loc_4D4191: test %eax,%eax;");
    asm("loc_4D4193: je loc_4D4214;");
    asm("loc_4D4195: cmp %edi,%eax;");
    asm("loc_4D4197: jne loc_4D4214;");
    asm("loc_4D4199: pop %edi;");
    asm("loc_4D419A: mov $1,%al;");
    asm("loc_4D419C: pop %esi;");
    asm("loc_4D419D: add $0xC,%esp;");
    asm("loc_4D41A0: ret;");
    asm("loc_4D41A1: cmp $3,%eax;");
    asm("loc_4D41A4: jne loc_4D4214;");
    asm("loc_4D41A6: mov 0x14(%ecx),%esi;");
    asm("loc_4D41A9: call _sub_4C4FB0;");
    asm("loc_4D41AE: cmp %eax,%esi;");
    asm("loc_4D41B0: jge loc_4D4214;");
    asm("loc_4D41B2: push %esi;");
    asm("loc_4D41B3: call _sub_4C4FF0;");
    asm("loc_4D41B8: mov %eax,%esi;");
    asm("loc_4D41BA: add $4,%esp;");
    asm("loc_4D41BD: lea 0x18(%esp),%eax;");
    asm("loc_4D41C1: push %eax;");
    asm("loc_4D41C2: lea 0xC(%esp),%ecx;");
    asm("loc_4D41C6: push %ecx;");
    asm("loc_4D41C7: mov %esi,%ecx;");
    asm("loc_4D41C9: call _sub_4C52D0;");
    asm("loc_4D41CE: test %al,%al;");
    asm("loc_4D41D0: je loc_4D41EE;");
    asm("loc_4D41D2: mov _data_674BC8,%ecx;");
    asm("loc_4D41D8: lea 8(%esp),%edx;");
    asm("loc_4D41DC: push %edx;");
    asm("loc_4D41DD: call _sub_4F4B90;");
    asm("loc_4D41E2: test %al,%al;");
    asm("loc_4D41E4: je loc_4D41EE;");
    asm("loc_4D41E6: pop %edi;");
    asm("loc_4D41E7: mov $1,%al;");
    asm("loc_4D41E9: pop %esi;");
    asm("loc_4D41EA: add $0xC,%esp;");
    asm("loc_4D41ED: ret;");
    asm("loc_4D41EE: mov %esi,%ecx;");
    asm("loc_4D41F0: call _sub_4C5110;");
    asm("loc_4D41F5: mov 0x20(%esp),%cl;");
    asm("loc_4D41F9: test %cl,%cl;");
    asm("loc_4D41FB: je loc_4D4214;");
    asm("loc_4D41FD: test %eax,%eax;");
    asm("loc_4D41FF: je loc_4D4214;");
    asm("loc_4D4201: mov (%eax),%edx;");
    asm("loc_4D4203: mov %eax,%ecx;");
    asm("loc_4D4205: calll *0x20(%edx);");
    asm("loc_4D4208: cmp %edi,%eax;");
    asm("loc_4D420A: jne loc_4D4214;");
    asm("loc_4D420C: pop %edi;");
    asm("loc_4D420D: mov $1,%al;");
    asm("loc_4D420F: pop %esi;");
    asm("loc_4D4210: add $0xC,%esp;");
    asm("loc_4D4213: ret;");
    asm("loc_4D4214: pop %edi;");
    asm("loc_4D4215: xor %al,%al;");
    asm("loc_4D4217: pop %esi;");
    asm("loc_4D4218: add $0xC,%esp;");
    asm("loc_4D421B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4220() // _sub_4D4220
{
    __DEBUG_ASM(4D4220);
    // chunk 0x4D4220 _sub_4D4220
    asm("loc_4D4220: sub $0xC,%esp;");
    asm("loc_4D4223: push %esi;");
    asm("loc_4D4224: push %edi;");
    asm("loc_4D4225: call _sub_4C4690;");
    asm("loc_4D422A: test %eax,%eax;");
    asm("loc_4D422C: mov 0x18(%esp),%edi;");
    asm("loc_4D4230: jle loc_4D4269;");
    asm("loc_4D4232: push $0;");
    asm("loc_4D4234: call _sub_4C46A0;");
    asm("loc_4D4239: mov _data_674BC8,%ecx;");
    asm("loc_4D423F: add $4,%esp;");
    asm("loc_4D4242: mov %eax,%esi;");
    asm("loc_4D4244: push %esi;");
    asm("loc_4D4245: call _sub_4F4B90;");
    asm("loc_4D424A: test %al,%al;");
    asm("loc_4D424C: je loc_4D4256;");
    asm("loc_4D424E: pop %edi;");
    asm("loc_4D424F: mov $1,%al;");
    asm("loc_4D4251: pop %esi;");
    asm("loc_4D4252: add $0xC,%esp;");
    asm("loc_4D4255: ret;");
    asm("loc_4D4256: mov 0x10(%esi),%eax;");
    asm("loc_4D4259: test %eax,%eax;");
    asm("loc_4D425B: je loc_4D4269;");
    asm("loc_4D425D: cmp %edi,%eax;");
    asm("loc_4D425F: jne loc_4D4269;");
    asm("loc_4D4261: pop %edi;");
    asm("loc_4D4262: mov $1,%al;");
    asm("loc_4D4264: pop %esi;");
    asm("loc_4D4265: add $0xC,%esp;");
    asm("loc_4D4268: ret;");
    asm("loc_4D4269: call _sub_4C4FB0;");
    asm("loc_4D426E: test %eax,%eax;");
    asm("loc_4D4270: jle loc_4D42CD;");
    asm("loc_4D4272: push $0;");
    asm("loc_4D4274: call _sub_4C4FF0;");
    asm("loc_4D4279: mov %eax,%esi;");
    asm("loc_4D427B: add $4,%esp;");
    asm("loc_4D427E: lea 0x18(%esp),%eax;");
    asm("loc_4D4282: push %eax;");
    asm("loc_4D4283: lea 0xC(%esp),%ecx;");
    asm("loc_4D4287: push %ecx;");
    asm("loc_4D4288: mov %esi,%ecx;");
    asm("loc_4D428A: call _sub_4C52D0;");
    asm("loc_4D428F: test %al,%al;");
    asm("loc_4D4291: je loc_4D42AF;");
    asm("loc_4D4293: mov _data_674BC8,%ecx;");
    asm("loc_4D4299: lea 8(%esp),%edx;");
    asm("loc_4D429D: push %edx;");
    asm("loc_4D429E: call _sub_4F4B90;");
    asm("loc_4D42A3: test %al,%al;");
    asm("loc_4D42A5: je loc_4D42AF;");
    asm("loc_4D42A7: pop %edi;");
    asm("loc_4D42A8: mov $1,%al;");
    asm("loc_4D42AA: pop %esi;");
    asm("loc_4D42AB: add $0xC,%esp;");
    asm("loc_4D42AE: ret;");
    asm("loc_4D42AF: mov %esi,%ecx;");
    asm("loc_4D42B1: call _sub_4C5110;");
    asm("loc_4D42B6: test %eax,%eax;");
    asm("loc_4D42B8: je loc_4D42CD;");
    asm("loc_4D42BA: mov (%eax),%edx;");
    asm("loc_4D42BC: mov %eax,%ecx;");
    asm("loc_4D42BE: calll *0x20(%edx);");
    asm("loc_4D42C1: cmp %edi,%eax;");
    asm("loc_4D42C3: jne loc_4D42CD;");
    asm("loc_4D42C5: pop %edi;");
    asm("loc_4D42C6: mov $1,%al;");
    asm("loc_4D42C8: pop %esi;");
    asm("loc_4D42C9: add $0xC,%esp;");
    asm("loc_4D42CC: ret;");
    asm("loc_4D42CD: pop %edi;");
    asm("loc_4D42CE: xor %al,%al;");
    asm("loc_4D42D0: pop %esi;");
    asm("loc_4D42D1: add $0xC,%esp;");
    asm("loc_4D42D4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D42E0() // _sub_4D42E0
{
    __DEBUG_ASM(4D42E0);
    // chunk 0x4D42E0 _sub_4D42E0
    asm("loc_4D42E0: push %ebx;");
    asm("loc_4D42E1: push %ebp;");
    asm("loc_4D42E2: mov %ecx,%ebx;");
    asm("loc_4D42E4: mov 4(%ebx),%ebp;");
    asm("loc_4D42E7: push %edi;");
    asm("loc_4D42E8: mov (%ebp),%edi;");
    asm("loc_4D42EB: cmp %ebp,%edi;");
    asm("loc_4D42ED: je loc_4D4320;");
    asm("loc_4D42EF: push %esi;");
    asm("loc_4D42F0: mov %edi,%esi;");
    asm("loc_4D42F2: mov 4(%esi),%eax;");
    asm("loc_4D42F5: mov (%esi),%ecx;");
    asm("loc_4D42F7: mov (%edi),%edi;");
    asm("loc_4D42F9: mov %ecx,(%eax);");
    asm("loc_4D42FB: mov (%esi),%edx;");
    asm("loc_4D42FD: mov 4(%esi),%eax;");
    asm("loc_4D4300: lea 8(%esi),%ecx;");
    asm("loc_4D4303: mov %eax,4(%edx);");
    asm("loc_4D4306: call _sub_4D0470;");
    asm("loc_4D430B: push %esi;");
    asm("loc_4D430C: call _sub_5B7E1D;");
    asm("loc_4D4311: mov 8(%ebx),%ecx;");
    asm("loc_4D4314: add $4,%esp;");
    asm("loc_4D4317: dec %ecx;");
    asm("loc_4D4318: cmp %ebp,%edi;");
    asm("loc_4D431A: mov %ecx,8(%ebx);");
    asm("loc_4D431D: jne loc_4D42F0;");
    asm("loc_4D431F: pop %esi;");
    asm("loc_4D4320: mov 4(%ebx),%ecx;");
    asm("loc_4D4323: push %ecx;");
    asm("loc_4D4324: call _sub_5B7E1D;");
    asm("loc_4D4329: add $4,%esp;");
    asm("loc_4D432C: pop %edi;");
    asm("loc_4D432D: xor %eax,%eax;");
    asm("loc_4D432F: pop %ebp;");
    asm("loc_4D4330: mov %eax,4(%ebx);");
    asm("loc_4D4333: mov %eax,8(%ebx);");
    asm("loc_4D4336: pop %ebx;");
    asm("loc_4D4337: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4340() // _sub_4D4340
{
    __DEBUG_ASM(4D4340);
    // chunk 0x4D4340 _sub_4D4340
    asm("loc_4D4340: push $0xFFFFFFFF;");
    asm("loc_4D4342: push $_sub_5BDF91;");
    asm("loc_4D4347: mov %fs:0,%eax;");
    asm("loc_4D434D: push %eax;");
    asm("loc_4D434E: mov %esp,%fs:0;");
    asm("loc_4D4355: sub $0xE8,%esp;");
    asm("loc_4D435B: push %ebp;");
    asm("loc_4D435C: mov %ecx,%ebp;");
    asm("loc_4D435E: cmpl $2,8(%ebp);");
    asm("loc_4D4362: mov %ebp,0x24(%esp);");
    asm("loc_4D4366: jb loc_4D460F;");
    asm("loc_4D436C: mov (%ebp),%al;");
    asm("loc_4D436F: push %ebx;");
    asm("loc_4D4370: push %esi;");
    asm("loc_4D4371: push $0x24;");
    asm("loc_4D4373: mov %al,0x10(%esp);");
    asm("loc_4D4377: call _sub_5B7E84;");
    asm("loc_4D437C: mov %eax,(%eax);");
    asm("loc_4D437E: mov %eax,4(%eax);");
    asm("loc_4D4381: xor %ebx,%ebx;");
    asm("loc_4D4383: add $4,%esp;");
    asm("loc_4D4386: mov %eax,0x10(%esp);");
    asm("loc_4D438A: mov %ebx,0x14(%esp);");
    asm("loc_4D438E: push $_sub_4D42E0;");
    asm("loc_4D4393: push $_sub_4D4710;");
    asm("loc_4D4398: push $0x10;");
    asm("loc_4D439A: push $0xC;");
    asm("loc_4D439C: lea 0x44(%esp),%ecx;");
    asm("loc_4D43A0: push %ecx;");
    asm("loc_4D43A1: mov %ebx,0x110(%esp);");
    asm("loc_4D43A8: call _sub_5B7FBA;");
    asm("loc_4D43AD: cmp %ebx,8(%ebp);");
    asm("loc_4D43B0: movb $1,0xFC(%esp);");
    asm("loc_4D43B8: mov %ebx,0x1C(%esp);");
    asm("loc_4D43BC: je loc_4D45DE;");
    asm("loc_4D43C2: mov 0x14(%esp),%eax;");
    asm("loc_4D43C6: push %edi;");
    asm("loc_4D43C7: mov 4(%ebp),%ecx;");
    asm("loc_4D43CA: mov 0x14(%esp),%edx;");
    asm("loc_4D43CE: mov (%ecx),%ecx;");
    asm("loc_4D43D0: mov (%edx),%edx;");
    asm("loc_4D43D2: cmp %ecx,%edx;");
    asm("loc_4D43D4: je loc_4D43F9;");
    asm("loc_4D43D6: mov (%ecx),%esi;");
    asm("loc_4D43D8: cmp %esi,%edx;");
    asm("loc_4D43DA: je loc_4D43F9;");
    asm("loc_4D43DC: push %esi;");
    asm("loc_4D43DD: push %ecx;");
    asm("loc_4D43DE: push %ebp;");
    asm("loc_4D43DF: push %edx;");
    asm("loc_4D43E0: lea 0x20(%esp),%ecx;");
    asm("loc_4D43E4: call _sub_4D4970;");
    asm("loc_4D43E9: mov 0x18(%esp),%eax;");
    asm("loc_4D43ED: mov 8(%ebp),%ecx;");
    asm("loc_4D43F0: inc %eax;");
    asm("loc_4D43F1: dec %ecx;");
    asm("loc_4D43F2: mov %eax,0x18(%esp);");
    asm("loc_4D43F6: mov %ecx,8(%ebp);");
    asm("loc_4D43F9: xor %edi,%edi;");
    asm("loc_4D43FB: test %ebx,%ebx;");
    asm("loc_4D43FD: mov %edi,0x2C(%esp);");
    asm("loc_4D4401: jbe loc_4D4599;");
    asm("loc_4D4407: lea 0x3C(%esp),%esi;");
    asm("loc_4D440B: nop;");
    asm("loc_4D440C: lea (%esp),%esp;");
    asm("loc_4D4410: mov 4(%esi),%ecx;");
    asm("loc_4D4413: test %ecx,%ecx;");
    asm("loc_4D4415: je loc_4D44DC;");
    asm("loc_4D441B: lea -4(%esi),%ecx;");
    asm("loc_4D441E: lea 0x10(%esp),%edx;");
    asm("loc_4D4422: cmp %ecx,%edx;");
    asm("loc_4D4424: je loc_4D44B4;");
    asm("loc_4D442A: mov (%esi),%ebx;");
    asm("loc_4D442C: mov (%ebx),%ebp;");
    asm("loc_4D442E: lea 0x28(%esp),%eax;");
    asm("loc_4D4432: push %eax;");
    asm("loc_4D4433: lea 0x14(%esp),%ecx;");
    asm("loc_4D4437: call _sub_53E430;");
    asm("loc_4D443C: cmp %ebx,%ebp;");
    asm("loc_4D443E: mov 0x14(%esp),%edx;");
    asm("loc_4D4442: mov 0x28(%esp),%ecx;");
    asm("loc_4D4446: mov %edx,0x34(%esp);");
    asm("loc_4D444A: je loc_4D448A;");
    asm("loc_4D444C: lea (%esp),%esp;");
    asm("loc_4D4450: cmp %edx,%ecx;");
    asm("loc_4D4452: je loc_4D449E;");
    asm("loc_4D4454: flds 0x14(%ecx);");
    asm("loc_4D4457: fcomps 0x14(%ebp);");
    asm("loc_4D445A: fnstsw %ax;");
    asm("loc_4D445C: test $5,%ah;");
    asm("loc_4D445F: jp loc_4D4483;");
    asm("loc_4D4461: mov (%ecx),%edi;");
    asm("loc_4D4463: push %edi;");
    asm("loc_4D4464: push %ecx;");
    asm("loc_4D4465: lea 0x18(%esp),%ecx;");
    asm("loc_4D4469: push %ecx;");
    asm("loc_4D446A: push %ebp;");
    asm("loc_4D446B: lea -4(%esi),%ecx;");
    asm("loc_4D446E: call _sub_4D4970;");
    asm("loc_4D4473: mov 0x34(%esp),%edx;");
    asm("loc_4D4477: mov %edi,%ecx;");
    asm("loc_4D4479: mov 0x2C(%esp),%edi;");
    asm("loc_4D447D: mov %ecx,0x28(%esp);");
    asm("loc_4D4481: jmp loc_4D4486;");
    asm("loc_4D4483: mov (%ebp),%ebp;");
    asm("loc_4D4486: cmp %ebx,%ebp;");
    asm("loc_4D4488: jne loc_4D4450;");
    asm("loc_4D448A: cmp %edx,%ecx;");
    asm("loc_4D448C: je loc_4D449E;");
    asm("loc_4D448E: push %edx;");
    asm("loc_4D448F: push %ecx;");
    asm("loc_4D4490: lea 0x18(%esp),%edx;");
    asm("loc_4D4494: push %edx;");
    asm("loc_4D4495: push %ebx;");
    asm("loc_4D4496: lea -4(%esi),%ecx;");
    asm("loc_4D4499: call _sub_4D4970;");
    asm("loc_4D449E: mov 0x18(%esp),%eax;");
    asm("loc_4D44A2: mov 4(%esi),%ecx;");
    asm("loc_4D44A5: mov 0x30(%esp),%ebp;");
    asm("loc_4D44A9: mov 0x20(%esp),%ebx;");
    asm("loc_4D44AD: add %eax,%ecx;");
    asm("loc_4D44AF: mov %ecx,4(%esi);");
    asm("loc_4D44B2: xor %eax,%eax;");
    asm("loc_4D44B4: mov (%esi),%ecx;");
    asm("loc_4D44B6: mov 0x14(%esp),%edx;");
    asm("loc_4D44BA: mov %edx,(%esi);");
    asm("loc_4D44BC: mov %ecx,0x14(%esp);");
    asm("loc_4D44C0: mov 4(%esi),%ecx;");
    asm("loc_4D44C3: mov %eax,4(%esi);");
    asm("loc_4D44C6: inc %edi;");
    asm("loc_4D44C7: mov %ecx,%eax;");
    asm("loc_4D44C9: add $0xC,%esi;");
    asm("loc_4D44CC: cmp %ebx,%edi;");
    asm("loc_4D44CE: mov %eax,0x18(%esp);");
    asm("loc_4D44D2: mov %edi,0x2C(%esp);");
    asm("loc_4D44D6: jb loc_4D4410;");
    asm("loc_4D44DC: cmp $0xF,%edi;");
    asm("loc_4D44DF: jne loc_4D4599;");
    asm("loc_4D44E5: lea 0x24(%esp),%eax;");
    asm("loc_4D44E9: push %eax;");
    asm("loc_4D44EA: lea 0xF0(%esp),%ecx;");
    asm("loc_4D44F1: call _sub_53E430;");
    asm("loc_4D44F6: mov 0xF0(%esp),%ebx;");
    asm("loc_4D44FD: lea 0x1C(%esp),%ecx;");
    asm("loc_4D4501: push %ecx;");
    asm("loc_4D4502: lea 0x14(%esp),%ecx;");
    asm("loc_4D4506: call _sub_53E430;");
    asm("loc_4D450B: mov 0x24(%esp),%edx;");
    asm("loc_4D450F: cmp %ebx,%edx;");
    asm("loc_4D4511: mov 0x14(%esp),%ebp;");
    asm("loc_4D4515: mov 0x1C(%esp),%ecx;");
    asm("loc_4D4519: je loc_4D455D;");
    asm("loc_4D451B: nop;");
    asm("loc_4D451C: lea (%esp),%esp;");
    asm("loc_4D4520: cmp %ebp,%ecx;");
    asm("loc_4D4522: je loc_4D4575;");
    asm("loc_4D4524: flds 0x14(%ecx);");
    asm("loc_4D4527: fcomps 0x14(%edx);");
    asm("loc_4D452A: fnstsw %ax;");
    asm("loc_4D452C: test $5,%ah;");
    asm("loc_4D452F: jp loc_4D4553;");
    asm("loc_4D4531: mov (%ecx),%esi;");
    asm("loc_4D4533: push %esi;");
    asm("loc_4D4534: push %ecx;");
    asm("loc_4D4535: lea 0x18(%esp),%eax;");
    asm("loc_4D4539: push %eax;");
    asm("loc_4D453A: push %edx;");
    asm("loc_4D453B: lea 0xFC(%esp),%ecx;");
    asm("loc_4D4542: call _sub_4D4970;");
    asm("loc_4D4547: mov 0x24(%esp),%edx;");
    asm("loc_4D454B: mov %esi,%ecx;");
    asm("loc_4D454D: mov %ecx,0x1C(%esp);");
    asm("loc_4D4551: jmp loc_4D4559;");
    asm("loc_4D4553: mov (%edx),%edx;");
    asm("loc_4D4555: mov %edx,0x24(%esp);");
    asm("loc_4D4559: cmp %ebx,%edx;");
    asm("loc_4D455B: jne loc_4D4520;");
    asm("loc_4D455D: cmp %ebp,%ecx;");
    asm("loc_4D455F: je loc_4D4575;");
    asm("loc_4D4561: push %ebp;");
    asm("loc_4D4562: push %ecx;");
    asm("loc_4D4563: lea 0x18(%esp),%ecx;");
    asm("loc_4D4567: push %ecx;");
    asm("loc_4D4568: push %ebx;");
    asm("loc_4D4569: lea 0xFC(%esp),%ecx;");
    asm("loc_4D4570: call _sub_4D4970;");
    asm("loc_4D4575: mov 0x18(%esp),%edx;");
    asm("loc_4D4579: mov 0xF4(%esp),%eax;");
    asm("loc_4D4580: mov 0x30(%esp),%ebp;");
    asm("loc_4D4584: mov 0x20(%esp),%ebx;");
    asm("loc_4D4588: add %edx,%eax;");
    asm("loc_4D458A: mov %eax,0xF4(%esp);");
    asm("loc_4D4591: xor %eax,%eax;");
    asm("loc_4D4593: mov %eax,0x18(%esp);");
    asm("loc_4D4597: jmp loc_4D45B7;");
    asm("loc_4D4599: lea 0x10(%esp),%eax;");
    asm("loc_4D459D: lea (%edi,%edi,2),%ecx;");
    asm("loc_4D45A0: push %eax;");
    asm("loc_4D45A1: lea 0x3C(%esp,%ecx,4),%ecx;");
    asm("loc_4D45A5: call _sub_4D47F0;");
    asm("loc_4D45AA: cmp %ebx,%edi;");
    asm("loc_4D45AC: mov 0x18(%esp),%eax;");
    asm("loc_4D45B0: jne loc_4D45B7;");
    asm("loc_4D45B2: inc %ebx;");
    asm("loc_4D45B3: mov %ebx,0x20(%esp);");
    asm("loc_4D45B7: mov 8(%ebp),%ecx;");
    asm("loc_4D45BA: test %ecx,%ecx;");
    asm("loc_4D45BC: jne loc_4D43C7;");
    asm("loc_4D45C2: test %ebx,%ebx;");
    asm("loc_4D45C4: pop %edi;");
    asm("loc_4D45C5: jbe loc_4D45DE;");
    asm("loc_4D45C7: lea (%ebx,%ebx,2),%edx;");
    asm("loc_4D45CA: lea 0x34(%esp,%edx,4),%esi;");
    asm("loc_4D45CE: mov %edi,%edi;");
    asm("loc_4D45D0: sub $0xC,%esi;");
    asm("loc_4D45D3: push %esi;");
    asm("loc_4D45D4: mov %ebp,%ecx;");
    asm("loc_4D45D6: call _sub_4D4820;");
    asm("loc_4D45DB: dec %ebx;");
    asm("loc_4D45DC: jne loc_4D45D0;");
    asm("loc_4D45DE: push $_sub_4D42E0;");
    asm("loc_4D45E3: push $0x10;");
    asm("loc_4D45E5: push $0xC;");
    asm("loc_4D45E7: lea 0x40(%esp),%eax;");
    asm("loc_4D45EB: push %eax;");
    asm("loc_4D45EC: movb $0,0x10C(%esp);");
    asm("loc_4D45F4: call _sub_5B7EC6;");
    asm("loc_4D45F9: lea 0xC(%esp),%ecx;");
    asm("loc_4D45FD: movl $0xFFFFFFFF,0xFC(%esp);");
    asm("loc_4D4608: call _sub_4D42E0;");
    asm("loc_4D460D: pop %esi;");
    asm("loc_4D460E: pop %ebx;");
    asm("loc_4D460F: mov 0xEC(%esp),%ecx;");
    asm("loc_4D4616: pop %ebp;");
    asm("loc_4D4617: mov %ecx,%fs:0;");
    asm("loc_4D461E: add $0xF4,%esp;");
    asm("loc_4D4624: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4630() // _sub_4D4630
{
    __DEBUG_ASM(4D4630);
    // chunk 0x4D4630 _sub_4D4630
    asm("loc_4D4630: push %ebx;");
    asm("loc_4D4631: mov %ecx,%ebx;");
    asm("loc_4D4633: xor %eax,%eax;");
    asm("loc_4D4635: push %esi;");
    asm("loc_4D4636: mov 0xC(%esp),%esi;");
    asm("loc_4D463A: cmp %eax,%esi;");
    asm("loc_4D463C: mov %eax,8(%ebx);");
    asm("loc_4D463F: mov %al,0xC(%ebx);");
    asm("loc_4D4642: movl $_off_5D6E30,(%ebx);");
    asm("loc_4D4648: mov %eax,4(%ebx);");
    asm("loc_4D464B: jne loc_4D4652;");
    asm("loc_4D464D: mov %al,0xC(%ebx);");
    asm("loc_4D4650: jmp loc_4D4687;");
    asm("loc_4D4652: push %ebp;");
    asm("loc_4D4653: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D4656: xor %eax,%eax;");
    asm("loc_4D4658: push %edi;");
    asm("loc_4D4659: mov %esi,%edi;");
    asm("loc_4D465B: repne scas (%edi),%al;");
    asm("loc_4D465D: not %ecx;");
    asm("loc_4D465F: dec %ecx;");
    asm("loc_4D4660: mov %ecx,%eax;");
    asm("loc_4D4662: cmp $0x20,%eax;");
    asm("loc_4D4665: lea 0xC(%ebx),%ebp;");
    asm("loc_4D4668: jb loc_4D466F;");
    asm("loc_4D466A: mov $0x1F,%eax;");
    asm("loc_4D466F: mov %eax,%ecx;");
    asm("loc_4D4671: mov %ecx,%edx;");
    asm("loc_4D4673: shr $2,%ecx;");
    asm("loc_4D4676: mov %ebp,%edi;");
    asm("loc_4D4678: rep movsl (%esi),(%edi);");
    asm("loc_4D467A: mov %edx,%ecx;");
    asm("loc_4D467C: and $3,%ecx;");
    asm("loc_4D467F: rep movsb (%esi),(%edi);");
    asm("loc_4D4681: pop %edi;");
    asm("loc_4D4682: movb $0,(%eax,%ebp);");
    asm("loc_4D4686: pop %ebp;");
    asm("loc_4D4687: push %ebx;");
    asm("loc_4D4688: mov %eax,8(%ebx);");
    asm("loc_4D468B: call _sub_4C72B0;");
    asm("loc_4D4690: add $4,%esp;");
    asm("loc_4D4693: pop %esi;");
    asm("loc_4D4694: movl $_off_5D7C0C,(%ebx);");
    asm("loc_4D469A: mov %ebx,%eax;");
    asm("loc_4D469C: pop %ebx;");
    asm("loc_4D469D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D46A0() // _sub_4D46A0
{
    __DEBUG_ASM(4D46A0);
    // chunk 0x4D46A0 _sub_4D46A0
    asm("loc_4D46A0: push $0xFFFFFFFF;");
    asm("loc_4D46A2: push $_sub_5BDFAB;");
    asm("loc_4D46A7: mov %fs:0,%eax;");
    asm("loc_4D46AD: push %eax;");
    asm("loc_4D46AE: mov %esp,%fs:0;");
    asm("loc_4D46B5: push %ecx;");
    asm("loc_4D46B6: push $0x478;");
    asm("loc_4D46BB: call _sub_5B7E84;");
    asm("loc_4D46C0: add $4,%esp;");
    asm("loc_4D46C3: mov %eax,(%esp);");
    asm("loc_4D46C7: test %eax,%eax;");
    asm("loc_4D46C9: movl $0,0xC(%esp);");
    asm("loc_4D46D1: je loc_4D46F0;");
    asm("loc_4D46D3: mov 0x14(%esp),%ecx;");
    asm("loc_4D46D7: push %ecx;");
    asm("loc_4D46D8: mov %eax,%ecx;");
    asm("loc_4D46DA: call _sub_4CF390;");
    asm("loc_4D46DF: mov 4(%esp),%ecx;");
    asm("loc_4D46E3: mov %ecx,%fs:0;");
    asm("loc_4D46EA: add $0x10,%esp;");
    asm("loc_4D46ED: ret $4;");
    asm("loc_4D46F0: mov 4(%esp),%ecx;");
    asm("loc_4D46F4: xor %eax,%eax;");
    asm("loc_4D46F6: mov %ecx,%fs:0;");
    asm("loc_4D46FD: add $0x10,%esp;");
    asm("loc_4D4700: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4710() // _sub_4D4710
{
    __DEBUG_ASM(4D4710);
    // chunk 0x4D4710 _sub_4D4710
    asm("loc_4D4710: push %ecx;");
    asm("loc_4D4711: mov 3(%esp),%al;");
    asm("loc_4D4715: push %esi;");
    asm("loc_4D4716: mov %ecx,%esi;");
    asm("loc_4D4718: push $0x24;");
    asm("loc_4D471A: mov %al,(%esi);");
    asm("loc_4D471C: call _sub_5B7E84;");
    asm("loc_4D4721: mov %eax,(%eax);");
    asm("loc_4D4723: mov %eax,4(%eax);");
    asm("loc_4D4726: add $4,%esp;");
    asm("loc_4D4729: mov %eax,4(%esi);");
    asm("loc_4D472C: movl $0,8(%esi);");
    asm("loc_4D4733: pop %esi;");
    asm("loc_4D4734: pop %ecx;");
    asm("loc_4D4735: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4740() // _sub_4D4740
{
    __DEBUG_ASM(4D4740);
    // chunk 0x4D4740 _sub_4D4740
    asm("loc_4D4740: push %ebx;");
    asm("loc_4D4741: mov 0xC(%esp),%ebx;");
    asm("loc_4D4745: push %ebp;");
    asm("loc_4D4746: mov 4(%ebx),%ebp;");
    asm("loc_4D4749: push %esi;");
    asm("loc_4D474A: push %edi;");
    asm("loc_4D474B: push $0x24;");
    asm("loc_4D474D: mov %ecx,%edi;");
    asm("loc_4D474F: call _sub_5B7E84;");
    asm("loc_4D4754: add $4,%esp;");
    asm("loc_4D4757: test %ebp,%ebp;");
    asm("loc_4D4759: mov %eax,%esi;");
    asm("loc_4D475B: mov %ebx,(%esi);");
    asm("loc_4D475D: jne loc_4D4761;");
    asm("loc_4D475F: mov %esi,%ebp;");
    asm("loc_4D4761: mov 0x1C(%esp),%ecx;");
    asm("loc_4D4765: mov %ebp,4(%esi);");
    asm("loc_4D4768: mov %esi,4(%ebx);");
    asm("loc_4D476B: mov 4(%esi),%eax;");
    asm("loc_4D476E: push %ecx;");
    asm("loc_4D476F: lea 8(%esi),%edx;");
    asm("loc_4D4772: push %edx;");
    asm("loc_4D4773: mov %esi,(%eax);");
    asm("loc_4D4775: call _sub_4D49B0;");
    asm("loc_4D477A: mov 8(%edi),%eax;");
    asm("loc_4D477D: add $8,%esp;");
    asm("loc_4D4780: inc %eax;");
    asm("loc_4D4781: mov %eax,8(%edi);");
    asm("loc_4D4784: mov 0x14(%esp),%eax;");
    asm("loc_4D4788: pop %edi;");
    asm("loc_4D4789: mov %esi,(%eax);");
    asm("loc_4D478B: pop %esi;");
    asm("loc_4D478C: pop %ebp;");
    asm("loc_4D478D: pop %ebx;");
    asm("loc_4D478E: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D47A0() // _sub_4D47A0
{
    __DEBUG_ASM(4D47A0);
    // chunk 0x4D47A0 _sub_4D47A0
    asm("loc_4D47A0: push %ebx;");
    asm("loc_4D47A1: push %ebp;");
    asm("loc_4D47A2: mov 0x14(%esp),%ebp;");
    asm("loc_4D47A6: push %edi;");
    asm("loc_4D47A7: mov 0x14(%esp),%edi;");
    asm("loc_4D47AB: cmp %ebp,%edi;");
    asm("loc_4D47AD: mov %ecx,%ebx;");
    asm("loc_4D47AF: je loc_4D47E2;");
    asm("loc_4D47B1: push %esi;");
    asm("loc_4D47B2: mov %edi,%esi;");
    asm("loc_4D47B4: mov 4(%esi),%eax;");
    asm("loc_4D47B7: mov (%esi),%ecx;");
    asm("loc_4D47B9: mov (%edi),%edi;");
    asm("loc_4D47BB: mov %ecx,(%eax);");
    asm("loc_4D47BD: mov (%esi),%edx;");
    asm("loc_4D47BF: mov 4(%esi),%eax;");
    asm("loc_4D47C2: lea 8(%esi),%ecx;");
    asm("loc_4D47C5: mov %eax,4(%edx);");
    asm("loc_4D47C8: call _sub_4D0470;");
    asm("loc_4D47CD: push %esi;");
    asm("loc_4D47CE: call _sub_5B7E1D;");
    asm("loc_4D47D3: mov 8(%ebx),%ecx;");
    asm("loc_4D47D6: add $4,%esp;");
    asm("loc_4D47D9: dec %ecx;");
    asm("loc_4D47DA: cmp %ebp,%edi;");
    asm("loc_4D47DC: mov %ecx,8(%ebx);");
    asm("loc_4D47DF: jne loc_4D47B2;");
    asm("loc_4D47E1: pop %esi;");
    asm("loc_4D47E2: mov 0x10(%esp),%eax;");
    asm("loc_4D47E6: mov %edi,(%eax);");
    asm("loc_4D47E8: pop %edi;");
    asm("loc_4D47E9: pop %ebp;");
    asm("loc_4D47EA: pop %ebx;");
    asm("loc_4D47EB: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D47F0() // _sub_4D47F0
{
    __DEBUG_ASM(4D47F0);
    // chunk 0x4D47F0 _sub_4D47F0
    asm("loc_4D47F0: mov 4(%esp),%eax;");
    asm("loc_4D47F4: mov 4(%ecx),%edx;");
    asm("loc_4D47F7: push %esi;");
    asm("loc_4D47F8: mov 4(%eax),%esi;");
    asm("loc_4D47FB: mov %esi,4(%ecx);");
    asm("loc_4D47FE: mov %edx,4(%eax);");
    asm("loc_4D4801: mov 8(%eax),%esi;");
    asm("loc_4D4804: mov 8(%ecx),%edx;");
    asm("loc_4D4807: mov %esi,8(%ecx);");
    asm("loc_4D480A: mov %edx,8(%eax);");
    asm("loc_4D480D: pop %esi;");
    asm("loc_4D480E: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4820() // _sub_4D4820
{
    __DEBUG_ASM(4D4820);
    // chunk 0x4D4820 _sub_4D4820
    asm("loc_4D4820: sub $8,%esp;");
    asm("loc_4D4823: push %ebp;");
    asm("loc_4D4824: mov 0x10(%esp),%ebp;");
    asm("loc_4D4828: cmp %ecx,%ebp;");
    asm("loc_4D482A: mov %ecx,8(%esp);");
    asm("loc_4D482E: je loc_4D48E9;");
    asm("loc_4D4834: push %ebx;");
    asm("loc_4D4835: mov 4(%ebp),%ebx;");
    asm("loc_4D4838: push %esi;");
    asm("loc_4D4839: mov (%ebx),%esi;");
    asm("loc_4D483B: push %edi;");
    asm("loc_4D483C: mov 4(%ecx),%edi;");
    asm("loc_4D483F: mov (%edi),%edx;");
    asm("loc_4D4841: cmp %edi,%edx;");
    asm("loc_4D4843: je loc_4D489F;");
    asm("loc_4D4845: cmp %ebx,%esi;");
    asm("loc_4D4847: je loc_4D48D4;");
    asm("loc_4D484D: flds 0x14(%esi);");
    asm("loc_4D4850: fcomps 0x14(%edx);");
    asm("loc_4D4853: fnstsw %ax;");
    asm("loc_4D4855: test $5,%ah;");
    asm("loc_4D4858: jp loc_4D4899;");
    asm("loc_4D485A: mov (%esi),%eax;");
    asm("loc_4D485C: mov 4(%eax),%ecx;");
    asm("loc_4D485F: mov %esi,0x10(%esp);");
    asm("loc_4D4863: mov %edx,(%ecx);");
    asm("loc_4D4865: mov 0x10(%esp),%ecx;");
    asm("loc_4D4869: mov 4(%ecx),%ecx;");
    asm("loc_4D486C: mov %eax,(%ecx);");
    asm("loc_4D486E: mov 4(%edx),%ecx;");
    asm("loc_4D4871: mov 0x10(%esp),%esi;");
    asm("loc_4D4875: mov %esi,(%ecx);");
    asm("loc_4D4877: mov 4(%eax),%ecx;");
    asm("loc_4D487A: mov 4(%edx),%esi;");
    asm("loc_4D487D: mov 0x10(%esp),%ebp;");
    asm("loc_4D4881: mov %ecx,4(%edx);");
    asm("loc_4D4884: mov 4(%ebp),%ecx;");
    asm("loc_4D4887: mov %ecx,4(%eax);");
    asm("loc_4D488A: mov 0x14(%esp),%ecx;");
    asm("loc_4D488E: mov %esi,4(%ebp);");
    asm("loc_4D4891: mov 0x1C(%esp),%ebp;");
    asm("loc_4D4895: mov %eax,%esi;");
    asm("loc_4D4897: jmp loc_4D489B;");
    asm("loc_4D4899: mov (%edx),%edx;");
    asm("loc_4D489B: cmp %edi,%edx;");
    asm("loc_4D489D: jne loc_4D4845;");
    asm("loc_4D489F: cmp %ebx,%esi;");
    asm("loc_4D48A1: je loc_4D48D4;");
    asm("loc_4D48A3: mov 4(%ebx),%edx;");
    asm("loc_4D48A6: mov %esi,0x1C(%esp);");
    asm("loc_4D48AA: mov %edi,(%edx);");
    asm("loc_4D48AC: mov 0x1C(%esp),%eax;");
    asm("loc_4D48B0: mov 4(%eax),%edx;");
    asm("loc_4D48B3: mov %ebx,(%edx);");
    asm("loc_4D48B5: mov 4(%edi),%eax;");
    asm("loc_4D48B8: mov 0x1C(%esp),%edx;");
    asm("loc_4D48BC: mov %edx,(%eax);");
    asm("loc_4D48BE: mov 4(%ebx),%edx;");
    asm("loc_4D48C1: mov 4(%edi),%eax;");
    asm("loc_4D48C4: mov %edx,4(%edi);");
    asm("loc_4D48C7: mov 0x1C(%esp),%edx;");
    asm("loc_4D48CB: mov 4(%edx),%esi;");
    asm("loc_4D48CE: mov %esi,4(%ebx);");
    asm("loc_4D48D1: mov %eax,4(%edx);");
    asm("loc_4D48D4: mov 8(%ebp),%eax;");
    asm("loc_4D48D7: mov 8(%ecx),%edx;");
    asm("loc_4D48DA: pop %edi;");
    asm("loc_4D48DB: add %eax,%edx;");
    asm("loc_4D48DD: pop %esi;");
    asm("loc_4D48DE: mov %edx,8(%ecx);");
    asm("loc_4D48E1: movl $0,8(%ebp);");
    asm("loc_4D48E8: pop %ebx;");
    asm("loc_4D48E9: pop %ebp;");
    asm("loc_4D48EA: add $8,%esp;");
    asm("loc_4D48ED: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D48F0() // _sub_4D48F0
{
    __DEBUG_ASM(4D48F0);
    // chunk 0x4D48F0 _sub_4D48F0
    asm("loc_4D48F0: push $0x24;");
    asm("loc_4D48F2: call _sub_5B7E84;");
    asm("loc_4D48F7: mov 8(%esp),%ecx;");
    asm("loc_4D48FB: add $4,%esp;");
    asm("loc_4D48FE: test %ecx,%ecx;");
    asm("loc_4D4900: jne loc_4D4904;");
    asm("loc_4D4902: mov %eax,%ecx;");
    asm("loc_4D4904: mov %ecx,(%eax);");
    asm("loc_4D4906: mov 8(%esp),%ecx;");
    asm("loc_4D490A: test %ecx,%ecx;");
    asm("loc_4D490C: je loc_4D4914;");
    asm("loc_4D490E: mov %ecx,4(%eax);");
    asm("loc_4D4911: ret $8;");
    asm("loc_4D4914: mov %eax,4(%eax);");
    asm("loc_4D4917: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4920() // _unknown_libname_47
{
    __DEBUG_ASM(4D4920);
    // chunk 0x4D4920 _sub_4D4920
    asm("loc_4D4920: mov %ecx,%eax;");
    asm("loc_4D4922: mov 4(%esp),%ecx;");
    asm("loc_4D4926: mov %ecx,(%eax);");
    asm("loc_4D4928: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4930() // _sub_4D4930
{
    __DEBUG_ASM(4D4930);
    // chunk 0x4D4930 _sub_4D4930
    asm("loc_4D4930: push %ebx;");
    asm("loc_4D4931: push %esi;");
    asm("loc_4D4932: mov 0x10(%esp),%esi;");
    asm("loc_4D4936: mov 4(%esi),%eax;");
    asm("loc_4D4939: mov (%esi),%ebx;");
    asm("loc_4D493B: push %edi;");
    asm("loc_4D493C: mov %ecx,%edi;");
    asm("loc_4D493E: mov (%esi),%ecx;");
    asm("loc_4D4940: mov %ecx,(%eax);");
    asm("loc_4D4942: mov (%esi),%edx;");
    asm("loc_4D4944: mov 4(%esi),%eax;");
    asm("loc_4D4947: lea 8(%esi),%ecx;");
    asm("loc_4D494A: mov %eax,4(%edx);");
    asm("loc_4D494D: call _sub_4D0470;");
    asm("loc_4D4952: push %esi;");
    asm("loc_4D4953: call _sub_5B7E1D;");
    asm("loc_4D4958: mov 8(%edi),%eax;");
    asm("loc_4D495B: add $4,%esp;");
    asm("loc_4D495E: dec %eax;");
    asm("loc_4D495F: mov %eax,8(%edi);");
    asm("loc_4D4962: mov 0x10(%esp),%eax;");
    asm("loc_4D4966: pop %edi;");
    asm("loc_4D4967: pop %esi;");
    asm("loc_4D4968: mov %ebx,(%eax);");
    asm("loc_4D496A: pop %ebx;");
    asm("loc_4D496B: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4970() // _sub_4D4970
{
    __DEBUG_ASM(4D4970);
    // chunk 0x4D4970 _sub_4D4970
    asm("loc_4D4970: mov 0x10(%esp),%eax;");
    asm("loc_4D4974: mov 4(%eax),%edx;");
    asm("loc_4D4977: mov 4(%esp),%ecx;");
    asm("loc_4D497B: mov %ecx,(%edx);");
    asm("loc_4D497D: mov 0xC(%esp),%edx;");
    asm("loc_4D4981: mov 4(%edx),%edx;");
    asm("loc_4D4984: mov %eax,(%edx);");
    asm("loc_4D4986: mov 4(%ecx),%edx;");
    asm("loc_4D4989: push %esi;");
    asm("loc_4D498A: mov 0x10(%esp),%esi;");
    asm("loc_4D498E: mov %esi,(%edx);");
    asm("loc_4D4990: mov 4(%eax),%esi;");
    asm("loc_4D4993: mov 4(%ecx),%edx;");
    asm("loc_4D4996: mov %esi,4(%ecx);");
    asm("loc_4D4999: mov 0x10(%esp),%ecx;");
    asm("loc_4D499D: mov 4(%ecx),%esi;");
    asm("loc_4D49A0: mov %esi,4(%eax);");
    asm("loc_4D49A3: mov %edx,4(%ecx);");
    asm("loc_4D49A6: pop %esi;");
    asm("loc_4D49A7: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D49B0() // _sub_4D49B0
{
    __DEBUG_ASM(4D49B0);
    // chunk 0x4D49B0 _sub_4D49B0
    asm("loc_4D49B0: push $0xFFFFFFFF;");
    asm("loc_4D49B2: push $_sub_5BDFDA;");
    asm("loc_4D49B7: mov %fs:0,%eax;");
    asm("loc_4D49BD: push %eax;");
    asm("loc_4D49BE: mov %esp,%fs:0;");
    asm("loc_4D49C5: push %ecx;");
    asm("loc_4D49C6: push %esi;");
    asm("loc_4D49C7: mov 0x18(%esp),%esi;");
    asm("loc_4D49CB: mov %esi,4(%esp);");
    asm("loc_4D49CF: xor %edx,%edx;");
    asm("loc_4D49D1: cmp %edx,%esi;");
    asm("loc_4D49D3: mov %edx,0x10(%esp);");
    asm("loc_4D49D7: je loc_4D4A28;");
    asm("loc_4D49D9: push %edi;");
    asm("loc_4D49DA: mov 0x20(%esp),%edi;");
    asm("loc_4D49DE: mov (%edi),%eax;");
    asm("loc_4D49E0: lea 4(%esi),%ecx;");
    asm("loc_4D49E3: mov %eax,(%esi);");
    asm("loc_4D49E5: mov %ecx,0x20(%esp);");
    asm("loc_4D49E9: mov %edx,(%ecx);");
    asm("loc_4D49EB: mov %edx,4(%ecx);");
    asm("loc_4D49EE: mov 4(%edi),%eax;");
    asm("loc_4D49F1: cmp %edx,%eax;");
    asm("loc_4D49F3: movb $1,0x14(%esp);");
    asm("loc_4D49F8: je loc_4D4A0F;");
    asm("loc_4D49FA: add $0xFFFFFFF8,%eax;");
    asm("loc_4D49FD: cmp %edx,%eax;");
    asm("loc_4D49FF: je loc_4D4A0F;");
    asm("loc_4D4A01: add $8,%eax;");
    asm("loc_4D4A04: cmp %edx,%eax;");
    asm("loc_4D4A06: je loc_4D4A0F;");
    asm("loc_4D4A08: push %eax;");
    asm("loc_4D4A09: calll *_import_5C62A8;");
    asm("loc_4D4A0F: mov 0xC(%edi),%ecx;");
    asm("loc_4D4A12: mov %ecx,0xC(%esi);");
    asm("loc_4D4A15: mov 0x10(%edi),%edx;");
    asm("loc_4D4A18: mov %edx,0x10(%esi);");
    asm("loc_4D4A1B: mov 0x14(%edi),%eax;");
    asm("loc_4D4A1E: mov %eax,0x14(%esi);");
    asm("loc_4D4A21: mov 0x18(%edi),%cl;");
    asm("loc_4D4A24: mov %cl,0x18(%esi);");
    asm("loc_4D4A27: pop %edi;");
    asm("loc_4D4A28: mov 8(%esp),%ecx;");
    asm("loc_4D4A2C: pop %esi;");
    asm("loc_4D4A2D: mov %ecx,%fs:0;");
    asm("loc_4D4A34: add $0x10,%esp;");
    asm("loc_4D4A37: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4A40() // _sub_4D4A40
{
    __DEBUG_ASM(4D4A40);
    // chunk 0x4D4A40 _sub_4D4A40
    asm("loc_4D4A40: push $0xFFFFFFFF;");
    asm("loc_4D4A42: push $_sub_5BDFF9;");
    asm("loc_4D4A47: mov %fs:0,%eax;");
    asm("loc_4D4A4D: push %eax;");
    asm("loc_4D4A4E: mov %esp,%fs:0;");
    asm("loc_4D4A55: push %ecx;");
    asm("loc_4D4A56: push %esi;");
    asm("loc_4D4A57: mov %ecx,%esi;");
    asm("loc_4D4A59: xor %ecx,%ecx;");
    asm("loc_4D4A5B: mov %esi,4(%esp);");
    asm("loc_4D4A5F: mov %ecx,(%esi);");
    asm("loc_4D4A61: mov %ecx,4(%esi);");
    asm("loc_4D4A64: mov 0x18(%esp),%eax;");
    asm("loc_4D4A68: mov (%eax),%eax;");
    asm("loc_4D4A6A: cmp %ecx,%eax;");
    asm("loc_4D4A6C: mov %ecx,0x10(%esp);");
    asm("loc_4D4A70: je loc_4D4A89;");
    asm("loc_4D4A72: add $0xFFFFFFF8,%eax;");
    asm("loc_4D4A75: cmp %ecx,%eax;");
    asm("loc_4D4A77: je loc_4D4A89;");
    asm("loc_4D4A79: add $8,%eax;");
    asm("loc_4D4A7C: cmp %ecx,%eax;");
    asm("loc_4D4A7E: je loc_4D4A89;");
    asm("loc_4D4A80: push %eax;");
    asm("loc_4D4A81: mov %esi,%ecx;");
    asm("loc_4D4A83: calll *_import_5C62A8;");
    asm("loc_4D4A89: mov 8(%esp),%ecx;");
    asm("loc_4D4A8D: mov %esi,%eax;");
    asm("loc_4D4A8F: pop %esi;");
    asm("loc_4D4A90: mov %ecx,%fs:0;");
    asm("loc_4D4A97: add $0x10,%esp;");
    asm("loc_4D4A9A: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4AA0() // _sub_4D4AA0
{
    __DEBUG_ASM(4D4AA0);
    // chunk 0x4D4AA0 _sub_4D4AA0
    asm("loc_4D4AA0: sub $0x38,%ecx;");
    asm("loc_4D4AA3: jmp _sub_4CF5B0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4AB0() // _sub_4D4AB0
{
    __DEBUG_ASM(4D4AB0);
    // chunk 0x4D4AB0 _sub_4D4AB0
    asm("loc_4D4AB0: mov _data_5D7C14,%eax;");
    asm("loc_4D4AB5: mov %eax,_data_674990;");
    asm("loc_4D4ABA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4AC0() // _sub_4D4AC0
{
    __DEBUG_ASM(4D4AC0);
    // chunk 0x4D4AC0 _sub_4D4AC0
    asm("loc_4D4AC0: mov _data_5D7C14,%eax;");
    asm("loc_4D4AC5: mov %eax,_data_67498C;");
    asm("loc_4D4ACA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4AD0() // _sub_4D4AD0
{
    __DEBUG_ASM(4D4AD0);
    // chunk 0x4D4AD0 _sub_4D4AD0
    asm("loc_4D4AD0: mov _data_5D7C18,%eax;");
    asm("loc_4D4AD5: mov %eax,_data_674988;");
    asm("loc_4D4ADA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4AE0() // _sub_4D4AE0
{
    __DEBUG_ASM(4D4AE0);
    // chunk 0x4D4AE0 _sub_4D4AE0
    asm("loc_4D4AE0: movl $0,_data_674984;");
    asm("loc_4D4AEA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4AF0() // _sub_4D4AF0
{
    __DEBUG_ASM(4D4AF0);
    // chunk 0x4D4AF0 _sub_4D4AF0
    asm("loc_4D4AF0: movl $0xFFFFFFFF,_data_674980;");
    asm("loc_4D4AFA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4B00() // _sub_4D4B00
{
    __DEBUG_ASM(4D4B00);
    // chunk 0x4D4B00 _sub_4D4B00
    asm("loc_4D4B00: push $_data_5D7C1C;");
    asm("loc_4D4B05: mov $_data_674954,%ecx;");
    asm("loc_4D4B0A: call _sub_4D5A80;");
    asm("loc_4D4B0F: push $_sub_4D4B20;");
    asm("loc_4D4B14: call _sub_5B7E6C;");
    asm("loc_4D4B19: pop %ecx;");
    asm("loc_4D4B1A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4B20() // _unknown_libname_48
{
    __DEBUG_ASM(4D4B20);
    // chunk 0x4D4B20 _sub_4D4B20
    asm("loc_4D4B20: mov $_data_674954,%ecx;");
    asm("loc_4D4B25: jmp _sub_4CF010;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4B30() // _sub_4D4B30
{
    __DEBUG_ASM(4D4B30);
    // chunk 0x4D4B30 _sub_4D4B30
    asm("loc_4D4B30: push $_data_5D7C24;");
    asm("loc_4D4B35: calll *_import_5C6020;");
    asm("loc_4D4B3B: add $4,%esp;");
    asm("loc_4D4B3E: mov %eax,_data_674950;");
    asm("loc_4D4B43: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4B50() // _sub_4D4B50
{
    __DEBUG_ASM(4D4B50);
    // chunk 0x4D4B50 _sub_4D4B50
    asm("loc_4D4B50: mov 0xC(%esp),%eax;");
    asm("loc_4D4B54: sub $0x10,%esp;");
    asm("loc_4D4B57: push %ebx;");
    asm("loc_4D4B58: push %ebp;");
    asm("loc_4D4B59: mov 0x20(%esp),%ebp;");
    asm("loc_4D4B5D: push %esi;");
    asm("loc_4D4B5E: mov 0x20(%esp),%esi;");
    asm("loc_4D4B62: movl $0,(%ebp);");
    asm("loc_4D4B69: movl $0,(%eax);");
    asm("loc_4D4B6F: mov 0xB0(%esi),%ecx;");
    asm("loc_4D4B75: cmp _data_674950,%ecx;");
    asm("loc_4D4B7B: push %edi;");
    asm("loc_4D4B7C: je loc_4D4C5E;");
    asm("loc_4D4B82: push $0x100;");
    asm("loc_4D4B87: lea 0x14(%esp),%ecx;");
    asm("loc_4D4B8B: calll *_import_5C64F4;");
    asm("loc_4D4B91: mov _import_5C64F0,%ebx;");
    asm("loc_4D4B97: lea 0x10(%esp),%edx;");
    asm("loc_4D4B9B: lea 0xE4(%esi),%edi;");
    asm("loc_4D4BA1: push %edx;");
    asm("loc_4D4BA2: mov %edi,%ecx;");
    asm("loc_4D4BA4: call *%ebx;");
    asm("loc_4D4BA6: test %eax,%eax;");
    asm("loc_4D4BA8: je loc_4D4C5E;");
    asm("loc_4D4BAE: jmp loc_4D4BB4;");
    asm("loc_4D4BB0: mov 0x28(%esp),%ebp;");
    asm("loc_4D4BB4: push %eax;");
    asm("loc_4D4BB5: calll *_import_5C64EC;");
    asm("loc_4D4BBB: mov %eax,%esi;");
    asm("loc_4D4BBD: add $4,%esp;");
    asm("loc_4D4BC0: test %esi,%esi;");
    asm("loc_4D4BC2: je loc_4D4C4D;");
    asm("loc_4D4BC8: mov (%esi),%eax;");
    asm("loc_4D4BCA: mov %esi,%ecx;");
    asm("loc_4D4BCC: calll *0x38(%eax);");
    asm("loc_4D4BCF: flds 0x74(%esi);");
    asm("loc_4D4BD2: fmul %st(1),%st;");
    asm("loc_4D4BD4: call _sub_5B7EC0;");
    asm("loc_4D4BD9: mov %eax,0x24(%esp);");
    asm("loc_4D4BDD: fildl 0x24(%esp);");
    asm("loc_4D4BE1: fstps 0x24(%esp);");
    asm("loc_4D4BE5: fsubs 0x24(%esp);");
    asm("loc_4D4BE9: fcoms _data_5C7474;");
    asm("loc_4D4BEF: fnstsw %ax;");
    asm("loc_4D4BF1: test $5,%ah;");
    asm("loc_4D4BF4: jp loc_4D4BFE;");
    asm("loc_4D4BF6: fstp %st(0);");
    asm("loc_4D4BF8: flds _data_5C7474;");
    asm("loc_4D4BFE: fadds (%ebp);");
    asm("loc_4D4C01: mov %esi,%ecx;");
    asm("loc_4D4C03: fstps (%ebp);");
    asm("loc_4D4C06: mov (%esi),%edx;");
    asm("loc_4D4C08: calll *4(%edx);");
    asm("loc_4D4C0B: test %al,%al;");
    asm("loc_4D4C0D: je loc_4D4C1A;");
    asm("loc_4D4C0F: mov 0x30(%esp),%eax;");
    asm("loc_4D4C13: test %eax,%eax;");
    asm("loc_4D4C15: je loc_4D4C1A;");
    asm("loc_4D4C17: movb $1,(%eax);");
    asm("loc_4D4C1A: mov (%esi),%eax;");
    asm("loc_4D4C1C: mov %esi,%ecx;");
    asm("loc_4D4C1E: calll *0xC(%eax);");
    asm("loc_4D4C21: test %al,%al;");
    asm("loc_4D4C23: je loc_4D4C4D;");
    asm("loc_4D4C25: mov (%esi),%edx;");
    asm("loc_4D4C27: mov %esi,%ecx;");
    asm("loc_4D4C29: calll *0x3C(%edx);");
    asm("loc_4D4C2C: fsubs 0x24(%esp);");
    asm("loc_4D4C30: fcoms _data_5C7474;");
    asm("loc_4D4C36: fnstsw %ax;");
    asm("loc_4D4C38: test $5,%ah;");
    asm("loc_4D4C3B: jp loc_4D4C45;");
    asm("loc_4D4C3D: fstp %st(0);");
    asm("loc_4D4C3F: flds _data_5C7474;");
    asm("loc_4D4C45: mov 0x2C(%esp),%eax;");
    asm("loc_4D4C49: fadds (%eax);");
    asm("loc_4D4C4B: fstps (%eax);");
    asm("loc_4D4C4D: lea 0x10(%esp),%eax;");
    asm("loc_4D4C51: push %eax;");
    asm("loc_4D4C52: mov %edi,%ecx;");
    asm("loc_4D4C54: call *%ebx;");
    asm("loc_4D4C56: test %eax,%eax;");
    asm("loc_4D4C58: jne loc_4D4BB0;");
    asm("loc_4D4C5E: pop %edi;");
    asm("loc_4D4C5F: pop %esi;");
    asm("loc_4D4C60: pop %ebp;");
    asm("loc_4D4C61: pop %ebx;");
    asm("loc_4D4C62: add $0x10,%esp;");
    asm("loc_4D4C65: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4C70() // _sub_4D4C70
{
    __DEBUG_ASM(4D4C70);
    // chunk 0x4D4C70 _sub_4D4C70
    asm("loc_4D4C70: push %esi;");
    asm("loc_4D4C71: mov 8(%esp),%esi;");
    asm("loc_4D4C75: mov 0xB0(%esi),%eax;");
    asm("loc_4D4C7B: push %edi;");
    asm("loc_4D4C7C: push $0;");
    asm("loc_4D4C7E: push %eax;");
    asm("loc_4D4C7F: call _sub_5416C0;");
    asm("loc_4D4C84: mov %eax,%edi;");
    asm("loc_4D4C86: add $8,%esp;");
    asm("loc_4D4C89: test %edi,%edi;");
    asm("loc_4D4C8B: je loc_4D4CB0;");
    asm("loc_4D4C8D: mov (%edi),%edx;");
    asm("loc_4D4C8F: lea 0xC(%esp),%eax;");
    asm("loc_4D4C93: push %eax;");
    asm("loc_4D4C94: mov %edi,%ecx;");
    asm("loc_4D4C96: calll *0x88(%edx);");
    asm("loc_4D4C9C: testl $0x107FFDFF,0xC(%esp);");
    asm("loc_4D4CA4: je loc_4D4CB0;");
    asm("loc_4D4CA6: mov 0xA8(%edi),%al;");
    asm("loc_4D4CAC: test %al,%al;");
    asm("loc_4D4CAE: jne loc_4D4CFA;");
    asm("loc_4D4CB0: mov 0x4C(%esi),%ecx;");
    asm("loc_4D4CB3: and $0x303,%ecx;");
    asm("loc_4D4CB9: cmp $0x303,%ecx;");
    asm("loc_4D4CBF: jne loc_4D4CFA;");
    asm("loc_4D4CC1: push %ebx;");
    asm("loc_4D4CC2: mov %esi,%ecx;");
    asm("loc_4D4CC4: calll *_import_5C64F8;");
    asm("loc_4D4CCA: push $0;");
    asm("loc_4D4CCC: push $0;");
    asm("loc_4D4CCE: lea 0x18(%esp),%edx;");
    asm("loc_4D4CD2: mov %al,%bl;");
    asm("loc_4D4CD4: mov 0xB0(%esi),%eax;");
    asm("loc_4D4CDA: push %edx;");
    asm("loc_4D4CDB: push %eax;");
    asm("loc_4D4CDC: movb $0,0x20(%esp);");
    asm("loc_4D4CE1: call _sub_4C4DA0;");
    asm("loc_4D4CE6: mov 0x20(%esp),%cl;");
    asm("loc_4D4CEA: or %bl,%cl;");
    asm("loc_4D4CEC: add $0x10,%esp;");
    asm("loc_4D4CEF: test $1,%cl;");
    asm("loc_4D4CF2: pop %ebx;");
    asm("loc_4D4CF3: jne loc_4D4CFA;");
    asm("loc_4D4CF5: pop %edi;");
    asm("loc_4D4CF6: mov $1,%al;");
    asm("loc_4D4CF8: pop %esi;");
    asm("loc_4D4CF9: ret;");
    asm("loc_4D4CFA: pop %edi;");
    asm("loc_4D4CFB: xor %al,%al;");
    asm("loc_4D4CFD: pop %esi;");
    asm("loc_4D4CFE: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4D00() // _sub_4D4D00
{
    __DEBUG_ASM(4D4D00);
    // chunk 0x4D4D00 _sub_4D4D00
    asm("loc_4D4D00: push %esi;");
    asm("loc_4D4D01: mov 8(%esp),%esi;");
    asm("loc_4D4D05: test %esi,%esi;");
    asm("loc_4D4D07: je loc_4D4D49;");
    asm("loc_4D4D09: mov 0x4C(%esi),%eax;");
    asm("loc_4D4D0C: and $0x303,%eax;");
    asm("loc_4D4D11: cmp $0x303,%eax;");
    asm("loc_4D4D16: jne loc_4D4D49;");
    asm("loc_4D4D18: push %ebx;");
    asm("loc_4D4D19: mov %esi,%ecx;");
    asm("loc_4D4D1B: calll *_import_5C64F8;");
    asm("loc_4D4D21: mov 0xB0(%esi),%edx;");
    asm("loc_4D4D27: push $0;");
    asm("loc_4D4D29: push $0;");
    asm("loc_4D4D2B: lea 0x14(%esp),%ecx;");
    asm("loc_4D4D2F: push %ecx;");
    asm("loc_4D4D30: push %edx;");
    asm("loc_4D4D31: mov %al,%bl;");
    asm("loc_4D4D33: movb $0,0x1C(%esp);");
    asm("loc_4D4D38: call _sub_4C4DA0;");
    asm("loc_4D4D3D: mov 0x1C(%esp),%al;");
    asm("loc_4D4D41: add $0x10,%esp;");
    asm("loc_4D4D44: or %bl,%al;");
    asm("loc_4D4D46: pop %ebx;");
    asm("loc_4D4D47: pop %esi;");
    asm("loc_4D4D48: ret;");
    asm("loc_4D4D49: mov $1,%al;");
    asm("loc_4D4D4B: pop %esi;");
    asm("loc_4D4D4C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4D50() // _sub_4D4D50
{
    __DEBUG_ASM(4D4D50);
    // chunk 0x4D4D50 _sub_4D4D50
    asm("loc_4D4D50: mov 4(%esp),%eax;");
    asm("loc_4D4D54: mov 0xE0(%eax),%ecx;");
    asm("loc_4D4D5A: test $1,%cl;");
    asm("loc_4D4D5D: mov $0x4A7,%eax;");
    asm("loc_4D4D62: je loc_4D4D6A;");
    asm("loc_4D4D64: mov $0x4A0,%eax;");
    asm("loc_4D4D69: ret;");
    asm("loc_4D4D6A: test $2,%cl;");
    asm("loc_4D4D6D: je loc_4D4D75;");
    asm("loc_4D4D6F: mov $0x4A1,%eax;");
    asm("loc_4D4D74: ret;");
    asm("loc_4D4D75: test $4,%cl;");
    asm("loc_4D4D78: je loc_4D4D80;");
    asm("loc_4D4D7A: mov $0x4A2,%eax;");
    asm("loc_4D4D7F: ret;");
    asm("loc_4D4D80: test $0x8010,%ecx;");
    asm("loc_4D4D86: je loc_4D4D8E;");
    asm("loc_4D4D88: mov $0x4A3,%eax;");
    asm("loc_4D4D8D: ret;");
    asm("loc_4D4D8E: test $0x40,%cl;");
    asm("loc_4D4D91: je loc_4D4D99;");
    asm("loc_4D4D93: mov $0x4A4,%eax;");
    asm("loc_4D4D98: ret;");
    asm("loc_4D4D99: test %cl,%cl;");
    asm("loc_4D4D9B: jns loc_4D4DA3;");
    asm("loc_4D4D9D: mov $0x4A5,%eax;");
    asm("loc_4D4DA2: ret;");
    asm("loc_4D4DA3: test $1,%ch;");
    asm("loc_4D4DA6: je loc_4D4DAD;");
    asm("loc_4D4DA8: mov $0x4A6,%eax;");
    asm("loc_4D4DAD: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4DB0() // _sub_4D4DB0
{
    __DEBUG_ASM(4D4DB0);
    // chunk 0x4D4DB0 _sub_4D4DB0
    asm("loc_4D4DB0: push $0xFFFFFFFF;");
    asm("loc_4D4DB2: push $_sub_5BE045;");
    asm("loc_4D4DB7: mov %fs:0,%eax;");
    asm("loc_4D4DBD: push %eax;");
    asm("loc_4D4DBE: mov %esp,%fs:0;");
    asm("loc_4D4DC5: push %ecx;");
    asm("loc_4D4DC6: push %ebx;");
    asm("loc_4D4DC7: push %ebp;");
    asm("loc_4D4DC8: mov %ecx,%ebp;");
    asm("loc_4D4DCA: push %esi;");
    asm("loc_4D4DCB: xor %esi,%esi;");
    asm("loc_4D4DCD: lea 0x28(%ebp),%ecx;");
    asm("loc_4D4DD0: mov %esi,4(%ebp);");
    asm("loc_4D4DD3: movb $0,8(%ebp);");
    asm("loc_4D4DD7: push %edi;");
    asm("loc_4D4DD8: mov %ebp,0x10(%esp);");
    asm("loc_4D4DDC: mov %esi,(%ecx);");
    asm("loc_4D4DDE: mov %esi,4(%ecx);");
    asm("loc_4D4DE1: movl $_off_5D6EAC,(%ebp);");
    asm("loc_4D4DE8: mov %esi,0x34(%ebp);");
    asm("loc_4D4DEB: cmp %esi,(%ecx);");
    asm("loc_4D4DED: movl $1,0x1C(%esp);");
    asm("loc_4D4DF5: je loc_4D4DFE;");
    asm("loc_4D4DF7: push %esi;");
    asm("loc_4D4DF8: calll *_import_5C62A8;");
    asm("loc_4D4DFE: mov %esi,0x30(%ebp);");
    asm("loc_4D4E01: lea 0x38(%ebp),%ebx;");
    asm("loc_4D4E04: mov %ebx,%ecx;");
    asm("loc_4D4E06: movl $2,0x1C(%esp);");
    asm("loc_4D4E0E: call _sub_59F860;");
    asm("loc_4D4E13: movl $_off_5CBED8,0x364(%ebp);");
    asm("loc_4D4E1D: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D4E20: xor %eax,%eax;");
    asm("loc_4D4E22: mov $_data_5D7C1C,%edi;");
    asm("loc_4D4E27: movl $_off_5D7D0C,(%ebp);");
    asm("loc_4D4E2E: movl $_off_5D7C54,(%ebx);");
    asm("loc_4D4E34: movl $_off_5D7C44,0xB4(%ebp);");
    asm("loc_4D4E3E: movl $_off_5D7C3C,0x364(%ebp);");
    asm("loc_4D4E48: repne scas (%edi),%al;");
    asm("loc_4D4E4A: not %ecx;");
    asm("loc_4D4E4C: dec %ecx;");
    asm("loc_4D4E4D: mov %ecx,%eax;");
    asm("loc_4D4E4F: cmp $0x20,%eax;");
    asm("loc_4D4E52: movb $4,0x1C(%esp);");
    asm("loc_4D4E57: lea 8(%ebp),%edx;");
    asm("loc_4D4E5A: jb loc_4D4E61;");
    asm("loc_4D4E5C: mov $0x1F,%eax;");
    asm("loc_4D4E61: mov %eax,%ecx;");
    asm("loc_4D4E63: mov %edx,%edi;");
    asm("loc_4D4E65: mov %ecx,%edx;");
    asm("loc_4D4E67: shr $2,%ecx;");
    asm("loc_4D4E6A: mov $_data_5D7C1C,%esi;");
    asm("loc_4D4E6F: rep movsl (%esi),(%edi);");
    asm("loc_4D4E71: mov %edx,%ecx;");
    asm("loc_4D4E73: and $3,%ecx;");
    asm("loc_4D4E76: rep movsb (%esi),(%edi);");
    asm("loc_4D4E78: push $0;");
    asm("loc_4D4E7A: movb $0,8(%eax,%ebp);");
    asm("loc_4D4E7F: push $0;");
    asm("loc_4D4E81: mov %ebx,%ecx;");
    asm("loc_4D4E83: mov %eax,4(%ebp);");
    asm("loc_4D4E86: call _sub_4D4FA0;");
    asm("loc_4D4E8B: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D4E8E: xor %eax,%eax;");
    asm("loc_4D4E90: mov $_data_5D7C2C,%edi;");
    asm("loc_4D4E95: repne scas (%edi),%al;");
    asm("loc_4D4E97: not %ecx;");
    asm("loc_4D4E99: dec %ecx;");
    asm("loc_4D4E9A: mov %ecx,%eax;");
    asm("loc_4D4E9C: cmp $0x20,%eax;");
    asm("loc_4D4E9F: lea 0x50(%ebp),%edx;");
    asm("loc_4D4EA2: jb loc_4D4EA9;");
    asm("loc_4D4EA4: mov $0x1F,%eax;");
    asm("loc_4D4EA9: mov %eax,%ecx;");
    asm("loc_4D4EAB: mov %ecx,%ebx;");
    asm("loc_4D4EAD: shr $2,%ecx;");
    asm("loc_4D4EB0: mov $_data_5D7C2C,%esi;");
    asm("loc_4D4EB5: mov %edx,%edi;");
    asm("loc_4D4EB7: rep movsl (%esi),(%edi);");
    asm("loc_4D4EB9: mov %ebx,%ecx;");
    asm("loc_4D4EBB: and $3,%ecx;");
    asm("loc_4D4EBE: rep movsb (%esi),(%edi);");
    asm("loc_4D4EC0: mov 0x14(%esp),%ecx;");
    asm("loc_4D4EC4: movb $0,(%eax,%edx);");
    asm("loc_4D4EC8: mov %eax,0x4C(%ebp);");
    asm("loc_4D4ECB: pop %edi;");
    asm("loc_4D4ECC: pop %esi;");
    asm("loc_4D4ECD: movl $_data_5D7C2C,0x48(%ebp);");
    asm("loc_4D4ED4: movl $0xFFFFFC19,0x37C(%ebp);");
    asm("loc_4D4EDE: movl $0xFFFFFFFF,0x380(%ebp);");
    asm("loc_4D4EE8: mov %ebp,%eax;");
    asm("loc_4D4EEA: pop %ebp;");
    asm("loc_4D4EEB: pop %ebx;");
    asm("loc_4D4EEC: mov %ecx,%fs:0;");
    asm("loc_4D4EF3: add $0x10,%esp;");
    asm("loc_4D4EF6: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4F00() // _sub_4D4F00
{
    __DEBUG_ASM(4D4F00);
    // chunk 0x4D4F00 _sub_4D4F00
    asm("loc_4D4F00: push %esi;");
    asm("loc_4D4F01: mov %ecx,%esi;");
    asm("loc_4D4F03: call _sub_4D4F20;");
    asm("loc_4D4F08: testb $1,8(%esp);");
    asm("loc_4D4F0D: je loc_4D4F18;");
    asm("loc_4D4F0F: push %esi;");
    asm("loc_4D4F10: call _sub_5B7E1D;");
    asm("loc_4D4F15: add $4,%esp;");
    asm("loc_4D4F18: mov %esi,%eax;");
    asm("loc_4D4F1A: pop %esi;");
    asm("loc_4D4F1B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4F20() // _sub_4D4F20
{
    __DEBUG_ASM(4D4F20);
    // chunk 0x4D4F20 _sub_4D4F20
    asm("loc_4D4F20: push $0xFFFFFFFF;");
    asm("loc_4D4F22: push $_sub_5BE07F;");
    asm("loc_4D4F27: mov %fs:0,%eax;");
    asm("loc_4D4F2D: push %eax;");
    asm("loc_4D4F2E: mov %esp,%fs:0;");
    asm("loc_4D4F35: sub $8,%esp;");
    asm("loc_4D4F38: push %esi;");
    asm("loc_4D4F39: mov %ecx,%esi;");
    asm("loc_4D4F3B: mov %esi,8(%esp);");
    asm("loc_4D4F3F: test %esi,%esi;");
    asm("loc_4D4F41: movl $1,0x14(%esp);");
    asm("loc_4D4F49: je loc_4D4F53;");
    asm("loc_4D4F4B: lea 0x364(%esi),%ecx;");
    asm("loc_4D4F51: jmp loc_4D4F55;");
    asm("loc_4D4F53: xor %ecx,%ecx;");
    asm("loc_4D4F55: call _sub_576010;");
    asm("loc_4D4F5A: test %esi,%esi;");
    asm("loc_4D4F5C: movb $0,0x14(%esp);");
    asm("loc_4D4F61: je loc_4D4F68;");
    asm("loc_4D4F63: lea 0x38(%esi),%ecx;");
    asm("loc_4D4F66: jmp loc_4D4F6A;");
    asm("loc_4D4F68: xor %ecx,%ecx;");
    asm("loc_4D4F6A: call _sub_59FA50;");
    asm("loc_4D4F6F: lea 0x28(%esi),%ecx;");
    asm("loc_4D4F72: movl $_off_5D6EAC,(%esi);");
    asm("loc_4D4F78: cmpl $0,(%ecx);");
    asm("loc_4D4F7B: movl $0xFFFFFFFF,0x14(%esp);");
    asm("loc_4D4F83: pop %esi;");
    asm("loc_4D4F84: je loc_4D4F8E;");
    asm("loc_4D4F86: push $0;");
    asm("loc_4D4F88: calll *_import_5C62A8;");
    asm("loc_4D4F8E: mov 8(%esp),%ecx;");
    asm("loc_4D4F92: mov %ecx,%fs:0;");
    asm("loc_4D4F99: add $0x14,%esp;");
    asm("loc_4D4F9C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D4FA0() // _sub_4D4FA0
{
    __DEBUG_ASM(4D4FA0);
    // chunk 0x4D4FA0 _sub_4D4FA0
    asm("loc_4D4FA0: sub $0x24,%esp;");
    asm("loc_4D4FA3: push %esi;");
    asm("loc_4D4FA4: mov %ecx,%esi;");
    asm("loc_4D4FA6: mov (%esi),%eax;");
    asm("loc_4D4FA8: push $0;");
    asm("loc_4D4FAA: push $_data_5D7E10;");
    asm("loc_4D4FAF: calll *0x98(%eax);");
    asm("loc_4D4FB5: lea 4(%esp),%ecx;");
    asm("loc_4D4FB9: push %ecx;");
    asm("loc_4D4FBA: push $0;");
    asm("loc_4D4FBC: push $0;");
    asm("loc_4D4FBE: push $0;");
    asm("loc_4D4FC0: push $1;");
    asm("loc_4D4FC2: push $0;");
    asm("loc_4D4FC4: push $0;");
    asm("loc_4D4FC6: push $1;");
    asm("loc_4D4FC8: push $0;");
    asm("loc_4D4FCA: push $0;");
    asm("loc_4D4FCC: push $0;");
    asm("loc_4D4FCE: lea 0x3C(%esp),%edx;");
    asm("loc_4D4FD2: push %edx;");
    asm("loc_4D4FD3: push $0;");
    asm("loc_4D4FD5: lea 0x50(%esp),%eax;");
    asm("loc_4D4FD9: push %eax;");
    asm("loc_4D4FDA: push $_data_5D7DEC;");
    asm("loc_4D4FDF: push $_data_5D7DE0;");
    asm("loc_4D4FE4: mov %esi,%ecx;");
    asm("loc_4D4FE6: movl $0,0x44(%esp);");
    asm("loc_4D4FEE: movl $0,0x48(%esp);");
    asm("loc_4D4FF6: movl $0,0x4C(%esp);");
    asm("loc_4D4FFE: movl $0,0x50(%esp);");
    asm("loc_4D5006: movl $0,0x54(%esp);");
    asm("loc_4D500E: movl $0,0x58(%esp);");
    asm("loc_4D5016: movl $0x3BA3D70A,0x5C(%esp);");
    asm("loc_4D501E: movl $0xBEBAE148,0x60(%esp);");
    asm("loc_4D5026: movl $0xBF800000,0x64(%esp);");
    asm("loc_4D502E: call _sub_5A0DB0;");
    asm("loc_4D5033: lea 0x1C(%esp),%ecx;");
    asm("loc_4D5037: push %ecx;");
    asm("loc_4D5038: push $0;");
    asm("loc_4D503A: push $0;");
    asm("loc_4D503C: push $0;");
    asm("loc_4D503E: push $1;");
    asm("loc_4D5040: push $0;");
    asm("loc_4D5042: push $0;");
    asm("loc_4D5044: push $1;");
    asm("loc_4D5046: push $0;");
    asm("loc_4D5048: push $0;");
    asm("loc_4D504A: push $0;");
    asm("loc_4D504C: lea 0x3C(%esp),%edx;");
    asm("loc_4D5050: push %edx;");
    asm("loc_4D5051: push $0;");
    asm("loc_4D5053: mov %eax,0x34C(%esi);");
    asm("loc_4D5059: lea 0x38(%esp),%eax;");
    asm("loc_4D505D: push %eax;");
    asm("loc_4D505E: push $_data_5D7DC0;");
    asm("loc_4D5063: push $_data_5D7DB4;");
    asm("loc_4D5068: mov %esi,%ecx;");
    asm("loc_4D506A: movl $0,0x5C(%esp);");
    asm("loc_4D5072: movl $0,0x60(%esp);");
    asm("loc_4D507A: movl $0,0x64(%esp);");
    asm("loc_4D5082: movl $0x3DAE147B,0x50(%esp);");
    asm("loc_4D508A: movl $0x3BB43958,0x54(%esp);");
    asm("loc_4D5092: movl $0,0x58(%esp);");
    asm("loc_4D509A: movl $0x3BA3D70A,0x44(%esp);");
    asm("loc_4D50A2: movl $0xBEC08312,0x48(%esp);");
    asm("loc_4D50AA: movl $0xBF800000,0x4C(%esp);");
    asm("loc_4D50B2: call _sub_5A0DB0;");
    asm("loc_4D50B7: push $0;");
    asm("loc_4D50B9: push $0x470;");
    asm("loc_4D50BE: mov %eax,0x330(%esi);");
    asm("loc_4D50C4: mov (%eax),%edx;");
    asm("loc_4D50C6: push $3;");
    asm("loc_4D50C8: mov %eax,%ecx;");
    asm("loc_4D50CA: calll *0xA8(%edx);");
    asm("loc_4D50D0: movl $0,0x1C(%esp);");
    asm("loc_4D50D8: movl $0,0x20(%esp);");
    asm("loc_4D50E0: movl $0,0x24(%esp);");
    asm("loc_4D50E8: movl $0x3DAE147B,0x10(%esp);");
    asm("loc_4D50F0: movl $0x3BB43958,0x14(%esp);");
    asm("loc_4D50F8: movl $0,0x18(%esp);");
    asm("loc_4D5100: movl $0x3BA3D70A,4(%esp);");
    asm("loc_4D5108: lea 0x1C(%esp),%eax;");
    asm("loc_4D510C: push %eax;");
    asm("loc_4D510D: push $0;");
    asm("loc_4D510F: push $0;");
    asm("loc_4D5111: push $0;");
    asm("loc_4D5113: push $1;");
    asm("loc_4D5115: push $0;");
    asm("loc_4D5117: push $0;");
    asm("loc_4D5119: push $1;");
    asm("loc_4D511B: push $0;");
    asm("loc_4D511D: push $0;");
    asm("loc_4D511F: push $0;");
    asm("loc_4D5121: lea 0x3C(%esp),%ecx;");
    asm("loc_4D5125: push %ecx;");
    asm("loc_4D5126: push $0;");
    asm("loc_4D5128: lea 0x38(%esp),%edx;");
    asm("loc_4D512C: push %edx;");
    asm("loc_4D512D: push $_data_5D7D90;");
    asm("loc_4D5132: push $_data_5D7D84;");
    asm("loc_4D5137: mov %esi,%ecx;");
    asm("loc_4D5139: movl $0xBEBB645A,0x48(%esp);");
    asm("loc_4D5141: movl $0xBF800000,0x4C(%esp);");
    asm("loc_4D5149: call _sub_5A0DB0;");
    asm("loc_4D514E: push $0;");
    asm("loc_4D5150: push $0x471;");
    asm("loc_4D5155: mov %eax,0x334(%esi);");
    asm("loc_4D515B: mov (%eax),%edx;");
    asm("loc_4D515D: push $3;");
    asm("loc_4D515F: mov %eax,%ecx;");
    asm("loc_4D5161: calll *0xA8(%edx);");
    asm("loc_4D5167: lea 0x1C(%esp),%eax;");
    asm("loc_4D516B: push %eax;");
    asm("loc_4D516C: push $0;");
    asm("loc_4D516E: push $0;");
    asm("loc_4D5170: push $0;");
    asm("loc_4D5172: push $1;");
    asm("loc_4D5174: push $0;");
    asm("loc_4D5176: push $0;");
    asm("loc_4D5178: push $1;");
    asm("loc_4D517A: push $0;");
    asm("loc_4D517C: push $0;");
    asm("loc_4D517E: push $0;");
    asm("loc_4D5180: lea 0x3C(%esp),%ecx;");
    asm("loc_4D5184: push %ecx;");
    asm("loc_4D5185: push $0;");
    asm("loc_4D5187: lea 0x38(%esp),%edx;");
    asm("loc_4D518B: push %edx;");
    asm("loc_4D518C: push $_data_5D7D60;");
    asm("loc_4D5191: push $_data_5D7D54;");
    asm("loc_4D5196: mov %esi,%ecx;");
    asm("loc_4D5198: movl $0,0x5C(%esp);");
    asm("loc_4D51A0: movl $0,0x60(%esp);");
    asm("loc_4D51A8: movl $0,0x64(%esp);");
    asm("loc_4D51B0: movl $0x3DAE147B,0x50(%esp);");
    asm("loc_4D51B8: movl $0x3BB43958,0x54(%esp);");
    asm("loc_4D51C0: movl $0,0x58(%esp);");
    asm("loc_4D51C8: movl $0x3BA3D70A,0x44(%esp);");
    asm("loc_4D51D0: movl $0xBEB5C28F,0x48(%esp);");
    asm("loc_4D51D8: movl $0xBF800000,0x4C(%esp);");
    asm("loc_4D51E0: call _sub_5A0DB0;");
    asm("loc_4D51E5: push $0;");
    asm("loc_4D51E7: push $0x3F2;");
    asm("loc_4D51EC: mov %eax,0x338(%esi);");
    asm("loc_4D51F2: mov (%eax),%edx;");
    asm("loc_4D51F4: push $3;");
    asm("loc_4D51F6: mov %eax,%ecx;");
    asm("loc_4D51F8: calll *0xA8(%edx);");
    asm("loc_4D51FE: push $1;");
    asm("loc_4D5200: push $0;");
    asm("loc_4D5202: push $1;");
    asm("loc_4D5204: push $0;");
    asm("loc_4D5206: push $0x3F800000;");
    asm("loc_4D520B: push $0x3CF5C28F;");
    asm("loc_4D5210: push $0x3D656042;");
    asm("loc_4D5215: push $0;");
    asm("loc_4D5217: lea 0x3C(%esp),%eax;");
    asm("loc_4D521B: push %eax;");
    asm("loc_4D521C: movl $0x3DDD2F1B,0x40(%esp);");
    asm("loc_4D5224: movl $0x3C03126F,0x44(%esp);");
    asm("loc_4D522C: movl $0,0x48(%esp);");
    asm("loc_4D5234: push $_data_5D0608;");
    asm("loc_4D5239: push $_data_5D7D44;");
    asm("loc_4D523E: mov %esi,%ecx;");
    asm("loc_4D5240: call _sub_5A0E30;");
    asm("loc_4D5245: push $1;");
    asm("loc_4D5247: push $0;");
    asm("loc_4D5249: push $1;");
    asm("loc_4D524B: push $0;");
    asm("loc_4D524D: push $0x3F800000;");
    asm("loc_4D5252: push $0x3CF5C28F;");
    asm("loc_4D5257: push $0x3D656042;");
    asm("loc_4D525C: push $0;");
    asm("loc_4D525E: lea 0x3C(%esp),%ecx;");
    asm("loc_4D5262: push %ecx;");
    asm("loc_4D5263: push $_data_5D0608;");
    asm("loc_4D5268: push $_data_5D7D38;");
    asm("loc_4D526D: mov %esi,%ecx;");
    asm("loc_4D526F: mov %eax,0x33C(%esi);");
    asm("loc_4D5275: movl $0xBE23D70A,0x48(%esp);");
    asm("loc_4D527D: movl $0x3C03126F,0x4C(%esp);");
    asm("loc_4D5285: movl $0,0x50(%esp);");
    asm("loc_4D528D: call _sub_5A0E30;");
    asm("loc_4D5292: mov %eax,0x340(%esi);");
    asm("loc_4D5298: movl $0x3DCCCCCD,4(%esp);");
    asm("loc_4D52A0: mov 4(%esp),%eax;");
    asm("loc_4D52A4: lea 0xB4(%esi),%edx;");
    asm("loc_4D52AA: mov %eax,(%edx);");
    asm("loc_4D52AC: movl $0x3CA3D70A,8(%esp);");
    asm("loc_4D52B4: mov 8(%esp),%ecx;");
    asm("loc_4D52B8: mov %ecx,4(%edx);");
    asm("loc_4D52BB: movl $0,0xC(%esp);");
    asm("loc_4D52C3: mov 0xC(%esp),%eax;");
    asm("loc_4D52C7: mov %eax,8(%edx);");
    asm("loc_4D52CA: movl $0x3BA3D70A,4(%esp);");
    asm("loc_4D52D2: mov 4(%esp),%edx;");
    asm("loc_4D52D6: lea 0xC0(%esi),%ecx;");
    asm("loc_4D52DC: mov %edx,(%ecx);");
    asm("loc_4D52DE: movl $0,8(%esp);");
    asm("loc_4D52E6: mov 8(%esp),%eax;");
    asm("loc_4D52EA: mov %eax,4(%ecx);");
    asm("loc_4D52ED: movl $0,0xC(%esp);");
    asm("loc_4D52F5: mov 0xC(%esp),%edx;");
    asm("loc_4D52F9: mov %edx,8(%ecx);");
    asm("loc_4D52FC: push $0x6D;");
    asm("loc_4D52FE: lea 0x32C(%esi),%ecx;");
    asm("loc_4D5304: call _sub_5760D0;");
    asm("loc_4D5309: mov (%esi),%eax;");
    asm("loc_4D530B: sub $0xC,%esp;");
    asm("loc_4D530E: movl $0x3BA3D70A,0x10(%esp);");
    asm("loc_4D5316: mov 0x10(%esp),%edx;");
    asm("loc_4D531A: mov %esp,%ecx;");
    asm("loc_4D531C: mov %edx,(%ecx);");
    asm("loc_4D531E: movl $0xBEBAE148,0x14(%esp);");
    asm("loc_4D5326: mov 0x14(%esp),%edx;");
    asm("loc_4D532A: mov %edx,4(%ecx);");
    asm("loc_4D532D: movl $0xBF800000,0x18(%esp);");
    asm("loc_4D5335: mov 0x18(%esp),%edx;");
    asm("loc_4D5339: mov %edx,8(%ecx);");
    asm("loc_4D533C: mov %esi,%ecx;");
    asm("loc_4D533E: calll *0x7C(%eax);");
    asm("loc_4D5341: mov (%esi),%eax;");
    asm("loc_4D5343: lea 0x60(%esi),%ecx;");
    asm("loc_4D5346: push %ecx;");
    asm("loc_4D5347: mov %esi,%ecx;");
    asm("loc_4D5349: calll *0x14(%eax);");
    asm("loc_4D534C: mov 0x30(%esp),%edx;");
    asm("loc_4D5350: mov 0x2C(%esp),%eax;");
    asm("loc_4D5354: push %edx;");
    asm("loc_4D5355: push %eax;");
    asm("loc_4D5356: mov %esi,%ecx;");
    asm("loc_4D5358: call _sub_4B5060;");
    asm("loc_4D535D: test %al,%al;");
    asm("loc_4D535F: setne %al;");
    asm("loc_4D5362: pop %esi;");
    asm("loc_4D5363: add $0x24,%esp;");
    asm("loc_4D5366: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5370() // _sub_4D5370
{
    __DEBUG_ASM(4D5370);
    // chunk 0x4D5370 _sub_4D5370
    asm("loc_4D5370: call _sub_45A740;");
    asm("loc_4D5375: test %al,%al;");
    asm("loc_4D5377: je loc_4D537E;");
    asm("loc_4D5379: xor %al,%al;");
    asm("loc_4D537B: ret $4;");
    asm("loc_4D537E: cmpl $0x6D,4(%esp);");
    asm("loc_4D5383: je loc_4D538A;");
    asm("loc_4D5385: xor %al,%al;");
    asm("loc_4D5387: ret $4;");
    asm("loc_4D538A: mov _data_674AA0,%eax;");
    asm("loc_4D538F: mov 0x4D0(%eax),%cl;");
    asm("loc_4D5395: test %cl,%cl;");
    asm("loc_4D5397: mov _data_674B04,%edx;");
    asm("loc_4D539D: jne loc_4D53DB;");
    asm("loc_4D539F: push %ebx;");
    asm("loc_4D53A0: mov 0x4D0(%edx),%bl;");
    asm("loc_4D53A6: test %bl,%bl;");
    asm("loc_4D53A8: pop %ebx;");
    asm("loc_4D53A9: jne loc_4D53D7;");
    asm("loc_4D53AB: lea 0x384(%eax),%ecx;");
    asm("loc_4D53B1: mov (%ecx),%eax;");
    asm("loc_4D53B3: push $0x6D;");
    asm("loc_4D53B5: calll *(%eax);");
    asm("loc_4D53B7: mov _data_674B04,%ecx;");
    asm("loc_4D53BD: mov 0x384(%ecx),%edx;");
    asm("loc_4D53C3: add $0x384,%ecx;");
    asm("loc_4D53C9: push $0x6D;");
    asm("loc_4D53CB: calll *(%edx);");
    asm("loc_4D53CD: call _sub_45A460;");
    asm("loc_4D53D2: mov $1,%al;");
    asm("loc_4D53D4: ret $4;");
    asm("loc_4D53D7: test %cl,%cl;");
    asm("loc_4D53D9: je loc_4D53ED;");
    asm("loc_4D53DB: lea 0x384(%eax),%ecx;");
    asm("loc_4D53E1: mov (%ecx),%eax;");
    asm("loc_4D53E3: push $0x6D;");
    asm("loc_4D53E5: calll *(%eax);");
    asm("loc_4D53E7: mov _data_674B04,%edx;");
    asm("loc_4D53ED: mov 0x4D0(%edx),%al;");
    asm("loc_4D53F3: test %al,%al;");
    asm("loc_4D53F5: je loc_4D5403;");
    asm("loc_4D53F7: lea 0x384(%edx),%ecx;");
    asm("loc_4D53FD: mov (%ecx),%edx;");
    asm("loc_4D53FF: push $0x6D;");
    asm("loc_4D5401: calll *(%edx);");
    asm("loc_4D5403: call _sub_45A460;");
    asm("loc_4D5408: mov $1,%al;");
    asm("loc_4D540A: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5410() // _sub_4D5410
{
    __DEBUG_ASM(4D5410);
    // chunk 0x4D5410 _sub_4D5410
    asm("loc_4D5410: push $0xFFFFFFFF;");
    asm("loc_4D5412: push $_sub_5BE098;");
    asm("loc_4D5417: mov %fs:0,%eax;");
    asm("loc_4D541D: push %eax;");
    asm("loc_4D541E: mov %esp,%fs:0;");
    asm("loc_4D5425: sub $0x34,%esp;");
    asm("loc_4D5428: fildl _data_610854;");
    asm("loc_4D542E: push %ebx;");
    asm("loc_4D542F: push %ebp;");
    asm("loc_4D5430: push %esi;");
    asm("loc_4D5431: fmull _data_5D7E68;");
    asm("loc_4D5437: push %edi;");
    asm("loc_4D5438: fstps 0x24(%esp);");
    asm("loc_4D543C: fildl _data_610850;");
    asm("loc_4D5442: fmull _data_5D7E60;");
    asm("loc_4D5448: fmull _data_5D7E58;");
    asm("loc_4D544E: call _sub_5B7EC0;");
    asm("loc_4D5453: mov %eax,0x14(%esp);");
    asm("loc_4D5457: fildl 0x14(%esp);");
    asm("loc_4D545B: shl $4,%eax;");
    asm("loc_4D545E: mov %eax,0x10(%esp);");
    asm("loc_4D5462: push %ecx;");
    asm("loc_4D5463: fstl 0x2C(%esp);");
    asm("loc_4D5467: mov %esp,0x1C(%esp);");
    asm("loc_4D546B: fmull _data_5D7E50;");
    asm("loc_4D5471: mov %esp,%esi;");
    asm("loc_4D5473: push $_data_5D7E40;");
    asm("loc_4D5478: fstps 0x28(%esp);");
    asm("loc_4D547C: fildl 0x18(%esp);");
    asm("loc_4D5480: fsts 0x18(%esp);");
    asm("loc_4D5484: fmull _data_5C75E8;");
    asm("loc_4D548A: fstps 0x24(%esp);");
    asm("loc_4D548E: calll *_import_5C6D14;");
    asm("loc_4D5494: add $4,%esp;");
    asm("loc_4D5497: mov %eax,(%esi);");
    asm("loc_4D5499: call _sub_402D30;");
    asm("loc_4D549E: push $0;");
    asm("loc_4D54A0: push $0;");
    asm("loc_4D54A2: push $_data_6101D8;");
    asm("loc_4D54A7: call _sub_402E30;");
    asm("loc_4D54AC: mov %eax,%ebp;");
    asm("loc_4D54AE: mov _data_610850,%eax;");
    asm("loc_4D54B3: cltd;");
    asm("loc_4D54B4: sub %edx,%eax;");
    asm("loc_4D54B6: sar $1,%eax;");
    asm("loc_4D54B8: mov %eax,0x28(%esp);");
    asm("loc_4D54BC: add $0x10,%esp;");
    asm("loc_4D54BF: fildl 0x18(%esp);");
    asm("loc_4D54C3: fsubs 0x1C(%esp);");
    asm("loc_4D54C7: fldl 0x28(%esp);");
    asm("loc_4D54CB: fmull _data_5C75E8;");
    asm("loc_4D54D1: faddp;");
    asm("loc_4D54D3: fstps 0x28(%esp);");
    asm("loc_4D54D7: flds 0x54(%esp);");
    asm("loc_4D54DB: fmull _data_5D7E38;");
    asm("loc_4D54E1: fimull _data_610854;");
    asm("loc_4D54E7: fstps 0x2C(%esp);");
    asm("loc_4D54EB: flds 0x28(%esp);");
    asm("loc_4D54EF: fadds 0x20(%esp);");
    asm("loc_4D54F3: fstps 0x30(%esp);");
    asm("loc_4D54F7: flds 0x24(%esp);");
    asm("loc_4D54FB: fadd %st,%st(0);");
    asm("loc_4D54FD: fadds 0x2C(%esp);");
    asm("loc_4D5501: fstps 0x34(%esp);");
    asm("loc_4D5505: flds 0x10(%esp);");
    asm("loc_4D5509: fmuls 0x5C(%esp);");
    asm("loc_4D550D: fadds 0x28(%esp);");
    asm("loc_4D5511: fstps 0x54(%esp);");
    asm("loc_4D5515: flds 0x30(%esp);");
    asm("loc_4D5519: fcomps 0x54(%esp);");
    asm("loc_4D551D: fnstsw %ax;");
    asm("loc_4D551F: test $0x41,%ah;");
    asm("loc_4D5522: jne loc_4D552C;");
    asm("loc_4D5524: mov 0x54(%esp),%eax;");
    asm("loc_4D5528: mov %eax,0x30(%esp);");
    asm("loc_4D552C: fildl 0x14(%esp);");
    asm("loc_4D5530: movl $0,0x10(%esp);");
    asm("loc_4D5538: fstps 0x5C(%esp);");
    asm("loc_4D553C: lea (%esp),%esp;");
    asm("loc_4D5540: mov 0xC(%ebp),%ebx;");
    asm("loc_4D5543: mov 0x10(%ebp),%ecx;");
    asm("loc_4D5546: lea 1(%ebx),%eax;");
    asm("loc_4D5549: cmp %ecx,%eax;");
    asm("loc_4D554B: mov %eax,0xC(%ebp);");
    asm("loc_4D554E: jle loc_4D5595;");
    asm("loc_4D5550: add $0x20,%eax;");
    asm("loc_4D5553: mov %eax,0x10(%ebp);");
    asm("loc_4D5556: imul $0x2C,%eax;");
    asm("loc_4D5559: push %eax;");
    asm("loc_4D555A: call _sub_5B7E84;");
    asm("loc_4D555F: mov 8(%ebp),%esi;");
    asm("loc_4D5562: add $4,%esp;");
    asm("loc_4D5565: test %esi,%esi;");
    asm("loc_4D5567: mov %eax,0x24(%esp);");
    asm("loc_4D556B: je loc_4D5582;");
    asm("loc_4D556D: mov %ebx,%ecx;");
    asm("loc_4D556F: imul $0x2C,%ecx;");
    asm("loc_4D5572: mov %ecx,%edx;");
    asm("loc_4D5574: shr $2,%ecx;");
    asm("loc_4D5577: mov %eax,%edi;");
    asm("loc_4D5579: rep movsl (%esi),(%edi);");
    asm("loc_4D557B: mov %edx,%ecx;");
    asm("loc_4D557D: and $3,%ecx;");
    asm("loc_4D5580: rep movsb (%esi),(%edi);");
    asm("loc_4D5582: mov 8(%ebp),%eax;");
    asm("loc_4D5585: push %eax;");
    asm("loc_4D5586: call _sub_5B7E1D;");
    asm("loc_4D558B: mov 0x28(%esp),%eax;");
    asm("loc_4D558F: add $4,%esp;");
    asm("loc_4D5592: mov %eax,8(%ebp);");
    asm("loc_4D5595: mov 8(%ebp),%eax;");
    asm("loc_4D5598: imul $0x2C,%ebx;");
    asm("loc_4D559B: flds 0x5C(%esp);");
    asm("loc_4D559F: fadds 0x28(%esp);");
    asm("loc_4D55A3: mov 0x28(%esp),%edx;");
    asm("loc_4D55A7: add %eax,%ebx;");
    asm("loc_4D55A9: mov %ebx,%eax;");
    asm("loc_4D55AB: fsts 0x28(%esp);");
    asm("loc_4D55AF: fcomps 0x54(%esp);");
    asm("loc_4D55B3: mov %eax,%ecx;");
    asm("loc_4D55B5: mov %edx,(%ecx);");
    asm("loc_4D55B7: mov 0x2C(%esp),%edx;");
    asm("loc_4D55BB: mov %edx,4(%ecx);");
    asm("loc_4D55BE: mov 0x30(%esp),%edx;");
    asm("loc_4D55C2: mov %edx,8(%ecx);");
    asm("loc_4D55C5: mov 0x34(%esp),%edx;");
    asm("loc_4D55C9: mov %edx,0xC(%ecx);");
    asm("loc_4D55CC: mov $0x3F800000,%ecx;");
    asm("loc_4D55D1: mov %ecx,0x10(%eax);");
    asm("loc_4D55D4: mov %ecx,0x14(%eax);");
    asm("loc_4D55D7: mov _data_6101DC,%edx;");
    asm("loc_4D55DD: lea 0x18(%eax),%ecx;");
    asm("loc_4D55E0: mov %edx,(%ecx);");
    asm("loc_4D55E2: mov _data_6101E0,%edx;");
    asm("loc_4D55E8: mov %edx,4(%ecx);");
    asm("loc_4D55EB: mov _data_6101E4,%edx;");
    asm("loc_4D55F1: mov %edx,8(%ecx);");
    asm("loc_4D55F4: mov _data_6101E8,%edx;");
    asm("loc_4D55FA: mov %edx,0xC(%ecx);");
    asm("loc_4D55FD: mov 0x58(%esp),%ecx;");
    asm("loc_4D5601: mov %ecx,0x28(%eax);");
    asm("loc_4D5604: fnstsw %ax;");
    asm("loc_4D5606: test $0x41,%ah;");
    asm("loc_4D5609: je loc_4D563C;");
    asm("loc_4D560B: flds 0x5C(%esp);");
    asm("loc_4D560F: fadds 0x30(%esp);");
    asm("loc_4D5613: fsts 0x30(%esp);");
    asm("loc_4D5617: fcomps 0x54(%esp);");
    asm("loc_4D561B: fnstsw %ax;");
    asm("loc_4D561D: test $0x41,%ah;");
    asm("loc_4D5620: jne loc_4D562A;");
    asm("loc_4D5622: mov 0x54(%esp),%edx;");
    asm("loc_4D5626: mov %edx,0x30(%esp);");
    asm("loc_4D562A: mov 0x10(%esp),%eax;");
    asm("loc_4D562E: inc %eax;");
    asm("loc_4D562F: cmp $0x10,%eax;");
    asm("loc_4D5632: mov %eax,0x10(%esp);");
    asm("loc_4D5636: jl loc_4D5540;");
    asm("loc_4D563C: mov _import_5C6DE0,%eax;");
    asm("loc_4D5641: mov (%eax),%eax;");
    asm("loc_4D5643: lea 0x40(%esp),%edx;");
    asm("loc_4D5647: push %edx;");
    asm("loc_4D5648: push $0x17;");
    asm("loc_4D564A: mov %eax,0x40(%esp);");
    asm("loc_4D564E: movl $0x17,0x44(%esp);");
    asm("loc_4D5656: mov (%eax),%ecx;");
    asm("loc_4D5658: push %eax;");
    asm("loc_4D5659: calll *0xF4(%ecx);");
    asm("loc_4D565F: mov 0x3C(%esp),%edx;");
    asm("loc_4D5663: mov 0x38(%esp),%eax;");
    asm("loc_4D5667: mov (%eax),%ecx;");
    asm("loc_4D5669: push $8;");
    asm("loc_4D566B: push %edx;");
    asm("loc_4D566C: push %eax;");
    asm("loc_4D566D: calll *0xF0(%ecx);");
    asm("loc_4D5673: mov _data_674980,%eax;");
    asm("loc_4D5678: mov _import_5C6DE0,%ecx;");
    asm("loc_4D567E: mov (%ecx),%edx;");
    asm("loc_4D5680: push %eax;");
    asm("loc_4D5681: push %edx;");
    asm("loc_4D5682: movl $0,0x54(%esp);");
    asm("loc_4D568A: call _sub_403EA0;");
    asm("loc_4D568F: mov 0x48(%esp),%edx;");
    asm("loc_4D5693: mov 0x40(%esp),%eax;");
    asm("loc_4D5697: mov (%eax),%ecx;");
    asm("loc_4D5699: add $8,%esp;");
    asm("loc_4D569C: push %edx;");
    asm("loc_4D569D: mov 0x40(%esp),%edx;");
    asm("loc_4D56A1: push %edx;");
    asm("loc_4D56A2: push %eax;");
    asm("loc_4D56A3: movl $0xFFFFFFFF,0x58(%esp);");
    asm("loc_4D56AB: calll *0xF0(%ecx);");
    asm("loc_4D56B1: mov 0x44(%esp),%ecx;");
    asm("loc_4D56B5: pop %edi;");
    asm("loc_4D56B6: pop %esi;");
    asm("loc_4D56B7: pop %ebp;");
    asm("loc_4D56B8: mov %ecx,%fs:0;");
    asm("loc_4D56BF: pop %ebx;");
    asm("loc_4D56C0: add $0x40,%esp;");
    asm("loc_4D56C3: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D56D0() // _sub_4D56D0
{
    __DEBUG_ASM(4D56D0);
    // chunk 0x4D56D0 _sub_4D56D0
    asm("loc_4D56D0: sub $0x44,%esp;");
    asm("loc_4D56D3: push %ebx;");
    asm("loc_4D56D4: push %ebp;");
    asm("loc_4D56D5: push %esi;");
    asm("loc_4D56D6: push %edi;");
    asm("loc_4D56D7: mov %ecx,%esi;");
    asm("loc_4D56D9: call _sub_54BD40;");
    asm("loc_4D56DE: test %al,%al;");
    asm("loc_4D56E0: jne loc_4D5A6E;");
    asm("loc_4D56E6: push $6;");
    asm("loc_4D56E8: call _sub_5792B0;");
    asm("loc_4D56ED: add $4,%esp;");
    asm("loc_4D56F0: test %eax,%eax;");
    asm("loc_4D56F2: je loc_4D5A6E;");
    asm("loc_4D56F8: push $0xA;");
    asm("loc_4D56FA: call _sub_5792B0;");
    asm("loc_4D56FF: add $4,%esp;");
    asm("loc_4D5702: test %eax,%eax;");
    asm("loc_4D5704: je loc_4D5A6E;");
    asm("loc_4D570A: call _sub_41DD90;");
    asm("loc_4D570F: test %al,%al;");
    asm("loc_4D5711: je loc_4D5A6E;");
    asm("loc_4D5717: call _sub_54BAF0;");
    asm("loc_4D571C: test %eax,%eax;");
    asm("loc_4D571E: je loc_4D5A6E;");
    asm("loc_4D5724: call _sub_41A3E0;");
    asm("loc_4D5729: test %al,%al;");
    asm("loc_4D572B: jne loc_4D5A6E;");
    asm("loc_4D5731: mov 0x34C(%esi),%ecx;");
    asm("loc_4D5737: mov (%ecx),%eax;");
    asm("loc_4D5739: calll *0x34(%eax);");
    asm("loc_4D573C: mov %esi,%ecx;");
    asm("loc_4D573E: call _sub_5A06A0;");
    asm("loc_4D5743: call _sub_54BAF0;");
    asm("loc_4D5748: mov %eax,%edi;");
    asm("loc_4D574A: test %edi,%edi;");
    asm("loc_4D574C: je loc_4D5A6E;");
    asm("loc_4D5752: mov (%edi),%edx;");
    asm("loc_4D5754: mov %edi,%ecx;");
    asm("loc_4D5756: calll *0x150(%edx);");
    asm("loc_4D575C: mov %eax,%ebx;");
    asm("loc_4D575E: test %ebx,%ebx;");
    asm("loc_4D5760: je loc_4D5A6E;");
    asm("loc_4D5766: mov 0x4C(%ebx),%eax;");
    asm("loc_4D5769: and $0x503,%eax;");
    asm("loc_4D576E: cmp $0x503,%eax;");
    asm("loc_4D5773: jne loc_4D5A6E;");
    asm("loc_4D5779: flds 0x19C(%ebx);");
    asm("loc_4D577F: fcomps _data_5C7474;");
    asm("loc_4D5785: fnstsw %ax;");
    asm("loc_4D5787: test $0x41,%ah;");
    asm("loc_4D578A: jp loc_4D5796;");
    asm("loc_4D578C: movl $0,0x14(%esp);");
    asm("loc_4D5794: jmp loc_4D57A6;");
    asm("loc_4D5796: flds 0x198(%ebx);");
    asm("loc_4D579C: fdivs 0x19C(%ebx);");
    asm("loc_4D57A2: fstps 0x14(%esp);");
    asm("loc_4D57A6: mov 0x14(%esp),%ecx;");
    asm("loc_4D57AA: push %ecx;");
    asm("loc_4D57AB: push $0xFFA7A15E;");
    asm("loc_4D57B0: lea -0x38(%esi),%ebp;");
    asm("loc_4D57B3: push $0x4437C000;");
    asm("loc_4D57B8: mov %ebp,%ecx;");
    asm("loc_4D57BA: call _sub_4D5410;");
    asm("loc_4D57BF: add $0xC,%edi;");
    asm("loc_4D57C2: test %edi,%edi;");
    asm("loc_4D57C4: movl $0,0x10(%esp);");
    asm("loc_4D57CC: movl $0,0x18(%esp);");
    asm("loc_4D57D4: je loc_4D5803;");
    asm("loc_4D57D6: mov 4(%edi),%eax;");
    asm("loc_4D57D9: test %eax,%eax;");
    asm("loc_4D57DB: je loc_4D5803;");
    asm("loc_4D57DD: mov 0x4C(%eax),%edx;");
    asm("loc_4D57E0: and $0x103,%edx;");
    asm("loc_4D57E6: cmp $0x103,%edx;");
    asm("loc_4D57EC: jne loc_4D5803;");
    asm("loc_4D57EE: push $0;");
    asm("loc_4D57F0: lea 0x1C(%esp),%ecx;");
    asm("loc_4D57F4: push %ecx;");
    asm("loc_4D57F5: lea 0x18(%esp),%edx;");
    asm("loc_4D57F9: push %edx;");
    asm("loc_4D57FA: push %eax;");
    asm("loc_4D57FB: call _sub_4D4B50;");
    asm("loc_4D5800: add $0x10,%esp;");
    asm("loc_4D5803: flds 0x10(%esp);");
    asm("loc_4D5807: movl $0,0x14(%esp);");
    asm("loc_4D580F: fcomps _data_5C7474;");
    asm("loc_4D5815: fnstsw %ax;");
    asm("loc_4D5817: test $0x41,%ah;");
    asm("loc_4D581A: jne loc_4D583D;");
    asm("loc_4D581C: flds 0x18(%esp);");
    asm("loc_4D5820: fdivs 0x10(%esp);");
    asm("loc_4D5824: fsts 0x14(%esp);");
    asm("loc_4D5828: fcompl _data_5C89B8;");
    asm("loc_4D582E: fnstsw %ax;");
    asm("loc_4D5830: test $0x41,%ah;");
    asm("loc_4D5833: jne loc_4D583D;");
    asm("loc_4D5835: movl $0x3F800000,0x14(%esp);");
    asm("loc_4D583D: mov 0x14(%esp),%eax;");
    asm("loc_4D5841: push %eax;");
    asm("loc_4D5842: push $0xFF3E3DB5;");
    asm("loc_4D5847: push $0x443A4000;");
    asm("loc_4D584C: mov %ebp,%ecx;");
    asm("loc_4D584E: call _sub_4D5410;");
    asm("loc_4D5853: test %edi,%edi;");
    asm("loc_4D5855: je loc_4D5A6E;");
    asm("loc_4D585B: mov 4(%edi),%edi;");
    asm("loc_4D585E: test %edi,%edi;");
    asm("loc_4D5860: je loc_4D5A6E;");
    asm("loc_4D5866: mov 0x4C(%edi),%ecx;");
    asm("loc_4D5869: and $0x103,%ecx;");
    asm("loc_4D586F: cmp $0x103,%ecx;");
    asm("loc_4D5875: jne loc_4D5A6E;");
    asm("loc_4D587B: mov %edi,%ecx;");
    asm("loc_4D587D: calll *_import_5C6504;");
    asm("loc_4D5883: fstps 0x18(%esp);");
    asm("loc_4D5887: mov 0x18(%esp),%edx;");
    asm("loc_4D588B: push %edx;");
    asm("loc_4D588C: push $0xFF782A33;");
    asm("loc_4D5891: push $0x443CC000;");
    asm("loc_4D5896: mov %ebp,%ecx;");
    asm("loc_4D5898: call _sub_4D5410;");
    asm("loc_4D589D: mov %ebx,%ecx;");
    asm("loc_4D589F: calll *_import_5C64A0;");
    asm("loc_4D58A5: test %al,%al;");
    asm("loc_4D58A7: je loc_4D58DC;");
    asm("loc_4D58A9: mov %ebx,%ecx;");
    asm("loc_4D58AB: calll *_import_5C6500;");
    asm("loc_4D58B1: fcoms _data_5D7E84;");
    asm("loc_4D58B7: fnstsw %ax;");
    asm("loc_4D58B9: test $0x41,%ah;");
    asm("loc_4D58BC: jne loc_4D5944;");
    asm("loc_4D58C2: fcoms _data_5C75DC;");
    asm("loc_4D58C8: fnstsw %ax;");
    asm("loc_4D58CA: test $5,%ah;");
    asm("loc_4D58CD: jp loc_4D5944;");
    asm("loc_4D58CF: fstp %st(0);");
    asm("loc_4D58D1: flds _data_5C75DC;");
    asm("loc_4D58D7: jmp loc_4D5966;");
    asm("loc_4D58DC: flds 0x10(%ebx);");
    asm("loc_4D58DF: mov (%ebx),%eax;");
    asm("loc_4D58E1: fstps 0x1C(%esp);");
    asm("loc_4D58E5: flds 0x1C(%ebx);");
    asm("loc_4D58E8: lea 0x28(%esp),%ecx;");
    asm("loc_4D58EC: fstps 0x20(%esp);");
    asm("loc_4D58F0: flds 0x28(%ebx);");
    asm("loc_4D58F3: push %ecx;");
    asm("loc_4D58F4: fstps 0x28(%esp);");
    asm("loc_4D58F8: mov %ebx,%ecx;");
    asm("loc_4D58FA: calll *0x54(%eax);");
    asm("loc_4D58FD: flds 0x24(%esp);");
    asm("loc_4D5901: fmuls 8(%eax);");
    asm("loc_4D5904: mov %ebx,%ecx;");
    asm("loc_4D5906: flds 0x20(%esp);");
    asm("loc_4D590A: fmuls 4(%eax);");
    asm("loc_4D590D: faddp;");
    asm("loc_4D590F: flds 0x1C(%esp);");
    asm("loc_4D5913: fmuls (%eax);");
    asm("loc_4D5915: faddp;");
    asm("loc_4D5917: fchs;");
    asm("loc_4D5919: fstps 0x18(%esp);");
    asm("loc_4D591D: calll *_import_5C64FC;");
    asm("loc_4D5923: test %al,%al;");
    asm("loc_4D5925: flds 0x18(%esp);");
    asm("loc_4D5929: je loc_4D58B1;");
    asm("loc_4D592B: fcoms _data_5D7E80;");
    asm("loc_4D5931: fnstsw %ax;");
    asm("loc_4D5933: test $0x41,%ah;");
    asm("loc_4D5936: jne loc_4D58B1;");
    asm("loc_4D593C: fstp %st(0);");
    asm("loc_4D593E: flds _data_5D7E80;");
    asm("loc_4D5944: fcoml _data_5D7E78;");
    asm("loc_4D594A: fnstsw %ax;");
    asm("loc_4D594C: test $5,%ah;");
    asm("loc_4D594F: jp loc_4D5966;");
    asm("loc_4D5951: fcoms _data_5C7500;");
    asm("loc_4D5957: fnstsw %ax;");
    asm("loc_4D5959: test $0x41,%ah;");
    asm("loc_4D595C: jne loc_4D5966;");
    asm("loc_4D595E: fstp %st(0);");
    asm("loc_4D5960: flds _data_5C7500;");
    asm("loc_4D5966: call _sub_5B7EC0;");
    asm("loc_4D596B: cmp %eax,0x344(%esi);");
    asm("loc_4D5971: mov _import_5C71EC,%ebp;");
    asm("loc_4D5977: je loc_4D59BF;");
    asm("loc_4D5979: cmp $0x3E7,%eax;");
    asm("loc_4D597E: mov %eax,0x344(%esi);");
    asm("loc_4D5984: jle loc_4D599F;");
    asm("loc_4D5986: mov 0x33C(%esi),%ecx;");
    asm("loc_4D598C: mov (%ecx),%edx;");
    asm("loc_4D598E: push $0;");
    asm("loc_4D5990: push $0x526;");
    asm("loc_4D5995: push $0x1E;");
    asm("loc_4D5997: calll *0xA8(%edx);");
    asm("loc_4D599D: jmp loc_4D59BF;");
    asm("loc_4D599F: push %eax;");
    asm("loc_4D59A0: lea 0x38(%esp),%eax;");
    asm("loc_4D59A4: push $_data_5D7C04;");
    asm("loc_4D59A9: push %eax;");
    asm("loc_4D59AA: call *%ebp;");
    asm("loc_4D59AC: add $0xC,%esp;");
    asm("loc_4D59AF: lea 0x34(%esp),%ecx;");
    asm("loc_4D59B3: push %ecx;");
    asm("loc_4D59B4: mov 0x33C(%esi),%ecx;");
    asm("loc_4D59BA: call _sub_58A580;");
    asm("loc_4D59BF: flds 0x2A4(%ebx);");
    asm("loc_4D59C5: fcomps _data_5C7474;");
    asm("loc_4D59CB: fnstsw %ax;");
    asm("loc_4D59CD: test $0x41,%ah;");
    asm("loc_4D59D0: jp loc_4D59DA;");
    asm("loc_4D59D2: flds _data_5C7474;");
    asm("loc_4D59D8: jmp loc_4D59E6;");
    asm("loc_4D59DA: flds 0x2A0(%ebx);");
    asm("loc_4D59E0: fdivs 0x2A4(%ebx);");
    asm("loc_4D59E6: fmuls _data_5CA230;");
    asm("loc_4D59EC: call _sub_5B7EC0;");
    asm("loc_4D59F1: mov %eax,%edi;");
    asm("loc_4D59F3: cmp %edi,0x348(%esi);");
    asm("loc_4D59F9: je loc_4D5A4E;");
    asm("loc_4D59FB: cmp $0x19,%edi;");
    asm("loc_4D59FE: mov 0x340(%esi),%ecx;");
    asm("loc_4D5A04: mov %edi,0x348(%esi);");
    asm("loc_4D5A0A: push $1;");
    asm("loc_4D5A0C: jge loc_4D5A1F;");
    asm("loc_4D5A0E: mov (%ecx),%edx;");
    asm("loc_4D5A10: push $_data_679BA8;");
    asm("loc_4D5A15: push $0x33;");
    asm("loc_4D5A17: calll *0xA8(%edx);");
    asm("loc_4D5A1D: jmp loc_4D5A2E;");
    asm("loc_4D5A1F: mov (%ecx),%eax;");
    asm("loc_4D5A21: push $_data_679BB0;");
    asm("loc_4D5A26: push $0x33;");
    asm("loc_4D5A28: calll *0xA8(%eax);");
    asm("loc_4D5A2E: push %edi;");
    asm("loc_4D5A2F: lea 0x38(%esp),%ecx;");
    asm("loc_4D5A33: push $_data_5D7E70;");
    asm("loc_4D5A38: push %ecx;");
    asm("loc_4D5A39: call *%ebp;");
    asm("loc_4D5A3B: mov 0x340(%esi),%ecx;");
    asm("loc_4D5A41: add $0xC,%esp;");
    asm("loc_4D5A44: lea 0x34(%esp),%edx;");
    asm("loc_4D5A48: push %edx;");
    asm("loc_4D5A49: call _sub_58A580;");
    asm("loc_4D5A4E: mov 0x33C(%esi),%ecx;");
    asm("loc_4D5A54: mov (%ecx),%eax;");
    asm("loc_4D5A56: calll *0x34(%eax);");
    asm("loc_4D5A59: mov 0x340(%esi),%ecx;");
    asm("loc_4D5A5F: mov (%ecx),%edx;");
    asm("loc_4D5A61: calll *0x34(%edx);");
    asm("loc_4D5A64: mov (%esi),%eax;");
    asm("loc_4D5A66: mov %esi,%ecx;");
    asm("loc_4D5A68: calll *0x9C(%eax);");
    asm("loc_4D5A6E: pop %edi;");
    asm("loc_4D5A6F: pop %esi;");
    asm("loc_4D5A70: pop %ebp;");
    asm("loc_4D5A71: pop %ebx;");
    asm("loc_4D5A72: add $0x44,%esp;");
    asm("loc_4D5A75: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5A80() // _sub_4D5A80
{
    __DEBUG_ASM(4D5A80);
    // chunk 0x4D5A80 _sub_4D5A80
    asm("loc_4D5A80: push %ebx;");
    asm("loc_4D5A81: mov %ecx,%ebx;");
    asm("loc_4D5A83: xor %eax,%eax;");
    asm("loc_4D5A85: push %esi;");
    asm("loc_4D5A86: mov 0xC(%esp),%esi;");
    asm("loc_4D5A8A: cmp %eax,%esi;");
    asm("loc_4D5A8C: mov %eax,8(%ebx);");
    asm("loc_4D5A8F: mov %al,0xC(%ebx);");
    asm("loc_4D5A92: movl $_off_5D6E30,(%ebx);");
    asm("loc_4D5A98: mov %eax,4(%ebx);");
    asm("loc_4D5A9B: jne loc_4D5AA2;");
    asm("loc_4D5A9D: mov %al,0xC(%ebx);");
    asm("loc_4D5AA0: jmp loc_4D5AD7;");
    asm("loc_4D5AA2: push %ebp;");
    asm("loc_4D5AA3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D5AA6: xor %eax,%eax;");
    asm("loc_4D5AA8: push %edi;");
    asm("loc_4D5AA9: mov %esi,%edi;");
    asm("loc_4D5AAB: repne scas (%edi),%al;");
    asm("loc_4D5AAD: not %ecx;");
    asm("loc_4D5AAF: dec %ecx;");
    asm("loc_4D5AB0: mov %ecx,%eax;");
    asm("loc_4D5AB2: cmp $0x20,%eax;");
    asm("loc_4D5AB5: lea 0xC(%ebx),%ebp;");
    asm("loc_4D5AB8: jb loc_4D5ABF;");
    asm("loc_4D5ABA: mov $0x1F,%eax;");
    asm("loc_4D5ABF: mov %eax,%ecx;");
    asm("loc_4D5AC1: mov %ecx,%edx;");
    asm("loc_4D5AC3: shr $2,%ecx;");
    asm("loc_4D5AC6: mov %ebp,%edi;");
    asm("loc_4D5AC8: rep movsl (%esi),(%edi);");
    asm("loc_4D5ACA: mov %edx,%ecx;");
    asm("loc_4D5ACC: and $3,%ecx;");
    asm("loc_4D5ACF: rep movsb (%esi),(%edi);");
    asm("loc_4D5AD1: pop %edi;");
    asm("loc_4D5AD2: movb $0,(%eax,%ebp);");
    asm("loc_4D5AD6: pop %ebp;");
    asm("loc_4D5AD7: push %ebx;");
    asm("loc_4D5AD8: mov %eax,8(%ebx);");
    asm("loc_4D5ADB: call _sub_4C72B0;");
    asm("loc_4D5AE0: add $4,%esp;");
    asm("loc_4D5AE3: pop %esi;");
    asm("loc_4D5AE4: movl $_off_5D7E8C,(%ebx);");
    asm("loc_4D5AEA: mov %ebx,%eax;");
    asm("loc_4D5AEC: pop %ebx;");
    asm("loc_4D5AED: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5AF0() // _sub_4D5AF0
{
    __DEBUG_ASM(4D5AF0);
    // chunk 0x4D5AF0 _sub_4D5AF0
    asm("loc_4D5AF0: push $0xFFFFFFFF;");
    asm("loc_4D5AF2: push $_sub_5BE0BB;");
    asm("loc_4D5AF7: mov %fs:0,%eax;");
    asm("loc_4D5AFD: push %eax;");
    asm("loc_4D5AFE: mov %esp,%fs:0;");
    asm("loc_4D5B05: push %ecx;");
    asm("loc_4D5B06: push $0x388;");
    asm("loc_4D5B0B: call _sub_5B7E84;");
    asm("loc_4D5B10: add $4,%esp;");
    asm("loc_4D5B13: mov %eax,(%esp);");
    asm("loc_4D5B17: test %eax,%eax;");
    asm("loc_4D5B19: movl $0,0xC(%esp);");
    asm("loc_4D5B21: je loc_4D5B40;");
    asm("loc_4D5B23: mov 0x14(%esp),%ecx;");
    asm("loc_4D5B27: push %ecx;");
    asm("loc_4D5B28: mov %eax,%ecx;");
    asm("loc_4D5B2A: call _sub_4D4DB0;");
    asm("loc_4D5B2F: mov 4(%esp),%ecx;");
    asm("loc_4D5B33: mov %ecx,%fs:0;");
    asm("loc_4D5B3A: add $0x10,%esp;");
    asm("loc_4D5B3D: ret $4;");
    asm("loc_4D5B40: mov 4(%esp),%ecx;");
    asm("loc_4D5B44: xor %eax,%eax;");
    asm("loc_4D5B46: mov %ecx,%fs:0;");
    asm("loc_4D5B4D: add $0x10,%esp;");
    asm("loc_4D5B50: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5B60() // _sub_4D5B60
{
    __DEBUG_ASM(4D5B60);
    // chunk 0x4D5B60 _sub_4D5B60
    asm("loc_4D5B60: sub $0x38,%ecx;");
    asm("loc_4D5B63: jmp _sub_4D4F00;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5B70() // _sub_4D5B70
{
    __DEBUG_ASM(4D5B70);
    // chunk 0x4D5B70 _sub_4D5B70
    asm("loc_4D5B70: mov _data_5D7E94,%eax;");
    asm("loc_4D5B75: mov %eax,_data_6749CC;");
    asm("loc_4D5B7A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5B80() // _sub_4D5B80
{
    __DEBUG_ASM(4D5B80);
    // chunk 0x4D5B80 _sub_4D5B80
    asm("loc_4D5B80: mov _data_5D7E94,%eax;");
    asm("loc_4D5B85: mov %eax,_data_6749C8;");
    asm("loc_4D5B8A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5B90() // _sub_4D5B90
{
    __DEBUG_ASM(4D5B90);
    // chunk 0x4D5B90 _sub_4D5B90
    asm("loc_4D5B90: mov _data_5D7E98,%eax;");
    asm("loc_4D5B95: mov %eax,_data_6749C4;");
    asm("loc_4D5B9A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5BA0() // _sub_4D5BA0
{
    __DEBUG_ASM(4D5BA0);
    // chunk 0x4D5BA0 _sub_4D5BA0
    asm("loc_4D5BA0: push $_data_5D7E9C;");
    asm("loc_4D5BA5: mov $_data_674998,%ecx;");
    asm("loc_4D5BAA: call _sub_4D6180;");
    asm("loc_4D5BAF: push $_sub_4D5BC0;");
    asm("loc_4D5BB4: call _sub_5B7E6C;");
    asm("loc_4D5BB9: pop %ecx;");
    asm("loc_4D5BBA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5BC0() // _unknown_libname_49
{
    __DEBUG_ASM(4D5BC0);
    // chunk 0x4D5BC0 _sub_4D5BC0
    asm("loc_4D5BC0: mov $_data_674998,%ecx;");
    asm("loc_4D5BC5: jmp _sub_4CF010;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5BD0() // _sub_4D5BD0
{
    __DEBUG_ASM(4D5BD0);
    // chunk 0x4D5BD0 _sub_4D5BD0
    asm("loc_4D5BD0: push $0xFFFFFFFF;");
    asm("loc_4D5BD2: push $_sub_5BE0F7;");
    asm("loc_4D5BD7: mov %fs:0,%eax;");
    asm("loc_4D5BDD: push %eax;");
    asm("loc_4D5BDE: mov %esp,%fs:0;");
    asm("loc_4D5BE5: push %ecx;");
    asm("loc_4D5BE6: push %ebx;");
    asm("loc_4D5BE7: push %ebp;");
    asm("loc_4D5BE8: mov %ecx,%ebp;");
    asm("loc_4D5BEA: push %esi;");
    asm("loc_4D5BEB: xor %esi,%esi;");
    asm("loc_4D5BED: lea 0x28(%ebp),%ecx;");
    asm("loc_4D5BF0: mov %esi,4(%ebp);");
    asm("loc_4D5BF3: movb $0,8(%ebp);");
    asm("loc_4D5BF7: push %edi;");
    asm("loc_4D5BF8: mov %ebp,0x10(%esp);");
    asm("loc_4D5BFC: mov %esi,(%ecx);");
    asm("loc_4D5BFE: mov %esi,4(%ecx);");
    asm("loc_4D5C01: movl $_off_5D6EAC,(%ebp);");
    asm("loc_4D5C08: mov %esi,0x34(%ebp);");
    asm("loc_4D5C0B: cmp %esi,(%ecx);");
    asm("loc_4D5C0D: movl $1,0x1C(%esp);");
    asm("loc_4D5C15: je loc_4D5C1E;");
    asm("loc_4D5C17: push %esi;");
    asm("loc_4D5C18: calll *_import_5C62A8;");
    asm("loc_4D5C1E: mov %esi,0x30(%ebp);");
    asm("loc_4D5C21: lea 0x38(%ebp),%ebx;");
    asm("loc_4D5C24: mov %ebx,%ecx;");
    asm("loc_4D5C26: movl $2,0x1C(%esp);");
    asm("loc_4D5C2E: call _sub_59F860;");
    asm("loc_4D5C33: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D5C36: xor %eax,%eax;");
    asm("loc_4D5C38: mov $_data_5D7FA0,%edi;");
    asm("loc_4D5C3D: mov %esi,0x364(%ebp);");
    asm("loc_4D5C43: movl $_off_5D7F74,(%ebp);");
    asm("loc_4D5C4A: movl $_off_5D7EBC,(%ebx);");
    asm("loc_4D5C50: movl $_off_5D7EB0,0xB4(%ebp);");
    asm("loc_4D5C5A: mov %si,0x368(%ebp);");
    asm("loc_4D5C61: mov %si,0x3C8(%ebp);");
    asm("loc_4D5C68: repne scas (%edi),%al;");
    asm("loc_4D5C6A: not %ecx;");
    asm("loc_4D5C6C: dec %ecx;");
    asm("loc_4D5C6D: mov %ecx,%eax;");
    asm("loc_4D5C6F: cmp $0x20,%eax;");
    asm("loc_4D5C72: movb $3,0x1C(%esp);");
    asm("loc_4D5C77: lea 8(%ebp),%edx;");
    asm("loc_4D5C7A: jb loc_4D5C81;");
    asm("loc_4D5C7C: mov $0x1F,%eax;");
    asm("loc_4D5C81: mov %eax,%ecx;");
    asm("loc_4D5C83: mov %edx,%edi;");
    asm("loc_4D5C85: mov %ecx,%edx;");
    asm("loc_4D5C87: shr $2,%ecx;");
    asm("loc_4D5C8A: mov $_data_5D7FA0,%esi;");
    asm("loc_4D5C8F: rep movsl (%esi),(%edi);");
    asm("loc_4D5C91: mov %edx,%ecx;");
    asm("loc_4D5C93: and $3,%ecx;");
    asm("loc_4D5C96: rep movsb (%esi),(%edi);");
    asm("loc_4D5C98: push $0;");
    asm("loc_4D5C9A: movb $0,8(%eax,%ebp);");
    asm("loc_4D5C9F: push $0;");
    asm("loc_4D5CA1: mov %ebx,%ecx;");
    asm("loc_4D5CA3: mov %eax,4(%ebp);");
    asm("loc_4D5CA6: call _sub_4D5DB0;");
    asm("loc_4D5CAB: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D5CAE: xor %eax,%eax;");
    asm("loc_4D5CB0: mov $_data_5D7FA0,%edi;");
    asm("loc_4D5CB5: repne scas (%edi),%al;");
    asm("loc_4D5CB7: not %ecx;");
    asm("loc_4D5CB9: dec %ecx;");
    asm("loc_4D5CBA: mov %ecx,%eax;");
    asm("loc_4D5CBC: cmp $0x20,%eax;");
    asm("loc_4D5CBF: lea 0x50(%ebp),%edx;");
    asm("loc_4D5CC2: jb loc_4D5CC9;");
    asm("loc_4D5CC4: mov $0x1F,%eax;");
    asm("loc_4D5CC9: mov %eax,%ecx;");
    asm("loc_4D5CCB: mov %ecx,%ebx;");
    asm("loc_4D5CCD: shr $2,%ecx;");
    asm("loc_4D5CD0: mov $_data_5D7FA0,%esi;");
    asm("loc_4D5CD5: mov %edx,%edi;");
    asm("loc_4D5CD7: rep movsl (%esi),(%edi);");
    asm("loc_4D5CD9: mov %ebx,%ecx;");
    asm("loc_4D5CDB: and $3,%ecx;");
    asm("loc_4D5CDE: rep movsb (%esi),(%edi);");
    asm("loc_4D5CE0: mov 0x14(%esp),%ecx;");
    asm("loc_4D5CE4: movb $0,(%eax,%edx);");
    asm("loc_4D5CE8: mov %eax,0x4C(%ebp);");
    asm("loc_4D5CEB: mov 0xA4(%ebp),%al;");
    asm("loc_4D5CF1: pop %edi;");
    asm("loc_4D5CF2: and $0xFE,%al;");
    asm("loc_4D5CF4: mov %al,0xA4(%ebp);");
    asm("loc_4D5CFA: pop %esi;");
    asm("loc_4D5CFB: movl $_data_5D7FA0,0x48(%ebp);");
    asm("loc_4D5D02: movb $0,0x428(%ebp);");
    asm("loc_4D5D09: mov %ebp,%eax;");
    asm("loc_4D5D0B: pop %ebp;");
    asm("loc_4D5D0C: pop %ebx;");
    asm("loc_4D5D0D: mov %ecx,%fs:0;");
    asm("loc_4D5D14: add $0x10,%esp;");
    asm("loc_4D5D17: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5D20() // _sub_4D5D20
{
    __DEBUG_ASM(4D5D20);
    // chunk 0x4D5D20 _sub_4D5D20
    asm("loc_4D5D20: push %esi;");
    asm("loc_4D5D21: mov %ecx,%esi;");
    asm("loc_4D5D23: call _sub_4D5D40;");
    asm("loc_4D5D28: testb $1,8(%esp);");
    asm("loc_4D5D2D: je loc_4D5D38;");
    asm("loc_4D5D2F: push %esi;");
    asm("loc_4D5D30: call _sub_5B7E1D;");
    asm("loc_4D5D35: add $4,%esp;");
    asm("loc_4D5D38: mov %esi,%eax;");
    asm("loc_4D5D3A: pop %esi;");
    asm("loc_4D5D3B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5D40() // _sub_4D5D40
{
    __DEBUG_ASM(4D5D40);
    // chunk 0x4D5D40 _sub_4D5D40
    asm("loc_4D5D40: push $0xFFFFFFFF;");
    asm("loc_4D5D42: push $_sub_5BE118;");
    asm("loc_4D5D47: mov %fs:0,%eax;");
    asm("loc_4D5D4D: push %eax;");
    asm("loc_4D5D4E: mov %esp,%fs:0;");
    asm("loc_4D5D55: push %ecx;");
    asm("loc_4D5D56: push %esi;");
    asm("loc_4D5D57: mov %ecx,%esi;");
    asm("loc_4D5D59: mov %esi,4(%esp);");
    asm("loc_4D5D5D: test %esi,%esi;");
    asm("loc_4D5D5F: movl $0,0x10(%esp);");
    asm("loc_4D5D67: je loc_4D5D6E;");
    asm("loc_4D5D69: lea 0x38(%esi),%ecx;");
    asm("loc_4D5D6C: jmp loc_4D5D70;");
    asm("loc_4D5D6E: xor %ecx,%ecx;");
    asm("loc_4D5D70: call _sub_59FA50;");
    asm("loc_4D5D75: lea 0x28(%esi),%ecx;");
    asm("loc_4D5D78: movl $_off_5D6EAC,(%esi);");
    asm("loc_4D5D7E: cmpl $0,(%ecx);");
    asm("loc_4D5D81: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4D5D89: pop %esi;");
    asm("loc_4D5D8A: je loc_4D5D94;");
    asm("loc_4D5D8C: push $0;");
    asm("loc_4D5D8E: calll *_import_5C62A8;");
    asm("loc_4D5D94: mov 4(%esp),%ecx;");
    asm("loc_4D5D98: mov %ecx,%fs:0;");
    asm("loc_4D5D9F: add $0x10,%esp;");
    asm("loc_4D5DA2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5DB0() // _sub_4D5DB0
{
    __DEBUG_ASM(4D5DB0);
    // chunk 0x4D5DB0 _sub_4D5DB0
    asm("loc_4D5DB0: sub $0xC,%esp;");
    asm("loc_4D5DB3: push %esi;");
    asm("loc_4D5DB4: push $1;");
    asm("loc_4D5DB6: push $0;");
    asm("loc_4D5DB8: push $1;");
    asm("loc_4D5DBA: push $0;");
    asm("loc_4D5DBC: push $0x3F666666;");
    asm("loc_4D5DC1: push $0x3D23D70A;");
    asm("loc_4D5DC6: push $0x3EF851EC;");
    asm("loc_4D5DCB: push $0;");
    asm("loc_4D5DCD: lea 0x24(%esp),%eax;");
    asm("loc_4D5DD1: push %eax;");
    asm("loc_4D5DD2: push $_data_5D01A8;");
    asm("loc_4D5DD7: push $_data_5D7FB4;");
    asm("loc_4D5DDC: mov %ecx,%esi;");
    asm("loc_4D5DDE: movl $0xBE78D4FE,0x30(%esp);");
    asm("loc_4D5DE6: movl $0xBE86A7F0,0x34(%esp);");
    asm("loc_4D5DEE: movl $0,0x38(%esp);");
    asm("loc_4D5DF6: call _sub_5A0E30;");
    asm("loc_4D5DFB: mov %eax,0x32C(%esi);");
    asm("loc_4D5E01: mov 0x334(%eax),%eax;");
    asm("loc_4D5E07: cmpb $1,0x30(%eax);");
    asm("loc_4D5E0B: je loc_4D5E18;");
    asm("loc_4D5E0D: movb $1,0x30(%eax);");
    asm("loc_4D5E11: movl $0,0x28(%eax);");
    asm("loc_4D5E18: mov (%esi),%edx;");
    asm("loc_4D5E1A: sub $0xC,%esp;");
    asm("loc_4D5E1D: movl $0,0x10(%esp);");
    asm("loc_4D5E25: mov 0x10(%esp),%ecx;");
    asm("loc_4D5E29: mov %esp,%eax;");
    asm("loc_4D5E2B: mov %ecx,(%eax);");
    asm("loc_4D5E2D: movl $0,0x14(%esp);");
    asm("loc_4D5E35: mov 0x14(%esp),%ecx;");
    asm("loc_4D5E39: mov %ecx,4(%eax);");
    asm("loc_4D5E3C: movl $0xBF800000,0x18(%esp);");
    asm("loc_4D5E44: mov 0x18(%esp),%ecx;");
    asm("loc_4D5E48: mov %ecx,8(%eax);");
    asm("loc_4D5E4B: mov %esi,%ecx;");
    asm("loc_4D5E4D: calll *0x7C(%edx);");
    asm("loc_4D5E50: mov _data_67ECA8,%eax;");
    asm("loc_4D5E55: push $0x30;");
    asm("loc_4D5E57: lea 0x330(%esi),%edx;");
    asm("loc_4D5E5D: push %edx;");
    asm("loc_4D5E5E: push $0x585;");
    asm("loc_4D5E63: push %eax;");
    asm("loc_4D5E64: call _sub_4347E0;");
    asm("loc_4D5E69: mov _data_67ECA8,%edx;");
    asm("loc_4D5E6F: push $0x30;");
    asm("loc_4D5E71: lea 0x390(%esi),%ecx;");
    asm("loc_4D5E77: push %ecx;");
    asm("loc_4D5E78: push $0x64F;");
    asm("loc_4D5E7D: push %edx;");
    asm("loc_4D5E7E: call _sub_4347E0;");
    asm("loc_4D5E83: mov 0x38(%esp),%eax;");
    asm("loc_4D5E87: mov 0x34(%esp),%ecx;");
    asm("loc_4D5E8B: add $0x20,%esp;");
    asm("loc_4D5E8E: push %eax;");
    asm("loc_4D5E8F: push %ecx;");
    asm("loc_4D5E90: mov %esi,%ecx;");
    asm("loc_4D5E92: call _sub_4B5060;");
    asm("loc_4D5E97: test %al,%al;");
    asm("loc_4D5E99: setne %al;");
    asm("loc_4D5E9C: pop %esi;");
    asm("loc_4D5E9D: add $0xC,%esp;");
    asm("loc_4D5EA0: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D5EB0() // _sub_4D5EB0
{
    __DEBUG_ASM(4D5EB0);
    // chunk 0x4D5EB0 _sub_4D5EB0
    asm("loc_4D5EB0: sub $0x88,%esp;");
    asm("loc_4D5EB6: push %esi;");
    asm("loc_4D5EB7: push %edi;");
    asm("loc_4D5EB8: push $6;");
    asm("loc_4D5EBA: mov %ecx,%esi;");
    asm("loc_4D5EBC: call _sub_5792B0;");
    asm("loc_4D5EC1: add $4,%esp;");
    asm("loc_4D5EC4: test %eax,%eax;");
    asm("loc_4D5EC6: je loc_4D60E8;");
    asm("loc_4D5ECC: push $0xA;");
    asm("loc_4D5ECE: call _sub_5792B0;");
    asm("loc_4D5ED3: add $4,%esp;");
    asm("loc_4D5ED6: test %eax,%eax;");
    asm("loc_4D5ED8: je loc_4D60E8;");
    asm("loc_4D5EDE: call _sub_54BAF0;");
    asm("loc_4D5EE3: mov %eax,%edi;");
    asm("loc_4D5EE5: test %edi,%edi;");
    asm("loc_4D5EE7: je loc_4D60E8;");
    asm("loc_4D5EED: call _sub_41DD90;");
    asm("loc_4D5EF2: test %al,%al;");
    asm("loc_4D5EF4: je loc_4D60E8;");
    asm("loc_4D5EFA: call _sub_41A3E0;");
    asm("loc_4D5EFF: test %al,%al;");
    asm("loc_4D5F01: jne loc_4D60E8;");
    asm("loc_4D5F07: mov (%edi),%eax;");
    asm("loc_4D5F09: mov %edi,%ecx;");
    asm("loc_4D5F0B: calll *0x150(%eax);");
    asm("loc_4D5F11: test %eax,%eax;");
    asm("loc_4D5F13: je loc_4D60E8;");
    asm("loc_4D5F19: mov 0x4C(%eax),%ecx;");
    asm("loc_4D5F1C: and $0x503,%ecx;");
    asm("loc_4D5F22: cmp $0x503,%ecx;");
    asm("loc_4D5F28: jne loc_4D60E8;");
    asm("loc_4D5F2E: push $0x20000;");
    asm("loc_4D5F33: lea 0xE4(%eax),%ecx;");
    asm("loc_4D5F39: calll *_import_5C649C;");
    asm("loc_4D5F3F: push %eax;");
    asm("loc_4D5F40: calll *_import_5C6498;");
    asm("loc_4D5F46: mov %eax,%edi;");
    asm("loc_4D5F48: add $4,%esp;");
    asm("loc_4D5F4B: test %edi,%edi;");
    asm("loc_4D5F4D: je loc_4D60E8;");
    asm("loc_4D5F53: mov 0x54(%edi),%al;");
    asm("loc_4D5F56: test %al,%al;");
    asm("loc_4D5F58: je loc_4D60D6;");
    asm("loc_4D5F5E: mov %edi,%ecx;");
    asm("loc_4D5F60: calll *_import_5C6508;");
    asm("loc_4D5F66: flds 0x80(%eax);");
    asm("loc_4D5F6C: fcoms _data_5C7474;");
    asm("loc_4D5F72: fnstsw %ax;");
    asm("loc_4D5F74: test $0x44,%ah;");
    asm("loc_4D5F77: jnp loc_4D60E6;");
    asm("loc_4D5F7D: mov 0x50(%edi),%edx;");
    asm("loc_4D5F80: mov %edx,0xC(%esp);");
    asm("loc_4D5F84: flds 0xC(%esp);");
    asm("loc_4D5F88: fdiv %st(1),%st;");
    asm("loc_4D5F8A: fstps 8(%esp);");
    asm("loc_4D5F8E: fstp %st(0);");
    asm("loc_4D5F90: flds 8(%esp);");
    asm("loc_4D5F94: fcomps _data_5C7474;");
    asm("loc_4D5F9A: fnstsw %ax;");
    asm("loc_4D5F9C: test $5,%ah;");
    asm("loc_4D5F9F: jp loc_4D602F;");
    asm("loc_4D5FA5: mov 0x32C(%esi),%ecx;");
    asm("loc_4D5FAB: push $0;");
    asm("loc_4D5FAD: push $0;");
    asm("loc_4D5FAF: movb $0,0x3F0(%esi);");
    asm("loc_4D5FB6: call _sub_58AD70;");
    asm("loc_4D5FBB: mov 0x32C(%esi),%ecx;");
    asm("loc_4D5FC1: mov (%ecx),%eax;");
    asm("loc_4D5FC3: push $1;");
    asm("loc_4D5FC5: push $_data_679BA8;");
    asm("loc_4D5FCA: push $0x33;");
    asm("loc_4D5FCC: calll *0xA8(%eax);");
    asm("loc_4D5FD2: flds 0xC(%esp);");
    asm("loc_4D5FD6: fchs;");
    asm("loc_4D5FD8: sub $8,%esp;");
    asm("loc_4D5FDB: fstpl (%esp);");
    asm("loc_4D5FDE: calll *_import_5C712C;");
    asm("loc_4D5FE4: call _sub_5B7EC0;");
    asm("loc_4D5FE9: push %eax;");
    asm("loc_4D5FEA: lea 0x390(%esi),%ecx;");
    asm("loc_4D5FF0: push %ecx;");
    asm("loc_4D5FF1: lea 0x20(%esp),%edx;");
    asm("loc_4D5FF5: push $_data_5D7FDC;");
    asm("loc_4D5FFA: push %edx;");
    asm("loc_4D5FFB: calll *_import_5C70EC;");
    asm("loc_4D6001: mov 0x32C(%esi),%ecx;");
    asm("loc_4D6007: mov (%ecx),%eax;");
    asm("loc_4D6009: add $0x18,%esp;");
    asm("loc_4D600C: push $0;");
    asm("loc_4D600E: lea 0x14(%esp),%edx;");
    asm("loc_4D6012: push %edx;");
    asm("loc_4D6013: push $0x1D;");
    asm("loc_4D6015: calll *0xA8(%eax);");
    asm("loc_4D601B: mov 0x32C(%esi),%ecx;");
    asm("loc_4D6021: mov (%ecx),%eax;");
    asm("loc_4D6023: calll *0x34(%eax);");
    asm("loc_4D6026: pop %edi;");
    asm("loc_4D6027: pop %esi;");
    asm("loc_4D6028: add $0x88,%esp;");
    asm("loc_4D602E: ret;");
    asm("loc_4D602F: flds 8(%esp);");
    asm("loc_4D6033: fcomps _data_5C75DC;");
    asm("loc_4D6039: fnstsw %ax;");
    asm("loc_4D603B: test $5,%ah;");
    asm("loc_4D603E: jp loc_4D60E8;");
    asm("loc_4D6044: mov 0x3F0(%esi),%al;");
    asm("loc_4D604A: test %al,%al;");
    asm("loc_4D604C: sete %cl;");
    asm("loc_4D604F: push %ecx;");
    asm("loc_4D6050: mov 0x32C(%esi),%ecx;");
    asm("loc_4D6056: push $1;");
    asm("loc_4D6058: call _sub_58AD70;");
    asm("loc_4D605D: mov 0x32C(%esi),%ecx;");
    asm("loc_4D6063: push $1;");
    asm("loc_4D6065: push $_data_679BB0;");
    asm("loc_4D606A: movb $1,0x3F0(%esi);");
    asm("loc_4D6071: mov (%ecx),%edx;");
    asm("loc_4D6073: push $0x33;");
    asm("loc_4D6075: calll *0xA8(%edx);");
    asm("loc_4D607B: flds 8(%esp);");
    asm("loc_4D607F: fmuls _data_5CA230;");
    asm("loc_4D6085: faddl _data_5C75E8;");
    asm("loc_4D608B: call _sub_5B7EC0;");
    asm("loc_4D6090: push %eax;");
    asm("loc_4D6091: lea 0x330(%esi),%eax;");
    asm("loc_4D6097: push %eax;");
    asm("loc_4D6098: lea 0x18(%esp),%ecx;");
    asm("loc_4D609C: push $_data_5D7FC8;");
    asm("loc_4D60A1: push %ecx;");
    asm("loc_4D60A2: calll *_import_5C70EC;");
    asm("loc_4D60A8: mov 0x32C(%esi),%ecx;");
    asm("loc_4D60AE: mov (%ecx),%edx;");
    asm("loc_4D60B0: add $0x10,%esp;");
    asm("loc_4D60B3: push $0;");
    asm("loc_4D60B5: lea 0x14(%esp),%eax;");
    asm("loc_4D60B9: push %eax;");
    asm("loc_4D60BA: push $0x1D;");
    asm("loc_4D60BC: calll *0xA8(%edx);");
    asm("loc_4D60C2: mov 0x32C(%esi),%ecx;");
    asm("loc_4D60C8: mov (%ecx),%edx;");
    asm("loc_4D60CA: calll *0x34(%edx);");
    asm("loc_4D60CD: pop %edi;");
    asm("loc_4D60CE: pop %esi;");
    asm("loc_4D60CF: add $0x88,%esp;");
    asm("loc_4D60D5: ret;");
    asm("loc_4D60D6: pop %edi;");
    asm("loc_4D60D7: movb $0,0x3F0(%esi);");
    asm("loc_4D60DE: pop %esi;");
    asm("loc_4D60DF: add $0x88,%esp;");
    asm("loc_4D60E5: ret;");
    asm("loc_4D60E6: fstp %st(0);");
    asm("loc_4D60E8: pop %edi;");
    asm("loc_4D60E9: pop %esi;");
    asm("loc_4D60EA: add $0x88,%esp;");
    asm("loc_4D60F0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6100() // _sub_4D6100
{
    __DEBUG_ASM(4D6100);
    // chunk 0x4D6100 _sub_4D6100
    asm("loc_4D6100: push %esi;");
    asm("loc_4D6101: mov %ecx,%esi;");
    asm("loc_4D6103: call _sub_41DD90;");
    asm("loc_4D6108: test %al,%al;");
    asm("loc_4D610A: je loc_4D612A;");
    asm("loc_4D610C: call _sub_54BAF0;");
    asm("loc_4D6111: test %eax,%eax;");
    asm("loc_4D6113: je loc_4D612A;");
    asm("loc_4D6115: push $0;");
    asm("loc_4D6117: mov %esi,%ecx;");
    asm("loc_4D6119: call _sub_5A0C30;");
    asm("loc_4D611E: orb $1,0x6C(%esi);");
    asm("loc_4D6122: mov %esi,%ecx;");
    asm("loc_4D6124: pop %esi;");
    asm("loc_4D6125: jmp _sub_5A17B0;");
    asm("loc_4D612A: push $1;");
    asm("loc_4D612C: mov %esi,%ecx;");
    asm("loc_4D612E: call _sub_5A0C30;");
    asm("loc_4D6133: mov %esi,%ecx;");
    asm("loc_4D6135: pop %esi;");
    asm("loc_4D6136: jmp _sub_5A17B0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6140() // _sub_4D6140
{
    __DEBUG_ASM(4D6140);
    // chunk 0x4D6140 _sub_4D6140
    asm("loc_4D6140: push %esi;");
    asm("loc_4D6141: mov %ecx,%esi;");
    asm("loc_4D6143: call _sub_41DD90;");
    asm("loc_4D6148: test %al,%al;");
    asm("loc_4D614A: je loc_4D615E;");
    asm("loc_4D614C: call _sub_54BAF0;");
    asm("loc_4D6151: test %eax,%eax;");
    asm("loc_4D6153: je loc_4D615E;");
    asm("loc_4D6155: push $0;");
    asm("loc_4D6157: mov %esi,%ecx;");
    asm("loc_4D6159: call _sub_5A0C30;");
    asm("loc_4D615E: mov 0xC(%esi),%esi;");
    asm("loc_4D6161: test %esi,%esi;");
    asm("loc_4D6163: je loc_4D6179;");
    asm("loc_4D6165: testb $1,0x6C(%esi);");
    asm("loc_4D6169: jne loc_4D6172;");
    asm("loc_4D616B: mov (%esi),%eax;");
    asm("loc_4D616D: mov %esi,%ecx;");
    asm("loc_4D616F: calll *0x30(%eax);");
    asm("loc_4D6172: mov 8(%esi),%esi;");
    asm("loc_4D6175: test %esi,%esi;");
    asm("loc_4D6177: jne loc_4D6165;");
    asm("loc_4D6179: pop %esi;");
    asm("loc_4D617A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6180() // _sub_4D6180
{
    __DEBUG_ASM(4D6180);
    // chunk 0x4D6180 _sub_4D6180
    asm("loc_4D6180: push %ebx;");
    asm("loc_4D6181: mov %ecx,%ebx;");
    asm("loc_4D6183: xor %eax,%eax;");
    asm("loc_4D6185: push %esi;");
    asm("loc_4D6186: mov 0xC(%esp),%esi;");
    asm("loc_4D618A: cmp %eax,%esi;");
    asm("loc_4D618C: mov %eax,8(%ebx);");
    asm("loc_4D618F: mov %al,0xC(%ebx);");
    asm("loc_4D6192: movl $_off_5D6E30,(%ebx);");
    asm("loc_4D6198: mov %eax,4(%ebx);");
    asm("loc_4D619B: jne loc_4D61A2;");
    asm("loc_4D619D: mov %al,0xC(%ebx);");
    asm("loc_4D61A0: jmp loc_4D61D7;");
    asm("loc_4D61A2: push %ebp;");
    asm("loc_4D61A3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D61A6: xor %eax,%eax;");
    asm("loc_4D61A8: push %edi;");
    asm("loc_4D61A9: mov %esi,%edi;");
    asm("loc_4D61AB: repne scas (%edi),%al;");
    asm("loc_4D61AD: not %ecx;");
    asm("loc_4D61AF: dec %ecx;");
    asm("loc_4D61B0: mov %ecx,%eax;");
    asm("loc_4D61B2: cmp $0x20,%eax;");
    asm("loc_4D61B5: lea 0xC(%ebx),%ebp;");
    asm("loc_4D61B8: jb loc_4D61BF;");
    asm("loc_4D61BA: mov $0x1F,%eax;");
    asm("loc_4D61BF: mov %eax,%ecx;");
    asm("loc_4D61C1: mov %ecx,%edx;");
    asm("loc_4D61C3: shr $2,%ecx;");
    asm("loc_4D61C6: mov %ebp,%edi;");
    asm("loc_4D61C8: rep movsl (%esi),(%edi);");
    asm("loc_4D61CA: mov %edx,%ecx;");
    asm("loc_4D61CC: and $3,%ecx;");
    asm("loc_4D61CF: rep movsb (%esi),(%edi);");
    asm("loc_4D61D1: pop %edi;");
    asm("loc_4D61D2: movb $0,(%eax,%ebp);");
    asm("loc_4D61D6: pop %ebp;");
    asm("loc_4D61D7: push %ebx;");
    asm("loc_4D61D8: mov %eax,8(%ebx);");
    asm("loc_4D61DB: call _sub_4C72B0;");
    asm("loc_4D61E0: add $4,%esp;");
    asm("loc_4D61E3: pop %esi;");
    asm("loc_4D61E4: movl $_off_5D7FF4,(%ebx);");
    asm("loc_4D61EA: mov %ebx,%eax;");
    asm("loc_4D61EC: pop %ebx;");
    asm("loc_4D61ED: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D61F0() // _sub_4D61F0
{
    __DEBUG_ASM(4D61F0);
    // chunk 0x4D61F0 _sub_4D61F0
    asm("loc_4D61F0: push $0xFFFFFFFF;");
    asm("loc_4D61F2: push $_sub_5BE13B;");
    asm("loc_4D61F7: mov %fs:0,%eax;");
    asm("loc_4D61FD: push %eax;");
    asm("loc_4D61FE: mov %esp,%fs:0;");
    asm("loc_4D6205: push %ecx;");
    asm("loc_4D6206: push $0x42C;");
    asm("loc_4D620B: call _sub_5B7E84;");
    asm("loc_4D6210: add $4,%esp;");
    asm("loc_4D6213: mov %eax,(%esp);");
    asm("loc_4D6217: test %eax,%eax;");
    asm("loc_4D6219: movl $0,0xC(%esp);");
    asm("loc_4D6221: je loc_4D6240;");
    asm("loc_4D6223: mov 0x14(%esp),%ecx;");
    asm("loc_4D6227: push %ecx;");
    asm("loc_4D6228: mov %eax,%ecx;");
    asm("loc_4D622A: call _sub_4D5BD0;");
    asm("loc_4D622F: mov 4(%esp),%ecx;");
    asm("loc_4D6233: mov %ecx,%fs:0;");
    asm("loc_4D623A: add $0x10,%esp;");
    asm("loc_4D623D: ret $4;");
    asm("loc_4D6240: mov 4(%esp),%ecx;");
    asm("loc_4D6244: xor %eax,%eax;");
    asm("loc_4D6246: mov %ecx,%fs:0;");
    asm("loc_4D624D: add $0x10,%esp;");
    asm("loc_4D6250: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6260() // _sub_4D6260
{
    __DEBUG_ASM(4D6260);
    // chunk 0x4D6260 _sub_4D6260
    asm("loc_4D6260: sub $0x38,%ecx;");
    asm("loc_4D6263: jmp _sub_4D5D20;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6270() // _sub_4D6270
{
    __DEBUG_ASM(4D6270);
    // chunk 0x4D6270 _sub_4D6270
    asm("loc_4D6270: mov _data_5D7FFC,%eax;");
    asm("loc_4D6275: mov %eax,_data_674A08;");
    asm("loc_4D627A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6280() // _sub_4D6280
{
    __DEBUG_ASM(4D6280);
    // chunk 0x4D6280 _sub_4D6280
    asm("loc_4D6280: mov _data_5D7FFC,%eax;");
    asm("loc_4D6285: mov %eax,_data_674A04;");
    asm("loc_4D628A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6290() // _sub_4D6290
{
    __DEBUG_ASM(4D6290);
    // chunk 0x4D6290 _sub_4D6290
    asm("loc_4D6290: mov _data_5D8000,%eax;");
    asm("loc_4D6295: mov %eax,_data_674A00;");
    asm("loc_4D629A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D62A0() // _sub_4D62A0
{
    __DEBUG_ASM(4D62A0);
    // chunk 0x4D62A0 _sub_4D62A0
    asm("loc_4D62A0: push $_data_5D8014;");
    asm("loc_4D62A5: mov $_data_6749D4,%ecx;");
    asm("loc_4D62AA: call _sub_4D7450;");
    asm("loc_4D62AF: push $_sub_4D62C0;");
    asm("loc_4D62B4: call _sub_5B7E6C;");
    asm("loc_4D62B9: pop %ecx;");
    asm("loc_4D62BA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D62C0() // _unknown_libname_50
{
    __DEBUG_ASM(4D62C0);
    // chunk 0x4D62C0 _sub_4D62C0
    asm("loc_4D62C0: mov $_data_6749D4,%ecx;");
    asm("loc_4D62C5: jmp _sub_4CF010;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D62D0() // _sub_4D62D0
{
    __DEBUG_ASM(4D62D0);
    // chunk 0x4D62D0 _sub_4D62D0
    asm("loc_4D62D0: push $0xFFFFFFFF;");
    asm("loc_4D62D2: push $_sub_5BE1AF;");
    asm("loc_4D62D7: mov %fs:0,%eax;");
    asm("loc_4D62DD: push %eax;");
    asm("loc_4D62DE: mov %esp,%fs:0;");
    asm("loc_4D62E5: sub $0x10,%esp;");
    asm("loc_4D62E8: push %ebx;");
    asm("loc_4D62E9: push %ebp;");
    asm("loc_4D62EA: mov %ecx,%ebp;");
    asm("loc_4D62EC: push %esi;");
    asm("loc_4D62ED: xor %esi,%esi;");
    asm("loc_4D62EF: lea 0x28(%ebp),%ecx;");
    asm("loc_4D62F2: mov %esi,4(%ebp);");
    asm("loc_4D62F5: movb $0,8(%ebp);");
    asm("loc_4D62F9: push %edi;");
    asm("loc_4D62FA: mov %ebp,0x10(%esp);");
    asm("loc_4D62FE: mov %esi,(%ecx);");
    asm("loc_4D6300: mov %esi,4(%ecx);");
    asm("loc_4D6303: movl $_off_5D6EAC,(%ebp);");
    asm("loc_4D630A: mov %esi,0x34(%ebp);");
    asm("loc_4D630D: cmp %esi,(%ecx);");
    asm("loc_4D630F: movl $1,0x28(%esp);");
    asm("loc_4D6317: je loc_4D6320;");
    asm("loc_4D6319: push %esi;");
    asm("loc_4D631A: calll *_import_5C62A8;");
    asm("loc_4D6320: mov %esi,0x30(%ebp);");
    asm("loc_4D6323: lea 0x38(%ebp),%ebx;");
    asm("loc_4D6326: mov %ebx,%ecx;");
    asm("loc_4D6328: movl $2,0x28(%esp);");
    asm("loc_4D6330: call _sub_59F860;");
    asm("loc_4D6335: push $0x43340000;");
    asm("loc_4D633A: push $_data_5D8130;");
    asm("loc_4D633F: lea 0x364(%ebp),%ecx;");
    asm("loc_4D6345: movb $3,0x30(%esp);");
    asm("loc_4D634A: call _sub_4D72A0;");
    asm("loc_4D634F: push %esi;");
    asm("loc_4D6350: push $_data_5D8130;");
    asm("loc_4D6355: lea 0x390(%ebp),%ecx;");
    asm("loc_4D635B: movb $4,0x30(%esp);");
    asm("loc_4D6360: call _sub_4D72A0;");
    asm("loc_4D6365: push $0xC2B40000;");
    asm("loc_4D636A: push $_data_5D8130;");
    asm("loc_4D636F: lea 0x3BC(%ebp),%ecx;");
    asm("loc_4D6375: movb $5,0x30(%esp);");
    asm("loc_4D637A: call _sub_4D72A0;");
    asm("loc_4D637F: push $0x42B40000;");
    asm("loc_4D6384: push $_data_5D8130;");
    asm("loc_4D6389: lea 0x3E8(%ebp),%ecx;");
    asm("loc_4D638F: movb $6,0x30(%esp);");
    asm("loc_4D6394: call _sub_4D72A0;");
    asm("loc_4D6399: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D639C: xor %eax,%eax;");
    asm("loc_4D639E: movl $_off_5D8104,(%ebp);");
    asm("loc_4D63A5: movl $_off_5D804C,(%ebx);");
    asm("loc_4D63AB: movl $_off_5D803C,0xB4(%ebp);");
    asm("loc_4D63B5: mov $_data_5D8014,%edi;");
    asm("loc_4D63BA: repne scas (%edi),%al;");
    asm("loc_4D63BC: not %ecx;");
    asm("loc_4D63BE: dec %ecx;");
    asm("loc_4D63BF: mov %ecx,%eax;");
    asm("loc_4D63C1: cmp $0x20,%eax;");
    asm("loc_4D63C4: movb $7,0x28(%esp);");
    asm("loc_4D63C9: mov %ebp,_data_674A10;");
    asm("loc_4D63CF: lea 8(%ebp),%edx;");
    asm("loc_4D63D2: jb loc_4D63D9;");
    asm("loc_4D63D4: mov $0x1F,%eax;");
    asm("loc_4D63D9: mov %edx,%edi;");
    asm("loc_4D63DB: mov %eax,%ecx;");
    asm("loc_4D63DD: mov %ecx,%edx;");
    asm("loc_4D63DF: shr $2,%ecx;");
    asm("loc_4D63E2: mov $_data_5D8014,%esi;");
    asm("loc_4D63E7: rep movsl (%esi),(%edi);");
    asm("loc_4D63E9: mov %edx,%ecx;");
    asm("loc_4D63EB: and $3,%ecx;");
    asm("loc_4D63EE: rep movsb (%esi),(%edi);");
    asm("loc_4D63F0: sub $0xC,%esp;");
    asm("loc_4D63F3: movl $0,0x20(%esp);");
    asm("loc_4D63FB: mov 0x20(%esp),%edx;");
    asm("loc_4D63FF: mov %esp,%ecx;");
    asm("loc_4D6401: mov %edx,(%ecx);");
    asm("loc_4D6403: movl $0,0x24(%esp);");
    asm("loc_4D640B: mov 0x24(%esp),%edx;");
    asm("loc_4D640F: mov %edx,4(%ecx);");
    asm("loc_4D6412: movb $0,8(%eax,%ebp);");
    asm("loc_4D6417: movl $0xBF800000,0x28(%esp);");
    asm("loc_4D641F: mov 0x28(%esp),%edx;");
    asm("loc_4D6423: mov %eax,4(%ebp);");
    asm("loc_4D6426: mov (%ebx),%eax;");
    asm("loc_4D6428: mov %edx,8(%ecx);");
    asm("loc_4D642B: mov %ebx,%ecx;");
    asm("loc_4D642D: calll *0x7C(%eax);");
    asm("loc_4D6430: mov (%ebx),%eax;");
    asm("loc_4D6432: lea 0x60(%ebx),%ecx;");
    asm("loc_4D6435: push %ecx;");
    asm("loc_4D6436: mov %ebx,%ecx;");
    asm("loc_4D6438: calll *0x14(%eax);");
    asm("loc_4D643B: push $0;");
    asm("loc_4D643D: push $0;");
    asm("loc_4D643F: mov %ebx,%ecx;");
    asm("loc_4D6441: call _sub_4B5060;");
    asm("loc_4D6446: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D6449: xor %eax,%eax;");
    asm("loc_4D644B: mov $_data_5D8024,%edi;");
    asm("loc_4D6450: repne scas (%edi),%al;");
    asm("loc_4D6452: not %ecx;");
    asm("loc_4D6454: dec %ecx;");
    asm("loc_4D6455: mov %ecx,%eax;");
    asm("loc_4D6457: cmp $0x20,%eax;");
    asm("loc_4D645A: lea 0x50(%ebp),%edx;");
    asm("loc_4D645D: jb loc_4D6464;");
    asm("loc_4D645F: mov $0x1F,%eax;");
    asm("loc_4D6464: mov %eax,%ecx;");
    asm("loc_4D6466: mov %ecx,%ebx;");
    asm("loc_4D6468: shr $2,%ecx;");
    asm("loc_4D646B: mov $_data_5D8024,%esi;");
    asm("loc_4D6470: mov %edx,%edi;");
    asm("loc_4D6472: rep movsl (%esi),(%edi);");
    asm("loc_4D6474: mov %ebx,%ecx;");
    asm("loc_4D6476: and $3,%ecx;");
    asm("loc_4D6479: rep movsb (%esi),(%edi);");
    asm("loc_4D647B: mov 0x20(%esp),%ecx;");
    asm("loc_4D647F: movb $0,(%eax,%edx);");
    asm("loc_4D6483: pop %edi;");
    asm("loc_4D6484: mov %eax,0x4C(%ebp);");
    asm("loc_4D6487: pop %esi;");
    asm("loc_4D6488: movl $_data_5D8024,0x48(%ebp);");
    asm("loc_4D648F: mov %ebp,%eax;");
    asm("loc_4D6491: pop %ebp;");
    asm("loc_4D6492: mov %ecx,%fs:0;");
    asm("loc_4D6499: pop %ebx;");
    asm("loc_4D649A: add $0x1C,%esp;");
    asm("loc_4D649D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D64A0() // _sub_4D64A0
{
    __DEBUG_ASM(4D64A0);
    // chunk 0x4D64A0 _sub_4D64A0
    asm("loc_4D64A0: push %esi;");
    asm("loc_4D64A1: mov %ecx,%esi;");
    asm("loc_4D64A3: call _sub_4D64C0;");
    asm("loc_4D64A8: testb $1,8(%esp);");
    asm("loc_4D64AD: je loc_4D64B8;");
    asm("loc_4D64AF: push %esi;");
    asm("loc_4D64B0: call _sub_5B7E1D;");
    asm("loc_4D64B5: add $4,%esp;");
    asm("loc_4D64B8: mov %esi,%eax;");
    asm("loc_4D64BA: pop %esi;");
    asm("loc_4D64BB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D64C0() // _sub_4D64C0
{
    __DEBUG_ASM(4D64C0);
    // chunk 0x4D64C0 _sub_4D64C0
    asm("loc_4D64C0: push $0xFFFFFFFF;");
    asm("loc_4D64C2: push $_sub_5BE239;");
    asm("loc_4D64C7: mov %fs:0,%eax;");
    asm("loc_4D64CD: push %eax;");
    asm("loc_4D64CE: mov %esp,%fs:0;");
    asm("loc_4D64D5: sub $0xC,%esp;");
    asm("loc_4D64D8: push %ebx;");
    asm("loc_4D64D9: push %ebp;");
    asm("loc_4D64DA: push %esi;");
    asm("loc_4D64DB: mov %ecx,%esi;");
    asm("loc_4D64DD: lea 0x38(%esi),%ebx;");
    asm("loc_4D64E0: push %edi;");
    asm("loc_4D64E1: mov %esi,0x14(%esp);");
    asm("loc_4D64E5: movl $_off_5D8104,(%esi);");
    asm("loc_4D64EB: movl $_off_5D804C,(%ebx);");
    asm("loc_4D64F1: movl $_off_5D803C,0xB4(%esi);");
    asm("loc_4D64FB: xor %eax,%eax;");
    asm("loc_4D64FD: mov %eax,0x24(%esp);");
    asm("loc_4D6501: lea 0x3E8(%esi),%edi;");
    asm("loc_4D6507: mov %eax,_data_674A10;");
    asm("loc_4D650C: mov %edi,0x18(%esp);");
    asm("loc_4D6510: mov 4(%edi),%eax;");
    asm("loc_4D6513: or $0xFFFFFFFF,%ebp;");
    asm("loc_4D6516: cmp %ebp,%eax;");
    asm("loc_4D6518: movb $5,0x24(%esp);");
    asm("loc_4D651D: je loc_4D6526;");
    asm("loc_4D651F: mov %edi,%ecx;");
    asm("loc_4D6521: call _sub_59EEE0;");
    asm("loc_4D6526: mov %edi,%ecx;");
    asm("loc_4D6528: movb $4,0x24(%esp);");
    asm("loc_4D652D: call _sub_59EF20;");
    asm("loc_4D6532: lea 0x3BC(%esi),%edi;");
    asm("loc_4D6538: mov %edi,0x18(%esp);");
    asm("loc_4D653C: cmp %ebp,4(%edi);");
    asm("loc_4D653F: movb $6,0x24(%esp);");
    asm("loc_4D6544: je loc_4D654D;");
    asm("loc_4D6546: mov %edi,%ecx;");
    asm("loc_4D6548: call _sub_59EEE0;");
    asm("loc_4D654D: mov %edi,%ecx;");
    asm("loc_4D654F: movb $3,0x24(%esp);");
    asm("loc_4D6554: call _sub_59EF20;");
    asm("loc_4D6559: lea 0x390(%esi),%edi;");
    asm("loc_4D655F: mov %edi,0x18(%esp);");
    asm("loc_4D6563: cmp %ebp,4(%edi);");
    asm("loc_4D6566: movb $7,0x24(%esp);");
    asm("loc_4D656B: je loc_4D6574;");
    asm("loc_4D656D: mov %edi,%ecx;");
    asm("loc_4D656F: call _sub_59EEE0;");
    asm("loc_4D6574: mov %edi,%ecx;");
    asm("loc_4D6576: movb $2,0x24(%esp);");
    asm("loc_4D657B: call _sub_59EF20;");
    asm("loc_4D6580: lea 0x364(%esi),%edi;");
    asm("loc_4D6586: mov %edi,0x18(%esp);");
    asm("loc_4D658A: cmp %ebp,4(%edi);");
    asm("loc_4D658D: movb $8,0x24(%esp);");
    asm("loc_4D6592: je loc_4D659B;");
    asm("loc_4D6594: mov %edi,%ecx;");
    asm("loc_4D6596: call _sub_59EEE0;");
    asm("loc_4D659B: mov %edi,%ecx;");
    asm("loc_4D659D: movb $1,0x24(%esp);");
    asm("loc_4D65A2: call _sub_59EF20;");
    asm("loc_4D65A7: mov %ebx,%ecx;");
    asm("loc_4D65A9: movb $0,0x24(%esp);");
    asm("loc_4D65AE: call _sub_59FA50;");
    asm("loc_4D65B3: pop %edi;");
    asm("loc_4D65B4: movl $_off_5D6EAC,(%esi);");
    asm("loc_4D65BA: mov 0x28(%esi),%eax;");
    asm("loc_4D65BD: test %eax,%eax;");
    asm("loc_4D65BF: lea 0x28(%esi),%ecx;");
    asm("loc_4D65C2: pop %esi;");
    asm("loc_4D65C3: mov %ebp,0x1C(%esp);");
    asm("loc_4D65C7: pop %ebp;");
    asm("loc_4D65C8: pop %ebx;");
    asm("loc_4D65C9: je loc_4D65D3;");
    asm("loc_4D65CB: push $0;");
    asm("loc_4D65CD: calll *_import_5C62A8;");
    asm("loc_4D65D3: mov 0xC(%esp),%ecx;");
    asm("loc_4D65D7: mov %ecx,%fs:0;");
    asm("loc_4D65DE: add $0x18,%esp;");
    asm("loc_4D65E1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D65F0() // _sub_4D65F0
{
    __DEBUG_ASM(4D65F0);
    // chunk 0x4D65F0 _sub_4D65F0
    asm("loc_4D65F0: sub $0x14,%esp;");
    asm("loc_4D65F3: push %ebx;");
    asm("loc_4D65F4: push %esi;");
    asm("loc_4D65F5: push %edi;");
    asm("loc_4D65F6: push $6;");
    asm("loc_4D65F8: mov %ecx,%edi;");
    asm("loc_4D65FA: call _sub_5792B0;");
    asm("loc_4D65FF: add $4,%esp;");
    asm("loc_4D6602: test %eax,%eax;");
    asm("loc_4D6604: je loc_4D6A2D;");
    asm("loc_4D660A: push $0xA;");
    asm("loc_4D660C: call _sub_5792B0;");
    asm("loc_4D6611: add $4,%esp;");
    asm("loc_4D6614: test %eax,%eax;");
    asm("loc_4D6616: je loc_4D6A2D;");
    asm("loc_4D661C: call _sub_54BAF0;");
    asm("loc_4D6621: test %eax,%eax;");
    asm("loc_4D6623: je loc_4D6A2D;");
    asm("loc_4D6629: flds 0x380(%edi);");
    asm("loc_4D662F: lea 0x358(%edi),%esi;");
    asm("loc_4D6635: fdivs _data_5D800C;");
    asm("loc_4D663B: xor %ebx,%ebx;");
    asm("loc_4D663D: fcoms _data_5C7474;");
    asm("loc_4D6643: fnstsw %ax;");
    asm("loc_4D6645: test $0x41,%ah;");
    asm("loc_4D6648: jne loc_4D6751;");
    asm("loc_4D664E: fcoms _data_5D8010;");
    asm("loc_4D6654: fnstsw %ax;");
    asm("loc_4D6656: test $5,%ah;");
    asm("loc_4D6659: jp loc_4D6661;");
    asm("loc_4D665B: fstps 0x10(%esp);");
    asm("loc_4D665F: jmp loc_4D666C;");
    asm("loc_4D6661: mov _data_5D8010,%eax;");
    asm("loc_4D6666: fstp %st(0);");
    asm("loc_4D6668: mov %eax,0x10(%esp);");
    asm("loc_4D666C: mov _data_679BA8,%eax;");
    asm("loc_4D6671: movzbl _data_679BA8+2,%edx;");
    asm("loc_4D6678: xor %ecx,%ecx;");
    asm("loc_4D667A: mov %ah,%cl;");
    asm("loc_4D667C: movzbl %al,%eax;");
    asm("loc_4D667F: mov %bl,0xF(%esp);");
    asm("loc_4D6683: mov %bl,0xE(%esp);");
    asm("loc_4D6687: mov %bl,0xD(%esp);");
    asm("loc_4D668B: mov %ecx,0x14(%esp);");
    asm("loc_4D668F: mov %bl,0xC(%esp);");
    asm("loc_4D6693: fildl 0x14(%esp);");
    asm("loc_4D6697: mov %edx,0x14(%esp);");
    asm("loc_4D669B: fmull _data_5C89C8;");
    asm("loc_4D66A1: fstps 0x1C(%esp);");
    asm("loc_4D66A5: fildl 0x14(%esp);");
    asm("loc_4D66A9: mov %eax,0x14(%esp);");
    asm("loc_4D66AD: fmull _data_5C89C8;");
    asm("loc_4D66B3: fstps 0x18(%esp);");
    asm("loc_4D66B7: fildl 0x14(%esp);");
    asm("loc_4D66BB: fmull _data_5C89C8;");
    asm("loc_4D66C1: fmull _data_5C89C0;");
    asm("loc_4D66C7: call _sub_5B7EC0;");
    asm("loc_4D66CC: push %eax;");
    asm("loc_4D66CD: call _sub_4104C0;");
    asm("loc_4D66D2: flds 0x1C(%esp);");
    asm("loc_4D66D6: fmull _data_5C89C0;");
    asm("loc_4D66DC: mov %al,0x10(%esp);");
    asm("loc_4D66E0: call _sub_5B7EC0;");
    asm("loc_4D66E5: push %eax;");
    asm("loc_4D66E6: call _sub_4104C0;");
    asm("loc_4D66EB: flds 0x24(%esp);");
    asm("loc_4D66EF: fmull _data_5C89C0;");
    asm("loc_4D66F5: mov %al,0x15(%esp);");
    asm("loc_4D66F9: call _sub_5B7EC0;");
    asm("loc_4D66FE: push %eax;");
    asm("loc_4D66FF: call _sub_4104C0;");
    asm("loc_4D6704: flds 0x1C(%esp);");
    asm("loc_4D6708: fmull _data_5C89C0;");
    asm("loc_4D670E: mov %al,0x1A(%esp);");
    asm("loc_4D6712: call _sub_5B7EC0;");
    asm("loc_4D6717: push %eax;");
    asm("loc_4D6718: call _sub_4104C0;");
    asm("loc_4D671D: add $0x10,%esp;");
    asm("loc_4D6720: lea 0xC(%esp),%ecx;");
    asm("loc_4D6724: push %ecx;");
    asm("loc_4D6725: mov %esi,%ecx;");
    asm("loc_4D6727: mov %al,0x13(%esp);");
    asm("loc_4D672B: call _sub_4A1AF0;");
    asm("loc_4D6730: mov _import_5C6DF0,%edx;");
    asm("loc_4D6736: mov (%edx),%eax;");
    asm("loc_4D6738: mov 4(%esi),%edx;");
    asm("loc_4D673B: mov (%eax),%ecx;");
    asm("loc_4D673D: push %ebx;");
    asm("loc_4D673E: push %ebx;");
    asm("loc_4D673F: push %ebx;");
    asm("loc_4D6740: push $0x3F800000;");
    asm("loc_4D6745: push %edx;");
    asm("loc_4D6746: push $_data_67DBF8;");
    asm("loc_4D674B: push %eax;");
    asm("loc_4D674C: calll *0x1C(%ecx);");
    asm("loc_4D674F: jmp loc_4D6753;");
    asm("loc_4D6751: fstp %st(0);");
    asm("loc_4D6753: flds 0x354(%edi);");
    asm("loc_4D6759: lea 0x32C(%edi),%esi;");
    asm("loc_4D675F: fdivs _data_5D800C;");
    asm("loc_4D6765: fcoms _data_5C7474;");
    asm("loc_4D676B: fnstsw %ax;");
    asm("loc_4D676D: test $0x41,%ah;");
    asm("loc_4D6770: jne loc_4D6879;");
    asm("loc_4D6776: fcoms _data_5D8010;");
    asm("loc_4D677C: fnstsw %ax;");
    asm("loc_4D677E: test $5,%ah;");
    asm("loc_4D6781: jp loc_4D6789;");
    asm("loc_4D6783: fstps 0x10(%esp);");
    asm("loc_4D6787: jmp loc_4D6794;");
    asm("loc_4D6789: mov _data_5D8010,%eax;");
    asm("loc_4D678E: fstp %st(0);");
    asm("loc_4D6790: mov %eax,0x10(%esp);");
    asm("loc_4D6794: mov _data_679BA8,%eax;");
    asm("loc_4D6799: movzbl _data_679BA8+2,%edx;");
    asm("loc_4D67A0: xor %ecx,%ecx;");
    asm("loc_4D67A2: mov %ah,%cl;");
    asm("loc_4D67A4: movzbl %al,%eax;");
    asm("loc_4D67A7: mov %bl,0xF(%esp);");
    asm("loc_4D67AB: mov %bl,0xE(%esp);");
    asm("loc_4D67AF: mov %bl,0xD(%esp);");
    asm("loc_4D67B3: mov %ecx,0x1C(%esp);");
    asm("loc_4D67B7: mov %bl,0xC(%esp);");
    asm("loc_4D67BB: fildl 0x1C(%esp);");
    asm("loc_4D67BF: mov %edx,0x1C(%esp);");
    asm("loc_4D67C3: fmull _data_5C89C8;");
    asm("loc_4D67C9: fstps 0x14(%esp);");
    asm("loc_4D67CD: fildl 0x1C(%esp);");
    asm("loc_4D67D1: mov %eax,0x1C(%esp);");
    asm("loc_4D67D5: fmull _data_5C89C8;");
    asm("loc_4D67DB: fstps 0x18(%esp);");
    asm("loc_4D67DF: fildl 0x1C(%esp);");
    asm("loc_4D67E3: fmull _data_5C89C8;");
    asm("loc_4D67E9: fmull _data_5C89C0;");
    asm("loc_4D67EF: call _sub_5B7EC0;");
    asm("loc_4D67F4: push %eax;");
    asm("loc_4D67F5: call _sub_4104C0;");
    asm("loc_4D67FA: flds 0x1C(%esp);");
    asm("loc_4D67FE: fmull _data_5C89C0;");
    asm("loc_4D6804: mov %al,0x10(%esp);");
    asm("loc_4D6808: call _sub_5B7EC0;");
    asm("loc_4D680D: push %eax;");
    asm("loc_4D680E: call _sub_4104C0;");
    asm("loc_4D6813: flds 0x1C(%esp);");
    asm("loc_4D6817: fmull _data_5C89C0;");
    asm("loc_4D681D: mov %al,0x15(%esp);");
    asm("loc_4D6821: call _sub_5B7EC0;");
    asm("loc_4D6826: push %eax;");
    asm("loc_4D6827: call _sub_4104C0;");
    asm("loc_4D682C: flds 0x1C(%esp);");
    asm("loc_4D6830: fmull _data_5C89C0;");
    asm("loc_4D6836: mov %al,0x1A(%esp);");
    asm("loc_4D683A: call _sub_5B7EC0;");
    asm("loc_4D683F: push %eax;");
    asm("loc_4D6840: call _sub_4104C0;");
    asm("loc_4D6845: add $0x10,%esp;");
    asm("loc_4D6848: lea 0xC(%esp),%ecx;");
    asm("loc_4D684C: push %ecx;");
    asm("loc_4D684D: mov %esi,%ecx;");
    asm("loc_4D684F: mov %al,0x13(%esp);");
    asm("loc_4D6853: call _sub_4A1AF0;");
    asm("loc_4D6858: mov _import_5C6DF0,%edx;");
    asm("loc_4D685E: mov (%edx),%eax;");
    asm("loc_4D6860: mov 4(%esi),%edx;");
    asm("loc_4D6863: mov (%eax),%ecx;");
    asm("loc_4D6865: push %ebx;");
    asm("loc_4D6866: push %ebx;");
    asm("loc_4D6867: push %ebx;");
    asm("loc_4D6868: push $0x3F800000;");
    asm("loc_4D686D: push %edx;");
    asm("loc_4D686E: push $_data_67DBF8;");
    asm("loc_4D6873: push %eax;");
    asm("loc_4D6874: calll *0x1C(%ecx);");
    asm("loc_4D6877: jmp loc_4D687B;");
    asm("loc_4D6879: fstp %st(0);");
    asm("loc_4D687B: flds 0x3AC(%edi);");
    asm("loc_4D6881: lea 0x384(%edi),%esi;");
    asm("loc_4D6887: fdivs _data_5D800C;");
    asm("loc_4D688D: fcoms _data_5C7474;");
    asm("loc_4D6893: fnstsw %ax;");
    asm("loc_4D6895: test $0x41,%ah;");
    asm("loc_4D6898: jne loc_4D6953;");
    asm("loc_4D689E: fcoms _data_5D8010;");
    asm("loc_4D68A4: fnstsw %ax;");
    asm("loc_4D68A6: test $5,%ah;");
    asm("loc_4D68A9: jp loc_4D68B1;");
    asm("loc_4D68AB: fstps 0x10(%esp);");
    asm("loc_4D68AF: jmp loc_4D68BC;");
    asm("loc_4D68B1: mov _data_5D8010,%eax;");
    asm("loc_4D68B6: fstp %st(0);");
    asm("loc_4D68B8: mov %eax,0x10(%esp);");
    asm("loc_4D68BC: mov _data_679BA8,%eax;");
    asm("loc_4D68C1: mov 0x10(%esp),%ecx;");
    asm("loc_4D68C5: xor %edx,%edx;");
    asm("loc_4D68C7: mov %ah,%dl;");
    asm("loc_4D68C9: push %ecx;");
    asm("loc_4D68CA: movzbl _data_679BA8+2,%ecx;");
    asm("loc_4D68D1: sub $0xC,%esp;");
    asm("loc_4D68D4: mov %bl,0x1F(%esp);");
    asm("loc_4D68D8: mov %edx,0x2C(%esp);");
    asm("loc_4D68DC: xor %edx,%edx;");
    asm("loc_4D68DE: mov %al,%dl;");
    asm("loc_4D68E0: fildl 0x2C(%esp);");
    asm("loc_4D68E4: mov %ecx,0x2C(%esp);");
    asm("loc_4D68E8: lea 0x1C(%esp),%ecx;");
    asm("loc_4D68EC: mov %bl,0x1E(%esp);");
    asm("loc_4D68F0: fmull _data_5C89C8;");
    asm("loc_4D68F6: mov %bl,0x1D(%esp);");
    asm("loc_4D68FA: mov %bl,0x1C(%esp);");
    asm("loc_4D68FE: fstps 8(%esp);");
    asm("loc_4D6902: fildl 0x2C(%esp);");
    asm("loc_4D6906: mov %edx,0x2C(%esp);");
    asm("loc_4D690A: fmull _data_5C89C8;");
    asm("loc_4D6910: fstps 4(%esp);");
    asm("loc_4D6914: fildl 0x2C(%esp);");
    asm("loc_4D6918: fmull _data_5C89C8;");
    asm("loc_4D691E: fstps (%esp);");
    asm("loc_4D6921: call _sub_4D6A40;");
    asm("loc_4D6926: lea 0xC(%esp),%eax;");
    asm("loc_4D692A: push %eax;");
    asm("loc_4D692B: mov %esi,%ecx;");
    asm("loc_4D692D: call _sub_4A1AF0;");
    asm("loc_4D6932: mov _import_5C6DF0,%ecx;");
    asm("loc_4D6938: mov (%ecx),%eax;");
    asm("loc_4D693A: mov 4(%esi),%ecx;");
    asm("loc_4D693D: mov (%eax),%edx;");
    asm("loc_4D693F: push %ebx;");
    asm("loc_4D6940: push %ebx;");
    asm("loc_4D6941: push %ebx;");
    asm("loc_4D6942: push $0x3F800000;");
    asm("loc_4D6947: push %ecx;");
    asm("loc_4D6948: push $_data_67DBF8;");
    asm("loc_4D694D: push %eax;");
    asm("loc_4D694E: calll *0x1C(%edx);");
    asm("loc_4D6951: jmp loc_4D6955;");
    asm("loc_4D6953: fstp %st(0);");
    asm("loc_4D6955: flds 0x3D8(%edi);");
    asm("loc_4D695B: lea 0x3B0(%edi),%esi;");
    asm("loc_4D6961: fdivs _data_5D800C;");
    asm("loc_4D6967: fcoms _data_5C7474;");
    asm("loc_4D696D: fnstsw %ax;");
    asm("loc_4D696F: test $0x41,%ah;");
    asm("loc_4D6972: jne loc_4D6A2B;");
    asm("loc_4D6978: fcoms _data_5D8010;");
    asm("loc_4D697E: fnstsw %ax;");
    asm("loc_4D6980: test $5,%ah;");
    asm("loc_4D6983: jp loc_4D698B;");
    asm("loc_4D6985: fstps 0x10(%esp);");
    asm("loc_4D6989: jmp loc_4D6997;");
    asm("loc_4D698B: mov _data_5D8010,%edx;");
    asm("loc_4D6991: fstp %st(0);");
    asm("loc_4D6993: mov %edx,0x10(%esp);");
    asm("loc_4D6997: lea 0xC(%esp),%ecx;");
    asm("loc_4D699B: call _sub_4B5140;");
    asm("loc_4D69A0: mov 0x10(%esp),%eax;");
    asm("loc_4D69A4: movzbl _data_679BA8+2,%edx;");
    asm("loc_4D69AB: push %eax;");
    asm("loc_4D69AC: mov _data_679BA8,%eax;");
    asm("loc_4D69B1: xor %ecx,%ecx;");
    asm("loc_4D69B3: mov %ah,%cl;");
    asm("loc_4D69B5: sub $0xC,%esp;");
    asm("loc_4D69B8: movzbl %al,%eax;");
    asm("loc_4D69BB: mov %ecx,0x2C(%esp);");
    asm("loc_4D69BF: fildl 0x2C(%esp);");
    asm("loc_4D69C3: mov %edx,0x2C(%esp);");
    asm("loc_4D69C7: lea 0x1C(%esp),%ecx;");
    asm("loc_4D69CB: fmull _data_5C89C8;");
    asm("loc_4D69D1: fstps 8(%esp);");
    asm("loc_4D69D5: fildl 0x2C(%esp);");
    asm("loc_4D69D9: mov %eax,0x2C(%esp);");
    asm("loc_4D69DD: fmull _data_5C89C8;");
    asm("loc_4D69E3: fstps 4(%esp);");
    asm("loc_4D69E7: fildl 0x2C(%esp);");
    asm("loc_4D69EB: fmull _data_5C89C8;");
    asm("loc_4D69F1: fstps (%esp);");
    asm("loc_4D69F4: call _sub_4D6A40;");
    asm("loc_4D69F9: lea 0xC(%esp),%ecx;");
    asm("loc_4D69FD: push %ecx;");
    asm("loc_4D69FE: mov %esi,%ecx;");
    asm("loc_4D6A00: call _sub_4A1AF0;");
    asm("loc_4D6A05: mov _import_5C6DF0,%edx;");
    asm("loc_4D6A0B: mov (%edx),%eax;");
    asm("loc_4D6A0D: mov 4(%esi),%edx;");
    asm("loc_4D6A10: mov (%eax),%ecx;");
    asm("loc_4D6A12: push %ebx;");
    asm("loc_4D6A13: push %ebx;");
    asm("loc_4D6A14: push %ebx;");
    asm("loc_4D6A15: push $0x3F800000;");
    asm("loc_4D6A1A: push %edx;");
    asm("loc_4D6A1B: push $_data_67DBF8;");
    asm("loc_4D6A20: push %eax;");
    asm("loc_4D6A21: calll *0x1C(%ecx);");
    asm("loc_4D6A24: pop %edi;");
    asm("loc_4D6A25: pop %esi;");
    asm("loc_4D6A26: pop %ebx;");
    asm("loc_4D6A27: add $0x14,%esp;");
    asm("loc_4D6A2A: ret;");
    asm("loc_4D6A2B: fstp %st(0);");
    asm("loc_4D6A2D: pop %edi;");
    asm("loc_4D6A2E: pop %esi;");
    asm("loc_4D6A2F: pop %ebx;");
    asm("loc_4D6A30: add $0x14,%esp;");
    asm("loc_4D6A33: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6A40() // _sub_4D6A40
{
    __DEBUG_ASM(4D6A40);
    // chunk 0x4D6A40 _sub_4D6A40
    asm("loc_4D6A40: flds 4(%esp);");
    asm("loc_4D6A44: push %esi;");
    asm("loc_4D6A45: fmull _data_5C89C0;");
    asm("loc_4D6A4B: mov %ecx,%esi;");
    asm("loc_4D6A4D: call _sub_5B7EC0;");
    asm("loc_4D6A52: test %eax,%eax;");
    asm("loc_4D6A54: jge loc_4D6A5A;");
    asm("loc_4D6A56: xor %eax,%eax;");
    asm("loc_4D6A58: jmp loc_4D6A66;");
    asm("loc_4D6A5A: cmp $0xFF,%eax;");
    asm("loc_4D6A5F: jle loc_4D6A66;");
    asm("loc_4D6A61: mov $0xFF,%eax;");
    asm("loc_4D6A66: flds 0xC(%esp);");
    asm("loc_4D6A6A: mov %al,(%esi);");
    asm("loc_4D6A6C: fmull _data_5C89C0;");
    asm("loc_4D6A72: call _sub_5B7EC0;");
    asm("loc_4D6A77: test %eax,%eax;");
    asm("loc_4D6A79: jge loc_4D6A7F;");
    asm("loc_4D6A7B: xor %eax,%eax;");
    asm("loc_4D6A7D: jmp loc_4D6A8B;");
    asm("loc_4D6A7F: cmp $0xFF,%eax;");
    asm("loc_4D6A84: jle loc_4D6A8B;");
    asm("loc_4D6A86: mov $0xFF,%eax;");
    asm("loc_4D6A8B: flds 0x10(%esp);");
    asm("loc_4D6A8F: mov %al,1(%esi);");
    asm("loc_4D6A92: fmull _data_5C89C0;");
    asm("loc_4D6A98: call _sub_5B7EC0;");
    asm("loc_4D6A9D: test %eax,%eax;");
    asm("loc_4D6A9F: jge loc_4D6AA5;");
    asm("loc_4D6AA1: xor %eax,%eax;");
    asm("loc_4D6AA3: jmp loc_4D6AB1;");
    asm("loc_4D6AA5: cmp $0xFF,%eax;");
    asm("loc_4D6AAA: jle loc_4D6AB1;");
    asm("loc_4D6AAC: mov $0xFF,%eax;");
    asm("loc_4D6AB1: flds 0x14(%esp);");
    asm("loc_4D6AB5: mov %al,2(%esi);");
    asm("loc_4D6AB8: fmull _data_5C89C0;");
    asm("loc_4D6ABE: call _sub_5B7EC0;");
    asm("loc_4D6AC3: test %eax,%eax;");
    asm("loc_4D6AC5: jge loc_4D6AD0;");
    asm("loc_4D6AC7: xor %eax,%eax;");
    asm("loc_4D6AC9: mov %al,3(%esi);");
    asm("loc_4D6ACC: pop %esi;");
    asm("loc_4D6ACD: ret $0x10;");
    asm("loc_4D6AD0: cmp $0xFF,%eax;");
    asm("loc_4D6AD5: jle loc_4D6ADC;");
    asm("loc_4D6AD7: mov $0xFF,%eax;");
    asm("loc_4D6ADC: mov %al,3(%esi);");
    asm("loc_4D6ADF: pop %esi;");
    asm("loc_4D6AE0: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6AF0() // _sub_4D6AF0
{
    __DEBUG_ASM(4D6AF0);
    // chunk 0x4D6AF0 _sub_4D6AF0
    asm("loc_4D6AF0: push %esi;");
    asm("loc_4D6AF1: push %edi;");
    asm("loc_4D6AF2: mov %ecx,%esi;");
    asm("loc_4D6AF4: call _sub_41DD90;");
    asm("loc_4D6AF9: xor %edi,%edi;");
    asm("loc_4D6AFB: test %al,%al;");
    asm("loc_4D6AFD: je loc_4D6B16;");
    asm("loc_4D6AFF: call _sub_54BAF0;");
    asm("loc_4D6B04: test %eax,%eax;");
    asm("loc_4D6B06: je loc_4D6B16;");
    asm("loc_4D6B08: push %edi;");
    asm("loc_4D6B09: mov %esi,%ecx;");
    asm("loc_4D6B0B: call _sub_5A0C30;");
    asm("loc_4D6B10: orb $1,0x6C(%esi);");
    asm("loc_4D6B14: jmp loc_4D6B1F;");
    asm("loc_4D6B16: push $1;");
    asm("loc_4D6B18: mov %esi,%ecx;");
    asm("loc_4D6B1A: call _sub_5A0C30;");
    asm("loc_4D6B1F: call _sub_42D680;");
    asm("loc_4D6B24: flds 0x380(%esi);");
    asm("loc_4D6B2A: fcomps _data_5C7474;");
    asm("loc_4D6B30: fnstsw %ax;");
    asm("loc_4D6B32: test $0x41,%ah;");
    asm("loc_4D6B35: jne loc_4D6B47;");
    asm("loc_4D6B37: flds 0x380(%esi);");
    asm("loc_4D6B3D: fsub %st(1),%st;");
    asm("loc_4D6B3F: fstps 0x380(%esi);");
    asm("loc_4D6B45: jmp loc_4D6B4D;");
    asm("loc_4D6B47: mov %edi,0x380(%esi);");
    asm("loc_4D6B4D: flds 0x354(%esi);");
    asm("loc_4D6B53: fcomps _data_5C7474;");
    asm("loc_4D6B59: fnstsw %ax;");
    asm("loc_4D6B5B: test $0x41,%ah;");
    asm("loc_4D6B5E: jne loc_4D6B70;");
    asm("loc_4D6B60: flds 0x354(%esi);");
    asm("loc_4D6B66: fsub %st(1),%st;");
    asm("loc_4D6B68: fstps 0x354(%esi);");
    asm("loc_4D6B6E: jmp loc_4D6B76;");
    asm("loc_4D6B70: mov %edi,0x354(%esi);");
    asm("loc_4D6B76: flds 0x3AC(%esi);");
    asm("loc_4D6B7C: fcomps _data_5C7474;");
    asm("loc_4D6B82: fnstsw %ax;");
    asm("loc_4D6B84: test $0x41,%ah;");
    asm("loc_4D6B87: jne loc_4D6B99;");
    asm("loc_4D6B89: flds 0x3AC(%esi);");
    asm("loc_4D6B8F: fsub %st(1),%st;");
    asm("loc_4D6B91: fstps 0x3AC(%esi);");
    asm("loc_4D6B97: jmp loc_4D6B9F;");
    asm("loc_4D6B99: mov %edi,0x3AC(%esi);");
    asm("loc_4D6B9F: flds 0x3D8(%esi);");
    asm("loc_4D6BA5: fcomps _data_5C7474;");
    asm("loc_4D6BAB: fnstsw %ax;");
    asm("loc_4D6BAD: test $0x41,%ah;");
    asm("loc_4D6BB0: jne loc_4D6BCB;");
    asm("loc_4D6BB2: flds 0x3D8(%esi);");
    asm("loc_4D6BB8: pop %edi;");
    asm("loc_4D6BB9: fsub %st(1),%st;");
    asm("loc_4D6BBB: mov %esi,%ecx;");
    asm("loc_4D6BBD: fstps 0x3D8(%esi);");
    asm("loc_4D6BC3: pop %esi;");
    asm("loc_4D6BC4: fstp %st(0);");
    asm("loc_4D6BC6: jmp _sub_5A17B0;");
    asm("loc_4D6BCB: mov %edi,0x3D8(%esi);");
    asm("loc_4D6BD1: fstp %st(0);");
    asm("loc_4D6BD3: pop %edi;");
    asm("loc_4D6BD4: mov %esi,%ecx;");
    asm("loc_4D6BD6: pop %esi;");
    asm("loc_4D6BD7: jmp _sub_5A17B0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6BE0() // _sub_4D6BE0
{
    __DEBUG_ASM(4D6BE0);
    // chunk 0x4D6BE0 _sub_4D6BE0
    asm("loc_4D6BE0: push %esi;");
    asm("loc_4D6BE1: push %edi;");
    asm("loc_4D6BE2: mov %ecx,%esi;");
    asm("loc_4D6BE4: call _sub_41DD90;");
    asm("loc_4D6BE9: xor %edi,%edi;");
    asm("loc_4D6BEB: test %al,%al;");
    asm("loc_4D6BED: je loc_4D6C00;");
    asm("loc_4D6BEF: call _sub_54BAF0;");
    asm("loc_4D6BF4: test %eax,%eax;");
    asm("loc_4D6BF6: je loc_4D6C00;");
    asm("loc_4D6BF8: push %edi;");
    asm("loc_4D6BF9: mov %esi,%ecx;");
    asm("loc_4D6BFB: call _sub_5A0C30;");
    asm("loc_4D6C00: call _sub_42D680;");
    asm("loc_4D6C05: flds 0x380(%esi);");
    asm("loc_4D6C0B: fcomps _data_5C7474;");
    asm("loc_4D6C11: fnstsw %ax;");
    asm("loc_4D6C13: test $0x41,%ah;");
    asm("loc_4D6C16: jne loc_4D6C28;");
    asm("loc_4D6C18: flds 0x380(%esi);");
    asm("loc_4D6C1E: fsub %st(1),%st;");
    asm("loc_4D6C20: fstps 0x380(%esi);");
    asm("loc_4D6C26: jmp loc_4D6C2E;");
    asm("loc_4D6C28: mov %edi,0x380(%esi);");
    asm("loc_4D6C2E: flds 0x354(%esi);");
    asm("loc_4D6C34: fcomps _data_5C7474;");
    asm("loc_4D6C3A: fnstsw %ax;");
    asm("loc_4D6C3C: test $0x41,%ah;");
    asm("loc_4D6C3F: jne loc_4D6C51;");
    asm("loc_4D6C41: flds 0x354(%esi);");
    asm("loc_4D6C47: fsub %st(1),%st;");
    asm("loc_4D6C49: fstps 0x354(%esi);");
    asm("loc_4D6C4F: jmp loc_4D6C57;");
    asm("loc_4D6C51: mov %edi,0x354(%esi);");
    asm("loc_4D6C57: flds 0x3AC(%esi);");
    asm("loc_4D6C5D: fcomps _data_5C7474;");
    asm("loc_4D6C63: fnstsw %ax;");
    asm("loc_4D6C65: test $0x41,%ah;");
    asm("loc_4D6C68: jne loc_4D6C7A;");
    asm("loc_4D6C6A: flds 0x3AC(%esi);");
    asm("loc_4D6C70: fsub %st(1),%st;");
    asm("loc_4D6C72: fstps 0x3AC(%esi);");
    asm("loc_4D6C78: jmp loc_4D6C80;");
    asm("loc_4D6C7A: mov %edi,0x3AC(%esi);");
    asm("loc_4D6C80: flds 0x3D8(%esi);");
    asm("loc_4D6C86: fcomps _data_5C7474;");
    asm("loc_4D6C8C: fnstsw %ax;");
    asm("loc_4D6C8E: test $0x41,%ah;");
    asm("loc_4D6C91: jne loc_4D6CA3;");
    asm("loc_4D6C93: flds 0x3D8(%esi);");
    asm("loc_4D6C99: fsub %st(1),%st;");
    asm("loc_4D6C9B: fstps 0x3D8(%esi);");
    asm("loc_4D6CA1: jmp loc_4D6CA9;");
    asm("loc_4D6CA3: mov %edi,0x3D8(%esi);");
    asm("loc_4D6CA9: mov 0xC(%esi),%esi;");
    asm("loc_4D6CAC: fstp %st(0);");
    asm("loc_4D6CAE: cmp %edi,%esi;");
    asm("loc_4D6CB0: je loc_4D6CC6;");
    asm("loc_4D6CB2: testb $1,0x6C(%esi);");
    asm("loc_4D6CB6: jne loc_4D6CBF;");
    asm("loc_4D6CB8: mov (%esi),%eax;");
    asm("loc_4D6CBA: mov %esi,%ecx;");
    asm("loc_4D6CBC: calll *0x30(%eax);");
    asm("loc_4D6CBF: mov 8(%esi),%esi;");
    asm("loc_4D6CC2: cmp %edi,%esi;");
    asm("loc_4D6CC4: jne loc_4D6CB2;");
    asm("loc_4D6CC6: pop %edi;");
    asm("loc_4D6CC7: pop %esi;");
    asm("loc_4D6CC8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6CD0() // _sub_4D6CD0
{
    __DEBUG_ASM(4D6CD0);
    // chunk 0x4D6CD0 _sub_4D6CD0
    asm("loc_4D6CD0: sub $0x18,%esp;");
    asm("loc_4D6CD3: mov 0x20(%esp),%eax;");
    asm("loc_4D6CD7: mov (%eax),%edx;");
    asm("loc_4D6CD9: mov %edx,(%esp);");
    asm("loc_4D6CDD: flds (%esp);");
    asm("loc_4D6CE1: fmuls _data_5D8154;");
    asm("loc_4D6CE7: mov 4(%eax),%edx;");
    asm("loc_4D6CEA: mov 8(%eax),%eax;");
    asm("loc_4D6CED: mov %edx,4(%esp);");
    asm("loc_4D6CF1: flds 4(%esp);");
    asm("loc_4D6CF5: fmuls _data_5D8154;");
    asm("loc_4D6CFB: mov %eax,8(%esp);");
    asm("loc_4D6CFF: flds 8(%esp);");
    asm("loc_4D6D03: mov 0x1C(%esp),%eax;");
    asm("loc_4D6D07: fmuls _data_5D8154;");
    asm("loc_4D6D0D: lea 0xC(%esp),%edx;");
    asm("loc_4D6D11: push %edx;");
    asm("loc_4D6D12: fstps 0xC(%esp);");
    asm("loc_4D6D16: fxch;");
    asm("loc_4D6D18: fadds (%eax);");
    asm("loc_4D6D1A: fstps 0x10(%esp);");
    asm("loc_4D6D1E: fadds 4(%eax);");
    asm("loc_4D6D21: fstps 0x14(%esp);");
    asm("loc_4D6D25: flds 0xC(%esp);");
    asm("loc_4D6D29: fadds 8(%eax);");
    asm("loc_4D6D2C: fstps 0x18(%esp);");
    asm("loc_4D6D30: call _sub_4D6F10;");
    asm("loc_4D6D35: add $0x18,%esp;");
    asm("loc_4D6D38: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6D40() // _sub_4D6D40
{
    __DEBUG_ASM(4D6D40);
    // chunk 0x4D6D40 _sub_4D6D40
    asm("loc_4D6D40: sub $0x3C,%esp;");
    asm("loc_4D6D43: push %esi;");
    asm("loc_4D6D44: mov %ecx,%esi;");
    asm("loc_4D6D46: call _sub_54BAF0;");
    asm("loc_4D6D4B: test %eax,%eax;");
    asm("loc_4D6D4D: je loc_4D6EEE;");
    asm("loc_4D6D53: mov (%eax),%edx;");
    asm("loc_4D6D55: push %edi;");
    asm("loc_4D6D56: mov %eax,%ecx;");
    asm("loc_4D6D58: calll *0x10(%edx);");
    asm("loc_4D6D5B: mov %eax,%edi;");
    asm("loc_4D6D5D: mov _data_674A0C,%eax;");
    asm("loc_4D6D62: test %eax,%eax;");
    asm("loc_4D6D64: jne loc_4D6D70;");
    asm("loc_4D6D66: call _sub_5B73E0;");
    asm("loc_4D6D6B: mov %eax,_data_674A0C;");
    asm("loc_4D6D70: mov 0x48(%esp),%edx;");
    asm("loc_4D6D74: mov (%eax),%ecx;");
    asm("loc_4D6D76: push %edx;");
    asm("loc_4D6D77: push %edi;");
    asm("loc_4D6D78: lea 0x10(%esp),%edx;");
    asm("loc_4D6D7C: push %edx;");
    asm("loc_4D6D7D: push %eax;");
    asm("loc_4D6D7E: calll *0x3C(%ecx);");
    asm("loc_4D6D81: fldl _data_5D8158;");
    asm("loc_4D6D87: fcos;");
    asm("loc_4D6D89: mov 8(%esp),%eax;");
    asm("loc_4D6D8D: mov 0xC(%esp),%ecx;");
    asm("loc_4D6D91: mov 0x10(%esp),%edx;");
    asm("loc_4D6D95: mov %eax,0x14(%esp);");
    asm("loc_4D6D99: mov _data_674A0C,%eax;");
    asm("loc_4D6D9E: test %eax,%eax;");
    asm("loc_4D6DA0: mov %ecx,0x18(%esp);");
    asm("loc_4D6DA4: mov %edx,0x1C(%esp);");
    asm("loc_4D6DA8: movl $0,0x28(%esp);");
    asm("loc_4D6DB0: movl $0,0x34(%esp);");
    asm("loc_4D6DB8: movl $0,0x38(%esp);");
    asm("loc_4D6DC0: movl $0,0x3C(%esp);");
    asm("loc_4D6DC8: movl $0x3F800000,0x40(%esp);");
    asm("loc_4D6DD0: pop %edi;");
    asm("loc_4D6DD1: fldl _data_5D8158;");
    asm("loc_4D6DD7: fsin;");
    asm("loc_4D6DD9: fld %st(1);");
    asm("loc_4D6DDB: fstps 0x1C(%esp);");
    asm("loc_4D6DDF: fld %st(0);");
    asm("loc_4D6DE1: fchs;");
    asm("loc_4D6DE3: fstps 0x20(%esp);");
    asm("loc_4D6DE7: fstps 0x28(%esp);");
    asm("loc_4D6DEB: fstps 0x2C(%esp);");
    asm("loc_4D6DEF: jne loc_4D6DFB;");
    asm("loc_4D6DF1: call _sub_5B73E0;");
    asm("loc_4D6DF6: mov %eax,_data_674A0C;");
    asm("loc_4D6DFB: mov (%eax),%ecx;");
    asm("loc_4D6DFD: lea 0x10(%esp),%edx;");
    asm("loc_4D6E01: push %edx;");
    asm("loc_4D6E02: lea 0x20(%esp),%edx;");
    asm("loc_4D6E06: push %edx;");
    asm("loc_4D6E07: lea 0xC(%esp),%edx;");
    asm("loc_4D6E0B: push %edx;");
    asm("loc_4D6E0C: push %eax;");
    asm("loc_4D6E0D: calll *0x38(%ecx);");
    asm("loc_4D6E10: flds 8(%esp);");
    asm("loc_4D6E14: fcomps _data_5C7474;");
    asm("loc_4D6E1A: flds 4(%esp);");
    asm("loc_4D6E1E: fnstsw %ax;");
    asm("loc_4D6E20: fcomps _data_5C7474;");
    asm("loc_4D6E26: flds _data_5D800C;");
    asm("loc_4D6E2C: test $0x41,%ah;");
    asm("loc_4D6E2F: fnstsw %ax;");
    asm("loc_4D6E31: jne loc_4D6E94;");
    asm("loc_4D6E33: test $0x41,%ah;");
    asm("loc_4D6E36: jne loc_4D6E66;");
    asm("loc_4D6E38: fadds 0x38C(%esi);");
    asm("loc_4D6E3E: fsts 0x38C(%esi);");
    asm("loc_4D6E44: fcoms _data_5D8004;");
    asm("loc_4D6E4A: fnstsw %ax;");
    asm("loc_4D6E4C: test $5,%ah;");
    asm("loc_4D6E4F: jnp loc_4D6E59;");
    asm("loc_4D6E51: fstp %st(0);");
    asm("loc_4D6E53: flds _data_5D8004;");
    asm("loc_4D6E59: fstps 0x38C(%esi);");
    asm("loc_4D6E5F: pop %esi;");
    asm("loc_4D6E60: add $0x3C,%esp;");
    asm("loc_4D6E63: ret $4;");
    asm("loc_4D6E66: fadds 0x3E4(%esi);");
    asm("loc_4D6E6C: fsts 0x3E4(%esi);");
    asm("loc_4D6E72: fcoms _data_5D8004;");
    asm("loc_4D6E78: fnstsw %ax;");
    asm("loc_4D6E7A: test $5,%ah;");
    asm("loc_4D6E7D: jnp loc_4D6E87;");
    asm("loc_4D6E7F: fstp %st(0);");
    asm("loc_4D6E81: flds _data_5D8004;");
    asm("loc_4D6E87: fstps 0x3E4(%esi);");
    asm("loc_4D6E8D: pop %esi;");
    asm("loc_4D6E8E: add $0x3C,%esp;");
    asm("loc_4D6E91: ret $4;");
    asm("loc_4D6E94: test $0x41,%ah;");
    asm("loc_4D6E97: jne loc_4D6EC7;");
    asm("loc_4D6E99: fadds 0x410(%esi);");
    asm("loc_4D6E9F: fsts 0x410(%esi);");
    asm("loc_4D6EA5: fcoms _data_5D8004;");
    asm("loc_4D6EAB: fnstsw %ax;");
    asm("loc_4D6EAD: test $5,%ah;");
    asm("loc_4D6EB0: jnp loc_4D6EBA;");
    asm("loc_4D6EB2: fstp %st(0);");
    asm("loc_4D6EB4: flds _data_5D8004;");
    asm("loc_4D6EBA: fstps 0x410(%esi);");
    asm("loc_4D6EC0: pop %esi;");
    asm("loc_4D6EC1: add $0x3C,%esp;");
    asm("loc_4D6EC4: ret $4;");
    asm("loc_4D6EC7: fadds 0x3B8(%esi);");
    asm("loc_4D6ECD: fsts 0x3B8(%esi);");
    asm("loc_4D6ED3: fcoms _data_5D8004;");
    asm("loc_4D6ED9: fnstsw %ax;");
    asm("loc_4D6EDB: test $5,%ah;");
    asm("loc_4D6EDE: jnp loc_4D6EE8;");
    asm("loc_4D6EE0: fstp %st(0);");
    asm("loc_4D6EE2: flds _data_5D8004;");
    asm("loc_4D6EE8: fstps 0x3B8(%esi);");
    asm("loc_4D6EEE: pop %esi;");
    asm("loc_4D6EEF: add $0x3C,%esp;");
    asm("loc_4D6EF2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6F00() // _sub_4D6F00
{
    __DEBUG_ASM(4D6F00);
    // chunk 0x4D6F00 _sub_4D6F00
    asm("loc_4D6F00: mov 4(%esp),%eax;");
    asm("loc_4D6F04: push %eax;");
    asm("loc_4D6F05: call _sub_4D6F10;");
    asm("loc_4D6F0A: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D6F10() // _sub_4D6F10
{
    __DEBUG_ASM(4D6F10);
    // chunk 0x4D6F10 _sub_4D6F10
    asm("loc_4D6F10: sub $0x88,%esp;");
    asm("loc_4D6F16: push %ebx;");
    asm("loc_4D6F17: push %esi;");
    asm("loc_4D6F18: mov %ecx,%ebx;");
    asm("loc_4D6F1A: call _sub_54BAF0;");
    asm("loc_4D6F1F: mov %eax,%esi;");
    asm("loc_4D6F21: test %esi,%esi;");
    asm("loc_4D6F23: je loc_4D7264;");
    asm("loc_4D6F29: mov (%esi),%eax;");
    asm("loc_4D6F2B: push %edi;");
    asm("loc_4D6F2C: lea 0x28(%esp),%ecx;");
    asm("loc_4D6F30: push %ecx;");
    asm("loc_4D6F31: lea 0x1C(%esp),%edx;");
    asm("loc_4D6F35: push %edx;");
    asm("loc_4D6F36: mov %esi,%ecx;");
    asm("loc_4D6F38: calll *0x2C(%eax);");
    asm("loc_4D6F3B: mov (%esi),%eax;");
    asm("loc_4D6F3D: mov %esi,%ecx;");
    asm("loc_4D6F3F: calll *0xC(%eax);");
    asm("loc_4D6F42: flds 0x18(%esp);");
    asm("loc_4D6F46: mov 0x2C(%esp),%edx;");
    asm("loc_4D6F4A: fchs;");
    asm("loc_4D6F4C: mov %eax,%esi;");
    asm("loc_4D6F4E: mov 0x30(%esp),%eax;");
    asm("loc_4D6F52: mov $9,%ecx;");
    asm("loc_4D6F57: lea 0x64(%esp),%edi;");
    asm("loc_4D6F5B: rep movsl (%esi),(%edi);");
    asm("loc_4D6F5D: mov 0x28(%esp),%ecx;");
    asm("loc_4D6F61: mov %eax,0x90(%esp);");
    asm("loc_4D6F68: mov _data_674A0C,%eax;");
    asm("loc_4D6F6D: test %eax,%eax;");
    asm("loc_4D6F6F: mov %ecx,0x88(%esp);");
    asm("loc_4D6F76: fstps 0x14(%esp);");
    asm("loc_4D6F7A: mov %edx,0x8C(%esp);");
    asm("loc_4D6F81: movl $0,0xC(%esp);");
    asm("loc_4D6F89: movl $0,0x10(%esp);");
    asm("loc_4D6F91: pop %edi;");
    asm("loc_4D6F92: jne loc_4D6F9E;");
    asm("loc_4D6F94: call _sub_5B73E0;");
    asm("loc_4D6F99: mov %eax,_data_674A0C;");
    asm("loc_4D6F9E: mov (%eax),%ecx;");
    asm("loc_4D6FA0: lea 8(%esp),%edx;");
    asm("loc_4D6FA4: push %edx;");
    asm("loc_4D6FA5: lea 0x64(%esp),%edx;");
    asm("loc_4D6FA9: push %edx;");
    asm("loc_4D6FAA: lea 0x5C(%esp),%edx;");
    asm("loc_4D6FAE: push %edx;");
    asm("loc_4D6FAF: push %eax;");
    asm("loc_4D6FB0: calll *0x30(%ecx);");
    asm("loc_4D6FB3: lea 0x54(%esp),%eax;");
    asm("loc_4D6FB7: push %eax;");
    asm("loc_4D6FB8: lea 0x88(%esp),%ecx;");
    asm("loc_4D6FBF: call _sub_4D7270;");
    asm("loc_4D6FC4: mov _data_674A0C,%eax;");
    asm("loc_4D6FC9: test %eax,%eax;");
    asm("loc_4D6FCB: jne loc_4D6FD7;");
    asm("loc_4D6FCD: call _sub_5B73E0;");
    asm("loc_4D6FD2: mov %eax,_data_674A0C;");
    asm("loc_4D6FD7: mov 0x94(%esp),%edx;");
    asm("loc_4D6FDE: mov (%eax),%ecx;");
    asm("loc_4D6FE0: push %edx;");
    asm("loc_4D6FE1: lea 0x64(%esp),%edx;");
    asm("loc_4D6FE5: push %edx;");
    asm("loc_4D6FE6: lea 0x10(%esp),%edx;");
    asm("loc_4D6FEA: push %edx;");
    asm("loc_4D6FEB: push %eax;");
    asm("loc_4D6FEC: calll *0x3C(%ecx);");
    asm("loc_4D6FEF: flds 0x10(%esp);");
    asm("loc_4D6FF3: mov 8(%esp),%eax;");
    asm("loc_4D6FF7: fabs;");
    asm("loc_4D6FF9: flds 8(%esp);");
    asm("loc_4D6FFD: mov 0xC(%esp),%ecx;");
    asm("loc_4D7001: mov 0x10(%esp),%edx;");
    asm("loc_4D7005: fabs;");
    asm("loc_4D7007: fld %st(1);");
    asm("loc_4D7009: fcompp;");
    asm("loc_4D700B: mov %eax,0x18(%esp);");
    asm("loc_4D700F: mov %ecx,0x1C(%esp);");
    asm("loc_4D7013: mov %edx,0x20(%esp);");
    asm("loc_4D7017: fnstsw %ax;");
    asm("loc_4D7019: test $0x41,%ah;");
    asm("loc_4D701C: jne loc_4D7102;");
    asm("loc_4D7022: flds 0xC(%esp);");
    asm("loc_4D7026: fabs;");
    asm("loc_4D7028: fxch;");
    asm("loc_4D702A: fcompp;");
    asm("loc_4D702C: fnstsw %ax;");
    asm("loc_4D702E: test $0x41,%ah;");
    asm("loc_4D7031: jne loc_4D7104;");
    asm("loc_4D7037: flds 0x10(%esp);");
    asm("loc_4D703B: fcomps _data_5C7474;");
    asm("loc_4D7041: fnstsw %ax;");
    asm("loc_4D7043: test $5,%ah;");
    asm("loc_4D7046: jnp loc_4D7264;");
    asm("loc_4D704C: flds _data_5D8008;");
    asm("loc_4D7052: fadds 0x38C(%ebx);");
    asm("loc_4D7058: fsts 0x38C(%ebx);");
    asm("loc_4D705E: fcoms _data_5D8004;");
    asm("loc_4D7064: fnstsw %ax;");
    asm("loc_4D7066: test $5,%ah;");
    asm("loc_4D7069: jnp loc_4D7073;");
    asm("loc_4D706B: fstp %st(0);");
    asm("loc_4D706D: flds _data_5D8004;");
    asm("loc_4D7073: fstps 0x38C(%ebx);");
    asm("loc_4D7079: flds _data_5D8008;");
    asm("loc_4D707F: fadds 0x3B8(%ebx);");
    asm("loc_4D7085: fsts 0x3B8(%ebx);");
    asm("loc_4D708B: fcoms _data_5D8004;");
    asm("loc_4D7091: fnstsw %ax;");
    asm("loc_4D7093: test $5,%ah;");
    asm("loc_4D7096: jnp loc_4D70A0;");
    asm("loc_4D7098: fstp %st(0);");
    asm("loc_4D709A: flds _data_5D8004;");
    asm("loc_4D70A0: fstps 0x3B8(%ebx);");
    asm("loc_4D70A6: flds _data_5D8008;");
    asm("loc_4D70AC: fadds 0x3E4(%ebx);");
    asm("loc_4D70B2: fsts 0x3E4(%ebx);");
    asm("loc_4D70B8: fcoms _data_5D8004;");
    asm("loc_4D70BE: fnstsw %ax;");
    asm("loc_4D70C0: test $5,%ah;");
    asm("loc_4D70C3: jnp loc_4D70CD;");
    asm("loc_4D70C5: fstp %st(0);");
    asm("loc_4D70C7: flds _data_5D8004;");
    asm("loc_4D70CD: fstps 0x3E4(%ebx);");
    asm("loc_4D70D3: flds _data_5D8008;");
    asm("loc_4D70D9: fadds 0x410(%ebx);");
    asm("loc_4D70DF: fsts 0x410(%ebx);");
    asm("loc_4D70E5: fcoms _data_5D8004;");
    asm("loc_4D70EB: fnstsw %ax;");
    asm("loc_4D70ED: test $5,%ah;");
    asm("loc_4D70F0: jnp loc_4D70FA;");
    asm("loc_4D70F2: fstp %st(0);");
    asm("loc_4D70F4: flds _data_5D8004;");
    asm("loc_4D70FA: fstps 0x410(%ebx);");
    asm("loc_4D7100: jmp loc_4D7104;");
    asm("loc_4D7102: fstp %st(0);");
    asm("loc_4D7104: fldl _data_5D8158;");
    asm("loc_4D710A: mov _data_674A0C,%eax;");
    asm("loc_4D710F: test %eax,%eax;");
    asm("loc_4D7111: fcos;");
    asm("loc_4D7113: movl $0,0x38(%esp);");
    asm("loc_4D711B: movl $0,0x44(%esp);");
    asm("loc_4D7123: movl $0,0x48(%esp);");
    asm("loc_4D712B: movl $0,0x4C(%esp);");
    asm("loc_4D7133: movl $0x3F800000,0x50(%esp);");
    asm("loc_4D713B: fldl _data_5D8158;");
    asm("loc_4D7141: fsin;");
    asm("loc_4D7143: fld %st(1);");
    asm("loc_4D7145: fstps 0x30(%esp);");
    asm("loc_4D7149: fld %st(0);");
    asm("loc_4D714B: fchs;");
    asm("loc_4D714D: fstps 0x34(%esp);");
    asm("loc_4D7151: fstps 0x3C(%esp);");
    asm("loc_4D7155: fstps 0x40(%esp);");
    asm("loc_4D7159: jne loc_4D7165;");
    asm("loc_4D715B: call _sub_5B73E0;");
    asm("loc_4D7160: mov %eax,_data_674A0C;");
    asm("loc_4D7165: mov (%eax),%ecx;");
    asm("loc_4D7167: lea 0x18(%esp),%edx;");
    asm("loc_4D716B: push %edx;");
    asm("loc_4D716C: lea 0x34(%esp),%edx;");
    asm("loc_4D7170: push %edx;");
    asm("loc_4D7171: lea 0x10(%esp),%edx;");
    asm("loc_4D7175: push %edx;");
    asm("loc_4D7176: push %eax;");
    asm("loc_4D7177: calll *0x38(%ecx);");
    asm("loc_4D717A: flds 0xC(%esp);");
    asm("loc_4D717E: fcomps _data_5C7474;");
    asm("loc_4D7184: flds 8(%esp);");
    asm("loc_4D7188: fnstsw %ax;");
    asm("loc_4D718A: fcomps _data_5C7474;");
    asm("loc_4D7190: flds _data_5D800C;");
    asm("loc_4D7196: test $0x41,%ah;");
    asm("loc_4D7199: fnstsw %ax;");
    asm("loc_4D719B: jne loc_4D7206;");
    asm("loc_4D719D: test $0x41,%ah;");
    asm("loc_4D71A0: jne loc_4D71D4;");
    asm("loc_4D71A2: fadds 0x38C(%ebx);");
    asm("loc_4D71A8: fsts 0x38C(%ebx);");
    asm("loc_4D71AE: fcoms _data_5D8004;");
    asm("loc_4D71B4: fnstsw %ax;");
    asm("loc_4D71B6: test $5,%ah;");
    asm("loc_4D71B9: jnp loc_4D71C3;");
    asm("loc_4D71BB: fstp %st(0);");
    asm("loc_4D71BD: flds _data_5D8004;");
    asm("loc_4D71C3: pop %esi;");
    asm("loc_4D71C4: fstps 0x38C(%ebx);");
    asm("loc_4D71CA: pop %ebx;");
    asm("loc_4D71CB: add $0x88,%esp;");
    asm("loc_4D71D1: ret $4;");
    asm("loc_4D71D4: fadds 0x3E4(%ebx);");
    asm("loc_4D71DA: fsts 0x3E4(%ebx);");
    asm("loc_4D71E0: fcoms _data_5D8004;");
    asm("loc_4D71E6: fnstsw %ax;");
    asm("loc_4D71E8: test $5,%ah;");
    asm("loc_4D71EB: jnp loc_4D71F5;");
    asm("loc_4D71ED: fstp %st(0);");
    asm("loc_4D71EF: flds _data_5D8004;");
    asm("loc_4D71F5: pop %esi;");
    asm("loc_4D71F6: fstps 0x3E4(%ebx);");
    asm("loc_4D71FC: pop %ebx;");
    asm("loc_4D71FD: add $0x88,%esp;");
    asm("loc_4D7203: ret $4;");
    asm("loc_4D7206: test $0x41,%ah;");
    asm("loc_4D7209: jne loc_4D723D;");
    asm("loc_4D720B: fadds 0x410(%ebx);");
    asm("loc_4D7211: fsts 0x410(%ebx);");
    asm("loc_4D7217: fcoms _data_5D8004;");
    asm("loc_4D721D: fnstsw %ax;");
    asm("loc_4D721F: test $5,%ah;");
    asm("loc_4D7222: jnp loc_4D722C;");
    asm("loc_4D7224: fstp %st(0);");
    asm("loc_4D7226: flds _data_5D8004;");
    asm("loc_4D722C: pop %esi;");
    asm("loc_4D722D: fstps 0x410(%ebx);");
    asm("loc_4D7233: pop %ebx;");
    asm("loc_4D7234: add $0x88,%esp;");
    asm("loc_4D723A: ret $4;");
    asm("loc_4D723D: fadds 0x3B8(%ebx);");
    asm("loc_4D7243: fsts 0x3B8(%ebx);");
    asm("loc_4D7249: fcoms _data_5D8004;");
    asm("loc_4D724F: fnstsw %ax;");
    asm("loc_4D7251: test $5,%ah;");
    asm("loc_4D7254: jnp loc_4D725E;");
    asm("loc_4D7256: fstp %st(0);");
    asm("loc_4D7258: flds _data_5D8004;");
    asm("loc_4D725E: fstps 0x3B8(%ebx);");
    asm("loc_4D7264: pop %esi;");
    asm("loc_4D7265: pop %ebx;");
    asm("loc_4D7266: add $0x88,%esp;");
    asm("loc_4D726C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7270() // _sub_4D7270
{
    __DEBUG_ASM(4D7270);
    // chunk 0x4D7270 _sub_4D7270
    asm("loc_4D7270: mov %ecx,%eax;");
    asm("loc_4D7272: mov 4(%esp),%ecx;");
    asm("loc_4D7276: flds (%ecx);");
    asm("loc_4D7278: fadds (%eax);");
    asm("loc_4D727A: fstps (%eax);");
    asm("loc_4D727C: flds 4(%ecx);");
    asm("loc_4D727F: fadds 4(%eax);");
    asm("loc_4D7282: fstps 4(%eax);");
    asm("loc_4D7285: flds 8(%ecx);");
    asm("loc_4D7288: fadds 8(%eax);");
    asm("loc_4D728B: fstps 8(%eax);");
    asm("loc_4D728E: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D72A0() // _sub_4D72A0
{
    __DEBUG_ASM(4D72A0);
    // chunk 0x4D72A0 _sub_4D72A0
    asm("loc_4D72A0: push $0xFFFFFFFF;");
    asm("loc_4D72A2: push $_sub_5BE258;");
    asm("loc_4D72A7: mov %fs:0,%eax;");
    asm("loc_4D72AD: push %eax;");
    asm("loc_4D72AE: mov %esp,%fs:0;");
    asm("loc_4D72B5: sub $0x40,%esp;");
    asm("loc_4D72B8: push %esi;");
    asm("loc_4D72B9: mov %ecx,%esi;");
    asm("loc_4D72BB: push %edi;");
    asm("loc_4D72BC: mov %esi,8(%esp);");
    asm("loc_4D72C0: call _sub_420D40;");
    asm("loc_4D72C5: mov $0x3F800000,%eax;");
    asm("loc_4D72CA: mov %eax,0x20(%esi);");
    asm("loc_4D72CD: mov %eax,0x1C(%esi);");
    asm("loc_4D72D0: mov %eax,0x18(%esi);");
    asm("loc_4D72D3: mov %eax,0x14(%esi);");
    asm("loc_4D72D6: mov %eax,0x24(%esi);");
    asm("loc_4D72D9: movl $_off_5D2EFC,(%esi);");
    asm("loc_4D72DF: movl $0xFFFFFFFF,0x10(%esi);");
    asm("loc_4D72E6: mov 0x58(%esp),%edi;");
    asm("loc_4D72EA: push $1;");
    asm("loc_4D72EC: push $0;");
    asm("loc_4D72EE: push %edi;");
    asm("loc_4D72EF: mov %esi,%ecx;");
    asm("loc_4D72F1: movl $0,0x5C(%esp);");
    asm("loc_4D72F9: movl $0,0x28(%esi);");
    asm("loc_4D7300: call _sub_59EC80;");
    asm("loc_4D7305: cmpl $0xFFFFFFFF,4(%esi);");
    asm("loc_4D7309: jne loc_4D732B;");
    asm("loc_4D730B: push %edi;");
    asm("loc_4D730C: push $0xF7;");
    asm("loc_4D7311: push $_data_5D8198;");
    asm("loc_4D7316: mov $0x100001,%eax;");
    asm("loc_4D731B: push $_data_5D8160;");
    asm("loc_4D7320: push %eax;");
    asm("loc_4D7321: mov _import_5C6D18,%eax;");
    asm("loc_4D7326: calll *(%eax);");
    asm("loc_4D7328: add $0x14,%esp;");
    asm("loc_4D732B: flds 0x5C(%esp);");
    asm("loc_4D732F: movl $0,0xC(%esp);");
    asm("loc_4D7337: fmuls _data_5C77F4;");
    asm("loc_4D733D: mov 0xC(%esp),%ecx;");
    asm("loc_4D7341: mov %ecx,0x3C(%esp);");
    asm("loc_4D7345: mov _import_5C6D90,%ecx;");
    asm("loc_4D734B: fsts 0x58(%esp);");
    asm("loc_4D734F: movl $0,0x10(%esp);");
    asm("loc_4D7357: fcos;");
    asm("loc_4D7359: mov 0x10(%esp),%edx;");
    asm("loc_4D735D: movl $0xBF800000,0x14(%esp);");
    asm("loc_4D7365: mov 0x14(%esp),%eax;");
    asm("loc_4D7369: mov %edx,0x40(%esp);");
    asm("loc_4D736D: mov %eax,0x44(%esp);");
    asm("loc_4D7371: movl $0,0x20(%esp);");
    asm("loc_4D7379: movl $0,0x2C(%esp);");
    asm("loc_4D7381: movl $0,0x30(%esp);");
    asm("loc_4D7389: movl $0,0x34(%esp);");
    asm("loc_4D7391: movl $0x3F800000,0x38(%esp);");
    asm("loc_4D7399: flds 0x58(%esp);");
    asm("loc_4D739D: fsin;");
    asm("loc_4D739F: fld %st(1);");
    asm("loc_4D73A1: fstps 0x18(%esp);");
    asm("loc_4D73A5: fld %st(0);");
    asm("loc_4D73A7: fchs;");
    asm("loc_4D73A9: fstps 0x1C(%esp);");
    asm("loc_4D73AD: fstps 0x24(%esp);");
    asm("loc_4D73B1: fstps 0x28(%esp);");
    asm("loc_4D73B5: mov (%ecx),%eax;");
    asm("loc_4D73B7: mov (%eax),%edx;");
    asm("loc_4D73B9: lea 0x18(%esp),%ecx;");
    asm("loc_4D73BD: push %ecx;");
    asm("loc_4D73BE: mov 4(%esi),%ecx;");
    asm("loc_4D73C1: push %ecx;");
    asm("loc_4D73C2: push %eax;");
    asm("loc_4D73C3: calll *0x9C(%edx);");
    asm("loc_4D73C9: mov _import_5C6D90,%edx;");
    asm("loc_4D73CF: mov (%edx),%eax;");
    asm("loc_4D73D1: mov 4(%esi),%edx;");
    asm("loc_4D73D4: mov (%eax),%ecx;");
    asm("loc_4D73D6: push $0;");
    asm("loc_4D73D8: push $0;");
    asm("loc_4D73DA: push %edx;");
    asm("loc_4D73DB: push %eax;");
    asm("loc_4D73DC: calll *0x6C(%ecx);");
    asm("loc_4D73DF: mov 0x48(%esp),%ecx;");
    asm("loc_4D73E3: pop %edi;");
    asm("loc_4D73E4: mov %esi,%eax;");
    asm("loc_4D73E6: pop %esi;");
    asm("loc_4D73E7: mov %ecx,%fs:0;");
    asm("loc_4D73EE: add $0x4C,%esp;");
    asm("loc_4D73F1: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7400() // _sub_4D7400
{
    __DEBUG_ASM(4D7400);
    // chunk 0x4D7400 _sub_4D7400
    asm("loc_4D7400: push $0xFFFFFFFF;");
    asm("loc_4D7402: push $_sub_5BE278;");
    asm("loc_4D7407: mov %fs:0,%eax;");
    asm("loc_4D740D: push %eax;");
    asm("loc_4D740E: mov %esp,%fs:0;");
    asm("loc_4D7415: push %ecx;");
    asm("loc_4D7416: push %esi;");
    asm("loc_4D7417: mov %ecx,%esi;");
    asm("loc_4D7419: mov %esi,4(%esp);");
    asm("loc_4D741D: cmpl $0xFFFFFFFF,4(%esi);");
    asm("loc_4D7421: movl $0,0x10(%esp);");
    asm("loc_4D7429: je loc_4D7430;");
    asm("loc_4D742B: call _sub_59EEE0;");
    asm("loc_4D7430: mov %esi,%ecx;");
    asm("loc_4D7432: movl $0xFFFFFFFF,0x10(%esp);");
    asm("loc_4D743A: call _sub_59EF20;");
    asm("loc_4D743F: mov 8(%esp),%ecx;");
    asm("loc_4D7443: pop %esi;");
    asm("loc_4D7444: mov %ecx,%fs:0;");
    asm("loc_4D744B: add $0x10,%esp;");
    asm("loc_4D744E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7450() // _sub_4D7450
{
    __DEBUG_ASM(4D7450);
    // chunk 0x4D7450 _sub_4D7450
    asm("loc_4D7450: push %ebx;");
    asm("loc_4D7451: mov %ecx,%ebx;");
    asm("loc_4D7453: xor %eax,%eax;");
    asm("loc_4D7455: push %esi;");
    asm("loc_4D7456: mov 0xC(%esp),%esi;");
    asm("loc_4D745A: cmp %eax,%esi;");
    asm("loc_4D745C: mov %eax,8(%ebx);");
    asm("loc_4D745F: mov %al,0xC(%ebx);");
    asm("loc_4D7462: movl $_off_5D6E30,(%ebx);");
    asm("loc_4D7468: mov %eax,4(%ebx);");
    asm("loc_4D746B: jne loc_4D7472;");
    asm("loc_4D746D: mov %al,0xC(%ebx);");
    asm("loc_4D7470: jmp loc_4D74A7;");
    asm("loc_4D7472: push %ebp;");
    asm("loc_4D7473: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D7476: xor %eax,%eax;");
    asm("loc_4D7478: push %edi;");
    asm("loc_4D7479: mov %esi,%edi;");
    asm("loc_4D747B: repne scas (%edi),%al;");
    asm("loc_4D747D: not %ecx;");
    asm("loc_4D747F: dec %ecx;");
    asm("loc_4D7480: mov %ecx,%eax;");
    asm("loc_4D7482: cmp $0x20,%eax;");
    asm("loc_4D7485: lea 0xC(%ebx),%ebp;");
    asm("loc_4D7488: jb loc_4D748F;");
    asm("loc_4D748A: mov $0x1F,%eax;");
    asm("loc_4D748F: mov %eax,%ecx;");
    asm("loc_4D7491: mov %ecx,%edx;");
    asm("loc_4D7493: shr $2,%ecx;");
    asm("loc_4D7496: mov %ebp,%edi;");
    asm("loc_4D7498: rep movsl (%esi),(%edi);");
    asm("loc_4D749A: mov %edx,%ecx;");
    asm("loc_4D749C: and $3,%ecx;");
    asm("loc_4D749F: rep movsb (%esi),(%edi);");
    asm("loc_4D74A1: pop %edi;");
    asm("loc_4D74A2: movb $0,(%eax,%ebp);");
    asm("loc_4D74A6: pop %ebp;");
    asm("loc_4D74A7: push %ebx;");
    asm("loc_4D74A8: mov %eax,8(%ebx);");
    asm("loc_4D74AB: call _sub_4C72B0;");
    asm("loc_4D74B0: add $4,%esp;");
    asm("loc_4D74B3: pop %esi;");
    asm("loc_4D74B4: movl $_off_5D81D8,(%ebx);");
    asm("loc_4D74BA: mov %ebx,%eax;");
    asm("loc_4D74BC: pop %ebx;");
    asm("loc_4D74BD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D74C0() // _sub_4D74C0
{
    __DEBUG_ASM(4D74C0);
    // chunk 0x4D74C0 _sub_4D74C0
    asm("loc_4D74C0: push $0xFFFFFFFF;");
    asm("loc_4D74C2: push $_sub_5BE29B;");
    asm("loc_4D74C7: mov %fs:0,%eax;");
    asm("loc_4D74CD: push %eax;");
    asm("loc_4D74CE: mov %esp,%fs:0;");
    asm("loc_4D74D5: push %ecx;");
    asm("loc_4D74D6: push $0x414;");
    asm("loc_4D74DB: call _sub_5B7E84;");
    asm("loc_4D74E0: add $4,%esp;");
    asm("loc_4D74E3: mov %eax,(%esp);");
    asm("loc_4D74E7: test %eax,%eax;");
    asm("loc_4D74E9: movl $0,0xC(%esp);");
    asm("loc_4D74F1: je loc_4D7510;");
    asm("loc_4D74F3: mov 0x14(%esp),%ecx;");
    asm("loc_4D74F7: push %ecx;");
    asm("loc_4D74F8: mov %eax,%ecx;");
    asm("loc_4D74FA: call _sub_4D62D0;");
    asm("loc_4D74FF: mov 4(%esp),%ecx;");
    asm("loc_4D7503: mov %ecx,%fs:0;");
    asm("loc_4D750A: add $0x10,%esp;");
    asm("loc_4D750D: ret $4;");
    asm("loc_4D7510: mov 4(%esp),%ecx;");
    asm("loc_4D7514: xor %eax,%eax;");
    asm("loc_4D7516: mov %ecx,%fs:0;");
    asm("loc_4D751D: add $0x10,%esp;");
    asm("loc_4D7520: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7530() // _sub_4D7530
{
    __DEBUG_ASM(4D7530);
    // chunk 0x4D7530 _sub_4D7530
    asm("loc_4D7530: sub $0x38,%ecx;");
    asm("loc_4D7533: jmp _sub_4D64A0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7540() // _sub_4D7540
{
    __DEBUG_ASM(4D7540);
    // chunk 0x4D7540 _sub_4D7540
    asm("loc_4D7540: mov _data_5D8278,%eax;");
    asm("loc_4D7545: mov %eax,_data_674A50;");
    asm("loc_4D754A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7550() // _sub_4D7550
{
    __DEBUG_ASM(4D7550);
    // chunk 0x4D7550 _sub_4D7550
    asm("loc_4D7550: mov _data_5D8278,%eax;");
    asm("loc_4D7555: mov %eax,_data_674A4C;");
    asm("loc_4D755A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7560() // _sub_4D7560
{
    __DEBUG_ASM(4D7560);
    // chunk 0x4D7560 _sub_4D7560
    asm("loc_4D7560: mov _data_5D827C,%eax;");
    asm("loc_4D7565: mov %eax,_data_674A48;");
    asm("loc_4D756A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7570() // _sub_4D7570
{
    __DEBUG_ASM(4D7570);
    // chunk 0x4D7570 _sub_4D7570
    asm("loc_4D7570: push $_data_5D829C;");
    asm("loc_4D7575: mov $_data_674A1C,%ecx;");
    asm("loc_4D757A: call _sub_4D9990;");
    asm("loc_4D757F: push $_sub_4D7590;");
    asm("loc_4D7584: call _sub_5B7E6C;");
    asm("loc_4D7589: pop %ecx;");
    asm("loc_4D758A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7590() // _unknown_libname_51
{
    __DEBUG_ASM(4D7590);
    // chunk 0x4D7590 _sub_4D7590
    asm("loc_4D7590: mov $_data_674A1C,%ecx;");
    asm("loc_4D7595: jmp _sub_4CF010;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D75A0() // _sub_4D75A0
{
    __DEBUG_ASM(4D75A0);
    // chunk 0x4D75A0 _sub_4D75A0
    asm("loc_4D75A0: push $_data_5D82A8;");
    asm("loc_4D75A5: calll *_import_5C6020;");
    asm("loc_4D75AB: add $4,%esp;");
    asm("loc_4D75AE: mov %eax,_data_674A18;");
    asm("loc_4D75B3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D75C0() // _sub_4D75C0
{
    __DEBUG_ASM(4D75C0);
    // chunk 0x4D75C0 _sub_4D75C0
    asm("loc_4D75C0: push $_data_5D82B4;");
    asm("loc_4D75C5: calll *_import_5C6020;");
    asm("loc_4D75CB: add $4,%esp;");
    asm("loc_4D75CE: mov %eax,_data_674A14;");
    asm("loc_4D75D3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D75E0() // _sub_4D75E0
{
    __DEBUG_ASM(4D75E0);
    // chunk 0x4D75E0 _sub_4D75E0
    asm("loc_4D75E0: push $0xFFFFFFFF;");
    asm("loc_4D75E2: push $_sub_5BE316;");
    asm("loc_4D75E7: mov %fs:0,%eax;");
    asm("loc_4D75ED: push %eax;");
    asm("loc_4D75EE: mov %esp,%fs:0;");
    asm("loc_4D75F5: sub $0x16C,%esp;");
    asm("loc_4D75FB: push %ebx;");
    asm("loc_4D75FC: push %ebp;");
    asm("loc_4D75FD: mov %ecx,%ebx;");
    asm("loc_4D75FF: push %esi;");
    asm("loc_4D7600: push %edi;");
    asm("loc_4D7601: xor %ebp,%ebp;");
    asm("loc_4D7603: lea 0x28(%ebx),%esi;");
    asm("loc_4D7606: push %ebp;");
    asm("loc_4D7607: mov %esi,%ecx;");
    asm("loc_4D7609: mov %ebx,0x34(%esp);");
    asm("loc_4D760D: mov %ebp,4(%ebx);");
    asm("loc_4D7610: movb $0,8(%ebx);");
    asm("loc_4D7614: call _sub_4C95B0;");
    asm("loc_4D7619: movl $_off_5D6EAC,(%ebx);");
    asm("loc_4D761F: mov %ebp,0x34(%ebx);");
    asm("loc_4D7622: cmp %ebp,(%esi);");
    asm("loc_4D7624: mov %ebp,0x184(%esp);");
    asm("loc_4D762B: je loc_4D7636;");
    asm("loc_4D762D: push %ebp;");
    asm("loc_4D762E: mov %esi,%ecx;");
    asm("loc_4D7630: calll *_import_5C62A8;");
    asm("loc_4D7636: mov %ebp,0x30(%ebx);");
    asm("loc_4D7639: lea 0x38(%ebx),%esi;");
    asm("loc_4D763C: mov %esi,%ecx;");
    asm("loc_4D763E: movl $1,0x184(%esp);");
    asm("loc_4D7649: call _sub_59F860;");
    asm("loc_4D764E: movl $_off_5CBED8,0x364(%ebx);");
    asm("loc_4D7658: mov 0x13(%esp),%al;");
    asm("loc_4D765C: mov %al,0x37C(%ebx);");
    asm("loc_4D7662: mov %ebp,0x380(%ebx);");
    asm("loc_4D7668: mov %ebp,0x384(%ebx);");
    asm("loc_4D766E: mov %ebp,0x388(%ebx);");
    asm("loc_4D7674: mov %ebp,0x390(%ebx);");
    asm("loc_4D767A: mov %ebp,0x394(%ebx);");
    asm("loc_4D7680: movl $_off_5D8344,(%esi);");
    asm("loc_4D7686: mov 0x18C(%esp),%esi;");
    asm("loc_4D768D: movl $_off_5D8310,(%ebx);");
    asm("loc_4D7693: movl $_off_5D8304,0xB4(%ebx);");
    asm("loc_4D769D: movl $_off_5D82FC,0x364(%ebx);");
    asm("loc_4D76A7: movl $_off_5D82F4,0x368(%ebx);");
    asm("loc_4D76B1: mov %esi,%ecx;");
    asm("loc_4D76B3: movb $6,0x184(%esp);");
    asm("loc_4D76BB: mov %ebx,_data_674A58;");
    asm("loc_4D76C1: calll *_import_5C669C;");
    asm("loc_4D76C7: test %al,%al;");
    asm("loc_4D76C9: je loc_4D792A;");
    asm("loc_4D76CF: nop;");
    asm("loc_4D76D0: push $_data_5D82E4;");
    asm("loc_4D76D5: mov %esi,%ecx;");
    asm("loc_4D76D7: calll *_import_5C6CF4;");
    asm("loc_4D76DD: test %al,%al;");
    asm("loc_4D76DF: je loc_4D791A;");
    asm("loc_4D76E5: mov 0x384(%ebx),%edx;");
    asm("loc_4D76EB: lea 0x34(%esp),%ecx;");
    asm("loc_4D76EF: push %ecx;");
    asm("loc_4D76F0: lea 0x37C(%ebx),%ecx;");
    asm("loc_4D76F6: push %edx;");
    asm("loc_4D76F7: mov %ebp,0x3C(%esp);");
    asm("loc_4D76FB: movb $0,0x40(%esp);");
    asm("loc_4D7700: mov %ebp,0x60(%esp);");
    asm("loc_4D7704: movb $0,0x64(%esp);");
    asm("loc_4D7709: mov %ebp,0xE4(%esp);");
    asm("loc_4D7710: movb $0,0xE8(%esp);");
    asm("loc_4D7718: call _sub_4D9A70;");
    asm("loc_4D771D: mov 0x384(%ebx),%ebp;");
    asm("loc_4D7723: push $0;");
    asm("loc_4D7725: mov %esi,%ecx;");
    asm("loc_4D7727: sub $0x148,%ebp;");
    asm("loc_4D772D: calll *_import_5C6024;");
    asm("loc_4D7733: test %eax,%eax;");
    asm("loc_4D7735: lea 4(%ebp),%edi;");
    asm("loc_4D7738: jne loc_4D7741;");
    asm("loc_4D773A: mov %eax,(%ebp);");
    asm("loc_4D773D: mov %al,(%edi);");
    asm("loc_4D773F: jmp loc_4D7750;");
    asm("loc_4D7741: push %eax;");
    asm("loc_4D7742: push $0x20;");
    asm("loc_4D7744: push %edi;");
    asm("loc_4D7745: call _sub_417C50;");
    asm("loc_4D774A: add $0xC,%esp;");
    asm("loc_4D774D: mov %eax,(%ebp);");
    asm("loc_4D7750: push $1;");
    asm("loc_4D7752: mov %esi,%ecx;");
    asm("loc_4D7754: calll *_import_5C6CFC;");
    asm("loc_4D775A: call _sub_5B7EC0;");
    asm("loc_4D775F: push $2;");
    asm("loc_4D7761: mov %esi,%ecx;");
    asm("loc_4D7763: mov %eax,0x12C(%ebp);");
    asm("loc_4D7769: calll *_import_5C6CFC;");
    asm("loc_4D776F: call _sub_5B7EC0;");
    asm("loc_4D7774: push $3;");
    asm("loc_4D7776: mov %esi,%ecx;");
    asm("loc_4D7778: mov %eax,0x130(%ebp);");
    asm("loc_4D777E: calll *_import_5C6024;");
    asm("loc_4D7784: test %eax,%eax;");
    asm("loc_4D7786: jne loc_4D7790;");
    asm("loc_4D7788: mov %eax,0x24(%ebp);");
    asm("loc_4D778B: mov %al,0x28(%ebp);");
    asm("loc_4D778E: jmp loc_4D77A5;");
    asm("loc_4D7790: push %eax;");
    asm("loc_4D7791: lea 0x28(%ebp),%eax;");
    asm("loc_4D7794: push $0x80;");
    asm("loc_4D7799: push %eax;");
    asm("loc_4D779A: call _sub_417C50;");
    asm("loc_4D779F: add $0xC,%esp;");
    asm("loc_4D77A2: mov %eax,0x24(%ebp);");
    asm("loc_4D77A5: push $4;");
    asm("loc_4D77A7: lea 0x30(%esp),%ecx;");
    asm("loc_4D77AB: push %ecx;");
    asm("loc_4D77AC: push %edi;");
    asm("loc_4D77AD: mov $_off_612638,%ecx;");
    asm("loc_4D77B2: call _sub_4D9CA0;");
    asm("loc_4D77B7: mov 0x2C(%esp),%edx;");
    asm("loc_4D77BB: neg %al;");
    asm("loc_4D77BD: sbb %eax,%eax;");
    asm("loc_4D77BF: and %edx,%eax;");
    asm("loc_4D77C1: mov %eax,0x134(%ebp);");
    asm("loc_4D77C7: lea 4(%ebp),%eax;");
    asm("loc_4D77CA: push %eax;");
    asm("loc_4D77CB: calll *_import_5C650C;");
    asm("loc_4D77D1: add $4,%esp;");
    asm("loc_4D77D4: push $4;");
    asm("loc_4D77D6: mov %esi,%ecx;");
    asm("loc_4D77D8: mov %eax,0x138(%ebp);");
    asm("loc_4D77DE: calll *_import_5C6024;");
    asm("loc_4D77E4: test %eax,%eax;");
    asm("loc_4D77E6: jne loc_4D77F6;");
    asm("loc_4D77E8: mov %eax,0xA8(%ebp);");
    asm("loc_4D77EE: mov %al,0xAC(%ebp);");
    asm("loc_4D77F4: jmp loc_4D7811;");
    asm("loc_4D77F6: push %eax;");
    asm("loc_4D77F7: lea 0xAC(%ebp),%edx;");
    asm("loc_4D77FD: push $0x80;");
    asm("loc_4D7802: push %edx;");
    asm("loc_4D7803: call _sub_417C50;");
    asm("loc_4D7808: add $0xC,%esp;");
    asm("loc_4D780B: mov %eax,0xA8(%ebp);");
    asm("loc_4D7811: lea 0x24(%ebp),%ecx;");
    asm("loc_4D7814: call _sub_4D9980;");
    asm("loc_4D7819: sub $0x10,%esp;");
    asm("loc_4D781C: mov %esp,%esi;");
    asm("loc_4D781E: mov %eax,%edi;");
    asm("loc_4D7820: mov 0x23(%esp),%al;");
    asm("loc_4D7824: mov %esp,0x28(%esp);");
    asm("loc_4D7828: push $0;");
    asm("loc_4D782A: mov %esi,%ecx;");
    asm("loc_4D782C: mov %edi,0x30(%esp);");
    asm("loc_4D7830: mov %esi,0x28(%esp);");
    asm("loc_4D7834: mov %al,(%esi);");
    asm("loc_4D7836: calll *_import_5C7084;");
    asm("loc_4D783C: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D783F: xor %eax,%eax;");
    asm("loc_4D7841: repne scas (%edi),%al;");
    asm("loc_4D7843: not %ecx;");
    asm("loc_4D7845: dec %ecx;");
    asm("loc_4D7846: mov %ecx,%edi;");
    asm("loc_4D7848: push $1;");
    asm("loc_4D784A: push %edi;");
    asm("loc_4D784B: mov %esi,%ecx;");
    asm("loc_4D784D: mov %edi,0x30(%esp);");
    asm("loc_4D7851: calll *_import_5C708C;");
    asm("loc_4D7857: test %al,%al;");
    asm("loc_4D7859: je loc_4D7881;");
    asm("loc_4D785B: mov 0x24(%esp),%eax;");
    asm("loc_4D785F: mov 0x2C(%esp),%esi;");
    asm("loc_4D7863: mov %edi,%ecx;");
    asm("loc_4D7865: mov 4(%eax),%edi;");
    asm("loc_4D7868: mov %ecx,%edx;");
    asm("loc_4D786A: shr $2,%ecx;");
    asm("loc_4D786D: rep movsl (%esi),(%edi);");
    asm("loc_4D786F: mov %edx,%ecx;");
    asm("loc_4D7871: and $3,%ecx;");
    asm("loc_4D7874: rep movsb (%esi),(%edi);");
    asm("loc_4D7876: mov %edx,%ecx;");
    asm("loc_4D7878: push %ecx;");
    asm("loc_4D7879: mov %eax,%ecx;");
    asm("loc_4D787B: calll *_import_5C706C;");
    asm("loc_4D7881: call _sub_55A360;");
    asm("loc_4D7886: add $0x10,%esp;");
    asm("loc_4D7889: lea 0xA8(%ebp),%ecx;");
    asm("loc_4D788F: mov %eax,0x140(%ebp);");
    asm("loc_4D7895: call _sub_4D9980;");
    asm("loc_4D789A: mov 0x13(%esp),%dl;");
    asm("loc_4D789E: sub $0x10,%esp;");
    asm("loc_4D78A1: mov %esp,%esi;");
    asm("loc_4D78A3: mov %esp,0x24(%esp);");
    asm("loc_4D78A7: mov %eax,%edi;");
    asm("loc_4D78A9: push $0;");
    asm("loc_4D78AB: mov %esi,%ecx;");
    asm("loc_4D78AD: mov %edi,0x2C(%esp);");
    asm("loc_4D78B1: mov %esi,0x28(%esp);");
    asm("loc_4D78B5: mov %dl,(%esi);");
    asm("loc_4D78B7: calll *_import_5C7084;");
    asm("loc_4D78BD: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D78C0: xor %eax,%eax;");
    asm("loc_4D78C2: repne scas (%edi),%al;");
    asm("loc_4D78C4: not %ecx;");
    asm("loc_4D78C6: dec %ecx;");
    asm("loc_4D78C7: mov %ecx,%edi;");
    asm("loc_4D78C9: push $1;");
    asm("loc_4D78CB: push %edi;");
    asm("loc_4D78CC: mov %esi,%ecx;");
    asm("loc_4D78CE: mov %edi,0x34(%esp);");
    asm("loc_4D78D2: calll *_import_5C708C;");
    asm("loc_4D78D8: test %al,%al;");
    asm("loc_4D78DA: je loc_4D7903;");
    asm("loc_4D78DC: mov 0x24(%esp),%eax;");
    asm("loc_4D78E0: mov 0x28(%esp),%esi;");
    asm("loc_4D78E4: mov %edi,%ecx;");
    asm("loc_4D78E6: mov 4(%eax),%edi;");
    asm("loc_4D78E9: mov %ecx,%edx;");
    asm("loc_4D78EB: shr $2,%ecx;");
    asm("loc_4D78EE: rep movsl (%esi),(%edi);");
    asm("loc_4D78F0: mov %edx,%ecx;");
    asm("loc_4D78F2: and $3,%ecx;");
    asm("loc_4D78F5: rep movsb (%esi),(%edi);");
    asm("loc_4D78F7: mov %edx,%ecx;");
    asm("loc_4D78F9: mov %ecx,8(%eax);");
    asm("loc_4D78FC: mov 4(%eax),%eax;");
    asm("loc_4D78FF: movb $0,(%ecx,%eax);");
    asm("loc_4D7903: call _sub_55A360;");
    asm("loc_4D7908: mov 0x19C(%esp),%esi;");
    asm("loc_4D790F: add $0x10,%esp;");
    asm("loc_4D7912: mov %eax,0x144(%ebp);");
    asm("loc_4D7918: xor %ebp,%ebp;");
    asm("loc_4D791A: mov %esi,%ecx;");
    asm("loc_4D791C: calll *_import_5C669C;");
    asm("loc_4D7922: test %al,%al;");
    asm("loc_4D7924: jne loc_4D76D0;");
    asm("loc_4D792A: push $_data_5D829C;");
    asm("loc_4D792F: lea 8(%ebx),%ecx;");
    asm("loc_4D7932: push $0x20;");
    asm("loc_4D7934: push %ecx;");
    asm("loc_4D7935: call _sub_417C50;");
    asm("loc_4D793A: add $0xC,%esp;");
    asm("loc_4D793D: push %ebp;");
    asm("loc_4D793E: push %ebp;");
    asm("loc_4D793F: lea 0x38(%ebx),%ecx;");
    asm("loc_4D7942: mov %eax,4(%ebx);");
    asm("loc_4D7945: call _sub_4D7B50;");
    asm("loc_4D794A: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D794D: xor %eax,%eax;");
    asm("loc_4D794F: mov $_data_5D82D4,%edi;");
    asm("loc_4D7954: repne scas (%edi),%al;");
    asm("loc_4D7956: not %ecx;");
    asm("loc_4D7958: dec %ecx;");
    asm("loc_4D7959: mov %ecx,%eax;");
    asm("loc_4D795B: cmp $0x20,%eax;");
    asm("loc_4D795E: lea 0x50(%ebx),%edx;");
    asm("loc_4D7961: jb loc_4D7968;");
    asm("loc_4D7963: mov $0x1F,%eax;");
    asm("loc_4D7968: mov %eax,%ecx;");
    asm("loc_4D796A: mov %edx,%edi;");
    asm("loc_4D796C: mov %ecx,%edx;");
    asm("loc_4D796E: shr $2,%ecx;");
    asm("loc_4D7971: mov $_data_5D82D4,%esi;");
    asm("loc_4D7976: rep movsl (%esi),(%edi);");
    asm("loc_4D7978: mov %edx,%ecx;");
    asm("loc_4D797A: and $3,%ecx;");
    asm("loc_4D797D: rep movsb (%esi),(%edi);");
    asm("loc_4D797F: movb $0,0x50(%eax,%ebx);");
    asm("loc_4D7984: mov %eax,0x4C(%ebx);");
    asm("loc_4D7987: lea 0x390(%ebx),%ecx;");
    asm("loc_4D798D: movl $_data_5D82D4,0x48(%ebx);");
    asm("loc_4D7994: mov %ebp,0x38C(%ebx);");
    asm("loc_4D799A: cmp %ebp,(%ecx);");
    asm("loc_4D799C: je loc_4D79A5;");
    asm("loc_4D799E: push %ebp;");
    asm("loc_4D799F: calll *_import_5C62A8;");
    asm("loc_4D79A5: lea 0x398(%ebx),%eax;");
    asm("loc_4D79AB: movl $0x3D1FBE77,0x20(%esp);");
    asm("loc_4D79B3: mov 0x20(%esp),%ecx;");
    asm("loc_4D79B7: mov %ecx,(%eax);");
    asm("loc_4D79B9: movl $0x3D1FBE77,0x24(%esp);");
    asm("loc_4D79C1: mov 0x24(%esp),%edx;");
    asm("loc_4D79C5: mov %edx,4(%eax);");
    asm("loc_4D79C8: movl $0,0x28(%esp);");
    asm("loc_4D79D0: mov 0x28(%esp),%ecx;");
    asm("loc_4D79D4: mov %ecx,8(%eax);");
    asm("loc_4D79D7: mov 0x17C(%esp),%ecx;");
    asm("loc_4D79DE: or $0xFFFFFFFF,%eax;");
    asm("loc_4D79E1: mov %eax,0x3A4(%ebx);");
    asm("loc_4D79E7: mov %eax,0x3A8(%ebx);");
    asm("loc_4D79ED: mov _data_5D828C,%edx;");
    asm("loc_4D79F3: pop %edi;");
    asm("loc_4D79F4: mov %ebp,0x3B0(%ebx);");
    asm("loc_4D79FA: mov %ebp,0x3B4(%ebx);");
    asm("loc_4D7A00: mov %ebp,0x3E8(%ebx);");
    asm("loc_4D7A06: pop %esi;");
    asm("loc_4D7A07: mov %edx,0x3AC(%ebx);");
    asm("loc_4D7A0D: movl $1,0x3C0(%ebx);");
    asm("loc_4D7A17: movl $0x13,0x3C8(%ebx);");
    asm("loc_4D7A21: movb $0,0x3CC(%ebx);");
    asm("loc_4D7A28: movb $0,0x3CD(%ebx);");
    asm("loc_4D7A2F: pop %ebp;");
    asm("loc_4D7A30: mov %ebx,%eax;");
    asm("loc_4D7A32: mov %ecx,%fs:0;");
    asm("loc_4D7A39: pop %ebx;");
    asm("loc_4D7A3A: add $0x178,%esp;");
    asm("loc_4D7A40: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7A50() // _sub_4D7A50
{
    __DEBUG_ASM(4D7A50);
    // chunk 0x4D7A50 _sub_4D7A50
    asm("loc_4D7A50: push %esi;");
    asm("loc_4D7A51: mov %ecx,%esi;");
    asm("loc_4D7A53: call _sub_4D7A70;");
    asm("loc_4D7A58: testb $1,8(%esp);");
    asm("loc_4D7A5D: je loc_4D7A68;");
    asm("loc_4D7A5F: push %esi;");
    asm("loc_4D7A60: call _sub_5B7E1D;");
    asm("loc_4D7A65: add $4,%esp;");
    asm("loc_4D7A68: mov %esi,%eax;");
    asm("loc_4D7A6A: pop %esi;");
    asm("loc_4D7A6B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7A70() // _sub_4D7A70
{
    __DEBUG_ASM(4D7A70);
    // chunk 0x4D7A70 _sub_4D7A70
    asm("loc_4D7A70: push $0xFFFFFFFF;");
    asm("loc_4D7A72: push $_sub_5BE386;");
    asm("loc_4D7A77: mov %fs:0,%eax;");
    asm("loc_4D7A7D: push %eax;");
    asm("loc_4D7A7E: mov %esp,%fs:0;");
    asm("loc_4D7A85: sub $0xC,%esp;");
    asm("loc_4D7A88: push %ebx;");
    asm("loc_4D7A89: push %ebp;");
    asm("loc_4D7A8A: push %esi;");
    asm("loc_4D7A8B: mov %ecx,%esi;");
    asm("loc_4D7A8D: push %edi;");
    asm("loc_4D7A8E: lea 0x38(%esi),%edi;");
    asm("loc_4D7A91: lea 0x364(%esi),%ebp;");
    asm("loc_4D7A97: mov %esi,0x18(%esp);");
    asm("loc_4D7A9B: movl $_off_5D8310,(%esi);");
    asm("loc_4D7AA1: movl $_off_5D8344,(%edi);");
    asm("loc_4D7AA7: movl $_off_5D8304,0xB4(%esi);");
    asm("loc_4D7AB1: movl $_off_5D82FC,(%ebp);");
    asm("loc_4D7AB8: movl $_off_5D82F4,0x368(%esi);");
    asm("loc_4D7AC2: xor %ebx,%ebx;");
    asm("loc_4D7AC4: lea 0x390(%esi),%ecx;");
    asm("loc_4D7ACA: mov %ebx,_data_674A58;");
    asm("loc_4D7AD0: cmp %ebx,(%ecx);");
    asm("loc_4D7AD2: movl $3,0x24(%esp);");
    asm("loc_4D7ADA: je loc_4D7AE3;");
    asm("loc_4D7ADC: push %ebx;");
    asm("loc_4D7ADD: calll *_import_5C62A8;");
    asm("loc_4D7AE3: mov 0x380(%esi),%eax;");
    asm("loc_4D7AE9: push %eax;");
    asm("loc_4D7AEA: call _sub_5B7E1D;");
    asm("loc_4D7AEF: add $4,%esp;");
    asm("loc_4D7AF2: mov %ebp,%ecx;");
    asm("loc_4D7AF4: mov %ebx,0x380(%esi);");
    asm("loc_4D7AFA: mov %ebx,0x384(%esi);");
    asm("loc_4D7B00: mov %ebx,0x388(%esi);");
    asm("loc_4D7B06: movb $1,0x24(%esp);");
    asm("loc_4D7B0B: call _sub_576010;");
    asm("loc_4D7B10: mov %edi,%ecx;");
    asm("loc_4D7B12: mov %bl,0x24(%esp);");
    asm("loc_4D7B16: call _sub_59FA50;");
    asm("loc_4D7B1B: lea 0x28(%esi),%ecx;");
    asm("loc_4D7B1E: movl $_off_5D6EAC,(%esi);");
    asm("loc_4D7B24: cmp %ebx,(%ecx);");
    asm("loc_4D7B26: movl $0xFFFFFFFF,0x24(%esp);");
    asm("loc_4D7B2E: je loc_4D7B37;");
    asm("loc_4D7B30: push %ebx;");
    asm("loc_4D7B31: calll *_import_5C62A8;");
    asm("loc_4D7B37: mov 0x1C(%esp),%ecx;");
    asm("loc_4D7B3B: pop %edi;");
    asm("loc_4D7B3C: pop %esi;");
    asm("loc_4D7B3D: pop %ebp;");
    asm("loc_4D7B3E: pop %ebx;");
    asm("loc_4D7B3F: mov %ecx,%fs:0;");
    asm("loc_4D7B46: add $0x18,%esp;");
    asm("loc_4D7B49: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7B50() // _sub_4D7B50
{
    __DEBUG_ASM(4D7B50);
    // chunk 0x4D7B50 _sub_4D7B50
    asm("loc_4D7B50: sub $0x188,%esp;");
    asm("loc_4D7B56: push %ebx;");
    asm("loc_4D7B57: push %ebp;");
    asm("loc_4D7B58: push %esi;");
    asm("loc_4D7B59: push %edi;");
    asm("loc_4D7B5A: xor %ebx,%ebx;");
    asm("loc_4D7B5C: lea 0x10(%esp),%eax;");
    asm("loc_4D7B60: push %eax;");
    asm("loc_4D7B61: push %ebx;");
    asm("loc_4D7B62: push %ebx;");
    asm("loc_4D7B63: push %ebx;");
    asm("loc_4D7B64: push $1;");
    asm("loc_4D7B66: push %ebx;");
    asm("loc_4D7B67: push %ebx;");
    asm("loc_4D7B68: push $1;");
    asm("loc_4D7B6A: push %ebx;");
    asm("loc_4D7B6B: push %ebx;");
    asm("loc_4D7B6C: push %ebx;");
    asm("loc_4D7B6D: mov %ecx,%esi;");
    asm("loc_4D7B6F: lea 0x54(%esp),%ecx;");
    asm("loc_4D7B73: push %ecx;");
    asm("loc_4D7B74: push %ebx;");
    asm("loc_4D7B75: lea 0x50(%esp),%edx;");
    asm("loc_4D7B79: push %edx;");
    asm("loc_4D7B7A: push $_data_5D81E0;");
    asm("loc_4D7B7F: push $_data_5CB68C;");
    asm("loc_4D7B84: mov %esi,%ecx;");
    asm("loc_4D7B86: movl $0,0x50(%esp);");
    asm("loc_4D7B8E: movl $0,0x54(%esp);");
    asm("loc_4D7B96: movl $0,0x58(%esp);");
    asm("loc_4D7B9E: movl $0,0x68(%esp);");
    asm("loc_4D7BA6: movl $0,0x6C(%esp);");
    asm("loc_4D7BAE: movl $0,0x70(%esp);");
    asm("loc_4D7BB6: movl $0,0x5C(%esp);");
    asm("loc_4D7BBE: movl $0x3E343958,0x60(%esp);");
    asm("loc_4D7BC6: movl $0xBF000000,0x64(%esp);");
    asm("loc_4D7BCE: call _sub_5A0DB0;");
    asm("loc_4D7BD3: mov %eax,0x380(%esi);");
    asm("loc_4D7BD9: add $0x80,%eax;");
    asm("loc_4D7BDE: push %eax;");
    asm("loc_4D7BDF: lea 0x398(%esi),%ecx;");
    asm("loc_4D7BE5: movl $9,0x37C(%esi);");
    asm("loc_4D7BEF: call _sub_5A1340;");
    asm("loc_4D7BF4: mov %ebx,0x34(%esp);");
    asm("loc_4D7BF8: lea 0x334(%esi),%ebp;");
    asm("loc_4D7BFE: mov $_data_612600,%edi;");
    asm("loc_4D7C03: push %ebx;");
    asm("loc_4D7C04: lea 0x9C(%esp),%eax;");
    asm("loc_4D7C0B: push $_data_5D8430;");
    asm("loc_4D7C10: push %eax;");
    asm("loc_4D7C11: calll *_import_5C71EC;");
    asm("loc_4D7C17: flds -4(%edi);");
    asm("loc_4D7C1A: mov 0x348(%esi),%eax;");
    asm("loc_4D7C20: mov 0x40(%esp),%ecx;");
    asm("loc_4D7C24: add $0xC,%esp;");
    asm("loc_4D7C27: fstps 0x10(%esp);");
    asm("loc_4D7C2B: flds (%edi);");
    asm("loc_4D7C2D: add %ecx,%eax;");
    asm("loc_4D7C2F: fstps 0x14(%esp);");
    asm("loc_4D7C33: flds 4(%edi);");
    asm("loc_4D7C36: add $0x28,%eax;");
    asm("loc_4D7C39: fstps 0x18(%esp);");
    asm("loc_4D7C3D: mov 0x10C(%eax),%ecx;");
    asm("loc_4D7C43: mov 0x104(%eax),%edx;");
    asm("loc_4D7C49: push %ecx;");
    asm("loc_4D7C4A: push $0;");
    asm("loc_4D7C4C: push %edx;");
    asm("loc_4D7C4D: push $0;");
    asm("loc_4D7C4F: push $0;");
    asm("loc_4D7C51: push $1;");
    asm("loc_4D7C53: push $0;");
    asm("loc_4D7C55: lea 0x38(%esp),%ecx;");
    asm("loc_4D7C59: push %ecx;");
    asm("loc_4D7C5A: push $0;");
    asm("loc_4D7C5C: lea 0x34(%esp),%edx;");
    asm("loc_4D7C60: push %edx;");
    asm("loc_4D7C61: push $0;");
    asm("loc_4D7C63: push $_data_5CED30;");
    asm("loc_4D7C68: push $0;");
    asm("loc_4D7C6A: push %eax;");
    asm("loc_4D7C6B: lea 0xD0(%esp),%eax;");
    asm("loc_4D7C72: push %eax;");
    asm("loc_4D7C73: mov %esi,%ecx;");
    asm("loc_4D7C75: movl $0x3C656042,0x58(%esp);");
    asm("loc_4D7C7D: movl $0x3C656042,0x5C(%esp);");
    asm("loc_4D7C85: movl $0,0x60(%esp);");
    asm("loc_4D7C8D: call _sub_5A0C90;");
    asm("loc_4D7C92: mov 0x10(%esp),%edx;");
    asm("loc_4D7C96: mov %eax,(%ebp);");
    asm("loc_4D7C99: lea 0x2D4(%eax),%ecx;");
    asm("loc_4D7C9F: mov %edx,(%ecx);");
    asm("loc_4D7CA1: mov 0x14(%esp),%edx;");
    asm("loc_4D7CA5: mov %edx,4(%ecx);");
    asm("loc_4D7CA8: mov 0x18(%esp),%edx;");
    asm("loc_4D7CAC: push $0;");
    asm("loc_4D7CAE: mov %edx,8(%ecx);");
    asm("loc_4D7CB1: mov (%eax),%edx;");
    asm("loc_4D7CB3: push $1;");
    asm("loc_4D7CB5: push $1;");
    asm("loc_4D7CB7: mov %eax,%ecx;");
    asm("loc_4D7CB9: calll *0xA8(%edx);");
    asm("loc_4D7CBF: mov 0x34(%esp),%ecx;");
    asm("loc_4D7CC3: add $0xC,%edi;");
    asm("loc_4D7CC6: add $0x148,%ecx;");
    asm("loc_4D7CCC: inc %ebx;");
    asm("loc_4D7CCD: add $4,%ebp;");
    asm("loc_4D7CD0: cmp $_off_612630,%edi;");
    asm("loc_4D7CD6: mov %ecx,0x34(%esp);");
    asm("loc_4D7CDA: jl loc_4D7C03;");
    asm("loc_4D7CE0: lea 0x1C(%esp),%eax;");
    asm("loc_4D7CE4: push %eax;");
    asm("loc_4D7CE5: push $0;");
    asm("loc_4D7CE7: push $0;");
    asm("loc_4D7CE9: push $0;");
    asm("loc_4D7CEB: push $1;");
    asm("loc_4D7CED: push $0;");
    asm("loc_4D7CEF: push $0;");
    asm("loc_4D7CF1: push $1;");
    asm("loc_4D7CF3: push $0;");
    asm("loc_4D7CF5: push $0;");
    asm("loc_4D7CF7: push $0;");
    asm("loc_4D7CF9: lea 0x54(%esp),%ecx;");
    asm("loc_4D7CFD: push %ecx;");
    asm("loc_4D7CFE: push $0;");
    asm("loc_4D7D00: lea 0x44(%esp),%edx;");
    asm("loc_4D7D04: push %edx;");
    asm("loc_4D7D05: push $_data_5CB498;");
    asm("loc_4D7D0A: push $_data_5CB680;");
    asm("loc_4D7D0F: mov %esi,%ecx;");
    asm("loc_4D7D11: movl $0,0x5C(%esp);");
    asm("loc_4D7D19: movl $0,0x60(%esp);");
    asm("loc_4D7D21: movl $0,0x64(%esp);");
    asm("loc_4D7D29: movl $0,0x68(%esp);");
    asm("loc_4D7D31: movl $0,0x6C(%esp);");
    asm("loc_4D7D39: movl $0,0x70(%esp);");
    asm("loc_4D7D41: movl $0,0x50(%esp);");
    asm("loc_4D7D49: movl $0x3E958106,0x54(%esp);");
    asm("loc_4D7D51: movl $0xBF800000,0x58(%esp);");
    asm("loc_4D7D59: call _sub_5A0DB0;");
    asm("loc_4D7D5E: push $0;");
    asm("loc_4D7D60: push $1;");
    asm("loc_4D7D62: mov %eax,0x384(%esi);");
    asm("loc_4D7D68: mov (%eax),%edx;");
    asm("loc_4D7D6A: push $1;");
    asm("loc_4D7D6C: mov %eax,%ecx;");
    asm("loc_4D7D6E: calll *0xA8(%edx);");
    asm("loc_4D7D74: mov 0x384(%esi),%eax;");
    asm("loc_4D7D7A: add $0x80,%eax;");
    asm("loc_4D7D7F: push %eax;");
    asm("loc_4D7D80: lea 0x3A4(%esi),%ecx;");
    asm("loc_4D7D86: call _sub_5A1340;");
    asm("loc_4D7D8B: push $0x45;");
    asm("loc_4D7D8D: push $0;");
    asm("loc_4D7D8F: push $0xBF9;");
    asm("loc_4D7D94: push $0;");
    asm("loc_4D7D96: push $0;");
    asm("loc_4D7D98: push $1;");
    asm("loc_4D7D9A: push $0;");
    asm("loc_4D7D9C: lea 0x38(%esp),%ecx;");
    asm("loc_4D7DA0: push %ecx;");
    asm("loc_4D7DA1: push $0;");
    asm("loc_4D7DA3: lea 0x4C(%esp),%edx;");
    asm("loc_4D7DA7: push %edx;");
    asm("loc_4D7DA8: push $0;");
    asm("loc_4D7DAA: push $_data_5CED30;");
    asm("loc_4D7DAF: push $0;");
    asm("loc_4D7DB1: push $_data_5D8410;");
    asm("loc_4D7DB6: push $_data_5D83F8;");
    asm("loc_4D7DBB: mov %esi,%ecx;");
    asm("loc_4D7DBD: movl $0x3C656042,0x58(%esp);");
    asm("loc_4D7DC5: movl $0x3C656042,0x5C(%esp);");
    asm("loc_4D7DCD: movl $0,0x60(%esp);");
    asm("loc_4D7DD5: movl $0,0x64(%esp);");
    asm("loc_4D7DDD: movl $0x3E981062,0x68(%esp);");
    asm("loc_4D7DE5: movl $0,0x6C(%esp);");
    asm("loc_4D7DED: call _sub_5A0C90;");
    asm("loc_4D7DF2: push $0;");
    asm("loc_4D7DF4: push $1;");
    asm("loc_4D7DF6: mov %eax,0x38C(%esi);");
    asm("loc_4D7DFC: mov (%eax),%edx;");
    asm("loc_4D7DFE: push $1;");
    asm("loc_4D7E00: mov %eax,%ecx;");
    asm("loc_4D7E02: calll *0xA8(%edx);");
    asm("loc_4D7E08: movl $0x74,0x38(%esp);");
    asm("loc_4D7E10: movl $0x76,0x3C(%esp);");
    asm("loc_4D7E18: movl $0x79,0x40(%esp);");
    asm("loc_4D7E20: movl $0x7A,0x44(%esp);");
    asm("loc_4D7E28: movl $0x7B,0x48(%esp);");
    asm("loc_4D7E30: movl $0x77,0x4C(%esp);");
    asm("loc_4D7E38: movl $0x78,0x50(%esp);");
    asm("loc_4D7E40: movl $0x7E,0x54(%esp);");
    asm("loc_4D7E48: movl $0x7F,0x58(%esp);");
    asm("loc_4D7E50: movl $0x80,0x5C(%esp);");
    asm("loc_4D7E58: movl $0xC6,0x60(%esp);");
    asm("loc_4D7E60: movl $0x45,0x64(%esp);");
    asm("loc_4D7E68: movl $0x81,0x68(%esp);");
    asm("loc_4D7E70: movl $0x82,0x6C(%esp);");
    asm("loc_4D7E78: movl $0x83,0x70(%esp);");
    asm("loc_4D7E80: movl $0x84,0x74(%esp);");
    asm("loc_4D7E88: movl $0x86,0x78(%esp);");
    asm("loc_4D7E90: movl $0x85,0x7C(%esp);");
    asm("loc_4D7E98: movl $0x87,0x80(%esp);");
    asm("loc_4D7EA3: movl $0x88,0x84(%esp);");
    asm("loc_4D7EAE: movl $0x43,0x88(%esp);");
    asm("loc_4D7EB9: movl $0x44,0x8C(%esp);");
    asm("loc_4D7EC4: movl $4,0x90(%esp);");
    asm("loc_4D7ECF: movl $0xF,0x94(%esp);");
    asm("loc_4D7EDA: xor %edi,%edi;");
    asm("loc_4D7EDC: lea 0x32C(%esi),%ebx;");
    asm("loc_4D7EE2: mov 0x38(%esp,%edi,4),%eax;");
    asm("loc_4D7EE6: push %eax;");
    asm("loc_4D7EE7: mov %ebx,%ecx;");
    asm("loc_4D7EE9: call _sub_5760D0;");
    asm("loc_4D7EEE: inc %edi;");
    asm("loc_4D7EEF: cmp $0x18,%edi;");
    asm("loc_4D7EF2: jb loc_4D7EE2;");
    asm("loc_4D7EF4: mov (%esi),%edx;");
    asm("loc_4D7EF6: sub $0xC,%esp;");
    asm("loc_4D7EF9: movl $0,0x1C(%esp);");
    asm("loc_4D7F01: mov 0x1C(%esp),%ecx;");
    asm("loc_4D7F05: mov %esp,%eax;");
    asm("loc_4D7F07: mov %ecx,(%eax);");
    asm("loc_4D7F09: movl $0,0x20(%esp);");
    asm("loc_4D7F11: mov 0x20(%esp),%ecx;");
    asm("loc_4D7F15: mov %ecx,4(%eax);");
    asm("loc_4D7F18: movl $0xBF800000,0x24(%esp);");
    asm("loc_4D7F20: mov 0x24(%esp),%ecx;");
    asm("loc_4D7F24: mov %ecx,8(%eax);");
    asm("loc_4D7F27: mov %esi,%ecx;");
    asm("loc_4D7F29: calll *0x7C(%edx);");
    asm("loc_4D7F2C: mov (%esi),%edx;");
    asm("loc_4D7F2E: lea 0x60(%esi),%eax;");
    asm("loc_4D7F31: push %eax;");
    asm("loc_4D7F32: mov %esi,%ecx;");
    asm("loc_4D7F34: calll *0x14(%edx);");
    asm("loc_4D7F37: mov 0x1A0(%esp),%ecx;");
    asm("loc_4D7F3E: mov 0x19C(%esp),%edx;");
    asm("loc_4D7F45: push %ecx;");
    asm("loc_4D7F46: push %edx;");
    asm("loc_4D7F47: mov %esi,%ecx;");
    asm("loc_4D7F49: call _sub_4B5060;");
    asm("loc_4D7F4E: pop %edi;");
    asm("loc_4D7F4F: pop %esi;");
    asm("loc_4D7F50: test %al,%al;");
    asm("loc_4D7F52: pop %ebp;");
    asm("loc_4D7F53: setne %al;");
    asm("loc_4D7F56: pop %ebx;");
    asm("loc_4D7F57: add $0x188,%esp;");
    asm("loc_4D7F5D: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D7F60() // _sub_4D7F60
{
    asm("jmp dgb_4D7F60;"); // jumptable skip
    asm(".long _jmp_4D845C;"); // jumptable address
    __DEBUG_ASM(4D7F60);
    // chunk 0x4D7F60 _sub_4D7F60
    asm("loc_4D7F60: push %ebx;");
    asm("loc_4D7F61: push %esi;");
    asm("loc_4D7F62: mov 0xC(%esp),%esi;");
    asm("loc_4D7F66: cmp $0x78,%esi;");
    asm("loc_4D7F69: push %edi;");
    asm("loc_4D7F6A: mov %ecx,%edi;");
    asm("loc_4D7F6C: jne loc_4D7F8C;");
    asm("loc_4D7F6E: call _sub_576240;");
    asm("loc_4D7F73: mov 0x18(%eax),%cl;");
    asm("loc_4D7F76: test %cl,%cl;");
    asm("loc_4D7F78: jne loc_4D7F8C;");
    asm("loc_4D7F7A: push $0;");
    asm("loc_4D7F7C: call _sub_4C7A60;");
    asm("loc_4D7F81: add $4,%esp;");
    asm("loc_4D7F84: pop %edi;");
    asm("loc_4D7F85: pop %esi;");
    asm("loc_4D7F86: mov $1,%al;");
    asm("loc_4D7F88: pop %ebx;");
    asm("loc_4D7F89: ret $4;");
    asm("loc_4D7F8C: call _sub_45A740;");
    asm("loc_4D7F91: test %al,%al;");
    asm("loc_4D7F93: jne loc_4D8414;");
    asm("loc_4D7F99: call _sub_41A3E0;");
    asm("loc_4D7F9E: test %al,%al;");
    asm("loc_4D7FA0: jne loc_4D8414;");
    asm("loc_4D7FA6: call _sub_54BAF0;");
    asm("loc_4D7FAB: test %eax,%eax;");
    asm("loc_4D7FAD: je loc_4D8452;");
    asm("loc_4D7FB3: add $0xC,%eax;");
    asm("loc_4D7FB6: test %eax,%eax;");
    asm("loc_4D7FB8: je loc_4D8452;");
    asm("loc_4D7FBE: mov 4(%eax),%ecx;");
    asm("loc_4D7FC1: test %ecx,%ecx;");
    asm("loc_4D7FC3: je loc_4D8452;");
    asm("loc_4D7FC9: mov 0x4C(%ecx),%eax;");
    asm("loc_4D7FCC: and $0x503,%eax;");
    asm("loc_4D7FD1: cmp $0x503,%eax;");
    asm("loc_4D7FD6: jne loc_4D8452;");
    asm("loc_4D7FDC: mov _import_5C62E8,%ebx;");
    asm("loc_4D7FE2: call *%ebx;");
    asm("loc_4D7FE4: test %eax,%eax;");
    asm("loc_4D7FE6: je loc_4D8452;");
    asm("loc_4D7FEC: mov 0xC0(%eax),%eax;");
    asm("loc_4D7FF2: lea -4(%esi),%ecx;");
    asm("loc_4D7FF5: cmp $0xC2,%ecx;");
    asm("loc_4D7FFB: ja loc_4D8452;");
    asm("loc_4D8001: movzbl _data_4D8490(%ecx),%ecx;");
    asm("loc_4D8008: jmpl *_jmp_4D845C(,%ecx,4);");
    asm("loc_4D800F: cmp $3,%eax;");
    asm("loc_4D8012: jne loc_4D8085;");
    asm("loc_4D8014: flds 0x48(%edi);");
    asm("loc_4D8017: fsubs _data_5D8290;");
    asm("loc_4D801D: fsts 0x48(%edi);");
    asm("loc_4D8020: fcomps _data_5D8284;");
    asm("loc_4D8026: fnstsw %ax;");
    asm("loc_4D8028: test $5,%ah;");
    asm("loc_4D802B: jp loc_4D8036;");
    asm("loc_4D802D: mov _data_5D8284,%edx;");
    asm("loc_4D8033: mov %edx,0x48(%edi);");
    asm("loc_4D8036: mov 0x48(%edi),%eax;");
    asm("loc_4D8039: push %eax;");
    asm("loc_4D803A: push $0;");
    asm("loc_4D803C: push $0;");
    asm("loc_4D803E: call _sub_4C78D0;");
    asm("loc_4D8043: add $0xC,%esp;");
    asm("loc_4D8046: pop %edi;");
    asm("loc_4D8047: pop %esi;");
    asm("loc_4D8048: mov $1,%al;");
    asm("loc_4D804A: pop %ebx;");
    asm("loc_4D804B: ret $4;");
    asm("loc_4D804E: cmp $3,%eax;");
    asm("loc_4D8051: jne loc_4D8085;");
    asm("loc_4D8053: flds _data_5D8290;");
    asm("loc_4D8059: fadds 0x48(%edi);");
    asm("loc_4D805C: fsts 0x48(%edi);");
    asm("loc_4D805F: fcomps _data_5D8288;");
    asm("loc_4D8065: fnstsw %ax;");
    asm("loc_4D8067: test $0x41,%ah;");
    asm("loc_4D806A: jne loc_4D8075;");
    asm("loc_4D806C: mov _data_5D8288,%ecx;");
    asm("loc_4D8072: mov %ecx,0x48(%edi);");
    asm("loc_4D8075: mov 0x48(%edi),%edx;");
    asm("loc_4D8078: push %edx;");
    asm("loc_4D8079: push $0;");
    asm("loc_4D807B: push $0;");
    asm("loc_4D807D: call _sub_4C78D0;");
    asm("loc_4D8082: add $0xC,%esp;");
    asm("loc_4D8085: pop %edi;");
    asm("loc_4D8086: pop %esi;");
    asm("loc_4D8087: mov $1,%al;");
    asm("loc_4D8089: pop %ebx;");
    asm("loc_4D808A: ret $4;");
    asm("loc_4D808D: push $0;");
    asm("loc_4D808F: push $5;");
    asm("loc_4D8091: lea -0x364(%edi),%ecx;");
    asm("loc_4D8097: call _sub_4D8E20;");
    asm("loc_4D809C: pop %edi;");
    asm("loc_4D809D: pop %esi;");
    asm("loc_4D809E: mov $1,%al;");
    asm("loc_4D80A0: pop %ebx;");
    asm("loc_4D80A1: ret $4;");
    asm("loc_4D80A4: call _sub_576240;");
    asm("loc_4D80A9: mov 0x18(%eax),%cl;");
    asm("loc_4D80AC: test %cl,%cl;");
    asm("loc_4D80AE: je loc_4D812D;");
    asm("loc_4D80B0: lea -0x85(%esi),%eax;");
    asm("loc_4D80B6: cmp $3,%eax;");
    asm("loc_4D80B9: ja loc_4D811A;");
    asm("loc_4D80BB: jmpl *_jmp_4D8554(,%eax,4);");
    asm("loc_4D80C2: mov $1,%eax;");
    asm("loc_4D80C7: push %eax;");
    asm("loc_4D80C8: call _sub_4C7A30;");
    asm("loc_4D80CD: add $4,%esp;");
    asm("loc_4D80D0: pop %edi;");
    asm("loc_4D80D1: pop %esi;");
    asm("loc_4D80D2: mov $1,%al;");
    asm("loc_4D80D4: pop %ebx;");
    asm("loc_4D80D5: ret $4;");
    asm("loc_4D80D8: mov $2,%eax;");
    asm("loc_4D80DD: push %eax;");
    asm("loc_4D80DE: call _sub_4C7A30;");
    asm("loc_4D80E3: add $4,%esp;");
    asm("loc_4D80E6: pop %edi;");
    asm("loc_4D80E7: pop %esi;");
    asm("loc_4D80E8: mov $1,%al;");
    asm("loc_4D80EA: pop %ebx;");
    asm("loc_4D80EB: ret $4;");
    asm("loc_4D80EE: mov $3,%eax;");
    asm("loc_4D80F3: push %eax;");
    asm("loc_4D80F4: call _sub_4C7A30;");
    asm("loc_4D80F9: add $4,%esp;");
    asm("loc_4D80FC: pop %edi;");
    asm("loc_4D80FD: pop %esi;");
    asm("loc_4D80FE: mov $1,%al;");
    asm("loc_4D8100: pop %ebx;");
    asm("loc_4D8101: ret $4;");
    asm("loc_4D8104: mov $4,%eax;");
    asm("loc_4D8109: push %eax;");
    asm("loc_4D810A: call _sub_4C7A30;");
    asm("loc_4D810F: add $4,%esp;");
    asm("loc_4D8112: pop %edi;");
    asm("loc_4D8113: pop %esi;");
    asm("loc_4D8114: mov $1,%al;");
    asm("loc_4D8116: pop %ebx;");
    asm("loc_4D8117: ret $4;");
    asm("loc_4D811A: xor %eax,%eax;");
    asm("loc_4D811C: push %eax;");
    asm("loc_4D811D: call _sub_4C7A30;");
    asm("loc_4D8122: add $4,%esp;");
    asm("loc_4D8125: pop %edi;");
    asm("loc_4D8126: pop %esi;");
    asm("loc_4D8127: mov $1,%al;");
    asm("loc_4D8129: pop %ebx;");
    asm("loc_4D812A: ret $4;");
    asm("loc_4D812D: push $0x85;");
    asm("loc_4D8132: call _sub_5784A0;");
    asm("loc_4D8137: add $4,%esp;");
    asm("loc_4D813A: test %al,%al;");
    asm("loc_4D813C: je loc_4D8150;");
    asm("loc_4D813E: push $1;");
    asm("loc_4D8140: call _sub_4C7A30;");
    asm("loc_4D8145: add $4,%esp;");
    asm("loc_4D8148: pop %edi;");
    asm("loc_4D8149: pop %esi;");
    asm("loc_4D814A: mov $1,%al;");
    asm("loc_4D814C: pop %ebx;");
    asm("loc_4D814D: ret $4;");
    asm("loc_4D8150: push $0x86;");
    asm("loc_4D8155: call _sub_5784A0;");
    asm("loc_4D815A: add $4,%esp;");
    asm("loc_4D815D: test %al,%al;");
    asm("loc_4D815F: je loc_4D8173;");
    asm("loc_4D8161: push $2;");
    asm("loc_4D8163: call _sub_4C7A30;");
    asm("loc_4D8168: add $4,%esp;");
    asm("loc_4D816B: pop %edi;");
    asm("loc_4D816C: pop %esi;");
    asm("loc_4D816D: mov $1,%al;");
    asm("loc_4D816F: pop %ebx;");
    asm("loc_4D8170: ret $4;");
    asm("loc_4D8173: push $0x87;");
    asm("loc_4D8178: call _sub_5784A0;");
    asm("loc_4D817D: add $4,%esp;");
    asm("loc_4D8180: test %al,%al;");
    asm("loc_4D8182: je loc_4D8196;");
    asm("loc_4D8184: push $3;");
    asm("loc_4D8186: call _sub_4C7A30;");
    asm("loc_4D818B: add $4,%esp;");
    asm("loc_4D818E: pop %edi;");
    asm("loc_4D818F: pop %esi;");
    asm("loc_4D8190: mov $1,%al;");
    asm("loc_4D8192: pop %ebx;");
    asm("loc_4D8193: ret $4;");
    asm("loc_4D8196: push $0x88;");
    asm("loc_4D819B: call _sub_5784A0;");
    asm("loc_4D81A0: add $4,%esp;");
    asm("loc_4D81A3: test %al,%al;");
    asm("loc_4D81A5: je loc_4D8440;");
    asm("loc_4D81AB: push $4;");
    asm("loc_4D81AD: call _sub_4C7A30;");
    asm("loc_4D81B2: add $4,%esp;");
    asm("loc_4D81B5: pop %edi;");
    asm("loc_4D81B6: pop %esi;");
    asm("loc_4D81B7: mov $1,%al;");
    asm("loc_4D81B9: pop %ebx;");
    asm("loc_4D81BA: ret $4;");
    asm("loc_4D81BD: call _sub_4C7B90;");
    asm("loc_4D81C2: neg %al;");
    asm("loc_4D81C4: sbb %al,%al;");
    asm("loc_4D81C6: inc %al;");
    asm("loc_4D81C8: push %eax;");
    asm("loc_4D81C9: call _sub_4C7A90;");
    asm("loc_4D81CE: add $4,%esp;");
    asm("loc_4D81D1: pop %edi;");
    asm("loc_4D81D2: pop %esi;");
    asm("loc_4D81D3: mov $1,%al;");
    asm("loc_4D81D5: pop %ebx;");
    asm("loc_4D81D6: ret $4;");
    asm("loc_4D81D9: call _sub_45A470;");
    asm("loc_4D81DE: test %al,%al;");
    asm("loc_4D81E0: jne loc_4D8452;");
    asm("loc_4D81E6: mov _data_674AA0,%eax;");
    asm("loc_4D81EB: mov 0x5BA(%eax),%cl;");
    asm("loc_4D81F1: test %cl,%cl;");
    asm("loc_4D81F3: jne loc_4D8216;");
    asm("loc_4D81F5: mov 0x5B9(%eax),%cl;");
    asm("loc_4D81FB: test %cl,%cl;");
    asm("loc_4D81FD: je loc_4D8216;");
    asm("loc_4D81FF: push $0;");
    asm("loc_4D8201: push $0xBF;");
    asm("loc_4D8206: call _sub_5763B0;");
    asm("loc_4D820B: add $8,%esp;");
    asm("loc_4D820E: pop %edi;");
    asm("loc_4D820F: pop %esi;");
    asm("loc_4D8210: mov $1,%al;");
    asm("loc_4D8212: pop %ebx;");
    asm("loc_4D8213: ret $4;");
    asm("loc_4D8216: call _sub_54BAF0;");
    asm("loc_4D821B: test %eax,%eax;");
    asm("loc_4D821D: je loc_4D82A7;");
    asm("loc_4D8223: add $0xC,%eax;");
    asm("loc_4D8226: test %eax,%eax;");
    asm("loc_4D8228: je loc_4D8240;");
    asm("loc_4D822A: mov 4(%eax),%esi;");
    asm("loc_4D822D: test %esi,%esi;");
    asm("loc_4D822F: je loc_4D8240;");
    asm("loc_4D8231: mov 0x4C(%esi),%eax;");
    asm("loc_4D8234: and $0x503,%eax;");
    asm("loc_4D8239: cmp $0x503,%eax;");
    asm("loc_4D823E: je loc_4D8242;");
    asm("loc_4D8240: xor %esi,%esi;");
    asm("loc_4D8242: mov %esi,%ecx;");
    asm("loc_4D8244: calll *_import_5C6510;");
    asm("loc_4D824A: test %al,%al;");
    asm("loc_4D824C: jne loc_4D82A7;");
    asm("loc_4D824E: mov %esi,%ecx;");
    asm("loc_4D8250: call *%ebx;");
    asm("loc_4D8252: mov 0xC0(%eax),%eax;");
    asm("loc_4D8258: xor %bl,%bl;");
    asm("loc_4D825A: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4D825D: je loc_4D827D;");
    asm("loc_4D825F: cmp $0x13,%eax;");
    asm("loc_4D8262: je loc_4D827D;");
    asm("loc_4D8264: push $0;");
    asm("loc_4D8266: push $0x13;");
    asm("loc_4D8268: lea -0x364(%edi),%ecx;");
    asm("loc_4D826E: call _sub_4D8E20;");
    asm("loc_4D8273: test %al,%al;");
    asm("loc_4D8275: je loc_4D8452;");
    asm("loc_4D827B: mov $1,%bl;");
    asm("loc_4D827D: call _sub_4C7B90;");
    asm("loc_4D8282: test %al,%al;");
    asm("loc_4D8284: je loc_4D8292;");
    asm("loc_4D8286: push $0;");
    asm("loc_4D8288: call _sub_4C7A90;");
    asm("loc_4D828D: add $4,%esp;");
    asm("loc_4D8290: jmp loc_4D8296;");
    asm("loc_4D8292: test %bl,%bl;");
    asm("loc_4D8294: je loc_4D82A7;");
    asm("loc_4D8296: mov _data_674A18,%ecx;");
    asm("loc_4D829C: push $0;");
    asm("loc_4D829E: push %ecx;");
    asm("loc_4D829F: call _sub_489E80;");
    asm("loc_4D82A4: add $8,%esp;");
    asm("loc_4D82A7: pop %edi;");
    asm("loc_4D82A8: pop %esi;");
    asm("loc_4D82A9: mov $1,%al;");
    asm("loc_4D82AB: pop %ebx;");
    asm("loc_4D82AC: ret $4;");
    asm("loc_4D82AF: call _sub_4C7BE0;");
    asm("loc_4D82B4: neg %al;");
    asm("loc_4D82B6: sbb %al,%al;");
    asm("loc_4D82B8: inc %al;");
    asm("loc_4D82BA: push %eax;");
    asm("loc_4D82BB: call _sub_4C7AC0;");
    asm("loc_4D82C0: add $4,%esp;");
    asm("loc_4D82C3: pop %edi;");
    asm("loc_4D82C4: pop %esi;");
    asm("loc_4D82C5: mov $1,%al;");
    asm("loc_4D82C7: pop %ebx;");
    asm("loc_4D82C8: ret $4;");
    asm("loc_4D82CB: call _sub_576240;");
    asm("loc_4D82D0: mov 0x18(%eax),%cl;");
    asm("loc_4D82D3: test %cl,%cl;");
    asm("loc_4D82D5: je loc_4D7F7A;");
    asm("loc_4D82DB: push $1;");
    asm("loc_4D82DD: call _sub_4C7A60;");
    asm("loc_4D82E2: add $4,%esp;");
    asm("loc_4D82E5: pop %edi;");
    asm("loc_4D82E6: pop %esi;");
    asm("loc_4D82E7: mov $1,%al;");
    asm("loc_4D82E9: pop %ebx;");
    asm("loc_4D82EA: ret $4;");
    asm("loc_4D82ED: call _sub_576240;");
    asm("loc_4D82F2: mov 0x18(%eax),%cl;");
    asm("loc_4D82F5: test %cl,%cl;");
    asm("loc_4D82F7: je loc_4D8342;");
    asm("loc_4D82F9: mov _data_5D8294,%edx;");
    asm("loc_4D82FF: mov %edx,0x84(%edi);");
    asm("loc_4D8305: pop %edi;");
    asm("loc_4D8306: pop %esi;");
    asm("loc_4D8307: mov $1,%al;");
    asm("loc_4D8309: pop %ebx;");
    asm("loc_4D830A: ret $4;");
    asm("loc_4D830D: call _sub_4C7B90;");
    asm("loc_4D8312: test %al,%al;");
    asm("loc_4D8314: je loc_4D8320;");
    asm("loc_4D8316: push $0;");
    asm("loc_4D8318: call _sub_4C7A90;");
    asm("loc_4D831D: add $4,%esp;");
    asm("loc_4D8320: call _sub_576240;");
    asm("loc_4D8325: mov 0x18(%eax),%cl;");
    asm("loc_4D8328: test %cl,%cl;");
    asm("loc_4D832A: je loc_4D8342;");
    asm("loc_4D832C: flds _data_5D8294;");
    asm("loc_4D8332: mov $1,%al;");
    asm("loc_4D8334: fchs;");
    asm("loc_4D8336: fstps 0x84(%edi);");
    asm("loc_4D833C: pop %edi;");
    asm("loc_4D833D: pop %esi;");
    asm("loc_4D833E: pop %ebx;");
    asm("loc_4D833F: ret $4;");
    asm("loc_4D8342: movl $0,0x84(%edi);");
    asm("loc_4D834C: pop %edi;");
    asm("loc_4D834D: pop %esi;");
    asm("loc_4D834E: mov $1,%al;");
    asm("loc_4D8350: pop %ebx;");
    asm("loc_4D8351: ret $4;");
    asm("loc_4D8354: mov _data_61684C,%eax;");
    asm("loc_4D8359: test %eax,%eax;");
    asm("loc_4D835B: jge loc_4D8396;");
    asm("loc_4D835D: call _sub_4C7A00;");
    asm("loc_4D8362: fsubs _data_5D8298;");
    asm("loc_4D8368: fsts 0x10(%esp);");
    asm("loc_4D836C: fcompl _data_5C8BA8;");
    asm("loc_4D8372: fnstsw %ax;");
    asm("loc_4D8374: test $5,%ah;");
    asm("loc_4D8377: jp loc_4D8381;");
    asm("loc_4D8379: movl $0,0x10(%esp);");
    asm("loc_4D8381: mov 0x10(%esp),%eax;");
    asm("loc_4D8385: push %eax;");
    asm("loc_4D8386: call _sub_4C7AF0;");
    asm("loc_4D838B: add $4,%esp;");
    asm("loc_4D838E: pop %edi;");
    asm("loc_4D838F: pop %esi;");
    asm("loc_4D8390: mov $1,%al;");
    asm("loc_4D8392: pop %ebx;");
    asm("loc_4D8393: ret $4;");
    asm("loc_4D8396: jle loc_4D83C9;");
    asm("loc_4D8398: call _sub_4C7A00;");
    asm("loc_4D839D: fadds _data_5D8298;");
    asm("loc_4D83A3: fsts 0x10(%esp);");
    asm("loc_4D83A7: fcompl _data_5C89B8;");
    asm("loc_4D83AD: fnstsw %ax;");
    asm("loc_4D83AF: test $0x41,%ah;");
    asm("loc_4D83B2: jne loc_4D83BC;");
    asm("loc_4D83B4: movl $0x3F800000,0x10(%esp);");
    asm("loc_4D83BC: mov 0x10(%esp),%ecx;");
    asm("loc_4D83C0: push %ecx;");
    asm("loc_4D83C1: call _sub_4C7AF0;");
    asm("loc_4D83C6: add $4,%esp;");
    asm("loc_4D83C9: pop %edi;");
    asm("loc_4D83CA: pop %esi;");
    asm("loc_4D83CB: mov $1,%al;");
    asm("loc_4D83CD: pop %ebx;");
    asm("loc_4D83CE: ret $4;");
    asm("loc_4D83D1: mov 0x1C(%edi),%edx;");
    asm("loc_4D83D4: xor %eax,%eax;");
    asm("loc_4D83D6: lea 0x134(%edx),%ecx;");
    asm("loc_4D83DC: lea (%esp),%esp;");
    asm("loc_4D83E0: cmp %esi,(%ecx);");
    asm("loc_4D83E2: je loc_4D83F8;");
    asm("loc_4D83E4: inc %eax;");
    asm("loc_4D83E5: add $0x148,%ecx;");
    asm("loc_4D83EB: cmp $4,%eax;");
    asm("loc_4D83EE: jl loc_4D83E0;");
    asm("loc_4D83F0: pop %edi;");
    asm("loc_4D83F1: pop %esi;");
    asm("loc_4D83F2: mov $1,%al;");
    asm("loc_4D83F4: pop %ebx;");
    asm("loc_4D83F5: ret $4;");
    asm("loc_4D83F8: imul $0x148,%eax;");
    asm("loc_4D83FE: add %edx,%eax;");
    asm("loc_4D8400: push %eax;");
    asm("loc_4D8401: lea -0x364(%edi),%ecx;");
    asm("loc_4D8407: call _sub_4D9470;");
    asm("loc_4D840C: pop %edi;");
    asm("loc_4D840D: pop %esi;");
    asm("loc_4D840E: mov $1,%al;");
    asm("loc_4D8410: pop %ebx;");
    asm("loc_4D8411: ret $4;");
    asm("loc_4D8414: cmp $0x85,%esi;");
    asm("loc_4D841A: je loc_4D8434;");
    asm("loc_4D841C: cmp $0x86,%esi;");
    asm("loc_4D8422: je loc_4D8434;");
    asm("loc_4D8424: cmp $0x87,%esi;");
    asm("loc_4D842A: je loc_4D8434;");
    asm("loc_4D842C: cmp $0x88,%esi;");
    asm("loc_4D8432: jne loc_4D8452;");
    asm("loc_4D8434: call _sub_576240;");
    asm("loc_4D8439: mov 0x18(%eax),%cl;");
    asm("loc_4D843C: test %cl,%cl;");
    asm("loc_4D843E: jne loc_4D8452;");
    asm("loc_4D8440: push $0;");
    asm("loc_4D8442: call _sub_4C7A30;");
    asm("loc_4D8447: add $4,%esp;");
    asm("loc_4D844A: pop %edi;");
    asm("loc_4D844B: pop %esi;");
    asm("loc_4D844C: mov $1,%al;");
    asm("loc_4D844E: pop %ebx;");
    asm("loc_4D844F: ret $4;");
    asm("loc_4D8452: pop %edi;");
    asm("loc_4D8453: pop %esi;");
    asm("loc_4D8454: xor %al,%al;");
    asm("loc_4D8456: pop %ebx;");
    asm("loc_4D8457: ret $4;");
    asm("int3;"); // unreachable
    asm("_jmp_4D845C: .long loc_4D8354;");
    asm(".long loc_4D81D9;");
    asm(".long loc_4D82ED;");
    asm(".long loc_4D830D;");
    asm(".long loc_4D81BD;");
    asm(".long loc_4D83D1;");
    asm(".long loc_4D82AF;");
    asm(".long loc_4D82CB;");
    asm(".long loc_4D800F;");
    asm(".long loc_4D804E;");
    asm(".long loc_4D808D;");
    asm(".long loc_4D80A4;");
    asm(".long loc_4D8452;");
    asm("_jmp_4D8554: .long loc_4D80C2;");
    asm(".long loc_4D80D8;");
    asm(".long loc_4D80EE;");
    asm(".long loc_4D8104;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4D7F60);
_naked _weak void _sub_4D8570() // _sub_4D8570
{
    __DEBUG_ASM(4D8570);
    // chunk 0x4D8570 _sub_4D8570
    asm("loc_4D8570: push %esi;");
    asm("loc_4D8571: mov %ecx,%esi;");
    asm("loc_4D8573: call _sub_41DD90;");
    asm("loc_4D8578: test %al,%al;");
    asm("loc_4D857A: je loc_4D8597;");
    asm("loc_4D857C: call _sub_54BAF0;");
    asm("loc_4D8581: test %eax,%eax;");
    asm("loc_4D8583: je loc_4D8597;");
    asm("loc_4D8585: call _sub_41A3E0;");
    asm("loc_4D858A: test %al,%al;");
    asm("loc_4D858C: jne loc_4D8597;");
    asm("loc_4D858E: push $0;");
    asm("loc_4D8590: mov %esi,%ecx;");
    asm("loc_4D8592: call _sub_5A0C30;");
    asm("loc_4D8597: mov 0xC(%esi),%esi;");
    asm("loc_4D859A: test %esi,%esi;");
    asm("loc_4D859C: je loc_4D85B4;");
    asm("loc_4D859E: mov %edi,%edi;");
    asm("loc_4D85A0: testb $1,0x6C(%esi);");
    asm("loc_4D85A4: jne loc_4D85AD;");
    asm("loc_4D85A6: mov (%esi),%eax;");
    asm("loc_4D85A8: mov %esi,%ecx;");
    asm("loc_4D85AA: calll *0x30(%eax);");
    asm("loc_4D85AD: mov 8(%esi),%esi;");
    asm("loc_4D85B0: test %esi,%esi;");
    asm("loc_4D85B2: jne loc_4D85A0;");
    asm("loc_4D85B4: pop %esi;");
    asm("loc_4D85B5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D85C0() // _sub_4D85C0
{
    __DEBUG_ASM(4D85C0);
    // chunk 0x4D85C0 _sub_4D85C0
    asm("loc_4D85C0: push %ecx;");
    asm("loc_4D85C1: push %esi;");
    asm("loc_4D85C2: mov %ecx,%esi;");
    asm("loc_4D85C4: flds 0x3B0(%esi);");
    asm("loc_4D85CA: fcomps _data_5C7474;");
    asm("loc_4D85D0: fnstsw %ax;");
    asm("loc_4D85D2: test $0x44,%ah;");
    asm("loc_4D85D5: jnp loc_4D862E;");
    asm("loc_4D85D7: call _sub_4C7A00;");
    asm("loc_4D85DC: fstps 4(%esp);");
    asm("loc_4D85E0: call _sub_42D680;");
    asm("loc_4D85E5: fmuls 0x3B0(%esi);");
    asm("loc_4D85EB: fadds 4(%esp);");
    asm("loc_4D85EF: fsts 4(%esp);");
    asm("loc_4D85F3: fcompl _data_5C89B8;");
    asm("loc_4D85F9: fnstsw %ax;");
    asm("loc_4D85FB: test $0x41,%ah;");
    asm("loc_4D85FE: jne loc_4D8608;");
    asm("loc_4D8600: movl $0x3F800000,4(%esp);");
    asm("loc_4D8608: flds 4(%esp);");
    asm("loc_4D860C: fcompl _data_5C8BA8;");
    asm("loc_4D8612: fnstsw %ax;");
    asm("loc_4D8614: test $5,%ah;");
    asm("loc_4D8617: jp loc_4D8621;");
    asm("loc_4D8619: movl $0,4(%esp);");
    asm("loc_4D8621: mov 4(%esp),%eax;");
    asm("loc_4D8625: push %eax;");
    asm("loc_4D8626: call _sub_4C7AF0;");
    asm("loc_4D862B: add $4,%esp;");
    asm("loc_4D862E: call _sub_41DD90;");
    asm("loc_4D8633: test %al,%al;");
    asm("loc_4D8635: je loc_4D8678;");
    asm("loc_4D8637: push $6;");
    asm("loc_4D8639: call _sub_5792B0;");
    asm("loc_4D863E: add $4,%esp;");
    asm("loc_4D8641: test %eax,%eax;");
    asm("loc_4D8643: je loc_4D8678;");
    asm("loc_4D8645: push $0xA;");
    asm("loc_4D8647: call _sub_5792B0;");
    asm("loc_4D864C: add $4,%esp;");
    asm("loc_4D864F: test %eax,%eax;");
    asm("loc_4D8651: je loc_4D8678;");
    asm("loc_4D8653: call _sub_54BAF0;");
    asm("loc_4D8658: test %eax,%eax;");
    asm("loc_4D865A: je loc_4D8678;");
    asm("loc_4D865C: call _sub_41A3E0;");
    asm("loc_4D8661: test %al,%al;");
    asm("loc_4D8663: jne loc_4D8678;");
    asm("loc_4D8665: lea -0x38(%esi),%ecx;");
    asm("loc_4D8668: call _sub_4D88F0;");
    asm("loc_4D866D: mov %esi,%ecx;");
    asm("loc_4D866F: pop %esi;");
    asm("loc_4D8670: add $4,%esp;");
    asm("loc_4D8673: jmp _sub_5A17B0;");
    asm("loc_4D8678: push $1;");
    asm("loc_4D867A: mov %esi,%ecx;");
    asm("loc_4D867C: call _sub_5A0C30;");
    asm("loc_4D8681: mov %esi,%ecx;");
    asm("loc_4D8683: pop %esi;");
    asm("loc_4D8684: add $4,%esp;");
    asm("loc_4D8687: jmp _sub_5A17B0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D8690() // _sub_4D8690
{
    __DEBUG_ASM(4D8690);
    // chunk 0x4D8690 _sub_4D8690
    asm("loc_4D8690: sub $0x3C,%esp;");
    asm("loc_4D8693: push %ebx;");
    asm("loc_4D8694: push %esi;");
    asm("loc_4D8695: push %edi;");
    asm("loc_4D8696: mov %ecx,%ebx;");
    asm("loc_4D8698: call _sub_54BD40;");
    asm("loc_4D869D: test %al,%al;");
    asm("loc_4D869F: jne loc_4D88E0;");
    asm("loc_4D86A5: push $_data_5D8444;");
    asm("loc_4D86AA: call _sub_5B36B0;");
    asm("loc_4D86AF: flds 0x14(%eax);");
    asm("loc_4D86B2: fcompl _data_5C8B68;");
    asm("loc_4D86B8: add $4,%esp;");
    asm("loc_4D86BB: fnstsw %ax;");
    asm("loc_4D86BD: test $0x41,%ah;");
    asm("loc_4D86C0: jne loc_4D88D9;");
    asm("loc_4D86C6: mov 0x380(%ebx),%ecx;");
    asm("loc_4D86CC: add $0x80,%ecx;");
    asm("loc_4D86D2: movl $0x3F800000,0x38(%esp);");
    asm("loc_4D86DA: movl $0x3F800000,0x28(%esp);");
    asm("loc_4D86E2: movl $0x3F800000,0x18(%esp);");
    asm("loc_4D86EA: movl $0,0x34(%esp);");
    asm("loc_4D86F2: movl $0,0x30(%esp);");
    asm("loc_4D86FA: movl $0,0x2C(%esp);");
    asm("loc_4D8702: movl $0,0x24(%esp);");
    asm("loc_4D870A: movl $0,0x20(%esp);");
    asm("loc_4D8712: movl $0,0x1C(%esp);");
    asm("loc_4D871A: movl $0,0x44(%esp);");
    asm("loc_4D8722: movl $0,0x40(%esp);");
    asm("loc_4D872A: movl $0,0x3C(%esp);");
    asm("loc_4D8732: call _sub_420D60;");
    asm("loc_4D8737: test %al,%al;");
    asm("loc_4D8739: je loc_4D8767;");
    asm("loc_4D873B: mov 0x380(%ebx),%edx;");
    asm("loc_4D8741: mov _import_5C6D90,%eax;");
    asm("loc_4D8746: mov 0x84(%edx),%edx;");
    asm("loc_4D874C: mov (%eax),%eax;");
    asm("loc_4D874E: mov (%eax),%ecx;");
    asm("loc_4D8750: push %edx;");
    asm("loc_4D8751: push %eax;");
    asm("loc_4D8752: calll *0xA0(%ecx);");
    asm("loc_4D8758: mov $0xC,%ecx;");
    asm("loc_4D875D: mov %eax,%esi;");
    asm("loc_4D875F: lea 0x18(%esp),%edi;");
    asm("loc_4D8763: rep movsl (%esi),(%edi);");
    asm("loc_4D8765: jmp loc_4D87AC;");
    asm("loc_4D8767: mov 0x380(%ebx),%eax;");
    asm("loc_4D876D: flds 0x60(%eax);");
    asm("loc_4D8770: fadds 0xA8(%eax);");
    asm("loc_4D8776: fstps 0xC(%esp);");
    asm("loc_4D877A: flds 0x64(%eax);");
    asm("loc_4D877D: fadds 0xAC(%eax);");
    asm("loc_4D8783: fstps 0x10(%esp);");
    asm("loc_4D8787: flds 0x68(%eax);");
    asm("loc_4D878A: mov 0x10(%esp),%ecx;");
    asm("loc_4D878E: fadds 0xB0(%eax);");
    asm("loc_4D8794: mov 0xC(%esp),%eax;");
    asm("loc_4D8798: mov %eax,0x3C(%esp);");
    asm("loc_4D879C: mov %ecx,0x40(%esp);");
    asm("loc_4D87A0: fstps 0x14(%esp);");
    asm("loc_4D87A4: mov 0x14(%esp),%edx;");
    asm("loc_4D87A8: mov %edx,0x44(%esp);");
    asm("loc_4D87AC: mov 0x380(%ebx),%eax;");
    asm("loc_4D87B2: flds 0x3C(%esp);");
    asm("loc_4D87B6: fadds 0xC0(%eax);");
    asm("loc_4D87BC: add $0xC0,%eax;");
    asm("loc_4D87C1: fstps 0x3C(%esp);");
    asm("loc_4D87C5: flds 0x40(%esp);");
    asm("loc_4D87C9: fadds 4(%eax);");
    asm("loc_4D87CC: fstps 0x40(%esp);");
    asm("loc_4D87D0: flds 0x44(%esp);");
    asm("loc_4D87D4: fadds 8(%eax);");
    asm("loc_4D87D7: lea 0xC(%esp),%eax;");
    asm("loc_4D87DB: push %eax;");
    asm("loc_4D87DC: fstps 0x48(%esp);");
    asm("loc_4D87E0: call _sub_59DA70;");
    asm("loc_4D87E5: add $4,%esp;");
    asm("loc_4D87E8: push %eax;");
    asm("loc_4D87E9: lea 0x1C(%esp),%ecx;");
    asm("loc_4D87ED: push %ecx;");
    asm("loc_4D87EE: lea 0x398(%ebx),%ecx;");
    asm("loc_4D87F4: call _sub_5A1130;");
    asm("loc_4D87F9: test %al,%al;");
    asm("loc_4D87FB: jne loc_4D88D9;");
    asm("loc_4D8801: mov 0x384(%ebx),%ecx;");
    asm("loc_4D8807: add $0x80,%ecx;");
    asm("loc_4D880D: call _sub_420D60;");
    asm("loc_4D8812: test %al,%al;");
    asm("loc_4D8814: je loc_4D8843;");
    asm("loc_4D8816: mov _import_5C6D90,%edx;");
    asm("loc_4D881C: mov (%edx),%eax;");
    asm("loc_4D881E: mov 0x384(%ebx),%edx;");
    asm("loc_4D8824: mov 0x84(%edx),%edx;");
    asm("loc_4D882A: mov (%eax),%ecx;");
    asm("loc_4D882C: push %edx;");
    asm("loc_4D882D: push %eax;");
    asm("loc_4D882E: calll *0xA0(%ecx);");
    asm("loc_4D8834: mov $0xC,%ecx;");
    asm("loc_4D8839: mov %eax,%esi;");
    asm("loc_4D883B: lea 0x18(%esp),%edi;");
    asm("loc_4D883F: rep movsl (%esi),(%edi);");
    asm("loc_4D8841: jmp loc_4D8888;");
    asm("loc_4D8843: mov 0x384(%ebx),%eax;");
    asm("loc_4D8849: flds 0x60(%eax);");
    asm("loc_4D884C: fadds 0xA8(%eax);");
    asm("loc_4D8852: fstps 0xC(%esp);");
    asm("loc_4D8856: flds 0x64(%eax);");
    asm("loc_4D8859: fadds 0xAC(%eax);");
    asm("loc_4D885F: fstps 0x10(%esp);");
    asm("loc_4D8863: flds 0x68(%eax);");
    asm("loc_4D8866: mov 0x10(%esp),%ecx;");
    asm("loc_4D886A: fadds 0xB0(%eax);");
    asm("loc_4D8870: mov 0xC(%esp),%eax;");
    asm("loc_4D8874: mov %eax,0x3C(%esp);");
    asm("loc_4D8878: mov %ecx,0x40(%esp);");
    asm("loc_4D887C: fstps 0x14(%esp);");
    asm("loc_4D8880: mov 0x14(%esp),%edx;");
    asm("loc_4D8884: mov %edx,0x44(%esp);");
    asm("loc_4D8888: mov 0x384(%ebx),%eax;");
    asm("loc_4D888E: flds 0x3C(%esp);");
    asm("loc_4D8892: fadds 0xC0(%eax);");
    asm("loc_4D8898: add $0xC0,%eax;");
    asm("loc_4D889D: fstps 0x3C(%esp);");
    asm("loc_4D88A1: flds 0x40(%esp);");
    asm("loc_4D88A5: fadds 4(%eax);");
    asm("loc_4D88A8: fstps 0x40(%esp);");
    asm("loc_4D88AC: flds 0x44(%esp);");
    asm("loc_4D88B0: fadds 8(%eax);");
    asm("loc_4D88B3: lea 0xC(%esp),%eax;");
    asm("loc_4D88B7: push %eax;");
    asm("loc_4D88B8: fstps 0x48(%esp);");
    asm("loc_4D88BC: call _sub_59DA70;");
    asm("loc_4D88C1: add $4,%esp;");
    asm("loc_4D88C4: push %eax;");
    asm("loc_4D88C5: lea 0x1C(%esp),%ecx;");
    asm("loc_4D88C9: push %ecx;");
    asm("loc_4D88CA: lea 0x3A4(%ebx),%ecx;");
    asm("loc_4D88D0: call _sub_5A1130;");
    asm("loc_4D88D5: test %al,%al;");
    asm("loc_4D88D7: je loc_4D88E0;");
    asm("loc_4D88D9: mov %ebx,%ecx;");
    asm("loc_4D88DB: call _sub_5A0760;");
    asm("loc_4D88E0: pop %edi;");
    asm("loc_4D88E1: pop %esi;");
    asm("loc_4D88E2: pop %ebx;");
    asm("loc_4D88E3: add $0x3C,%esp;");
    asm("loc_4D88E6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D88F0() // _sub_4D88F0
{
    __DEBUG_ASM(4D88F0);
    // chunk 0x4D88F0 _sub_4D88F0
    asm("loc_4D88F0: sub $0x34,%esp;");
    asm("loc_4D88F3: push %ebp;");
    asm("loc_4D88F4: push %esi;");
    asm("loc_4D88F5: mov %ecx,%ebp;");
    asm("loc_4D88F7: call _sub_54BAF0;");
    asm("loc_4D88FC: xor %esi,%esi;");
    asm("loc_4D88FE: cmp %esi,%eax;");
    asm("loc_4D8900: je loc_4D8BE3;");
    asm("loc_4D8906: add $0xC,%eax;");
    asm("loc_4D8909: cmp %esi,%eax;");
    asm("loc_4D890B: mov %esi,8(%esp);");
    asm("loc_4D890F: je loc_4D892D;");
    asm("loc_4D8911: mov 4(%eax),%eax;");
    asm("loc_4D8914: cmp %esi,%eax;");
    asm("loc_4D8916: je loc_4D892D;");
    asm("loc_4D8918: mov 0x4C(%eax),%ecx;");
    asm("loc_4D891B: and $0x503,%ecx;");
    asm("loc_4D8921: cmp $0x503,%ecx;");
    asm("loc_4D8927: jne loc_4D892D;");
    asm("loc_4D8929: mov %eax,%ecx;");
    asm("loc_4D892B: jmp loc_4D892F;");
    asm("loc_4D892D: xor %ecx,%ecx;");
    asm("loc_4D892F: push %ebx;");
    asm("loc_4D8930: push %edi;");
    asm("loc_4D8931: calll *_import_5C62E8;");
    asm("loc_4D8937: mov %eax,%ebx;");
    asm("loc_4D8939: mov 0x380(%ebp),%eax;");
    asm("loc_4D893F: cmp %esi,%eax;");
    asm("loc_4D8941: mov 0xC0(%ebx),%edx;");
    asm("loc_4D8947: mov %ebx,0x24(%esp);");
    asm("loc_4D894B: mov %edx,0x14(%esp);");
    asm("loc_4D894F: jne loc_4D8957;");
    asm("loc_4D8951: mov %esi,0x20(%esp);");
    asm("loc_4D8955: jmp loc_4D8974;");
    asm("loc_4D8957: mov 0x384(%ebp),%ecx;");
    asm("loc_4D895D: sub %eax,%ecx;");
    asm("loc_4D895F: mov $0x63E7063F,%eax;");
    asm("loc_4D8964: imul %ecx;");
    asm("loc_4D8966: sar $7,%edx;");
    asm("loc_4D8969: mov %edx,%eax;");
    asm("loc_4D896B: shr $0x1F,%eax;");
    asm("loc_4D896E: add %eax,%edx;");
    asm("loc_4D8970: mov %edx,0x20(%esp);");
    asm("loc_4D8974: xor %eax,%eax;");
    asm("loc_4D8976: mov %esi,0x34(%esp);");
    asm("loc_4D897A: movl $2,0x38(%esp);");
    asm("loc_4D8982: movl $1,0x3C(%esp);");
    asm("loc_4D898A: movl $3,0x40(%esp);");
    asm("loc_4D8992: mov %esi,0x1C(%esp);");
    asm("loc_4D8996: mov %eax,0x18(%esp);");
    asm("loc_4D899A: jmp loc_4D89A0;");
    asm("loc_4D899C: mov 0x24(%esp),%ebx;");
    asm("loc_4D89A0: mov 0x34(%esp,%eax,4),%esi;");
    asm("loc_4D89A4: mov 0x380(%ebp),%edx;");
    asm("loc_4D89AA: mov %esi,%edi;");
    asm("loc_4D89AC: imul $0x148,%edi;");
    asm("loc_4D89B2: mov 0x138(%edi,%edx),%eax;");
    asm("loc_4D89B9: add %edx,%edi;");
    asm("loc_4D89BB: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4D89BE: movb $0,0x13C(%edi);");
    asm("loc_4D89C5: je loc_4D89CC;");
    asm("loc_4D89C7: cmp $0x12,%eax;");
    asm("loc_4D89CA: jne loc_4D89D6;");
    asm("loc_4D89CC: cmp %eax,0x14(%esp);");
    asm("loc_4D89D0: jne loc_4D8AD4;");
    asm("loc_4D89D6: push %eax;");
    asm("loc_4D89D7: mov %ebx,%ecx;");
    asm("loc_4D89D9: calll *_import_5C6514;");
    asm("loc_4D89DF: cmp $2,%eax;");
    asm("loc_4D89E2: jne loc_4D8A08;");
    asm("loc_4D89E4: cmpl $7,0x138(%edi);");
    asm("loc_4D89EB: jne loc_4D89F8;");
    asm("loc_4D89ED: mov %ebp,%ecx;");
    asm("loc_4D89EF: call _sub_4D9750;");
    asm("loc_4D89F4: test %al,%al;");
    asm("loc_4D89F6: jne loc_4D8A08;");
    asm("loc_4D89F8: mov 0x14(%esp),%ecx;");
    asm("loc_4D89FC: cmp 0x138(%edi),%ecx;");
    asm("loc_4D8A02: jne loc_4D8AD4;");
    asm("loc_4D8A08: mov 0x10(%esp),%edx;");
    asm("loc_4D8A0C: mov 0x36C(%ebp,%esi,4),%esi;");
    asm("loc_4D8A13: push $0;");
    asm("loc_4D8A15: inc %edx;");
    asm("loc_4D8A16: push $0;");
    asm("loc_4D8A18: mov %edx,0x18(%esp);");
    asm("loc_4D8A1C: mov (%esi),%edx;");
    asm("loc_4D8A1E: push $1;");
    asm("loc_4D8A20: mov %esi,%ecx;");
    asm("loc_4D8A22: mov %edi,0x28(%esp);");
    asm("loc_4D8A26: calll *0xA8(%edx);");
    asm("loc_4D8A2C: mov (%esi),%eax;");
    asm("loc_4D8A2E: push $0;");
    asm("loc_4D8A30: push $_data_679B94;");
    asm("loc_4D8A35: push $0x33;");
    asm("loc_4D8A37: mov %esi,%ecx;");
    asm("loc_4D8A39: calll *0xA8(%eax);");
    asm("loc_4D8A3F: mov 0x138(%edi),%edx;");
    asm("loc_4D8A45: mov 0x14(%esp),%ecx;");
    asm("loc_4D8A49: cmp %ecx,%edx;");
    asm("loc_4D8A4B: mov (%esi),%edx;");
    asm("loc_4D8A4D: sete %bl;");
    asm("loc_4D8A50: xor %eax,%eax;");
    asm("loc_4D8A52: mov %bl,%al;");
    asm("loc_4D8A54: push $0;");
    asm("loc_4D8A56: mov %esi,%ecx;");
    asm("loc_4D8A58: push %eax;");
    asm("loc_4D8A59: push $0xC;");
    asm("loc_4D8A5B: calll *0xA8(%edx);");
    asm("loc_4D8A61: test %bl,%bl;");
    asm("loc_4D8A63: jne loc_4D8A87;");
    asm("loc_4D8A65: call _sub_45A740;");
    asm("loc_4D8A6A: test %al,%al;");
    asm("loc_4D8A6C: jne loc_4D8AB4;");
    asm("loc_4D8A6E: mov (%esi),%ebx;");
    asm("loc_4D8A70: lea 0x28(%esp),%ecx;");
    asm("loc_4D8A74: push %ecx;");
    asm("loc_4D8A75: call _sub_59DA70;");
    asm("loc_4D8A7A: add $4,%esp;");
    asm("loc_4D8A7D: push %eax;");
    asm("loc_4D8A7E: mov %esi,%ecx;");
    asm("loc_4D8A80: calll *0x10(%ebx);");
    asm("loc_4D8A83: test %al,%al;");
    asm("loc_4D8A85: je loc_4D8AB4;");
    asm("loc_4D8A87: mov 0xA8(%edi),%eax;");
    asm("loc_4D8A8D: test %eax,%eax;");
    asm("loc_4D8A8F: je loc_4D8AB4;");
    asm("loc_4D8A91: mov (%esi),%edx;");
    asm("loc_4D8A93: push $0;");
    asm("loc_4D8A95: lea 0xAC(%edi),%eax;");
    asm("loc_4D8A9B: push %eax;");
    asm("loc_4D8A9C: push $4;");
    asm("loc_4D8A9E: mov %esi,%ecx;");
    asm("loc_4D8AA0: calll *0xA8(%edx);");
    asm("loc_4D8AA6: mov 0x144(%edi),%ecx;");
    asm("loc_4D8AAC: mov %ecx,0x338(%esi);");
    asm("loc_4D8AB2: jmp loc_4D8B23;");
    asm("loc_4D8AB4: mov (%esi),%edx;");
    asm("loc_4D8AB6: push $0;");
    asm("loc_4D8AB8: lea 0x28(%edi),%eax;");
    asm("loc_4D8ABB: push %eax;");
    asm("loc_4D8ABC: push $4;");
    asm("loc_4D8ABE: mov %esi,%ecx;");
    asm("loc_4D8AC0: calll *0xA8(%edx);");
    asm("loc_4D8AC6: mov 0x140(%edi),%ecx;");
    asm("loc_4D8ACC: mov %ecx,0x338(%esi);");
    asm("loc_4D8AD2: jmp loc_4D8B23;");
    asm("loc_4D8AD4: mov 0x36C(%ebp,%esi,4),%esi;");
    asm("loc_4D8ADB: mov (%esi),%edx;");
    asm("loc_4D8ADD: push $0;");
    asm("loc_4D8ADF: push $0;");
    asm("loc_4D8AE1: push $1;");
    asm("loc_4D8AE3: mov %esi,%ecx;");
    asm("loc_4D8AE5: calll *0xA8(%edx);");
    asm("loc_4D8AEB: mov (%esi),%eax;");
    asm("loc_4D8AED: push $0;");
    asm("loc_4D8AEF: lea 0xAC(%edi),%ecx;");
    asm("loc_4D8AF5: push %ecx;");
    asm("loc_4D8AF6: push $4;");
    asm("loc_4D8AF8: mov %esi,%ecx;");
    asm("loc_4D8AFA: calll *0xA8(%eax);");
    asm("loc_4D8B00: mov 0x144(%edi),%edx;");
    asm("loc_4D8B06: mov (%esi),%eax;");
    asm("loc_4D8B08: push $1;");
    asm("loc_4D8B0A: push $_data_679B94;");
    asm("loc_4D8B0F: push $0x33;");
    asm("loc_4D8B11: mov %esi,%ecx;");
    asm("loc_4D8B13: mov %edx,0x338(%esi);");
    asm("loc_4D8B19: calll *0xA8(%eax);");
    asm("loc_4D8B1F: incl 0x10(%esp);");
    asm("loc_4D8B23: mov 0x18(%esp),%eax;");
    asm("loc_4D8B27: inc %eax;");
    asm("loc_4D8B28: cmp $4,%eax;");
    asm("loc_4D8B2B: mov %eax,0x18(%esp);");
    asm("loc_4D8B2F: jl loc_4D899C;");
    asm("loc_4D8B35: mov 0x1C(%esp),%eax;");
    asm("loc_4D8B39: test %eax,%eax;");
    asm("loc_4D8B3B: je loc_4D8B44;");
    asm("loc_4D8B3D: movb $1,0x13C(%eax);");
    asm("loc_4D8B44: mov 0x10(%esp),%ebx;");
    asm("loc_4D8B48: push %ebx;");
    asm("loc_4D8B49: mov %ebp,%ecx;");
    asm("loc_4D8B4B: call _sub_4D95B0;");
    asm("loc_4D8B50: flds _data_5C7474;");
    asm("loc_4D8B56: test $1,%bl;");
    asm("loc_4D8B59: jne loc_4D8B63;");
    asm("loc_4D8B5B: fstp %st(0);");
    asm("loc_4D8B5D: flds _data_5D1FE4;");
    asm("loc_4D8B63: mov 0x20(%esp),%edi;");
    asm("loc_4D8B67: mov %ebx,%eax;");
    asm("loc_4D8B69: cltd;");
    asm("loc_4D8B6A: sub %edx,%eax;");
    asm("loc_4D8B6C: sar $1,%eax;");
    asm("loc_4D8B6E: test %edi,%edi;");
    asm("loc_4D8B70: mov %eax,0x24(%esp);");
    asm("loc_4D8B74: fildl 0x24(%esp);");
    asm("loc_4D8B78: fmuls _data_5D845C;");
    asm("loc_4D8B7E: fsubr %st(1),%st;");
    asm("loc_4D8B80: fstps 0x10(%esp);");
    asm("loc_4D8B84: fstp %st(0);");
    asm("loc_4D8B86: jle loc_4D8BD5;");
    asm("loc_4D8B88: lea 0x36C(%ebp),%esi;");
    asm("loc_4D8B8E: mov %edi,%edi;");
    asm("loc_4D8B90: mov (%esi),%ecx;");
    asm("loc_4D8B92: testb $2,0x6C(%ecx);");
    asm("loc_4D8B96: je loc_4D8BCF;");
    asm("loc_4D8B98: mov 0x10(%esp),%edx;");
    asm("loc_4D8B9C: mov (%ecx),%eax;");
    asm("loc_4D8B9E: mov %edx,0x28(%esp);");
    asm("loc_4D8BA2: push $0;");
    asm("loc_4D8BA4: lea 0x2C(%esp),%edx;");
    asm("loc_4D8BA8: push %edx;");
    asm("loc_4D8BA9: push $6;");
    asm("loc_4D8BAB: movl $0x3E35F6FD,0x38(%esp);");
    asm("loc_4D8BB3: movl $0x3F000000,0x3C(%esp);");
    asm("loc_4D8BBB: calll *0xA8(%eax);");
    asm("loc_4D8BC1: flds 0x10(%esp);");
    asm("loc_4D8BC5: fadds _data_5D845C;");
    asm("loc_4D8BCB: fstps 0x10(%esp);");
    asm("loc_4D8BCF: add $4,%esi;");
    asm("loc_4D8BD2: dec %edi;");
    asm("loc_4D8BD3: jne loc_4D8B90;");
    asm("loc_4D8BD5: mov 0x14(%esp),%eax;");
    asm("loc_4D8BD9: push %eax;");
    asm("loc_4D8BDA: mov %ebp,%ecx;");
    asm("loc_4D8BDC: call _sub_4D8BF0;");
    asm("loc_4D8BE1: pop %edi;");
    asm("loc_4D8BE2: pop %ebx;");
    asm("loc_4D8BE3: pop %esi;");
    asm("loc_4D8BE4: pop %ebp;");
    asm("loc_4D8BE5: add $0x34,%esp;");
    asm("loc_4D8BE8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D8BF0() // _sub_4D8BF0
{
    __DEBUG_ASM(4D8BF0);
    // chunk 0x4D8BF0 _sub_4D8BF0
    asm("loc_4D8BF0: sub $0xC,%esp;");
    asm("loc_4D8BF3: push %ebx;");
    asm("loc_4D8BF4: push %esi;");
    asm("loc_4D8BF5: push %edi;");
    asm("loc_4D8BF6: mov 0x1C(%esp),%edi;");
    asm("loc_4D8BFA: cmp $0x13,%edi;");
    asm("loc_4D8BFD: mov %ecx,%esi;");
    asm("loc_4D8BFF: je loc_4D8C35;");
    asm("loc_4D8C01: cmp $2,%edi;");
    asm("loc_4D8C04: je loc_4D8C35;");
    asm("loc_4D8C06: cmp $3,%edi;");
    asm("loc_4D8C09: je loc_4D8C35;");
    asm("loc_4D8C0B: cmp $5,%edi;");
    asm("loc_4D8C0E: je loc_4D8C35;");
    asm("loc_4D8C10: cmp $7,%edi;");
    asm("loc_4D8C13: je loc_4D8C35;");
    asm("loc_4D8C15: mov 0x3BC(%esi),%ecx;");
    asm("loc_4D8C1B: mov (%ecx),%eax;");
    asm("loc_4D8C1D: push $0;");
    asm("loc_4D8C1F: mov $1,%ebx;");
    asm("loc_4D8C24: push %ebx;");
    asm("loc_4D8C25: push %ebx;");
    asm("loc_4D8C26: calll *0xA8(%eax);");
    asm("loc_4D8C2C: push $0;");
    asm("loc_4D8C2E: push %ebx;");
    asm("loc_4D8C2F: push %ebx;");
    asm("loc_4D8C30: jmp loc_4D8D7E;");
    asm("loc_4D8C35: mov 0x3BC(%esi),%ecx;");
    asm("loc_4D8C3B: mov (%ecx),%eax;");
    asm("loc_4D8C3D: push $0;");
    asm("loc_4D8C3F: push $0;");
    asm("loc_4D8C41: mov $1,%ebx;");
    asm("loc_4D8C46: push %ebx;");
    asm("loc_4D8C47: calll *0xA8(%eax);");
    asm("loc_4D8C4D: cmp $2,%edi;");
    asm("loc_4D8C50: movl $0,0xC(%esp);");
    asm("loc_4D8C58: movl $0,0x10(%esp);");
    asm("loc_4D8C60: movl $0,0x14(%esp);");
    asm("loc_4D8C68: jne loc_4D8C72;");
    asm("loc_4D8C6A: mov 0x370(%esi),%ecx;");
    asm("loc_4D8C70: jmp loc_4D8C85;");
    asm("loc_4D8C72: cmp $7,%edi;");
    asm("loc_4D8C75: jne loc_4D8C7F;");
    asm("loc_4D8C77: mov 0x374(%esi),%ecx;");
    asm("loc_4D8C7D: jmp loc_4D8C85;");
    asm("loc_4D8C7F: mov 0x36C(%esi),%ecx;");
    asm("loc_4D8C85: mov (%ecx),%edx;");
    asm("loc_4D8C87: push $0;");
    asm("loc_4D8C89: lea 0x10(%esp),%eax;");
    asm("loc_4D8C8D: push %eax;");
    asm("loc_4D8C8E: push $7;");
    asm("loc_4D8C90: calll *0xA8(%edx);");
    asm("loc_4D8C96: cmp %ebx,0x3C0(%esi);");
    asm("loc_4D8C9C: je loc_4D8CD4;");
    asm("loc_4D8C9E: mov 0x3BC(%esi),%ecx;");
    asm("loc_4D8CA4: mov %ebx,0x3C0(%esi);");
    asm("loc_4D8CAA: mov _off_61262C,%eax;");
    asm("loc_4D8CAF: mov (%ecx),%edx;");
    asm("loc_4D8CB1: push $0;");
    asm("loc_4D8CB3: push %eax;");
    asm("loc_4D8CB4: push $4;");
    asm("loc_4D8CB6: calll *0xA8(%edx);");
    asm("loc_4D8CBC: mov 0x3BC(%esi),%ecx;");
    asm("loc_4D8CC2: add $0x80,%ecx;");
    asm("loc_4D8CC8: push %ecx;");
    asm("loc_4D8CC9: lea 0x3DC(%esi),%ecx;");
    asm("loc_4D8CCF: call _sub_5A1340;");
    asm("loc_4D8CD4: flds 0xC(%esp);");
    asm("loc_4D8CD8: mov 0x3BC(%esi),%ecx;");
    asm("loc_4D8CDE: push $0;");
    asm("loc_4D8CE0: fadd %st,%st(0);");
    asm("loc_4D8CE2: lea 0x10(%esp),%eax;");
    asm("loc_4D8CE6: push %eax;");
    asm("loc_4D8CE7: fstps 0x14(%esp);");
    asm("loc_4D8CEB: movl $0x3E966CF5,0x18(%esp);");
    asm("loc_4D8CF3: movl $0xBF800000,0x1C(%esp);");
    asm("loc_4D8CFB: mov (%ecx),%edx;");
    asm("loc_4D8CFD: push $6;");
    asm("loc_4D8CFF: calll *0xA8(%edx);");
    asm("loc_4D8D05: cmp $2,%edi;");
    asm("loc_4D8D08: je loc_4D8D37;");
    asm("loc_4D8D0A: cmp $0x13,%edi;");
    asm("loc_4D8D0D: je loc_4D8D37;");
    asm("loc_4D8D0F: cmp $7,%edi;");
    asm("loc_4D8D12: je loc_4D8D37;");
    asm("loc_4D8D14: mov 0x3C4(%esi),%ecx;");
    asm("loc_4D8D1A: mov (%ecx),%edx;");
    asm("loc_4D8D1C: push $0;");
    asm("loc_4D8D1E: push $0;");
    asm("loc_4D8D20: push %ebx;");
    asm("loc_4D8D21: calll *0xA8(%edx);");
    asm("loc_4D8D27: flds 0xC(%esp);");
    asm("loc_4D8D2B: fsubs _data_5D69C0;");
    asm("loc_4D8D31: fstps 0xC(%esp);");
    asm("loc_4D8D35: jmp loc_4D8D4A;");
    asm("loc_4D8D37: mov 0x3C4(%esi),%ecx;");
    asm("loc_4D8D3D: mov (%ecx),%edx;");
    asm("loc_4D8D3F: push $0;");
    asm("loc_4D8D41: push $0;");
    asm("loc_4D8D43: push %ebx;");
    asm("loc_4D8D44: calll *0xA8(%edx);");
    asm("loc_4D8D4A: mov 0x3C4(%esi),%ecx;");
    asm("loc_4D8D50: push $0;");
    asm("loc_4D8D52: lea 0x10(%esp),%edx;");
    asm("loc_4D8D56: push %edx;");
    asm("loc_4D8D57: movl $0,0x1C(%esp);");
    asm("loc_4D8D5F: movl $0x3E981062,0x18(%esp);");
    asm("loc_4D8D67: mov (%ecx),%eax;");
    asm("loc_4D8D69: push $6;");
    asm("loc_4D8D6B: calll *0xA8(%eax);");
    asm("loc_4D8D71: call _sub_4C7B90;");
    asm("loc_4D8D76: movzbl %al,%eax;");
    asm("loc_4D8D79: push $0;");
    asm("loc_4D8D7B: push %eax;");
    asm("loc_4D8D7C: push $0xC;");
    asm("loc_4D8D7E: mov 0x3C4(%esi),%ecx;");
    asm("loc_4D8D84: mov (%ecx),%edx;");
    asm("loc_4D8D86: calll *0xA8(%edx);");
    asm("loc_4D8D8C: pop %edi;");
    asm("loc_4D8D8D: pop %esi;");
    asm("loc_4D8D8E: pop %ebx;");
    asm("loc_4D8D8F: add $0xC,%esp;");
    asm("loc_4D8D92: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D8DA0() // _sub_4D8DA0
{
    __DEBUG_ASM(4D8DA0);
    // chunk 0x4D8DA0 _sub_4D8DA0
    asm("loc_4D8DA0: cmpl $0x26,4(%esp);");
    asm("loc_4D8DA5: push %esi;");
    asm("loc_4D8DA6: mov %ecx,%esi;");
    asm("loc_4D8DA8: jne loc_4D8E0E;");
    asm("loc_4D8DAA: call _sub_54BAF0;");
    asm("loc_4D8DAF: test %eax,%eax;");
    asm("loc_4D8DB1: je loc_4D8E0E;");
    asm("loc_4D8DB3: add $0xC,%eax;");
    asm("loc_4D8DB6: test %eax,%eax;");
    asm("loc_4D8DB8: je loc_4D8DD0;");
    asm("loc_4D8DBA: mov 4(%eax),%ecx;");
    asm("loc_4D8DBD: test %ecx,%ecx;");
    asm("loc_4D8DBF: je loc_4D8DD0;");
    asm("loc_4D8DC1: mov 0x4C(%ecx),%eax;");
    asm("loc_4D8DC4: and $0x503,%eax;");
    asm("loc_4D8DC9: cmp $0x503,%eax;");
    asm("loc_4D8DCE: je loc_4D8DD2;");
    asm("loc_4D8DD0: xor %ecx,%ecx;");
    asm("loc_4D8DD2: calll *_import_5C62E8;");
    asm("loc_4D8DD8: mov 0xC(%esp),%edx;");
    asm("loc_4D8DDC: xor %eax,%eax;");
    asm("loc_4D8DDE: lea 0x334(%esi),%ecx;");
    asm("loc_4D8DE4: cmp %edx,(%ecx);");
    asm("loc_4D8DE6: je loc_4D8DF7;");
    asm("loc_4D8DE8: inc %eax;");
    asm("loc_4D8DE9: add $4,%ecx;");
    asm("loc_4D8DEC: cmp $4,%eax;");
    asm("loc_4D8DEF: jl loc_4D8DE4;");
    asm("loc_4D8DF1: xor %eax,%eax;");
    asm("loc_4D8DF3: pop %esi;");
    asm("loc_4D8DF4: ret $0xC;");
    asm("loc_4D8DF7: mov 0x348(%esi),%edx;");
    asm("loc_4D8DFD: imul $0x148,%eax;");
    asm("loc_4D8E03: add %edx,%eax;");
    asm("loc_4D8E05: push %eax;");
    asm("loc_4D8E06: lea -0x38(%esi),%ecx;");
    asm("loc_4D8E09: call _sub_4D9470;");
    asm("loc_4D8E0E: xor %eax,%eax;");
    asm("loc_4D8E10: pop %esi;");
    asm("loc_4D8E11: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D8E20() // _sub_4D8E20
{
    asm("jmp dgb_4D8E20;"); // jumptable skip
    asm(".long _jmp_4D93C4;"); // jumptable address
    __DEBUG_ASM(4D8E20);
    // chunk 0x4D8E20 _sub_4D8E20
    asm("loc_4D8E20: sub $0xC8,%esp;");
    asm("loc_4D8E26: push %ebx;");
    asm("loc_4D8E27: push %ebp;");
    asm("loc_4D8E28: push %esi;");
    asm("loc_4D8E29: push %edi;");
    asm("loc_4D8E2A: mov %ecx,0x1C(%esp);");
    asm("loc_4D8E2E: call _sub_54BAF0;");
    asm("loc_4D8E33: test %eax,%eax;");
    asm("loc_4D8E35: jne loc_4D8E46;");
    asm("loc_4D8E37: pop %edi;");
    asm("loc_4D8E38: pop %esi;");
    asm("loc_4D8E39: pop %ebp;");
    asm("loc_4D8E3A: xor %al,%al;");
    asm("loc_4D8E3C: pop %ebx;");
    asm("loc_4D8E3D: add $0xC8,%esp;");
    asm("loc_4D8E43: ret $8;");
    asm("loc_4D8E46: add $0xC,%eax;");
    asm("loc_4D8E49: test %eax,%eax;");
    asm("loc_4D8E4B: je loc_4D8E63;");
    asm("loc_4D8E4D: mov 4(%eax),%esi;");
    asm("loc_4D8E50: test %esi,%esi;");
    asm("loc_4D8E52: je loc_4D8E63;");
    asm("loc_4D8E54: mov 0x4C(%esi),%eax;");
    asm("loc_4D8E57: and $0x503,%eax;");
    asm("loc_4D8E5C: cmp $0x503,%eax;");
    asm("loc_4D8E61: je loc_4D8E65;");
    asm("loc_4D8E63: xor %esi,%esi;");
    asm("loc_4D8E65: mov %esi,%ecx;");
    asm("loc_4D8E67: calll *_import_5C62E8;");
    asm("loc_4D8E6D: mov %eax,%ebp;");
    asm("loc_4D8E6F: mov 0xDC(%esp),%eax;");
    asm("loc_4D8E76: xor %bl,%bl;");
    asm("loc_4D8E78: mov %eax,0x2C(%esp);");
    asm("loc_4D8E7C: inc %eax;");
    asm("loc_4D8E7D: cmp $0x14,%eax;");
    asm("loc_4D8E80: mov $1,%edi;");
    asm("loc_4D8E85: movl $0,0x28(%esp);");
    asm("loc_4D8E8D: mov %edi,0x24(%esp);");
    asm("loc_4D8E91: ja loc_4D935A;");
    asm("loc_4D8E97: movzbl _data_4D93EC(%eax),%ecx;");
    asm("loc_4D8E9E: jmpl *_jmp_4D93C4(,%ecx,4);");
    asm("loc_4D8EA5: push $0;");
    asm("loc_4D8EA7: lea 0x14(%esp),%edx;");
    asm("loc_4D8EAB: push %edx;");
    asm("loc_4D8EAC: mov %ebp,%ecx;");
    asm("loc_4D8EAE: movl $0,0x1C(%esp);");
    asm("loc_4D8EB6: mov %edi,0x18(%esp);");
    asm("loc_4D8EBA: movl $0x13,0x20(%esp);");
    asm("loc_4D8EC2: calll *_import_5C6530;");
    asm("loc_4D8EC8: mov %al,%bl;");
    asm("loc_4D8ECA: call _sub_4C7950;");
    asm("loc_4D8ECF: jmp loc_4D935A;");
    asm("loc_4D8ED4: lea 0x3C(%esp),%ecx;");
    asm("loc_4D8ED8: calll *_import_5C652C;");
    asm("loc_4D8EDE: mov %esi,%ecx;");
    asm("loc_4D8EE0: calll *_import_5C6348;");
    asm("loc_4D8EE6: test %eax,%eax;");
    asm("loc_4D8EE8: jne loc_4D8EF9;");
    asm("loc_4D8EEA: pop %edi;");
    asm("loc_4D8EEB: pop %esi;");
    asm("loc_4D8EEC: pop %ebp;");
    asm("loc_4D8EED: xor %al,%al;");
    asm("loc_4D8EEF: pop %ebx;");
    asm("loc_4D8EF0: add $0xC8,%esp;");
    asm("loc_4D8EF6: ret $8;");
    asm("loc_4D8EF9: mov (%eax),%edx;");
    asm("loc_4D8EFB: mov %eax,%ecx;");
    asm("loc_4D8EFD: calll *0x20(%edx);");
    asm("loc_4D8F00: mov %eax,0x48(%esp);");
    asm("loc_4D8F04: mov 0x1C(%esp),%eax;");
    asm("loc_4D8F08: mov 0x3AC(%eax),%ecx;");
    asm("loc_4D8F0E: mov 0x3B0(%eax),%edx;");
    asm("loc_4D8F14: lea 0x3C(%esp),%eax;");
    asm("loc_4D8F18: mov %ecx,0x4C(%esp);");
    asm("loc_4D8F1C: push %eax;");
    asm("loc_4D8F1D: lea 0x28(%esp),%ecx;");
    asm("loc_4D8F21: mov %edx,0x54(%esp);");
    asm("loc_4D8F25: push %ecx;");
    asm("loc_4D8F26: jmp loc_4D9350;");
    asm("loc_4D8F2B: lea 0x3C(%esp),%ecx;");
    asm("loc_4D8F2F: calll *_import_5C6528;");
    asm("loc_4D8F35: mov %esi,%ecx;");
    asm("loc_4D8F37: calll *_import_5C6348;");
    asm("loc_4D8F3D: test %eax,%eax;");
    asm("loc_4D8F3F: jne loc_4D8F50;");
    asm("loc_4D8F41: pop %edi;");
    asm("loc_4D8F42: pop %esi;");
    asm("loc_4D8F43: pop %ebp;");
    asm("loc_4D8F44: xor %al,%al;");
    asm("loc_4D8F46: pop %ebx;");
    asm("loc_4D8F47: add $0xC8,%esp;");
    asm("loc_4D8F4D: ret $8;");
    asm("loc_4D8F50: mov (%eax),%edx;");
    asm("loc_4D8F52: mov %eax,%ecx;");
    asm("loc_4D8F54: calll *0x20(%edx);");
    asm("loc_4D8F57: mov %eax,0x48(%esp);");
    asm("loc_4D8F5B: lea 0x3C(%esp),%eax;");
    asm("loc_4D8F5F: push %eax;");
    asm("loc_4D8F60: lea 0x28(%esp),%ecx;");
    asm("loc_4D8F64: push %ecx;");
    asm("loc_4D8F65: jmp loc_4D9350;");
    asm("loc_4D8F6A: lea 0x68(%esp),%ecx;");
    asm("loc_4D8F6E: calll *_import_5C6524;");
    asm("loc_4D8F74: mov %esi,%ecx;");
    asm("loc_4D8F76: calll *_import_5C6348;");
    asm("loc_4D8F7C: test %eax,%eax;");
    asm("loc_4D8F7E: je loc_4D8FA6;");
    asm("loc_4D8F80: mov (%eax),%edx;");
    asm("loc_4D8F82: mov %eax,%ecx;");
    asm("loc_4D8F84: calll *0x20(%edx);");
    asm("loc_4D8F87: mov %eax,0x78(%esp);");
    asm("loc_4D8F8B: lea 0x68(%esp),%eax;");
    asm("loc_4D8F8F: push %eax;");
    asm("loc_4D8F90: lea 0x28(%esp),%ecx;");
    asm("loc_4D8F94: mov %edi,0x78(%esp);");
    asm("loc_4D8F98: movb $1,0xB0(%esp);");
    asm("loc_4D8FA0: push %ecx;");
    asm("loc_4D8FA1: jmp loc_4D9350;");
    asm("loc_4D8FA6: flds 0x10(%esi);");
    asm("loc_4D8FA9: movl $2,0x74(%esp);");
    asm("loc_4D8FB1: flds 0x1C(%esi);");
    asm("loc_4D8FB4: flds 0x28(%esi);");
    asm("loc_4D8FB7: fstps 0x18(%esp);");
    asm("loc_4D8FBB: fxch;");
    asm("loc_4D8FBD: movl $0,0x78(%esp);");
    asm("loc_4D8FC5: fmuls _data_5CA21C;");
    asm("loc_4D8FCB: movb $1,0xAC(%esp);");
    asm("loc_4D8FD3: fstps 0x3C(%esp);");
    asm("loc_4D8FD7: fmuls _data_5CA21C;");
    asm("loc_4D8FDD: flds 0x18(%esp);");
    asm("loc_4D8FE1: fmuls _data_5CA21C;");
    asm("loc_4D8FE7: flds 0x3C(%esp);");
    asm("loc_4D8FEB: fadds 0x2C(%esi);");
    asm("loc_4D8FEE: fstps 0x10(%esp);");
    asm("loc_4D8FF2: mov 0x10(%esp),%eax;");
    asm("loc_4D8FF6: fxch;");
    asm("loc_4D8FF8: fadds 0x30(%esi);");
    asm("loc_4D8FFB: mov %eax,0x7C(%esp);");
    asm("loc_4D8FFF: lea 0x68(%esp),%eax;");
    asm("loc_4D9003: push %eax;");
    asm("loc_4D9004: fstps 0x18(%esp);");
    asm("loc_4D9008: mov 0x18(%esp),%ecx;");
    asm("loc_4D900C: fadds 0x34(%esi);");
    asm("loc_4D900F: mov %ecx,0x84(%esp);");
    asm("loc_4D9016: lea 0x28(%esp),%ecx;");
    asm("loc_4D901A: push %ecx;");
    asm("loc_4D901B: fstps 0x20(%esp);");
    asm("loc_4D901F: mov 0x20(%esp),%edx;");
    asm("loc_4D9023: mov %edx,0x8C(%esp);");
    asm("loc_4D902A: jmp loc_4D9350;");
    asm("loc_4D902F: lea 0x68(%esp),%ecx;");
    asm("loc_4D9033: calll *_import_5C6520;");
    asm("loc_4D9039: mov %esi,%ecx;");
    asm("loc_4D903B: movb $0,0xC0(%esp);");
    asm("loc_4D9043: calll *_import_5C6348;");
    asm("loc_4D9049: mov %eax,%edi;");
    asm("loc_4D904B: test %edi,%edi;");
    asm("loc_4D904D: je loc_4D913E;");
    asm("loc_4D9053: movl $0,0x74(%esp);");
    asm("loc_4D905B: mov (%edi),%edx;");
    asm("loc_4D905D: mov %edi,%ecx;");
    asm("loc_4D905F: calll *0x20(%edx);");
    asm("loc_4D9062: lea 0x3C(%esp),%ecx;");
    asm("loc_4D9066: push %ecx;");
    asm("loc_4D9067: lea 0x24(%esp),%edx;");
    asm("loc_4D906B: mov %eax,0x88(%esp);");
    asm("loc_4D9072: mov (%edi),%eax;");
    asm("loc_4D9074: push %edx;");
    asm("loc_4D9075: mov %edi,%ecx;");
    asm("loc_4D9077: movl $0,0x28(%esp);");
    asm("loc_4D907F: calll *0x2C(%eax);");
    asm("loc_4D9082: mov (%edi),%eax;");
    asm("loc_4D9084: lea 0x34(%esp),%ecx;");
    asm("loc_4D9088: push %ecx;");
    asm("loc_4D9089: mov %edi,%ecx;");
    asm("loc_4D908B: movl $0x3F800000,0x3C(%esp);");
    asm("loc_4D9093: calll *0x88(%eax);");
    asm("loc_4D9099: mov 0x34(%esp),%ecx;");
    asm("loc_4D909D: test $0x30000,%ecx;");
    asm("loc_4D90A3: je loc_4D90AD;");
    asm("loc_4D90A5: flds _data_5D8464;");
    asm("loc_4D90AB: jmp loc_4D90EE;");
    asm("loc_4D90AD: test $0x140000,%ecx;");
    asm("loc_4D90B3: je loc_4D90BD;");
    asm("loc_4D90B5: flds _data_5D55B4;");
    asm("loc_4D90BB: jmp loc_4D90EE;");
    asm("loc_4D90BD: test $0x680000,%ecx;");
    asm("loc_4D90C3: je loc_4D90CD;");
    asm("loc_4D90C5: flds _data_5C75DC;");
    asm("loc_4D90CB: jmp loc_4D90EE;");
    asm("loc_4D90CD: test $0xF,%cl;");
    asm("loc_4D90D0: je loc_4D90DA;");
    asm("loc_4D90D2: flds _data_5C75E0;");
    asm("loc_4D90D8: jmp loc_4D90EE;");
    asm("loc_4D90DA: test $0xFDFF,%ecx;");
    asm("loc_4D90E0: je loc_4D90EA;");
    asm("loc_4D90E2: flds _data_5C75DC;");
    asm("loc_4D90E8: jmp loc_4D90EE;");
    asm("loc_4D90EA: flds 0x38(%esp);");
    asm("loc_4D90EE: fmuls 0x20(%esp);");
    asm("loc_4D90F2: fsts 0xB8(%esp);");
    asm("loc_4D90F9: fcompl _data_5CA320;");
    asm("loc_4D90FF: fnstsw %ax;");
    asm("loc_4D9101: test $5,%ah;");
    asm("loc_4D9104: jp loc_4D9111;");
    asm("loc_4D9106: movl $0x42C80000,0xB8(%esp);");
    asm("loc_4D9111: cmp $0x200,%ecx;");
    asm("loc_4D9117: jne loc_4D9129;");
    asm("loc_4D9119: movl $0x42C80000,0xB8(%esp);");
    asm("loc_4D9124: jmp loc_4D91B0;");
    asm("loc_4D9129: cmp $0x80,%ecx;");
    asm("loc_4D912F: jne loc_4D91B0;");
    asm("loc_4D9131: movl $0x443B8000,0xB8(%esp);");
    asm("loc_4D913C: jmp loc_4D91B0;");
    asm("loc_4D913E: flds 0x10(%esi);");
    asm("loc_4D9141: movl $1,0x74(%esp);");
    asm("loc_4D9149: flds 0x1C(%esi);");
    asm("loc_4D914C: flds 0x28(%esi);");
    asm("loc_4D914F: fstps 0x44(%esp);");
    asm("loc_4D9153: fxch;");
    asm("loc_4D9155: movl $0x43FA0000,0xB8(%esp);");
    asm("loc_4D9160: fmuls _data_5D8460;");
    asm("loc_4D9166: fstps 0x10(%esp);");
    asm("loc_4D916A: fmuls _data_5D8460;");
    asm("loc_4D9170: flds 0x44(%esp);");
    asm("loc_4D9174: fmuls _data_5D8460;");
    asm("loc_4D917A: flds 0x10(%esp);");
    asm("loc_4D917E: fadds 0x2C(%esi);");
    asm("loc_4D9181: fstps 0x10(%esp);");
    asm("loc_4D9185: mov 0x10(%esp),%edx;");
    asm("loc_4D9189: fxch;");
    asm("loc_4D918B: fadds 0x30(%esi);");
    asm("loc_4D918E: mov %edx,0x78(%esp);");
    asm("loc_4D9192: fstps 0x14(%esp);");
    asm("loc_4D9196: mov 0x14(%esp),%eax;");
    asm("loc_4D919A: fadds 0x34(%esi);");
    asm("loc_4D919D: mov %eax,0x7C(%esp);");
    asm("loc_4D91A1: fstps 0x18(%esp);");
    asm("loc_4D91A5: mov 0x18(%esp),%ecx;");
    asm("loc_4D91A9: mov %ecx,0x80(%esp);");
    asm("loc_4D91B0: lea 0x68(%esp),%edx;");
    asm("loc_4D91B4: push %edx;");
    asm("loc_4D91B5: lea 0x28(%esp),%eax;");
    asm("loc_4D91B9: push %eax;");
    asm("loc_4D91BA: mov %ebp,%ecx;");
    asm("loc_4D91BC: calll *_import_5C6530;");
    asm("loc_4D91C2: test %edi,%edi;");
    asm("loc_4D91C4: mov %al,%bl;");
    asm("loc_4D91C6: jne loc_4D935A;");
    asm("loc_4D91CC: call _sub_4C7950;");
    asm("loc_4D91D1: jmp loc_4D935A;");
    asm("loc_4D91D6: mov 0xE0(%esp),%al;");
    asm("loc_4D91DD: test %al,%al;");
    asm("loc_4D91DF: je loc_4D9202;");
    asm("loc_4D91E1: lea 0x3C(%esp),%ecx;");
    asm("loc_4D91E5: calll *_import_5C651C;");
    asm("loc_4D91EB: lea 0x3C(%esp),%ecx;");
    asm("loc_4D91EF: push %ecx;");
    asm("loc_4D91F0: lea 0x28(%esp),%edx;");
    asm("loc_4D91F4: push %edx;");
    asm("loc_4D91F5: mov %ebp,%ecx;");
    asm("loc_4D91F7: calll *_import_5C6530;");
    asm("loc_4D91FD: jmp loc_4D935A;");
    asm("loc_4D9202: mov 0x1C(%esp),%eax;");
    asm("loc_4D9206: cmp %edi,0x38C(%eax);");
    asm("loc_4D920C: je loc_4D935A;");
    asm("loc_4D9212: mov %esi,%ecx;");
    asm("loc_4D9214: calll *_import_5C6348;");
    asm("loc_4D921A: test %eax,%eax;");
    asm("loc_4D921C: mov 0x1C(%esp),%ecx;");
    asm("loc_4D9220: lea 0x390(%ecx),%esi;");
    asm("loc_4D9226: je loc_4D922D;");
    asm("loc_4D9228: add $8,%eax;");
    asm("loc_4D922B: jmp loc_4D922F;");
    asm("loc_4D922D: xor %eax,%eax;");
    asm("loc_4D922F: cmp (%esi),%eax;");
    asm("loc_4D9231: mov _import_5C62A8,%ebx;");
    asm("loc_4D9237: je loc_4D923E;");
    asm("loc_4D9239: push %eax;");
    asm("loc_4D923A: mov %esi,%ecx;");
    asm("loc_4D923C: call *%ebx;");
    asm("loc_4D923E: mov (%esi),%eax;");
    asm("loc_4D9240: xor %ecx,%ecx;");
    asm("loc_4D9242: cmp %ecx,%eax;");
    asm("loc_4D9244: je loc_4D92F5;");
    asm("loc_4D924A: add $0xFFFFFFF8,%eax;");
    asm("loc_4D924D: cmp %ecx,%eax;");
    asm("loc_4D924F: je loc_4D92F5;");
    asm("loc_4D9255: mov (%esi),%eax;");
    asm("loc_4D9257: cmp %ecx,%eax;");
    asm("loc_4D9259: mov %ecx,0x20(%esp);");
    asm("loc_4D925D: je loc_4D9262;");
    asm("loc_4D925F: lea -8(%eax),%ecx;");
    asm("loc_4D9262: mov (%ecx),%edx;");
    asm("loc_4D9264: lea 0x20(%esp),%eax;");
    asm("loc_4D9268: push %eax;");
    asm("loc_4D9269: calll *0xB0(%edx);");
    asm("loc_4D926F: mov 0x20(%esp),%eax;");
    asm("loc_4D9273: test %eax,%eax;");
    asm("loc_4D9275: je loc_4D9285;");
    asm("loc_4D9277: mov (%esi),%ecx;");
    asm("loc_4D9279: add $8,%eax;");
    asm("loc_4D927C: cmp %ecx,%eax;");
    asm("loc_4D927E: je loc_4D9285;");
    asm("loc_4D9280: push %eax;");
    asm("loc_4D9281: mov %esi,%ecx;");
    asm("loc_4D9283: call *%ebx;");
    asm("loc_4D9285: mov 0x1C(%esp),%ebx;");
    asm("loc_4D9289: mov %edi,0x38C(%ebx);");
    asm("loc_4D928F: cmpl $7,0xC0(%ebp);");
    asm("loc_4D9296: jne loc_4D92AF;");
    asm("loc_4D9298: push $0;");
    asm("loc_4D929A: lea 0x28(%esp),%ecx;");
    asm("loc_4D929E: push %ecx;");
    asm("loc_4D929F: mov %ebp,%ecx;");
    asm("loc_4D92A1: movl $0,0x2C(%esp);");
    asm("loc_4D92A9: calll *_import_5C6530;");
    asm("loc_4D92AF: mov (%esi),%esi;");
    asm("loc_4D92B1: test %esi,%esi;");
    asm("loc_4D92B3: lea 0x368(%ebx),%edi;");
    asm("loc_4D92B9: je loc_4D92C0;");
    asm("loc_4D92BB: lea -8(%esi),%ecx;");
    asm("loc_4D92BE: jmp loc_4D92C2;");
    asm("loc_4D92C0: xor %ecx,%ecx;");
    asm("loc_4D92C2: mov (%ecx),%edx;");
    asm("loc_4D92C4: calll *0x20(%edx);");
    asm("loc_4D92C7: mov %eax,0x30(%esp);");
    asm("loc_4D92CB: mov 0x1C(%esp),%eax;");
    asm("loc_4D92CF: mov 0x28(%eax),%eax;");
    asm("loc_4D92D2: test %eax,%eax;");
    asm("loc_4D92D4: je loc_4D92DB;");
    asm("loc_4D92D6: add $0xFFFFFFF8,%eax;");
    asm("loc_4D92D9: jmp loc_4D92DD;");
    asm("loc_4D92DB: xor %eax,%eax;");
    asm("loc_4D92DD: mov 4(%eax),%edx;");
    asm("loc_4D92E0: push %edi;");
    asm("loc_4D92E1: push $0;");
    asm("loc_4D92E3: lea 4(%eax),%ecx;");
    asm("loc_4D92E6: push $_data_5D8274;");
    asm("loc_4D92EB: lea 0x3C(%esp),%eax;");
    asm("loc_4D92EF: push %eax;");
    asm("loc_4D92F0: push $1;");
    asm("loc_4D92F2: calll *0x5C(%edx);");
    asm("loc_4D92F5: pop %edi;");
    asm("loc_4D92F6: pop %esi;");
    asm("loc_4D92F7: pop %ebp;");
    asm("loc_4D92F8: mov $1,%al;");
    asm("loc_4D92FA: pop %ebx;");
    asm("loc_4D92FB: add $0xC8,%esp;");
    asm("loc_4D9301: ret $8;");
    asm("loc_4D9304: lea 0x3C(%esp),%ecx;");
    asm("loc_4D9308: calll *_import_5C6518;");
    asm("loc_4D930E: mov %esi,%ecx;");
    asm("loc_4D9310: calll *_import_5C6348;");
    asm("loc_4D9316: test %eax,%eax;");
    asm("loc_4D9318: jne loc_4D9329;");
    asm("loc_4D931A: pop %edi;");
    asm("loc_4D931B: pop %esi;");
    asm("loc_4D931C: pop %ebp;");
    asm("loc_4D931D: xor %al,%al;");
    asm("loc_4D931F: pop %ebx;");
    asm("loc_4D9320: add $0xC8,%esp;");
    asm("loc_4D9326: ret $8;");
    asm("loc_4D9329: mov (%eax),%edx;");
    asm("loc_4D932B: mov %eax,%ecx;");
    asm("loc_4D932D: calll *0x20(%edx);");
    asm("loc_4D9330: mov %eax,0x48(%esp);");
    asm("loc_4D9334: lea 0x3C(%esp),%eax;");
    asm("loc_4D9338: push %eax;");
    asm("loc_4D9339: lea 0x28(%esp),%ecx;");
    asm("loc_4D933D: push %ecx;");
    asm("loc_4D933E: jmp loc_4D9350;");
    asm("loc_4D9340: push $0;");
    asm("loc_4D9342: lea 0x28(%esp),%edx;");
    asm("loc_4D9346: push %edx;");
    asm("loc_4D9347: jmp loc_4D9350;");
    asm("loc_4D9349: push $0;");
    asm("loc_4D934B: lea 0x28(%esp),%eax;");
    asm("loc_4D934F: push %eax;");
    asm("loc_4D9350: mov %ebp,%ecx;");
    asm("loc_4D9352: calll *_import_5C6530;");
    asm("loc_4D9358: mov %al,%bl;");
    asm("loc_4D935A: mov %esi,%ecx;");
    asm("loc_4D935C: calll *_import_5C6348;");
    asm("loc_4D9362: mov %eax,%esi;");
    asm("loc_4D9364: test %esi,%esi;");
    asm("loc_4D9366: je loc_4D93B2;");
    asm("loc_4D9368: mov 0x1C(%esp),%ecx;");
    asm("loc_4D936C: mov 0x28(%ecx),%eax;");
    asm("loc_4D936F: test %eax,%eax;");
    asm("loc_4D9371: je loc_4D9378;");
    asm("loc_4D9373: lea -8(%eax),%ecx;");
    asm("loc_4D9376: jmp loc_4D937A;");
    asm("loc_4D9378: xor %ecx,%ecx;");
    asm("loc_4D937A: mov (%ecx),%edx;");
    asm("loc_4D937C: calll *0x20(%edx);");
    asm("loc_4D937F: mov %eax,0x10(%esp);");
    asm("loc_4D9383: mov (%esi),%eax;");
    asm("loc_4D9385: mov %esi,%ecx;");
    asm("loc_4D9387: calll *0x20(%eax);");
    asm("loc_4D938A: mov 0xDC(%esp),%ecx;");
    asm("loc_4D9391: mov %eax,0x14(%esp);");
    asm("loc_4D9395: lea 0x10(%esp),%eax;");
    asm("loc_4D9399: mov %ecx,0x18(%esp);");
    asm("loc_4D939D: mov _data_67ECD0,%ecx;");
    asm("loc_4D93A3: mov (%ecx),%edx;");
    asm("loc_4D93A5: push %eax;");
    asm("loc_4D93A6: mov _data_673344,%eax;");
    asm("loc_4D93AB: push %eax;");
    asm("loc_4D93AC: calll *0x108(%edx);");
    asm("loc_4D93B2: pop %edi;");
    asm("loc_4D93B3: pop %esi;");
    asm("loc_4D93B4: pop %ebp;");
    asm("loc_4D93B5: mov %bl,%al;");
    asm("loc_4D93B7: pop %ebx;");
    asm("loc_4D93B8: add $0xC8,%esp;");
    asm("loc_4D93BE: ret $8;");
    asm("int3;"); // unreachable
    asm("_jmp_4D93C4: .long loc_4D8EA5;");
    asm(".long loc_4D902F;");
    asm(".long loc_4D8ED4;");
    asm(".long loc_4D9304;");
    asm(".long loc_4D91D6;");
    asm(".long loc_4D9340;");
    asm(".long loc_4D8F2B;");
    asm(".long loc_4D8F6A;");
    asm(".long loc_4D9349;");
    asm(".long loc_4D935A;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_4D8E20);
_naked _weak void _sub_4D9410() // _sub_4D9410
{
    __DEBUG_ASM(4D9410);
    // chunk 0x4D9410 _sub_4D9410
    asm("loc_4D9410: cmpl $1,4(%esp);");
    asm("loc_4D9415: jne loc_4D9461;");
    asm("loc_4D9417: mov 8(%esp),%eax;");
    asm("loc_4D941B: test %eax,%eax;");
    asm("loc_4D941D: jne loc_4D943A;");
    asm("loc_4D941F: push $1;");
    asm("loc_4D9421: movl $2,0x24(%ecx);");
    asm("loc_4D9428: push $0xA;");
    asm("loc_4D942A: add $0xFFFFFC98,%ecx;");
    asm("loc_4D9430: call _sub_4D8E20;");
    asm("loc_4D9435: xor %al,%al;");
    asm("loc_4D9437: ret $0xC;");
    asm("loc_4D943A: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4D943D: jne loc_4D944B;");
    asm("loc_4D943F: movl $2,0x24(%ecx);");
    asm("loc_4D9446: xor %al,%al;");
    asm("loc_4D9448: ret $0xC;");
    asm("loc_4D944B: push $0;");
    asm("loc_4D944D: movl $3,0x24(%ecx);");
    asm("loc_4D9454: push $0xFFFFFFFF;");
    asm("loc_4D9456: add $0xFFFFFC98,%ecx;");
    asm("loc_4D945C: call _sub_4D8E20;");
    asm("loc_4D9461: xor %al,%al;");
    asm("loc_4D9463: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9470() // _sub_4D9470
{
    __DEBUG_ASM(4D9470);
    // chunk 0x4D9470 _sub_4D9470
    asm("loc_4D9470: push %ebx;");
    asm("loc_4D9471: push %esi;");
    asm("loc_4D9472: push %edi;");
    asm("loc_4D9473: mov %ecx,%edi;");
    asm("loc_4D9475: call _sub_54BAF0;");
    asm("loc_4D947A: mov %eax,%esi;");
    asm("loc_4D947C: test %esi,%esi;");
    asm("loc_4D947E: je loc_4D959F;");
    asm("loc_4D9484: call _sub_45A740;");
    asm("loc_4D9489: test %al,%al;");
    asm("loc_4D948B: jne loc_4D959F;");
    asm("loc_4D9491: mov 0x10(%esp),%ebx;");
    asm("loc_4D9495: movl $0xFFFFFFFF,0x3A4(%edi);");
    asm("loc_4D949F: movl $0xFFFFFFFF,0x3A8(%edi);");
    asm("loc_4D94A9: cmpl $0xFFFFFFFF,0x138(%ebx);");
    asm("loc_4D94B0: jne loc_4D94D3;");
    asm("loc_4D94B2: push $0;");
    asm("loc_4D94B4: push $0xFFFFFFFF;");
    asm("loc_4D94B6: mov %edi,%ecx;");
    asm("loc_4D94B8: call _sub_4D8E20;");
    asm("loc_4D94BD: mov _data_674A18,%eax;");
    asm("loc_4D94C2: push $0;");
    asm("loc_4D94C4: push %eax;");
    asm("loc_4D94C5: call _sub_489E80;");
    asm("loc_4D94CA: add $8,%esp;");
    asm("loc_4D94CD: pop %edi;");
    asm("loc_4D94CE: pop %esi;");
    asm("loc_4D94CF: pop %ebx;");
    asm("loc_4D94D0: ret $4;");
    asm("loc_4D94D3: lea 0xC(%esi),%eax;");
    asm("loc_4D94D6: test %eax,%eax;");
    asm("loc_4D94D8: je loc_4D94F2;");
    asm("loc_4D94DA: mov 4(%eax),%ecx;");
    asm("loc_4D94DD: test %ecx,%ecx;");
    asm("loc_4D94DF: je loc_4D94F2;");
    asm("loc_4D94E1: mov 0x4C(%ecx),%edx;");
    asm("loc_4D94E4: and $0x503,%edx;");
    asm("loc_4D94EA: cmp $0x503,%edx;");
    asm("loc_4D94F0: je loc_4D94F4;");
    asm("loc_4D94F2: xor %ecx,%ecx;");
    asm("loc_4D94F4: calll *_import_5C62E8;");
    asm("loc_4D94FA: mov 0xC0(%eax),%esi;");
    asm("loc_4D9500: mov 0x138(%ebx),%edx;");
    asm("loc_4D9506: cmp %edx,%esi;");
    asm("loc_4D9508: jne loc_4D952C;");
    asm("loc_4D950A: cmp $0xFFFFFFFF,%esi;");
    asm("loc_4D950D: je loc_4D959F;");
    asm("loc_4D9513: cmp $0x13,%esi;");
    asm("loc_4D9516: je loc_4D959F;");
    asm("loc_4D951C: push $0;");
    asm("loc_4D951E: push %edx;");
    asm("loc_4D951F: mov %edi,%ecx;");
    asm("loc_4D9521: call _sub_4D8E20;");
    asm("loc_4D9526: pop %edi;");
    asm("loc_4D9527: pop %esi;");
    asm("loc_4D9528: pop %ebx;");
    asm("loc_4D9529: ret $4;");
    asm("loc_4D952C: push %edx;");
    asm("loc_4D952D: mov %eax,%ecx;");
    asm("loc_4D952F: calll *_import_5C6514;");
    asm("loc_4D9535: cmp $2,%eax;");
    asm("loc_4D9538: je loc_4D957B;");
    asm("loc_4D953A: lea 4(%ebx),%eax;");
    asm("loc_4D953D: push %eax;");
    asm("loc_4D953E: call _sub_489EA0;");
    asm("loc_4D9543: mov 0x138(%ebx),%ecx;");
    asm("loc_4D9549: add $4,%esp;");
    asm("loc_4D954C: push $0;");
    asm("loc_4D954E: push %ecx;");
    asm("loc_4D954F: mov %edi,%ecx;");
    asm("loc_4D9551: call _sub_4D8E20;");
    asm("loc_4D9556: cmpl $3,0x138(%ebx);");
    asm("loc_4D955D: jne loc_4D959F;");
    asm("loc_4D955F: mov _data_5D828C,%edx;");
    asm("loc_4D9565: mov %edx,0x3AC(%edi);");
    asm("loc_4D956B: movl $0,0x3B0(%edi);");
    asm("loc_4D9575: pop %edi;");
    asm("loc_4D9576: pop %esi;");
    asm("loc_4D9577: pop %ebx;");
    asm("loc_4D9578: ret $4;");
    asm("loc_4D957B: cmpl $7,0x138(%ebx);");
    asm("loc_4D9582: jne loc_4D959F;");
    asm("loc_4D9584: mov %edi,%ecx;");
    asm("loc_4D9586: call _sub_4D9750;");
    asm("loc_4D958B: test %al,%al;");
    asm("loc_4D958D: je loc_4D959F;");
    asm("loc_4D958F: mov _data_674A14,%eax;");
    asm("loc_4D9594: push $0;");
    asm("loc_4D9596: push %eax;");
    asm("loc_4D9597: call _sub_489E80;");
    asm("loc_4D959C: add $8,%esp;");
    asm("loc_4D959F: pop %edi;");
    asm("loc_4D95A0: pop %esi;");
    asm("loc_4D95A1: pop %ebx;");
    asm("loc_4D95A2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D95B0() // _sub_4D95B0
{
    __DEBUG_ASM(4D95B0);
    // chunk 0x4D95B0 _sub_4D95B0
    asm("loc_4D95B0: mov 4(%esp),%eax;");
    asm("loc_4D95B4: sub $0x10,%esp;");
    asm("loc_4D95B7: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4D95BA: push %esi;");
    asm("loc_4D95BB: push %edi;");
    asm("loc_4D95BC: mov %ecx,%esi;");
    asm("loc_4D95BE: jne loc_4D9667;");
    asm("loc_4D95C4: xor %edi,%edi;");
    asm("loc_4D95C6: mov %edi,0x1C(%esp);");
    asm("loc_4D95CA: call _sub_54BAF0;");
    asm("loc_4D95CF: cmp %edi,%eax;");
    asm("loc_4D95D1: je loc_4D9742;");
    asm("loc_4D95D7: add $0xC,%eax;");
    asm("loc_4D95DA: cmp %edi,%eax;");
    asm("loc_4D95DC: je loc_4D95F4;");
    asm("loc_4D95DE: mov 4(%eax),%ecx;");
    asm("loc_4D95E1: cmp %edi,%ecx;");
    asm("loc_4D95E3: je loc_4D95F4;");
    asm("loc_4D95E5: mov 0x4C(%ecx),%eax;");
    asm("loc_4D95E8: and $0x503,%eax;");
    asm("loc_4D95ED: cmp $0x503,%eax;");
    asm("loc_4D95F2: je loc_4D95F6;");
    asm("loc_4D95F4: xor %ecx,%ecx;");
    asm("loc_4D95F6: calll *_import_5C62E8;");
    asm("loc_4D95FC: mov %eax,8(%esp);");
    asm("loc_4D9600: mov 0x380(%esi),%eax;");
    asm("loc_4D9606: cmp %edi,%eax;");
    asm("loc_4D9608: jne loc_4D960E;");
    asm("loc_4D960A: xor %edx,%edx;");
    asm("loc_4D960C: jmp loc_4D9627;");
    asm("loc_4D960E: mov 0x384(%esi),%ecx;");
    asm("loc_4D9614: sub %eax,%ecx;");
    asm("loc_4D9616: mov $0x63E7063F,%eax;");
    asm("loc_4D961B: imul %ecx;");
    asm("loc_4D961D: sar $7,%edx;");
    asm("loc_4D9620: mov %edx,%ecx;");
    asm("loc_4D9622: shr $0x1F,%ecx;");
    asm("loc_4D9625: add %ecx,%edx;");
    asm("loc_4D9627: cmp %edi,%edx;");
    asm("loc_4D9629: jle loc_4D9663;");
    asm("loc_4D962B: push %ebx;");
    asm("loc_4D962C: mov _import_5C6514,%ebx;");
    asm("loc_4D9632: push %ebp;");
    asm("loc_4D9633: mov %edx,%ebp;");
    asm("loc_4D9635: mov 0x380(%esi),%eax;");
    asm("loc_4D963B: add %edi,%eax;");
    asm("loc_4D963D: mov 0x138(%eax),%eax;");
    asm("loc_4D9643: cmp $0xFFFFFFFF,%eax;");
    asm("loc_4D9646: je loc_4D9658;");
    asm("loc_4D9648: mov 0x10(%esp),%ecx;");
    asm("loc_4D964C: push %eax;");
    asm("loc_4D964D: call *%ebx;");
    asm("loc_4D964F: cmp $2,%eax;");
    asm("loc_4D9652: je loc_4D9658;");
    asm("loc_4D9654: incl 0x24(%esp);");
    asm("loc_4D9658: add $0x148,%edi;");
    asm("loc_4D965E: dec %ebp;");
    asm("loc_4D965F: jne loc_4D9635;");
    asm("loc_4D9661: pop %ebp;");
    asm("loc_4D9662: pop %ebx;");
    asm("loc_4D9663: mov 0x1C(%esp),%eax;");
    asm("loc_4D9667: cmp %eax,0x3B4(%esi);");
    asm("loc_4D966D: je loc_4D9742;");
    asm("loc_4D9673: cmp $9,%eax;");
    asm("loc_4D9676: mov %eax,0x3B4(%esi);");
    asm("loc_4D967C: jle loc_4D9688;");
    asm("loc_4D967E: movl $9,0x3B4(%esi);");
    asm("loc_4D9688: mov 0x3B4(%esi),%eax;");
    asm("loc_4D968E: mov _data_612654(,%eax,4),%eax;");
    asm("loc_4D9695: mov 0x3B8(%esi),%ecx;");
    asm("loc_4D969B: mov (%ecx),%edx;");
    asm("loc_4D969D: push $0;");
    asm("loc_4D969F: push %eax;");
    asm("loc_4D96A0: push $4;");
    asm("loc_4D96A2: calll *0xA8(%edx);");
    asm("loc_4D96A8: mov 0x3B8(%esi),%ecx;");
    asm("loc_4D96AE: add $0x80,%ecx;");
    asm("loc_4D96B4: lea 0x3D0(%esi),%edi;");
    asm("loc_4D96BA: push %ecx;");
    asm("loc_4D96BB: mov %edi,%ecx;");
    asm("loc_4D96BD: call _sub_5A1340;");
    asm("loc_4D96C2: flds 0x3D4(%esi);");
    asm("loc_4D96C8: fmuls _data_5D74C8;");
    asm("loc_4D96CE: lea 0xEC(%esi),%edx;");
    asm("loc_4D96D4: movl $0x3E322D0E,0xC(%esp);");
    asm("loc_4D96DC: mov 0xC(%esp),%eax;");
    asm("loc_4D96E0: mov %eax,(%edx);");
    asm("loc_4D96E2: fstps 0x3D4(%esi);");
    asm("loc_4D96E8: flds (%edi);");
    asm("loc_4D96EA: movl $0x3D1374BC,0x10(%esp);");
    asm("loc_4D96F2: mov 0x10(%esp),%ecx;");
    asm("loc_4D96F6: fmuls _data_5D8468;");
    asm("loc_4D96FC: movl $0,0x14(%esp);");
    asm("loc_4D9704: mov 0x14(%esp),%eax;");
    asm("loc_4D9708: mov %ecx,4(%edx);");
    asm("loc_4D970B: fstps (%edi);");
    asm("loc_4D970D: movl $0x3B03126F,0xC(%esp);");
    asm("loc_4D9715: mov 0xC(%esp),%ecx;");
    asm("loc_4D9719: add $0xF8,%esi;");
    asm("loc_4D971F: mov %eax,8(%edx);");
    asm("loc_4D9722: movl $0x3EB3B646,0x10(%esp);");
    asm("loc_4D972A: mov 0x10(%esp),%edx;");
    asm("loc_4D972E: mov %ecx,(%esi);");
    asm("loc_4D9730: movl $0,0x14(%esp);");
    asm("loc_4D9738: mov 0x14(%esp),%eax;");
    asm("loc_4D973C: mov %edx,4(%esi);");
    asm("loc_4D973F: mov %eax,8(%esi);");
    asm("loc_4D9742: pop %edi;");
    asm("loc_4D9743: pop %esi;");
    asm("loc_4D9744: add $0x10,%esp;");
    asm("loc_4D9747: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9750() // _sub_4D9750
{
    __DEBUG_ASM(4D9750);
    // chunk 0x4D9750 _sub_4D9750
    asm("loc_4D9750: sub $0xC,%esp;");
    asm("loc_4D9753: push %esi;");
    asm("loc_4D9754: call _sub_54BAF0;");
    asm("loc_4D9759: test %eax,%eax;");
    asm("loc_4D975B: jne loc_4D9764;");
    asm("loc_4D975D: xor %al,%al;");
    asm("loc_4D975F: pop %esi;");
    asm("loc_4D9760: add $0xC,%esp;");
    asm("loc_4D9763: ret;");
    asm("loc_4D9764: add $0xC,%eax;");
    asm("loc_4D9767: test %eax,%eax;");
    asm("loc_4D9769: je loc_4D9781;");
    asm("loc_4D976B: mov 4(%eax),%ecx;");
    asm("loc_4D976E: test %ecx,%ecx;");
    asm("loc_4D9770: je loc_4D9781;");
    asm("loc_4D9772: mov 0x4C(%ecx),%eax;");
    asm("loc_4D9775: and $0x503,%eax;");
    asm("loc_4D977A: cmp $0x503,%eax;");
    asm("loc_4D977F: je loc_4D9788;");
    asm("loc_4D9781: xor %al,%al;");
    asm("loc_4D9783: pop %esi;");
    asm("loc_4D9784: add $0xC,%esp;");
    asm("loc_4D9787: ret;");
    asm("loc_4D9788: calll *_import_5C6348;");
    asm("loc_4D978E: mov %eax,%esi;");
    asm("loc_4D9790: test %esi,%esi;");
    asm("loc_4D9792: jne loc_4D979B;");
    asm("loc_4D9794: xor %al,%al;");
    asm("loc_4D9796: pop %esi;");
    asm("loc_4D9797: add $0xC,%esp;");
    asm("loc_4D979A: ret;");
    asm("loc_4D979B: mov (%esi),%edx;");
    asm("loc_4D979D: lea 4(%esp),%eax;");
    asm("loc_4D97A1: push %eax;");
    asm("loc_4D97A2: mov %esi,%ecx;");
    asm("loc_4D97A4: calll *0x88(%edx);");
    asm("loc_4D97AA: test %eax,%eax;");
    asm("loc_4D97AC: je loc_4D97B5;");
    asm("loc_4D97AE: xor %al,%al;");
    asm("loc_4D97B0: pop %esi;");
    asm("loc_4D97B1: add $0xC,%esp;");
    asm("loc_4D97B4: ret;");
    asm("loc_4D97B5: mov 4(%esp),%al;");
    asm("loc_4D97B9: test %al,%al;");
    asm("loc_4D97BB: js loc_4D97C4;");
    asm("loc_4D97BD: xor %al,%al;");
    asm("loc_4D97BF: pop %esi;");
    asm("loc_4D97C0: add $0xC,%esp;");
    asm("loc_4D97C3: ret;");
    asm("loc_4D97C4: mov (%esi),%edx;");
    asm("loc_4D97C6: mov %esi,%ecx;");
    asm("loc_4D97C8: calll *0x150(%edx);");
    asm("loc_4D97CE: test %eax,%eax;");
    asm("loc_4D97D0: je loc_4D97E3;");
    asm("loc_4D97D2: mov 0x4C(%eax),%ecx;");
    asm("loc_4D97D5: and $0x103,%ecx;");
    asm("loc_4D97DB: cmp $0x103,%ecx;");
    asm("loc_4D97E1: je loc_4D97EA;");
    asm("loc_4D97E3: xor %al,%al;");
    asm("loc_4D97E5: pop %esi;");
    asm("loc_4D97E6: add $0xC,%esp;");
    asm("loc_4D97E9: ret;");
    asm("loc_4D97EA: push $0;");
    asm("loc_4D97EC: lea 0xC(%esp),%edx;");
    asm("loc_4D97F0: push %edx;");
    asm("loc_4D97F1: lea 0x14(%esp),%ecx;");
    asm("loc_4D97F5: push %ecx;");
    asm("loc_4D97F6: push %eax;");
    asm("loc_4D97F7: call _sub_4D4B50;");
    asm("loc_4D97FC: flds 0x18(%esp);");
    asm("loc_4D9800: fcomps _data_5C7474;");
    asm("loc_4D9806: add $0x10,%esp;");
    asm("loc_4D9809: fnstsw %ax;");
    asm("loc_4D980B: test $0x41,%ah;");
    asm("loc_4D980E: jne loc_4D9817;");
    asm("loc_4D9810: xor %al,%al;");
    asm("loc_4D9812: pop %esi;");
    asm("loc_4D9813: add $0xC,%esp;");
    asm("loc_4D9816: ret;");
    asm("loc_4D9817: mov $1,%al;");
    asm("loc_4D9819: pop %esi;");
    asm("loc_4D981A: add $0xC,%esp;");
    asm("loc_4D981D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9820() // _sub_4D9820
{
    __DEBUG_ASM(4D9820);
    // chunk 0x4D9820 _sub_4D9820
    asm("loc_4D9820: sub $0x3C,%esp;");
    asm("loc_4D9823: push %ebx;");
    asm("loc_4D9824: push %ebp;");
    asm("loc_4D9825: mov 0x48(%esp),%ebp;");
    asm("loc_4D9829: push %ebp;");
    asm("loc_4D982A: mov %ecx,%ebx;");
    asm("loc_4D982C: call _sub_5A0340;");
    asm("loc_4D9831: test %al,%al;");
    asm("loc_4D9833: je loc_4D983F;");
    asm("loc_4D9835: pop %ebp;");
    asm("loc_4D9836: mov $1,%al;");
    asm("loc_4D9838: pop %ebx;");
    asm("loc_4D9839: add $0x3C,%esp;");
    asm("loc_4D983C: ret $4;");
    asm("loc_4D983F: mov 0x384(%ebx),%ecx;");
    asm("loc_4D9845: add $0x80,%ecx;");
    asm("loc_4D984B: movl $0x3F800000,0x34(%esp);");
    asm("loc_4D9853: movl $0x3F800000,0x24(%esp);");
    asm("loc_4D985B: movl $0x3F800000,0x14(%esp);");
    asm("loc_4D9863: movl $0,0x30(%esp);");
    asm("loc_4D986B: movl $0,0x2C(%esp);");
    asm("loc_4D9873: movl $0,0x28(%esp);");
    asm("loc_4D987B: movl $0,0x20(%esp);");
    asm("loc_4D9883: movl $0,0x1C(%esp);");
    asm("loc_4D988B: movl $0,0x18(%esp);");
    asm("loc_4D9893: movl $0,0x40(%esp);");
    asm("loc_4D989B: movl $0,0x3C(%esp);");
    asm("loc_4D98A3: movl $0,0x38(%esp);");
    asm("loc_4D98AB: call _sub_420D60;");
    asm("loc_4D98B0: test %al,%al;");
    asm("loc_4D98B2: je loc_4D98E4;");
    asm("loc_4D98B4: mov 0x384(%ebx),%edx;");
    asm("loc_4D98BA: mov _import_5C6D90,%eax;");
    asm("loc_4D98BF: mov 0x84(%edx),%edx;");
    asm("loc_4D98C5: mov (%eax),%eax;");
    asm("loc_4D98C7: mov (%eax),%ecx;");
    asm("loc_4D98C9: push %esi;");
    asm("loc_4D98CA: push %edi;");
    asm("loc_4D98CB: push %edx;");
    asm("loc_4D98CC: push %eax;");
    asm("loc_4D98CD: calll *0xA0(%ecx);");
    asm("loc_4D98D3: mov $0xC,%ecx;");
    asm("loc_4D98D8: mov %eax,%esi;");
    asm("loc_4D98DA: lea 0x1C(%esp),%edi;");
    asm("loc_4D98DE: rep movsl (%esi),(%edi);");
    asm("loc_4D98E0: pop %edi;");
    asm("loc_4D98E1: pop %esi;");
    asm("loc_4D98E2: jmp loc_4D9929;");
    asm("loc_4D98E4: mov 0x384(%ebx),%eax;");
    asm("loc_4D98EA: flds 0x60(%eax);");
    asm("loc_4D98ED: fadds 0xA8(%eax);");
    asm("loc_4D98F3: fstps 8(%esp);");
    asm("loc_4D98F7: flds 0x64(%eax);");
    asm("loc_4D98FA: fadds 0xAC(%eax);");
    asm("loc_4D9900: fstps 0xC(%esp);");
    asm("loc_4D9904: flds 0x68(%eax);");
    asm("loc_4D9907: mov 0xC(%esp),%ecx;");
    asm("loc_4D990B: fadds 0xB0(%eax);");
    asm("loc_4D9911: mov 8(%esp),%eax;");
    asm("loc_4D9915: mov %eax,0x38(%esp);");
    asm("loc_4D9919: mov %ecx,0x3C(%esp);");
    asm("loc_4D991D: fstps 0x10(%esp);");
    asm("loc_4D9921: mov 0x10(%esp),%edx;");
    asm("loc_4D9925: mov %edx,0x40(%esp);");
    asm("loc_4D9929: mov 0x384(%ebx),%eax;");
    asm("loc_4D992F: flds 0x38(%esp);");
    asm("loc_4D9933: fadds 0xC0(%eax);");
    asm("loc_4D9939: add $0xC0,%eax;");
    asm("loc_4D993E: push %ebp;");
    asm("loc_4D993F: lea 0x3A4(%ebx),%ecx;");
    asm("loc_4D9945: fstps 0x3C(%esp);");
    asm("loc_4D9949: flds 0x40(%esp);");
    asm("loc_4D994D: fadds 4(%eax);");
    asm("loc_4D9950: fstps 0x40(%esp);");
    asm("loc_4D9954: flds 0x44(%esp);");
    asm("loc_4D9958: fadds 8(%eax);");
    asm("loc_4D995B: lea 0x18(%esp),%eax;");
    asm("loc_4D995F: push %eax;");
    asm("loc_4D9960: fstps 0x48(%esp);");
    asm("loc_4D9964: call _sub_5A1130;");
    asm("loc_4D9969: pop %ebp;");
    asm("loc_4D996A: pop %ebx;");
    asm("loc_4D996B: add $0x3C,%esp;");
    asm("loc_4D996E: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9980() // ?GetStatePtr@MD5Hash@@QAEPAEXZ
{
    __DEBUG_ASM(4D9980);
    // chunk 0x4D9980 _sub_4D9980
    asm("loc_4D9980: lea 4(%ecx),%eax;");
    asm("loc_4D9983: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9990() // _sub_4D9990
{
    __DEBUG_ASM(4D9990);
    // chunk 0x4D9990 _sub_4D9990
    asm("loc_4D9990: push %ebx;");
    asm("loc_4D9991: mov %ecx,%ebx;");
    asm("loc_4D9993: xor %eax,%eax;");
    asm("loc_4D9995: push %esi;");
    asm("loc_4D9996: mov 0xC(%esp),%esi;");
    asm("loc_4D999A: cmp %eax,%esi;");
    asm("loc_4D999C: mov %eax,8(%ebx);");
    asm("loc_4D999F: mov %al,0xC(%ebx);");
    asm("loc_4D99A2: movl $_off_5D6E30,(%ebx);");
    asm("loc_4D99A8: mov %eax,4(%ebx);");
    asm("loc_4D99AB: jne loc_4D99B2;");
    asm("loc_4D99AD: mov %al,0xC(%ebx);");
    asm("loc_4D99B0: jmp loc_4D99E7;");
    asm("loc_4D99B2: push %ebp;");
    asm("loc_4D99B3: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D99B6: xor %eax,%eax;");
    asm("loc_4D99B8: push %edi;");
    asm("loc_4D99B9: mov %esi,%edi;");
    asm("loc_4D99BB: repne scas (%edi),%al;");
    asm("loc_4D99BD: not %ecx;");
    asm("loc_4D99BF: dec %ecx;");
    asm("loc_4D99C0: mov %ecx,%eax;");
    asm("loc_4D99C2: cmp $0x20,%eax;");
    asm("loc_4D99C5: lea 0xC(%ebx),%ebp;");
    asm("loc_4D99C8: jb loc_4D99CF;");
    asm("loc_4D99CA: mov $0x1F,%eax;");
    asm("loc_4D99CF: mov %eax,%ecx;");
    asm("loc_4D99D1: mov %ecx,%edx;");
    asm("loc_4D99D3: shr $2,%ecx;");
    asm("loc_4D99D6: mov %ebp,%edi;");
    asm("loc_4D99D8: rep movsl (%esi),(%edi);");
    asm("loc_4D99DA: mov %edx,%ecx;");
    asm("loc_4D99DC: and $3,%ecx;");
    asm("loc_4D99DF: rep movsb (%esi),(%edi);");
    asm("loc_4D99E1: pop %edi;");
    asm("loc_4D99E2: movb $0,(%eax,%ebp);");
    asm("loc_4D99E6: pop %ebp;");
    asm("loc_4D99E7: push %ebx;");
    asm("loc_4D99E8: mov %eax,8(%ebx);");
    asm("loc_4D99EB: call _sub_4C72B0;");
    asm("loc_4D99F0: add $4,%esp;");
    asm("loc_4D99F3: pop %esi;");
    asm("loc_4D99F4: movl $_off_5D8470,(%ebx);");
    asm("loc_4D99FA: mov %ebx,%eax;");
    asm("loc_4D99FC: pop %ebx;");
    asm("loc_4D99FD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9A00() // _sub_4D9A00
{
    __DEBUG_ASM(4D9A00);
    // chunk 0x4D9A00 _sub_4D9A00
    asm("loc_4D9A00: push $0xFFFFFFFF;");
    asm("loc_4D9A02: push $_sub_5BE39B;");
    asm("loc_4D9A07: mov %fs:0,%eax;");
    asm("loc_4D9A0D: push %eax;");
    asm("loc_4D9A0E: mov %esp,%fs:0;");
    asm("loc_4D9A15: push %ecx;");
    asm("loc_4D9A16: push $0x3EC;");
    asm("loc_4D9A1B: call _sub_5B7E84;");
    asm("loc_4D9A20: add $4,%esp;");
    asm("loc_4D9A23: mov %eax,(%esp);");
    asm("loc_4D9A27: test %eax,%eax;");
    asm("loc_4D9A29: movl $0,0xC(%esp);");
    asm("loc_4D9A31: je loc_4D9A50;");
    asm("loc_4D9A33: mov 0x14(%esp),%ecx;");
    asm("loc_4D9A37: push %ecx;");
    asm("loc_4D9A38: mov %eax,%ecx;");
    asm("loc_4D9A3A: call _sub_4D75E0;");
    asm("loc_4D9A3F: mov 4(%esp),%ecx;");
    asm("loc_4D9A43: mov %ecx,%fs:0;");
    asm("loc_4D9A4A: add $0x10,%esp;");
    asm("loc_4D9A4D: ret $4;");
    asm("loc_4D9A50: mov 4(%esp),%ecx;");
    asm("loc_4D9A54: xor %eax,%eax;");
    asm("loc_4D9A56: mov %ecx,%fs:0;");
    asm("loc_4D9A5D: add $0x10,%esp;");
    asm("loc_4D9A60: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9A70() // _sub_4D9A70
{
    __DEBUG_ASM(4D9A70);
    // chunk 0x4D9A70 _sub_4D9A70
    asm("loc_4D9A70: sub $8,%esp;");
    asm("loc_4D9A73: push %ebx;");
    asm("loc_4D9A74: push %ebp;");
    asm("loc_4D9A75: push %esi;");
    asm("loc_4D9A76: mov %ecx,%esi;");
    asm("loc_4D9A78: mov 4(%esi),%ebx;");
    asm("loc_4D9A7B: push %edi;");
    asm("loc_4D9A7C: mov 0x1C(%esp),%edi;");
    asm("loc_4D9A80: mov %edi,%ecx;");
    asm("loc_4D9A82: sub %ebx,%ecx;");
    asm("loc_4D9A84: mov $0x63E7063F,%eax;");
    asm("loc_4D9A89: imul %ecx;");
    asm("loc_4D9A8B: mov 8(%esi),%ecx;");
    asm("loc_4D9A8E: sar $7,%edx;");
    asm("loc_4D9A91: mov %edx,%eax;");
    asm("loc_4D9A93: shr $0x1F,%eax;");
    asm("loc_4D9A96: add %eax,%edx;");
    asm("loc_4D9A98: mov %edx,0x14(%esp);");
    asm("loc_4D9A9C: mov 0xC(%esi),%edx;");
    asm("loc_4D9A9F: sub %ecx,%edx;");
    asm("loc_4D9AA1: mov $0x63E7063F,%eax;");
    asm("loc_4D9AA6: imul %edx;");
    asm("loc_4D9AA8: sar $7,%edx;");
    asm("loc_4D9AAB: mov %edx,%eax;");
    asm("loc_4D9AAD: shr $0x1F,%eax;");
    asm("loc_4D9AB0: add %eax,%edx;");
    asm("loc_4D9AB2: cmp $1,%edx;");
    asm("loc_4D9AB5: jae loc_4D9BA5;");
    asm("loc_4D9ABB: test %ebx,%ebx;");
    asm("loc_4D9ABD: je loc_4D9ADB;");
    asm("loc_4D9ABF: mov %ecx,%edx;");
    asm("loc_4D9AC1: sub %ebx,%edx;");
    asm("loc_4D9AC3: mov $0x63E7063F,%eax;");
    asm("loc_4D9AC8: imul %edx;");
    asm("loc_4D9ACA: sar $7,%edx;");
    asm("loc_4D9ACD: mov %edx,%eax;");
    asm("loc_4D9ACF: shr $0x1F,%eax;");
    asm("loc_4D9AD2: add %eax,%edx;");
    asm("loc_4D9AD4: cmp $1,%edx;");
    asm("loc_4D9AD7: mov %edx,%ebp;");
    asm("loc_4D9AD9: ja loc_4D9AE0;");
    asm("loc_4D9ADB: mov $1,%ebp;");
    asm("loc_4D9AE0: test %ebx,%ebx;");
    asm("loc_4D9AE2: jne loc_4D9AE8;");
    asm("loc_4D9AE4: xor %edx,%edx;");
    asm("loc_4D9AE6: jmp loc_4D9AFB;");
    asm("loc_4D9AE8: sub %ebx,%ecx;");
    asm("loc_4D9AEA: mov $0x63E7063F,%eax;");
    asm("loc_4D9AEF: imul %ecx;");
    asm("loc_4D9AF1: sar $7,%edx;");
    asm("loc_4D9AF4: mov %edx,%ecx;");
    asm("loc_4D9AF6: shr $0x1F,%ecx;");
    asm("loc_4D9AF9: add %ecx,%edx;");
    asm("loc_4D9AFB: lea (%edx,%ebp),%eax;");
    asm("loc_4D9AFE: test %eax,%eax;");
    asm("loc_4D9B00: mov %eax,0x1C(%esp);");
    asm("loc_4D9B04: jge loc_4D9B08;");
    asm("loc_4D9B06: xor %eax,%eax;");
    asm("loc_4D9B08: imul $0x148,%eax;");
    asm("loc_4D9B0E: push %eax;");
    asm("loc_4D9B0F: call _sub_5B7E84;");
    asm("loc_4D9B14: mov 4(%esi),%ebx;");
    asm("loc_4D9B17: add $4,%esp;");
    asm("loc_4D9B1A: cmp %edi,%ebx;");
    asm("loc_4D9B1C: mov %eax,0x10(%esp);");
    asm("loc_4D9B20: mov %eax,%ebp;");
    asm("loc_4D9B22: je loc_4D9B3E;");
    asm("loc_4D9B24: push %ebx;");
    asm("loc_4D9B25: push %ebp;");
    asm("loc_4D9B26: call _sub_4DA0A0;");
    asm("loc_4D9B2B: add $0x148,%ebx;");
    asm("loc_4D9B31: add $8,%esp;");
    asm("loc_4D9B34: add $0x148,%ebp;");
    asm("loc_4D9B3A: cmp %edi,%ebx;");
    asm("loc_4D9B3C: jne loc_4D9B24;");
    asm("loc_4D9B3E: mov 0x20(%esp),%edx;");
    asm("loc_4D9B42: push %edx;");
    asm("loc_4D9B43: push %ebp;");
    asm("loc_4D9B44: call _sub_4DA0A0;");
    asm("loc_4D9B49: mov 8(%esi),%eax;");
    asm("loc_4D9B4C: add $8,%esp;");
    asm("loc_4D9B4F: add $0x148,%ebp;");
    asm("loc_4D9B55: push %ebp;");
    asm("loc_4D9B56: push %eax;");
    asm("loc_4D9B57: push %edi;");
    asm("loc_4D9B58: mov %esi,%ecx;");
    asm("loc_4D9B5A: call _sub_4D9CF0;");
    asm("loc_4D9B5F: mov 8(%esi),%ecx;");
    asm("loc_4D9B62: mov 4(%esi),%edx;");
    asm("loc_4D9B65: push %ecx;");
    asm("loc_4D9B66: push %edx;");
    asm("loc_4D9B67: mov %esi,%ecx;");
    asm("loc_4D9B69: call _sub_53AAA0;");
    asm("loc_4D9B6E: mov 4(%esi),%eax;");
    asm("loc_4D9B71: push %eax;");
    asm("loc_4D9B72: call _sub_5B7E1D;");
    asm("loc_4D9B77: mov 0x20(%esp),%eax;");
    asm("loc_4D9B7B: mov 0x14(%esp),%edi;");
    asm("loc_4D9B7F: imul $0x148,%eax;");
    asm("loc_4D9B85: add %edi,%eax;");
    asm("loc_4D9B87: add $4,%esp;");
    asm("loc_4D9B8A: mov %esi,%ecx;");
    asm("loc_4D9B8C: mov %eax,0xC(%esi);");
    asm("loc_4D9B8F: call _sub_4D9C70;");
    asm("loc_4D9B94: inc %eax;");
    asm("loc_4D9B95: imul $0x148,%eax;");
    asm("loc_4D9B9B: add %edi,%eax;");
    asm("loc_4D9B9D: mov %edi,4(%esi);");
    asm("loc_4D9BA0: jmp loc_4D9C49;");
    asm("loc_4D9BA5: mov %ecx,%edx;");
    asm("loc_4D9BA7: sub %edi,%edx;");
    asm("loc_4D9BA9: mov $0x63E7063F,%eax;");
    asm("loc_4D9BAE: imul %edx;");
    asm("loc_4D9BB0: sar $7,%edx;");
    asm("loc_4D9BB3: mov %edx,%eax;");
    asm("loc_4D9BB5: shr $0x1F,%eax;");
    asm("loc_4D9BB8: add %eax,%edx;");
    asm("loc_4D9BBA: cmp $1,%edx;");
    asm("loc_4D9BBD: jae loc_4D9C0C;");
    asm("loc_4D9BBF: lea 0x148(%edi),%edx;");
    asm("loc_4D9BC5: push %edx;");
    asm("loc_4D9BC6: push %ecx;");
    asm("loc_4D9BC7: push %edi;");
    asm("loc_4D9BC8: mov %esi,%ecx;");
    asm("loc_4D9BCA: call _sub_4D9CF0;");
    asm("loc_4D9BCF: mov 8(%esi),%ebx;");
    asm("loc_4D9BD2: mov 0x20(%esp),%ebp;");
    asm("loc_4D9BD6: mov %ebx,%ecx;");
    asm("loc_4D9BD8: sub %edi,%ecx;");
    asm("loc_4D9BDA: mov $0x63E7063F,%eax;");
    asm("loc_4D9BDF: imul %ecx;");
    asm("loc_4D9BE1: sar $7,%edx;");
    asm("loc_4D9BE4: mov %edx,%eax;");
    asm("loc_4D9BE6: shr $0x1F,%eax;");
    asm("loc_4D9BE9: add %eax,%edx;");
    asm("loc_4D9BEB: push %ebp;");
    asm("loc_4D9BEC: mov $1,%ecx;");
    asm("loc_4D9BF1: sub %edx,%ecx;");
    asm("loc_4D9BF3: push %ecx;");
    asm("loc_4D9BF4: push %ebx;");
    asm("loc_4D9BF5: mov %esi,%ecx;");
    asm("loc_4D9BF7: call _sub_4D9D30;");
    asm("loc_4D9BFC: mov 8(%esi),%edx;");
    asm("loc_4D9BFF: push %ebp;");
    asm("loc_4D9C00: push %edx;");
    asm("loc_4D9C01: push %edi;");
    asm("loc_4D9C02: call _sub_4D9D70;");
    asm("loc_4D9C07: add $0xC,%esp;");
    asm("loc_4D9C0A: jmp loc_4D9C41;");
    asm("loc_4D9C0C: push %ecx;");
    asm("loc_4D9C0D: push %ecx;");
    asm("loc_4D9C0E: add $0xFFFFFEB8,%ecx;");
    asm("loc_4D9C14: push %ecx;");
    asm("loc_4D9C15: mov %esi,%ecx;");
    asm("loc_4D9C17: call _sub_4D9CF0;");
    asm("loc_4D9C1C: mov 8(%esi),%eax;");
    asm("loc_4D9C1F: push %eax;");
    asm("loc_4D9C20: add $0xFFFFFEB8,%eax;");
    asm("loc_4D9C25: push %eax;");
    asm("loc_4D9C26: push %edi;");
    asm("loc_4D9C27: call _sub_4D9F00;");
    asm("loc_4D9C2C: mov 0x2C(%esp),%eax;");
    asm("loc_4D9C30: push %eax;");
    asm("loc_4D9C31: lea 0x148(%edi),%ecx;");
    asm("loc_4D9C37: push %ecx;");
    asm("loc_4D9C38: push %edi;");
    asm("loc_4D9C39: call _sub_4D9D70;");
    asm("loc_4D9C3E: add $0x18,%esp;");
    asm("loc_4D9C41: mov 8(%esi),%eax;");
    asm("loc_4D9C44: add $0x148,%eax;");
    asm("loc_4D9C49: mov 4(%esi),%ecx;");
    asm("loc_4D9C4C: mov %eax,8(%esi);");
    asm("loc_4D9C4F: mov 0x14(%esp),%eax;");
    asm("loc_4D9C53: imul $0x148,%eax;");
    asm("loc_4D9C59: pop %edi;");
    asm("loc_4D9C5A: pop %esi;");
    asm("loc_4D9C5B: pop %ebp;");
    asm("loc_4D9C5C: add %ecx,%eax;");
    asm("loc_4D9C5E: pop %ebx;");
    asm("loc_4D9C5F: add $8,%esp;");
    asm("loc_4D9C62: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9C70() // _sub_4D9C70
{
    __DEBUG_ASM(4D9C70);
    // chunk 0x4D9C70 _sub_4D9C70
    asm("loc_4D9C70: mov 4(%ecx),%eax;");
    asm("loc_4D9C73: test %eax,%eax;");
    asm("loc_4D9C75: jne loc_4D9C78;");
    asm("loc_4D9C77: ret;");
    asm("loc_4D9C78: mov 8(%ecx),%ecx;");
    asm("loc_4D9C7B: sub %eax,%ecx;");
    asm("loc_4D9C7D: mov $0x63E7063F,%eax;");
    asm("loc_4D9C82: imul %ecx;");
    asm("loc_4D9C84: sar $7,%edx;");
    asm("loc_4D9C87: mov %edx,%eax;");
    asm("loc_4D9C89: shr $0x1F,%eax;");
    asm("loc_4D9C8C: add %eax,%edx;");
    asm("loc_4D9C8E: mov %edx,%eax;");
    asm("loc_4D9C90: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9CA0() // _sub_4D9CA0
{
    __DEBUG_ASM(4D9CA0);
    // chunk 0x4D9CA0 _sub_4D9CA0
    asm("loc_4D9CA0: push %ebx;");
    asm("loc_4D9CA1: mov 0x10(%esp),%ebx;");
    asm("loc_4D9CA5: push %ebp;");
    asm("loc_4D9CA6: push %esi;");
    asm("loc_4D9CA7: push %edi;");
    asm("loc_4D9CA8: xor %edi,%edi;");
    asm("loc_4D9CAA: test %ebx,%ebx;");
    asm("loc_4D9CAC: jbe loc_4D9CD1;");
    asm("loc_4D9CAE: mov 0x14(%esp),%ebp;");
    asm("loc_4D9CB2: mov %ecx,%esi;");
    asm("loc_4D9CB4: mov (%esi),%eax;");
    asm("loc_4D9CB6: test %eax,%eax;");
    asm("loc_4D9CB8: je loc_4D9CC9;");
    asm("loc_4D9CBA: push %eax;");
    asm("loc_4D9CBB: push %ebp;");
    asm("loc_4D9CBC: calll *_import_5C6D24;");
    asm("loc_4D9CC2: add $8,%esp;");
    asm("loc_4D9CC5: test %eax,%eax;");
    asm("loc_4D9CC7: je loc_4D9CDA;");
    asm("loc_4D9CC9: inc %edi;");
    asm("loc_4D9CCA: add $8,%esi;");
    asm("loc_4D9CCD: cmp %ebx,%edi;");
    asm("loc_4D9CCF: jb loc_4D9CB4;");
    asm("loc_4D9CD1: pop %edi;");
    asm("loc_4D9CD2: pop %esi;");
    asm("loc_4D9CD3: pop %ebp;");
    asm("loc_4D9CD4: xor %al,%al;");
    asm("loc_4D9CD6: pop %ebx;");
    asm("loc_4D9CD7: ret $0xC;");
    asm("loc_4D9CDA: mov 4(%esi),%eax;");
    asm("loc_4D9CDD: mov 0x18(%esp),%ecx;");
    asm("loc_4D9CE1: pop %edi;");
    asm("loc_4D9CE2: pop %esi;");
    asm("loc_4D9CE3: pop %ebp;");
    asm("loc_4D9CE4: mov %eax,(%ecx);");
    asm("loc_4D9CE6: mov $1,%al;");
    asm("loc_4D9CE8: pop %ebx;");
    asm("loc_4D9CE9: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9CF0() // _sub_4D9CF0
{
    __DEBUG_ASM(4D9CF0);
    // chunk 0x4D9CF0 _sub_4D9CF0
    asm("loc_4D9CF0: mov 4(%esp),%edx;");
    asm("loc_4D9CF4: mov 0xC(%esp),%eax;");
    asm("loc_4D9CF8: push %ebx;");
    asm("loc_4D9CF9: mov 0xC(%esp),%ebx;");
    asm("loc_4D9CFD: cmp %ebx,%edx;");
    asm("loc_4D9CFF: je loc_4D9D23;");
    asm("loc_4D9D01: push %esi;");
    asm("loc_4D9D02: push %edi;");
    asm("loc_4D9D03: test %eax,%eax;");
    asm("loc_4D9D05: je loc_4D9D12;");
    asm("loc_4D9D07: mov $0x52,%ecx;");
    asm("loc_4D9D0C: mov %edx,%esi;");
    asm("loc_4D9D0E: mov %eax,%edi;");
    asm("loc_4D9D10: rep movsl (%esi),(%edi);");
    asm("loc_4D9D12: add $0x148,%edx;");
    asm("loc_4D9D18: add $0x148,%eax;");
    asm("loc_4D9D1D: cmp %ebx,%edx;");
    asm("loc_4D9D1F: jne loc_4D9D03;");
    asm("loc_4D9D21: pop %edi;");
    asm("loc_4D9D22: pop %esi;");
    asm("loc_4D9D23: pop %ebx;");
    asm("loc_4D9D24: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9D30() // _sub_4D9D30
{
    __DEBUG_ASM(4D9D30);
    // chunk 0x4D9D30 _sub_4D9D30
    asm("loc_4D9D30: mov 8(%esp),%eax;");
    asm("loc_4D9D34: test %eax,%eax;");
    asm("loc_4D9D36: jbe loc_4D9D5F;");
    asm("loc_4D9D38: push %ebx;");
    asm("loc_4D9D39: mov 0x10(%esp),%ebx;");
    asm("loc_4D9D3D: push %esi;");
    asm("loc_4D9D3E: mov %eax,%edx;");
    asm("loc_4D9D40: mov 0xC(%esp),%eax;");
    asm("loc_4D9D44: push %edi;");
    asm("loc_4D9D45: test %eax,%eax;");
    asm("loc_4D9D47: je loc_4D9D54;");
    asm("loc_4D9D49: mov $0x52,%ecx;");
    asm("loc_4D9D4E: mov %ebx,%esi;");
    asm("loc_4D9D50: mov %eax,%edi;");
    asm("loc_4D9D52: rep movsl (%esi),(%edi);");
    asm("loc_4D9D54: add $0x148,%eax;");
    asm("loc_4D9D59: dec %edx;");
    asm("loc_4D9D5A: jne loc_4D9D45;");
    asm("loc_4D9D5C: pop %edi;");
    asm("loc_4D9D5D: pop %esi;");
    asm("loc_4D9D5E: pop %ebx;");
    asm("loc_4D9D5F: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9D70() // _sub_4D9D70
{
    __DEBUG_ASM(4D9D70);
    // chunk 0x4D9D70 _sub_4D9D70
    asm("loc_4D9D70: mov 4(%esp),%ecx;");
    asm("loc_4D9D74: cmp 8(%esp),%ecx;");
    asm("loc_4D9D78: je loc_4D9EF5;");
    asm("loc_4D9D7E: push %ebx;");
    asm("loc_4D9D7F: push %ebp;");
    asm("loc_4D9D80: mov 0x14(%esp),%ebp;");
    asm("loc_4D9D84: push %esi;");
    asm("loc_4D9D85: push %edi;");
    asm("loc_4D9D86: lea 0xAC(%ecx),%edx;");
    asm("loc_4D9D8C: xor %ebx,%ebx;");
    asm("loc_4D9D8E: mov %edi,%edi;");
    asm("loc_4D9D90: lea 4(%ebp),%esi;");
    asm("loc_4D9D93: cmp %ebx,%esi;");
    asm("loc_4D9D95: jne loc_4D9DA1;");
    asm("loc_4D9D97: mov %ebx,(%ecx);");
    asm("loc_4D9D99: mov %bl,-0xA8(%edx);");
    asm("loc_4D9D9F: jmp loc_4D9DE0;");
    asm("loc_4D9DA1: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D9DA4: xor %eax,%eax;");
    asm("loc_4D9DA6: mov %esi,%edi;");
    asm("loc_4D9DA8: repne scas (%edi),%al;");
    asm("loc_4D9DAA: not %ecx;");
    asm("loc_4D9DAC: dec %ecx;");
    asm("loc_4D9DAD: mov %ecx,%eax;");
    asm("loc_4D9DAF: cmp $0x20,%eax;");
    asm("loc_4D9DB2: jb loc_4D9DB9;");
    asm("loc_4D9DB4: mov $0x1F,%eax;");
    asm("loc_4D9DB9: lea -0xA8(%edx),%ebp;");
    asm("loc_4D9DBF: mov %eax,%ecx;");
    asm("loc_4D9DC1: mov %ecx,%ebx;");
    asm("loc_4D9DC3: shr $2,%ecx;");
    asm("loc_4D9DC6: mov %ebp,%edi;");
    asm("loc_4D9DC8: rep movsl (%esi),(%edi);");
    asm("loc_4D9DCA: mov %ebx,%ecx;");
    asm("loc_4D9DCC: and $3,%ecx;");
    asm("loc_4D9DCF: rep movsb (%esi),(%edi);");
    asm("loc_4D9DD1: mov 0x14(%esp),%ecx;");
    asm("loc_4D9DD5: xor %ebx,%ebx;");
    asm("loc_4D9DD7: mov %bl,(%eax,%ebp);");
    asm("loc_4D9DDA: mov 0x1C(%esp),%ebp;");
    asm("loc_4D9DDE: mov %eax,(%ecx);");
    asm("loc_4D9DE0: lea 0x28(%ebp),%esi;");
    asm("loc_4D9DE3: cmp %ebx,%esi;");
    asm("loc_4D9DE5: jne loc_4D9DF5;");
    asm("loc_4D9DE7: mov %ebx,-0x88(%edx);");
    asm("loc_4D9DED: mov %bl,-0x84(%edx);");
    asm("loc_4D9DF3: jmp loc_4D9E38;");
    asm("loc_4D9DF5: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D9DF8: xor %eax,%eax;");
    asm("loc_4D9DFA: mov %esi,%edi;");
    asm("loc_4D9DFC: repne scas (%edi),%al;");
    asm("loc_4D9DFE: not %ecx;");
    asm("loc_4D9E00: dec %ecx;");
    asm("loc_4D9E01: mov %ecx,%eax;");
    asm("loc_4D9E03: cmp $0x80,%eax;");
    asm("loc_4D9E08: jb loc_4D9E0F;");
    asm("loc_4D9E0A: mov $0x7F,%eax;");
    asm("loc_4D9E0F: mov %eax,%ecx;");
    asm("loc_4D9E11: mov %ecx,%ebx;");
    asm("loc_4D9E13: shr $2,%ecx;");
    asm("loc_4D9E16: lea -0x84(%edx),%edi;");
    asm("loc_4D9E1C: rep movsl (%esi),(%edi);");
    asm("loc_4D9E1E: mov %ebx,%ecx;");
    asm("loc_4D9E20: and $3,%ecx;");
    asm("loc_4D9E23: rep movsb (%esi),(%edi);");
    asm("loc_4D9E25: mov 0x14(%esp),%ecx;");
    asm("loc_4D9E29: xor %ebx,%ebx;");
    asm("loc_4D9E2B: mov %bl,-0x84(%edx,%eax);");
    asm("loc_4D9E32: mov %eax,-0x88(%edx);");
    asm("loc_4D9E38: lea 0xAC(%ebp),%esi;");
    asm("loc_4D9E3E: cmp %ebx,%esi;");
    asm("loc_4D9E40: jne loc_4D9E49;");
    asm("loc_4D9E42: mov %ebx,-4(%edx);");
    asm("loc_4D9E45: mov %bl,(%edx);");
    asm("loc_4D9E47: jmp loc_4D9E81;");
    asm("loc_4D9E49: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D9E4C: xor %eax,%eax;");
    asm("loc_4D9E4E: mov %esi,%edi;");
    asm("loc_4D9E50: repne scas (%edi),%al;");
    asm("loc_4D9E52: not %ecx;");
    asm("loc_4D9E54: dec %ecx;");
    asm("loc_4D9E55: mov %ecx,%eax;");
    asm("loc_4D9E57: cmp $0x80,%eax;");
    asm("loc_4D9E5C: jb loc_4D9E63;");
    asm("loc_4D9E5E: mov $0x7F,%eax;");
    asm("loc_4D9E63: mov %eax,%ecx;");
    asm("loc_4D9E65: mov %ecx,%ebx;");
    asm("loc_4D9E67: shr $2,%ecx;");
    asm("loc_4D9E6A: mov %edx,%edi;");
    asm("loc_4D9E6C: rep movsl (%esi),(%edi);");
    asm("loc_4D9E6E: mov %ebx,%ecx;");
    asm("loc_4D9E70: and $3,%ecx;");
    asm("loc_4D9E73: rep movsb (%esi),(%edi);");
    asm("loc_4D9E75: mov 0x14(%esp),%ecx;");
    asm("loc_4D9E79: xor %ebx,%ebx;");
    asm("loc_4D9E7B: mov %bl,(%edx,%eax);");
    asm("loc_4D9E7E: mov %eax,-4(%edx);");
    asm("loc_4D9E81: mov 0x12C(%ebp),%eax;");
    asm("loc_4D9E87: mov %eax,0x80(%edx);");
    asm("loc_4D9E8D: mov 0x130(%ebp),%eax;");
    asm("loc_4D9E93: mov %eax,0x84(%edx);");
    asm("loc_4D9E99: mov 0x134(%ebp),%eax;");
    asm("loc_4D9E9F: mov %eax,0x88(%edx);");
    asm("loc_4D9EA5: mov 0x138(%ebp),%eax;");
    asm("loc_4D9EAB: mov %eax,0x8C(%edx);");
    asm("loc_4D9EB1: mov 0x13C(%ebp),%al;");
    asm("loc_4D9EB7: mov %al,0x90(%edx);");
    asm("loc_4D9EBD: mov 0x140(%ebp),%eax;");
    asm("loc_4D9EC3: mov %eax,0x94(%edx);");
    asm("loc_4D9EC9: mov 0x144(%ebp),%eax;");
    asm("loc_4D9ECF: mov %eax,0x98(%edx);");
    asm("loc_4D9ED5: mov 0x18(%esp),%eax;");
    asm("loc_4D9ED9: add $0x148,%ecx;");
    asm("loc_4D9EDF: add $0x148,%edx;");
    asm("loc_4D9EE5: cmp %eax,%ecx;");
    asm("loc_4D9EE7: mov %ecx,0x14(%esp);");
    asm("loc_4D9EEB: jne loc_4D9D90;");
    asm("loc_4D9EF1: pop %edi;");
    asm("loc_4D9EF2: pop %esi;");
    asm("loc_4D9EF3: pop %ebp;");
    asm("loc_4D9EF4: pop %ebx;");
    asm("loc_4D9EF5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4D9F00() // _sub_4D9F00
{
    __DEBUG_ASM(4D9F00);
    // chunk 0x4D9F00 _sub_4D9F00
    asm("loc_4D9F00: mov 8(%esp),%eax;");
    asm("loc_4D9F04: cmp %eax,4(%esp);");
    asm("loc_4D9F08: je loc_4DA097;");
    asm("loc_4D9F0E: mov 0xC(%esp),%ecx;");
    asm("loc_4D9F12: push %ebx;");
    asm("loc_4D9F13: push %ebp;");
    asm("loc_4D9F14: push %esi;");
    asm("loc_4D9F15: lea 0xAC(%ecx),%edx;");
    asm("loc_4D9F1B: push %edi;");
    asm("loc_4D9F1C: lea 0x28(%eax),%ebp;");
    asm("loc_4D9F1F: xor %ecx,%ecx;");
    asm("loc_4D9F21: mov 0x1C(%esp),%ebx;");
    asm("loc_4D9F25: sub $0x148,%eax;");
    asm("loc_4D9F2A: sub $0x148,%ebp;");
    asm("loc_4D9F30: mov %eax,0x18(%esp);");
    asm("loc_4D9F34: sub $0x148,%ebx;");
    asm("loc_4D9F3A: lea -0x24(%ebp),%eax;");
    asm("loc_4D9F3D: sub $0x148,%edx;");
    asm("loc_4D9F43: test %eax,%eax;");
    asm("loc_4D9F45: mov %ebx,0x1C(%esp);");
    asm("loc_4D9F49: jne loc_4D9F57;");
    asm("loc_4D9F4B: mov %ebx,%eax;");
    asm("loc_4D9F4D: mov %ecx,(%eax);");
    asm("loc_4D9F4F: mov %cl,-0xA8(%edx);");
    asm("loc_4D9F55: jmp loc_4D9F97;");
    asm("loc_4D9F57: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D9F5A: xor %eax,%eax;");
    asm("loc_4D9F5C: lea -0x24(%ebp),%esi;");
    asm("loc_4D9F5F: mov %esi,%edi;");
    asm("loc_4D9F61: repne scas (%edi),%al;");
    asm("loc_4D9F63: not %ecx;");
    asm("loc_4D9F65: dec %ecx;");
    asm("loc_4D9F66: mov %ecx,%eax;");
    asm("loc_4D9F68: cmp $0x20,%eax;");
    asm("loc_4D9F6B: jb loc_4D9F72;");
    asm("loc_4D9F6D: mov $0x1F,%eax;");
    asm("loc_4D9F72: mov %eax,%ecx;");
    asm("loc_4D9F74: mov %ecx,%ebx;");
    asm("loc_4D9F76: shr $2,%ecx;");
    asm("loc_4D9F79: lea -0xA8(%edx),%edi;");
    asm("loc_4D9F7F: rep movsl (%esi),(%edi);");
    asm("loc_4D9F81: mov %ebx,%ecx;");
    asm("loc_4D9F83: and $3,%ecx;");
    asm("loc_4D9F86: rep movsb (%esi),(%edi);");
    asm("loc_4D9F88: mov 0x1C(%esp),%esi;");
    asm("loc_4D9F8C: xor %ecx,%ecx;");
    asm("loc_4D9F8E: mov %cl,-0xA8(%edx,%eax);");
    asm("loc_4D9F95: mov %eax,(%esi);");
    asm("loc_4D9F97: cmp %ecx,%ebp;");
    asm("loc_4D9F99: jne loc_4D9FA9;");
    asm("loc_4D9F9B: mov %ecx,-0x88(%edx);");
    asm("loc_4D9FA1: mov %cl,-0x84(%edx);");
    asm("loc_4D9FA7: jmp loc_4D9FEA;");
    asm("loc_4D9FA9: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D9FAC: xor %eax,%eax;");
    asm("loc_4D9FAE: mov %ebp,%edi;");
    asm("loc_4D9FB0: repne scas (%edi),%al;");
    asm("loc_4D9FB2: not %ecx;");
    asm("loc_4D9FB4: dec %ecx;");
    asm("loc_4D9FB5: mov %ecx,%eax;");
    asm("loc_4D9FB7: cmp $0x80,%eax;");
    asm("loc_4D9FBC: jb loc_4D9FC3;");
    asm("loc_4D9FBE: mov $0x7F,%eax;");
    asm("loc_4D9FC3: mov %eax,%ecx;");
    asm("loc_4D9FC5: mov %ecx,%ebx;");
    asm("loc_4D9FC7: shr $2,%ecx;");
    asm("loc_4D9FCA: lea -0x84(%edx),%edi;");
    asm("loc_4D9FD0: mov %ebp,%esi;");
    asm("loc_4D9FD2: rep movsl (%esi),(%edi);");
    asm("loc_4D9FD4: mov %ebx,%ecx;");
    asm("loc_4D9FD6: and $3,%ecx;");
    asm("loc_4D9FD9: rep movsb (%esi),(%edi);");
    asm("loc_4D9FDB: xor %ecx,%ecx;");
    asm("loc_4D9FDD: mov %cl,-0x84(%edx,%eax);");
    asm("loc_4D9FE4: mov %eax,-0x88(%edx);");
    asm("loc_4D9FEA: lea 0x84(%ebp),%esi;");
    asm("loc_4D9FF0: cmp %ecx,%esi;");
    asm("loc_4D9FF2: jne loc_4D9FFB;");
    asm("loc_4D9FF4: mov %ecx,-4(%edx);");
    asm("loc_4D9FF7: mov %cl,(%edx);");
    asm("loc_4D9FF9: jmp loc_4DA02F;");
    asm("loc_4D9FFB: or $0xFFFFFFFF,%ecx;");
    asm("loc_4D9FFE: xor %eax,%eax;");
    asm("loc_4DA000: mov %esi,%edi;");
    asm("loc_4DA002: repne scas (%edi),%al;");
    asm("loc_4DA004: not %ecx;");
    asm("loc_4DA006: dec %ecx;");
    asm("loc_4DA007: mov %ecx,%eax;");
    asm("loc_4DA009: cmp $0x80,%eax;");
    asm("loc_4DA00E: jb loc_4DA015;");
    asm("loc_4DA010: mov $0x7F,%eax;");
    asm("loc_4DA015: mov %eax,%ecx;");
    asm("loc_4DA017: mov %ecx,%ebx;");
    asm("loc_4DA019: shr $2,%ecx;");
    asm("loc_4DA01C: mov %edx,%edi;");
    asm("loc_4DA01E: rep movsl (%esi),(%edi);");
    asm("loc_4DA020: mov %ebx,%ecx;");
    asm("loc_4DA022: and $3,%ecx;");
    asm("loc_4DA025: rep movsb (%esi),(%edi);");
    asm("loc_4DA027: xor %ecx,%ecx;");
    asm("loc_4DA029: mov %cl,(%edx,%eax);");
    asm("loc_4DA02C: mov %eax,-4(%edx);");
    asm("loc_4DA02F: mov 0x104(%ebp),%eax;");
    asm("loc_4DA035: mov 0x14(%esp),%esi;");
    asm("loc_4DA039: mov %eax,0x80(%edx);");
    asm("loc_4DA03F: mov 0x108(%ebp),%eax;");
    asm("loc_4DA045: mov %eax,0x84(%edx);");
    asm("loc_4DA04B: mov 0x10C(%ebp),%eax;");
    asm("loc_4DA051: mov %eax,0x88(%edx);");
    asm("loc_4DA057: mov 0x110(%ebp),%eax;");
    asm("loc_4DA05D: mov %eax,0x8C(%edx);");
    asm("loc_4DA063: mov 0x114(%ebp),%al;");
    asm("loc_4DA069: mov %al,0x90(%edx);");
    asm("loc_4DA06F: mov 0x118(%ebp),%eax;");
    asm("loc_4DA075: mov %eax,0x94(%edx);");
    asm("loc_4DA07B: mov 0x11C(%ebp),%eax;");
    asm("loc_4DA081: mov %eax,0x98(%edx);");
    asm("loc_4DA087: mov 0x18(%esp),%eax;");
    asm("loc_4DA08B: cmp %esi,%eax;");
    asm("loc_4DA08D: jne loc_4D9F21;");
    asm("loc_4DA093: pop %edi;");
    asm("loc_4DA094: pop %esi;");
    asm("loc_4DA095: pop %ebp;");
    asm("loc_4DA096: pop %ebx;");
    asm("loc_4DA097: mov 0xC(%esp),%eax;");
    asm("loc_4DA09B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA0A0() // _sub_4DA0A0
{
    __DEBUG_ASM(4DA0A0);
    // chunk 0x4DA0A0 _sub_4DA0A0
    asm("loc_4DA0A0: push %edi;");
    asm("loc_4DA0A1: mov 8(%esp),%edi;");
    asm("loc_4DA0A5: test %edi,%edi;");
    asm("loc_4DA0A7: je loc_4DA0B6;");
    asm("loc_4DA0A9: push %esi;");
    asm("loc_4DA0AA: mov 0x10(%esp),%esi;");
    asm("loc_4DA0AE: mov $0x52,%ecx;");
    asm("loc_4DA0B3: rep movsl (%esi),(%edi);");
    asm("loc_4DA0B5: pop %esi;");
    asm("loc_4DA0B6: pop %edi;");
    asm("loc_4DA0B7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA0C0() // _sub_4DA0C0
{
    __DEBUG_ASM(4DA0C0);
    // chunk 0x4DA0C0 _sub_4DA0C0
    asm("loc_4DA0C0: sub $0x38,%ecx;");
    asm("loc_4DA0C3: jmp _sub_4D7A50;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA0D0() // _sub_4DA0D0
{
    __DEBUG_ASM(4DA0D0);
    // chunk 0x4DA0D0 _sub_4DA0D0
    asm("loc_4DA0D0: mov _data_5D8478,%eax;");
    asm("loc_4DA0D5: mov %eax,_data_674A98;");
    asm("loc_4DA0DA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA0E0() // _sub_4DA0E0
{
    __DEBUG_ASM(4DA0E0);
    // chunk 0x4DA0E0 _sub_4DA0E0
    asm("loc_4DA0E0: mov _data_5D8478,%eax;");
    asm("loc_4DA0E5: mov %eax,_data_674A94;");
    asm("loc_4DA0EA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA0F0() // _sub_4DA0F0
{
    __DEBUG_ASM(4DA0F0);
    // chunk 0x4DA0F0 _sub_4DA0F0
    asm("loc_4DA0F0: mov _data_5D847C,%eax;");
    asm("loc_4DA0F5: mov %eax,_data_674A90;");
    asm("loc_4DA0FA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA100() // _sub_4DA100
{
    __DEBUG_ASM(4DA100);
    // chunk 0x4DA100 _sub_4DA100
    asm("loc_4DA100: push $_data_5D8490;");
    asm("loc_4DA105: calll *_import_5C6020;");
    asm("loc_4DA10B: add $4,%esp;");
    asm("loc_4DA10E: mov %eax,_data_674A8C;");
    asm("loc_4DA113: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA120() // _sub_4DA120
{
    __DEBUG_ASM(4DA120);
    // chunk 0x4DA120 _sub_4DA120
    asm("loc_4DA120: push $_data_5D84A0;");
    asm("loc_4DA125: calll *_import_5C6020;");
    asm("loc_4DA12B: add $4,%esp;");
    asm("loc_4DA12E: mov %eax,_data_674A88;");
    asm("loc_4DA133: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA140() // _sub_4DA140
{
    __DEBUG_ASM(4DA140);
    // chunk 0x4DA140 _sub_4DA140
    asm("loc_4DA140: push $_data_5D84B0;");
    asm("loc_4DA145: mov $_data_674A5C,%ecx;");
    asm("loc_4DA14A: call _sub_4DE7D0;");
    asm("loc_4DA14F: push $_sub_4DA160;");
    asm("loc_4DA154: call _sub_5B7E6C;");
    asm("loc_4DA159: pop %ecx;");
    asm("loc_4DA15A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA160() // _unknown_libname_52
{
    __DEBUG_ASM(4DA160);
    // chunk 0x4DA160 _sub_4DA160
    asm("loc_4DA160: mov $_data_674A5C,%ecx;");
    asm("loc_4DA165: jmp _sub_4CF010;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_4DA170() // _sub_4DA170
{
    __DEBUG_ASM(4DA170);
    // chunk 0x4DA170 _sub_4DA170
    asm("loc_4DA170: push $0xFFFFFFFF;");
    asm("loc_4DA172: push $_sub_5BE3F0;");
    asm("loc_4DA177: mov %fs:0,%eax;");
    asm("loc_4DA17D: push %eax;");
    asm("loc_4DA17E: mov %esp,%fs:0;");
    asm("loc_4DA185: sub $0x100,%esp;");
    asm("loc_4DA18B: push %ebx;");
    asm("loc_4DA18C: push %ebp;");
    asm("loc_4DA18D: push %esi;");
    asm("loc_4DA18E: mov %ecx,%ebp;");
    asm("loc_4DA190: push %edi;");
    asm("loc_4DA191: mov %ebp,0x10C(%esp);");
    asm("loc_4DA198: call _sub_4E6020;");
    asm("loc_4DA19D: lea 0x4E0(%ebp),%esi;");
    asm("loc_4DA1A3: xor %ebx,%ebx;");
    asm("loc_4DA1A5: mov %esi,%ecx;");
    asm("loc_4DA1A7: mov %ebx,0x118(%esp);");
    asm("loc_4DA1AE: call _sub_55E340;");
    asm("loc_4DA1B3: mov 0x13(%esp),%al;");
    asm("loc_4DA1B7: mov %al,0x58C(%ebp);");
    asm("loc_4DA1BD: mov %ebx,0x590(%ebp);");
    asm("loc_4DA1C3: mov %ebx,0x594(%ebp);");
    asm("loc_4DA1C9: mov %ebx,0x598(%ebp);");
    asm("loc_4DA1CF: mov %ebx,0x5D0(%ebp);");
    asm("loc_4DA1D5: mov %ebx,0x5D4(%ebp);");
    asm("loc_4DA1DB: mov 0x13(%esp),%cl;");
    asm("loc_4DA1DF: mov %cl,0x5DC(%ebp);");
    asm("loc_4DA1E5: mov %ebx,0x5E0(%ebp);");
    asm("loc_4DA1EB: mov %ebx,0x5E4(%ebp);");
    asm("loc_4DA1F1: mov %ebx,0x5E8(%ebp);");
    asm("loc_4DA1F7: movl $_off_5D85BC,(%ebp);");
    asm("loc_4DA1FE: movl $_off_5D8504,0x38(%ebp);");
    asm("loc_4DA205: movl $_off_5D84F4,0xB4(%ebp);");
    asm("loc_4DA20F: movl $_off_5D84E8,0x364(%ebp);");
    asm("loc_4DA219: movl $_off_5D84E0,0x384(%ebp);");
    asm("loc_4DA223: movl $_off_5D84D4,(%esi);");
    asm("loc_4DA229: mov %ebp,_data_674AA0;");
    asm("loc_4DA22F: movl $0x3E970A3D,0x14(%esp);");
    asm("loc_4DA237: mov 0x14(%esp),%eax;");
    asm("loc_4DA23B: lea 0x4D4(%ebp),%edx;");
    asm("loc_4DA241: mov %eax,(%edx);");
    asm("loc_4DA243: movl $0xBEBBE76D,0x18(%esp);");
    asm("loc_4DA24B: mov 0x18(%esp),%ecx;");
    asm("loc_4DA24F: mov %ecx,4(%edx);");
    asm("loc_4DA252: mov %ebx,%eax;");
    asm("loc_4DA254: mov %eax,8(%edx);");
    asm("loc_4DA257: mov $1,%eax;");
    asm("loc_4DA25C: mov %eax,0x5A0(%ebp);");
    asm("loc_4DA262: mov %eax,0x5A4(%ebp);");
    asm("loc_4DA268: or $0xFFFFFFFF,%ecx;");
    asm("loc_4DA26B: xor %eax,%eax;");
    asm("loc_4DA26D: mov $_data_5D84C4,%edi;");
    asm("loc_4DA272: repne scas (%edi),%al;");
    asm("loc_4DA274: not %ecx;");
    asm("loc_4DA276: dec %ecx;");
    asm("loc_4DA277: mov %ecx,%eax;");
    asm("loc_4DA279: cmp $0x20,%eax;");
    asm("loc_4DA27C: movb $4,0x118(%esp);");
    asm("loc_4DA284: mov %ebx,0x1C(%esp);");
    asm("loc_4DA288: lea 8(%ebp),%edx;");
    asm("loc_4DA28B: jb loc_4DA292;");
    asm("loc_4DA28D: mov $0x1F,%eax;");
    asm("loc_4DA292: mov %eax,%ecx;");
    asm("loc_4DA294: mov %edx,%edi;");
    asm("loc_4DA296: mov %ecx,%edx;");
    asm("loc_4DA298: shr $2,%ecx;");
    asm("loc_4DA29B: mov $_data_5D84C4,%esi;");
    asm("loc_4DA2A0: rep movsl (%esi),(%edi);");
    asm("loc_4DA2A2: mov %edx,%ecx;");
    asm("loc_4DA2A4: and $3,%ecx;");
    asm("loc_4DA2A7: rep movsb (%esi),(%edi);");
    asm("loc_4DA2A9: push %ebx;");
    asm("loc_4DA2AA: mov %bl,8(%eax,%ebp);");
    asm("loc_4DA2AE: push %ebx;");
    asm("loc_4DA2AF: lea 0x38(%ebp),%ecx;");
    asm("loc_4DA2B2: mov %eax,4(%ebp);");
    asm("loc_4DA2B5: call _sub_4DA930;");
    asm("loc_4DA2BA: or $0xFFFFFFFF,%ecx;");
    asm("loc_4DA2BD: xor %eax,%eax;");
    asm("loc_4DA2BF: mov $_data_5D84B8,%edi;");
    asm("loc_4DA2C4: repne scas (%edi),%al;");
    asm("loc_4DA2C6: not %ecx;");
    asm("loc_4DA2C8: dec %ecx;");
    asm("loc_4DA2C9: mov %ecx,%eax;");
    asm("loc_4DA2CB: cmp $0x20,%eax;");
    asm("loc_4DA2CE: lea 0x50(%ebp),%edx;");
    asm("loc_4DA2D1: jb loc_4DA2D8;");
    asm("loc_4DA2D3: mov $0x1F,%eax;");
    asm("loc_4DA2D8: mov %eax,%ecx;");
    asm("loc_4DA2DA: mov %edx,%edi;");
    asm("loc_4DA2DC: mov %ecx,%edx;");
    asm("loc_4DA2DE: shr $2,%ecx;");
    asm("loc_4DA2E1: mov $_data_5D84B8,%esi;");
    asm("loc_4DA2E6: rep movsl (%esi),(%edi);");
    asm("loc_4DA2E8: mov %edx,%ecx;");
    asm("loc_4DA2EA: and $3,%ecx;");
    asm("loc_4DA2ED: rep movsb (%esi),(%edi);");
    asm("loc_4DA2EF: mov %bl,0x50(%eax,%ebp);");
    asm("loc_4DA2F3: mov %eax,0x4C(%ebp);");
    asm("loc_4DA2F6: movl $0x3ED60419,0x14(%esp);");
    asm("loc_4DA2FE: mov 0x14(%esp),%ecx;");
    asm("loc_4DA302: lea 0x4B4(%ebp),%eax;");
    asm("loc_4DA308: mov %ecx,(%eax);");
    asm("loc_4DA30A: movl $0xBE947AE1,0x18(%esp);");
    asm("loc_4DA312: mov 0x18(%esp),%edx;");
    asm("loc_4DA316: mov %edx,4(%eax);");
    asm("loc_4DA319: movl $0xBF800000,0x1C(%esp);");
    asm("loc_4DA321: mov 0x1C(%esp),%ecx;");
    asm("loc_4DA325: mov %ecx,8(%eax);");
    asm("loc_4DA328: mov $0x3DE147AE,%eax;");
    asm("loc_4DA32D: movl $_data_5D84B8,0x48(%ebp);");
    asm("loc_4DA334: mov %eax,0x4C0(%ebp);");
    asm("loc_4DA33A: mov %eax,0x4C4(%ebp);");
    asm("loc_4DA340: movb $1,0x500(%ebp);");
    asm("loc_4DA347: mov %ebx,0x504(%ebp);");
    asm("loc_4DA34D: mov _data_5D8484,%edx;");
    asm("loc_4DA353: mov %edx,0x588(%ebp);");
    asm("loc_4DA359: mov %bl,0x584(%ebp);");
    asm("loc_4DA35F: mov %bl,0x585(%ebp);");
    asm("loc_4DA365: mov %bl,0x5B8(%ebp);");
    asm("loc_4DA36B: mov %bl,0x586(%ebp);");
    asm("loc_4DA371: mov %bl,0x5B9(%ebp);");
    asm("loc_4DA377: mov %bl,0x5BA(%ebp);");
    asm("loc_4DA37D: mov %ebx,0x5C8(%ebp);");
    asm("loc_4DA383: movl $0x5E,0x20(%esp);");
    asm("loc_4DA38B: movl $0xBC,0x24(%esp);");
    asm("loc_4DA393: movl $0xC0,0x28(%esp);");
    asm("loc_4DA39B: movl $0xC1,0x2C(%esp);");
    asm("loc_4DA3A3: movl $0xBD,0x30(%esp);");
    asm("loc_4DA3AB: movl $0xBE,0x34(%esp);");
    asm("loc_4DA3B3: movl $0x3A,0x38(%esp);");
    asm("loc_4DA3BB: movl $0x3C,0x3C(%esp);");
    asm("loc_4DA3C3: movl $0x3B,0x40(%esp);");
    asm("loc_4DA3CB: movl $0x3E,0x44(%esp);");
    asm("loc_4DA3D3: movl $0x3D,0x48(%esp);");
    asm("loc_4DA3DB: movl $0x56,0x4C(%esp);");
    asm("loc_4DA3E3: movl $0x57,0x50(%esp);");
    asm("loc_4DA3EB: movl $0xA1,0x54(%esp);");
    asm("loc_4DA3F3: movl $0xA2,0x58(%esp);");
    asm("loc_4DA3FB: movl $0xA3,0x5C(%esp);");
    asm("loc_4DA403: movl $0xA4,0x60(%esp);");
    asm("loc_4DA40B: movl $0xA5,0x64(%esp);");
    asm("loc_4DA413: movl $0xA6,0x68(%esp);");
    asm("loc_4DA41B: movl $0xA7,0x6C(%esp);");
    asm("loc_4DA423: movl $0xA8,0x70(%esp);");
    asm("loc_4DA42B: movl $0xA9,0x74(%esp);");
    asm("loc_4DA433: movl $0xAA,0x78(%esp);");
    asm("loc_4DA43B: movl $0x97,0x7C(%esp);");
    asm("loc_4DA443: movl $0x98,0x80(%esp);");
    asm("loc_4DA44E: movl $0x99,0x84(%esp);");
    asm("loc_4DA459: movl $0x9A,0x88(%esp);");
    asm("loc_4DA464: movl $0x9B,0x8C(%esp);");
    asm("loc_4DA46F: movl $0x9C,0x90(%esp);");
    asm("loc_4DA47A: movl $0x9D,0x94(%esp);");
    asm("loc_4DA485: movl $0x9E,0x98(%esp);");
    asm("loc_4DA490: movl $0x9F,0x9C(%esp);");
    asm("loc_4DA49B: movl $0xA0,0xA0(%esp);");
    asm("loc_4DA4A6: movl $0xAB,0xA4(%esp);");
    asm("loc_4DA4B1: movl $0xAC,0xA8(%esp);");
    asm("loc_4DA4BC: movl $0xAD,0xAC(%esp);");
    asm("loc_4DA4C7: movl $0xAE,0xB0(%esp);");
    asm("loc_4DA4D2: movl $0xAF,0xB4(%esp);");
    asm("loc_4DA4DD: movl $0xB0,0xB8(%esp);");
    asm("loc_4DA4E8: movl $0xB1,0xBC(%esp);");
    asm("loc_4DA4F3: movl $0xB2,0xC0(%esp);");
    asm("loc_4DA4FE: movl $0xB3,0xC4(%esp);");
    asm("loc_4DA509: movl $0xB4,0xC8(%esp);");
    asm("loc_4DA514: movl $0xB5,0xCC(%esp);");
    asm("loc_4DA51F: movl $0xB6,0xD0(%esp);");
    asm("loc_4DA52A: movl $0x91,0xD4(%esp);");
    asm("loc_4DA535: movl $0x92,0xD8(%esp);");
    asm("loc_4DA540: movl $0x93,0xDC(%esp);");
    asm("loc_4DA54B: movl $0x94,0xE0(%esp);");
    asm("loc_4DA556: movl $0x95,0xE4(%esp);");
    asm("loc_4DA561: movl $0x96,0xE8(%esp);");
    asm("loc_4DA56C: movl $0x8F,0xEC(%esp);");
    asm("loc_4DA577: movl $0x90,0xF0(%esp);");
    asm("loc_4DA582: movl $0xF,0xF4(%esp);");
    asm("loc_4DA58D: movl $0xB7,0xF8(%esp);");
    asm("loc_4DA598: movl $0xB8,0xFC(%esp);");
    asm("loc_4DA5A3: movl $0xB9,0x100(%esp);");
    asm("loc_4DA5AE: movl $0xBA,0x104(%esp);");
    asm("loc_4DA5B9: movl $0x6F,0x108(%esp);");
    asm("loc_4DA5C4: xor %esi,%esi;");
    asm("loc_4DA5C6: mov 0x20(%esp,%esi,4),%eax;");
    asm("loc_4DA5CA: push %eax;");
    asm("loc_4DA5CB: lea 0x384(%ebp),%ecx;");
    asm("loc_4DA5D1: call _sub_5760D0;");
    asm("loc_4DA5D6: inc %esi;");
    asm("loc_4DA5D7: cmp $0x3B,%esi;");
    asm("loc_4DA5DA: jb loc_4DA5C6;");
    asm("loc_4DA5DC: mov 0x110(%esp),%ecx;");
    asm("loc_4DA5E3: pop %edi;");
    asm("loc_4DA5E4: mov %bl,0x5CD(%ebp);");
    asm("loc_4DA5EA: pop %esi;");
    asm("loc_4DA5EB: movb $1,0x5CC(%ebp);");
    asm("loc_4DA5F2: mov %ebp,%eax;");
    asm("loc_4DA5F4: pop %ebp;");
    asm("loc_4DA5F5: pop %ebx;");
    asm("loc_4DA5F6: mov %ecx,%fs:0;");
    asm("loc_4DA5FD: add $0x10C,%esp;");
    asm("loc_4DA603: ret $4;");
    asm("int3;"); // unreachable
}
#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __INTELLISENSE__
