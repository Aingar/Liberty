#include "ImeUi-PCH.h"

static DLL_IMPORT_ENTRY const s_DLLImportEntries[] =
{
	{"VERSION.dll", "GetFileVersionInfoSizeA", -1, _RelativeAddress(public_671711c, 0x671711c)},
	{"VERSION.dll", "VerQueryValueA", -1, _RelativeAddress(public_6717120, 0x6717120)},
	{"VERSION.dll", "GetFileVersionInfoA", -1, _RelativeAddress(public_6717124, 0x6717124)},
	{"IMM32.dll", "ImmAssociateContext", -1, _RelativeAddress(public_6717028, 0x6717028)},
	{"IMM32.dll", "ImmGetCandidateListA", -1, _RelativeAddress(public_671702c, 0x671702c)},
	{"IMM32.dll", "ImmGetCandidateListW", -1, _RelativeAddress(public_6717030, 0x6717030)},
	{"IMM32.dll", "ImmGetCompositionStringW", -1, _RelativeAddress(public_6717034, 0x6717034)},
	{"IMM32.dll", "ImmGetConversionStatus", -1, _RelativeAddress(public_6717038, 0x6717038)},
	{"IMM32.dll", "ImmGetVirtualKey", -1, _RelativeAddress(public_671703c, 0x671703c)},
	{"IMM32.dll", "ImmNotifyIME", -1, _RelativeAddress(public_6717040, 0x6717040)},
	{"IMM32.dll", "ImmGetOpenStatus", -1, _RelativeAddress(public_6717044, 0x6717044)},
	{"IMM32.dll", "ImmGetDefaultIMEWnd", -1, _RelativeAddress(public_6717048, 0x6717048)},
	{"IMM32.dll", "ImmGetContext", -1, _RelativeAddress(public_671704c, 0x671704c)},
	{"IMM32.dll", "ImmGetIMEFileNameA", -1, _RelativeAddress(public_6717050, 0x6717050)},
	{"IMM32.dll", "ImmGetCompositionStringA", -1, _RelativeAddress(public_6717054, 0x6717054)},
	{"IMM32.dll", "ImmReleaseContext", -1, _RelativeAddress(public_6717058, 0x6717058)},
	{"IMM32.dll", "ImmIsIME", -1, _RelativeAddress(public_671705c, 0x671705c)},
	{"KERNEL32.dll", "lstrcpyA", -1, _RelativeAddress(public_6717064, 0x6717064)},
	{"KERNEL32.dll", "lstrlenA", -1, _RelativeAddress(public_6717068, 0x6717068)},
	{"KERNEL32.dll", "IsDBCSLeadByteEx", -1, _RelativeAddress(public_671706c, 0x671706c)},
	{"KERNEL32.dll", "GetLocaleInfoA", -1, _RelativeAddress(public_6717070, 0x6717070)},
	{"KERNEL32.dll", "lstrcatA", -1, _RelativeAddress(public_6717074, 0x6717074)},
	{"KERNEL32.dll", "InterlockedExchange", -1, _RelativeAddress(public_6717078, 0x6717078)},
	{"KERNEL32.dll", "FreeLibrary", -1, _RelativeAddress(public_671707c, 0x671707c)},
	{"KERNEL32.dll", "GetModuleHandleA", -1, _RelativeAddress(public_6717080, 0x6717080)},
	{"KERNEL32.dll", "GetModuleFileNameA", -1, _RelativeAddress(public_6717084, 0x6717084)},
	{"KERNEL32.dll", "CompareStringA", -1, _RelativeAddress(public_6717088, 0x6717088)},
	{"KERNEL32.dll", "GetSystemDirectoryA", -1, _RelativeAddress(public_671708c, 0x671708c)},
	{"KERNEL32.dll", "FlushInstructionCache", -1, _RelativeAddress(public_6717090, 0x6717090)},
	{"KERNEL32.dll", "GetWindowsDirectoryA", -1, _RelativeAddress(public_6717094, 0x6717094)},
	{"KERNEL32.dll", "GetVersion", -1, _RelativeAddress(public_6717098, 0x6717098)},
	{"KERNEL32.dll", "SetLastError", -1, _RelativeAddress(public_671709c, 0x671709c)},
	{"KERNEL32.dll", "DisableThreadLibraryCalls", -1, _RelativeAddress(public_67170a0, 0x67170a0)},
	{"KERNEL32.dll", "GetTickCount", -1, _RelativeAddress(public_67170a4, 0x67170a4)},
	{"KERNEL32.dll", "LoadLibraryA", -1, _RelativeAddress(public_67170a8, 0x67170a8)},
	{"KERNEL32.dll", "GetVersionExA", -1, _RelativeAddress(public_67170ac, 0x67170ac)},
	{"KERNEL32.dll", "IsDBCSLeadByte", -1, _RelativeAddress(public_67170b0, 0x67170b0)},
	{"KERNEL32.dll", "GetLastError", -1, _RelativeAddress(public_67170b4, 0x67170b4)},
	{"KERNEL32.dll", "VirtualQuery", -1, _RelativeAddress(public_67170b8, 0x67170b8)},
	{"USER32.dll", "PostMessageA", -1, _RelativeAddress(public_67170f4, 0x67170f4)},
	{"USER32.dll", "GetAsyncKeyState", -1, _RelativeAddress(public_67170f8, 0x67170f8)},
	{"USER32.dll", "GetClientRect", -1, _RelativeAddress(public_67170fc, 0x67170fc)},
	{"USER32.dll", "GetCaretBlinkTime", -1, _RelativeAddress(public_6717100, 0x6717100)},
	{"USER32.dll", "GetFocus", -1, _RelativeAddress(public_6717104, 0x6717104)},
	{"USER32.dll", "GetKeyboardLayout", -1, _RelativeAddress(public_6717108, 0x6717108)},
	{"USER32.dll", "SendMessageA", -1, _RelativeAddress(public_671710c, 0x671710c)},
	{"USER32.dll", "GetKeyState", -1, _RelativeAddress(public_6717110, 0x6717110)},
	{"USER32.dll", "GetKeyboardLayoutList", -1, _RelativeAddress(public_6717114, 0x6717114)},
	{"GDI32.dll", "DeleteObject", -1, _RelativeAddress(public_6717010, 0x6717010)},
	{"GDI32.dll", "CreateFontIndirectA", -1, _RelativeAddress(public_6717014, 0x6717014)},
	{"GDI32.dll", "GetTextExtentPoint32A", -1, _RelativeAddress(public_6717018, 0x6717018)},
	{"GDI32.dll", "SelectObject", -1, _RelativeAddress(public_671701c, 0x671701c)},
	{"GDI32.dll", "CreateCompatibleDC", -1, _RelativeAddress(public_6717020, 0x6717020)},
	{"ADVAPI32.dll", "RegCloseKey", -1, _RelativeAddress(public_6717000, 0x6717000)},
	{"ADVAPI32.dll", "RegOpenKeyExA", -1, _RelativeAddress(public_6717004, 0x6717004)},
	{"ADVAPI32.dll", "RegQueryValueExA", -1, _RelativeAddress(public_6717008, 0x6717008)},
	{"ole32.dll", "CoCreateInstance", -1, _RelativeAddress(public_671712c, 0x671712c)},
	{"ole32.dll", "CoUninitialize", -1, _RelativeAddress(public_6717130, 0x6717130)},
	{"ole32.dll", "CoInitialize", -1, _RelativeAddress(public_6717134, 0x6717134)},
	{"MSVCRT.dll", "_ftol", -1, _RelativeAddress(public_67170c0, 0x67170c0)},
	{"MSVCRT.dll", "malloc", -1, _RelativeAddress(public_67170c4, 0x67170c4)},
	{"MSVCRT.dll", "free", -1, _RelativeAddress(public_67170c8, 0x67170c8)},
	{"MSVCRT.dll", "memmove", -1, _RelativeAddress(public_67170cc, 0x67170cc)},
	{"MSVCRT.dll", "_purecall", -1, _RelativeAddress(public_67170d0, 0x67170d0)},
	{"MSVCRT.dll", "wcsncpy", -1, _RelativeAddress(public_67170d4, 0x67170d4)},
	{"MSVCRT.dll", "__CxxFrameHandler", -1, _RelativeAddress(public_67170d8, 0x67170d8)},
	{"MSVCRT.dll", "_except_handler3", -1, _RelativeAddress(public_67170dc, 0x67170dc)},
	{"MSVCRT.dll", "?terminate@@YAXXZ", -1, _RelativeAddress(public_67170e0, 0x67170e0)},
	{"MSVCRT.dll", "??2@YAPAXI@Z", -1, _RelativeAddress(public_67170e4, 0x67170e4)},
	{"MSVCRT.dll", "_adjust_fdiv", -1, _RelativeAddress(public_67170e8, 0x67170e8)},
	{"MSVCRT.dll", "_initterm", -1, _RelativeAddress(public_67170ec, 0x67170ec)},
};

void __ExecuteDLLImports()
{
	for (DLL_IMPORT_ENTRY const& dllImportEntry : s_DLLImportEntries)
	{
		__PatchDLLImport(dllImportEntry);
	}
}

