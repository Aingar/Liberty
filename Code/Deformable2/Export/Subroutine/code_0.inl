#ifndef __INTELLISENSE__
// clang-format off
#include "..\..\PCH.h"
#pragma init_seg(lib)
#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

_naked _weak void _sub_65F1000() // _sub_65F1000
{
    __DEBUG_ASM(65F1000);
    // chunk 0x65F1000 _sub_65F1000
    asm("loc_65F1000: mov 0xC(%esp),%eax;");
    asm("loc_65F1004: dec %eax;");
    asm("loc_65F1005: js loc_65F102D;");
    asm("loc_65F1007: push %ebx;");
    asm("loc_65F1008: mov 0x14(%esp),%ebx;");
    asm("loc_65F100C: push %ebp;");
    asm("loc_65F100D: mov 0x10(%esp),%ebp;");
    asm("loc_65F1011: push %esi;");
    asm("loc_65F1012: mov 0x10(%esp),%esi;");
    asm("loc_65F1016: push %edi;");
    asm("loc_65F1017: lea 1(%eax),%edi;");
    asm("loc_65F101A: lea (%ebx),%ebx;");
    asm("loc_65F1020: mov %esi,%ecx;");
    asm("loc_65F1022: call *%ebx;");
    asm("loc_65F1024: add %ebp,%esi;");
    asm("loc_65F1026: dec %edi;");
    asm("loc_65F1027: jne loc_65F1020;");
    asm("loc_65F1029: pop %edi;");
    asm("loc_65F102A: pop %esi;");
    asm("loc_65F102B: pop %ebp;");
    asm("loc_65F102C: pop %ebx;");
    asm("loc_65F102D: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1030() // _sub_65F1030
{
    __DEBUG_ASM(65F1030);
    // chunk 0x65F1030 _sub_65F1030
    asm("loc_65F1030: mov _data_6603120,%eax;");
    asm("loc_65F1035: sub $0x90,%esp;");
    asm("loc_65F103B: push %ebx;");
    asm("loc_65F103C: push %esi;");
    asm("loc_65F103D: mov %ecx,%ebx;");
    asm("loc_65F103F: mov 8(%ebx),%esi;");
    asm("loc_65F1042: add $4,%esi;");
    asm("loc_65F1045: test %eax,%eax;");
    asm("loc_65F1047: push %edi;");
    asm("loc_65F1048: jne loc_65F1054;");
    asm("loc_65F104A: call _sub_6600DE0;");
    asm("loc_65F104F: mov %eax,_data_6603120;");
    asm("loc_65F1054: mov (%eax),%ecx;");
    asm("loc_65F1056: push %esi;");
    asm("loc_65F1057: lea 0xC(%ebx),%edx;");
    asm("loc_65F105A: push %edx;");
    asm("loc_65F105B: lea 0x44(%esp),%edx;");
    asm("loc_65F105F: push %edx;");
    asm("loc_65F1060: push %eax;");
    asm("loc_65F1061: calll *0x1C(%ecx);");
    asm("loc_65F1064: mov _data_6603120,%eax;");
    asm("loc_65F1069: test %eax,%eax;");
    asm("loc_65F106B: mov $0xC,%ecx;");
    asm("loc_65F1070: lea 0x3C(%esp),%esi;");
    asm("loc_65F1074: lea 0xC(%esp),%edi;");
    asm("loc_65F1078: rep movsl (%esi),(%edi);");
    asm("loc_65F107A: jne loc_65F1086;");
    asm("loc_65F107C: call _sub_6600DE0;");
    asm("loc_65F1081: mov %eax,_data_6603120;");
    asm("loc_65F1086: mov (%eax),%ecx;");
    asm("loc_65F1088: lea 0xC(%esp),%edx;");
    asm("loc_65F108C: push %edx;");
    asm("loc_65F108D: mov 0xA4(%esp),%edx;");
    asm("loc_65F1094: push %edx;");
    asm("loc_65F1095: lea 0x74(%esp),%edx;");
    asm("loc_65F1099: push %edx;");
    asm("loc_65F109A: push %eax;");
    asm("loc_65F109B: calll *0x1C(%ecx);");
    asm("loc_65F109E: lea 0x40(%ebx),%edi;");
    asm("loc_65F10A1: mov $0xC,%ecx;");
    asm("loc_65F10A6: lea 0x6C(%esp),%esi;");
    asm("loc_65F10AA: rep movsl (%esi),(%edi);");
    asm("loc_65F10AC: pop %edi;");
    asm("loc_65F10AD: pop %esi;");
    asm("loc_65F10AE: pop %ebx;");
    asm("loc_65F10AF: add $0x90,%esp;");
    asm("loc_65F10B5: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F10C0() // _sub_65F10C0
{
    __DEBUG_ASM(65F10C0);
    // chunk 0x65F10C0 _sub_65F10C0
    asm("loc_65F10C0: push %ebx;");
    asm("loc_65F10C1: mov %ecx,%ebx;");
    asm("loc_65F10C3: mov 4(%ebx),%eax;");
    asm("loc_65F10C6: push %esi;");
    asm("loc_65F10C7: xor %esi,%esi;");
    asm("loc_65F10C9: test %eax,%eax;");
    asm("loc_65F10CB: jle loc_65F10EB;");
    asm("loc_65F10CD: push %edi;");
    asm("loc_65F10CE: lea 8(%ebx),%edi;");
    asm("loc_65F10D1: mov (%edi),%edx;");
    asm("loc_65F10D3: mov _data_6603134,%eax;");
    asm("loc_65F10D8: mov (%eax),%ecx;");
    asm("loc_65F10DA: push %edx;");
    asm("loc_65F10DB: push %eax;");
    asm("loc_65F10DC: calll *0x3C(%ecx);");
    asm("loc_65F10DF: mov 4(%ebx),%eax;");
    asm("loc_65F10E2: inc %esi;");
    asm("loc_65F10E3: add $0x34,%edi;");
    asm("loc_65F10E6: cmp %eax,%esi;");
    asm("loc_65F10E8: jl loc_65F10D1;");
    asm("loc_65F10EA: pop %edi;");
    asm("loc_65F10EB: mov 0x1E80(%ebx),%edx;");
    asm("loc_65F10F1: mov _data_6603134,%eax;");
    asm("loc_65F10F6: mov (%eax),%ecx;");
    asm("loc_65F10F8: push %edx;");
    asm("loc_65F10F9: push %eax;");
    asm("loc_65F10FA: calll *0x3C(%ecx);");
    asm("loc_65F10FD: pop %esi;");
    asm("loc_65F10FE: pop %ebx;");
    asm("loc_65F10FF: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1100() // _sub_65F1100
{
    __DEBUG_ASM(65F1100);
    // chunk 0x65F1100 _sub_65F1100
    asm("loc_65F1100: sub $0x1FC,%esp;");
    asm("loc_65F1106: push %ebx;");
    asm("loc_65F1107: mov 0x208(%esp),%ebx;");
    asm("loc_65F110E: mov (%ebx),%eax;");
    asm("loc_65F1110: push %ebp;");
    asm("loc_65F1111: push %esi;");
    asm("loc_65F1112: mov %ecx,%esi;");
    asm("loc_65F1114: lea 0xC8(%esp),%ecx;");
    asm("loc_65F111B: push %ecx;");
    asm("loc_65F111C: push $_data_660204C;");
    asm("loc_65F1121: push %ebx;");
    asm("loc_65F1122: mov %esi,0x30(%esp);");
    asm("loc_65F1126: calll *0x48(%eax);");
    asm("loc_65F1129: mov %eax,%ebp;");
    asm("loc_65F112B: cmp $0xFFFFFFFF,%ebp;");
    asm("loc_65F112E: mov %ebp,0x10(%esp);");
    asm("loc_65F1132: je loc_65F1347;");
    asm("loc_65F1138: push %edi;");
    asm("loc_65F1139: lea (%esp),%esp;");
    asm("loc_65F1140: xor %eax,%eax;");
    asm("loc_65F1142: movl $_data_6602040,0x6C(%esp);");
    asm("loc_65F114A: mov $0xB,%ecx;");
    asm("loc_65F114F: lea 0x70(%esp),%edi;");
    asm("loc_65F1153: rep stos %eax,(%edi);");
    asm("loc_65F1155: mov (%ebx),%eax;");
    asm("loc_65F1157: lea 0xF8(%esp),%edx;");
    asm("loc_65F115E: lea 0x10(%esp),%ecx;");
    asm("loc_65F1162: mov %edx,0x74(%esp);");
    asm("loc_65F1166: push %ecx;");
    asm("loc_65F1167: lea 0x6C(%esp),%edx;");
    asm("loc_65F116B: push %edx;");
    asm("loc_65F116C: push %ebx;");
    asm("loc_65F116D: movl $0,0x1C(%esp);");
    asm("loc_65F1175: movl $0x80000000,0x84(%esp);");
    asm("loc_65F1180: movl $1,0x88(%esp);");
    asm("loc_65F118B: movl $3,0x90(%esp);");
    asm("loc_65F1196: movl $0x8000080,0x94(%esp);");
    asm("loc_65F11A1: movl $0x34,0x74(%esp);");
    asm("loc_65F11A9: mov %ebp,0xA4(%esp);");
    asm("loc_65F11B0: calll *0xC(%eax);");
    asm("loc_65F11B3: test %eax,%eax;");
    asm("loc_65F11B5: jl loc_65F131A;");
    asm("loc_65F11BB: mov 0x10(%esp),%eax;");
    asm("loc_65F11BF: mov (%eax),%ecx;");
    asm("loc_65F11C1: push $_data_6602034;");
    asm("loc_65F11C6: push %eax;");
    asm("loc_65F11C7: calll *0x60(%ecx);");
    asm("loc_65F11CA: mov 4(%esi),%edx;");
    asm("loc_65F11CD: mov 0x10(%esp),%ebx;");
    asm("loc_65F11D1: imul $0x34,%edx;");
    asm("loc_65F11D4: mov %eax,0x30(%esp);");
    asm("loc_65F11D8: lea 8(%edx,%esi),%eax;");
    asm("loc_65F11DC: mov %eax,0x18(%esp);");
    asm("loc_65F11E0: xor %eax,%eax;");
    asm("loc_65F11E2: movl $_data_6602040,0x38(%esp);");
    asm("loc_65F11EA: mov $0xB,%ecx;");
    asm("loc_65F11EF: lea 0x3C(%esp),%edi;");
    asm("loc_65F11F3: rep stos %eax,(%edi);");
    asm("loc_65F11F5: lea 0x9C(%esp),%ecx;");
    asm("loc_65F11FC: movl $0x80000000,0x44(%esp);");
    asm("loc_65F1204: movl $1,0x48(%esp);");
    asm("loc_65F120C: movl $3,0x50(%esp);");
    asm("loc_65F1214: movl $0x8000080,0x54(%esp);");
    asm("loc_65F121C: movl $_data_6602024,0x40(%esp);");
    asm("loc_65F1224: movl $0x34,0x34(%esp);");
    asm("loc_65F122C: movl $0xFFFFFFFF,0x64(%esp);");
    asm("loc_65F1234: call _sub_65F13E0;");
    asm("loc_65F1239: mov (%ebx),%ecx;");
    asm("loc_65F123B: lea 0x34(%esp),%edx;");
    asm("loc_65F123F: push %edx;");
    asm("loc_65F1240: push %ebx;");
    asm("loc_65F1241: xor %edi,%edi;");
    asm("loc_65F1243: calll *0x7C(%ecx);");
    asm("loc_65F1246: mov %eax,%ebp;");
    asm("loc_65F1248: cmp $0xFFFFFFFF,%ebp;");
    asm("loc_65F124B: je loc_65F12A3;");
    asm("loc_65F124D: mov (%ebx),%eax;");
    asm("loc_65F124F: push %edi;");
    asm("loc_65F1250: lea 0x30(%esp),%ecx;");
    asm("loc_65F1254: push %ecx;");
    asm("loc_65F1255: push $0x30;");
    asm("loc_65F1257: lea 0xA8(%esp),%edx;");
    asm("loc_65F125E: push %edx;");
    asm("loc_65F125F: push %ebp;");
    asm("loc_65F1260: push %ebx;");
    asm("loc_65F1261: calll *0x14(%eax);");
    asm("loc_65F1264: test %eax,%eax;");
    asm("loc_65F1266: je loc_65F13C7;");
    asm("loc_65F126C: cmpl $0x30,0x2C(%esp);");
    asm("loc_65F1271: jne loc_65F13C7;");
    asm("loc_65F1277: mov 0x18(%esp),%eax;");
    asm("loc_65F127B: lea 4(%eax),%edi;");
    asm("loc_65F127E: mov $0xC,%ecx;");
    asm("loc_65F1283: lea 0x9C(%esp),%esi;");
    asm("loc_65F128A: rep movsl (%esi),(%edi);");
    asm("loc_65F128C: mov 0x28(%esp),%esi;");
    asm("loc_65F1290: movl $1,0x1C(%esp);");
    asm("loc_65F1298: mov (%ebx),%ecx;");
    asm("loc_65F129A: push %ebp;");
    asm("loc_65F129B: push %ebx;");
    asm("loc_65F129C: calll *0x10(%ecx);");
    asm("loc_65F129F: mov 0x1C(%esp),%edi;");
    asm("loc_65F12A3: mov 0x30(%esp),%eax;");
    asm("loc_65F12A7: xor %edx,%edx;");
    asm("loc_65F12A9: test %edi,%edi;");
    asm("loc_65F12AB: setne %dl;");
    asm("loc_65F12AE: dec %edx;");
    asm("loc_65F12AF: and $0x80004005,%edx;");
    asm("loc_65F12B5: test %eax,%eax;");
    asm("loc_65F12B7: mov %edx,%edi;");
    asm("loc_65F12B9: je loc_65F12CD;");
    asm("loc_65F12BB: mov 0x214(%esp),%eax;");
    asm("loc_65F12C2: mov (%eax),%ecx;");
    asm("loc_65F12C4: push $_data_6602020;");
    asm("loc_65F12C9: push %eax;");
    asm("loc_65F12CA: calll *0x60(%ecx);");
    asm("loc_65F12CD: test %edi,%edi;");
    asm("loc_65F12CF: jl loc_65F130F;");
    asm("loc_65F12D1: lea 0xF8(%esp),%eax;");
    asm("loc_65F12D8: lea 0xF8(%esp),%edx;");
    asm("loc_65F12DF: push %eax;");
    asm("loc_65F12E0: mov %edx,0x24(%esp);");
    asm("loc_65F12E4: calll *_import_660100C;");
    asm("loc_65F12EA: mov 0x14(%esp),%edx;");
    asm("loc_65F12EE: add $4,%esp;");
    asm("loc_65F12F1: push %edx;");
    asm("loc_65F12F2: mov %eax,0x28(%esp);");
    asm("loc_65F12F6: mov _data_6603134,%eax;");
    asm("loc_65F12FB: mov (%eax),%ecx;");
    asm("loc_65F12FD: lea 0x24(%esp),%edx;");
    asm("loc_65F1301: push %edx;");
    asm("loc_65F1302: push %eax;");
    asm("loc_65F1303: calll *0x30(%ecx);");
    asm("loc_65F1306: mov 0x18(%esp),%ecx;");
    asm("loc_65F130A: mov %eax,(%ecx);");
    asm("loc_65F130C: incl 4(%esi);");
    asm("loc_65F130F: mov 0x14(%esp),%ebp;");
    asm("loc_65F1313: mov 0x214(%esp),%ebx;");
    asm("loc_65F131A: mov 0x10(%esp),%eax;");
    asm("loc_65F131E: test %eax,%eax;");
    asm("loc_65F1320: je loc_65F1328;");
    asm("loc_65F1322: mov (%eax),%edx;");
    asm("loc_65F1324: push %eax;");
    asm("loc_65F1325: calll *8(%edx);");
    asm("loc_65F1328: mov (%ebx),%eax;");
    asm("loc_65F132A: lea 0xCC(%esp),%ecx;");
    asm("loc_65F1331: push %ecx;");
    asm("loc_65F1332: push %ebp;");
    asm("loc_65F1333: push %ebx;");
    asm("loc_65F1334: calll *0x4C(%eax);");
    asm("loc_65F1337: test %eax,%eax;");
    asm("loc_65F1339: jne loc_65F1140;");
    asm("loc_65F133F: mov (%ebx),%edx;");
    asm("loc_65F1341: push %ebp;");
    asm("loc_65F1342: push %ebx;");
    asm("loc_65F1343: calll *0x50(%edx);");
    asm("loc_65F1346: pop %edi;");
    asm("loc_65F1347: mov _data_6603134,%eax;");
    asm("loc_65F134C: mov (%eax),%ecx;");
    asm("loc_65F134E: lea 0x10(%esp),%edx;");
    asm("loc_65F1352: push %edx;");
    asm("loc_65F1353: push %eax;");
    asm("loc_65F1354: calll *0x24(%ecx);");
    asm("loc_65F1357: mov _data_6603134,%eax;");
    asm("loc_65F135C: mov (%eax),%ecx;");
    asm("loc_65F135E: push %ebx;");
    asm("loc_65F135F: push %eax;");
    asm("loc_65F1360: calll *0x20(%ecx);");
    asm("loc_65F1363: mov 0x20C(%esp),%eax;");
    asm("loc_65F136A: push %eax;");
    asm("loc_65F136B: mov %eax,0x20(%esp);");
    asm("loc_65F136F: calll *_import_660100C;");
    asm("loc_65F1375: add $4,%esp;");
    asm("loc_65F1378: push %ebx;");
    asm("loc_65F1379: mov %eax,0x24(%esp);");
    asm("loc_65F137D: mov _data_6603134,%eax;");
    asm("loc_65F1382: mov (%eax),%edx;");
    asm("loc_65F1384: lea 0x20(%esp),%ecx;");
    asm("loc_65F1388: push %ecx;");
    asm("loc_65F1389: push %eax;");
    asm("loc_65F138A: calll *0x30(%edx);");
    asm("loc_65F138D: mov 0x10(%esp),%ecx;");
    asm("loc_65F1391: mov %eax,0x1E80(%esi);");
    asm("loc_65F1397: mov _data_6603134,%eax;");
    asm("loc_65F139C: mov (%eax),%edx;");
    asm("loc_65F139E: push %ecx;");
    asm("loc_65F139F: push %eax;");
    asm("loc_65F13A0: calll *0x20(%edx);");
    asm("loc_65F13A3: mov 0x10(%esp),%eax;");
    asm("loc_65F13A7: mov (%eax),%edx;");
    asm("loc_65F13A9: push %eax;");
    asm("loc_65F13AA: calll *8(%edx);");
    asm("loc_65F13AD: mov 0x1E80(%esi),%ecx;");
    asm("loc_65F13B3: pop %esi;");
    asm("loc_65F13B4: xor %eax,%eax;");
    asm("loc_65F13B6: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_65F13B9: pop %ebp;");
    asm("loc_65F13BA: setne %al;");
    asm("loc_65F13BD: pop %ebx;");
    asm("loc_65F13BE: add $0x1FC,%esp;");
    asm("loc_65F13C4: ret $8;");
    asm("loc_65F13C7: movl $0,0x1C(%esp);");
    asm("loc_65F13CF: jmp loc_65F1298;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F13E0() // _sub_65F13E0
{
    __DEBUG_ASM(65F13E0);
    // chunk 0x65F13E0 _sub_65F13E0
    asm("loc_65F13E0: mov %ecx,%eax;");
    asm("loc_65F13E2: mov $0x3F800000,%ecx;");
    asm("loc_65F13E7: mov %ecx,0x20(%eax);");
    asm("loc_65F13EA: mov %ecx,0x10(%eax);");
    asm("loc_65F13ED: mov %ecx,(%eax);");
    asm("loc_65F13EF: xor %ecx,%ecx;");
    asm("loc_65F13F1: mov %ecx,0x1C(%eax);");
    asm("loc_65F13F4: mov %ecx,0x18(%eax);");
    asm("loc_65F13F7: mov %ecx,0x14(%eax);");
    asm("loc_65F13FA: mov %ecx,0xC(%eax);");
    asm("loc_65F13FD: mov %ecx,8(%eax);");
    asm("loc_65F1400: mov %ecx,4(%eax);");
    asm("loc_65F1403: mov %ecx,0x2C(%eax);");
    asm("loc_65F1406: mov %ecx,0x28(%eax);");
    asm("loc_65F1409: mov %ecx,0x24(%eax);");
    asm("loc_65F140C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1410() // _sub_65F1410
{
    __DEBUG_ASM(65F1410);
    // chunk 0x65F1410 _sub_65F1410
    asm("loc_65F1410: mov 0x1E84(%ecx),%eax;");
    asm("loc_65F1416: inc %eax;");
    asm("loc_65F1417: mov %eax,0x1E84(%ecx);");
    asm("loc_65F141D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1420() // _sub_65F1420
{
    __DEBUG_ASM(65F1420);
    // chunk 0x65F1420 _sub_65F1420
    asm("loc_65F1420: push %esi;");
    asm("loc_65F1421: mov %ecx,%esi;");
    asm("loc_65F1423: mov 0x1E84(%esi),%ecx;");
    asm("loc_65F1429: dec %ecx;");
    asm("loc_65F142A: push %edi;");
    asm("loc_65F142B: mov %ecx,%edi;");
    asm("loc_65F142D: test %edi,%edi;");
    asm("loc_65F142F: mov %ecx,0x1E84(%esi);");
    asm("loc_65F1435: jg loc_65F1447;");
    asm("loc_65F1437: mov %esi,%ecx;");
    asm("loc_65F1439: call _sub_65F10C0;");
    asm("loc_65F143E: push %esi;");
    asm("loc_65F143F: call _sub_6600BB0;");
    asm("loc_65F1444: add $4,%esp;");
    asm("loc_65F1447: mov %edi,%eax;");
    asm("loc_65F1449: pop %edi;");
    asm("loc_65F144A: pop %esi;");
    asm("loc_65F144B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1450() // _sub_65F1450
{
    __DEBUG_ASM(65F1450);
    // chunk 0x65F1450 _sub_65F1450
    asm("loc_65F1450: mov 8(%esp),%eax;");
    asm("loc_65F1454: mov 4(%esp),%ecx;");
    asm("loc_65F1458: push %eax;");
    asm("loc_65F1459: push %ecx;");
    asm("loc_65F145A: mov 0x14(%esp),%ecx;");
    asm("loc_65F145E: call _sub_65F14F0;");
    asm("loc_65F1463: movzbl %al,%eax;");
    asm("loc_65F1466: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1470() // _sub_65F1470
{
    __DEBUG_ASM(65F1470);
    // chunk 0x65F1470 _sub_65F1470
    asm("loc_65F1470: push %esi;");
    asm("loc_65F1471: mov %ecx,%esi;");
    asm("loc_65F1473: mov 4(%esi),%eax;");
    asm("loc_65F1476: push %eax;");
    asm("loc_65F1477: call _sub_6600BB0;");
    asm("loc_65F147C: mov (%esi),%ecx;");
    asm("loc_65F147E: add $4,%esp;");
    asm("loc_65F1481: test %ecx,%ecx;");
    asm("loc_65F1483: je loc_65F1490;");
    asm("loc_65F1485: call _sub_65F1420;");
    asm("loc_65F148A: movl $0,(%esi);");
    asm("loc_65F1490: pop %esi;");
    asm("loc_65F1491: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F14A0() // _sub_65F14A0
{
    __DEBUG_ASM(65F14A0);
    // chunk 0x65F14A0 _sub_65F14A0
    asm("loc_65F14A0: mov 4(%esp),%eax;");
    asm("loc_65F14A4: mov 4(%ecx),%edx;");
    asm("loc_65F14A7: push %esi;");
    asm("loc_65F14A8: mov %eax,%esi;");
    asm("loc_65F14AA: imul $0x70,%esi;");
    asm("loc_65F14AD: add %edx,%esi;");
    asm("loc_65F14AF: test %eax,%eax;");
    asm("loc_65F14B1: sete %dl;");
    asm("loc_65F14B4: imul $0x34,%eax;");
    asm("loc_65F14B7: push %edi;");
    asm("loc_65F14B8: mov (%ecx),%edi;");
    asm("loc_65F14BA: mov 0x3C(%esi),%cl;");
    asm("loc_65F14BD: xor %cl,%dl;");
    asm("loc_65F14BF: and $1,%dl;");
    asm("loc_65F14C2: xor %cl,%dl;");
    asm("loc_65F14C4: mov %dl,0x3C(%esi);");
    asm("loc_65F14C7: mov 0x10(%esp),%edx;");
    asm("loc_65F14CB: lea 8(%eax,%edi),%eax;");
    asm("loc_65F14CF: push %esi;");
    asm("loc_65F14D0: mov %eax,8(%esi);");
    asm("loc_65F14D3: mov _data_6603134,%eax;");
    asm("loc_65F14D8: mov (%eax),%ecx;");
    asm("loc_65F14DA: push %edx;");
    asm("loc_65F14DB: push %eax;");
    asm("loc_65F14DC: calll *0x70(%ecx);");
    asm("loc_65F14DF: pop %edi;");
    asm("loc_65F14E0: mov %esi,%eax;");
    asm("loc_65F14E2: pop %esi;");
    asm("loc_65F14E3: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F14F0() // _sub_65F14F0
{
    __DEBUG_ASM(65F14F0);
    // chunk 0x65F14F0 _sub_65F14F0
    asm("loc_65F14F0: push %ebx;");
    asm("loc_65F14F1: push %esi;");
    asm("loc_65F14F2: mov %ecx,%esi;");
    asm("loc_65F14F4: mov 8(%esi),%ecx;");
    asm("loc_65F14F7: mov (%esi),%edx;");
    asm("loc_65F14F9: mov %ecx,%eax;");
    asm("loc_65F14FB: imul $0x34,%eax;");
    asm("loc_65F14FE: push %edi;");
    asm("loc_65F14FF: lea 8(%eax,%edx),%edi;");
    asm("loc_65F1503: mov 4(%edx),%edx;");
    asm("loc_65F1506: xor %al,%al;");
    asm("loc_65F1508: cmp %edx,%ecx;");
    asm("loc_65F150A: jge loc_65F1543;");
    asm("loc_65F150C: mov 0x14(%esp),%ebx;");
    asm("loc_65F1510: cmp %ebx,(%edi);");
    asm("loc_65F1512: sete %al;");
    asm("loc_65F1515: test %al,%al;");
    asm("loc_65F1517: jne loc_65F1527;");
    asm("loc_65F1519: inc %ecx;");
    asm("loc_65F151A: add $0x34,%edi;");
    asm("loc_65F151D: cmp %edx,%ecx;");
    asm("loc_65F151F: jl loc_65F1510;");
    asm("loc_65F1521: pop %edi;");
    asm("loc_65F1522: pop %esi;");
    asm("loc_65F1523: pop %ebx;");
    asm("loc_65F1524: ret $8;");
    asm("loc_65F1527: mov 0x10(%esp),%edx;");
    asm("loc_65F152B: push %edx;");
    asm("loc_65F152C: mov %ecx,8(%esi);");
    asm("loc_65F152F: push %ecx;");
    asm("loc_65F1530: mov %esi,%ecx;");
    asm("loc_65F1532: call _sub_65F14A0;");
    asm("loc_65F1537: mov 8(%esi),%ecx;");
    asm("loc_65F153A: test %eax,%eax;");
    asm("loc_65F153C: setne %al;");
    asm("loc_65F153F: inc %ecx;");
    asm("loc_65F1540: mov %ecx,8(%esi);");
    asm("loc_65F1543: pop %edi;");
    asm("loc_65F1544: pop %esi;");
    asm("loc_65F1545: pop %ebx;");
    asm("loc_65F1546: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1550() // _sub_65F1550
{
    __DEBUG_ASM(65F1550);
    // chunk 0x65F1550 _sub_65F1550
    asm("loc_65F1550: push %ebx;");
    asm("loc_65F1551: push %ebp;");
    asm("loc_65F1552: push %esi;");
    asm("loc_65F1553: mov 0x10(%esp),%esi;");
    asm("loc_65F1557: push %edi;");
    asm("loc_65F1558: mov %ecx,%edi;");
    asm("loc_65F155A: mov (%edi),%ecx;");
    asm("loc_65F155C: xor %ebx,%ebx;");
    asm("loc_65F155E: cmp %esi,%ecx;");
    asm("loc_65F1560: je loc_65F157A;");
    asm("loc_65F1562: cmp %ebx,%ecx;");
    asm("loc_65F1564: je loc_65F156D;");
    asm("loc_65F1566: call _sub_65F1420;");
    asm("loc_65F156B: mov %ebx,(%edi);");
    asm("loc_65F156D: cmp %ebx,%esi;");
    asm("loc_65F156F: mov %esi,(%edi);");
    asm("loc_65F1571: je loc_65F157A;");
    asm("loc_65F1573: mov %esi,%ecx;");
    asm("loc_65F1575: call _sub_65F1410;");
    asm("loc_65F157A: mov (%edi),%eax;");
    asm("loc_65F157C: mov 4(%eax),%esi;");
    asm("loc_65F157F: mov %esi,%ecx;");
    asm("loc_65F1581: imul $0x70,%ecx;");
    asm("loc_65F1584: push %ecx;");
    asm("loc_65F1585: call _sub_6600BB6;");
    asm("loc_65F158A: add $4,%esp;");
    asm("loc_65F158D: cmp %ebx,%eax;");
    asm("loc_65F158F: mov %eax,0x14(%esp);");
    asm("loc_65F1593: je loc_65F15D0;");
    asm("loc_65F1595: lea -1(%esi),%ebp;");
    asm("loc_65F1598: cmp %ebx,%ebp;");
    asm("loc_65F159A: jl loc_65F15D2;");
    asm("loc_65F159C: lea 0x68(%eax),%esi;");
    asm("loc_65F159F: inc %ebp;");
    asm("loc_65F15A0: lea -0x28(%esi),%ecx;");
    asm("loc_65F15A3: movl $0xFFFFFFFF,-0x64(%esi);");
    asm("loc_65F15AA: mov %ebx,-0x60(%esi);");
    asm("loc_65F15AD: mov %ebx,-0x2C(%esi);");
    asm("loc_65F15B0: call _sub_65F1660;");
    asm("loc_65F15B5: mov %ebx,4(%esi);");
    asm("loc_65F15B8: mov %ebx,(%esi);");
    asm("loc_65F15BA: mov %ebx,-4(%esi);");
    asm("loc_65F15BD: movl $_off_66010A0,-0x68(%esi);");
    asm("loc_65F15C4: add $0x70,%esi;");
    asm("loc_65F15C7: dec %ebp;");
    asm("loc_65F15C8: jne loc_65F15A0;");
    asm("loc_65F15CA: mov 0x14(%esp),%eax;");
    asm("loc_65F15CE: jmp loc_65F15D2;");
    asm("loc_65F15D0: xor %eax,%eax;");
    asm("loc_65F15D2: push %edi;");
    asm("loc_65F15D3: push $_sub_65F1450;");
    asm("loc_65F15D8: mov %eax,4(%edi);");
    asm("loc_65F15DB: call _sub_65F1D90;");
    asm("loc_65F15E0: mov (%edi),%eax;");
    asm("loc_65F15E2: mov 0x1E80(%eax),%eax;");
    asm("loc_65F15E8: mov _data_6603134,%ecx;");
    asm("loc_65F15EE: mov (%ecx),%edx;");
    asm("loc_65F15F0: add $8,%esp;");
    asm("loc_65F15F3: push %ebx;");
    asm("loc_65F15F4: push %eax;");
    asm("loc_65F15F5: push %ecx;");
    asm("loc_65F15F6: calll *0x5C(%edx);");
    asm("loc_65F15F9: push %ebx;");
    asm("loc_65F15FA: push %ebx;");
    asm("loc_65F15FB: mov %eax,%esi;");
    asm("loc_65F15FD: call _sub_65F1D90;");
    asm("loc_65F1602: add $8,%esp;");
    asm("loc_65F1605: cmp $0xFFFFFFFF,%esi;");
    asm("loc_65F1608: je loc_65F1651;");
    asm("loc_65F160A: mov (%edi),%eax;");
    asm("loc_65F160C: mov 4(%eax),%ecx;");
    asm("loc_65F160F: xor %esi,%esi;");
    asm("loc_65F1611: cmp %ebx,%ecx;");
    asm("loc_65F1613: jle loc_65F1651;");
    asm("loc_65F1615: xor %ebp,%ebp;");
    asm("loc_65F1617: mov 4(%edi),%ecx;");
    asm("loc_65F161A: cmpl $0xFFFFFFFF,4(%ebx,%ecx);");
    asm("loc_65F161F: jne loc_65F1641;");
    asm("loc_65F1621: mov 8(%eax,%ebp),%eax;");
    asm("loc_65F1625: mov _data_6603134,%ecx;");
    asm("loc_65F162B: mov (%ecx),%edx;");
    asm("loc_65F162D: push $0;");
    asm("loc_65F162F: push %eax;");
    asm("loc_65F1630: push %ecx;");
    asm("loc_65F1631: calll *0x5C(%edx);");
    asm("loc_65F1634: push %eax;");
    asm("loc_65F1635: push %esi;");
    asm("loc_65F1636: mov %edi,%ecx;");
    asm("loc_65F1638: call _sub_65F14A0;");
    asm("loc_65F163D: orb $1,0x3C(%eax);");
    asm("loc_65F1641: mov (%edi),%eax;");
    asm("loc_65F1643: mov 4(%eax),%ecx;");
    asm("loc_65F1646: inc %esi;");
    asm("loc_65F1647: add $0x70,%ebx;");
    asm("loc_65F164A: add $0x34,%ebp;");
    asm("loc_65F164D: cmp %ecx,%esi;");
    asm("loc_65F164F: jl loc_65F1617;");
    asm("loc_65F1651: pop %edi;");
    asm("loc_65F1652: pop %esi;");
    asm("loc_65F1653: pop %ebp;");
    asm("loc_65F1654: mov $1,%al;");
    asm("loc_65F1656: pop %ebx;");
    asm("loc_65F1657: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1660() // _sub_65F1660
{
    __DEBUG_ASM(65F1660);
    // chunk 0x65F1660 _sub_65F1660
    asm("loc_65F1660: mov %ecx,%eax;");
    asm("loc_65F1662: mov $0x3F800000,%ecx;");
    asm("loc_65F1667: mov %ecx,0x20(%eax);");
    asm("loc_65F166A: mov %ecx,0x10(%eax);");
    asm("loc_65F166D: mov %ecx,(%eax);");
    asm("loc_65F166F: xor %ecx,%ecx;");
    asm("loc_65F1671: mov %ecx,0x1C(%eax);");
    asm("loc_65F1674: mov %ecx,0x18(%eax);");
    asm("loc_65F1677: mov %ecx,0x14(%eax);");
    asm("loc_65F167A: mov %ecx,0xC(%eax);");
    asm("loc_65F167D: mov %ecx,8(%eax);");
    asm("loc_65F1680: mov %ecx,4(%eax);");
    asm("loc_65F1683: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1690() // _sub_65F1690
{
    __DEBUG_ASM(65F1690);
    // chunk 0x65F1690 _sub_65F1690
    asm("loc_65F1690: mov 4(%esp),%eax;");
    asm("loc_65F1694: mov 8(%esp),%ecx;");
    asm("loc_65F1698: mov %ecx,4(%eax);");
    asm("loc_65F169B: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F16A0() // _nullsub_1
{
    __DEBUG_ASM(65F16A0);
    // chunk 0x65F16A0 _sub_65F16A0
    asm("loc_65F16A0: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F16B0() // _sub_65F16B0
{
    __DEBUG_ASM(65F16B0);
    // chunk 0x65F16B0 _sub_65F16B0
    asm("loc_65F16B0: mov 4(%esp),%ecx;");
    asm("loc_65F16B4: mov 0xC(%esp),%edx;");
    asm("loc_65F16B8: push %esi;");
    asm("loc_65F16B9: mov (%edx),%esi;");
    asm("loc_65F16BB: lea 0x30(%ecx),%eax;");
    asm("loc_65F16BE: mov %esi,(%eax);");
    asm("loc_65F16C0: mov 4(%edx),%esi;");
    asm("loc_65F16C3: mov %esi,4(%eax);");
    asm("loc_65F16C6: mov 8(%edx),%edx;");
    asm("loc_65F16C9: mov %edx,8(%eax);");
    asm("loc_65F16CC: mov 0x3C(%ecx),%al;");
    asm("loc_65F16CF: test $1,%al;");
    asm("loc_65F16D1: pop %esi;");
    asm("loc_65F16D2: je loc_65F16D9;");
    asm("loc_65F16D4: or $2,%al;");
    asm("loc_65F16D6: mov %al,0x3C(%ecx);");
    asm("loc_65F16D9: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F16E0() // _sub_65F16E0
{
    __DEBUG_ASM(65F16E0);
    // chunk 0x65F16E0 _sub_65F16E0
    asm("loc_65F16E0: mov 4(%esp),%eax;");
    asm("loc_65F16E4: add $0x30,%eax;");
    asm("loc_65F16E7: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F16F0() // _sub_65F16F0
{
    __DEBUG_ASM(65F16F0);
    // chunk 0x65F16F0 _sub_65F16F0
    asm("loc_65F16F0: mov 4(%esp),%edx;");
    asm("loc_65F16F4: mov 0x3C(%edx),%al;");
    asm("loc_65F16F7: test $1,%al;");
    asm("loc_65F16F9: push %esi;");
    asm("loc_65F16FA: mov 0x10(%esp),%esi;");
    asm("loc_65F16FE: push %edi;");
    asm("loc_65F16FF: lea 0xC(%edx),%edi;");
    asm("loc_65F1702: mov $9,%ecx;");
    asm("loc_65F1707: rep movsl (%esi),(%edi);");
    asm("loc_65F1709: pop %edi;");
    asm("loc_65F170A: pop %esi;");
    asm("loc_65F170B: je loc_65F1712;");
    asm("loc_65F170D: or $2,%al;");
    asm("loc_65F170F: mov %al,0x3C(%edx);");
    asm("loc_65F1712: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1720() // _sub_65F1720
{
    __DEBUG_ASM(65F1720);
    // chunk 0x65F1720 _sub_65F1720
    asm("loc_65F1720: mov 4(%esp),%eax;");
    asm("loc_65F1724: add $0xC,%eax;");
    asm("loc_65F1727: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1730() // _sub_65F1730
{
    __DEBUG_ASM(65F1730);
    // chunk 0x65F1730 _sub_65F1730
    asm("loc_65F1730: mov 4(%esp),%edx;");
    asm("loc_65F1734: mov 0x3C(%edx),%al;");
    asm("loc_65F1737: test $1,%al;");
    asm("loc_65F1739: push %esi;");
    asm("loc_65F173A: mov 0x10(%esp),%esi;");
    asm("loc_65F173E: push %edi;");
    asm("loc_65F173F: lea 0xC(%edx),%edi;");
    asm("loc_65F1742: mov $0xC,%ecx;");
    asm("loc_65F1747: rep movsl (%esi),(%edi);");
    asm("loc_65F1749: pop %edi;");
    asm("loc_65F174A: pop %esi;");
    asm("loc_65F174B: je loc_65F1752;");
    asm("loc_65F174D: or $2,%al;");
    asm("loc_65F174F: mov %al,0x3C(%edx);");
    asm("loc_65F1752: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1760() // _sub_65F1760
{
    __DEBUG_ASM(65F1760);
    // chunk 0x65F1760 _sub_65F1760
    asm("loc_65F1760: mov 0xC(%esp),%eax;");
    asm("loc_65F1764: xor %ecx,%ecx;");
    asm("loc_65F1766: mov %ecx,(%eax);");
    asm("loc_65F1768: mov 0x10(%esp),%eax;");
    asm("loc_65F176C: mov %ecx,(%eax);");
    asm("loc_65F176E: mov %ecx,4(%eax);");
    asm("loc_65F1771: mov %ecx,8(%eax);");
    asm("loc_65F1774: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1780() // _nullsub_3
{
    __DEBUG_ASM(65F1780);
    // chunk 0x65F1780 _sub_65F1780
    asm("loc_65F1780: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1790() // _nullsub_4
{
    __DEBUG_ASM(65F1790);
    // chunk 0x65F1790 _sub_65F1790
    asm("loc_65F1790: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F17A0() // _sub_65F17A0
{
    __DEBUG_ASM(65F17A0);
    // chunk 0x65F17A0 _sub_65F17A0
    asm("loc_65F17A0: xor %eax,%eax;");
    asm("loc_65F17A2: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F17B0() // _sub_65F17B0
{
    __DEBUG_ASM(65F17B0);
    // chunk 0x65F17B0 _sub_65F17B0
    asm("loc_65F17B0: mov 4(%esp),%ecx;");
    asm("loc_65F17B4: mov 0x3C(%ecx),%al;");
    asm("loc_65F17B7: test $2,%al;");
    asm("loc_65F17B9: je loc_65F17C0;");
    asm("loc_65F17BB: xor %al,%al;");
    asm("loc_65F17BD: ret $8;");
    asm("loc_65F17C0: or $2,%al;");
    asm("loc_65F17C2: mov %al,0x3C(%ecx);");
    asm("loc_65F17C5: not %al;");
    asm("loc_65F17C7: and $1,%eax;");
    asm("loc_65F17CA: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F17D0() // ?EnterCriticalRegionHelper@ContextBase@details@Concurrency@@UAEHXZ
{
    __DEBUG_ASM(65F17D0);
    // chunk 0x65F17D0 _sub_65F17D0
    asm("loc_65F17D0: mov 0xC(%ecx),%eax;");
    asm("loc_65F17D3: inc %eax;");
    asm("loc_65F17D4: mov %eax,0xC(%ecx);");
    asm("loc_65F17D7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F17E0() // _sub_65F17E0
{
    __DEBUG_ASM(65F17E0);
    // chunk 0x65F17E0 _sub_65F17E0
    asm("loc_65F17E0: push %esi;");
    asm("loc_65F17E1: mov %ecx,%esi;");
    asm("loc_65F17E3: mov 0xC(%esi),%ecx;");
    asm("loc_65F17E6: dec %ecx;");
    asm("loc_65F17E7: push %edi;");
    asm("loc_65F17E8: mov %ecx,%edi;");
    asm("loc_65F17EA: test %edi,%edi;");
    asm("loc_65F17EC: mov %ecx,0xC(%esi);");
    asm("loc_65F17EF: jg loc_65F1801;");
    asm("loc_65F17F1: mov %esi,%ecx;");
    asm("loc_65F17F3: call _sub_65F1470;");
    asm("loc_65F17F8: push %esi;");
    asm("loc_65F17F9: call _sub_6600BB0;");
    asm("loc_65F17FE: add $4,%esp;");
    asm("loc_65F1801: mov %edi,%eax;");
    asm("loc_65F1803: pop %edi;");
    asm("loc_65F1804: pop %esi;");
    asm("loc_65F1805: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1810() // _sub_65F1810
{
    __DEBUG_ASM(65F1810);
    // chunk 0x65F1810 _sub_65F1810
    asm("loc_65F1810: mov %ecx,%eax;");
    asm("loc_65F1812: movl $_off_66011AC,4(%eax);");
    asm("loc_65F1819: xor %ecx,%ecx;");
    asm("loc_65F181B: movl $_off_6601110,(%eax);");
    asm("loc_65F1821: movl $_off_66010DC,4(%eax);");
    asm("loc_65F1828: mov %ecx,_data_6603128;");
    asm("loc_65F182E: mov %ecx,_data_660312C;");
    asm("loc_65F1834: mov %ecx,_data_6603130;");
    asm("loc_65F183A: mov %ecx,_data_6603134;");
    asm("loc_65F1840: mov %ecx,_data_6603138;");
    asm("loc_65F1846: mov %ecx,_data_660313C;");
    asm("loc_65F184C: mov %ecx,_data_6603140;");
    asm("loc_65F1852: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1860() // _sub_65F1860
{
    __DEBUG_ASM(65F1860);
    // chunk 0x65F1860 _sub_65F1860
    asm("loc_65F1860: mov 4(%esp),%eax;");
    asm("loc_65F1864: mov (%eax),%ecx;");
    asm("loc_65F1866: mov %eax,4(%esp);");
    asm("loc_65F186A: jmpl *0xC(%ecx);");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1870() // _sub_65F1870
{
    __DEBUG_ASM(65F1870);
    // chunk 0x65F1870 _sub_65F1870
    asm("loc_65F1870: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1873: ret $0x20;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1880() // ?seekoff@streambuf@@UAEJJW4seek_dir@ios@@H@Z
{
    __DEBUG_ASM(65F1880);
    // chunk 0x65F1880 _sub_65F1880
    asm("loc_65F1880: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1883: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1890() // _sub_65F1890
{
    __DEBUG_ASM(65F1890);
    // chunk 0x65F1890 _sub_65F1890
    asm("loc_65F1890: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1893: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F18A0() // _sub_65F18A0
{
    __DEBUG_ASM(65F18A0);
    // chunk 0x65F18A0 _sub_65F18A0
    asm("loc_65F18A0: or $0xFFFFFFFF,%eax;");
    asm("loc_65F18A3: ret $0x14;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F18B0() // _sub_65F18B0
{
    __DEBUG_ASM(65F18B0);
    // chunk 0x65F18B0 _sub_65F18B0
    asm("loc_65F18B0: or $0xFFFFFFFF,%eax;");
    asm("loc_65F18B3: ret $0x28;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F18C0() // _sub_65F18C0
{
    __DEBUG_ASM(65F18C0);
    // chunk 0x65F18C0 _sub_65F18C0
    asm("loc_65F18C0: or $0xFFFFFFFF,%eax;");
    asm("loc_65F18C3: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F18D0() // _sub_65F18D0
{
    __DEBUG_ASM(65F18D0);
    // chunk 0x65F18D0 _sub_65F18D0
    asm("loc_65F18D0: movl $_off_6601110,(%ecx);");
    asm("loc_65F18D6: movl $_off_66010DC,4(%ecx);");
    asm("loc_65F18DD: call _sub_65F1DF0;");
    asm("loc_65F18E2: mov _data_6603128,%eax;");
    asm("loc_65F18E7: test %eax,%eax;");
    asm("loc_65F18E9: je loc_65F18FB;");
    asm("loc_65F18EB: mov (%eax),%ecx;");
    asm("loc_65F18ED: push %eax;");
    asm("loc_65F18EE: calll *8(%ecx);");
    asm("loc_65F18F1: movl $0,_data_6603128;");
    asm("loc_65F18FB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1900() // _sub_65F1900
{
    __DEBUG_ASM(65F1900);
    // chunk 0x65F1900 _sub_65F1900
    asm("loc_65F1900: sub $0x40,%esp;");
    asm("loc_65F1903: mov 0x44(%esp),%eax;");
    asm("loc_65F1907: mov 0x14(%eax),%eax;");
    asm("loc_65F190A: push %ebx;");
    asm("loc_65F190B: xor %ebx,%ebx;");
    asm("loc_65F190D: cmp %ebx,%eax;");
    asm("loc_65F190F: mov %ecx,8(%esp);");
    asm("loc_65F1913: mov %eax,_data_6603128;");
    asm("loc_65F1918: jne loc_65F1924;");
    asm("loc_65F191A: or $0xFFFFFFFF,%eax;");
    asm("loc_65F191D: pop %ebx;");
    asm("loc_65F191E: add $0x40,%esp;");
    asm("loc_65F1921: ret $4;");
    asm("loc_65F1924: mov (%eax),%ecx;");
    asm("loc_65F1926: push %esi;");
    asm("loc_65F1927: push %eax;");
    asm("loc_65F1928: calll *4(%ecx);");
    asm("loc_65F192B: calll *_import_6601000;");
    asm("loc_65F1931: mov %eax,%esi;");
    asm("loc_65F1933: lea 8(%esp),%eax;");
    asm("loc_65F1937: push %eax;");
    asm("loc_65F1938: push $_data_6602178;");
    asm("loc_65F193D: mov %ebx,0x10(%esp);");
    asm("loc_65F1941: mov (%esi),%edx;");
    asm("loc_65F1943: push %esi;");
    asm("loc_65F1944: calll *(%edx);");
    asm("loc_65F1946: test %eax,%eax;");
    asm("loc_65F1948: jl loc_65F1B5A;");
    asm("loc_65F194E: push %ebp;");
    asm("loc_65F194F: push %edi;");
    asm("loc_65F1950: mov 0x10(%esp),%edi;");
    asm("loc_65F1954: cmp %ebx,%edi;");
    asm("loc_65F1956: mov %ebx,0x54(%esp);");
    asm("loc_65F195A: je loc_65F1977;");
    asm("loc_65F195C: lea 0x54(%esp),%ecx;");
    asm("loc_65F1960: call _sub_65F9170;");
    asm("loc_65F1965: mov %edi,0x54(%esp);");
    asm("loc_65F1969: mov (%edi),%ecx;");
    asm("loc_65F196B: push %edi;");
    asm("loc_65F196C: calll *4(%ecx);");
    asm("loc_65F196F: mov 0x54(%esp),%eax;");
    asm("loc_65F1973: cmp %ebx,%eax;");
    asm("loc_65F1975: jne loc_65F1992;");
    asm("loc_65F1977: mov (%esi),%edx;");
    asm("loc_65F1979: lea 0x54(%esp),%eax;");
    asm("loc_65F197D: push %eax;");
    asm("loc_65F197E: push $_data_6602178;");
    asm("loc_65F1983: push %esi;");
    asm("loc_65F1984: calll *(%edx);");
    asm("loc_65F1986: test %eax,%eax;");
    asm("loc_65F1988: jne loc_65F1B23;");
    asm("loc_65F198E: mov 0x54(%esp),%eax;");
    asm("loc_65F1992: mov (%eax),%ecx;");
    asm("loc_65F1994: push $3;");
    asm("loc_65F1996: push $_data_660216C;");
    asm("loc_65F199B: push %eax;");
    asm("loc_65F199C: xor %esi,%esi;");
    asm("loc_65F199E: calll *0x14(%ecx);");
    asm("loc_65F19A1: mov %eax,%ebp;");
    asm("loc_65F19A3: cmp %ebx,%ebp;");
    asm("loc_65F19A5: je loc_65F1B27;");
    asm("loc_65F19AB: mov 0x54(%esp),%eax;");
    asm("loc_65F19AF: mov (%eax),%edx;");
    asm("loc_65F19B1: push $0x400;");
    asm("loc_65F19B6: push $_data_6603700;");
    asm("loc_65F19BB: push $_data_6602160;");
    asm("loc_65F19C0: push %ebp;");
    asm("loc_65F19C1: push %eax;");
    asm("loc_65F19C2: calll *0x20(%edx);");
    asm("loc_65F19C5: test %eax,%eax;");
    asm("loc_65F19C7: je loc_65F1B16;");
    asm("loc_65F19CD: mov $9,%ecx;");
    asm("loc_65F19D2: mov $_data_6602138,%esi;");
    asm("loc_65F19D7: lea 0x28(%esp),%edi;");
    asm("loc_65F19DB: rep movsl (%esi),(%edi);");
    asm("loc_65F19DD: lea 0x28(%esp),%eax;");
    asm("loc_65F19E1: push %eax;");
    asm("loc_65F19E2: movsb (%esi),(%edi);");
    asm("loc_65F19E3: mov _import_660103C,%edi;");
    asm("loc_65F19E9: push $_data_6603700;");
    asm("loc_65F19EE: call *%edi;");
    asm("loc_65F19F0: add $8,%esp;");
    asm("loc_65F19F3: cmp %ebx,%eax;");
    asm("loc_65F19F5: je loc_65F19FD;");
    asm("loc_65F19F7: mov %bl,_data_6603700(%eax);");
    asm("loc_65F19FD: mov _import_6601004,%esi;");
    asm("loc_65F1A03: push $_data_6602130;");
    asm("loc_65F1A08: push $_data_6603700;");
    asm("loc_65F1A0D: call *%esi;");
    asm("loc_65F1A0F: add $8,%esp;");
    asm("loc_65F1A12: test %eax,%eax;");
    asm("loc_65F1A14: jne loc_65F1A2B;");
    asm("loc_65F1A16: mov 0x54(%esp),%eax;");
    asm("loc_65F1A1A: mov (%eax),%ecx;");
    asm("loc_65F1A1C: push %ebp;");
    asm("loc_65F1A1D: push %eax;");
    asm("loc_65F1A1E: mov $1,%esi;");
    asm("loc_65F1A23: calll *0x18(%ecx);");
    asm("loc_65F1A26: jmp loc_65F1B27;");
    asm("loc_65F1A2B: push $_data_660212C;");
    asm("loc_65F1A30: push $_data_6603700;");
    asm("loc_65F1A35: call *%esi;");
    asm("loc_65F1A37: add $8,%esp;");
    asm("loc_65F1A3A: test %eax,%eax;");
    asm("loc_65F1A3C: jne loc_65F1A53;");
    asm("loc_65F1A3E: mov 0x54(%esp),%eax;");
    asm("loc_65F1A42: mov (%eax),%ecx;");
    asm("loc_65F1A44: push %ebp;");
    asm("loc_65F1A45: push %eax;");
    asm("loc_65F1A46: mov $1,%esi;");
    asm("loc_65F1A4B: calll *0x18(%ecx);");
    asm("loc_65F1A4E: jmp loc_65F1B27;");
    asm("loc_65F1A53: push $_data_6602124;");
    asm("loc_65F1A58: push $_data_6603700;");
    asm("loc_65F1A5D: call *%esi;");
    asm("loc_65F1A5F: add $8,%esp;");
    asm("loc_65F1A62: test %eax,%eax;");
    asm("loc_65F1A64: jne loc_65F1A78;");
    asm("loc_65F1A66: mov 0x54(%esp),%eax;");
    asm("loc_65F1A6A: mov (%eax),%ecx;");
    asm("loc_65F1A6C: push %ebp;");
    asm("loc_65F1A6D: push %eax;");
    asm("loc_65F1A6E: xor %esi,%esi;");
    asm("loc_65F1A70: calll *0x18(%ecx);");
    asm("loc_65F1A73: jmp loc_65F1B27;");
    asm("loc_65F1A78: push $_data_6602120;");
    asm("loc_65F1A7D: push $_data_6603700;");
    asm("loc_65F1A82: call *%esi;");
    asm("loc_65F1A84: add $8,%esp;");
    asm("loc_65F1A87: test %eax,%eax;");
    asm("loc_65F1A89: jne loc_65F1A9D;");
    asm("loc_65F1A8B: mov 0x54(%esp),%eax;");
    asm("loc_65F1A8F: mov (%eax),%ecx;");
    asm("loc_65F1A91: push %ebp;");
    asm("loc_65F1A92: push %eax;");
    asm("loc_65F1A93: xor %esi,%esi;");
    asm("loc_65F1A95: calll *0x18(%ecx);");
    asm("loc_65F1A98: jmp loc_65F1B27;");
    asm("loc_65F1A9D: mov _import_6601050,%esi;");
    asm("loc_65F1AA3: push $0x78;");
    asm("loc_65F1AA5: push $_data_6603700;");
    asm("loc_65F1AAA: call *%esi;");
    asm("loc_65F1AAC: add $8,%esp;");
    asm("loc_65F1AAF: test %eax,%eax;");
    asm("loc_65F1AB1: jne loc_65F1B03;");
    asm("loc_65F1AB3: push $0x58;");
    asm("loc_65F1AB5: push $_data_6603700;");
    asm("loc_65F1ABA: call *%esi;");
    asm("loc_65F1ABC: add $8,%esp;");
    asm("loc_65F1ABF: test %eax,%eax;");
    asm("loc_65F1AC1: jne loc_65F1B03;");
    asm("loc_65F1AC3: mov _data_6602114,%edx;");
    asm("loc_65F1AC9: mov _data_6602110,%ecx;");
    asm("loc_65F1ACF: mov _data_6602118,%eax;");
    asm("loc_65F1AD4: mov %edx,0x1C(%esp);");
    asm("loc_65F1AD8: lea 0x18(%esp),%edx;");
    asm("loc_65F1ADC: mov %ecx,0x18(%esp);");
    asm("loc_65F1AE0: mov _data_660211C,%cl;");
    asm("loc_65F1AE6: push %edx;");
    asm("loc_65F1AE7: push $_data_6603700;");
    asm("loc_65F1AEC: mov %eax,0x28(%esp);");
    asm("loc_65F1AF0: mov %cl,0x2C(%esp);");
    asm("loc_65F1AF4: call *%edi;");
    asm("loc_65F1AF6: push $_data_6603700;");
    asm("loc_65F1AFB: calll *_import_6601054;");
    asm("loc_65F1B01: jmp loc_65F1B11;");
    asm("loc_65F1B03: push $0x10;");
    asm("loc_65F1B05: push %ebx;");
    asm("loc_65F1B06: push $_data_6603700;");
    asm("loc_65F1B0B: calll *_import_6601058;");
    asm("loc_65F1B11: add $0xC,%esp;");
    asm("loc_65F1B14: mov %eax,%esi;");
    asm("loc_65F1B16: mov 0x54(%esp),%eax;");
    asm("loc_65F1B1A: mov (%eax),%ecx;");
    asm("loc_65F1B1C: push %ebp;");
    asm("loc_65F1B1D: push %eax;");
    asm("loc_65F1B1E: calll *0x18(%ecx);");
    asm("loc_65F1B21: jmp loc_65F1B27;");
    asm("loc_65F1B23: mov 0x54(%esp),%esi;");
    asm("loc_65F1B27: lea 0x54(%esp),%ecx;");
    asm("loc_65F1B2B: call _sub_65F9170;");
    asm("loc_65F1B30: cmp %ebx,%esi;");
    asm("loc_65F1B32: pop %edi;");
    asm("loc_65F1B33: pop %ebp;");
    asm("loc_65F1B34: jne loc_65F1B42;");
    asm("loc_65F1B36: movl $0,_data_660314C;");
    asm("loc_65F1B40: jmp loc_65F1B5A;");
    asm("loc_65F1B42: mov %esi,0x10(%esp);");
    asm("loc_65F1B46: mov %ebx,0x14(%esp);");
    asm("loc_65F1B4A: fildll 0x10(%esp);");
    asm("loc_65F1B4E: fdivrs _data_66011E0;");
    asm("loc_65F1B54: fstps _data_660314C;");
    asm("loc_65F1B5A: mov 0xC(%esp),%eax;");
    asm("loc_65F1B5E: mov (%eax),%edx;");
    asm("loc_65F1B60: push $_data_6603134;");
    asm("loc_65F1B65: push $_data_6602100;");
    asm("loc_65F1B6A: push %eax;");
    asm("loc_65F1B6B: calll *(%edx);");
    asm("loc_65F1B6D: test %eax,%eax;");
    asm("loc_65F1B6F: pop %esi;");
    asm("loc_65F1B70: jge loc_65F1BC3;");
    asm("loc_65F1B72: push $_data_66020B8;");
    asm("loc_65F1B77: push $0xB5;");
    asm("loc_65F1B7C: push $_data_6602070;");
    asm("loc_65F1B81: mov $0x100001,%eax;");
    asm("loc_65F1B86: push $_data_6602054;");
    asm("loc_65F1B8B: push %eax;");
    asm("loc_65F1B8C: mov _import_6601008,%eax;");
    asm("loc_65F1B91: calll *(%eax);");
    asm("loc_65F1B93: mov _data_6603128,%eax;");
    asm("loc_65F1B98: add $0x14,%esp;");
    asm("loc_65F1B9B: cmp %ebx,%eax;");
    asm("loc_65F1B9D: je loc_65F1BAB;");
    asm("loc_65F1B9F: mov (%eax),%ecx;");
    asm("loc_65F1BA1: push %eax;");
    asm("loc_65F1BA2: calll *8(%ecx);");
    asm("loc_65F1BA5: mov %ebx,_data_6603128;");
    asm("loc_65F1BAB: mov 4(%esp),%eax;");
    asm("loc_65F1BAF: cmp %ebx,%eax;");
    asm("loc_65F1BB1: je loc_65F1BB9;");
    asm("loc_65F1BB3: mov (%eax),%edx;");
    asm("loc_65F1BB5: push %eax;");
    asm("loc_65F1BB6: calll *8(%edx);");
    asm("loc_65F1BB9: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1BBC: pop %ebx;");
    asm("loc_65F1BBD: add $0x40,%esp;");
    asm("loc_65F1BC0: ret $4;");
    asm("loc_65F1BC3: mov _data_6603134,%eax;");
    asm("loc_65F1BC8: mov (%eax),%ecx;");
    asm("loc_65F1BCA: push %eax;");
    asm("loc_65F1BCB: calll *8(%ecx);");
    asm("loc_65F1BCE: mov 4(%esp),%eax;");
    asm("loc_65F1BD2: cmp %ebx,%eax;");
    asm("loc_65F1BD4: je loc_65F1BDC;");
    asm("loc_65F1BD6: mov (%eax),%edx;");
    asm("loc_65F1BD8: push %eax;");
    asm("loc_65F1BD9: calll *8(%edx);");
    asm("loc_65F1BDC: xor %eax,%eax;");
    asm("loc_65F1BDE: pop %ebx;");
    asm("loc_65F1BDF: add $0x40,%esp;");
    asm("loc_65F1BE2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1BF0() // _sub_65F1BF0
{
    __DEBUG_ASM(65F1BF0);
    // chunk 0x65F1BF0 _sub_65F1BF0
    asm("loc_65F1BF0: mov 4(%esp),%eax;");
    asm("loc_65F1BF4: push %esi;");
    asm("loc_65F1BF5: lea -4(%eax),%esi;");
    asm("loc_65F1BF8: mov %esi,%ecx;");
    asm("loc_65F1BFA: call _sub_65F1DF0;");
    asm("loc_65F1BFF: mov _data_6603128,%eax;");
    asm("loc_65F1C04: mov (%eax),%ecx;");
    asm("loc_65F1C06: push $_data_6603130;");
    asm("loc_65F1C0B: push $_data_6602430;");
    asm("loc_65F1C10: push %eax;");
    asm("loc_65F1C11: calll *(%ecx);");
    asm("loc_65F1C13: test %eax,%eax;");
    asm("loc_65F1C15: jge loc_65F1C4A;");
    asm("loc_65F1C17: push $_data_66023E0;");
    asm("loc_65F1C1C: push $0xCC;");
    asm("loc_65F1C21: mov _import_6601008,%edx;");
    asm("loc_65F1C27: push $_data_6602070;");
    asm("loc_65F1C2C: mov $0x100001,%eax;");
    asm("loc_65F1C31: push $_data_6602054;");
    asm("loc_65F1C36: push %eax;");
    asm("loc_65F1C37: calll *(%edx);");
    asm("loc_65F1C39: add $0x14,%esp;");
    asm("loc_65F1C3C: mov %esi,%ecx;");
    asm("loc_65F1C3E: call _sub_65F1DF0;");
    asm("loc_65F1C43: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1C46: pop %esi;");
    asm("loc_65F1C47: ret $4;");
    asm("loc_65F1C4A: mov _data_6603128,%eax;");
    asm("loc_65F1C4F: mov (%eax),%ecx;");
    asm("loc_65F1C51: push $_data_660312C;");
    asm("loc_65F1C56: push $_data_66023C8;");
    asm("loc_65F1C5B: push %eax;");
    asm("loc_65F1C5C: calll *(%ecx);");
    asm("loc_65F1C5E: test %eax,%eax;");
    asm("loc_65F1C60: jge loc_65F1C6E;");
    asm("loc_65F1C62: push $_data_6602378;");
    asm("loc_65F1C67: push $0xD2;");
    asm("loc_65F1C6C: jmp loc_65F1C21;");
    asm("loc_65F1C6E: mov _data_6603128,%eax;");
    asm("loc_65F1C73: mov (%eax),%ecx;");
    asm("loc_65F1C75: push $_data_6603144;");
    asm("loc_65F1C7A: push $_data_660235C;");
    asm("loc_65F1C7F: push %eax;");
    asm("loc_65F1C80: calll *(%ecx);");
    asm("loc_65F1C82: test %eax,%eax;");
    asm("loc_65F1C84: jge loc_65F1C92;");
    asm("loc_65F1C86: push $_data_6602308;");
    asm("loc_65F1C8B: push $0xD8;");
    asm("loc_65F1C90: jmp loc_65F1C21;");
    asm("loc_65F1C92: mov _data_6603128,%eax;");
    asm("loc_65F1C97: mov (%eax),%ecx;");
    asm("loc_65F1C99: push $_data_6603148;");
    asm("loc_65F1C9E: push $_data_66022F4;");
    asm("loc_65F1CA3: push %eax;");
    asm("loc_65F1CA4: calll *(%ecx);");
    asm("loc_65F1CA6: test %eax,%eax;");
    asm("loc_65F1CA8: jge loc_65F1CB9;");
    asm("loc_65F1CAA: push $_data_66022A0;");
    asm("loc_65F1CAF: push $0xDE;");
    asm("loc_65F1CB4: jmp loc_65F1C21;");
    asm("loc_65F1CB9: mov _data_6603134,%eax;");
    asm("loc_65F1CBE: mov (%eax),%ecx;");
    asm("loc_65F1CC0: push $_data_6603138;");
    asm("loc_65F1CC5: push $_data_660228C;");
    asm("loc_65F1CCA: push %eax;");
    asm("loc_65F1CCB: calll *(%ecx);");
    asm("loc_65F1CCD: test %eax,%eax;");
    asm("loc_65F1CCF: jge loc_65F1CE0;");
    asm("loc_65F1CD1: push $_data_6602240;");
    asm("loc_65F1CD6: push $0xE6;");
    asm("loc_65F1CDB: jmp loc_65F1C21;");
    asm("loc_65F1CE0: mov _data_6603138,%eax;");
    asm("loc_65F1CE5: mov (%eax),%ecx;");
    asm("loc_65F1CE7: push %eax;");
    asm("loc_65F1CE8: calll *8(%ecx);");
    asm("loc_65F1CEB: mov _data_6603134,%eax;");
    asm("loc_65F1CF0: mov (%eax),%edx;");
    asm("loc_65F1CF2: push $_data_660313C;");
    asm("loc_65F1CF7: push $_data_6602230;");
    asm("loc_65F1CFC: push %eax;");
    asm("loc_65F1CFD: calll *(%edx);");
    asm("loc_65F1CFF: test %eax,%eax;");
    asm("loc_65F1D01: jge loc_65F1D0F;");
    asm("loc_65F1D03: push $_data_66021E8;");
    asm("loc_65F1D08: push $0xED;");
    asm("loc_65F1D0D: jmp loc_65F1D3C;");
    asm("loc_65F1D0F: mov _data_660313C,%eax;");
    asm("loc_65F1D14: mov (%eax),%ecx;");
    asm("loc_65F1D16: push %eax;");
    asm("loc_65F1D17: calll *8(%ecx);");
    asm("loc_65F1D1A: mov _data_6603134,%eax;");
    asm("loc_65F1D1F: mov (%eax),%edx;");
    asm("loc_65F1D21: push $_data_6603140;");
    asm("loc_65F1D26: push $_data_66021D8;");
    asm("loc_65F1D2B: push %eax;");
    asm("loc_65F1D2C: calll *(%edx);");
    asm("loc_65F1D2E: test %eax,%eax;");
    asm("loc_65F1D30: jge loc_65F1D64;");
    asm("loc_65F1D32: push $_data_6602190;");
    asm("loc_65F1D37: push $0xF4;");
    asm("loc_65F1D3C: push $_data_6602070;");
    asm("loc_65F1D41: mov $0x100001,%eax;");
    asm("loc_65F1D46: push $_data_6602054;");
    asm("loc_65F1D4B: push %eax;");
    asm("loc_65F1D4C: mov _import_6601008,%eax;");
    asm("loc_65F1D51: calll *(%eax);");
    asm("loc_65F1D53: add $0x14,%esp;");
    asm("loc_65F1D56: mov %esi,%ecx;");
    asm("loc_65F1D58: call _sub_65F1DF0;");
    asm("loc_65F1D5D: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1D60: pop %esi;");
    asm("loc_65F1D61: ret $4;");
    asm("loc_65F1D64: mov _data_6603140,%eax;");
    asm("loc_65F1D69: mov (%eax),%ecx;");
    asm("loc_65F1D6B: push %eax;");
    asm("loc_65F1D6C: calll *8(%ecx);");
    asm("loc_65F1D6F: mov _data_660312C,%edx;");
    asm("loc_65F1D75: push %edx;");
    asm("loc_65F1D76: call _sub_65FDFB0;");
    asm("loc_65F1D7B: add $4,%esp;");
    asm("loc_65F1D7E: xor %eax,%eax;");
    asm("loc_65F1D80: pop %esi;");
    asm("loc_65F1D81: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1D90() // _sub_65F1D90
{
    __DEBUG_ASM(65F1D90);
    // chunk 0x65F1D90 _sub_65F1D90
    asm("loc_65F1D90: mov 4(%esp),%eax;");
    asm("loc_65F1D94: mov 8(%esp),%ecx;");
    asm("loc_65F1D98: mov %eax,_data_6603150;");
    asm("loc_65F1D9D: mov %ecx,_data_6603154;");
    asm("loc_65F1DA3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1DB0() // _sub_65F1DB0
{
    __DEBUG_ASM(65F1DB0);
    // chunk 0x65F1DB0 _sub_65F1DB0
    asm("loc_65F1DB0: xor %eax,%eax;");
    asm("loc_65F1DB2: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1DC0() // _sub_65F1DC0
{
    __DEBUG_ASM(65F1DC0);
    // chunk 0x65F1DC0 _sub_65F1DC0
    asm("loc_65F1DC0: mov _data_6603150,%ecx;");
    asm("loc_65F1DC6: xor %eax,%eax;");
    asm("loc_65F1DC8: test %ecx,%ecx;");
    asm("loc_65F1DCA: je loc_65F1DE1;");
    asm("loc_65F1DCC: mov _data_6603154,%eax;");
    asm("loc_65F1DD1: mov 0xC(%esp),%edx;");
    asm("loc_65F1DD5: push %eax;");
    asm("loc_65F1DD6: mov 0xC(%esp),%eax;");
    asm("loc_65F1DDA: push %edx;");
    asm("loc_65F1DDB: push %eax;");
    asm("loc_65F1DDC: call *%ecx;");
    asm("loc_65F1DDE: add $0xC,%esp;");
    asm("loc_65F1DE1: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1DF0() // _sub_65F1DF0
{
    __DEBUG_ASM(65F1DF0);
    // chunk 0x65F1DF0 _sub_65F1DF0
    asm("loc_65F1DF0: mov _data_6603130,%eax;");
    asm("loc_65F1DF5: push %esi;");
    asm("loc_65F1DF6: xor %esi,%esi;");
    asm("loc_65F1DF8: cmp %esi,%eax;");
    asm("loc_65F1DFA: je loc_65F1E08;");
    asm("loc_65F1DFC: mov (%eax),%ecx;");
    asm("loc_65F1DFE: push %eax;");
    asm("loc_65F1DFF: calll *8(%ecx);");
    asm("loc_65F1E02: mov %esi,_data_6603130;");
    asm("loc_65F1E08: mov _data_660312C,%eax;");
    asm("loc_65F1E0D: cmp %esi,%eax;");
    asm("loc_65F1E0F: je loc_65F1E1D;");
    asm("loc_65F1E11: mov (%eax),%edx;");
    asm("loc_65F1E13: push %eax;");
    asm("loc_65F1E14: calll *8(%edx);");
    asm("loc_65F1E17: mov %esi,_data_660312C;");
    asm("loc_65F1E1D: mov _data_6603148,%eax;");
    asm("loc_65F1E22: cmp %esi,%eax;");
    asm("loc_65F1E24: je loc_65F1E32;");
    asm("loc_65F1E26: mov (%eax),%ecx;");
    asm("loc_65F1E28: push %eax;");
    asm("loc_65F1E29: calll *8(%ecx);");
    asm("loc_65F1E2C: mov %esi,_data_6603148;");
    asm("loc_65F1E32: mov _data_6603144,%eax;");
    asm("loc_65F1E37: cmp %esi,%eax;");
    asm("loc_65F1E39: je loc_65F1E47;");
    asm("loc_65F1E3B: mov (%eax),%edx;");
    asm("loc_65F1E3D: push %eax;");
    asm("loc_65F1E3E: calll *8(%edx);");
    asm("loc_65F1E41: mov %esi,_data_6603144;");
    asm("loc_65F1E47: pop %esi;");
    asm("loc_65F1E48: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1E50() // _sub_65F1E50
{
    __DEBUG_ASM(65F1E50);
    // chunk 0x65F1E50 _sub_65F1E50
    asm("loc_65F1E50: push %esi;");
    asm("loc_65F1E51: push %edi;");
    asm("loc_65F1E52: mov 0x14(%esp),%edi;");
    asm("loc_65F1E56: cmpl $0,(%edi);");
    asm("loc_65F1E59: jg loc_65F1E65;");
    asm("loc_65F1E5B: pop %edi;");
    asm("loc_65F1E5C: mov $0xFFFFFFFE,%eax;");
    asm("loc_65F1E61: pop %esi;");
    asm("loc_65F1E62: ret $0x18;");
    asm("loc_65F1E65: push $0x2C;");
    asm("loc_65F1E67: call _sub_6600BB6;");
    asm("loc_65F1E6C: add $4,%esp;");
    asm("loc_65F1E6F: test %eax,%eax;");
    asm("loc_65F1E71: je loc_65F1EC2;");
    asm("loc_65F1E73: mov %eax,%ecx;");
    asm("loc_65F1E75: call _sub_65F3650;");
    asm("loc_65F1E7A: mov %eax,%esi;");
    asm("loc_65F1E7C: test %esi,%esi;");
    asm("loc_65F1E7E: je loc_65F1EC2;");
    asm("loc_65F1E80: mov 0x20(%esp),%eax;");
    asm("loc_65F1E84: mov 0x1C(%esp),%ecx;");
    asm("loc_65F1E88: mov 0x18(%esp),%edx;");
    asm("loc_65F1E8C: push %eax;");
    asm("loc_65F1E8D: push %ecx;");
    asm("loc_65F1E8E: push %edx;");
    asm("loc_65F1E8F: push %edi;");
    asm("loc_65F1E90: mov %esi,%ecx;");
    asm("loc_65F1E92: call _sub_65F36C0;");
    asm("loc_65F1E97: test %al,%al;");
    asm("loc_65F1E99: je loc_65F1EA8;");
    asm("loc_65F1E9B: mov 0x10(%esp),%eax;");
    asm("loc_65F1E9F: mov %esi,(%eax);");
    asm("loc_65F1EA1: pop %edi;");
    asm("loc_65F1EA2: xor %eax,%eax;");
    asm("loc_65F1EA4: pop %esi;");
    asm("loc_65F1EA5: ret $0x18;");
    asm("loc_65F1EA8: mov %esi,%ecx;");
    asm("loc_65F1EAA: call _sub_65F3640;");
    asm("loc_65F1EAF: push %esi;");
    asm("loc_65F1EB0: call _sub_6600BB0;");
    asm("loc_65F1EB5: mov 0x14(%esp),%ecx;");
    asm("loc_65F1EB9: add $4,%esp;");
    asm("loc_65F1EBC: movl $0,(%ecx);");
    asm("loc_65F1EC2: pop %edi;");
    asm("loc_65F1EC3: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1EC6: pop %esi;");
    asm("loc_65F1EC7: ret $0x18;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1ED0() // _sub_65F1ED0
{
    __DEBUG_ASM(65F1ED0);
    // chunk 0x65F1ED0 _sub_65F1ED0
    asm("loc_65F1ED0: push %esi;");
    asm("loc_65F1ED1: mov 0xC(%esp),%esi;");
    asm("loc_65F1ED5: test %esi,%esi;");
    asm("loc_65F1ED7: je loc_65F1EF6;");
    asm("loc_65F1ED9: mov %esi,%ecx;");
    asm("loc_65F1EDB: call _sub_65F3ED0;");
    asm("loc_65F1EE0: mov %esi,%ecx;");
    asm("loc_65F1EE2: call _sub_65F3640;");
    asm("loc_65F1EE7: push %esi;");
    asm("loc_65F1EE8: call _sub_6600BB0;");
    asm("loc_65F1EED: add $4,%esp;");
    asm("loc_65F1EF0: xor %eax,%eax;");
    asm("loc_65F1EF2: pop %esi;");
    asm("loc_65F1EF3: ret $8;");
    asm("loc_65F1EF6: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1EF9: pop %esi;");
    asm("loc_65F1EFA: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1F00() // _sub_65F1F00
{
    __DEBUG_ASM(65F1F00);
    // chunk 0x65F1F00 _sub_65F1F00
    asm("loc_65F1F00: mov 8(%esp),%ecx;");
    asm("loc_65F1F04: test %ecx,%ecx;");
    asm("loc_65F1F06: je loc_65F1F4A;");
    asm("loc_65F1F08: mov 0x30(%esp),%eax;");
    asm("loc_65F1F0C: mov 0x2C(%esp),%edx;");
    asm("loc_65F1F10: push %eax;");
    asm("loc_65F1F11: mov 0x2C(%esp),%eax;");
    asm("loc_65F1F15: push %edx;");
    asm("loc_65F1F16: mov 0x2C(%esp),%edx;");
    asm("loc_65F1F1A: push %eax;");
    asm("loc_65F1F1B: mov 0x2C(%esp),%eax;");
    asm("loc_65F1F1F: push %edx;");
    asm("loc_65F1F20: mov 0x2C(%esp),%edx;");
    asm("loc_65F1F24: push %eax;");
    asm("loc_65F1F25: mov 0x2C(%esp),%eax;");
    asm("loc_65F1F29: push %edx;");
    asm("loc_65F1F2A: mov 0x2C(%esp),%edx;");
    asm("loc_65F1F2E: push %eax;");
    asm("loc_65F1F2F: mov 0x2C(%esp),%eax;");
    asm("loc_65F1F33: push %edx;");
    asm("loc_65F1F34: push %eax;");
    asm("loc_65F1F35: call _sub_65F41D0;");
    asm("loc_65F1F3A: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F1F3D: mov 0xC(%esp),%ecx;");
    asm("loc_65F1F41: mov %eax,(%ecx);");
    asm("loc_65F1F43: je loc_65F1F4A;");
    asm("loc_65F1F45: xor %eax,%eax;");
    asm("loc_65F1F47: ret $0x30;");
    asm("loc_65F1F4A: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1F4D: ret $0x30;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1F50() // _sub_65F1F50
{
    __DEBUG_ASM(65F1F50);
    // chunk 0x65F1F50 _sub_65F1F50
    asm("loc_65F1F50: mov 8(%esp),%ecx;");
    asm("loc_65F1F54: test %ecx,%ecx;");
    asm("loc_65F1F56: je loc_65F1F9A;");
    asm("loc_65F1F58: mov 0x30(%esp),%eax;");
    asm("loc_65F1F5C: mov 0x2C(%esp),%edx;");
    asm("loc_65F1F60: push %eax;");
    asm("loc_65F1F61: mov 0x2C(%esp),%eax;");
    asm("loc_65F1F65: push %edx;");
    asm("loc_65F1F66: mov 0x2C(%esp),%edx;");
    asm("loc_65F1F6A: push %eax;");
    asm("loc_65F1F6B: mov 0x2C(%esp),%eax;");
    asm("loc_65F1F6F: push %edx;");
    asm("loc_65F1F70: mov 0x2C(%esp),%edx;");
    asm("loc_65F1F74: push %eax;");
    asm("loc_65F1F75: mov 0x2C(%esp),%eax;");
    asm("loc_65F1F79: push %edx;");
    asm("loc_65F1F7A: mov 0x2C(%esp),%edx;");
    asm("loc_65F1F7E: push %eax;");
    asm("loc_65F1F7F: mov 0x2C(%esp),%eax;");
    asm("loc_65F1F83: push %edx;");
    asm("loc_65F1F84: push %eax;");
    asm("loc_65F1F85: call _sub_65F4660;");
    asm("loc_65F1F8A: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F1F8D: mov 0xC(%esp),%ecx;");
    asm("loc_65F1F91: mov %eax,(%ecx);");
    asm("loc_65F1F93: je loc_65F1F9A;");
    asm("loc_65F1F95: xor %eax,%eax;");
    asm("loc_65F1F97: ret $0x30;");
    asm("loc_65F1F9A: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1F9D: ret $0x30;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1FA0() // _sub_65F1FA0
{
    __DEBUG_ASM(65F1FA0);
    // chunk 0x65F1FA0 _sub_65F1FA0
    asm("loc_65F1FA0: mov 8(%esp),%ecx;");
    asm("loc_65F1FA4: test %ecx,%ecx;");
    asm("loc_65F1FA6: je loc_65F1FB2;");
    asm("loc_65F1FA8: call _sub_65F4C80;");
    asm("loc_65F1FAD: xor %eax,%eax;");
    asm("loc_65F1FAF: ret $8;");
    asm("loc_65F1FB2: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1FB5: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1FC0() // _sub_65F1FC0
{
    __DEBUG_ASM(65F1FC0);
    // chunk 0x65F1FC0 _sub_65F1FC0
    asm("loc_65F1FC0: mov 8(%esp),%ecx;");
    asm("loc_65F1FC4: test %ecx,%ecx;");
    asm("loc_65F1FC6: je loc_65F1FD7;");
    asm("loc_65F1FC8: mov 0xC(%esp),%eax;");
    asm("loc_65F1FCC: push %eax;");
    asm("loc_65F1FCD: call _sub_65F4D30;");
    asm("loc_65F1FD2: xor %eax,%eax;");
    asm("loc_65F1FD4: ret $0xC;");
    asm("loc_65F1FD7: or $0xFFFFFFFF,%eax;");
    asm("loc_65F1FDA: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F1FE0() // _sub_65F1FE0
{
    __DEBUG_ASM(65F1FE0);
    // chunk 0x65F1FE0 _sub_65F1FE0
    asm("loc_65F1FE0: mov 8(%esp),%ecx;");
    asm("loc_65F1FE4: test %ecx,%ecx;");
    asm("loc_65F1FE6: je loc_65F2007;");
    asm("loc_65F1FE8: mov 0x14(%esp),%eax;");
    asm("loc_65F1FEC: mov 0x10(%esp),%edx;");
    asm("loc_65F1FF0: push %eax;");
    asm("loc_65F1FF1: push %edx;");
    asm("loc_65F1FF2: call _sub_65F5400;");
    asm("loc_65F1FF7: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F1FFA: mov 0xC(%esp),%ecx;");
    asm("loc_65F1FFE: mov %eax,(%ecx);");
    asm("loc_65F2000: je loc_65F2007;");
    asm("loc_65F2002: xor %eax,%eax;");
    asm("loc_65F2004: ret $0x14;");
    asm("loc_65F2007: or $0xFFFFFFFF,%eax;");
    asm("loc_65F200A: ret $0x14;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2010() // _sub_65F2010
{
    __DEBUG_ASM(65F2010);
    // chunk 0x65F2010 _sub_65F2010
    asm("loc_65F2010: mov 8(%esp),%ecx;");
    asm("loc_65F2014: test %ecx,%ecx;");
    asm("loc_65F2016: je _sub_65F202B;");
    asm("loc_65F2018: mov 0xC(%esp),%eax;");
    asm("loc_65F201C: test %eax,%eax;");
    asm("loc_65F201E: je _sub_65F202B;");
    asm("loc_65F2020: push %eax;");
    asm("loc_65F2021: call _sub_65F5950;");
    asm("loc_65F2026: xor %eax,%eax;");
    asm("loc_65F2028: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F202B() // ?seekoff@streambuf@@UAEJJW4seek_dir@ios@@H@Z_0
{
    __DEBUG_ASM(65F202B);
    // chunk 0x65F202B _sub_65F202B
    asm("loc_65F202B: or $0xFFFFFFFF,%eax;");
    asm("loc_65F202E: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2040() // _sub_65F2040
{
    __DEBUG_ASM(65F2040);
    // chunk 0x65F2040 _sub_65F2040
    asm("loc_65F2040: mov 8(%esp),%ecx;");
    asm("loc_65F2044: test %ecx,%ecx;");
    asm("loc_65F2046: je loc_65F205C;");
    asm("loc_65F2048: mov 0xC(%esp),%eax;");
    asm("loc_65F204C: mov 0x10(%esp),%edx;");
    asm("loc_65F2050: push %eax;");
    asm("loc_65F2051: push %edx;");
    asm("loc_65F2052: call _sub_65F3FD0;");
    asm("loc_65F2057: xor %eax,%eax;");
    asm("loc_65F2059: ret $0x10;");
    asm("loc_65F205C: or $0xFFFFFFFF,%eax;");
    asm("loc_65F205F: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2070() // _sub_65F2070
{
    __DEBUG_ASM(65F2070);
    // chunk 0x65F2070 _sub_65F2070
    asm("loc_65F2070: mov 8(%esp),%ecx;");
    asm("loc_65F2074: test %ecx,%ecx;");
    asm("loc_65F2076: jne loc_65F2084;");
    asm("loc_65F2078: mov 0x18(%esp),%eax;");
    asm("loc_65F207C: mov %ecx,(%eax);");
    asm("loc_65F207E: or $0xFFFFFFFF,%eax;");
    asm("loc_65F2081: ret $0x1C;");
    asm("loc_65F2084: mov 0x1C(%esp),%edx;");
    asm("loc_65F2088: mov 0x14(%esp),%eax;");
    asm("loc_65F208C: push %edx;");
    asm("loc_65F208D: mov 0x1C(%esp),%edx;");
    asm("loc_65F2091: push %eax;");
    asm("loc_65F2092: mov 0x14(%esp),%eax;");
    asm("loc_65F2096: push %edx;");
    asm("loc_65F2097: mov 0x1C(%esp),%edx;");
    asm("loc_65F209B: push %eax;");
    asm("loc_65F209C: push %edx;");
    asm("loc_65F209D: call _sub_65F4070;");
    asm("loc_65F20A2: xor %eax,%eax;");
    asm("loc_65F20A4: ret $0x1C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F20B0() // _sub_65F20B0
{
    __DEBUG_ASM(65F20B0);
    // chunk 0x65F20B0 _sub_65F20B0
    asm("loc_65F20B0: mov 8(%esp),%eax;");
    asm("loc_65F20B4: test %eax,%eax;");
    asm("loc_65F20B6: je loc_65F20E0;");
    asm("loc_65F20B8: mov 8(%eax),%eax;");
    asm("loc_65F20BB: test %eax,%eax;");
    asm("loc_65F20BD: jne loc_65F20CD;");
    asm("loc_65F20BF: mov 0xC(%esp),%edx;");
    asm("loc_65F20C3: or $0xFFFFFFFF,%eax;");
    asm("loc_65F20C6: mov %eax,(%edx);");
    asm("loc_65F20C8: xor %eax,%eax;");
    asm("loc_65F20CA: ret $0xC;");
    asm("loc_65F20CD: mov (%eax),%eax;");
    asm("loc_65F20CF: mov 4(%eax),%ecx;");
    asm("loc_65F20D2: mov 4(%ecx),%eax;");
    asm("loc_65F20D5: mov 0xC(%esp),%edx;");
    asm("loc_65F20D9: mov %eax,(%edx);");
    asm("loc_65F20DB: xor %eax,%eax;");
    asm("loc_65F20DD: ret $0xC;");
    asm("loc_65F20E0: mov 0xC(%esp),%eax;");
    asm("loc_65F20E4: movl $0xFFFFFFFF,(%eax);");
    asm("loc_65F20EA: or $0xFFFFFFFF,%eax;");
    asm("loc_65F20ED: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F20F0() // _sub_65F20F0
{
    __DEBUG_ASM(65F20F0);
    // chunk 0x65F20F0 _sub_65F20F0
    asm("loc_65F20F0: mov 8(%esp),%ecx;");
    asm("loc_65F20F4: test %ecx,%ecx;");
    asm("loc_65F20F6: je loc_65F2107;");
    asm("loc_65F20F8: mov 0xC(%esp),%eax;");
    asm("loc_65F20FC: push %eax;");
    asm("loc_65F20FD: call _sub_65F4F00;");
    asm("loc_65F2102: xor %eax,%eax;");
    asm("loc_65F2104: ret $0xC;");
    asm("loc_65F2107: or $0xFFFFFFFF,%eax;");
    asm("loc_65F210A: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2110() // _sub_65F2110
{
    __DEBUG_ASM(65F2110);
    // chunk 0x65F2110 _sub_65F2110
    asm("loc_65F2110: mov 8(%esp),%ecx;");
    asm("loc_65F2114: test %ecx,%ecx;");
    asm("loc_65F2116: je loc_65F2127;");
    asm("loc_65F2118: mov 0xC(%esp),%eax;");
    asm("loc_65F211C: push %eax;");
    asm("loc_65F211D: call _sub_65F5050;");
    asm("loc_65F2122: xor %eax,%eax;");
    asm("loc_65F2124: ret $0xC;");
    asm("loc_65F2127: or $0xFFFFFFFF,%eax;");
    asm("loc_65F212A: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2130() // _sub_65F2130
{
    __DEBUG_ASM(65F2130);
    // chunk 0x65F2130 _sub_65F2130
    asm("loc_65F2130: mov 8(%esp),%eax;");
    asm("loc_65F2134: test %eax,%eax;");
    asm("loc_65F2136: je loc_65F2146;");
    asm("loc_65F2138: mov 0x20(%eax),%eax;");
    asm("loc_65F213B: mov 0xC(%esp),%ecx;");
    asm("loc_65F213F: mov %eax,(%ecx);");
    asm("loc_65F2141: xor %eax,%eax;");
    asm("loc_65F2143: ret $0xC;");
    asm("loc_65F2146: or $0xFFFFFFFF,%eax;");
    asm("loc_65F2149: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2150() // _sub_65F2150
{
    __DEBUG_ASM(65F2150);
    // chunk 0x65F2150 _sub_65F2150
    asm("loc_65F2150: mov 8(%esp),%ecx;");
    asm("loc_65F2154: test %ecx,%ecx;");
    asm("loc_65F2156: je loc_65F2167;");
    asm("loc_65F2158: mov 0xC(%esp),%eax;");
    asm("loc_65F215C: push %eax;");
    asm("loc_65F215D: call _sub_65F50B0;");
    asm("loc_65F2162: xor %eax,%eax;");
    asm("loc_65F2164: ret $0xC;");
    asm("loc_65F2167: or $0xFFFFFFFF,%eax;");
    asm("loc_65F216A: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2170() // _sub_65F2170
{
    __DEBUG_ASM(65F2170);
    // chunk 0x65F2170 _sub_65F2170
    asm("loc_65F2170: mov 8(%esp),%ecx;");
    asm("loc_65F2174: test %ecx,%ecx;");
    asm("loc_65F2176: je loc_65F2188;");
    asm("loc_65F2178: call _sub_65F51D0;");
    asm("loc_65F217D: mov 0xC(%esp),%ecx;");
    asm("loc_65F2181: mov %eax,(%ecx);");
    asm("loc_65F2183: xor %eax,%eax;");
    asm("loc_65F2185: ret $0xC;");
    asm("loc_65F2188: mov 0xC(%esp),%edx;");
    asm("loc_65F218C: movl $0,(%edx);");
    asm("loc_65F2192: or $0xFFFFFFFF,%eax;");
    asm("loc_65F2195: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F21A0() // _sub_65F21A0
{
    __DEBUG_ASM(65F21A0);
    // chunk 0x65F21A0 _sub_65F21A0
    asm("loc_65F21A0: mov 8(%esp),%ecx;");
    asm("loc_65F21A4: test %ecx,%ecx;");
    asm("loc_65F21A6: je _sub_65F21BB;");
    asm("loc_65F21A8: mov 0xC(%esp),%eax;");
    asm("loc_65F21AC: test %eax,%eax;");
    asm("loc_65F21AE: je _sub_65F21BB;");
    asm("loc_65F21B0: push %eax;");
    asm("loc_65F21B1: call _sub_65F51E0;");
    asm("loc_65F21B6: xor %eax,%eax;");
    asm("loc_65F21B8: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F21BB() // ?seekoff@streambuf@@UAEJJW4seek_dir@ios@@H@Z_1
{
    __DEBUG_ASM(65F21BB);
    // chunk 0x65F21BB _sub_65F21BB
    asm("loc_65F21BB: or $0xFFFFFFFF,%eax;");
    asm("loc_65F21BE: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F21D0() // _sub_65F21D0
{
    __DEBUG_ASM(65F21D0);
    // chunk 0x65F21D0 _sub_65F21D0
    asm("loc_65F21D0: mov 8(%esp),%ecx;");
    asm("loc_65F21D4: or $0xFFFFFFFF,%eax;");
    asm("loc_65F21D7: test %ecx,%ecx;");
    asm("loc_65F21D9: je loc_65F21EC;");
    asm("loc_65F21DB: mov 0x10(%esp),%eax;");
    asm("loc_65F21DF: mov 0xC(%esp),%edx;");
    asm("loc_65F21E3: push %eax;");
    asm("loc_65F21E4: push %edx;");
    asm("loc_65F21E5: call _sub_65F59D0;");
    asm("loc_65F21EA: xor %eax,%eax;");
    asm("loc_65F21EC: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F21F0() // _sub_65F21F0
{
    __DEBUG_ASM(65F21F0);
    // chunk 0x65F21F0 _sub_65F21F0
    asm("loc_65F21F0: mov 8(%esp),%ecx;");
    asm("loc_65F21F4: push %esi;");
    asm("loc_65F21F5: or $0xFFFFFFFF,%esi;");
    asm("loc_65F21F8: test %ecx,%ecx;");
    asm("loc_65F21FA: je loc_65F2210;");
    asm("loc_65F21FC: mov 0x10(%esp),%eax;");
    asm("loc_65F2200: push %eax;");
    asm("loc_65F2201: call _sub_65F5AE0;");
    asm("loc_65F2206: test %al,%al;");
    asm("loc_65F2208: je loc_65F2210;");
    asm("loc_65F220A: xor %eax,%eax;");
    asm("loc_65F220C: pop %esi;");
    asm("loc_65F220D: ret $0xC;");
    asm("loc_65F2210: mov %esi,%eax;");
    asm("loc_65F2212: pop %esi;");
    asm("loc_65F2213: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2220() // _sub_65F2220
{
    __DEBUG_ASM(65F2220);
    // chunk 0x65F2220 _sub_65F2220
    asm("loc_65F2220: mov 8(%esp),%ecx;");
    asm("loc_65F2224: push %esi;");
    asm("loc_65F2225: or $0xFFFFFFFF,%esi;");
    asm("loc_65F2228: test %ecx,%ecx;");
    asm("loc_65F222A: je loc_65F2245;");
    asm("loc_65F222C: mov 0x14(%esp),%eax;");
    asm("loc_65F2230: mov 0x10(%esp),%edx;");
    asm("loc_65F2234: push %eax;");
    asm("loc_65F2235: push %edx;");
    asm("loc_65F2236: call _sub_65F5BC0;");
    asm("loc_65F223B: test %al,%al;");
    asm("loc_65F223D: je loc_65F2245;");
    asm("loc_65F223F: xor %eax,%eax;");
    asm("loc_65F2241: pop %esi;");
    asm("loc_65F2242: ret $0x10;");
    asm("loc_65F2245: mov %esi,%eax;");
    asm("loc_65F2247: pop %esi;");
    asm("loc_65F2248: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2250() // _DllMain@12
{
    __DEBUG_ASM(65F2250);
    // chunk 0x65F2250 _sub_65F2250
    asm("loc_65F2250: cmpl $1,8(%esp);");
    asm("loc_65F2255: jne loc_65F22B3;");
    asm("loc_65F2257: mov 4(%esp),%eax;");
    asm("loc_65F225B: push %esi;");
    asm("loc_65F225C: push %edi;");
    asm("loc_65F225D: push %eax;");
    asm("loc_65F225E: calll *_import_660101C;");
    asm("loc_65F2264: calll *_import_6601000;");
    asm("loc_65F226A: push $0xC;");
    asm("loc_65F226C: mov %eax,%edi;");
    asm("loc_65F226E: call _sub_6600BB6;");
    asm("loc_65F2273: add $4,%esp;");
    asm("loc_65F2276: test %eax,%eax;");
    asm("loc_65F2278: je loc_65F2292;");
    asm("loc_65F227A: movl $1,4(%eax);");
    asm("loc_65F2281: movl $_data_660216C,8(%eax);");
    asm("loc_65F2288: movl $_off_66011E4,(%eax);");
    asm("loc_65F228E: mov %eax,%esi;");
    asm("loc_65F2290: jmp loc_65F2294;");
    asm("loc_65F2292: xor %esi,%esi;");
    asm("loc_65F2294: mov (%edi),%ecx;");
    asm("loc_65F2296: push $0x80000000;");
    asm("loc_65F229B: push $_data_660216C;");
    asm("loc_65F22A0: push %esi;");
    asm("loc_65F22A1: push %edi;");
    asm("loc_65F22A2: calll *0x10(%ecx);");
    asm("loc_65F22A5: mov (%esi),%edx;");
    asm("loc_65F22A7: push %esi;");
    asm("loc_65F22A8: calll *8(%edx);");
    asm("loc_65F22AB: mov (%edi),%eax;");
    asm("loc_65F22AD: push %edi;");
    asm("loc_65F22AE: calll *8(%eax);");
    asm("loc_65F22B1: pop %edi;");
    asm("loc_65F22B2: pop %esi;");
    asm("loc_65F22B3: mov $1,%eax;");
    asm("loc_65F22B8: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F22C0() // _sub_65F22C0
{
    __DEBUG_ASM(65F22C0);
    // chunk 0x65F22C0 _sub_65F22C0
    asm("loc_65F22C0: mov 4(%esp),%ecx;");
    asm("loc_65F22C4: mov 4(%ecx),%eax;");
    asm("loc_65F22C7: test %eax,%eax;");
    asm("loc_65F22C9: jbe loc_65F22CF;");
    asm("loc_65F22CB: dec %eax;");
    asm("loc_65F22CC: mov %eax,4(%ecx);");
    asm("loc_65F22CF: mov 4(%ecx),%eax;");
    asm("loc_65F22D2: test %eax,%eax;");
    asm("loc_65F22D4: jne loc_65F22E8;");
    asm("loc_65F22D6: push %ecx;");
    asm("loc_65F22D7: movl $1,4(%ecx);");
    asm("loc_65F22DE: call _sub_6600BB0;");
    asm("loc_65F22E3: add $4,%esp;");
    asm("loc_65F22E6: xor %eax,%eax;");
    asm("loc_65F22E8: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F22F0() // _sub_65F22F0
{
    __DEBUG_ASM(65F22F0);
    // chunk 0x65F22F0 _sub_65F22F0
    asm("loc_65F22F0: push %ebp;");
    asm("loc_65F22F1: mov 0xC(%esp),%ebp;");
    asm("loc_65F22F5: mov (%ebp),%eax;");
    asm("loc_65F22F8: push %esi;");
    asm("loc_65F22F9: push %edi;");
    asm("loc_65F22FA: xor %edi,%edi;");
    asm("loc_65F22FC: cmp $0x18,%eax;");
    asm("loc_65F22FF: jne loc_65F23DF;");
    asm("loc_65F2305: mov 0x10(%esp),%eax;");
    asm("loc_65F2309: mov 8(%eax),%esi;");
    asm("loc_65F230C: mov 4(%ebp),%eax;");
    asm("loc_65F230F: push %ebx;");
    asm("loc_65F2310: mov (%eax),%dl;");
    asm("loc_65F2312: mov (%esi),%bl;");
    asm("loc_65F2314: mov %dl,%cl;");
    asm("loc_65F2316: cmp %bl,%dl;");
    asm("loc_65F2318: jne loc_65F2338;");
    asm("loc_65F231A: test %cl,%cl;");
    asm("loc_65F231C: je loc_65F2334;");
    asm("loc_65F231E: mov 1(%eax),%dl;");
    asm("loc_65F2321: mov 1(%esi),%bl;");
    asm("loc_65F2324: mov %dl,%cl;");
    asm("loc_65F2326: cmp %bl,%dl;");
    asm("loc_65F2328: jne loc_65F2338;");
    asm("loc_65F232A: add $2,%eax;");
    asm("loc_65F232D: add $2,%esi;");
    asm("loc_65F2330: test %cl,%cl;");
    asm("loc_65F2332: jne loc_65F2310;");
    asm("loc_65F2334: xor %eax,%eax;");
    asm("loc_65F2336: jmp loc_65F233D;");
    asm("loc_65F2338: sbb %eax,%eax;");
    asm("loc_65F233A: sbb $0xFFFFFFFF,%eax;");
    asm("loc_65F233D: test %eax,%eax;");
    asm("loc_65F233F: pop %ebx;");
    asm("loc_65F2340: jne loc_65F23DF;");
    asm("loc_65F2346: push $0x18;");
    asm("loc_65F2348: call _sub_6600BB6;");
    asm("loc_65F234D: mov %eax,%esi;");
    asm("loc_65F234F: add $4,%esp;");
    asm("loc_65F2352: test %esi,%esi;");
    asm("loc_65F2354: je loc_65F23CC;");
    asm("loc_65F2356: mov %esi,%ecx;");
    asm("loc_65F2358: call _sub_65F1810;");
    asm("loc_65F235D: lea 0xC(%esi),%eax;");
    asm("loc_65F2360: movl $_off_66012C4,(%eax);");
    asm("loc_65F2366: movl $1,4(%eax);");
    asm("loc_65F236D: mov %esi,8(%eax);");
    asm("loc_65F2370: movl $_off_6601228,(%esi);");
    asm("loc_65F2376: movl $_off_66011F4,4(%esi);");
    asm("loc_65F237D: mov 8(%ebp),%ecx;");
    asm("loc_65F2380: test %ecx,%ecx;");
    asm("loc_65F2382: mov %ecx,8(%esi);");
    asm("loc_65F2385: jne loc_65F23C5;");
    asm("loc_65F2387: mov %eax,8(%esi);");
    asm("loc_65F238A: push %ebp;");
    asm("loc_65F238B: mov %esi,%ecx;");
    asm("loc_65F238D: call _sub_65F1900;");
    asm("loc_65F2392: mov %eax,%edi;");
    asm("loc_65F2394: test %edi,%edi;");
    asm("loc_65F2396: je loc_65F23F0;");
    asm("loc_65F2398: mov 0xC(%ebp),%eax;");
    asm("loc_65F239B: test %eax,%eax;");
    asm("loc_65F239D: je loc_65F23A5;");
    asm("loc_65F239F: movl $0,(%eax);");
    asm("loc_65F23A5: mov %esi,%ecx;");
    asm("loc_65F23A7: call _sub_65F18D0;");
    asm("loc_65F23AC: push %esi;");
    asm("loc_65F23AD: call _sub_6600BB0;");
    asm("loc_65F23B2: mov 0x1C(%esp),%ecx;");
    asm("loc_65F23B6: add $4,%esp;");
    asm("loc_65F23B9: xor %eax,%eax;");
    asm("loc_65F23BB: mov %eax,(%ecx);");
    asm("loc_65F23BD: mov %edi,%eax;");
    asm("loc_65F23BF: pop %edi;");
    asm("loc_65F23C0: pop %esi;");
    asm("loc_65F23C1: pop %ebp;");
    asm("loc_65F23C2: ret $0xC;");
    asm("loc_65F23C5: mov 0xC(%ebp),%ecx;");
    asm("loc_65F23C8: mov %eax,(%ecx);");
    asm("loc_65F23CA: jmp loc_65F238A;");
    asm("loc_65F23CC: mov 0x18(%esp),%edx;");
    asm("loc_65F23D0: pop %edi;");
    asm("loc_65F23D1: xor %ecx,%ecx;");
    asm("loc_65F23D3: pop %esi;");
    asm("loc_65F23D4: mov $0xFFFFFFFC,%eax;");
    asm("loc_65F23D9: mov %ecx,(%edx);");
    asm("loc_65F23DB: pop %ebp;");
    asm("loc_65F23DC: ret $0xC;");
    asm("loc_65F23DF: mov 0x18(%esp),%edx;");
    asm("loc_65F23E3: mov %edi,(%edx);");
    asm("loc_65F23E5: pop %edi;");
    asm("loc_65F23E6: pop %esi;");
    asm("loc_65F23E7: mov $0xFFFFFFFD,%eax;");
    asm("loc_65F23EC: pop %ebp;");
    asm("loc_65F23ED: ret $0xC;");
    asm("loc_65F23F0: mov 0x18(%esp),%eax;");
    asm("loc_65F23F4: mov %esi,(%eax);");
    asm("loc_65F23F6: mov %edi,%eax;");
    asm("loc_65F23F8: pop %edi;");
    asm("loc_65F23F9: pop %esi;");
    asm("loc_65F23FA: pop %ebp;");
    asm("loc_65F23FB: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2400() // _sub_65F2400
{
    __DEBUG_ASM(65F2400);
    // chunk 0x65F2400 _sub_65F2400
    asm("loc_65F2400: mov _off_66012D0,%eax;");
    asm("loc_65F2405: push %ebx;");
    asm("loc_65F2406: push %ebp;");
    asm("loc_65F2407: push %esi;");
    asm("loc_65F2408: push %edi;");
    asm("loc_65F2409: xor %edi,%edi;");
    asm("loc_65F240B: test %eax,%eax;");
    asm("loc_65F240D: je loc_65F2452;");
    asm("loc_65F240F: mov 0x18(%esp),%ebp;");
    asm("loc_65F2413: mov %ebp,%esi;");
    asm("loc_65F2415: mov (%eax),%dl;");
    asm("loc_65F2417: mov (%esi),%bl;");
    asm("loc_65F2419: mov %dl,%cl;");
    asm("loc_65F241B: cmp %bl,%dl;");
    asm("loc_65F241D: jne loc_65F243D;");
    asm("loc_65F241F: test %cl,%cl;");
    asm("loc_65F2421: je loc_65F2439;");
    asm("loc_65F2423: mov 1(%eax),%dl;");
    asm("loc_65F2426: mov 1(%esi),%bl;");
    asm("loc_65F2429: mov %dl,%cl;");
    asm("loc_65F242B: cmp %bl,%dl;");
    asm("loc_65F242D: jne loc_65F243D;");
    asm("loc_65F242F: add $2,%eax;");
    asm("loc_65F2432: add $2,%esi;");
    asm("loc_65F2435: test %cl,%cl;");
    asm("loc_65F2437: jne loc_65F2415;");
    asm("loc_65F2439: xor %eax,%eax;");
    asm("loc_65F243B: jmp loc_65F2442;");
    asm("loc_65F243D: sbb %eax,%eax;");
    asm("loc_65F243F: sbb $0xFFFFFFFF,%eax;");
    asm("loc_65F2442: test %eax,%eax;");
    asm("loc_65F2444: je loc_65F2468;");
    asm("loc_65F2446: mov _off_66012D8(,%edi,8),%eax;");
    asm("loc_65F244D: inc %edi;");
    asm("loc_65F244E: test %eax,%eax;");
    asm("loc_65F2450: jne loc_65F2413;");
    asm("loc_65F2452: mov 0x1C(%esp),%ecx;");
    asm("loc_65F2456: pop %edi;");
    asm("loc_65F2457: pop %esi;");
    asm("loc_65F2458: pop %ebp;");
    asm("loc_65F2459: movl $0,(%ecx);");
    asm("loc_65F245F: mov $0xFFFFFFFD,%eax;");
    asm("loc_65F2464: pop %ebx;");
    asm("loc_65F2465: ret $0xC;");
    asm("loc_65F2468: mov _data_66012D4(,%edi,8),%eax;");
    asm("loc_65F246F: test %eax,%eax;");
    asm("loc_65F2471: mov 0x14(%esp),%ecx;");
    asm("loc_65F2475: jns loc_65F2497;");
    asm("loc_65F2477: mov 8(%ecx),%edx;");
    asm("loc_65F247A: and $0x7FFFFFFF,%eax;");
    asm("loc_65F247F: mov (%eax,%edx),%esi;");
    asm("loc_65F2482: mov (%esi),%edx;");
    asm("loc_65F2484: push %esi;");
    asm("loc_65F2485: calll *4(%edx);");
    asm("loc_65F2488: mov 0x1C(%esp),%eax;");
    asm("loc_65F248C: pop %edi;");
    asm("loc_65F248D: mov %esi,(%eax);");
    asm("loc_65F248F: pop %esi;");
    asm("loc_65F2490: pop %ebp;");
    asm("loc_65F2491: xor %eax,%eax;");
    asm("loc_65F2493: pop %ebx;");
    asm("loc_65F2494: ret $0xC;");
    asm("loc_65F2497: mov 8(%ecx),%esi;");
    asm("loc_65F249A: mov (%esi,%eax),%edx;");
    asm("loc_65F249D: add %eax,%esi;");
    asm("loc_65F249F: push %esi;");
    asm("loc_65F24A0: calll *4(%edx);");
    asm("loc_65F24A3: mov 0x1C(%esp),%eax;");
    asm("loc_65F24A7: pop %edi;");
    asm("loc_65F24A8: mov %esi,(%eax);");
    asm("loc_65F24AA: pop %esi;");
    asm("loc_65F24AB: pop %ebp;");
    asm("loc_65F24AC: xor %eax,%eax;");
    asm("loc_65F24AE: pop %ebx;");
    asm("loc_65F24AF: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F24C0() // _sub_65F24C0
{
    __DEBUG_ASM(65F24C0);
    // chunk 0x65F24C0 _sub_65F24C0
    asm("loc_65F24C0: mov 4(%esp),%ecx;");
    asm("loc_65F24C4: mov 4(%ecx),%eax;");
    asm("loc_65F24C7: test %eax,%eax;");
    asm("loc_65F24C9: jbe loc_65F24CF;");
    asm("loc_65F24CB: dec %eax;");
    asm("loc_65F24CC: mov %eax,4(%ecx);");
    asm("loc_65F24CF: mov 4(%ecx),%eax;");
    asm("loc_65F24D2: test %eax,%eax;");
    asm("loc_65F24D4: jne loc_65F24F8;");
    asm("loc_65F24D6: push %esi;");
    asm("loc_65F24D7: mov 8(%ecx),%esi;");
    asm("loc_65F24DA: test %esi,%esi;");
    asm("loc_65F24DC: movl $1,4(%ecx);");
    asm("loc_65F24E3: je loc_65F24F5;");
    asm("loc_65F24E5: mov %esi,%ecx;");
    asm("loc_65F24E7: call _sub_65F18D0;");
    asm("loc_65F24EC: push %esi;");
    asm("loc_65F24ED: call _sub_6600BB0;");
    asm("loc_65F24F2: add $4,%esp;");
    asm("loc_65F24F5: xor %eax,%eax;");
    asm("loc_65F24F7: pop %esi;");
    asm("loc_65F24F8: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2500() // _sub_65F2500
{
    __DEBUG_ASM(65F2500);
    // chunk 0x65F2500 _sub_65F2500
    asm("loc_65F2500: mov 4(%esp),%eax;");
    asm("loc_65F2504: mov 8(%eax),%eax;");
    asm("loc_65F2507: mov (%eax),%ecx;");
    asm("loc_65F2509: mov %eax,4(%esp);");
    asm("loc_65F250D: jmpl *(%ecx);");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2510() // _sub_65F2510
{
    __DEBUG_ASM(65F2510);
    // chunk 0x65F2510 _sub_65F2510
    asm("loc_65F2510: mov 4(%esp),%eax;");
    asm("loc_65F2514: mov 8(%eax),%eax;");
    asm("loc_65F2517: mov (%eax),%ecx;");
    asm("loc_65F2519: mov %eax,4(%esp);");
    asm("loc_65F251D: jmpl *4(%ecx);");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2520() // _sub_65F2520
{
    __DEBUG_ASM(65F2520);
    // chunk 0x65F2520 _sub_65F2520
    asm("loc_65F2520: mov 4(%esp),%eax;");
    asm("loc_65F2524: mov 8(%eax),%eax;");
    asm("loc_65F2527: mov (%eax),%ecx;");
    asm("loc_65F2529: mov %eax,4(%esp);");
    asm("loc_65F252D: jmpl *8(%ecx);");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2530() // _sub_65F2530
{
    __DEBUG_ASM(65F2530);
    // chunk 0x65F2530 _sub_65F2530
    asm("loc_65F2530: subl $4,4(%esp);");
    asm("loc_65F2535: jmp _sub_65F2500;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2540() // _sub_65F2540
{
    __DEBUG_ASM(65F2540);
    // chunk 0x65F2540 _sub_65F2540
    asm("loc_65F2540: subl $4,4(%esp);");
    asm("loc_65F2545: jmp _sub_65F2510;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2550() // _sub_65F2550
{
    __DEBUG_ASM(65F2550);
    // chunk 0x65F2550 _sub_65F2550
    asm("loc_65F2550: subl $4,4(%esp);");
    asm("loc_65F2555: jmp _sub_65F2520;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2560() // _sub_65F2560
{
    __DEBUG_ASM(65F2560);
    // chunk 0x65F2560 _sub_65F2560
    asm("loc_65F2560: call _sub_65F2570;");
    asm("loc_65F2565: jmp loc_65F25F0;");
    // chunk 0x65F25F0 _sub_65F25F0
    asm("loc_65F25F0: push $_sub_65F2600;");
    asm("loc_65F25F5: call _sub_6600BEE;");
    asm("loc_65F25FA: pop %ecx;");
    asm("loc_65F25FB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2570() // _sub_65F2570
{
    __DEBUG_ASM(65F2570);
    // chunk 0x65F2570 _sub_65F2570
    asm("loc_65F2570: push %ecx;");
    asm("loc_65F2571: mov 3(%esp),%al;");
    asm("loc_65F2575: mov 3(%esp),%cl;");
    asm("loc_65F2579: push %ebx;");
    asm("loc_65F257A: push %esi;");
    asm("loc_65F257B: xor %ebx,%ebx;");
    asm("loc_65F257D: push $0x18;");
    asm("loc_65F257F: mov %al,_data_6603158;");
    asm("loc_65F2584: mov %cl,_data_6603159;");
    asm("loc_65F258A: mov %bl,_data_6603164;");
    asm("loc_65F2590: call _sub_6600BB6;");
    asm("loc_65F2595: mov %ebx,4(%eax);");
    asm("loc_65F2598: mov %bl,0x15(%eax);");
    asm("loc_65F259B: mov $1,%cl;");
    asm("loc_65F259D: mov %cl,0x14(%eax);");
    asm("loc_65F25A0: mov %eax,_data_6603160;");
    asm("loc_65F25A5: mov %cl,0x15(%eax);");
    asm("loc_65F25A8: mov _data_6603160,%edx;");
    asm("loc_65F25AE: mov %ebx,(%edx);");
    asm("loc_65F25B0: mov _data_6603160,%eax;");
    asm("loc_65F25B5: mov %ebx,8(%eax);");
    asm("loc_65F25B8: mov _data_6603160,%esi;");
    asm("loc_65F25BE: push $0x18;");
    asm("loc_65F25C0: call _sub_6600BB6;");
    asm("loc_65F25C5: mov %esi,4(%eax);");
    asm("loc_65F25C8: mov %bl,0x14(%eax);");
    asm("loc_65F25CB: mov %bl,0x15(%eax);");
    asm("loc_65F25CE: mov %eax,_data_660315C;");
    asm("loc_65F25D3: mov %eax,(%eax);");
    asm("loc_65F25D5: mov _data_660315C,%eax;");
    asm("loc_65F25DA: add $8,%esp;");
    asm("loc_65F25DD: mov %eax,8(%eax);");
    asm("loc_65F25E0: pop %esi;");
    asm("loc_65F25E1: mov %ebx,_data_6603168;");
    asm("loc_65F25E7: pop %ebx;");
    asm("loc_65F25E8: pop %ecx;");
    asm("loc_65F25E9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2600() // _sub_65F2600
{
    __DEBUG_ASM(65F2600);
    // chunk 0x65F2600 _sub_65F2600
    asm("loc_65F2600: sub $0xC,%esp;");
    asm("loc_65F2603: mov _data_660315C,%eax;");
    asm("loc_65F2608: mov _data_6603168,%edx;");
    asm("loc_65F260E: mov (%eax),%ecx;");
    asm("loc_65F2610: push %ebx;");
    asm("loc_65F2611: push %esi;");
    asm("loc_65F2612: xor %ebx,%ebx;");
    asm("loc_65F2614: cmp %ebx,%edx;");
    asm("loc_65F2616: push %edi;");
    asm("loc_65F2617: mov %eax,%edi;");
    asm("loc_65F2619: mov %ecx,0xC(%esp);");
    asm("loc_65F261D: je loc_65F2687;");
    asm("loc_65F261F: mov %ecx,%edx;");
    asm("loc_65F2621: cmp %edx,%ecx;");
    asm("loc_65F2623: jne loc_65F2687;");
    asm("loc_65F2625: mov 4(%eax),%edi;");
    asm("loc_65F2628: mov _data_6603160,%ecx;");
    asm("loc_65F262E: cmp %ecx,%edi;");
    asm("loc_65F2630: mov %edi,%esi;");
    asm("loc_65F2632: je loc_65F265E;");
    asm("loc_65F2634: mov 8(%esi),%eax;");
    asm("loc_65F2637: push %eax;");
    asm("loc_65F2638: mov $_data_6603158,%ecx;");
    asm("loc_65F263D: call _sub_65F3090;");
    asm("loc_65F2642: mov (%esi),%esi;");
    asm("loc_65F2644: push %edi;");
    asm("loc_65F2645: call _sub_6600BB0;");
    asm("loc_65F264A: mov _data_6603160,%ecx;");
    asm("loc_65F2650: add $4,%esp;");
    asm("loc_65F2653: cmp %ecx,%esi;");
    asm("loc_65F2655: mov %esi,%edi;");
    asm("loc_65F2657: jne loc_65F2634;");
    asm("loc_65F2659: mov _data_660315C,%eax;");
    asm("loc_65F265E: mov %ecx,4(%eax);");
    asm("loc_65F2661: mov _data_660315C,%eax;");
    asm("loc_65F2666: mov %ebx,_data_6603168;");
    asm("loc_65F266C: mov %eax,(%eax);");
    asm("loc_65F266E: mov _data_660315C,%eax;");
    asm("loc_65F2673: lea 0x10(%esp),%ecx;");
    asm("loc_65F2677: push %ecx;");
    asm("loc_65F2678: mov $_data_6603158,%ecx;");
    asm("loc_65F267D: mov %eax,8(%eax);");
    asm("loc_65F2680: call _sub_65F2A30;");
    asm("loc_65F2685: jmp loc_65F26B3;");
    asm("loc_65F2687: cmp %eax,%ecx;");
    asm("loc_65F2689: je loc_65F26B8;");
    asm("loc_65F268B: nop;");
    asm("loc_65F268C: lea (%esp),%esp;");
    asm("loc_65F2690: mov %ecx,%esi;");
    asm("loc_65F2692: lea 0xC(%esp),%ecx;");
    asm("loc_65F2696: call _sub_65F34D0;");
    asm("loc_65F269B: push %esi;");
    asm("loc_65F269C: lea 0x18(%esp),%edx;");
    asm("loc_65F26A0: push %edx;");
    asm("loc_65F26A1: mov $_data_6603158,%ecx;");
    asm("loc_65F26A6: call _sub_65F2CC0;");
    asm("loc_65F26AB: mov 0xC(%esp),%ecx;");
    asm("loc_65F26AF: cmp %edi,%ecx;");
    asm("loc_65F26B1: jne loc_65F2690;");
    asm("loc_65F26B3: mov _data_660315C,%eax;");
    asm("loc_65F26B8: push %eax;");
    asm("loc_65F26B9: call _sub_6600BB0;");
    asm("loc_65F26BE: mov _data_6603160,%eax;");
    asm("loc_65F26C3: push %eax;");
    asm("loc_65F26C4: mov %ebx,_data_660315C;");
    asm("loc_65F26CA: mov %ebx,_data_6603168;");
    asm("loc_65F26D0: call _sub_6600BB0;");
    asm("loc_65F26D5: add $8,%esp;");
    asm("loc_65F26D8: pop %edi;");
    asm("loc_65F26D9: pop %esi;");
    asm("loc_65F26DA: mov %ebx,_data_6603160;");
    asm("loc_65F26E0: pop %ebx;");
    asm("loc_65F26E1: add $0xC,%esp;");
    asm("loc_65F26E4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F26F0() // _sub_65F26F0
{
    __DEBUG_ASM(65F26F0);
    // chunk 0x65F26F0 _sub_65F26F0
    asm("loc_65F26F0: mov $0x2018,%eax;");
    asm("loc_65F26F5: call _sub_6600C00;");
    asm("loc_65F26FA: push %ebx;");
    asm("loc_65F26FB: push %esi;");
    asm("loc_65F26FC: mov 0x202C(%esp),%esi;");
    asm("loc_65F2703: push %esi;");
    asm("loc_65F2704: xor %ebx,%ebx;");
    asm("loc_65F2706: calll *_import_660100C;");
    asm("loc_65F270C: add $4,%esp;");
    asm("loc_65F270F: mov %eax,0x18(%esp);");
    asm("loc_65F2713: mov %eax,8(%esp);");
    asm("loc_65F2717: lea 8(%esp),%eax;");
    asm("loc_65F271B: push %eax;");
    asm("loc_65F271C: lea 0x20(%esp),%ecx;");
    asm("loc_65F2720: push %ecx;");
    asm("loc_65F2721: mov $_data_6603158,%ecx;");
    asm("loc_65F2726: call _sub_65F2A40;");
    asm("loc_65F272B: mov 0x1C(%esp),%eax;");
    asm("loc_65F272F: cmp _data_660315C,%eax;");
    asm("loc_65F2735: je loc_65F274C;");
    asm("loc_65F2737: mov 0x10(%eax),%esi;");
    asm("loc_65F273A: mov %esi,%ecx;");
    asm("loc_65F273C: call _sub_65F28E0;");
    asm("loc_65F2741: mov %esi,%eax;");
    asm("loc_65F2743: pop %esi;");
    asm("loc_65F2744: pop %ebx;");
    asm("loc_65F2745: add $0x2018,%esp;");
    asm("loc_65F274B: ret;");
    asm("loc_65F274C: push %edi;");
    asm("loc_65F274D: push $1;");
    asm("loc_65F274F: push $0x84;");
    asm("loc_65F2754: calll *_import_6601040;");
    asm("loc_65F275A: add $8,%esp;");
    asm("loc_65F275D: test %eax,%eax;");
    asm("loc_65F275F: je loc_65F276D;");
    asm("loc_65F2761: push %esi;");
    asm("loc_65F2762: mov %eax,%ecx;");
    asm("loc_65F2764: call _sub_65F8B00;");
    asm("loc_65F2769: mov %eax,%edi;");
    asm("loc_65F276B: jmp loc_65F276F;");
    asm("loc_65F276D: xor %edi,%edi;");
    asm("loc_65F276F: mov 0x202C(%esp),%edx;");
    asm("loc_65F2776: mov 0x2028(%esp),%eax;");
    asm("loc_65F277D: push %edx;");
    asm("loc_65F277E: push %eax;");
    asm("loc_65F277F: mov %edi,%ecx;");
    asm("loc_65F2781: call _sub_65F89E0;");
    asm("loc_65F2786: test %al,%al;");
    asm("loc_65F2788: je loc_65F279B;");
    asm("loc_65F278A: mov 0x2034(%esp),%cl;");
    asm("loc_65F2791: mov %edi,%ebx;");
    asm("loc_65F2793: mov %cl,0x70(%edi);");
    asm("loc_65F2796: jmp loc_65F282E;");
    asm("loc_65F279B: mov %edi,%ecx;");
    asm("loc_65F279D: call _sub_65F28F0;");
    asm("loc_65F27A2: push %esi;");
    asm("loc_65F27A3: mov %esi,0x14(%esp);");
    asm("loc_65F27A7: calll *_import_660100C;");
    asm("loc_65F27AD: mov 0x2030(%esp),%ecx;");
    asm("loc_65F27B4: add $4,%esp;");
    asm("loc_65F27B7: push %ecx;");
    asm("loc_65F27B8: mov %eax,0x18(%esp);");
    asm("loc_65F27BC: mov _data_6603134,%eax;");
    asm("loc_65F27C1: mov (%eax),%edx;");
    asm("loc_65F27C3: lea 0x14(%esp),%ecx;");
    asm("loc_65F27C7: push %ecx;");
    asm("loc_65F27C8: push %eax;");
    asm("loc_65F27C9: calll *0x30(%edx);");
    asm("loc_65F27CC: lea 0xC(%esp),%ecx;");
    asm("loc_65F27D0: push %ecx;");
    asm("loc_65F27D1: mov %eax,%edi;");
    asm("loc_65F27D3: mov _data_6603134,%eax;");
    asm("loc_65F27D8: push $_data_6602558;");
    asm("loc_65F27DD: push %edi;");
    asm("loc_65F27DE: movl $0,0x18(%esp);");
    asm("loc_65F27E6: mov (%eax),%edx;");
    asm("loc_65F27E8: push %eax;");
    asm("loc_65F27E9: calll *0x48(%edx);");
    asm("loc_65F27EC: test %eax,%eax;");
    asm("loc_65F27EE: jge loc_65F27FE;");
    asm("loc_65F27F0: mov _data_6603134,%eax;");
    asm("loc_65F27F5: mov (%eax),%edx;");
    asm("loc_65F27F7: push %edi;");
    asm("loc_65F27F8: push %eax;");
    asm("loc_65F27F9: calll *0x3C(%edx);");
    asm("loc_65F27FC: jmp loc_65F2820;");
    asm("loc_65F27FE: push $0x14;");
    asm("loc_65F2800: call _sub_6600BB6;");
    asm("loc_65F2805: add $4,%esp;");
    asm("loc_65F2808: test %eax,%eax;");
    asm("loc_65F280A: je loc_65F281C;");
    asm("loc_65F280C: mov 0xC(%esp),%ecx;");
    asm("loc_65F2810: push %ecx;");
    asm("loc_65F2811: push %edi;");
    asm("loc_65F2812: push %esi;");
    asm("loc_65F2813: mov %eax,%ecx;");
    asm("loc_65F2815: call _sub_65FDCC0;");
    asm("loc_65F281A: jmp loc_65F281E;");
    asm("loc_65F281C: xor %eax,%eax;");
    asm("loc_65F281E: mov %eax,%ebx;");
    asm("loc_65F2820: mov 0xC(%esp),%eax;");
    asm("loc_65F2824: test %eax,%eax;");
    asm("loc_65F2826: je loc_65F282E;");
    asm("loc_65F2828: mov (%eax),%edx;");
    asm("loc_65F282A: push %eax;");
    asm("loc_65F282B: calll *8(%edx);");
    asm("loc_65F282E: test %ebx,%ebx;");
    asm("loc_65F2830: pop %edi;");
    asm("loc_65F2831: jne loc_65F286C;");
    asm("loc_65F2833: push %esi;");
    asm("loc_65F2834: lea 0x24(%esp),%eax;");
    asm("loc_65F2838: push $_data_6602534;");
    asm("loc_65F283D: push %eax;");
    asm("loc_65F283E: call _sub_65F28B0;");
    asm("loc_65F2843: push %eax;");
    asm("loc_65F2844: push $0x39;");
    asm("loc_65F2846: push $_data_66024E8;");
    asm("loc_65F284B: mov $0x100002,%ecx;");
    asm("loc_65F2850: push $_data_66024C8;");
    asm("loc_65F2855: push %ecx;");
    asm("loc_65F2856: mov _import_6601008,%ecx;");
    asm("loc_65F285C: calll *(%ecx);");
    asm("loc_65F285E: add $0x20,%esp;");
    asm("loc_65F2861: pop %esi;");
    asm("loc_65F2862: mov %ebx,%eax;");
    asm("loc_65F2864: pop %ebx;");
    asm("loc_65F2865: add $0x2018,%esp;");
    asm("loc_65F286B: ret;");
    asm("loc_65F286C: mov 0x18(%esp),%edx;");
    asm("loc_65F2870: lea 0xC(%esp),%eax;");
    asm("loc_65F2874: push %eax;");
    asm("loc_65F2875: lea 0x18(%esp),%ecx;");
    asm("loc_65F2879: push %ecx;");
    asm("loc_65F287A: mov $_data_6603158,%ecx;");
    asm("loc_65F287F: mov %edx,0x14(%esp);");
    asm("loc_65F2883: movl $0,0x18(%esp);");
    asm("loc_65F288B: call _sub_65F2AB0;");
    asm("loc_65F2890: mov 0x14(%esp),%edx;");
    asm("loc_65F2894: pop %esi;");
    asm("loc_65F2895: mov %ebx,0x10(%edx);");
    asm("loc_65F2898: mov %ebx,%eax;");
    asm("loc_65F289A: pop %ebx;");
    asm("loc_65F289B: add $0x2018,%esp;");
    asm("loc_65F28A1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F28B0() // _sub_65F28B0
{
    __DEBUG_ASM(65F28B0);
    // chunk 0x65F28B0 _sub_65F28B0
    asm("loc_65F28B0: mov 8(%esp),%ecx;");
    asm("loc_65F28B4: push %esi;");
    asm("loc_65F28B5: mov 8(%esp),%esi;");
    asm("loc_65F28B9: lea 0x10(%esp),%eax;");
    asm("loc_65F28BD: push %eax;");
    asm("loc_65F28BE: push %ecx;");
    asm("loc_65F28BF: push $0x2000;");
    asm("loc_65F28C4: push %esi;");
    asm("loc_65F28C5: calll *_import_6601044;");
    asm("loc_65F28CB: add $0x10,%esp;");
    asm("loc_65F28CE: mov %esi,%eax;");
    asm("loc_65F28D0: pop %esi;");
    asm("loc_65F28D1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F28E0() // _sub_65F28E0
{
    __DEBUG_ASM(65F28E0);
    // chunk 0x65F28E0 _sub_65F28E0
    asm("loc_65F28E0: mov 4(%ecx),%eax;");
    asm("loc_65F28E3: inc %eax;");
    asm("loc_65F28E4: mov %eax,4(%ecx);");
    asm("loc_65F28E7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F28F0() // _sub_65F28F0
{
    __DEBUG_ASM(65F28F0);
    // chunk 0x65F28F0 _sub_65F28F0
    asm("loc_65F28F0: sub $8,%esp;");
    asm("loc_65F28F3: push %ebx;");
    asm("loc_65F28F4: mov %ecx,%ebx;");
    asm("loc_65F28F6: mov 4(%ebx),%ecx;");
    asm("loc_65F28F9: dec %ecx;");
    asm("loc_65F28FA: push %ebp;");
    asm("loc_65F28FB: mov %ecx,%ebp;");
    asm("loc_65F28FD: test %ebp,%ebp;");
    asm("loc_65F28FF: mov %ecx,4(%ebx);");
    asm("loc_65F2902: jg loc_65F2A1C;");
    asm("loc_65F2908: push %esi;");
    asm("loc_65F2909: push %edi;");
    asm("loc_65F290A: lea 8(%ebx),%esi;");
    asm("loc_65F290D: push %esi;");
    asm("loc_65F290E: mov $_data_6603158,%ecx;");
    asm("loc_65F2913: call _sub_65F3440;");
    asm("loc_65F2918: push %esi;");
    asm("loc_65F2919: mov $_data_6603158,%ecx;");
    asm("loc_65F291E: mov %eax,%edi;");
    asm("loc_65F2920: call _sub_65F3320;");
    asm("loc_65F2925: mov %eax,%esi;");
    asm("loc_65F2927: cmp %edi,%esi;");
    asm("loc_65F2929: je loc_65F2965;");
    asm("loc_65F292B: nop;");
    asm("loc_65F292C: lea (%esp),%esp;");
    asm("loc_65F2930: mov 8(%eax),%ecx;");
    asm("loc_65F2933: mov 0x15(%ecx),%dl;");
    asm("loc_65F2936: test %dl,%dl;");
    asm("loc_65F2938: jne loc_65F2945;");
    asm("loc_65F293A: push %ecx;");
    asm("loc_65F293B: call _sub_65F33A0;");
    asm("loc_65F2940: add $4,%esp;");
    asm("loc_65F2943: jmp loc_65F2961;");
    asm("loc_65F2945: mov 4(%eax),%ecx;");
    asm("loc_65F2948: cmp 8(%ecx),%eax;");
    asm("loc_65F294B: jne loc_65F295A;");
    asm("loc_65F294D: lea (%ecx),%ecx;");
    asm("loc_65F2950: mov %ecx,%eax;");
    asm("loc_65F2952: mov 4(%ecx),%ecx;");
    asm("loc_65F2955: cmp 8(%ecx),%eax;");
    asm("loc_65F2958: je loc_65F2950;");
    asm("loc_65F295A: cmp %ecx,8(%eax);");
    asm("loc_65F295D: je loc_65F2961;");
    asm("loc_65F295F: mov %ecx,%eax;");
    asm("loc_65F2961: cmp %edi,%eax;");
    asm("loc_65F2963: jne loc_65F2930;");
    asm("loc_65F2965: mov _data_6603168,%eax;");
    asm("loc_65F296A: test %eax,%eax;");
    asm("loc_65F296C: mov %esi,0x10(%esp);");
    asm("loc_65F2970: je loc_65F29E9;");
    asm("loc_65F2972: mov _data_660315C,%ecx;");
    asm("loc_65F2978: cmp (%ecx),%esi;");
    asm("loc_65F297A: jne loc_65F29E9;");
    asm("loc_65F297C: cmp %ecx,%edi;");
    asm("loc_65F297E: jne loc_65F29E9;");
    asm("loc_65F2980: mov 4(%ecx),%edi;");
    asm("loc_65F2983: mov _data_6603160,%eax;");
    asm("loc_65F2988: cmp %eax,%edi;");
    asm("loc_65F298A: mov %edi,%esi;");
    asm("loc_65F298C: je loc_65F29BA;");
    asm("loc_65F298E: mov %edi,%edi;");
    asm("loc_65F2990: mov 8(%esi),%eax;");
    asm("loc_65F2993: push %eax;");
    asm("loc_65F2994: mov $_data_6603158,%ecx;");
    asm("loc_65F2999: call _sub_65F3090;");
    asm("loc_65F299E: mov (%esi),%esi;");
    asm("loc_65F29A0: push %edi;");
    asm("loc_65F29A1: call _sub_6600BB0;");
    asm("loc_65F29A6: mov _data_6603160,%eax;");
    asm("loc_65F29AB: add $4,%esp;");
    asm("loc_65F29AE: cmp %eax,%esi;");
    asm("loc_65F29B0: mov %esi,%edi;");
    asm("loc_65F29B2: jne loc_65F2990;");
    asm("loc_65F29B4: mov _data_660315C,%ecx;");
    asm("loc_65F29BA: mov %eax,4(%ecx);");
    asm("loc_65F29BD: mov _data_660315C,%eax;");
    asm("loc_65F29C2: movl $0,_data_6603168;");
    asm("loc_65F29CC: mov %eax,(%eax);");
    asm("loc_65F29CE: mov _data_660315C,%eax;");
    asm("loc_65F29D3: mov %eax,8(%eax);");
    asm("loc_65F29D6: mov (%ebx),%edx;");
    asm("loc_65F29D8: push $1;");
    asm("loc_65F29DA: mov %ebx,%ecx;");
    asm("loc_65F29DC: calll *0x18(%edx);");
    asm("loc_65F29DF: pop %edi;");
    asm("loc_65F29E0: pop %esi;");
    asm("loc_65F29E1: mov %ebp,%eax;");
    asm("loc_65F29E3: pop %ebp;");
    asm("loc_65F29E4: pop %ebx;");
    asm("loc_65F29E5: add $8,%esp;");
    asm("loc_65F29E8: ret;");
    asm("loc_65F29E9: cmp %edi,%esi;");
    asm("loc_65F29EB: je loc_65F2A11;");
    asm("loc_65F29ED: lea (%ecx),%ecx;");
    asm("loc_65F29F0: lea 0x10(%esp),%ecx;");
    asm("loc_65F29F4: call _sub_65F34D0;");
    asm("loc_65F29F9: push %esi;");
    asm("loc_65F29FA: lea 0x18(%esp),%ecx;");
    asm("loc_65F29FE: push %ecx;");
    asm("loc_65F29FF: mov $_data_6603158,%ecx;");
    asm("loc_65F2A04: call _sub_65F2CC0;");
    asm("loc_65F2A09: mov 0x10(%esp),%esi;");
    asm("loc_65F2A0D: cmp %edi,%esi;");
    asm("loc_65F2A0F: jne loc_65F29F0;");
    asm("loc_65F2A11: mov (%ebx),%edx;");
    asm("loc_65F2A13: push $1;");
    asm("loc_65F2A15: mov %ebx,%ecx;");
    asm("loc_65F2A17: calll *0x18(%edx);");
    asm("loc_65F2A1A: pop %edi;");
    asm("loc_65F2A1B: pop %esi;");
    asm("loc_65F2A1C: mov %ebp,%eax;");
    asm("loc_65F2A1E: pop %ebp;");
    asm("loc_65F2A1F: pop %ebx;");
    asm("loc_65F2A20: add $8,%esp;");
    asm("loc_65F2A23: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2A30() // _sub_65F2A30
{
    __DEBUG_ASM(65F2A30);
    // chunk 0x65F2A30 _sub_65F2A30
    asm("loc_65F2A30: mov 4(%ecx),%eax;");
    asm("loc_65F2A33: mov (%eax),%ecx;");
    asm("loc_65F2A35: mov 4(%esp),%eax;");
    asm("loc_65F2A39: mov %ecx,(%eax);");
    asm("loc_65F2A3B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2A40() // _sub_65F2A40
{
    __DEBUG_ASM(65F2A40);
    // chunk 0x65F2A40 _sub_65F2A40
    asm("loc_65F2A40: push %ecx;");
    asm("loc_65F2A41: mov 4(%ecx),%edx;");
    asm("loc_65F2A44: mov 4(%edx),%eax;");
    asm("loc_65F2A47: mov 8(%ecx),%ecx;");
    asm("loc_65F2A4A: cmp %ecx,%eax;");
    asm("loc_65F2A4C: push %ebx;");
    asm("loc_65F2A4D: mov 0x10(%esp),%ebx;");
    asm("loc_65F2A51: push %esi;");
    asm("loc_65F2A52: mov %edx,%esi;");
    asm("loc_65F2A54: je loc_65F2A73;");
    asm("loc_65F2A56: push %edi;");
    asm("loc_65F2A57: mov (%ebx),%edi;");
    asm("loc_65F2A59: lea (%esp),%esp;");
    asm("loc_65F2A60: cmp %edi,0xC(%eax);");
    asm("loc_65F2A63: jae loc_65F2A6A;");
    asm("loc_65F2A65: mov 8(%eax),%eax;");
    asm("loc_65F2A68: jmp loc_65F2A6E;");
    asm("loc_65F2A6A: mov %eax,%esi;");
    asm("loc_65F2A6C: mov (%eax),%eax;");
    asm("loc_65F2A6E: cmp %ecx,%eax;");
    asm("loc_65F2A70: jne loc_65F2A60;");
    asm("loc_65F2A72: pop %edi;");
    asm("loc_65F2A73: cmp %edx,%esi;");
    asm("loc_65F2A75: mov %esi,0x14(%esp);");
    asm("loc_65F2A79: je loc_65F2A94;");
    asm("loc_65F2A7B: mov (%ebx),%eax;");
    asm("loc_65F2A7D: cmp 0xC(%esi),%eax;");
    asm("loc_65F2A80: jb loc_65F2A94;");
    asm("loc_65F2A82: lea 0x14(%esp),%eax;");
    asm("loc_65F2A86: mov (%eax),%ecx;");
    asm("loc_65F2A88: mov 0x10(%esp),%eax;");
    asm("loc_65F2A8C: pop %esi;");
    asm("loc_65F2A8D: mov %ecx,(%eax);");
    asm("loc_65F2A8F: pop %ebx;");
    asm("loc_65F2A90: pop %ecx;");
    asm("loc_65F2A91: ret $8;");
    asm("loc_65F2A94: lea 8(%esp),%eax;");
    asm("loc_65F2A98: mov %edx,8(%esp);");
    asm("loc_65F2A9C: mov (%eax),%ecx;");
    asm("loc_65F2A9E: mov 0x10(%esp),%eax;");
    asm("loc_65F2AA2: pop %esi;");
    asm("loc_65F2AA3: mov %ecx,(%eax);");
    asm("loc_65F2AA5: pop %ebx;");
    asm("loc_65F2AA6: pop %ecx;");
    asm("loc_65F2AA7: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2AB0() // _sub_65F2AB0
{
    __DEBUG_ASM(65F2AB0);
    // chunk 0x65F2AB0 _sub_65F2AB0
    asm("loc_65F2AB0: push %ecx;");
    asm("loc_65F2AB1: push %ebx;");
    asm("loc_65F2AB2: mov 0x10(%esp),%ebx;");
    asm("loc_65F2AB6: push %ebp;");
    asm("loc_65F2AB7: push %esi;");
    asm("loc_65F2AB8: push %edi;");
    asm("loc_65F2AB9: mov %ecx,%edi;");
    asm("loc_65F2ABB: mov 4(%edi),%ecx;");
    asm("loc_65F2ABE: mov 4(%ecx),%ebp;");
    asm("loc_65F2AC1: mov 8(%edi),%edx;");
    asm("loc_65F2AC4: cmp %edx,%ebp;");
    asm("loc_65F2AC6: mov %ecx,%esi;");
    asm("loc_65F2AC8: mov $1,%al;");
    asm("loc_65F2ACA: je loc_65F2AEA;");
    asm("loc_65F2ACC: lea (%esp),%esp;");
    asm("loc_65F2AD0: mov (%ebx),%eax;");
    asm("loc_65F2AD2: cmp 0xC(%ebp),%eax;");
    asm("loc_65F2AD5: mov %ebp,%esi;");
    asm("loc_65F2AD7: setb %al;");
    asm("loc_65F2ADA: test %al,%al;");
    asm("loc_65F2ADC: je loc_65F2AE3;");
    asm("loc_65F2ADE: mov (%ebp),%ebp;");
    asm("loc_65F2AE1: jmp loc_65F2AE6;");
    asm("loc_65F2AE3: mov 8(%ebp),%ebp;");
    asm("loc_65F2AE6: cmp %edx,%ebp;");
    asm("loc_65F2AE8: jne loc_65F2AD0;");
    asm("loc_65F2AEA: mov 0xC(%edi),%dl;");
    asm("loc_65F2AED: test %dl,%dl;");
    asm("loc_65F2AEF: je loc_65F2C61;");
    asm("loc_65F2AF5: push $0;");
    asm("loc_65F2AF7: push %esi;");
    asm("loc_65F2AF8: mov %edi,%ecx;");
    asm("loc_65F2AFA: call _sub_65F3420;");
    asm("loc_65F2AFF: mov 8(%edi),%ecx;");
    asm("loc_65F2B02: mov %ecx,(%eax);");
    asm("loc_65F2B04: mov 8(%edi),%edx;");
    asm("loc_65F2B07: mov %eax,0x1C(%esp);");
    asm("loc_65F2B0B: mov %edx,8(%eax);");
    asm("loc_65F2B0E: add $0xC,%eax;");
    asm("loc_65F2B11: push %ebx;");
    asm("loc_65F2B12: push %eax;");
    asm("loc_65F2B13: call _sub_65F3520;");
    asm("loc_65F2B18: mov 0x10(%edi),%ecx;");
    asm("loc_65F2B1B: mov 4(%edi),%eax;");
    asm("loc_65F2B1E: add $8,%esp;");
    asm("loc_65F2B21: inc %ecx;");
    asm("loc_65F2B22: cmp %eax,%esi;");
    asm("loc_65F2B24: mov %ecx,0x10(%edi);");
    asm("loc_65F2B27: je loc_65F2B49;");
    asm("loc_65F2B29: cmp 8(%edi),%ebp;");
    asm("loc_65F2B2C: jne loc_65F2B49;");
    asm("loc_65F2B2E: mov (%ebx),%eax;");
    asm("loc_65F2B30: cmp 0xC(%esi),%eax;");
    asm("loc_65F2B33: jb loc_65F2B49;");
    asm("loc_65F2B35: mov 0x1C(%esp),%ebx;");
    asm("loc_65F2B39: mov %ebx,8(%esi);");
    asm("loc_65F2B3C: mov 4(%edi),%eax;");
    asm("loc_65F2B3F: cmp 8(%eax),%esi;");
    asm("loc_65F2B42: jne loc_65F2B6F;");
    asm("loc_65F2B44: mov %ebx,8(%eax);");
    asm("loc_65F2B47: jmp loc_65F2B6F;");
    asm("loc_65F2B49: mov 0x1C(%esp),%ecx;");
    asm("loc_65F2B4D: mov %ecx,(%esi);");
    asm("loc_65F2B4F: mov 4(%edi),%eax;");
    asm("loc_65F2B52: cmp %eax,%esi;");
    asm("loc_65F2B54: jne loc_65F2B61;");
    asm("loc_65F2B56: mov %ecx,4(%eax);");
    asm("loc_65F2B59: mov 4(%edi),%edx;");
    asm("loc_65F2B5C: mov %ecx,8(%edx);");
    asm("loc_65F2B5F: jmp loc_65F2B6B;");
    asm("loc_65F2B61: cmp (%eax),%esi;");
    asm("loc_65F2B63: jne loc_65F2B6B;");
    asm("loc_65F2B65: mov 0x1C(%esp),%ecx;");
    asm("loc_65F2B69: mov %ecx,(%eax);");
    asm("loc_65F2B6B: mov 0x1C(%esp),%ebx;");
    asm("loc_65F2B6F: mov 4(%edi),%edx;");
    asm("loc_65F2B72: cmp 4(%edx),%ebx;");
    asm("loc_65F2B75: mov %ebx,%esi;");
    asm("loc_65F2B77: je loc_65F2C45;");
    asm("loc_65F2B7D: lea (%ecx),%ecx;");
    asm("loc_65F2B80: mov 4(%esi),%eax;");
    asm("loc_65F2B83: mov 0x14(%eax),%cl;");
    asm("loc_65F2B86: test %cl,%cl;");
    asm("loc_65F2B88: jne loc_65F2C45;");
    asm("loc_65F2B8E: mov 4(%eax),%edx;");
    asm("loc_65F2B91: mov (%edx),%ecx;");
    asm("loc_65F2B93: cmp %ecx,%eax;");
    asm("loc_65F2B95: jne loc_65F2BEB;");
    asm("loc_65F2B97: mov 8(%edx),%ecx;");
    asm("loc_65F2B9A: mov 0x14(%ecx),%dl;");
    asm("loc_65F2B9D: test %dl,%dl;");
    asm("loc_65F2B9F: jne loc_65F2BBB;");
    asm("loc_65F2BA1: movb $1,0x14(%eax);");
    asm("loc_65F2BA5: movb $1,0x14(%ecx);");
    asm("loc_65F2BA9: mov 4(%esi),%eax;");
    asm("loc_65F2BAC: mov 4(%eax),%ecx;");
    asm("loc_65F2BAF: movb $0,0x14(%ecx);");
    asm("loc_65F2BB3: mov 4(%esi),%edx;");
    asm("loc_65F2BB6: mov 4(%edx),%esi;");
    asm("loc_65F2BB9: jmp loc_65F2C39;");
    asm("loc_65F2BBB: cmp 8(%eax),%esi;");
    asm("loc_65F2BBE: jne loc_65F2BCA;");
    asm("loc_65F2BC0: mov %eax,%esi;");
    asm("loc_65F2BC2: push %esi;");
    asm("loc_65F2BC3: mov %edi,%ecx;");
    asm("loc_65F2BC5: call _sub_65F3350;");
    asm("loc_65F2BCA: mov 4(%esi),%eax;");
    asm("loc_65F2BCD: movb $1,0x14(%eax);");
    asm("loc_65F2BD1: mov 4(%esi),%ecx;");
    asm("loc_65F2BD4: mov 4(%ecx),%edx;");
    asm("loc_65F2BD7: movb $0,0x14(%edx);");
    asm("loc_65F2BDB: mov 4(%esi),%eax;");
    asm("loc_65F2BDE: mov 4(%eax),%ecx;");
    asm("loc_65F2BE1: push %ecx;");
    asm("loc_65F2BE2: mov %edi,%ecx;");
    asm("loc_65F2BE4: call _sub_65F33C0;");
    asm("loc_65F2BE9: jmp loc_65F2C39;");
    asm("loc_65F2BEB: mov 0x14(%ecx),%dl;");
    asm("loc_65F2BEE: test %dl,%dl;");
    asm("loc_65F2BF0: jne loc_65F2C0C;");
    asm("loc_65F2BF2: movb $1,0x14(%eax);");
    asm("loc_65F2BF6: movb $1,0x14(%ecx);");
    asm("loc_65F2BFA: mov 4(%esi),%edx;");
    asm("loc_65F2BFD: mov 4(%edx),%eax;");
    asm("loc_65F2C00: movb $0,0x14(%eax);");
    asm("loc_65F2C04: mov 4(%esi),%ecx;");
    asm("loc_65F2C07: mov 4(%ecx),%esi;");
    asm("loc_65F2C0A: jmp loc_65F2C39;");
    asm("loc_65F2C0C: cmp (%eax),%esi;");
    asm("loc_65F2C0E: jne loc_65F2C1A;");
    asm("loc_65F2C10: mov %eax,%esi;");
    asm("loc_65F2C12: push %esi;");
    asm("loc_65F2C13: mov %edi,%ecx;");
    asm("loc_65F2C15: call _sub_65F33C0;");
    asm("loc_65F2C1A: mov 4(%esi),%edx;");
    asm("loc_65F2C1D: movb $1,0x14(%edx);");
    asm("loc_65F2C21: mov 4(%esi),%eax;");
    asm("loc_65F2C24: mov 4(%eax),%ecx;");
    asm("loc_65F2C27: movb $0,0x14(%ecx);");
    asm("loc_65F2C2B: mov 4(%esi),%edx;");
    asm("loc_65F2C2E: mov 4(%edx),%eax;");
    asm("loc_65F2C31: push %eax;");
    asm("loc_65F2C32: mov %edi,%ecx;");
    asm("loc_65F2C34: call _sub_65F3350;");
    asm("loc_65F2C39: mov 4(%edi),%ecx;");
    asm("loc_65F2C3C: cmp 4(%ecx),%esi;");
    asm("loc_65F2C3F: jne loc_65F2B80;");
    asm("loc_65F2C45: mov 4(%edi),%edx;");
    asm("loc_65F2C48: mov 4(%edx),%eax;");
    asm("loc_65F2C4B: pop %edi;");
    asm("loc_65F2C4C: movb $1,0x14(%eax);");
    asm("loc_65F2C50: mov 0x14(%esp),%eax;");
    asm("loc_65F2C54: pop %esi;");
    asm("loc_65F2C55: pop %ebp;");
    asm("loc_65F2C56: mov %ebx,(%eax);");
    asm("loc_65F2C58: movb $1,4(%eax);");
    asm("loc_65F2C5C: pop %ebx;");
    asm("loc_65F2C5D: pop %ecx;");
    asm("loc_65F2C5E: ret $8;");
    asm("loc_65F2C61: test %al,%al;");
    asm("loc_65F2C63: mov %esi,%edx;");
    asm("loc_65F2C65: mov %edx,0x10(%esp);");
    asm("loc_65F2C69: je loc_65F2C7C;");
    asm("loc_65F2C6B: cmp (%ecx),%esi;");
    asm("loc_65F2C6D: je loc_65F2C83;");
    asm("loc_65F2C6F: lea 0x10(%esp),%ecx;");
    asm("loc_65F2C73: call _sub_65F3470;");
    asm("loc_65F2C78: mov 0x10(%esp),%edx;");
    asm("loc_65F2C7C: mov 0xC(%edx),%eax;");
    asm("loc_65F2C7F: cmp (%ebx),%eax;");
    asm("loc_65F2C81: jae loc_65F2CA6;");
    asm("loc_65F2C83: push %ebx;");
    asm("loc_65F2C84: push %esi;");
    asm("loc_65F2C85: push %ebp;");
    asm("loc_65F2C86: lea 0x28(%esp),%ecx;");
    asm("loc_65F2C8A: push %ecx;");
    asm("loc_65F2C8B: mov %edi,%ecx;");
    asm("loc_65F2C8D: call _sub_65F30D0;");
    asm("loc_65F2C92: mov (%eax),%edx;");
    asm("loc_65F2C94: mov 0x18(%esp),%eax;");
    asm("loc_65F2C98: pop %edi;");
    asm("loc_65F2C99: pop %esi;");
    asm("loc_65F2C9A: pop %ebp;");
    asm("loc_65F2C9B: movb $1,4(%eax);");
    asm("loc_65F2C9F: mov %edx,(%eax);");
    asm("loc_65F2CA1: pop %ebx;");
    asm("loc_65F2CA2: pop %ecx;");
    asm("loc_65F2CA3: ret $8;");
    asm("loc_65F2CA6: mov 0x18(%esp),%eax;");
    asm("loc_65F2CAA: pop %edi;");
    asm("loc_65F2CAB: pop %esi;");
    asm("loc_65F2CAC: pop %ebp;");
    asm("loc_65F2CAD: movb $0,4(%eax);");
    asm("loc_65F2CB1: mov %edx,(%eax);");
    asm("loc_65F2CB3: pop %ebx;");
    asm("loc_65F2CB4: pop %ecx;");
    asm("loc_65F2CB5: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F2CC0() // _sub_65F2CC0
{
    __DEBUG_ASM(65F2CC0);
    // chunk 0x65F2CC0 _sub_65F2CC0
    asm("loc_65F2CC0: push %ecx;");
    asm("loc_65F2CC1: push %ebx;");
    asm("loc_65F2CC2: push %ebp;");
    asm("loc_65F2CC3: push %esi;");
    asm("loc_65F2CC4: mov 0x18(%esp),%esi;");
    asm("loc_65F2CC8: push %edi;");
    asm("loc_65F2CC9: mov %ecx,%edi;");
    asm("loc_65F2CCB: lea 0x1C(%esp),%ecx;");
    asm("loc_65F2CCF: call _sub_65F34D0;");
    asm("loc_65F2CD4: mov (%esi),%edx;");
    asm("loc_65F2CD6: mov 8(%edi),%eax;");
    asm("loc_65F2CD9: cmp %eax,%edx;");
    asm("loc_65F2CDB: mov %esi,0x10(%esp);");
    asm("loc_65F2CDF: jne loc_65F2D02;");
    asm("loc_65F2CE1: mov 8(%esi),%eax;");
    asm("loc_65F2CE4: mov 0x10(%esp),%ecx;");
    asm("loc_65F2CE8: mov 4(%ecx),%edx;");
    asm("loc_65F2CEB: mov %edx,4(%eax);");
    asm("loc_65F2CEE: mov 4(%edi),%ecx;");
    asm("loc_65F2CF1: cmp %esi,4(%ecx);");
    asm("loc_65F2CF4: jne loc_65F2D87;");
    asm("loc_65F2CFA: mov %eax,4(%ecx);");
    asm("loc_65F2CFD: jmp loc_65F2D95;");
    asm("loc_65F2D02: mov 8(%esi),%ecx;");
    asm("loc_65F2D05: cmp %eax,%ecx;");
    asm("loc_65F2D07: jne loc_65F2D0D;");
    asm("loc_65F2D09: mov %edx,%eax;");
    asm("loc_65F2D0B: jmp loc_65F2CE4;");
    asm("loc_65F2D0D: mov (%ecx),%eax;");
    asm("loc_65F2D0F: mov 0x15(%eax),%bl;");
    asm("loc_65F2D12: test %bl,%bl;");
    asm("loc_65F2D14: jne loc_65F2D21;");
    asm("loc_65F2D16: mov %eax,%ecx;");
    asm("loc_65F2D18: mov (%ecx),%eax;");
    asm("loc_65F2D1A: mov 0x15(%eax),%bl;");
    asm("loc_65F2D1D: test %bl,%bl;");
    asm("loc_65F2D1F: je loc_65F2D16;");
    asm("loc_65F2D21: cmp %esi,%ecx;");
    asm("loc_65F2D23: mov 8(%ecx),%eax;");
    asm("loc_65F2D26: mov %ecx,0x10(%esp);");
    asm("loc_65F2D2A: je loc_65F2CE4;");
    asm("loc_65F2D2C: mov %ecx,4(%edx);");
    asm("loc_65F2D2F: mov (%esi),%edx;");
    asm("loc_65F2D31: mov %edx,(%ecx);");
    asm("loc_65F2D33: cmp 8(%esi),%ecx;");
    asm("loc_65F2D36: jne loc_65F2D3D;");
    asm("loc_65F2D38: mov %ecx,4(%eax);");
    asm("loc_65F2D3B: jmp loc_65F2D54;");
    asm("loc_65F2D3D: mov 4(%ecx),%edx;");
    asm("loc_65F2D40: mov %edx,4(%eax);");
    asm("loc_65F2D43: mov 4(%ecx),%edx;");
    asm("loc_65F2D46: mov %eax,(%edx);");
    asm("loc_65F2D48: mov 8(%esi),%edx;");
    asm("loc_65F2D4B: mov %edx,8(%ecx);");
    asm("loc_65F2D4E: mov 8(%esi),%edx;");
    asm("loc_65F2D51: mov %ecx,4(%edx);");
    asm("loc_65F2D54: mov 4(%edi),%edx;");
    asm("loc_65F2D57: cmp %esi,4(%edx);");
    asm("loc_65F2D5A: jne loc_65F2D61;");
    asm("loc_65F2D5C: mov %ecx,4(%edx);");
    asm("loc_65F2D5F: jmp loc_65F2D6F;");
    asm("loc_65F2D61: mov 4(%esi),%edx;");
    asm("loc_65F2D64: cmp %esi,(%edx);");
    asm("loc_65F2D66: jne loc_65F2D6C;");
    asm("loc_65F2D68: mov %ecx,(%edx);");
    asm("loc_65F2D6A: jmp loc_65F2D6F;");
    asm("loc_65F2D6C: mov %ecx,8(%edx);");
    asm("loc_65F2D6F: mov 4(%esi),%edx;");
    asm("loc_65F2D72: mov %edx,4(%ecx);");
    asm("loc_65F2D75: mov 0x14(%esi),%bl;");
    asm("loc_65F2D78: mov 0x14(%ecx),%dl;");
    asm("loc_65F2D7B: mov %bl,0x14(%ecx);");
    asm("loc_65F2D7E: mov %dl,0x14(%esi);");
    asm("loc_65F2D81: mov %esi,0x10(%esp);");
    asm("loc_65F2D85: jmp loc_65F2DF2;");
    asm("loc_65F2D87: mov 4(%esi),%ecx;");
    asm("loc_65F2D8A: cmp %esi,(%ecx);");
    asm("loc_65F2D8C: jne loc_65F2D92;");
    asm("loc_65F2D8E: mov %eax,(%ecx);");
    asm("loc_65F2D90: jmp loc_65F2D95;");
    asm("loc_65F2D92: mov %eax,8(%ecx);");
    asm("loc_65F2D95: mov 4(%edi),%ebp;");
    asm("loc_65F2D98: cmp %esi,(%ebp);");
    asm("loc_65F2D9B: jne loc_65F2DC3;");
    asm("loc_65F2D9D: mov 8(%esi),%ecx;");
    asm("loc_65F2DA0: cmp 8(%edi),%ecx;");
    asm("loc_65F2DA3: jne loc_65F2DAA;");
    asm("loc_65F2DA5: mov 4(%esi),%edx;");
    asm("loc_65F2DA8: jmp loc_65F2DC0;");
    asm("loc_65F2DAA: mov (%eax),%ecx;");
    asm("loc_65F2DAC: mov 0x15(%ecx),%bl;");
    asm("loc_65F2DAF: test %bl,%bl;");
    asm("loc_65F2DB1: mov %eax,%edx;");
    asm("loc_65F2DB3: jne loc_65F2DC0;");
    asm("loc_65F2DB5: mov %ecx,%edx;");
    asm("loc_65F2DB7: mov (%edx),%ecx;");
    asm("loc_65F2DB9: mov 0x15(%ecx),%bl;");
    asm("loc_65F2DBC: test %bl,%bl;");
    asm("loc_65F2DBE: je loc_65F2DB5;");
    asm("loc_65F2DC0: mov %edx,(%ebp);");
    asm("loc_65F2DC3: mov 4(%edi),%ebp;");
    asm("loc_65F2DC6: cmp %esi,8(%ebp);");
    asm("loc_65F2DC9: jne loc_65F2DF2;");
    asm("loc_65F2DCB: mov (%esi),%ecx;");
    asm("loc_65F2DCD: cmp 8(%edi),%ecx;");
    asm("loc_65F2DD0: jne loc_65F2DD7;");
    asm("loc_65F2DD2: mov 4(%esi),%edx;");
    asm("loc_65F2DD5: jmp loc_65F2DEF;");
    asm("loc_65F2DD7: mov 8(%eax),%ecx;");
    asm("loc_65F2DDA: mov 0x15(%ecx),%bl;");
    asm("loc_65F2DDD: test %bl,%bl;");
    asm("loc_65F2DDF: mov %eax,%edx;");
    asm("loc_65F2DE1: jne loc_65F2DEF;");
    asm("loc_65F2DE3: mov %ecx,%edx;");
    asm("loc_65F2DE5: mov 8(%edx),%ecx;");
    asm("loc_65F2DE8: mov 0x15(%ecx),%bl;");
    asm("loc_65F2DEB: test %bl,%bl;");
    asm("loc_65F2DED: je loc_65F2DE3;");
    asm("loc_65F2DEF: mov %edx,8(%ebp);");
    asm("loc_65F2DF2: mov 0x10(%esp),%ecx;");
    asm("loc_65F2DF6: mov 0x14(%ecx),%dl;");
    asm("loc_65F2DF9: mov $1,%bl;");
    asm("loc_65F2DFB: cmp %bl,%dl;");
    asm("loc_65F2DFD: jne loc_65F306A;");
    asm("loc_65F2E03: mov 4(%edi),%edx;");
    asm("loc_65F2E06: cmp 4(%edx),%eax;");
    asm("loc_65F2E09: je loc_65F3067;");
    asm("loc_65F2E0F: nop;");
    asm("loc_65F2E10: cmp %bl,0x14(%eax);");
    asm("loc_65F2E13: jne loc_65F3067;");
    asm("loc_65F2E19: mov 4(%eax),%edx;");
    asm("loc_65F2E1C: mov (%edx),%ecx;");
    asm("loc_65F2E1E: cmp %ecx,%eax;");
    asm("loc_65F2E20: jne loc_65F2ECF;");
    asm("loc_65F2E26: mov 8(%edx),%ecx;");
    asm("loc_65F2E29: mov 0x14(%ecx),%dl;");
    asm("loc_65F2E2C: test %dl,%dl;");
    asm("loc_65F2E2E: jne loc_65F2E7B;");
    asm("loc_65F2E30: mov %bl,0x14(%ecx);");
    asm("loc_65F2E33: mov 4(%eax),%ecx;");
    asm("loc_65F2E36: movb $0,0x14(%ecx);");
    asm("loc_65F2E3A: mov 4(%eax),%ecx;");
    asm("loc_65F2E3D: mov 8(%ecx),%edx;");
    asm("loc_65F2E40: mov (%edx),%esi;");
    asm("loc_65F2E42: mov %esi,8(%ecx);");
    asm("loc_65F2E45: mov (%edx),%esi;");
    asm("loc_65F2E47: cmp 8(%edi),%esi;");
    asm("loc_65F2E4A: je loc_65F2E4F;");
    asm("loc_65F2E4C: mov %ecx,4(%esi);");
    asm("loc_65F2E4F: mov 4(%ecx),%esi;");
    asm("loc_65F2E52: mov %esi,4(%edx);");
    asm("loc_65F2E55: mov 4(%edi),%esi;");
    asm("loc_65F2E58: cmp 4(%esi),%ecx;");
    asm("loc_65F2E5B: jne loc_65F2E62;");
    asm("loc_65F2E5D: mov %edx,4(%esi);");
    asm("loc_65F2E60: jmp loc_65F2E70;");
    asm("loc_65F2E62: mov 4(%ecx),%esi;");
    asm("loc_65F2E65: cmp (%esi),%ecx;");
    asm("loc_65F2E67: jne loc_65F2E6D;");
    asm("loc_65F2E69: mov %edx,(%esi);");
    asm("loc_65F2E6B: jmp loc_65F2E70;");
    asm("loc_65F2E6D: mov %edx,8(%esi);");
    asm("loc_65F2E70: mov %ecx,(%edx);");
    asm("loc_65F2E72: mov %edx,4(%ecx);");
    asm("loc_65F2E75: mov 4(%eax),%edx;");
    asm("loc_65F2E78: mov 8(%edx),%ecx;");
    asm("loc_65F2E7B: mov (%ecx),%edx;");
    asm("loc_65F2E7D: cmp %bl,0x14(%edx);");
    asm("loc_65F2E80: jne loc_65F2E8E;");
    asm("loc_65F2E82: mov 8(%ecx),%edx;");
    asm("loc_65F2E85: cmp %bl,0x14(%edx);");
    asm("loc_65F2E88: je loc_65F2F39;");
    asm("loc_65F2E8E: mov 8(%ecx),%edx;");
    asm("loc_65F2E91: cmp %bl,0x14(%edx);");
    asm("loc_65F2E94: jne loc_65F2F6C;");
    asm("loc_65F2E9A: mov (%ecx),%edx;");
    asm("loc_65F2E9C: mov %bl,0x14(%edx);");
    asm("loc_65F2E9F: mov (%ecx),%edx;");
    asm("loc_65F2EA1: movb $0,0x14(%ecx);");
    asm("loc_65F2EA5: mov 8(%edx),%esi;");
    asm("loc_65F2EA8: mov %esi,(%ecx);");
    asm("loc_65F2EAA: mov 8(%edx),%esi;");
    asm("loc_65F2EAD: cmp 8(%edi),%esi;");
    asm("loc_65F2EB0: je loc_65F2EB5;");
    asm("loc_65F2EB2: mov %ecx,4(%esi);");
    asm("loc_65F2EB5: mov 4(%ecx),%esi;");
    asm("loc_65F2EB8: mov %esi,4(%edx);");
    asm("loc_65F2EBB: mov 4(%edi),%esi;");
    asm("loc_65F2EBE: cmp 4(%esi),%ecx;");
    asm("loc_65F2EC1: jne loc_65F2F51;");
    asm("loc_65F2EC7: mov %edx,4(%esi);");
    asm("loc_65F2ECA: jmp loc_65F2F60;");
    asm("loc_65F2ECF: mov 0x14(%ecx),%dl;");
    asm("loc_65F2ED2: test %dl,%dl;");
    asm("loc_65F2ED4: jne loc_65F2F22;");
    asm("loc_65F2ED6: mov %bl,0x14(%ecx);");
    asm("loc_65F2ED9: mov 4(%eax),%ecx;");
    asm("loc_65F2EDC: movb $0,0x14(%ecx);");
    asm("loc_65F2EE0: mov 4(%eax),%ecx;");
    asm("loc_65F2EE3: mov (%ecx),%edx;");
    asm("loc_65F2EE5: mov 8(%edx),%esi;");
    asm("loc_65F2EE8: mov %esi,(%ecx);");
    asm("loc_65F2EEA: mov 8(%edx),%esi;");
    asm("loc_65F2EED: cmp 8(%edi),%esi;");
    asm("loc_65F2EF0: je loc_65F2EF5;");
    asm("loc_65F2EF2: mov %ecx,4(%esi);");
    asm("loc_65F2EF5: mov 4(%ecx),%esi;");
    asm("loc_65F2EF8: mov %esi,4(%edx);");
    asm("loc_65F2EFB: mov 4(%edi),%esi;");
    asm("loc_65F2EFE: cmp 4(%esi),%ecx;");
    asm("loc_65F2F01: jne loc_65F2F08;");
    asm("loc_65F2F03: mov %edx,4(%esi);");
    asm("loc_65F2F06: jmp loc_65F2F17;");
    asm("loc_65F2F08: mov 4(%ecx),%esi;");
    asm("loc_65F2F0B: cmp 8(%esi),%ecx;");
    asm("loc_65F2F0E: jne loc_65F2F15;");
    asm("loc_65F2F10: mov %edx,8(%esi);");
    asm("loc_65F2F13: jmp loc_65F2F17;");
    asm("loc_65F2F15: mov %edx,(%esi);");
    asm("loc_65F2F17: mov %ecx,8(%edx);");
    asm("loc_65F2F1A: mov %edx,4(%ecx);");
    asm("loc_65F2F1D: mov 4(%eax),%edx;");
    asm("loc_65F2F20: mov (%edx),%ecx;");
    asm("loc_65F2F22: mov 8(%ecx),%edx;");
    asm("loc_65F2F25: cmp %bl,0x14(%edx);");
    asm("loc_65F2F28: jne loc_65F2FC8;");
    asm("loc_65F2F2E: mov (%ecx),%edx;");
    asm("loc_65F2F30: cmp %bl,0x14(%edx);");
    asm("loc_65F2F33: jne loc_65F2FC8;");
    asm("loc_65F2F39: movb $0,0x14(%ecx);");
    asm("loc_65F2F3D: mov 4(%edi),%ecx;");
    asm("loc_65F2F40: mov 4(%eax),%eax;");
    asm("loc_65F2F43: cmp 4(%ecx),%eax;");
    asm("loc_65F2F46: jne loc_65F2E10;");
    asm("loc_65F2F4C: jmp loc_65F3067;");
    asm("loc_65F2F51: mov 4(%ecx),%esi;");
    asm("loc_65F2F54: cmp 8(%esi),%ecx;");
    asm("loc_65F2F57: jne loc_65F2F5E;");
    asm("loc_65F2F59: mov %edx,8(%esi);");
    asm("loc_65F2F5C: jmp loc_65F2F60;");
    asm("loc_65F2F5E: mov %edx,(%esi);");
    asm("loc_65F2F60: mov %ecx,8(%edx);");
    asm("loc_65F2F63: mov %edx,4(%ecx);");
    asm("loc_65F2F66: mov 4(%eax),%ecx;");
    asm("loc_65F2F69: mov 8(%ecx),%ecx;");
    asm("loc_65F2F6C: mov 4(%eax),%edx;");
    asm("loc_65F2F6F: mov 0x14(%edx),%dl;");
    asm("loc_65F2F72: mov %dl,0x14(%ecx);");
    asm("loc_65F2F75: mov 4(%eax),%edx;");
    asm("loc_65F2F78: mov %bl,0x14(%edx);");
    asm("loc_65F2F7B: mov 8(%ecx),%ecx;");
    asm("loc_65F2F7E: mov %bl,0x14(%ecx);");
    asm("loc_65F2F81: mov 4(%eax),%ecx;");
    asm("loc_65F2F84: mov 8(%ecx),%edx;");
    asm("loc_65F2F87: mov (%edx),%esi;");
    asm("loc_65F2F89: mov %esi,8(%ecx);");
    asm("loc_65F2F8C: mov (%edx),%esi;");
    asm("loc_65F2F8E: cmp 8(%edi),%esi;");
    asm("loc_65F2F91: je loc_65F2F96;");
    asm("loc_65F2F93: mov %ecx,4(%esi);");
    asm("loc_65F2F96: mov 4(%ecx),%esi;");
    asm("loc_65F2F99: mov %esi,4(%edx);");
    asm("loc_65F2F9C: mov 4(%edi),%esi;");
    asm("loc_65F2F9F: cmp 4(%esi),%ecx;");
    asm("loc_65F2FA2: jne loc_65F2FAE;");
    asm("loc_65F2FA4: mov %edx,4(%esi);");
    asm("loc_65F2FA7: mov %ecx,(%edx);");
    asm("loc_65F2FA9: jmp loc_65F3064;");
    asm("loc_65F2FAE: mov 4(%ecx),%esi;");
    asm("loc_65F2FB1: cmp (%esi),%ecx;");
    asm("loc_65F2FB3: jne loc_65F2FBE;");
    asm("loc_65F2FB5: mov %edx,(%esi);");
    asm("loc_65F2FB7: mov %ecx,(%edx);");
    asm("loc_65F2FB9: jmp loc_65F3064;");
    asm("loc_65F2FBE: mov %edx,8(%esi);");
    asm("loc_65F2FC1: mov %ecx,(%edx);");
    asm("loc_65F2FC3: jmp loc_65F3064;");
    asm("loc_65F2FC8: mov (%ecx),%edx;");
    asm("loc_65F2FCA: cmp %bl,0x14(%edx);");
    asm("loc_65F2FCD: jne loc_65F3016;");
    asm("loc_65F2FCF: mov 8(%ecx),%edx;");
    asm("loc_65F2FD2: mov %bl,0x14(%edx);");
    asm("loc_65F2FD5: mov 8(%ecx),%edx;");
    asm("loc_65F2FD8: movb $0,0x14(%ecx);");
    asm("loc_65F2FDC: mov (%edx),%esi;");
    asm("loc_65F2FDE: mov %esi,8(%ecx);");
    asm("loc_65F2FE1: mov (%edx),%esi;");
    asm("loc_65F2FE3: cmp 8(%edi),%esi;");
    asm("loc_65F2FE6: je loc_65F2FEB;");
    asm("loc_65F2FE8: mov %ecx,4(%esi);");
    asm("loc_65F2FEB: mov 4(%ecx),%esi;");
    asm("loc_65F2FEE: mov %esi,4(%edx);");
    asm("loc_65F2FF1: mov 4(%edi),%esi;");
    asm("loc_65F2FF4: cmp 4(%esi),%ecx;");
    asm("loc_65F2FF7: jne loc_65F2FFE;");
    asm("loc_65F2FF9: mov %edx,4(%esi);");
    asm("loc_65F2FFC: jmp loc_65F300C;");
    asm("loc_65F2FFE: mov 4(%ecx),%esi;");
    asm("loc_65F3001: cmp (%esi),%ecx;");
    asm("loc_65F3003: jne loc_65F3009;");
    asm("loc_65F3005: mov %edx,(%esi);");
    asm("loc_65F3007: jmp loc_65F300C;");
    asm("loc_65F3009: mov %edx,8(%esi);");
    asm("loc_65F300C: mov %ecx,(%edx);");
    asm("loc_65F300E: mov %edx,4(%ecx);");
    asm("loc_65F3011: mov 4(%eax),%ecx;");
    asm("loc_65F3014: mov (%ecx),%ecx;");
    asm("loc_65F3016: mov 4(%eax),%edx;");
    asm("loc_65F3019: mov 0x14(%edx),%dl;");
    asm("loc_65F301C: mov %dl,0x14(%ecx);");
    asm("loc_65F301F: mov 4(%eax),%edx;");
    asm("loc_65F3022: mov %bl,0x14(%edx);");
    asm("loc_65F3025: mov (%ecx),%ecx;");
    asm("loc_65F3027: mov %bl,0x14(%ecx);");
    asm("loc_65F302A: mov 4(%eax),%ecx;");
    asm("loc_65F302D: mov (%ecx),%edx;");
    asm("loc_65F302F: mov 8(%edx),%esi;");
    asm("loc_65F3032: mov %esi,(%ecx);");
    asm("loc_65F3034: mov 8(%edx),%esi;");
    asm("loc_65F3037: cmp 8(%edi),%esi;");
    asm("loc_65F303A: je loc_65F303F;");
    asm("loc_65F303C: mov %ecx,4(%esi);");
    asm("loc_65F303F: mov 4(%ecx),%esi;");
    asm("loc_65F3042: mov %esi,4(%edx);");
    asm("loc_65F3045: mov 4(%edi),%esi;");
    asm("loc_65F3048: cmp 4(%esi),%ecx;");
    asm("loc_65F304B: jne loc_65F3052;");
    asm("loc_65F304D: mov %edx,4(%esi);");
    asm("loc_65F3050: jmp loc_65F3061;");
    asm("loc_65F3052: mov 4(%ecx),%esi;");
    asm("loc_65F3055: cmp 8(%esi),%ecx;");
    asm("loc_65F3058: jne loc_65F305F;");
    asm("loc_65F305A: mov %edx,8(%esi);");
    asm("loc_65F305D: jmp loc_65F3061;");
    asm("loc_65F305F: mov %edx,(%esi);");
    asm("loc_65F3061: mov %ecx,8(%edx);");
    asm("loc_65F3064: mov %edx,4(%ecx);");
    asm("loc_65F3067: mov %bl,0x14(%eax);");
    asm("loc_65F306A: mov 0x10(%esp),%edx;");
    asm("loc_65F306E: push %edx;");
    asm("loc_65F306F: call _sub_6600BB0;");
    asm("loc_65F3074: mov 0x10(%edi),%eax;");
    asm("loc_65F3077: mov 0x20(%esp),%ecx;");
    asm("loc_65F307B: add $4,%esp;");
    asm("loc_65F307E: dec %eax;");
    asm("loc_65F307F: mov %eax,0x10(%edi);");
    asm("loc_65F3082: mov 0x18(%esp),%eax;");
    asm("loc_65F3086: pop %edi;");
    asm("loc_65F3087: pop %esi;");
    asm("loc_65F3088: pop %ebp;");
    asm("loc_65F3089: mov %ecx,(%eax);");
    asm("loc_65F308B: pop %ebx;");
    asm("loc_65F308C: pop %ecx;");
    asm("loc_65F308D: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3090() // _sub_65F3090
{
    __DEBUG_ASM(65F3090);
    // chunk 0x65F3090 _sub_65F3090
    asm("loc_65F3090: push %ebx;");
    asm("loc_65F3091: push %esi;");
    asm("loc_65F3092: mov %ecx,%ebx;");
    asm("loc_65F3094: mov 8(%ebx),%eax;");
    asm("loc_65F3097: push %edi;");
    asm("loc_65F3098: mov 0x10(%esp),%edi;");
    asm("loc_65F309C: cmp %eax,%edi;");
    asm("loc_65F309E: mov %edi,%esi;");
    asm("loc_65F30A0: je loc_65F30C1;");
    asm("loc_65F30A2: mov 8(%esi),%eax;");
    asm("loc_65F30A5: push %eax;");
    asm("loc_65F30A6: mov %ebx,%ecx;");
    asm("loc_65F30A8: call _sub_65F3090;");
    asm("loc_65F30AD: mov (%esi),%esi;");
    asm("loc_65F30AF: push %edi;");
    asm("loc_65F30B0: call _sub_6600BB0;");
    asm("loc_65F30B5: mov 8(%ebx),%eax;");
    asm("loc_65F30B8: add $4,%esp;");
    asm("loc_65F30BB: cmp %eax,%esi;");
    asm("loc_65F30BD: mov %esi,%edi;");
    asm("loc_65F30BF: jne loc_65F30A2;");
    asm("loc_65F30C1: pop %edi;");
    asm("loc_65F30C2: pop %esi;");
    asm("loc_65F30C3: pop %ebx;");
    asm("loc_65F30C4: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F30D0() // _sub_65F30D0
{
    __DEBUG_ASM(65F30D0);
    // chunk 0x65F30D0 _sub_65F30D0
    asm("loc_65F30D0: push %ebx;");
    asm("loc_65F30D1: push %ebp;");
    asm("loc_65F30D2: push %esi;");
    asm("loc_65F30D3: push %edi;");
    asm("loc_65F30D4: push $0x18;");
    asm("loc_65F30D6: mov %ecx,%esi;");
    asm("loc_65F30D8: call _sub_6600BB6;");
    asm("loc_65F30DD: mov 0x20(%esp),%edi;");
    asm("loc_65F30E1: mov 0x24(%esp),%ebp;");
    asm("loc_65F30E5: mov %eax,%ebx;");
    asm("loc_65F30E7: mov %edi,4(%ebx);");
    asm("loc_65F30EA: movb $0,0x14(%ebx);");
    asm("loc_65F30EE: movb $0,0x15(%ebx);");
    asm("loc_65F30F2: mov 8(%esi),%eax;");
    asm("loc_65F30F5: mov %eax,(%ebx);");
    asm("loc_65F30F7: mov 8(%esi),%ecx;");
    asm("loc_65F30FA: lea 0xC(%ebx),%edx;");
    asm("loc_65F30FD: push %ebp;");
    asm("loc_65F30FE: push %edx;");
    asm("loc_65F30FF: mov %ecx,8(%ebx);");
    asm("loc_65F3102: call _sub_65F3520;");
    asm("loc_65F3107: mov 0x10(%esi),%ecx;");
    asm("loc_65F310A: mov 4(%esi),%eax;");
    asm("loc_65F310D: add $0xC,%esp;");
    asm("loc_65F3110: inc %ecx;");
    asm("loc_65F3111: cmp %eax,%edi;");
    asm("loc_65F3113: mov %ecx,0x10(%esi);");
    asm("loc_65F3116: je loc_65F3139;");
    asm("loc_65F3118: mov 0x18(%esp),%eax;");
    asm("loc_65F311C: cmp 8(%esi),%eax;");
    asm("loc_65F311F: jne loc_65F3139;");
    asm("loc_65F3121: mov (%ebp),%ecx;");
    asm("loc_65F3124: cmp 0xC(%edi),%ecx;");
    asm("loc_65F3127: jb loc_65F3139;");
    asm("loc_65F3129: mov %ebx,8(%edi);");
    asm("loc_65F312C: mov 4(%esi),%eax;");
    asm("loc_65F312F: cmp 8(%eax),%edi;");
    asm("loc_65F3132: jne loc_65F3153;");
    asm("loc_65F3134: mov %ebx,8(%eax);");
    asm("loc_65F3137: jmp loc_65F3153;");
    asm("loc_65F3139: mov %ebx,(%edi);");
    asm("loc_65F313B: mov 4(%esi),%eax;");
    asm("loc_65F313E: cmp %eax,%edi;");
    asm("loc_65F3140: jne loc_65F314D;");
    asm("loc_65F3142: mov %ebx,4(%eax);");
    asm("loc_65F3145: mov 4(%esi),%edx;");
    asm("loc_65F3148: mov %ebx,8(%edx);");
    asm("loc_65F314B: jmp loc_65F3153;");
    asm("loc_65F314D: cmp (%eax),%edi;");
    asm("loc_65F314F: jne loc_65F3153;");
    asm("loc_65F3151: mov %ebx,(%eax);");
    asm("loc_65F3153: mov 4(%esi),%ecx;");
    asm("loc_65F3156: cmp 4(%ecx),%ebx;");
    asm("loc_65F3159: mov %ebx,%eax;");
    asm("loc_65F315B: je loc_65F32FE;");
    asm("loc_65F3161: mov 4(%eax),%ecx;");
    asm("loc_65F3164: mov 0x14(%ecx),%dl;");
    asm("loc_65F3167: test %dl,%dl;");
    asm("loc_65F3169: jne loc_65F32FE;");
    asm("loc_65F316F: mov 4(%ecx),%edi;");
    asm("loc_65F3172: mov (%edi),%edx;");
    asm("loc_65F3174: cmp %edx,%ecx;");
    asm("loc_65F3176: jne loc_65F3240;");
    asm("loc_65F317C: mov 8(%edi),%edx;");
    asm("loc_65F317F: cmpb $0,0x14(%edx);");
    asm("loc_65F3183: jne loc_65F31A2;");
    asm("loc_65F3185: movb $1,0x14(%ecx);");
    asm("loc_65F3189: movb $1,0x14(%edx);");
    asm("loc_65F318D: mov 4(%eax),%edx;");
    asm("loc_65F3190: mov 4(%edx),%ecx;");
    asm("loc_65F3193: movb $0,0x14(%ecx);");
    asm("loc_65F3197: mov 4(%eax),%edx;");
    asm("loc_65F319A: mov 4(%edx),%eax;");
    asm("loc_65F319D: jmp loc_65F32F2;");
    asm("loc_65F31A2: cmp 8(%ecx),%eax;");
    asm("loc_65F31A5: jne loc_65F31E1;");
    asm("loc_65F31A7: mov %ecx,%eax;");
    asm("loc_65F31A9: mov 8(%eax),%ecx;");
    asm("loc_65F31AC: mov (%ecx),%edx;");
    asm("loc_65F31AE: mov %edx,8(%eax);");
    asm("loc_65F31B1: mov (%ecx),%edx;");
    asm("loc_65F31B3: cmp 8(%esi),%edx;");
    asm("loc_65F31B6: je loc_65F31BB;");
    asm("loc_65F31B8: mov %eax,4(%edx);");
    asm("loc_65F31BB: mov 4(%eax),%edx;");
    asm("loc_65F31BE: mov %edx,4(%ecx);");
    asm("loc_65F31C1: mov 4(%esi),%edx;");
    asm("loc_65F31C4: cmp 4(%edx),%eax;");
    asm("loc_65F31C7: jne loc_65F31CE;");
    asm("loc_65F31C9: mov %ecx,4(%edx);");
    asm("loc_65F31CC: jmp loc_65F31DC;");
    asm("loc_65F31CE: mov 4(%eax),%edx;");
    asm("loc_65F31D1: cmp (%edx),%eax;");
    asm("loc_65F31D3: jne loc_65F31D9;");
    asm("loc_65F31D5: mov %ecx,(%edx);");
    asm("loc_65F31D7: jmp loc_65F31DC;");
    asm("loc_65F31D9: mov %ecx,8(%edx);");
    asm("loc_65F31DC: mov %eax,(%ecx);");
    asm("loc_65F31DE: mov %ecx,4(%eax);");
    asm("loc_65F31E1: mov 4(%eax),%ecx;");
    asm("loc_65F31E4: movb $1,0x14(%ecx);");
    asm("loc_65F31E8: mov 4(%eax),%edx;");
    asm("loc_65F31EB: mov 4(%edx),%ecx;");
    asm("loc_65F31EE: movb $0,0x14(%ecx);");
    asm("loc_65F31F2: mov 4(%eax),%edx;");
    asm("loc_65F31F5: mov 4(%edx),%ecx;");
    asm("loc_65F31F8: mov (%ecx),%edx;");
    asm("loc_65F31FA: mov 8(%edx),%edi;");
    asm("loc_65F31FD: mov %edi,(%ecx);");
    asm("loc_65F31FF: mov 8(%edx),%edi;");
    asm("loc_65F3202: cmp 8(%esi),%edi;");
    asm("loc_65F3205: je loc_65F320A;");
    asm("loc_65F3207: mov %ecx,4(%edi);");
    asm("loc_65F320A: mov 4(%ecx),%edi;");
    asm("loc_65F320D: mov %edi,4(%edx);");
    asm("loc_65F3210: mov 4(%esi),%edi;");
    asm("loc_65F3213: cmp 4(%edi),%ecx;");
    asm("loc_65F3216: jne loc_65F3223;");
    asm("loc_65F3218: mov %edx,4(%edi);");
    asm("loc_65F321B: mov %ecx,8(%edx);");
    asm("loc_65F321E: jmp loc_65F32EF;");
    asm("loc_65F3223: mov 4(%ecx),%edi;");
    asm("loc_65F3226: cmp 8(%edi),%ecx;");
    asm("loc_65F3229: jne loc_65F3236;");
    asm("loc_65F322B: mov %edx,8(%edi);");
    asm("loc_65F322E: mov %ecx,8(%edx);");
    asm("loc_65F3231: jmp loc_65F32EF;");
    asm("loc_65F3236: mov %edx,(%edi);");
    asm("loc_65F3238: mov %ecx,8(%edx);");
    asm("loc_65F323B: jmp loc_65F32EF;");
    asm("loc_65F3240: cmpb $0,0x14(%edx);");
    asm("loc_65F3244: jne loc_65F3263;");
    asm("loc_65F3246: movb $1,0x14(%ecx);");
    asm("loc_65F324A: movb $1,0x14(%edx);");
    asm("loc_65F324E: mov 4(%eax),%ecx;");
    asm("loc_65F3251: mov 4(%ecx),%edx;");
    asm("loc_65F3254: movb $0,0x14(%edx);");
    asm("loc_65F3258: mov 4(%eax),%eax;");
    asm("loc_65F325B: mov 4(%eax),%eax;");
    asm("loc_65F325E: jmp loc_65F32F2;");
    asm("loc_65F3263: cmp (%ecx),%eax;");
    asm("loc_65F3265: jne loc_65F32A3;");
    asm("loc_65F3267: mov %ecx,%eax;");
    asm("loc_65F3269: mov (%eax),%ecx;");
    asm("loc_65F326B: mov 8(%ecx),%edx;");
    asm("loc_65F326E: mov %edx,(%eax);");
    asm("loc_65F3270: mov 8(%ecx),%edx;");
    asm("loc_65F3273: cmp 8(%esi),%edx;");
    asm("loc_65F3276: je loc_65F327B;");
    asm("loc_65F3278: mov %eax,4(%edx);");
    asm("loc_65F327B: mov 4(%eax),%edx;");
    asm("loc_65F327E: mov %edx,4(%ecx);");
    asm("loc_65F3281: mov 4(%esi),%edx;");
    asm("loc_65F3284: cmp 4(%edx),%eax;");
    asm("loc_65F3287: jne loc_65F328E;");
    asm("loc_65F3289: mov %ecx,4(%edx);");
    asm("loc_65F328C: jmp loc_65F329D;");
    asm("loc_65F328E: mov 4(%eax),%edx;");
    asm("loc_65F3291: cmp 8(%edx),%eax;");
    asm("loc_65F3294: jne loc_65F329B;");
    asm("loc_65F3296: mov %ecx,8(%edx);");
    asm("loc_65F3299: jmp loc_65F329D;");
    asm("loc_65F329B: mov %ecx,(%edx);");
    asm("loc_65F329D: mov %eax,8(%ecx);");
    asm("loc_65F32A0: mov %ecx,4(%eax);");
    asm("loc_65F32A3: mov 4(%eax),%ecx;");
    asm("loc_65F32A6: movb $1,0x14(%ecx);");
    asm("loc_65F32AA: mov 4(%eax),%edx;");
    asm("loc_65F32AD: mov 4(%edx),%ecx;");
    asm("loc_65F32B0: movb $0,0x14(%ecx);");
    asm("loc_65F32B4: mov 4(%eax),%edx;");
    asm("loc_65F32B7: mov 4(%edx),%ecx;");
    asm("loc_65F32BA: mov 8(%ecx),%edx;");
    asm("loc_65F32BD: mov (%edx),%edi;");
    asm("loc_65F32BF: mov %edi,8(%ecx);");
    asm("loc_65F32C2: mov (%edx),%edi;");
    asm("loc_65F32C4: cmp 8(%esi),%edi;");
    asm("loc_65F32C7: je loc_65F32CC;");
    asm("loc_65F32C9: mov %ecx,4(%edi);");
    asm("loc_65F32CC: mov 4(%ecx),%edi;");
    asm("loc_65F32CF: mov %edi,4(%edx);");
    asm("loc_65F32D2: mov 4(%esi),%edi;");
    asm("loc_65F32D5: cmp 4(%edi),%ecx;");
    asm("loc_65F32D8: jne loc_65F32DF;");
    asm("loc_65F32DA: mov %edx,4(%edi);");
    asm("loc_65F32DD: jmp loc_65F32ED;");
    asm("loc_65F32DF: mov 4(%ecx),%edi;");
    asm("loc_65F32E2: cmp (%edi),%ecx;");
    asm("loc_65F32E4: jne loc_65F32EA;");
    asm("loc_65F32E6: mov %edx,(%edi);");
    asm("loc_65F32E8: jmp loc_65F32ED;");
    asm("loc_65F32EA: mov %edx,8(%edi);");
    asm("loc_65F32ED: mov %ecx,(%edx);");
    asm("loc_65F32EF: mov %edx,4(%ecx);");
    asm("loc_65F32F2: mov 4(%esi),%ecx;");
    asm("loc_65F32F5: cmp 4(%ecx),%eax;");
    asm("loc_65F32F8: jne loc_65F3161;");
    asm("loc_65F32FE: mov 4(%esi),%edx;");
    asm("loc_65F3301: mov 4(%edx),%eax;");
    asm("loc_65F3304: pop %edi;");
    asm("loc_65F3305: movb $1,0x14(%eax);");
    asm("loc_65F3309: mov 0x10(%esp),%eax;");
    asm("loc_65F330D: pop %esi;");
    asm("loc_65F330E: pop %ebp;");
    asm("loc_65F330F: mov %ebx,(%eax);");
    asm("loc_65F3311: pop %ebx;");
    asm("loc_65F3312: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3320() // _sub_65F3320
{
    __DEBUG_ASM(65F3320);
    // chunk 0x65F3320 _sub_65F3320
    asm("loc_65F3320: mov 4(%ecx),%eax;");
    asm("loc_65F3323: mov 4(%eax),%edx;");
    asm("loc_65F3326: mov 8(%ecx),%ecx;");
    asm("loc_65F3329: cmp %ecx,%edx;");
    asm("loc_65F332B: je loc_65F3347;");
    asm("loc_65F332D: push %esi;");
    asm("loc_65F332E: mov 8(%esp),%esi;");
    asm("loc_65F3332: mov (%esi),%esi;");
    asm("loc_65F3334: cmp %esi,0xC(%edx);");
    asm("loc_65F3337: jae loc_65F333E;");
    asm("loc_65F3339: mov 8(%edx),%edx;");
    asm("loc_65F333C: jmp loc_65F3342;");
    asm("loc_65F333E: mov %edx,%eax;");
    asm("loc_65F3340: mov (%edx),%edx;");
    asm("loc_65F3342: cmp %ecx,%edx;");
    asm("loc_65F3344: jne loc_65F3334;");
    asm("loc_65F3346: pop %esi;");
    asm("loc_65F3347: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3350() // _sub_65F3350
{
    __DEBUG_ASM(65F3350);
    // chunk 0x65F3350 _sub_65F3350
    asm("loc_65F3350: mov 4(%esp),%edx;");
    asm("loc_65F3354: mov 8(%edx),%eax;");
    asm("loc_65F3357: push %esi;");
    asm("loc_65F3358: mov (%eax),%esi;");
    asm("loc_65F335A: mov %esi,8(%edx);");
    asm("loc_65F335D: mov (%eax),%esi;");
    asm("loc_65F335F: cmp 8(%ecx),%esi;");
    asm("loc_65F3362: je loc_65F3367;");
    asm("loc_65F3364: mov %edx,4(%esi);");
    asm("loc_65F3367: mov 4(%edx),%esi;");
    asm("loc_65F336A: mov %esi,4(%eax);");
    asm("loc_65F336D: mov 4(%ecx),%ecx;");
    asm("loc_65F3370: cmp 4(%ecx),%edx;");
    asm("loc_65F3373: jne loc_65F3381;");
    asm("loc_65F3375: mov %eax,4(%ecx);");
    asm("loc_65F3378: mov %edx,(%eax);");
    asm("loc_65F337A: mov %eax,4(%edx);");
    asm("loc_65F337D: pop %esi;");
    asm("loc_65F337E: ret $4;");
    asm("loc_65F3381: mov 4(%edx),%ecx;");
    asm("loc_65F3384: cmp (%ecx),%edx;");
    asm("loc_65F3386: jne loc_65F3393;");
    asm("loc_65F3388: mov %eax,(%ecx);");
    asm("loc_65F338A: mov %edx,(%eax);");
    asm("loc_65F338C: mov %eax,4(%edx);");
    asm("loc_65F338F: pop %esi;");
    asm("loc_65F3390: ret $4;");
    asm("loc_65F3393: mov %eax,8(%ecx);");
    asm("loc_65F3396: mov %edx,(%eax);");
    asm("loc_65F3398: mov %eax,4(%edx);");
    asm("loc_65F339B: pop %esi;");
    asm("loc_65F339C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F33A0() // _sub_65F33A0
{
    __DEBUG_ASM(65F33A0);
    // chunk 0x65F33A0 _sub_65F33A0
    asm("loc_65F33A0: mov 4(%esp),%eax;");
    asm("loc_65F33A4: mov (%eax),%ecx;");
    asm("loc_65F33A6: mov 0x15(%ecx),%dl;");
    asm("loc_65F33A9: test %dl,%dl;");
    asm("loc_65F33AB: jne loc_65F33BB;");
    asm("loc_65F33AD: lea (%ecx),%ecx;");
    asm("loc_65F33B0: mov %ecx,%eax;");
    asm("loc_65F33B2: mov (%eax),%ecx;");
    asm("loc_65F33B4: mov 0x15(%ecx),%dl;");
    asm("loc_65F33B7: test %dl,%dl;");
    asm("loc_65F33B9: je loc_65F33B0;");
    asm("loc_65F33BB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F33C0() // _sub_65F33C0
{
    __DEBUG_ASM(65F33C0);
    // chunk 0x65F33C0 _sub_65F33C0
    asm("loc_65F33C0: mov 4(%esp),%edx;");
    asm("loc_65F33C4: mov (%edx),%eax;");
    asm("loc_65F33C6: push %esi;");
    asm("loc_65F33C7: mov 8(%eax),%esi;");
    asm("loc_65F33CA: mov %esi,(%edx);");
    asm("loc_65F33CC: mov 8(%eax),%esi;");
    asm("loc_65F33CF: cmp 8(%ecx),%esi;");
    asm("loc_65F33D2: je loc_65F33D7;");
    asm("loc_65F33D4: mov %edx,4(%esi);");
    asm("loc_65F33D7: mov 4(%edx),%esi;");
    asm("loc_65F33DA: mov %esi,4(%eax);");
    asm("loc_65F33DD: mov 4(%ecx),%ecx;");
    asm("loc_65F33E0: cmp 4(%ecx),%edx;");
    asm("loc_65F33E3: jne loc_65F33F2;");
    asm("loc_65F33E5: mov %eax,4(%ecx);");
    asm("loc_65F33E8: mov %edx,8(%eax);");
    asm("loc_65F33EB: mov %eax,4(%edx);");
    asm("loc_65F33EE: pop %esi;");
    asm("loc_65F33EF: ret $4;");
    asm("loc_65F33F2: mov 4(%edx),%ecx;");
    asm("loc_65F33F5: cmp 8(%ecx),%edx;");
    asm("loc_65F33F8: jne loc_65F3407;");
    asm("loc_65F33FA: mov %eax,8(%ecx);");
    asm("loc_65F33FD: mov %edx,8(%eax);");
    asm("loc_65F3400: mov %eax,4(%edx);");
    asm("loc_65F3403: pop %esi;");
    asm("loc_65F3404: ret $4;");
    asm("loc_65F3407: mov %eax,(%ecx);");
    asm("loc_65F3409: mov %edx,8(%eax);");
    asm("loc_65F340C: mov %eax,4(%edx);");
    asm("loc_65F340F: pop %esi;");
    asm("loc_65F3410: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3420() // _sub_65F3420
{
    __DEBUG_ASM(65F3420);
    // chunk 0x65F3420 _sub_65F3420
    asm("loc_65F3420: push $0x18;");
    asm("loc_65F3422: call _sub_6600BB6;");
    asm("loc_65F3427: mov 8(%esp),%ecx;");
    asm("loc_65F342B: mov 0xC(%esp),%dl;");
    asm("loc_65F342F: add $4,%esp;");
    asm("loc_65F3432: mov %ecx,4(%eax);");
    asm("loc_65F3435: mov %dl,0x14(%eax);");
    asm("loc_65F3438: movb $0,0x15(%eax);");
    asm("loc_65F343C: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3440() // _sub_65F3440
{
    __DEBUG_ASM(65F3440);
    // chunk 0x65F3440 _sub_65F3440
    asm("loc_65F3440: mov 4(%ecx),%eax;");
    asm("loc_65F3443: mov 4(%eax),%edx;");
    asm("loc_65F3446: mov 8(%ecx),%ecx;");
    asm("loc_65F3449: cmp %ecx,%edx;");
    asm("loc_65F344B: je loc_65F3467;");
    asm("loc_65F344D: push %esi;");
    asm("loc_65F344E: mov 8(%esp),%esi;");
    asm("loc_65F3452: mov (%esi),%esi;");
    asm("loc_65F3454: cmp 0xC(%edx),%esi;");
    asm("loc_65F3457: jae loc_65F345F;");
    asm("loc_65F3459: mov %edx,%eax;");
    asm("loc_65F345B: mov (%edx),%edx;");
    asm("loc_65F345D: jmp loc_65F3462;");
    asm("loc_65F345F: mov 8(%edx),%edx;");
    asm("loc_65F3462: cmp %ecx,%edx;");
    asm("loc_65F3464: jne loc_65F3454;");
    asm("loc_65F3466: pop %esi;");
    asm("loc_65F3467: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3470() // _sub_65F3470
{
    __DEBUG_ASM(65F3470);
    // chunk 0x65F3470 _sub_65F3470
    asm("loc_65F3470: mov (%ecx),%eax;");
    asm("loc_65F3472: mov 0x14(%eax),%dl;");
    asm("loc_65F3475: test %dl,%dl;");
    asm("loc_65F3477: push %ebx;");
    asm("loc_65F3478: jne loc_65F3489;");
    asm("loc_65F347A: mov 4(%eax),%edx;");
    asm("loc_65F347D: cmp %eax,4(%edx);");
    asm("loc_65F3480: jne loc_65F3489;");
    asm("loc_65F3482: mov 8(%eax),%eax;");
    asm("loc_65F3485: mov %eax,(%ecx);");
    asm("loc_65F3487: pop %ebx;");
    asm("loc_65F3488: ret;");
    asm("loc_65F3489: mov (%eax),%edx;");
    asm("loc_65F348B: mov 0x15(%edx),%bl;");
    asm("loc_65F348E: test %bl,%bl;");
    asm("loc_65F3490: jne loc_65F34B0;");
    asm("loc_65F3492: mov 8(%edx),%eax;");
    asm("loc_65F3495: mov 0x15(%eax),%bl;");
    asm("loc_65F3498: test %bl,%bl;");
    asm("loc_65F349A: jne loc_65F34AC;");
    asm("loc_65F349C: lea (%esp),%esp;");
    asm("loc_65F34A0: mov %eax,%edx;");
    asm("loc_65F34A2: mov 8(%edx),%eax;");
    asm("loc_65F34A5: mov 0x15(%eax),%bl;");
    asm("loc_65F34A8: test %bl,%bl;");
    asm("loc_65F34AA: je loc_65F34A0;");
    asm("loc_65F34AC: mov %edx,(%ecx);");
    asm("loc_65F34AE: pop %ebx;");
    asm("loc_65F34AF: ret;");
    asm("loc_65F34B0: mov 4(%eax),%eax;");
    asm("loc_65F34B3: mov (%ecx),%edx;");
    asm("loc_65F34B5: cmp (%eax),%edx;");
    asm("loc_65F34B7: jne loc_65F34CB;");
    asm("loc_65F34B9: lea (%esp),%esp;");
    asm("loc_65F34C0: mov %eax,(%ecx);");
    asm("loc_65F34C2: mov 4(%eax),%eax;");
    asm("loc_65F34C5: mov (%ecx),%edx;");
    asm("loc_65F34C7: cmp (%eax),%edx;");
    asm("loc_65F34C9: je loc_65F34C0;");
    asm("loc_65F34CB: mov %eax,(%ecx);");
    asm("loc_65F34CD: pop %ebx;");
    asm("loc_65F34CE: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F34D0() // _sub_65F34D0
{
    __DEBUG_ASM(65F34D0);
    // chunk 0x65F34D0 _sub_65F34D0
    asm("loc_65F34D0: mov (%ecx),%eax;");
    asm("loc_65F34D2: mov 8(%eax),%edx;");
    asm("loc_65F34D5: push %ebx;");
    asm("loc_65F34D6: mov 0x15(%edx),%bl;");
    asm("loc_65F34D9: test %bl,%bl;");
    asm("loc_65F34DB: jne loc_65F34F5;");
    asm("loc_65F34DD: mov (%edx),%eax;");
    asm("loc_65F34DF: mov 0x15(%eax),%bl;");
    asm("loc_65F34E2: test %bl,%bl;");
    asm("loc_65F34E4: jne loc_65F34F1;");
    asm("loc_65F34E6: mov %eax,%edx;");
    asm("loc_65F34E8: mov (%edx),%eax;");
    asm("loc_65F34EA: mov 0x15(%eax),%bl;");
    asm("loc_65F34ED: test %bl,%bl;");
    asm("loc_65F34EF: je loc_65F34E6;");
    asm("loc_65F34F1: mov %edx,(%ecx);");
    asm("loc_65F34F3: pop %ebx;");
    asm("loc_65F34F4: ret;");
    asm("loc_65F34F5: mov 4(%eax),%eax;");
    asm("loc_65F34F8: mov (%ecx),%edx;");
    asm("loc_65F34FA: cmp 8(%eax),%edx;");
    asm("loc_65F34FD: jne loc_65F350C;");
    asm("loc_65F34FF: nop;");
    asm("loc_65F3500: mov %eax,(%ecx);");
    asm("loc_65F3502: mov 4(%eax),%eax;");
    asm("loc_65F3505: mov (%ecx),%edx;");
    asm("loc_65F3507: cmp 8(%eax),%edx;");
    asm("loc_65F350A: je loc_65F3500;");
    asm("loc_65F350C: mov (%ecx),%edx;");
    asm("loc_65F350E: cmp %eax,8(%edx);");
    asm("loc_65F3511: je loc_65F3515;");
    asm("loc_65F3513: mov %eax,(%ecx);");
    asm("loc_65F3515: pop %ebx;");
    asm("loc_65F3516: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3520() // _sub_65F3520
{
    __DEBUG_ASM(65F3520);
    // chunk 0x65F3520 _sub_65F3520
    asm("loc_65F3520: mov 4(%esp),%eax;");
    asm("loc_65F3524: test %eax,%eax;");
    asm("loc_65F3526: je loc_65F3536;");
    asm("loc_65F3528: mov 8(%esp),%ecx;");
    asm("loc_65F352C: mov (%ecx),%edx;");
    asm("loc_65F352E: mov %edx,(%eax);");
    asm("loc_65F3530: mov 4(%ecx),%ecx;");
    asm("loc_65F3533: mov %ecx,4(%eax);");
    asm("loc_65F3536: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3540() // _sub_65F3540
{
    __DEBUG_ASM(65F3540);
    // chunk 0x65F3540 _sub_65F3540
    asm("loc_65F3540: mov $0x202C,%eax;");
    asm("loc_65F3545: call _sub_6600C00;");
    asm("loc_65F354A: push %ebx;");
    asm("loc_65F354B: mov _import_660100C,%ebx;");
    asm("loc_65F3551: push %ebp;");
    asm("loc_65F3552: push %esi;");
    asm("loc_65F3553: mov 0x2040(%esp),%esi;");
    asm("loc_65F355A: push %edi;");
    asm("loc_65F355B: push %esi;");
    asm("loc_65F355C: or $0xFFFFFFFF,%edi;");
    asm("loc_65F355F: or $0xFFFFFFFF,%ebp;");
    asm("loc_65F3562: call *%ebx;");
    asm("loc_65F3564: add $4,%esp;");
    asm("loc_65F3567: mov %eax,0x28(%esp);");
    asm("loc_65F356B: lea 0x28(%esp),%eax;");
    asm("loc_65F356F: mov %ebp,0x30(%esp);");
    asm("loc_65F3573: mov 0x2048(%esp),%ebp;");
    asm("loc_65F357A: push %eax;");
    asm("loc_65F357B: lea 0x1C(%esp),%ecx;");
    asm("loc_65F357F: push %ecx;");
    asm("loc_65F3580: mov %ebp,%ecx;");
    asm("loc_65F3582: mov %edi,0x34(%esp);");
    asm("loc_65F3586: call _sub_65F5CB0;");
    asm("loc_65F358B: lea 0x1C(%esp),%edx;");
    asm("loc_65F358F: push %edx;");
    asm("loc_65F3590: lea 0x1C(%esp),%eax;");
    asm("loc_65F3594: push %eax;");
    asm("loc_65F3595: lea 0x3C(%esp),%ecx;");
    asm("loc_65F3599: call _sub_65F6330;");
    asm("loc_65F359E: mov 0x34(%esp),%ecx;");
    asm("loc_65F35A2: mov 0x10(%ecx),%eax;");
    asm("loc_65F35A5: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F35A8: lea 0x10(%ecx),%edi;");
    asm("loc_65F35AB: jne loc_65F35C1;");
    asm("loc_65F35AD: mov 0x2040(%esp),%edx;");
    asm("loc_65F35B4: mov %edx,(%edi);");
    asm("loc_65F35B6: pop %edi;");
    asm("loc_65F35B7: pop %esi;");
    asm("loc_65F35B8: pop %ebp;");
    asm("loc_65F35B9: pop %ebx;");
    asm("loc_65F35BA: add $0x202C,%esp;");
    asm("loc_65F35C0: ret;");
    asm("loc_65F35C1: mov 0x2040(%esp),%eax;");
    asm("loc_65F35C8: push %esi;");
    asm("loc_65F35C9: mov %eax,4(%edi);");
    asm("loc_65F35CC: mov %esi,0x24(%esp);");
    asm("loc_65F35D0: call *%ebx;");
    asm("loc_65F35D2: push %esi;");
    asm("loc_65F35D3: mov %eax,0x2C(%esp);");
    asm("loc_65F35D7: mov %esi,0x18(%esp);");
    asm("loc_65F35DB: call *%ebx;");
    asm("loc_65F35DD: add $8,%esp;");
    asm("loc_65F35E0: lea 0x20(%esp),%edx;");
    asm("loc_65F35E4: push %edx;");
    asm("loc_65F35E5: mov 4(%edi),%edx;");
    asm("loc_65F35E8: push %edx;");
    asm("loc_65F35E9: lea 0x18(%esp),%edx;");
    asm("loc_65F35ED: push %edx;");
    asm("loc_65F35EE: mov (%edi),%edx;");
    asm("loc_65F35F0: mov %eax,0x20(%esp);");
    asm("loc_65F35F4: mov 0x14(%ebp),%eax;");
    asm("loc_65F35F7: mov (%eax),%ecx;");
    asm("loc_65F35F9: push %edx;");
    asm("loc_65F35FA: push %eax;");
    asm("loc_65F35FB: calll *0x18(%ecx);");
    asm("loc_65F35FE: test %eax,%eax;");
    asm("loc_65F3600: je loc_65F3631;");
    asm("loc_65F3602: push %esi;");
    asm("loc_65F3603: push %esi;");
    asm("loc_65F3604: lea 0x44(%esp),%eax;");
    asm("loc_65F3608: push $_data_66025C0;");
    asm("loc_65F360D: push %eax;");
    asm("loc_65F360E: call _sub_65F28B0;");
    asm("loc_65F3613: push %eax;");
    asm("loc_65F3614: push $0x53;");
    asm("loc_65F3616: push $_data_6602570;");
    asm("loc_65F361B: mov $0x100001,%ecx;");
    asm("loc_65F3620: push $_data_6602054;");
    asm("loc_65F3625: push %ecx;");
    asm("loc_65F3626: mov _import_6601008,%ecx;");
    asm("loc_65F362C: calll *(%ecx);");
    asm("loc_65F362E: add $0x24,%esp;");
    asm("loc_65F3631: pop %edi;");
    asm("loc_65F3632: pop %esi;");
    asm("loc_65F3633: pop %ebp;");
    asm("loc_65F3634: pop %ebx;");
    asm("loc_65F3635: add $0x202C,%esp;");
    asm("loc_65F363B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3640() // _sub_65F3640
{
    __DEBUG_ASM(65F3640);
    // chunk 0x65F3640 _sub_65F3640
    asm("loc_65F3640: movl $_off_6601308,(%ecx);");
    asm("loc_65F3646: jmp _sub_65F3ED0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3650() // _sub_65F3650
{
    __DEBUG_ASM(65F3650);
    // chunk 0x65F3650 _sub_65F3650
    asm("loc_65F3650: push %ecx;");
    asm("loc_65F3651: xor %eax,%eax;");
    asm("loc_65F3653: push %esi;");
    asm("loc_65F3654: mov %ecx,%esi;");
    asm("loc_65F3656: mov %eax,4(%esi);");
    asm("loc_65F3659: mov %eax,8(%esi);");
    asm("loc_65F365C: mov %eax,0xC(%esi);");
    asm("loc_65F365F: mov %eax,0x10(%esi);");
    asm("loc_65F3662: mov %eax,0x14(%esi);");
    asm("loc_65F3665: mov %eax,0x18(%esi);");
    asm("loc_65F3668: mov %eax,0x1C(%esi);");
    asm("loc_65F366B: mov %eax,0x20(%esi);");
    asm("loc_65F366E: mov %eax,0x24(%esi);");
    asm("loc_65F3671: movl $_off_6601308,(%esi);");
    asm("loc_65F3677: flds _data_660314C;");
    asm("loc_65F367D: fcomps _data_6601318;");
    asm("loc_65F3683: fnstsw %ax;");
    asm("loc_65F3685: test $0x41,%ah;");
    asm("loc_65F3688: jne loc_65F36AC;");
    asm("loc_65F368A: calll *_import_6601038;");
    asm("loc_65F3690: mov %eax,4(%esp);");
    asm("loc_65F3694: fildl 4(%esp);");
    asm("loc_65F3698: mov %esi,%eax;");
    asm("loc_65F369A: fmuls _data_660314C;");
    asm("loc_65F36A0: fmuls _data_6601314;");
    asm("loc_65F36A6: fstps 0x28(%esi);");
    asm("loc_65F36A9: pop %esi;");
    asm("loc_65F36AA: pop %ecx;");
    asm("loc_65F36AB: ret;");
    asm("loc_65F36AC: mov _data_660314C,%eax;");
    asm("loc_65F36B1: mov %eax,0x28(%esi);");
    asm("loc_65F36B4: mov %esi,%eax;");
    asm("loc_65F36B6: pop %esi;");
    asm("loc_65F36B7: pop %ecx;");
    asm("loc_65F36B8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F36C0() // _sub_65F36C0
{
    __DEBUG_ASM(65F36C0);
    // chunk 0x65F36C0 _sub_65F36C0
    asm("loc_65F36C0: sub $0x474,%esp;");
    asm("loc_65F36C6: mov 0x47C(%esp),%eax;");
    asm("loc_65F36CD: mov 0x478(%esp),%edx;");
    asm("loc_65F36D4: push %ebx;");
    asm("loc_65F36D5: push %ebp;");
    asm("loc_65F36D6: mov %ecx,%ebp;");
    asm("loc_65F36D8: mov 0x488(%esp),%ecx;");
    asm("loc_65F36DF: mov %eax,0x18(%ebp);");
    asm("loc_65F36E2: push %esi;");
    asm("loc_65F36E3: mov %ecx,0x1C(%ebp);");
    asm("loc_65F36E6: mov (%edx),%esi;");
    asm("loc_65F36E8: mov %esi,%eax;");
    asm("loc_65F36EA: imul $0x34,%eax;");
    asm("loc_65F36ED: add $4,%eax;");
    asm("loc_65F36F0: push %edi;");
    asm("loc_65F36F1: push %eax;");
    asm("loc_65F36F2: mov %ebp,0x18(%esp);");
    asm("loc_65F36F6: mov %esi,4(%ebp);");
    asm("loc_65F36F9: call _sub_6600BB6;");
    asm("loc_65F36FE: add $4,%esp;");
    asm("loc_65F3701: test %eax,%eax;");
    asm("loc_65F3703: je loc_65F3727;");
    asm("loc_65F3705: lea 4(%eax),%ebx;");
    asm("loc_65F3708: mov %esi,(%eax);");
    asm("loc_65F370A: lea -1(%esi),%eax;");
    asm("loc_65F370D: test %eax,%eax;");
    asm("loc_65F370F: mov %ebx,%edi;");
    asm("loc_65F3711: jl loc_65F3723;");
    asm("loc_65F3713: lea 1(%eax),%esi;");
    asm("loc_65F3716: mov %edi,%ecx;");
    asm("loc_65F3718: call _sub_65F6720;");
    asm("loc_65F371D: add $0x34,%edi;");
    asm("loc_65F3720: dec %esi;");
    asm("loc_65F3721: jne loc_65F3716;");
    asm("loc_65F3723: mov %ebx,%eax;");
    asm("loc_65F3725: jmp loc_65F3729;");
    asm("loc_65F3727: xor %eax,%eax;");
    asm("loc_65F3729: mov %eax,8(%ebp);");
    asm("loc_65F372C: mov 4(%ebp),%eax;");
    asm("loc_65F372F: test %eax,%eax;");
    asm("loc_65F3731: movl $0,0x20(%esp);");
    asm("loc_65F3739: jle loc_65F3C7A;");
    asm("loc_65F373F: xor %eax,%eax;");
    asm("loc_65F3741: mov %eax,0x18(%esp);");
    asm("loc_65F3745: mov %eax,0x4C(%esp);");
    asm("loc_65F3749: mov 0x488(%esp),%ecx;");
    asm("loc_65F3750: mov 4(%ecx),%eax;");
    asm("loc_65F3753: mov 0x4C(%esp),%edx;");
    asm("loc_65F3757: mov 0xC(%eax,%edx),%esi;");
    asm("loc_65F375B: mov _import_6601000,%edi;");
    asm("loc_65F3761: add %edx,%eax;");
    asm("loc_65F3763: xor %ebp,%ebp;");
    asm("loc_65F3765: cmp %ebp,%esi;");
    asm("loc_65F3767: mov %eax,0x24(%esp);");
    asm("loc_65F376B: je loc_65F3773;");
    asm("loc_65F376D: call *%edi;");
    asm("loc_65F376F: mov %eax,%edx;");
    asm("loc_65F3771: jmp loc_65F377B;");
    asm("loc_65F3773: mov 4(%eax),%eax;");
    asm("loc_65F3776: mov 4(%eax),%esi;");
    asm("loc_65F3779: mov (%eax),%edx;");
    asm("loc_65F377B: cmp %ebp,%edx;");
    asm("loc_65F377D: jne loc_65F3783;");
    asm("loc_65F377F: call *%edi;");
    asm("loc_65F3781: mov %eax,%edx;");
    asm("loc_65F3783: xor %eax,%eax;");
    asm("loc_65F3785: movl $_data_6602040,0x9C(%esp);");
    asm("loc_65F3790: mov $0xB,%ecx;");
    asm("loc_65F3795: lea 0xA0(%esp),%edi;");
    asm("loc_65F379C: rep stos %eax,(%edi);");
    asm("loc_65F379E: lea 0x10(%esp),%ecx;");
    asm("loc_65F37A2: push %ecx;");
    asm("loc_65F37A3: lea 0x9C(%esp),%ecx;");
    asm("loc_65F37AA: push %ecx;");
    asm("loc_65F37AB: mov %ebp,0x18(%esp);");
    asm("loc_65F37AF: movl $0x80000000,0xB0(%esp);");
    asm("loc_65F37BA: movl $1,0xB4(%esp);");
    asm("loc_65F37C5: movl $3,0xBC(%esp);");
    asm("loc_65F37D0: movl $0x8000080,0xC0(%esp);");
    asm("loc_65F37DB: mov %esi,0xAC(%esp);");
    asm("loc_65F37E2: movl $0x34,0xA0(%esp);");
    asm("loc_65F37ED: movl $0xFFFFFFFF,0xD0(%esp);");
    asm("loc_65F37F8: mov (%edx),%eax;");
    asm("loc_65F37FA: push %edx;");
    asm("loc_65F37FB: calll *0xC(%eax);");
    asm("loc_65F37FE: test %eax,%eax;");
    asm("loc_65F3800: jge loc_65F381D;");
    asm("loc_65F3802: mov 0x10(%esp),%eax;");
    asm("loc_65F3806: cmp %ebp,%eax;");
    asm("loc_65F3808: je loc_65F3C4C;");
    asm("loc_65F380E: mov (%eax),%edx;");
    asm("loc_65F3810: push %eax;");
    asm("loc_65F3811: calll *8(%edx);");
    asm("loc_65F3814: mov %ebp,0x10(%esp);");
    asm("loc_65F3818: jmp loc_65F3C4C;");
    asm("loc_65F381D: push $0x5C;");
    asm("loc_65F381F: push %esi;");
    asm("loc_65F3820: calll *_import_660102C;");
    asm("loc_65F3826: inc %eax;");
    asm("loc_65F3827: push $0x104;");
    asm("loc_65F382C: push %eax;");
    asm("loc_65F382D: lea 0x150(%esp),%eax;");
    asm("loc_65F3834: push %eax;");
    asm("loc_65F3835: calll *_import_6601028;");
    asm("loc_65F383B: lea 0x154(%esp),%ecx;");
    asm("loc_65F3842: push $0x2E;");
    asm("loc_65F3844: push %ecx;");
    asm("loc_65F3845: calll *_import_6601050;");
    asm("loc_65F384B: lea 0x15C(%esp),%edx;");
    asm("loc_65F3852: push %edx;");
    asm("loc_65F3853: push $_data_66026C4;");
    asm("loc_65F3858: mov %eax,0x80(%esp);");
    asm("loc_65F385F: movb $0,(%eax);");
    asm("loc_65F3862: movb $0,1(%eax);");
    asm("loc_65F3866: lea 0x3A8(%esp),%eax;");
    asm("loc_65F386D: push $0x100;");
    asm("loc_65F3872: push %eax;");
    asm("loc_65F3873: calll *_import_6601034;");
    asm("loc_65F3879: push $0x1E88;");
    asm("loc_65F387E: call _sub_6600BB6;");
    asm("loc_65F3883: mov %eax,%esi;");
    asm("loc_65F3885: add $0x30,%esp;");
    asm("loc_65F3888: cmp %ebp,%esi;");
    asm("loc_65F388A: je loc_65F38CC;");
    asm("loc_65F388C: movl $0x3F800000,(%esi);");
    asm("loc_65F3892: mov %ebp,4(%esi);");
    asm("loc_65F3895: lea 8(%esi),%edi;");
    asm("loc_65F3898: mov $0x96,%ebx;");
    asm("loc_65F389D: lea (%ecx),%ecx;");
    asm("loc_65F38A0: push %ebp;");
    asm("loc_65F38A1: lea 4(%edi),%ecx;");
    asm("loc_65F38A4: movl $0xFFFFFFFF,(%edi);");
    asm("loc_65F38AA: call _sub_65F3E70;");
    asm("loc_65F38AF: add $0x34,%edi;");
    asm("loc_65F38B2: dec %ebx;");
    asm("loc_65F38B3: jne loc_65F38A0;");
    asm("loc_65F38B5: mov $1,%edi;");
    asm("loc_65F38BA: movl $0xFFFFFFFF,0x1E80(%esi);");
    asm("loc_65F38C4: mov %edi,0x1E84(%esi);");
    asm("loc_65F38CA: jmp loc_65F38D3;");
    asm("loc_65F38CC: xor %esi,%esi;");
    asm("loc_65F38CE: mov $1,%edi;");
    asm("loc_65F38D3: mov 0x10(%esp),%ecx;");
    asm("loc_65F38D7: push %ecx;");
    asm("loc_65F38D8: lea 0x388(%esp),%edx;");
    asm("loc_65F38DF: push %edx;");
    asm("loc_65F38E0: mov %esi,%ecx;");
    asm("loc_65F38E2: mov %esi,0x50(%esp);");
    asm("loc_65F38E6: call _sub_65F1100;");
    asm("loc_65F38EB: test %al,%al;");
    asm("loc_65F38ED: jne loc_65F3912;");
    asm("loc_65F38EF: push $_data_66026AC;");
    asm("loc_65F38F4: push $0xB0;");
    asm("loc_65F38F9: push $_data_6602570;");
    asm("loc_65F38FE: mov $0x100002,%eax;");
    asm("loc_65F3903: push $_data_66024C8;");
    asm("loc_65F3908: push %eax;");
    asm("loc_65F3909: mov _import_6601008,%eax;");
    asm("loc_65F390E: calll *(%eax);");
    asm("loc_65F3910: jmp loc_65F3961;");
    asm("loc_65F3912: push $0x10;");
    asm("loc_65F3914: call _sub_6600BB6;");
    asm("loc_65F3919: add $4,%esp;");
    asm("loc_65F391C: cmp %ebp,%eax;");
    asm("loc_65F391E: je loc_65F392D;");
    asm("loc_65F3920: mov %ebp,(%eax);");
    asm("loc_65F3922: mov %ebp,4(%eax);");
    asm("loc_65F3925: mov %ebp,8(%eax);");
    asm("loc_65F3928: mov %edi,0xC(%eax);");
    asm("loc_65F392B: jmp loc_65F392F;");
    asm("loc_65F392D: xor %eax,%eax;");
    asm("loc_65F392F: push %esi;");
    asm("loc_65F3930: mov %eax,%ecx;");
    asm("loc_65F3932: mov %eax,0x54(%esp);");
    asm("loc_65F3936: call _sub_65F1550;");
    asm("loc_65F393B: test %al,%al;");
    asm("loc_65F393D: jne loc_65F398A;");
    asm("loc_65F393F: mov _import_6601008,%edx;");
    asm("loc_65F3945: push $_data_6602694;");
    asm("loc_65F394A: push $0xB8;");
    asm("loc_65F394F: push $_data_6602570;");
    asm("loc_65F3954: mov $0x100002,%eax;");
    asm("loc_65F3959: push $_data_66024C8;");
    asm("loc_65F395E: push %eax;");
    asm("loc_65F395F: calll *(%edx);");
    asm("loc_65F3961: add $0x14,%esp;");
    asm("loc_65F3964: cmp %ebp,%esi;");
    asm("loc_65F3966: je loc_65F396F;");
    asm("loc_65F3968: mov %esi,%ecx;");
    asm("loc_65F396A: call _sub_65F1420;");
    asm("loc_65F396F: mov 0x10(%esp),%eax;");
    asm("loc_65F3973: cmp %ebp,%eax;");
    asm("loc_65F3975: je loc_65F3C4C;");
    asm("loc_65F397B: mov (%eax),%ecx;");
    asm("loc_65F397D: push %eax;");
    asm("loc_65F397E: calll *8(%ecx);");
    asm("loc_65F3981: mov %ebp,0x10(%esp);");
    asm("loc_65F3985: jmp loc_65F3C4C;");
    asm("loc_65F398A: mov 0x10(%esp),%eax;");
    asm("loc_65F398E: mov (%eax),%edx;");
    asm("loc_65F3990: push $_data_6602688;");
    asm("loc_65F3995: push %eax;");
    asm("loc_65F3996: calll *0x60(%edx);");
    asm("loc_65F3999: test %eax,%eax;");
    asm("loc_65F399B: je loc_65F3A11;");
    asm("loc_65F399D: mov 0x10(%esp),%esi;");
    asm("loc_65F39A1: push $_data_6602040;");
    asm("loc_65F39A6: push $_data_660267C;");
    asm("loc_65F39AB: lea 0x114(%esp),%ecx;");
    asm("loc_65F39B2: xor %ebp,%ebp;");
    asm("loc_65F39B4: mov $8,%ebx;");
    asm("loc_65F39B9: call _sub_65F3E80;");
    asm("loc_65F39BE: mov (%esi),%eax;");
    asm("loc_65F39C0: lea 0x10C(%esp),%ecx;");
    asm("loc_65F39C7: push %ecx;");
    asm("loc_65F39C8: push %esi;");
    asm("loc_65F39C9: calll *0x7C(%eax);");
    asm("loc_65F39CC: mov %eax,%edi;");
    asm("loc_65F39CE: cmp $0xFFFFFFFF,%edi;");
    asm("loc_65F39D1: je loc_65F3A0B;");
    asm("loc_65F39D3: mov (%esi),%edx;");
    asm("loc_65F39D5: push %ebp;");
    asm("loc_65F39D6: push %edi;");
    asm("loc_65F39D7: push %esi;");
    asm("loc_65F39D8: calll *0x28(%edx);");
    asm("loc_65F39DB: shr $2,%eax;");
    asm("loc_65F39DE: cmp %ebx,%eax;");
    asm("loc_65F39E0: jae loc_65F39E4;");
    asm("loc_65F39E2: mov %eax,%ebx;");
    asm("loc_65F39E4: mov (%esi),%eax;");
    asm("loc_65F39E6: push $0;");
    asm("loc_65F39E8: lea 0x64(%esp),%ecx;");
    asm("loc_65F39EC: push %ecx;");
    asm("loc_65F39ED: lea (,%ebx,4),%edx;");
    asm("loc_65F39F4: push %edx;");
    asm("loc_65F39F5: lea 0xD8(%esp),%ecx;");
    asm("loc_65F39FC: push %ecx;");
    asm("loc_65F39FD: push %edi;");
    asm("loc_65F39FE: push %esi;");
    asm("loc_65F39FF: mov %ebx,%ebp;");
    asm("loc_65F3A01: calll *0x14(%eax);");
    asm("loc_65F3A04: mov (%esi),%edx;");
    asm("loc_65F3A06: push %edi;");
    asm("loc_65F3A07: push %esi;");
    asm("loc_65F3A08: calll *0x10(%edx);");
    asm("loc_65F3A0B: mov %ebp,0x2C(%esp);");
    asm("loc_65F3A0F: jmp loc_65F3A22;");
    asm("loc_65F3A11: mov %edi,0x2C(%esp);");
    asm("loc_65F3A15: movl $0x3F800000,0xCC(%esp);");
    asm("loc_65F3A20: mov %edi,%ebp;");
    asm("loc_65F3A22: mov 0x24(%esp),%edi;");
    asm("loc_65F3A26: mov (%edi),%eax;");
    asm("loc_65F3A28: cmp %eax,%ebp;");
    asm("loc_65F3A2A: jle loc_65F3A32;");
    asm("loc_65F3A2C: mov %eax,%ebp;");
    asm("loc_65F3A2E: mov %ebp,0x2C(%esp);");
    asm("loc_65F3A32: test %ebp,%ebp;");
    asm("loc_65F3A34: jg loc_65F3A62;");
    asm("loc_65F3A36: push $_data_660266C;");
    asm("loc_65F3A3B: push $0xD7;");
    asm("loc_65F3A40: push $_data_6602570;");
    asm("loc_65F3A45: mov $0x100002,%eax;");
    asm("loc_65F3A4A: push $_data_66024C8;");
    asm("loc_65F3A4F: movl $0,(%edi);");
    asm("loc_65F3A55: push %eax;");
    asm("loc_65F3A56: mov _import_6601008,%eax;");
    asm("loc_65F3A5B: calll *(%eax);");
    asm("loc_65F3A5D: jmp loc_65F3C26;");
    asm("loc_65F3A62: mov 0x10(%esp),%eax;");
    asm("loc_65F3A66: mov (%eax),%edx;");
    asm("loc_65F3A68: lea 0x244(%esp),%ecx;");
    asm("loc_65F3A6F: push %ecx;");
    asm("loc_65F3A70: push $_data_6602664;");
    asm("loc_65F3A75: push %eax;");
    asm("loc_65F3A76: xor %ebx,%ebx;");
    asm("loc_65F3A78: xor %esi,%esi;");
    asm("loc_65F3A7A: calll *0x48(%edx);");
    asm("loc_65F3A7D: mov %eax,%ebp;");
    asm("loc_65F3A7F: cmp $0xFFFFFFFF,%ebp;");
    asm("loc_65F3A82: je loc_65F3BDE;");
    asm("loc_65F3A88: mov %esi,0x54(%esp);");
    asm("loc_65F3A8C: lea (%esp),%esp;");
    asm("loc_65F3A90: test %ebx,%ebx;");
    asm("loc_65F3A92: jne loc_65F3AA5;");
    asm("loc_65F3A94: mov 0x10(%edi),%edx;");
    asm("loc_65F3A97: and $2,%edx;");
    asm("loc_65F3A9A: cmp $2,%dl;");
    asm("loc_65F3A9D: je loc_65F3B9E;");
    asm("loc_65F3AA3: jmp loc_65F3AB3;");
    asm("loc_65F3AA5: mov 0x10(%edi),%eax;");
    asm("loc_65F3AA8: and $1,%eax;");
    asm("loc_65F3AAB: cmp $1,%al;");
    asm("loc_65F3AAD: je loc_65F3BCF;");
    asm("loc_65F3AB3: xor %eax,%eax;");
    asm("loc_65F3AB5: movl $_data_6602040,0x68(%esp);");
    asm("loc_65F3ABD: mov $0xB,%ecx;");
    asm("loc_65F3AC2: lea 0x6C(%esp),%edi;");
    asm("loc_65F3AC6: rep stos %eax,(%edi);");
    asm("loc_65F3AC8: mov 0x10(%esp),%eax;");
    asm("loc_65F3ACC: lea 0x270(%esp),%ecx;");
    asm("loc_65F3AD3: mov %ecx,0x70(%esp);");
    asm("loc_65F3AD7: lea 0x28(%esp),%ecx;");
    asm("loc_65F3ADB: push %ecx;");
    asm("loc_65F3ADC: lea 0x68(%esp),%ecx;");
    asm("loc_65F3AE0: push %ecx;");
    asm("loc_65F3AE1: movl $0,0x30(%esp);");
    asm("loc_65F3AE9: movl $0x80000000,0x7C(%esp);");
    asm("loc_65F3AF1: movl $1,0x80(%esp);");
    asm("loc_65F3AFC: movl $3,0x88(%esp);");
    asm("loc_65F3B07: movl $0x8000080,0x8C(%esp);");
    asm("loc_65F3B12: movl $0x34,0x6C(%esp);");
    asm("loc_65F3B1A: mov %ebp,0x9C(%esp);");
    asm("loc_65F3B21: mov (%eax),%edx;");
    asm("loc_65F3B23: push %eax;");
    asm("loc_65F3B24: calll *0xC(%edx);");
    asm("loc_65F3B27: test %eax,%eax;");
    asm("loc_65F3B29: jl loc_65F3B90;");
    asm("loc_65F3B2B: mov 0x5C(%esp),%eax;");
    asm("loc_65F3B2F: mov 0x24(%esp),%edi;");
    asm("loc_65F3B33: mov %bl,%dl;");
    asm("loc_65F3B35: add $0x30,%dl;");
    asm("loc_65F3B38: mov %dl,(%eax);");
    asm("loc_65F3B3A: cmp 0x14(%edi),%ebx;");
    asm("loc_65F3B3D: setb %cl;");
    asm("loc_65F3B40: mov %cl,0x58(%esp);");
    asm("loc_65F3B44: mov 0x58(%esp),%edx;");
    asm("loc_65F3B48: mov 0x28(%esp),%ecx;");
    asm("loc_65F3B4C: push %edx;");
    asm("loc_65F3B4D: mov 0x54(%esp),%edx;");
    asm("loc_65F3B51: lea 0x144(%esp),%eax;");
    asm("loc_65F3B58: push %eax;");
    asm("loc_65F3B59: push %ecx;");
    asm("loc_65F3B5A: push %edx;");
    asm("loc_65F3B5B: call _sub_65F26F0;");
    asm("loc_65F3B60: add $0x10,%esp;");
    asm("loc_65F3B63: test %eax,%eax;");
    asm("loc_65F3B65: je loc_65F3B90;");
    asm("loc_65F3B67: mov 0xCC(%esp,%ebx,4),%edx;");
    asm("loc_65F3B6E: mov %eax,0xEC(%esp,%esi,4);");
    asm("loc_65F3B75: mov 0x54(%esp),%eax;");
    asm("loc_65F3B79: mov 4(%edi),%ecx;");
    asm("loc_65F3B7C: mov %edx,8(%ecx,%eax);");
    asm("loc_65F3B80: add $0xC,%eax;");
    asm("loc_65F3B83: mov %eax,0x54(%esp);");
    asm("loc_65F3B87: mov 0x2C(%esp),%eax;");
    asm("loc_65F3B8B: inc %esi;");
    asm("loc_65F3B8C: cmp %eax,%esi;");
    asm("loc_65F3B8E: jge loc_65F3BC1;");
    asm("loc_65F3B90: mov 0x28(%esp),%eax;");
    asm("loc_65F3B94: test %eax,%eax;");
    asm("loc_65F3B96: je loc_65F3B9E;");
    asm("loc_65F3B98: mov (%eax),%ecx;");
    asm("loc_65F3B9A: push %eax;");
    asm("loc_65F3B9B: calll *8(%ecx);");
    asm("loc_65F3B9E: inc %ebx;");
    asm("loc_65F3B9F: je loc_65F3BCF;");
    asm("loc_65F3BA1: mov 0x10(%esp),%eax;");
    asm("loc_65F3BA5: mov (%eax),%edx;");
    asm("loc_65F3BA7: lea 0x244(%esp),%ecx;");
    asm("loc_65F3BAE: push %ecx;");
    asm("loc_65F3BAF: push %ebp;");
    asm("loc_65F3BB0: push %eax;");
    asm("loc_65F3BB1: calll *0x4C(%edx);");
    asm("loc_65F3BB4: test %eax,%eax;");
    asm("loc_65F3BB6: je loc_65F3BCF;");
    asm("loc_65F3BB8: mov 0x24(%esp),%edi;");
    asm("loc_65F3BBC: jmp loc_65F3A90;");
    asm("loc_65F3BC1: mov 0x28(%esp),%eax;");
    asm("loc_65F3BC5: test %eax,%eax;");
    asm("loc_65F3BC7: je loc_65F3BCF;");
    asm("loc_65F3BC9: mov (%eax),%edx;");
    asm("loc_65F3BCB: push %eax;");
    asm("loc_65F3BCC: calll *8(%edx);");
    asm("loc_65F3BCF: mov 0x10(%esp),%eax;");
    asm("loc_65F3BD3: mov (%eax),%ecx;");
    asm("loc_65F3BD5: push %ebp;");
    asm("loc_65F3BD6: push %eax;");
    asm("loc_65F3BD7: calll *0x50(%ecx);");
    asm("loc_65F3BDA: mov 0x24(%esp),%edi;");
    asm("loc_65F3BDE: mov 0x14(%esp),%ecx;");
    asm("loc_65F3BE2: mov 0x50(%esp),%eax;");
    asm("loc_65F3BE6: push %esi;");
    asm("loc_65F3BE7: lea 0xF0(%esp),%edx;");
    asm("loc_65F3BEE: push %edx;");
    asm("loc_65F3BEF: mov 0x20(%esp),%edx;");
    asm("loc_65F3BF3: mov %esi,(%edi);");
    asm("loc_65F3BF5: mov 8(%ecx),%ecx;");
    asm("loc_65F3BF8: push %eax;");
    asm("loc_65F3BF9: add %edx,%ecx;");
    asm("loc_65F3BFB: call _sub_65F67F0;");
    asm("loc_65F3C00: test %al,%al;");
    asm("loc_65F3C02: jne loc_65F3C29;");
    asm("loc_65F3C04: mov _import_6601008,%edx;");
    asm("loc_65F3C0A: push $_data_6602644;");
    asm("loc_65F3C0F: push $0x11F;");
    asm("loc_65F3C14: push $_data_6602570;");
    asm("loc_65F3C19: mov $0x100002,%eax;");
    asm("loc_65F3C1E: push $_data_66024C8;");
    asm("loc_65F3C23: push %eax;");
    asm("loc_65F3C24: calll *(%edx);");
    asm("loc_65F3C26: add $0x14,%esp;");
    asm("loc_65F3C29: mov 0x48(%esp),%ecx;");
    asm("loc_65F3C2D: test %ecx,%ecx;");
    asm("loc_65F3C2F: je loc_65F3C36;");
    asm("loc_65F3C31: call _sub_65F1420;");
    asm("loc_65F3C36: mov 0x10(%esp),%eax;");
    asm("loc_65F3C3A: test %eax,%eax;");
    asm("loc_65F3C3C: je loc_65F3C4C;");
    asm("loc_65F3C3E: mov (%eax),%ecx;");
    asm("loc_65F3C40: push %eax;");
    asm("loc_65F3C41: calll *8(%ecx);");
    asm("loc_65F3C44: movl $0,0x10(%esp);");
    asm("loc_65F3C4C: mov 0x20(%esp),%eax;");
    asm("loc_65F3C50: mov 0x4C(%esp),%esi;");
    asm("loc_65F3C54: mov 0x18(%esp),%edx;");
    asm("loc_65F3C58: mov 0x14(%esp),%ebp;");
    asm("loc_65F3C5C: mov 4(%ebp),%ecx;");
    asm("loc_65F3C5F: inc %eax;");
    asm("loc_65F3C60: add $0x18,%esi;");
    asm("loc_65F3C63: add $0x34,%edx;");
    asm("loc_65F3C66: cmp %ecx,%eax;");
    asm("loc_65F3C68: mov %eax,0x20(%esp);");
    asm("loc_65F3C6C: mov %esi,0x4C(%esp);");
    asm("loc_65F3C70: mov %edx,0x18(%esp);");
    asm("loc_65F3C74: jl loc_65F3749;");
    asm("loc_65F3C7A: mov 0x1F(%esp),%dl;");
    asm("loc_65F3C7E: mov 0x1F(%esp),%al;");
    asm("loc_65F3C82: lea 0x30(%esp),%ecx;");
    asm("loc_65F3C86: mov %dl,0x30(%esp);");
    asm("loc_65F3C8A: mov %al,0x31(%esp);");
    asm("loc_65F3C8E: movb $0,0x3C(%esp);");
    asm("loc_65F3C93: call _sub_65F62D0;");
    asm("loc_65F3C98: mov _data_6603134,%eax;");
    asm("loc_65F3C9D: lea 0x44(%esp),%edx;");
    asm("loc_65F3CA1: push %edx;");
    asm("loc_65F3CA2: xor %esi,%esi;");
    asm("loc_65F3CA4: push $_data_6602634;");
    asm("loc_65F3CA9: mov %esi,0x4C(%esp);");
    asm("loc_65F3CAD: mov (%eax),%ecx;");
    asm("loc_65F3CAF: push %eax;");
    asm("loc_65F3CB0: calll *(%ecx);");
    asm("loc_65F3CB2: test %eax,%eax;");
    asm("loc_65F3CB4: jge loc_65F3CD7;");
    asm("loc_65F3CB6: push $_data_66025F4;");
    asm("loc_65F3CBB: push $0x2B;");
    asm("loc_65F3CBD: push $_data_6602570;");
    asm("loc_65F3CC2: mov $0x100002,%eax;");
    asm("loc_65F3CC7: push $_data_66024C8;");
    asm("loc_65F3CCC: push %eax;");
    asm("loc_65F3CCD: mov _import_6601008,%eax;");
    asm("loc_65F3CD2: calll *(%eax);");
    asm("loc_65F3CD4: add $0x14,%esp;");
    asm("loc_65F3CD7: lea 0x30(%esp),%ecx;");
    asm("loc_65F3CDB: push %ecx;");
    asm("loc_65F3CDC: push $_sub_65F3540;");
    asm("loc_65F3CE1: mov %ebp,%ecx;");
    asm("loc_65F3CE3: call _sub_65F59D0;");
    asm("loc_65F3CE8: cmp %esi,4(%ebp);");
    asm("loc_65F3CEB: mov %esi,0x20(%esp);");
    asm("loc_65F3CEF: jle loc_65F3D85;");
    asm("loc_65F3CF5: movl $0,0x18(%esp);");
    asm("loc_65F3CFD: lea (%ecx),%ecx;");
    asm("loc_65F3D00: mov 0x18(%esp),%eax;");
    asm("loc_65F3D04: mov 8(%ebp),%edx;");
    asm("loc_65F3D07: mov (%eax,%edx),%edi;");
    asm("loc_65F3D0A: mov 8(%edi),%ecx;");
    asm("loc_65F3D0D: mov $1,%eax;");
    asm("loc_65F3D12: cmp %eax,%ecx;");
    asm("loc_65F3D14: mov %eax,0x14(%esp);");
    asm("loc_65F3D18: jle loc_65F3D66;");
    asm("loc_65F3D1A: mov $0x70,%ebx;");
    asm("loc_65F3D1F: nop;");
    asm("loc_65F3D20: mov 4(%edi),%esi;");
    asm("loc_65F3D23: mov 4(%esi,%ebx),%edx;");
    asm("loc_65F3D27: mov _data_6603134,%eax;");
    asm("loc_65F3D2C: mov (%eax),%ecx;");
    asm("loc_65F3D2E: add %ebx,%esi;");
    asm("loc_65F3D30: push %edx;");
    asm("loc_65F3D31: push %eax;");
    asm("loc_65F3D32: calll *0xD4(%ecx);");
    asm("loc_65F3D38: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F3D3B: jne loc_65F3D53;");
    asm("loc_65F3D3D: mov 4(%esi),%edx;");
    asm("loc_65F3D40: mov _data_6603134,%eax;");
    asm("loc_65F3D45: mov (%eax),%ecx;");
    asm("loc_65F3D47: push %edx;");
    asm("loc_65F3D48: push %eax;");
    asm("loc_65F3D49: calll *0x60(%ecx);");
    asm("loc_65F3D4C: movl $0xFFFFFFFF,4(%esi);");
    asm("loc_65F3D53: mov 0x14(%esp),%eax;");
    asm("loc_65F3D57: mov 8(%edi),%ecx;");
    asm("loc_65F3D5A: inc %eax;");
    asm("loc_65F3D5B: add $0x70,%ebx;");
    asm("loc_65F3D5E: cmp %ecx,%eax;");
    asm("loc_65F3D60: mov %eax,0x14(%esp);");
    asm("loc_65F3D64: jl loc_65F3D20;");
    asm("loc_65F3D66: mov 0x20(%esp),%eax;");
    asm("loc_65F3D6A: mov 0x18(%esp),%edx;");
    asm("loc_65F3D6E: mov 4(%ebp),%ecx;");
    asm("loc_65F3D71: inc %eax;");
    asm("loc_65F3D72: add $0x34,%edx;");
    asm("loc_65F3D75: cmp %ecx,%eax;");
    asm("loc_65F3D77: mov %eax,0x20(%esp);");
    asm("loc_65F3D7B: mov %edx,0x18(%esp);");
    asm("loc_65F3D7F: jl loc_65F3D00;");
    asm("loc_65F3D85: mov 0x44(%esp),%eax;");
    asm("loc_65F3D89: xor %ebx,%ebx;");
    asm("loc_65F3D8B: cmp %ebx,%eax;");
    asm("loc_65F3D8D: je loc_65F3D99;");
    asm("loc_65F3D8F: mov (%eax),%ecx;");
    asm("loc_65F3D91: push %eax;");
    asm("loc_65F3D92: calll *8(%ecx);");
    asm("loc_65F3D95: mov %ebx,0x44(%esp);");
    asm("loc_65F3D99: mov 0x34(%esp),%eax;");
    asm("loc_65F3D9D: cmp %ebx,0x40(%esp);");
    asm("loc_65F3DA1: mov (%eax),%ecx;");
    asm("loc_65F3DA3: mov %eax,%edi;");
    asm("loc_65F3DA5: mov %ecx,0x14(%esp);");
    asm("loc_65F3DA9: je loc_65F3E10;");
    asm("loc_65F3DAB: mov %ecx,%edx;");
    asm("loc_65F3DAD: cmp %edx,%ecx;");
    asm("loc_65F3DAF: jne loc_65F3E10;");
    asm("loc_65F3DB1: mov 4(%eax),%edi;");
    asm("loc_65F3DB4: mov 0x38(%esp),%ecx;");
    asm("loc_65F3DB8: cmp %ecx,%edi;");
    asm("loc_65F3DBA: mov %edi,%esi;");
    asm("loc_65F3DBC: je loc_65F3DE6;");
    asm("loc_65F3DBE: mov %edi,%edi;");
    asm("loc_65F3DC0: mov 8(%esi),%edx;");
    asm("loc_65F3DC3: push %edx;");
    asm("loc_65F3DC4: lea 0x34(%esp),%ecx;");
    asm("loc_65F3DC8: call _sub_65F6290;");
    asm("loc_65F3DCD: mov (%esi),%esi;");
    asm("loc_65F3DCF: push %edi;");
    asm("loc_65F3DD0: call _sub_6600BB0;");
    asm("loc_65F3DD5: mov 0x3C(%esp),%ecx;");
    asm("loc_65F3DD9: add $4,%esp;");
    asm("loc_65F3DDC: cmp %ecx,%esi;");
    asm("loc_65F3DDE: mov %esi,%edi;");
    asm("loc_65F3DE0: jne loc_65F3DC0;");
    asm("loc_65F3DE2: mov 0x34(%esp),%eax;");
    asm("loc_65F3DE6: mov %ecx,4(%eax);");
    asm("loc_65F3DE9: mov 0x34(%esp),%eax;");
    asm("loc_65F3DED: movl $0,0x40(%esp);");
    asm("loc_65F3DF5: mov %eax,(%eax);");
    asm("loc_65F3DF7: mov 0x34(%esp),%eax;");
    asm("loc_65F3DFB: mov %eax,8(%eax);");
    asm("loc_65F3DFE: lea 0x60(%esp),%eax;");
    asm("loc_65F3E02: push %eax;");
    asm("loc_65F3E03: lea 0x34(%esp),%ecx;");
    asm("loc_65F3E07: call _sub_65F2A30;");
    asm("loc_65F3E0C: xor %ebx,%ebx;");
    asm("loc_65F3E0E: jmp loc_65F3E36;");
    asm("loc_65F3E10: cmp %eax,%ecx;");
    asm("loc_65F3E12: je loc_65F3E3A;");
    asm("loc_65F3E14: mov %ecx,%esi;");
    asm("loc_65F3E16: lea 0x14(%esp),%ecx;");
    asm("loc_65F3E1A: call _sub_65F6620;");
    asm("loc_65F3E1F: push %esi;");
    asm("loc_65F3E20: lea 0x5C(%esp),%ecx;");
    asm("loc_65F3E24: push %ecx;");
    asm("loc_65F3E25: lea 0x38(%esp),%ecx;");
    asm("loc_65F3E29: call _sub_65F5EC0;");
    asm("loc_65F3E2E: mov 0x14(%esp),%ecx;");
    asm("loc_65F3E32: cmp %edi,%ecx;");
    asm("loc_65F3E34: jne loc_65F3E14;");
    asm("loc_65F3E36: mov 0x34(%esp),%eax;");
    asm("loc_65F3E3A: push %eax;");
    asm("loc_65F3E3B: call _sub_6600BB0;");
    asm("loc_65F3E40: mov 0x3C(%esp),%edx;");
    asm("loc_65F3E44: push %edx;");
    asm("loc_65F3E45: mov %ebx,0x3C(%esp);");
    asm("loc_65F3E49: mov %ebx,0x48(%esp);");
    asm("loc_65F3E4D: call _sub_6600BB0;");
    asm("loc_65F3E52: add $8,%esp;");
    asm("loc_65F3E55: pop %edi;");
    asm("loc_65F3E56: pop %esi;");
    asm("loc_65F3E57: pop %ebp;");
    asm("loc_65F3E58: mov $1,%al;");
    asm("loc_65F3E5A: pop %ebx;");
    asm("loc_65F3E5B: add $0x474,%esp;");
    asm("loc_65F3E61: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3E70() // ??4type_info@@AAEAAV0@ABV0@@Z
{
    __DEBUG_ASM(65F3E70);
    // chunk 0x65F3E70 _sub_65F3E70
    asm("loc_65F3E70: mov %ecx,%eax;");
    asm("loc_65F3E72: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3E80() // _sub_65F3E80
{
    __DEBUG_ASM(65F3E80);
    // chunk 0x65F3E80 _sub_65F3E80
    asm("loc_65F3E80: mov 8(%esp),%eax;");
    asm("loc_65F3E84: mov %ecx,%edx;");
    asm("loc_65F3E86: push %edi;");
    asm("loc_65F3E87: mov %eax,4(%edx);");
    asm("loc_65F3E8A: xor %eax,%eax;");
    asm("loc_65F3E8C: mov $0xB,%ecx;");
    asm("loc_65F3E91: lea 8(%edx),%edi;");
    asm("loc_65F3E94: rep stos %eax,(%edi);");
    asm("loc_65F3E96: mov 8(%esp),%ecx;");
    asm("loc_65F3E9A: movl $0x80000000,0x10(%edx);");
    asm("loc_65F3EA1: movl $1,0x14(%edx);");
    asm("loc_65F3EA8: movl $3,0x1C(%edx);");
    asm("loc_65F3EAF: movl $0x8000080,0x20(%edx);");
    asm("loc_65F3EB6: mov %ecx,0xC(%edx);");
    asm("loc_65F3EB9: movl $0x34,(%edx);");
    asm("loc_65F3EBF: movl $0xFFFFFFFF,0x30(%edx);");
    asm("loc_65F3EC6: mov %edx,%eax;");
    asm("loc_65F3EC8: pop %edi;");
    asm("loc_65F3EC9: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3ED0() // _sub_65F3ED0
{
    __DEBUG_ASM(65F3ED0);
    // chunk 0x65F3ED0 _sub_65F3ED0
    asm("loc_65F3ED0: push %ebx;");
    asm("loc_65F3ED1: push %ebp;");
    asm("loc_65F3ED2: push %esi;");
    asm("loc_65F3ED3: push %edi;");
    asm("loc_65F3ED4: mov %ecx,%edi;");
    asm("loc_65F3ED6: mov 0xC(%edi),%esi;");
    asm("loc_65F3ED9: xor %ebx,%ebx;");
    asm("loc_65F3EDB: cmp %ebx,%esi;");
    asm("loc_65F3EDD: je loc_65F3F1E;");
    asm("loc_65F3EDF: nop;");
    asm("loc_65F3EE0: cmpb $0,(%esi);");
    asm("loc_65F3EE3: mov _data_6603138,%eax;");
    asm("loc_65F3EE8: je loc_65F3F06;");
    asm("loc_65F3EEA: mov 4(%esi),%ebp;");
    asm("loc_65F3EED: cmp %ebx,%ebp;");
    asm("loc_65F3EEF: je loc_65F3F01;");
    asm("loc_65F3EF1: mov %ebp,%ecx;");
    asm("loc_65F3EF3: call _sub_65FBF40;");
    asm("loc_65F3EF8: push %ebp;");
    asm("loc_65F3EF9: call _sub_6600BB0;");
    asm("loc_65F3EFE: add $4,%esp;");
    asm("loc_65F3F01: mov %ebx,4(%esi);");
    asm("loc_65F3F04: jmp loc_65F3F17;");
    asm("loc_65F3F06: mov 4(%esi),%edx;");
    asm("loc_65F3F09: mov (%eax),%ecx;");
    asm("loc_65F3F0B: push %edx;");
    asm("loc_65F3F0C: push %eax;");
    asm("loc_65F3F0D: calll *0x28(%ecx);");
    asm("loc_65F3F10: movl $0xFFFFFFFF,4(%esi);");
    asm("loc_65F3F17: mov 0x10(%esi),%esi;");
    asm("loc_65F3F1A: cmp %ebx,%esi;");
    asm("loc_65F3F1C: jne loc_65F3EE0;");
    asm("loc_65F3F1E: cmp %ebx,0x14(%edi);");
    asm("loc_65F3F21: mov 0xC(%edi),%eax;");
    asm("loc_65F3F24: je loc_65F3F68;");
    asm("loc_65F3F26: mov 0xC(%eax),%edx;");
    asm("loc_65F3F29: cmp %ebx,%edx;");
    asm("loc_65F3F2B: mov 0x10(%eax),%ecx;");
    asm("loc_65F3F2E: mov %ecx,%esi;");
    asm("loc_65F3F30: jne loc_65F3F37;");
    asm("loc_65F3F32: mov %ecx,0xC(%edi);");
    asm("loc_65F3F35: jmp loc_65F3F3A;");
    asm("loc_65F3F37: mov %ecx,0x10(%edx);");
    asm("loc_65F3F3A: mov 0x10(%eax),%ecx;");
    asm("loc_65F3F3D: cmp %ebx,%ecx;");
    asm("loc_65F3F3F: jne loc_65F3F49;");
    asm("loc_65F3F41: mov 0xC(%eax),%ecx;");
    asm("loc_65F3F44: mov %ecx,0x10(%edi);");
    asm("loc_65F3F47: jmp loc_65F3F4F;");
    asm("loc_65F3F49: mov 0xC(%eax),%edx;");
    asm("loc_65F3F4C: mov %edx,0xC(%ecx);");
    asm("loc_65F3F4F: mov 0x14(%edi),%ecx;");
    asm("loc_65F3F52: dec %ecx;");
    asm("loc_65F3F53: push %eax;");
    asm("loc_65F3F54: mov %ecx,0x14(%edi);");
    asm("loc_65F3F57: call _sub_6600BB0;");
    asm("loc_65F3F5C: mov 0x14(%edi),%ecx;");
    asm("loc_65F3F5F: add $4,%esp;");
    asm("loc_65F3F62: cmp %ebx,%ecx;");
    asm("loc_65F3F64: mov %esi,%eax;");
    asm("loc_65F3F66: jne loc_65F3F26;");
    asm("loc_65F3F68: mov 8(%edi),%eax;");
    asm("loc_65F3F6B: cmp %ebx,%eax;");
    asm("loc_65F3F6D: je loc_65F3FBE;");
    asm("loc_65F3F6F: mov (%eax),%eax;");
    asm("loc_65F3F71: mov 4(%eax),%ecx;");
    asm("loc_65F3F74: mov 4(%ecx),%eax;");
    asm("loc_65F3F77: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F3F7A: je loc_65F3F89;");
    asm("loc_65F3F7C: mov _data_6603134,%ecx;");
    asm("loc_65F3F82: mov (%ecx),%edx;");
    asm("loc_65F3F84: push %eax;");
    asm("loc_65F3F85: push %ecx;");
    asm("loc_65F3F86: calll *0x60(%edx);");
    asm("loc_65F3F89: mov 8(%edi),%ecx;");
    asm("loc_65F3F8C: cmp %ebx,%ecx;");
    asm("loc_65F3F8E: je loc_65F3FBB;");
    asm("loc_65F3F90: mov -4(%ecx),%eax;");
    asm("loc_65F3F93: lea -4(%ecx),%ebx;");
    asm("loc_65F3F96: mov %eax,%esi;");
    asm("loc_65F3F98: imul $0x34,%esi;");
    asm("loc_65F3F9B: add %ecx,%esi;");
    asm("loc_65F3F9D: dec %eax;");
    asm("loc_65F3F9E: js loc_65F3FB0;");
    asm("loc_65F3FA0: lea 1(%eax),%ebp;");
    asm("loc_65F3FA3: sub $0x34,%esi;");
    asm("loc_65F3FA6: mov %esi,%ecx;");
    asm("loc_65F3FA8: call _sub_65F6760;");
    asm("loc_65F3FAD: dec %ebp;");
    asm("loc_65F3FAE: jne loc_65F3FA3;");
    asm("loc_65F3FB0: push %ebx;");
    asm("loc_65F3FB1: call _sub_6600BB0;");
    asm("loc_65F3FB6: add $4,%esp;");
    asm("loc_65F3FB9: xor %ebx,%ebx;");
    asm("loc_65F3FBB: mov %ebx,8(%edi);");
    asm("loc_65F3FBE: mov %ebx,4(%edi);");
    asm("loc_65F3FC1: pop %edi;");
    asm("loc_65F3FC2: pop %esi;");
    asm("loc_65F3FC3: pop %ebp;");
    asm("loc_65F3FC4: pop %ebx;");
    asm("loc_65F3FC5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F3FD0() // _sub_65F3FD0
{
    __DEBUG_ASM(65F3FD0);
    // chunk 0x65F3FD0 _sub_65F3FD0
    asm("loc_65F3FD0: push %ecx;");
    asm("loc_65F3FD1: push %ebx;");
    asm("loc_65F3FD2: push %ebp;");
    asm("loc_65F3FD3: push %esi;");
    asm("loc_65F3FD4: mov %ecx,%esi;");
    asm("loc_65F3FD6: mov 4(%esi),%eax;");
    asm("loc_65F3FD9: push %edi;");
    asm("loc_65F3FDA: xor %edi,%edi;");
    asm("loc_65F3FDC: test %eax,%eax;");
    asm("loc_65F3FDE: movb $0,0x13(%esp);");
    asm("loc_65F3FE3: jle loc_65F401B;");
    asm("loc_65F3FE5: xor %ebp,%ebp;");
    asm("loc_65F3FE7: mov 0x18(%esp),%eax;");
    asm("loc_65F3FEB: mov (%eax,%edi,4),%ecx;");
    asm("loc_65F3FEE: push %ecx;");
    asm("loc_65F3FEF: mov 8(%esi),%ecx;");
    asm("loc_65F3FF2: add %ebp,%ecx;");
    asm("loc_65F3FF4: call _sub_65F6930;");
    asm("loc_65F3FF9: mov 0x13(%esp),%bl;");
    asm("loc_65F3FFD: or %al,%bl;");
    asm("loc_65F3FFF: mov 4(%esi),%eax;");
    asm("loc_65F4002: inc %edi;");
    asm("loc_65F4003: add $0x34,%ebp;");
    asm("loc_65F4006: cmp %eax,%edi;");
    asm("loc_65F4008: mov %bl,0x13(%esp);");
    asm("loc_65F400C: jl loc_65F3FE7;");
    asm("loc_65F400E: mov %bl,%al;");
    asm("loc_65F4010: test %al,%al;");
    asm("loc_65F4012: je loc_65F401B;");
    asm("loc_65F4014: movl $0xBF800000,0x28(%esi);");
    asm("loc_65F401B: flds 0x28(%esi);");
    asm("loc_65F401E: fsubs 0x1C(%esp);");
    asm("loc_65F4022: fsts 0x28(%esi);");
    asm("loc_65F4025: fcomps _data_6601318;");
    asm("loc_65F402B: fnstsw %ax;");
    asm("loc_65F402D: test $0x41,%ah;");
    asm("loc_65F4030: jp loc_65F4066;");
    asm("loc_65F4032: mov 4(%esi),%eax;");
    asm("loc_65F4035: mov _data_660314C,%edx;");
    asm("loc_65F403B: xor %edi,%edi;");
    asm("loc_65F403D: test %eax,%eax;");
    asm("loc_65F403F: mov %edx,0x28(%esi);");
    asm("loc_65F4042: jle loc_65F4066;");
    asm("loc_65F4044: mov 0x1C(%esp),%ebp;");
    asm("loc_65F4048: xor %ebx,%ebx;");
    asm("loc_65F404A: lea (%ebx),%ebx;");
    asm("loc_65F4050: mov 8(%esi),%ecx;");
    asm("loc_65F4053: push %ebp;");
    asm("loc_65F4054: add %ebx,%ecx;");
    asm("loc_65F4056: call _sub_65F69C0;");
    asm("loc_65F405B: mov 4(%esi),%eax;");
    asm("loc_65F405E: inc %edi;");
    asm("loc_65F405F: add $0x34,%ebx;");
    asm("loc_65F4062: cmp %eax,%edi;");
    asm("loc_65F4064: jl loc_65F4050;");
    asm("loc_65F4066: pop %edi;");
    asm("loc_65F4067: pop %esi;");
    asm("loc_65F4068: pop %ebp;");
    asm("loc_65F4069: pop %ebx;");
    asm("loc_65F406A: pop %ecx;");
    asm("loc_65F406B: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F4070() // _sub_65F4070
{
    __DEBUG_ASM(65F4070);
    // chunk 0x65F4070 _sub_65F4070
    asm("loc_65F4070: sub $0x28,%esp;");
    asm("loc_65F4073: mov 0x34(%esp),%eax;");
    asm("loc_65F4077: push %ebx;");
    asm("loc_65F4078: push %ebp;");
    asm("loc_65F4079: mov %ecx,%ebp;");
    asm("loc_65F407B: movl $0,(%eax);");
    asm("loc_65F4081: mov 4(%ebp),%eax;");
    asm("loc_65F4084: test %eax,%eax;");
    asm("loc_65F4086: push %esi;");
    asm("loc_65F4087: push %edi;");
    asm("loc_65F4088: movl $0,0x10(%esp);");
    asm("loc_65F4090: jle loc_65F41C0;");
    asm("loc_65F4096: mov 0x40(%esp),%edi;");
    asm("loc_65F409A: lea (%ebx),%ebx;");
    asm("loc_65F40A0: mov 0x10(%esp),%esi;");
    asm("loc_65F40A4: imul $0x34,%esi;");
    asm("loc_65F40A7: lea 0x2C(%esp),%ecx;");
    asm("loc_65F40AB: push %ecx;");
    asm("loc_65F40AC: mov 8(%ebp),%ecx;");
    asm("loc_65F40AF: lea 0x44(%esp),%edx;");
    asm("loc_65F40B3: push %edx;");
    asm("loc_65F40B4: add %esi,%ecx;");
    asm("loc_65F40B6: call _sub_65F68C0;");
    asm("loc_65F40BB: mov (%edi),%eax;");
    asm("loc_65F40BD: push %edi;");
    asm("loc_65F40BE: calll *0x40(%eax);");
    asm("loc_65F40C1: mov %eax,%ebx;");
    asm("loc_65F40C3: mov _data_6603170,%eax;");
    asm("loc_65F40C8: test %eax,%eax;");
    asm("loc_65F40CA: jne loc_65F40D6;");
    asm("loc_65F40CC: call _sub_6600DE0;");
    asm("loc_65F40D1: mov %eax,_data_6603170;");
    asm("loc_65F40D6: mov (%eax),%ecx;");
    asm("loc_65F40D8: lea 0x2C(%esp),%edx;");
    asm("loc_65F40DC: push %edx;");
    asm("loc_65F40DD: push %ebx;");
    asm("loc_65F40DE: lea 0x1C(%esp),%edx;");
    asm("loc_65F40E2: push %edx;");
    asm("loc_65F40E3: push %eax;");
    asm("loc_65F40E4: calll *0x28(%ecx);");
    asm("loc_65F40E7: mov 0x18(%esp),%ecx;");
    asm("loc_65F40EB: mov 0x1C(%esp),%edx;");
    asm("loc_65F40EF: mov 0x14(%esp),%eax;");
    asm("loc_65F40F3: mov %ecx,0x24(%esp);");
    asm("loc_65F40F7: mov 0x40(%esp),%ecx;");
    asm("loc_65F40FB: mov %edx,0x28(%esp);");
    asm("loc_65F40FF: push %ecx;");
    asm("loc_65F4100: lea 0x24(%esp),%edx;");
    asm("loc_65F4104: push %edx;");
    asm("loc_65F4105: mov %eax,0x28(%esp);");
    asm("loc_65F4109: mov (%edi),%eax;");
    asm("loc_65F410B: push %edi;");
    asm("loc_65F410C: calll *0x3C(%eax);");
    asm("loc_65F410F: mov %eax,%ebx;");
    asm("loc_65F4111: cmp $2,%ebx;");
    asm("loc_65F4114: jle loc_65F4126;");
    asm("loc_65F4116: mov 0x48(%esp),%eax;");
    asm("loc_65F411A: mov 8(%ebp),%ecx;");
    asm("loc_65F411D: push %eax;");
    asm("loc_65F411E: push %edi;");
    asm("loc_65F411F: add %esi,%ecx;");
    asm("loc_65F4121: call _sub_65F69D0;");
    asm("loc_65F4126: mov 0x10(%esp),%ecx;");
    asm("loc_65F412A: test %ecx,%ecx;");
    asm("loc_65F412C: jne loc_65F4136;");
    asm("loc_65F412E: mov 0x44(%esp),%edx;");
    asm("loc_65F4132: mov %ebx,(%edx);");
    asm("loc_65F4134: jmp loc_65F4159;");
    asm("loc_65F4136: mov 0x44(%esp),%eax;");
    asm("loc_65F413A: mov (%eax),%eax;");
    asm("loc_65F413C: cmp %ebx,%eax;");
    asm("loc_65F413E: je loc_65F4159;");
    asm("loc_65F4140: jge loc_65F4148;");
    asm("loc_65F4142: mov 0x44(%esp),%edx;");
    asm("loc_65F4146: mov %ebx,(%edx);");
    asm("loc_65F4148: mov 0x44(%esp),%eax;");
    asm("loc_65F414C: cmpl $3,(%eax);");
    asm("loc_65F414F: jl loc_65F4159;");
    asm("loc_65F4151: mov %eax,%edx;");
    asm("loc_65F4153: movl $3,(%edx);");
    asm("loc_65F4159: mov 4(%ebp),%eax;");
    asm("loc_65F415C: inc %ecx;");
    asm("loc_65F415D: cmp %eax,%ecx;");
    asm("loc_65F415F: mov %ecx,0x10(%esp);");
    asm("loc_65F4163: jl loc_65F40A0;");
    asm("loc_65F4169: mov 0x44(%esp),%esi;");
    asm("loc_65F416D: cmpl $3,(%esi);");
    asm("loc_65F4170: jl loc_65F41C0;");
    asm("loc_65F4172: mov 8(%ebp),%ebp;");
    asm("loc_65F4175: test %ebp,%ebp;");
    asm("loc_65F4177: jne loc_65F417E;");
    asm("loc_65F4179: or $0xFFFFFFFF,%ecx;");
    asm("loc_65F417C: jmp loc_65F4187;");
    asm("loc_65F417E: mov (%ebp),%eax;");
    asm("loc_65F4181: mov 4(%eax),%ecx;");
    asm("loc_65F4184: mov 4(%ecx),%ecx;");
    asm("loc_65F4187: mov 0x48(%esp),%ebx;");
    asm("loc_65F418B: mov _data_6603140,%eax;");
    asm("loc_65F4190: mov (%eax),%edx;");
    asm("loc_65F4192: push %ebx;");
    asm("loc_65F4193: mov 0x50(%esp),%ebx;");
    asm("loc_65F4197: push $0;");
    asm("loc_65F4199: or $0x108,%ebx;");
    asm("loc_65F419F: push %ebx;");
    asm("loc_65F41A0: push $0x3F800000;");
    asm("loc_65F41A5: push %ecx;");
    asm("loc_65F41A6: push %edi;");
    asm("loc_65F41A7: push %eax;");
    asm("loc_65F41A8: calll *0x1C(%edx);");
    asm("loc_65F41AB: mov (%esi),%ecx;");
    asm("loc_65F41AD: cmp %eax,%ecx;");
    asm("loc_65F41AF: je loc_65F41C0;");
    asm("loc_65F41B1: jge loc_65F41B5;");
    asm("loc_65F41B3: mov %eax,(%esi);");
    asm("loc_65F41B5: cmpl $3,(%esi);");
    asm("loc_65F41B8: jl loc_65F41C0;");
    asm("loc_65F41BA: movl $3,(%esi);");
    asm("loc_65F41C0: pop %edi;");
    asm("loc_65F41C1: pop %esi;");
    asm("loc_65F41C2: pop %ebp;");
    asm("loc_65F41C3: pop %ebx;");
    asm("loc_65F41C4: add $0x28,%esp;");
    asm("loc_65F41C7: ret $0x14;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F41D0() // _sub_65F41D0
{
    __DEBUG_ASM(65F41D0);
    // chunk 0x65F41D0 _sub_65F41D0
    asm("loc_65F41D0: sub $0xAC,%esp;");
    asm("loc_65F41D6: push %ebx;");
    asm("loc_65F41D7: push %ebp;");
    asm("loc_65F41D8: push %esi;");
    asm("loc_65F41D9: push %edi;");
    asm("loc_65F41DA: mov %ecx,%ebp;");
    asm("loc_65F41DC: or $0xFFFFFFFF,%esi;");
    asm("loc_65F41DF: call _sub_65F4DE0;");
    asm("loc_65F41E4: mov 8(%ebp),%eax;");
    asm("loc_65F41E7: test %eax,%eax;");
    asm("loc_65F41E9: jne loc_65F41F0;");
    asm("loc_65F41EB: or $0xFFFFFFFF,%eax;");
    asm("loc_65F41EE: jmp loc_65F41F8;");
    asm("loc_65F41F0: mov (%eax),%eax;");
    asm("loc_65F41F2: mov 4(%eax),%ecx;");
    asm("loc_65F41F5: mov 4(%ecx),%eax;");
    asm("loc_65F41F8: mov 0xE0(%esp),%edx;");
    asm("loc_65F41FF: test %edx,%edx;");
    asm("loc_65F4201: mov _data_6603138,%ecx;");
    asm("loc_65F4207: je loc_65F4224;");
    asm("loc_65F4209: mov (%ecx),%edi;");
    asm("loc_65F420B: push %edx;");
    asm("loc_65F420C: mov 0xC8(%esp),%edx;");
    asm("loc_65F4213: push %ebp;");
    asm("loc_65F4214: push %edx;");
    asm("loc_65F4215: push %eax;");
    asm("loc_65F4216: mov 0xD0(%esp),%eax;");
    asm("loc_65F421D: push %eax;");
    asm("loc_65F421E: push %ecx;");
    asm("loc_65F421F: calll *0x24(%edi);");
    asm("loc_65F4222: jmp loc_65F4240;");
    asm("loc_65F4224: mov 0x1C(%ebp),%edi;");
    asm("loc_65F4227: mov (%ecx),%edx;");
    asm("loc_65F4229: push %edi;");
    asm("loc_65F422A: mov 0xC8(%esp),%edi;");
    asm("loc_65F4231: push %ebp;");
    asm("loc_65F4232: push %edi;");
    asm("loc_65F4233: push %eax;");
    asm("loc_65F4234: mov 0xD0(%esp),%eax;");
    asm("loc_65F423B: push %eax;");
    asm("loc_65F423C: push %ecx;");
    asm("loc_65F423D: calll *0x24(%edx);");
    asm("loc_65F4240: mov %eax,%ebx;");
    asm("loc_65F4242: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_65F4245: je loc_65F456F;");
    asm("loc_65F424B: flds 0xC8(%esp);");
    asm("loc_65F4252: mov 8(%ebp),%ecx;");
    asm("loc_65F4255: mov (%ecx),%edx;");
    asm("loc_65F4257: fcomps _data_6601318;");
    asm("loc_65F425D: mov 4(%edx),%esi;");
    asm("loc_65F4260: add $0x30,%esi;");
    asm("loc_65F4263: movl $0,0x14(%esp);");
    asm("loc_65F426B: fnstsw %ax;");
    asm("loc_65F426D: movl $0,0x18(%esp);");
    asm("loc_65F4275: movl $0,0x1C(%esp);");
    asm("loc_65F427D: test $0x41,%ah;");
    asm("loc_65F4280: jne loc_65F4301;");
    asm("loc_65F4282: mov _data_6603138,%eax;");
    asm("loc_65F4287: lea 0x10(%esp),%edx;");
    asm("loc_65F428B: push %edx;");
    asm("loc_65F428C: push $_data_66026CC;");
    asm("loc_65F4291: movl $0,0x18(%esp);");
    asm("loc_65F4299: mov (%eax),%ecx;");
    asm("loc_65F429B: push %eax;");
    asm("loc_65F429C: calll *(%ecx);");
    asm("loc_65F429E: test %eax,%eax;");
    asm("loc_65F42A0: jne loc_65F42F3;");
    asm("loc_65F42A2: mov 0xD4(%esp),%edx;");
    asm("loc_65F42A9: mov 0x10(%esp),%eax;");
    asm("loc_65F42AD: mov (%eax),%ecx;");
    asm("loc_65F42AF: push $0x3F800000;");
    asm("loc_65F42B4: push %edx;");
    asm("loc_65F42B5: mov 0xD4(%esp),%edx;");
    asm("loc_65F42BC: push %edx;");
    asm("loc_65F42BD: mov 0xDC(%esp),%edx;");
    asm("loc_65F42C4: push %edx;");
    asm("loc_65F42C5: mov 0xD8(%esp),%edx;");
    asm("loc_65F42CC: push %edx;");
    asm("loc_65F42CD: mov 0xEC(%esp),%edx;");
    asm("loc_65F42D4: push %edx;");
    asm("loc_65F42D5: lea 0x2C(%esp),%edx;");
    asm("loc_65F42D9: push %edx;");
    asm("loc_65F42DA: push %ebx;");
    asm("loc_65F42DB: push %eax;");
    asm("loc_65F42DC: calll *0xC(%ecx);");
    asm("loc_65F42DF: test %al,%al;");
    asm("loc_65F42E1: je loc_65F42F3;");
    asm("loc_65F42E3: movl $0,0x1C(%esp);");
    asm("loc_65F42EB: movl $0,0x14(%esp);");
    asm("loc_65F42F3: mov 0x10(%esp),%eax;");
    asm("loc_65F42F7: test %eax,%eax;");
    asm("loc_65F42F9: je loc_65F4301;");
    asm("loc_65F42FB: mov (%eax),%ecx;");
    asm("loc_65F42FD: push %eax;");
    asm("loc_65F42FE: calll *8(%ecx);");
    asm("loc_65F4301: mov _data_6603138,%eax;");
    asm("loc_65F4306: mov (%eax),%edx;");
    asm("loc_65F4308: lea 0x48(%esp),%ecx;");
    asm("loc_65F430C: push %ecx;");
    asm("loc_65F430D: mov 0xC8(%esp),%ecx;");
    asm("loc_65F4314: push %ecx;");
    asm("loc_65F4315: mov 0xC8(%esp),%ecx;");
    asm("loc_65F431C: push %ecx;");
    asm("loc_65F431D: push %eax;");
    asm("loc_65F431E: calll *0x64(%edx);");
    asm("loc_65F4321: test %eax,%eax;");
    asm("loc_65F4323: je loc_65F432B;");
    asm("loc_65F4325: flds 0x48(%esp);");
    asm("loc_65F4329: jmp loc_65F432E;");
    asm("loc_65F432B: flds 0x24(%ebp);");
    asm("loc_65F432E: fadds 0x20(%ebp);");
    asm("loc_65F4331: fstps 0x10(%esp);");
    asm("loc_65F4335: flds (%esi);");
    asm("loc_65F4337: flds 8(%esi);");
    asm("loc_65F433A: fxch;");
    asm("loc_65F433C: fadds 0x14(%esp);");
    asm("loc_65F4340: fstps 0x4C(%esp);");
    asm("loc_65F4344: flds 0x18(%esp);");
    asm("loc_65F4348: fadds 0x10(%esp);");
    asm("loc_65F434C: fstps 0x50(%esp);");
    asm("loc_65F4350: fadds 0x1C(%esp);");
    asm("loc_65F4354: fstps 0x54(%esp);");
    asm("loc_65F4358: flds 0xDC(%esp);");
    asm("loc_65F435F: fcomps _data_6601318;");
    asm("loc_65F4365: fnstsw %ax;");
    asm("loc_65F4367: test $5,%ah;");
    asm("loc_65F436A: jp loc_65F43D6;");
    asm("loc_65F436C: mov 8(%ebp),%edx;");
    asm("loc_65F436F: mov (%edx),%eax;");
    asm("loc_65F4371: mov 4(%eax),%eax;");
    asm("loc_65F4374: mov 0x2C(%eax),%ecx;");
    asm("loc_65F4377: mov 0x20(%eax),%edx;");
    asm("loc_65F437A: add $0xC,%eax;");
    asm("loc_65F437D: mov 8(%eax),%eax;");
    asm("loc_65F4380: push %ecx;");
    asm("loc_65F4381: push %edx;");
    asm("loc_65F4382: push %eax;");
    asm("loc_65F4383: lea 0x38(%esp),%ecx;");
    asm("loc_65F4387: call _sub_65F4580;");
    asm("loc_65F438C: flds 0x2C(%esp);");
    asm("loc_65F4390: flds 0x34(%esp);");
    asm("loc_65F4394: push %ecx;");
    asm("loc_65F4395: fpatan;");
    asm("loc_65F4397: lea 0x24(%esp),%ecx;");
    asm("loc_65F439B: movl $0,0x24(%esp);");
    asm("loc_65F43A3: movl $0x3F800000,0x28(%esp);");
    asm("loc_65F43AB: movl $0,0x2C(%esp);");
    asm("loc_65F43B3: fstps (%esp);");
    asm("loc_65F43B6: push %ecx;");
    asm("loc_65F43B7: lea 0x60(%esp),%ecx;");
    asm("loc_65F43BB: call _sub_65F45D0;");
    asm("loc_65F43C0: mov 0x58(%esp),%edx;");
    asm("loc_65F43C4: mov 0x5C(%esp),%eax;");
    asm("loc_65F43C8: mov 0x60(%esp),%ecx;");
    asm("loc_65F43CC: mov %edx,0x38(%esp);");
    asm("loc_65F43D0: mov 0x64(%esp),%edx;");
    asm("loc_65F43D4: jmp loc_65F443D;");
    asm("loc_65F43D6: flds 0xDC(%esp);");
    asm("loc_65F43DD: push %ecx;");
    asm("loc_65F43DE: fmuls _data_6601328;");
    asm("loc_65F43E4: lea 0x24(%esp),%eax;");
    asm("loc_65F43E8: lea 0x30(%esp),%ecx;");
    asm("loc_65F43EC: movl $0,0x24(%esp);");
    asm("loc_65F43F4: fld %st(0);");
    asm("loc_65F43F6: movl $0x3F800000,0x28(%esp);");
    asm("loc_65F43FE: fcos;");
    asm("loc_65F4400: movl $0,0x2C(%esp);");
    asm("loc_65F4408: fstps 0x5C(%esp);");
    asm("loc_65F440C: fsin;");
    asm("loc_65F440E: fldl _data_6601320;");
    asm("loc_65F4414: fsqrt;");
    asm("loc_65F4416: fxch;");
    asm("loc_65F4418: fxch;");
    asm("loc_65F441A: fdivrp;");
    asm("loc_65F441C: fstps (%esp);");
    asm("loc_65F441F: push %eax;");
    asm("loc_65F4420: push %ecx;");
    asm("loc_65F4421: call _sub_65F45A0;");
    asm("loc_65F4426: mov 0x64(%esp),%esi;");
    asm("loc_65F442A: mov 0x38(%esp),%eax;");
    asm("loc_65F442E: mov 0x3C(%esp),%ecx;");
    asm("loc_65F4432: mov 0x40(%esp),%edx;");
    asm("loc_65F4436: add $0xC,%esp;");
    asm("loc_65F4439: mov %esi,0x38(%esp);");
    asm("loc_65F443D: mov %eax,0x3C(%esp);");
    asm("loc_65F4441: mov 0x50(%esp),%eax;");
    asm("loc_65F4445: mov %eax,0x90(%esp);");
    asm("loc_65F444C: mov _data_6603170,%eax;");
    asm("loc_65F4451: test %eax,%eax;");
    asm("loc_65F4453: mov %ecx,0x40(%esp);");
    asm("loc_65F4457: mov 0x54(%esp),%ecx;");
    asm("loc_65F445B: mov %edx,0x44(%esp);");
    asm("loc_65F445F: mov 0x4C(%esp),%edx;");
    asm("loc_65F4463: mov %edx,0x8C(%esp);");
    asm("loc_65F446A: mov %ecx,0x94(%esp);");
    asm("loc_65F4471: jne loc_65F447D;");
    asm("loc_65F4473: call _sub_6600DE0;");
    asm("loc_65F4478: mov %eax,_data_6603170;");
    asm("loc_65F447D: mov (%eax),%edx;");
    asm("loc_65F447F: lea 0x38(%esp),%ecx;");
    asm("loc_65F4483: push %ecx;");
    asm("loc_65F4484: lea 0x9C(%esp),%ecx;");
    asm("loc_65F448B: push %ecx;");
    asm("loc_65F448C: push %eax;");
    asm("loc_65F448D: calll *0x54(%edx);");
    asm("loc_65F4490: mov _data_6603138,%eax;");
    asm("loc_65F4495: mov $9,%ecx;");
    asm("loc_65F449A: lea 0x98(%esp),%esi;");
    asm("loc_65F44A1: lea 0x68(%esp),%edi;");
    asm("loc_65F44A5: rep movsl (%esi),(%edi);");
    asm("loc_65F44A7: mov (%eax),%edx;");
    asm("loc_65F44A9: lea 0x68(%esp),%ecx;");
    asm("loc_65F44AD: push %ecx;");
    asm("loc_65F44AE: mov 0xD8(%esp),%ecx;");
    asm("loc_65F44B5: push $0x3F800000;");
    asm("loc_65F44BA: push %ecx;");
    asm("loc_65F44BB: mov 0xD8(%esp),%ecx;");
    asm("loc_65F44C2: push %ecx;");
    asm("loc_65F44C3: mov 0xE0(%esp),%ecx;");
    asm("loc_65F44CA: push %ecx;");
    asm("loc_65F44CB: mov 0xDC(%esp),%ecx;");
    asm("loc_65F44D2: push %ecx;");
    asm("loc_65F44D3: mov 0xF0(%esp),%ecx;");
    asm("loc_65F44DA: push %ecx;");
    asm("loc_65F44DB: push %ebx;");
    asm("loc_65F44DC: push %eax;");
    asm("loc_65F44DD: calll *0x2C(%edx);");
    asm("loc_65F44E0: test %eax,%eax;");
    asm("loc_65F44E2: jl loc_65F4553;");
    asm("loc_65F44E4: push $0x14;");
    asm("loc_65F44E6: call _sub_6600BB6;");
    asm("loc_65F44EB: add $4,%esp;");
    asm("loc_65F44EE: test %eax,%eax;");
    asm("loc_65F44F0: je loc_65F450B;");
    asm("loc_65F44F2: movb $0,(%eax);");
    asm("loc_65F44F5: movl $0xFFFFFFFF,4(%eax);");
    asm("loc_65F44FC: mov 0x10(%ebp),%ecx;");
    asm("loc_65F44FF: test %ecx,%ecx;");
    asm("loc_65F4501: mov %eax,0x10(%ebp);");
    asm("loc_65F4504: jne loc_65F4526;");
    asm("loc_65F4506: mov %eax,0xC(%ebp);");
    asm("loc_65F4509: jmp loc_65F4529;");
    asm("loc_65F450B: mov 0x10(%esp),%edx;");
    asm("loc_65F450F: pop %edi;");
    asm("loc_65F4510: xor %eax,%eax;");
    asm("loc_65F4512: pop %esi;");
    asm("loc_65F4513: mov %ebx,4(%eax);");
    asm("loc_65F4516: mov %edx,8(%eax);");
    asm("loc_65F4519: pop %ebp;");
    asm("loc_65F451A: mov %ebx,%eax;");
    asm("loc_65F451C: pop %ebx;");
    asm("loc_65F451D: add $0xAC,%esp;");
    asm("loc_65F4523: ret $0x24;");
    asm("loc_65F4526: mov %eax,0x10(%ecx);");
    asm("loc_65F4529: mov 0x10(%esp),%edx;");
    asm("loc_65F452D: mov %ecx,0xC(%eax);");
    asm("loc_65F4530: movl $0,0x10(%eax);");
    asm("loc_65F4537: mov 0x14(%ebp),%ecx;");
    asm("loc_65F453A: pop %edi;");
    asm("loc_65F453B: inc %ecx;");
    asm("loc_65F453C: mov %ecx,0x14(%ebp);");
    asm("loc_65F453F: pop %esi;");
    asm("loc_65F4540: mov %ebx,4(%eax);");
    asm("loc_65F4543: mov %edx,8(%eax);");
    asm("loc_65F4546: pop %ebp;");
    asm("loc_65F4547: mov %ebx,%eax;");
    asm("loc_65F4549: pop %ebx;");
    asm("loc_65F454A: add $0xAC,%esp;");
    asm("loc_65F4550: ret $0x24;");
    asm("loc_65F4553: mov _data_6603138,%eax;");
    asm("loc_65F4558: mov (%eax),%ecx;");
    asm("loc_65F455A: push %ebx;");
    asm("loc_65F455B: push %eax;");
    asm("loc_65F455C: calll *0x28(%ecx);");
    asm("loc_65F455F: pop %edi;");
    asm("loc_65F4560: pop %esi;");
    asm("loc_65F4561: pop %ebp;");
    asm("loc_65F4562: or $0xFFFFFFFF,%eax;");
    asm("loc_65F4565: pop %ebx;");
    asm("loc_65F4566: add $0xAC,%esp;");
    asm("loc_65F456C: ret $0x24;");
    asm("loc_65F456F: pop %edi;");
    asm("loc_65F4570: mov %esi,%eax;");
    asm("loc_65F4572: pop %esi;");
    asm("loc_65F4573: pop %ebp;");
    asm("loc_65F4574: pop %ebx;");
    asm("loc_65F4575: add $0xAC,%esp;");
    asm("loc_65F457B: ret $0x24;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F4580() // _sub_65F4580
{
    __DEBUG_ASM(65F4580);
    // chunk 0x65F4580 _sub_65F4580
    asm("loc_65F4580: mov 8(%esp),%edx;");
    asm("loc_65F4584: mov %ecx,%eax;");
    asm("loc_65F4586: mov 4(%esp),%ecx;");
    asm("loc_65F458A: mov %ecx,(%eax);");
    asm("loc_65F458C: mov 0xC(%esp),%ecx;");
    asm("loc_65F4590: mov %edx,4(%eax);");
    asm("loc_65F4593: mov %ecx,8(%eax);");
    asm("loc_65F4596: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F45A0() // _sub_65F45A0
{
    __DEBUG_ASM(65F45A0);
    // chunk 0x65F45A0 _sub_65F45A0
    asm("loc_65F45A0: mov 8(%esp),%eax;");
    asm("loc_65F45A4: flds 0xC(%esp);");
    asm("loc_65F45A8: fmuls 8(%eax);");
    asm("loc_65F45AB: flds 0xC(%esp);");
    asm("loc_65F45AF: fmuls 4(%eax);");
    asm("loc_65F45B2: flds 0xC(%esp);");
    asm("loc_65F45B6: fmuls (%eax);");
    asm("loc_65F45B8: mov 4(%esp),%eax;");
    asm("loc_65F45BC: fstps (%eax);");
    asm("loc_65F45BE: fstps 4(%eax);");
    asm("loc_65F45C1: fstps 8(%eax);");
    asm("loc_65F45C4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F45D0() // _sub_65F45D0
{
    __DEBUG_ASM(65F45D0);
    // chunk 0x65F45D0 _sub_65F45D0
    asm("loc_65F45D0: sub $0xC,%esp;");
    asm("loc_65F45D3: mov 0x10(%esp),%edx;");
    asm("loc_65F45D7: flds 0x14(%esp);");
    asm("loc_65F45DB: fmuls _data_6601328;");
    asm("loc_65F45E1: mov %ecx,%eax;");
    asm("loc_65F45E3: flds 8(%edx);");
    asm("loc_65F45E6: lea 4(%eax),%ecx;");
    asm("loc_65F45E9: flds 4(%edx);");
    asm("loc_65F45EC: flds (%edx);");
    asm("loc_65F45EE: fld %st(3);");
    asm("loc_65F45F0: fsin;");
    asm("loc_65F45F2: fld %st(1);");
    asm("loc_65F45F4: fmul %st(2),%st;");
    asm("loc_65F45F6: fld %st(3);");
    asm("loc_65F45F8: fmul %st(4),%st;");
    asm("loc_65F45FA: faddp;");
    asm("loc_65F45FC: fld %st(4);");
    asm("loc_65F45FE: fmul %st(5),%st;");
    asm("loc_65F4600: faddp;");
    asm("loc_65F4602: fsqrt;");
    asm("loc_65F4604: fsts 0x14(%esp);");
    asm("loc_65F4608: fdivrp;");
    asm("loc_65F460A: fstps 0x14(%esp);");
    asm("loc_65F460E: fstp %st(0);");
    asm("loc_65F4610: fstp %st(0);");
    asm("loc_65F4612: fstp %st(0);");
    asm("loc_65F4614: fcos;");
    asm("loc_65F4616: fstps (%eax);");
    asm("loc_65F4618: flds 0x14(%esp);");
    asm("loc_65F461C: fmuls (%edx);");
    asm("loc_65F461E: fstps (%esp);");
    asm("loc_65F4622: flds 0x14(%esp);");
    asm("loc_65F4626: fmuls 4(%edx);");
    asm("loc_65F4629: fstps 4(%esp);");
    asm("loc_65F462D: flds 0x14(%esp);");
    asm("loc_65F4631: fmuls 8(%edx);");
    asm("loc_65F4634: mov (%esp),%edx;");
    asm("loc_65F4638: mov %edx,(%ecx);");
    asm("loc_65F463A: mov 4(%esp),%edx;");
    asm("loc_65F463E: fstps 8(%esp);");
    asm("loc_65F4642: mov %edx,4(%ecx);");
    asm("loc_65F4645: mov 8(%esp),%edx;");
    asm("loc_65F4649: mov %edx,8(%ecx);");
    asm("loc_65F464C: add $0xC,%esp;");
    asm("loc_65F464F: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F4660() // _sub_65F4660
{
    __DEBUG_ASM(65F4660);
    // chunk 0x65F4660 _sub_65F4660
    asm("loc_65F4660: sub $0x6B0,%esp;");
    asm("loc_65F4666: mov _data_6603134,%eax;");
    asm("loc_65F466B: push %ebx;");
    asm("loc_65F466C: push %ebp;");
    asm("loc_65F466D: push %esi;");
    asm("loc_65F466E: push %edi;");
    asm("loc_65F466F: mov 0x6E4(%esp),%edi;");
    asm("loc_65F4676: mov %ecx,%esi;");
    asm("loc_65F4678: mov (%eax),%ecx;");
    asm("loc_65F467A: push %edi;");
    asm("loc_65F467B: push %eax;");
    asm("loc_65F467C: mov %esi,0x80(%esp);");
    asm("loc_65F4683: calll *0x90(%ecx);");
    asm("loc_65F4689: mov (%eax),%edx;");
    asm("loc_65F468B: mov 4(%eax),%ecx;");
    asm("loc_65F468E: mov %edx,0x80(%esp);");
    asm("loc_65F4695: mov 8(%eax),%edx;");
    asm("loc_65F4698: mov 0x6E0(%esp),%eax;");
    asm("loc_65F469F: mov %ecx,0x84(%esp);");
    asm("loc_65F46A6: mov 0x6DC(%esp),%ecx;");
    asm("loc_65F46AD: xor %ebx,%ebx;");
    asm("loc_65F46AF: push %ebx;");
    asm("loc_65F46B0: push %eax;");
    asm("loc_65F46B1: mov 0x6DC(%esp),%eax;");
    asm("loc_65F46B8: push %ecx;");
    asm("loc_65F46B9: mov 0x6DC(%esp),%ecx;");
    asm("loc_65F46C0: mov %edx,0x94(%esp);");
    asm("loc_65F46C7: mov 0x6E4(%esp),%edx;");
    asm("loc_65F46CE: push %edx;");
    asm("loc_65F46CF: mov 0x6DC(%esp),%edx;");
    asm("loc_65F46D6: push %eax;");
    asm("loc_65F46D7: mov 0x6DC(%esp),%eax;");
    asm("loc_65F46DE: push %ecx;");
    asm("loc_65F46DF: mov 0x6DC(%esp),%ecx;");
    asm("loc_65F46E6: push %edx;");
    asm("loc_65F46E7: push %eax;");
    asm("loc_65F46E8: push %ecx;");
    asm("loc_65F46E9: mov %esi,%ecx;");
    asm("loc_65F46EB: call _sub_65F41D0;");
    asm("loc_65F46F0: mov 8(%esi),%esi;");
    asm("loc_65F46F3: mov %eax,%ebp;");
    asm("loc_65F46F5: or $0xFFFFFFFF,%eax;");
    asm("loc_65F46F8: cmp %ebx,%esi;");
    asm("loc_65F46FA: mov %ebp,0x1C(%esp);");
    asm("loc_65F46FE: mov %eax,0x68(%esp);");
    asm("loc_65F4702: mov %ebx,0x60(%esp);");
    asm("loc_65F4706: mov %ebx,0x64(%esp);");
    asm("loc_65F470A: mov %ebx,0x5C(%esp);");
    asm("loc_65F470E: jne loc_65F4716;");
    asm("loc_65F4710: mov %eax,0x18(%esp);");
    asm("loc_65F4714: jmp loc_65F4722;");
    asm("loc_65F4716: mov (%esi),%edx;");
    asm("loc_65F4718: mov 4(%edx),%eax;");
    asm("loc_65F471B: mov 4(%eax),%ecx;");
    asm("loc_65F471E: mov %ecx,0x18(%esp);");
    asm("loc_65F4722: cmp 0x18(%esp),%edi;");
    asm("loc_65F4726: mov %edi,%esi;");
    asm("loc_65F4728: je loc_65F4847;");
    asm("loc_65F472E: lea 0x2C0(%esp),%edx;");
    asm("loc_65F4735: mov %edx,0x48(%esp);");
    asm("loc_65F4739: lea (%esp),%esp;");
    asm("loc_65F4740: mov _data_6603134,%eax;");
    asm("loc_65F4745: mov (%eax),%ecx;");
    asm("loc_65F4747: push %esi;");
    asm("loc_65F4748: push %eax;");
    asm("loc_65F4749: calll *0xD4(%ecx);");
    asm("loc_65F474F: mov %eax,%edi;");
    asm("loc_65F4751: mov _data_6603134,%eax;");
    asm("loc_65F4756: mov (%eax),%edx;");
    asm("loc_65F4758: push %esi;");
    asm("loc_65F4759: push %eax;");
    asm("loc_65F475A: calll *0xC4(%edx);");
    asm("loc_65F4760: lea 0x5C(%esp),%edx;");
    asm("loc_65F4764: push %edx;");
    asm("loc_65F4765: mov %eax,0x1C4(%esp,%ebx,4);");
    asm("loc_65F476C: mov _data_6603138,%eax;");
    asm("loc_65F4771: push %ebp;");
    asm("loc_65F4772: mov %esi,0x70(%esp);");
    asm("loc_65F4776: mov (%eax),%ecx;");
    asm("loc_65F4778: push %eax;");
    asm("loc_65F4779: calll *0x68(%ecx);");
    asm("loc_65F477C: mov _data_660313C,%ecx;");
    asm("loc_65F4782: mov (%ecx),%edx;");
    asm("loc_65F4784: lea 0x10(%esp),%esi;");
    asm("loc_65F4788: push %esi;");
    asm("loc_65F4789: push %eax;");
    asm("loc_65F478A: push %ecx;");
    asm("loc_65F478B: calll *0x18(%edx);");
    asm("loc_65F478E: mov 0x10(%esp),%eax;");
    asm("loc_65F4792: mov (%eax),%ecx;");
    asm("loc_65F4794: lea 0xE4(%esp),%edx;");
    asm("loc_65F479B: push %edx;");
    asm("loc_65F479C: push %eax;");
    asm("loc_65F479D: calll *0x14(%ecx);");
    asm("loc_65F47A0: mov 0x10(%esp),%eax;");
    asm("loc_65F47A4: mov (%eax),%ecx;");
    asm("loc_65F47A6: lea 0x7C(%esp),%edx;");
    asm("loc_65F47AA: push %edx;");
    asm("loc_65F47AB: lea 0x90(%esp),%edx;");
    asm("loc_65F47B2: push %edx;");
    asm("loc_65F47B3: lea 0xA4(%esp),%edx;");
    asm("loc_65F47BA: push %edx;");
    asm("loc_65F47BB: mov 0x6D8(%esp),%edx;");
    asm("loc_65F47C2: push %edx;");
    asm("loc_65F47C3: push %eax;");
    asm("loc_65F47C4: calll *0x18(%ecx);");
    asm("loc_65F47C7: mov 0x10(%esp),%eax;");
    asm("loc_65F47CB: mov (%eax),%ecx;");
    asm("loc_65F47CD: push %eax;");
    asm("loc_65F47CE: calll *8(%ecx);");
    asm("loc_65F47D1: mov _data_6603170,%eax;");
    asm("loc_65F47D6: test %eax,%eax;");
    asm("loc_65F47D8: mov 0x7C(%esp),%edx;");
    asm("loc_65F47DC: mov 0x8C(%esp),%esi;");
    asm("loc_65F47E3: mov 0x9C(%esp),%ebp;");
    asm("loc_65F47EA: mov %edx,0x14(%esp);");
    asm("loc_65F47EE: jne loc_65F47FA;");
    asm("loc_65F47F0: call _sub_6600DE0;");
    asm("loc_65F47F5: mov %eax,_data_6603170;");
    asm("loc_65F47FA: mov 0x14(%esp),%edx;");
    asm("loc_65F47FE: mov (%eax),%ecx;");
    asm("loc_65F4800: push %edx;");
    asm("loc_65F4801: push %esi;");
    asm("loc_65F4802: push %ebp;");
    asm("loc_65F4803: lea 0x30(%esp),%edx;");
    asm("loc_65F4807: push %edx;");
    asm("loc_65F4808: push %eax;");
    asm("loc_65F4809: calll *0x58(%ecx);");
    asm("loc_65F480C: mov 0x48(%esp),%eax;");
    asm("loc_65F4810: mov 0x24(%esp),%edx;");
    asm("loc_65F4814: mov 0x1C(%esp),%ebp;");
    asm("loc_65F4818: mov %eax,%ecx;");
    asm("loc_65F481A: mov %edx,(%ecx);");
    asm("loc_65F481C: mov 0x28(%esp),%edx;");
    asm("loc_65F4820: mov %edx,4(%ecx);");
    asm("loc_65F4823: mov 0x2C(%esp),%edx;");
    asm("loc_65F4827: add $0x10,%eax;");
    asm("loc_65F482A: mov %edx,8(%ecx);");
    asm("loc_65F482D: mov 0x30(%esp),%edx;");
    asm("loc_65F4831: mov %eax,0x48(%esp);");
    asm("loc_65F4835: mov 0x18(%esp),%eax;");
    asm("loc_65F4839: inc %ebx;");
    asm("loc_65F483A: cmp %eax,%edi;");
    asm("loc_65F483C: mov %edx,0xC(%ecx);");
    asm("loc_65F483F: mov %edi,%esi;");
    asm("loc_65F4841: jne loc_65F4740;");
    asm("loc_65F4847: mov 0x18(%esp),%eax;");
    asm("loc_65F484B: lea 0x5C(%esp),%edx;");
    asm("loc_65F484F: push %edx;");
    asm("loc_65F4850: mov %eax,0x6C(%esp);");
    asm("loc_65F4854: mov _data_6603138,%eax;");
    asm("loc_65F4859: push %ebp;");
    asm("loc_65F485A: movl $1,0x64(%esp);");
    asm("loc_65F4862: mov (%eax),%ecx;");
    asm("loc_65F4864: push %eax;");
    asm("loc_65F4865: calll *0x68(%ecx);");
    asm("loc_65F4868: mov _data_660313C,%ecx;");
    asm("loc_65F486E: mov (%ecx),%edx;");
    asm("loc_65F4870: lea 0x20(%esp),%esi;");
    asm("loc_65F4874: push %esi;");
    asm("loc_65F4875: push %eax;");
    asm("loc_65F4876: push %ecx;");
    asm("loc_65F4877: calll *0x18(%edx);");
    asm("loc_65F487A: mov 0x20(%esp),%eax;");
    asm("loc_65F487E: mov (%eax),%ecx;");
    asm("loc_65F4880: lea 0xE0(%esp),%edx;");
    asm("loc_65F4887: push %edx;");
    asm("loc_65F4888: push %eax;");
    asm("loc_65F4889: calll *0x14(%ecx);");
    asm("loc_65F488C: mov 0x20(%esp),%eax;");
    asm("loc_65F4890: mov (%eax),%ecx;");
    asm("loc_65F4892: lea 0x44(%esp),%edx;");
    asm("loc_65F4896: push %edx;");
    asm("loc_65F4897: lea 0x44(%esp),%edx;");
    asm("loc_65F489B: push %edx;");
    asm("loc_65F489C: lea 0x54(%esp),%edx;");
    asm("loc_65F48A0: push %edx;");
    asm("loc_65F48A1: mov 0x6D8(%esp),%edx;");
    asm("loc_65F48A8: push %edx;");
    asm("loc_65F48A9: push %eax;");
    asm("loc_65F48AA: calll *0x18(%ecx);");
    asm("loc_65F48AD: mov 0x4C(%esp),%esi;");
    asm("loc_65F48B1: mov 0x40(%esp),%ecx;");
    asm("loc_65F48B5: mov 0x44(%esp),%eax;");
    asm("loc_65F48B9: push %esi;");
    asm("loc_65F48BA: push %ecx;");
    asm("loc_65F48BB: lea 0xA8(%esp),%edx;");
    asm("loc_65F48C2: push %edx;");
    asm("loc_65F48C3: mov %eax,0x20(%esp);");
    asm("loc_65F48C7: call _sub_65F4C50;");
    asm("loc_65F48CC: mov 0x20(%esp),%eax;");
    asm("loc_65F48D0: push %eax;");
    asm("loc_65F48D1: lea 0xB0(%esp),%ecx;");
    asm("loc_65F48D8: push %ecx;");
    asm("loc_65F48D9: lea 0x48(%esp),%edx;");
    asm("loc_65F48DD: push %edx;");
    asm("loc_65F48DE: call _sub_65F45A0;");
    asm("loc_65F48E3: flds 0x54(%esp);");
    asm("loc_65F48E7: fadds 8(%esi);");
    asm("loc_65F48EA: add $0xC,%esp;");
    asm("loc_65F48ED: lea 0xB8(%esp),%ecx;");
    asm("loc_65F48F4: fstps 8(%esp);");
    asm("loc_65F48F8: flds 0x44(%esp);");
    asm("loc_65F48FC: fadds 4(%esi);");
    asm("loc_65F48FF: fstps 4(%esp);");
    asm("loc_65F4903: flds 0x40(%esp);");
    asm("loc_65F4907: fadds (%esi);");
    asm("loc_65F4909: fstps (%esp);");
    asm("loc_65F490C: call _sub_65F4580;");
    asm("loc_65F4911: mov 0x44(%esp),%eax;");
    asm("loc_65F4915: mov 0x40(%esp),%ecx;");
    asm("loc_65F4919: mov 0x4C(%esp),%edx;");
    asm("loc_65F491D: mov %eax,0x14(%esp);");
    asm("loc_65F4921: mov _data_6603170,%eax;");
    asm("loc_65F4926: test %eax,%eax;");
    asm("loc_65F4928: lea 0xC(%ecx),%esi;");
    asm("loc_65F492B: lea 0xC(%edx),%edi;");
    asm("loc_65F492E: jne loc_65F493A;");
    asm("loc_65F4930: call _sub_6600DE0;");
    asm("loc_65F4935: mov %eax,_data_6603170;");
    asm("loc_65F493A: mov 0x14(%esp),%edx;");
    asm("loc_65F493E: mov (%eax),%ecx;");
    asm("loc_65F4940: push %edx;");
    asm("loc_65F4941: push %esi;");
    asm("loc_65F4942: push %edi;");
    asm("loc_65F4943: lea 0x30(%esp),%edx;");
    asm("loc_65F4947: push %edx;");
    asm("loc_65F4948: push %eax;");
    asm("loc_65F4949: calll *0x58(%ecx);");
    asm("loc_65F494C: mov 0x24(%esp),%eax;");
    asm("loc_65F4950: mov 0x28(%esp),%ecx;");
    asm("loc_65F4954: mov 0x2C(%esp),%edx;");
    asm("loc_65F4958: mov %eax,0xD0(%esp);");
    asm("loc_65F495F: mov 0x30(%esp),%eax;");
    asm("loc_65F4963: mov %eax,0xDC(%esp);");
    asm("loc_65F496A: mov 0x20(%esp),%eax;");
    asm("loc_65F496E: mov %ecx,0xD4(%esp);");
    asm("loc_65F4975: mov %edx,0xD8(%esp);");
    asm("loc_65F497C: mov (%eax),%ecx;");
    asm("loc_65F497E: push %eax;");
    asm("loc_65F497F: calll *8(%ecx);");
    asm("loc_65F4982: mov _data_6603170,%eax;");
    asm("loc_65F4987: test %eax,%eax;");
    asm("loc_65F4989: jne loc_65F4995;");
    asm("loc_65F498B: call _sub_6600DE0;");
    asm("loc_65F4990: mov %eax,_data_6603170;");
    asm("loc_65F4995: mov (%eax),%edx;");
    asm("loc_65F4997: lea 0xD0(%esp),%ecx;");
    asm("loc_65F499E: push %ecx;");
    asm("loc_65F499F: lea 0xEC(%esp),%ecx;");
    asm("loc_65F49A6: push %ecx;");
    asm("loc_65F49A7: push %eax;");
    asm("loc_65F49A8: calll *0x54(%edx);");
    asm("loc_65F49AB: dec %ebx;");
    asm("loc_65F49AC: mov 0xB4(%esp),%ecx;");
    asm("loc_65F49B3: mov 0xAC(%esp),%edx;");
    asm("loc_65F49BA: mov 0xB0(%esp),%eax;");
    asm("loc_65F49C1: mov %ecx,0x58(%esp);");
    asm("loc_65F49C5: mov $9,%ecx;");
    asm("loc_65F49CA: lea 0xE8(%esp),%esi;");
    asm("loc_65F49D1: lea 0x10C(%esp),%edi;");
    asm("loc_65F49D8: mov %edx,0x50(%esp);");
    asm("loc_65F49DC: mov %eax,0x54(%esp);");
    asm("loc_65F49E0: rep movsl (%esi),(%edi);");
    asm("loc_65F49E2: js loc_65F4BCE;");
    asm("loc_65F49E8: mov %ebx,%edx;");
    asm("loc_65F49EA: shl $4,%edx;");
    asm("loc_65F49ED: lea 0x2C0(%esp,%edx),%eax;");
    asm("loc_65F49F4: mov %eax,0x10(%esp);");
    asm("loc_65F49F8: mov _data_6603170,%eax;");
    asm("loc_65F49FD: test %eax,%eax;");
    asm("loc_65F49FF: jne loc_65F4A0B;");
    asm("loc_65F4A01: call _sub_6600DE0;");
    asm("loc_65F4A06: mov %eax,_data_6603170;");
    asm("loc_65F4A0B: mov 0x10(%esp),%edx;");
    asm("loc_65F4A0F: mov (%eax),%ecx;");
    asm("loc_65F4A11: push %edx;");
    asm("loc_65F4A12: lea 0x17C(%esp),%edx;");
    asm("loc_65F4A19: push %edx;");
    asm("loc_65F4A1A: push %eax;");
    asm("loc_65F4A1B: calll *0x54(%ecx);");
    asm("loc_65F4A1E: mov _data_6603170,%eax;");
    asm("loc_65F4A23: test %eax,%eax;");
    asm("loc_65F4A25: mov 0x1C0(%esp,%ebx,4),%ebp;");
    asm("loc_65F4A2C: jne loc_65F4A38;");
    asm("loc_65F4A2E: call _sub_6600DE0;");
    asm("loc_65F4A33: mov %eax,_data_6603170;");
    asm("loc_65F4A38: mov (%eax),%ecx;");
    asm("loc_65F4A3A: lea 0x178(%esp),%edx;");
    asm("loc_65F4A41: push %edx;");
    asm("loc_65F4A42: lea 0x110(%esp),%edx;");
    asm("loc_65F4A49: push %edx;");
    asm("loc_65F4A4A: lea 0x138(%esp),%edx;");
    asm("loc_65F4A51: push %edx;");
    asm("loc_65F4A52: push %eax;");
    asm("loc_65F4A53: calll *0x20(%ecx);");
    asm("loc_65F4A56: mov _data_6603170,%eax;");
    asm("loc_65F4A5B: test %eax,%eax;");
    asm("loc_65F4A5D: mov $9,%ecx;");
    asm("loc_65F4A62: lea 0x130(%esp),%esi;");
    asm("loc_65F4A69: lea 0x19C(%esp),%edi;");
    asm("loc_65F4A70: rep movsl (%esi),(%edi);");
    asm("loc_65F4A72: jne loc_65F4A7E;");
    asm("loc_65F4A74: call _sub_6600DE0;");
    asm("loc_65F4A79: mov %eax,_data_6603170;");
    asm("loc_65F4A7E: mov (%eax),%ecx;");
    asm("loc_65F4A80: lea 0x1C(%ebp),%edx;");
    asm("loc_65F4A83: push %edx;");
    asm("loc_65F4A84: lea 0x1A0(%esp),%edx;");
    asm("loc_65F4A8B: push %edx;");
    asm("loc_65F4A8C: lea 0x15C(%esp),%edx;");
    asm("loc_65F4A93: push %edx;");
    asm("loc_65F4A94: push %eax;");
    asm("loc_65F4A95: calll *0x20(%ecx);");
    asm("loc_65F4A98: mov _data_6603170,%eax;");
    asm("loc_65F4A9D: test %eax,%eax;");
    asm("loc_65F4A9F: mov $9,%ecx;");
    asm("loc_65F4AA4: lea 0x154(%esp),%esi;");
    asm("loc_65F4AAB: lea 0xE8(%esp),%edi;");
    asm("loc_65F4AB2: rep movsl (%esi),(%edi);");
    asm("loc_65F4AB4: jne loc_65F4AC0;");
    asm("loc_65F4AB6: call _sub_6600DE0;");
    asm("loc_65F4ABB: mov %eax,_data_6603170;");
    asm("loc_65F4AC0: mov (%eax),%ecx;");
    asm("loc_65F4AC2: lea 0x10(%ebp),%edx;");
    asm("loc_65F4AC5: push %edx;");
    asm("loc_65F4AC6: lea 0xEC(%esp),%edx;");
    asm("loc_65F4ACD: push %edx;");
    asm("loc_65F4ACE: lea 0xCC(%esp),%edx;");
    asm("loc_65F4AD5: push %edx;");
    asm("loc_65F4AD6: push %eax;");
    asm("loc_65F4AD7: calll *0x2C(%ecx);");
    asm("loc_65F4ADA: mov 0xC4(%esp),%eax;");
    asm("loc_65F4AE1: mov 0xC8(%esp),%ecx;");
    asm("loc_65F4AE8: mov 0xCC(%esp),%edx;");
    asm("loc_65F4AEF: mov %eax,0x90(%esp);");
    asm("loc_65F4AF6: mov _data_6603170,%eax;");
    asm("loc_65F4AFB: test %eax,%eax;");
    asm("loc_65F4AFD: mov %ecx,0x94(%esp);");
    asm("loc_65F4B04: mov %edx,0x98(%esp);");
    asm("loc_65F4B0B: jne loc_65F4B17;");
    asm("loc_65F4B0D: call _sub_6600DE0;");
    asm("loc_65F4B12: mov %eax,_data_6603170;");
    asm("loc_65F4B17: mov (%eax),%ecx;");
    asm("loc_65F4B19: add $4,%ebp;");
    asm("loc_65F4B1C: push %ebp;");
    asm("loc_65F4B1D: lea 0x110(%esp),%edx;");
    asm("loc_65F4B24: push %edx;");
    asm("loc_65F4B25: lea 0xA8(%esp),%edx;");
    asm("loc_65F4B2C: push %edx;");
    asm("loc_65F4B2D: push %eax;");
    asm("loc_65F4B2E: calll *0x2C(%ecx);");
    asm("loc_65F4B31: flds 0xA0(%esp);");
    asm("loc_65F4B38: fadds 0x50(%esp);");
    asm("loc_65F4B3C: lea 0xE8(%esp),%esi;");
    asm("loc_65F4B43: flds 0xA4(%esp);");
    asm("loc_65F4B4A: lea 0x10C(%esp),%edi;");
    asm("loc_65F4B51: fadds 0x54(%esp);");
    asm("loc_65F4B55: dec %ebx;");
    asm("loc_65F4B56: flds 0xA8(%esp);");
    asm("loc_65F4B5D: fadds 0x58(%esp);");
    asm("loc_65F4B61: fstps 0x2C(%esp);");
    asm("loc_65F4B65: fxch;");
    asm("loc_65F4B67: fsubs 0x90(%esp);");
    asm("loc_65F4B6E: fstps 0x6C(%esp);");
    asm("loc_65F4B72: mov 0x6C(%esp),%eax;");
    asm("loc_65F4B76: fsubs 0x94(%esp);");
    asm("loc_65F4B7D: mov %eax,0x34(%esp);");
    asm("loc_65F4B81: mov %eax,0x50(%esp);");
    asm("loc_65F4B85: fstps 0x70(%esp);");
    asm("loc_65F4B89: mov 0x70(%esp),%ecx;");
    asm("loc_65F4B8D: flds 0x2C(%esp);");
    asm("loc_65F4B91: fsubs 0x98(%esp);");
    asm("loc_65F4B98: mov %ecx,0x38(%esp);");
    asm("loc_65F4B9C: mov %ecx,0x54(%esp);");
    asm("loc_65F4BA0: mov $9,%ecx;");
    asm("loc_65F4BA5: rep movsl (%esi),(%edi);");
    asm("loc_65F4BA7: mov 0x10(%esp),%ecx;");
    asm("loc_65F4BAB: sub $0x10,%ecx;");
    asm("loc_65F4BAE: test %ebx,%ebx;");
    asm("loc_65F4BB0: fstps 0x74(%esp);");
    asm("loc_65F4BB4: mov 0x74(%esp),%edx;");
    asm("loc_65F4BB8: mov %edx,0x3C(%esp);");
    asm("loc_65F4BBC: mov %edx,0x58(%esp);");
    asm("loc_65F4BC0: mov %ecx,0x10(%esp);");
    asm("loc_65F4BC4: jge loc_65F49F8;");
    asm("loc_65F4BCA: mov 0x1C(%esp),%ebp;");
    asm("loc_65F4BCE: mov 0x78(%esp),%eax;");
    asm("loc_65F4BD2: flds 0x80(%esp);");
    asm("loc_65F4BD9: mov 8(%eax),%ecx;");
    asm("loc_65F4BDC: mov (%ecx),%edx;");
    asm("loc_65F4BDE: mov 4(%edx),%eax;");
    asm("loc_65F4BE1: fsubs 0x30(%eax);");
    asm("loc_65F4BE4: add $0x30,%eax;");
    asm("loc_65F4BE7: flds 0x84(%esp);");
    asm("loc_65F4BEE: lea 0xB8(%esp),%edx;");
    asm("loc_65F4BF5: fsubs 4(%eax);");
    asm("loc_65F4BF8: push %edx;");
    asm("loc_65F4BF9: flds 0x8C(%esp);");
    asm("loc_65F4C00: push %ebp;");
    asm("loc_65F4C01: fsubs 8(%eax);");
    asm("loc_65F4C04: mov _data_6603138,%eax;");
    asm("loc_65F4C09: push %eax;");
    asm("loc_65F4C0A: fstps 0x38(%esp);");
    asm("loc_65F4C0E: fxch;");
    asm("loc_65F4C10: fsubs 0x40(%esp);");
    asm("loc_65F4C14: fstps 0xC4(%esp);");
    asm("loc_65F4C1B: fsubs 0x44(%esp);");
    asm("loc_65F4C1F: fstps 0xC8(%esp);");
    asm("loc_65F4C26: flds 0x38(%esp);");
    asm("loc_65F4C2A: fsubs 0x48(%esp);");
    asm("loc_65F4C2E: fstps 0xCC(%esp);");
    asm("loc_65F4C35: mov (%eax),%ecx;");
    asm("loc_65F4C37: calll *0x58(%ecx);");
    asm("loc_65F4C3A: pop %edi;");
    asm("loc_65F4C3B: pop %esi;");
    asm("loc_65F4C3C: mov %ebp,%eax;");
    asm("loc_65F4C3E: pop %ebp;");
    asm("loc_65F4C3F: pop %ebx;");
    asm("loc_65F4C40: add $0x6B0,%esp;");
    asm("loc_65F4C46: ret $0x24;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F4C50() // _sub_65F4C50
{
    __DEBUG_ASM(65F4C50);
    // chunk 0x65F4C50 _sub_65F4C50
    asm("loc_65F4C50: mov 8(%esp),%eax;");
    asm("loc_65F4C54: flds 8(%eax);");
    asm("loc_65F4C57: mov 0xC(%esp),%ecx;");
    asm("loc_65F4C5B: fsubs 8(%ecx);");
    asm("loc_65F4C5E: flds 4(%eax);");
    asm("loc_65F4C61: fsubs 4(%ecx);");
    asm("loc_65F4C64: flds (%eax);");
    asm("loc_65F4C66: mov 4(%esp),%eax;");
    asm("loc_65F4C6A: fsubs (%ecx);");
    asm("loc_65F4C6C: fstps (%eax);");
    asm("loc_65F4C6E: fstps 4(%eax);");
    asm("loc_65F4C71: fstps 8(%eax);");
    asm("loc_65F4C74: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F4C80() // _sub_65F4C80
{
    __DEBUG_ASM(65F4C80);
    // chunk 0x65F4C80 _sub_65F4C80
    asm("loc_65F4C80: push %ebp;");
    asm("loc_65F4C81: mov %ecx,%ebp;");
    asm("loc_65F4C83: push %esi;");
    asm("loc_65F4C84: mov 0xC(%ebp),%esi;");
    asm("loc_65F4C87: test %esi,%esi;");
    asm("loc_65F4C89: je loc_65F4D1E;");
    asm("loc_65F4C8F: push %ebx;");
    asm("loc_65F4C90: push %edi;");
    asm("loc_65F4C91: test %esi,%esi;");
    asm("loc_65F4C93: jne loc_65F4C9A;");
    asm("loc_65F4C95: mov 0xC(%ebp),%ebx;");
    asm("loc_65F4C98: jmp loc_65F4C9D;");
    asm("loc_65F4C9A: mov 0x10(%esi),%ebx;");
    asm("loc_65F4C9D: cmpb $0,(%esi);");
    asm("loc_65F4CA0: mov _data_6603138,%eax;");
    asm("loc_65F4CA5: je loc_65F4CC7;");
    asm("loc_65F4CA7: mov 4(%esi),%edi;");
    asm("loc_65F4CAA: test %edi,%edi;");
    asm("loc_65F4CAC: je loc_65F4CBE;");
    asm("loc_65F4CAE: mov %edi,%ecx;");
    asm("loc_65F4CB0: call _sub_65FBF40;");
    asm("loc_65F4CB5: push %edi;");
    asm("loc_65F4CB6: call _sub_6600BB0;");
    asm("loc_65F4CBB: add $4,%esp;");
    asm("loc_65F4CBE: movl $0,4(%esi);");
    asm("loc_65F4CC5: jmp loc_65F4CD8;");
    asm("loc_65F4CC7: mov 4(%esi),%edx;");
    asm("loc_65F4CCA: mov (%eax),%ecx;");
    asm("loc_65F4CCC: push %edx;");
    asm("loc_65F4CCD: push %eax;");
    asm("loc_65F4CCE: calll *0x28(%ecx);");
    asm("loc_65F4CD1: movl $0xFFFFFFFF,4(%esi);");
    asm("loc_65F4CD8: mov 0xC(%esi),%eax;");
    asm("loc_65F4CDB: test %eax,%eax;");
    asm("loc_65F4CDD: jne loc_65F4CE7;");
    asm("loc_65F4CDF: mov 0x10(%esi),%eax;");
    asm("loc_65F4CE2: mov %eax,0xC(%ebp);");
    asm("loc_65F4CE5: jmp loc_65F4CED;");
    asm("loc_65F4CE7: mov 0x10(%esi),%ecx;");
    asm("loc_65F4CEA: mov %ecx,0x10(%eax);");
    asm("loc_65F4CED: mov 0x10(%esi),%eax;");
    asm("loc_65F4CF0: test %eax,%eax;");
    asm("loc_65F4CF2: jne loc_65F4CFC;");
    asm("loc_65F4CF4: mov 0xC(%esi),%edx;");
    asm("loc_65F4CF7: mov %edx,0x10(%ebp);");
    asm("loc_65F4CFA: jmp loc_65F4D02;");
    asm("loc_65F4CFC: mov 0xC(%esi),%ecx;");
    asm("loc_65F4CFF: mov %ecx,0xC(%eax);");
    asm("loc_65F4D02: mov 0x14(%ebp),%edi;");
    asm("loc_65F4D05: dec %edi;");
    asm("loc_65F4D06: push %esi;");
    asm("loc_65F4D07: mov %edi,0x14(%ebp);");
    asm("loc_65F4D0A: call _sub_6600BB0;");
    asm("loc_65F4D0F: add $4,%esp;");
    asm("loc_65F4D12: test %ebx,%ebx;");
    asm("loc_65F4D14: mov %ebx,%esi;");
    asm("loc_65F4D16: jne loc_65F4C91;");
    asm("loc_65F4D1C: pop %edi;");
    asm("loc_65F4D1D: pop %ebx;");
    asm("loc_65F4D1E: pop %esi;");
    asm("loc_65F4D1F: pop %ebp;");
    asm("loc_65F4D20: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F4D30() // _sub_65F4D30
{
    __DEBUG_ASM(65F4D30);
    // chunk 0x65F4D30 _sub_65F4D30
    asm("loc_65F4D30: push %ebx;");
    asm("loc_65F4D31: mov %ecx,%ebx;");
    asm("loc_65F4D33: mov 0xC(%ebx),%ecx;");
    asm("loc_65F4D36: push %esi;");
    asm("loc_65F4D37: mov %ecx,%esi;");
    asm("loc_65F4D39: test %esi,%esi;");
    asm("loc_65F4D3B: push %edi;");
    asm("loc_65F4D3C: je loc_65F4DD5;");
    asm("loc_65F4D42: mov 0x10(%esp),%edx;");
    asm("loc_65F4D46: test %esi,%esi;");
    asm("loc_65F4D48: mov %ecx,%eax;");
    asm("loc_65F4D4A: je loc_65F4D4F;");
    asm("loc_65F4D4C: mov 0x10(%esi),%eax;");
    asm("loc_65F4D4F: cmp 4(%esi),%edx;");
    asm("loc_65F4D52: je loc_65F4D60;");
    asm("loc_65F4D54: test %eax,%eax;");
    asm("loc_65F4D56: mov %eax,%esi;");
    asm("loc_65F4D58: jne loc_65F4D46;");
    asm("loc_65F4D5A: pop %edi;");
    asm("loc_65F4D5B: pop %esi;");
    asm("loc_65F4D5C: pop %ebx;");
    asm("loc_65F4D5D: ret $4;");
    asm("loc_65F4D60: cmpb $0,(%esi);");
    asm("loc_65F4D63: mov _data_6603138,%eax;");
    asm("loc_65F4D68: je loc_65F4D8A;");
    asm("loc_65F4D6A: mov 4(%esi),%edi;");
    asm("loc_65F4D6D: test %edi,%edi;");
    asm("loc_65F4D6F: je loc_65F4D81;");
    asm("loc_65F4D71: mov %edi,%ecx;");
    asm("loc_65F4D73: call _sub_65FBF40;");
    asm("loc_65F4D78: push %edi;");
    asm("loc_65F4D79: call _sub_6600BB0;");
    asm("loc_65F4D7E: add $4,%esp;");
    asm("loc_65F4D81: movl $0,4(%esi);");
    asm("loc_65F4D88: jmp loc_65F4D9B;");
    asm("loc_65F4D8A: mov 4(%esi),%edx;");
    asm("loc_65F4D8D: mov (%eax),%ecx;");
    asm("loc_65F4D8F: push %edx;");
    asm("loc_65F4D90: push %eax;");
    asm("loc_65F4D91: calll *0x28(%ecx);");
    asm("loc_65F4D94: movl $0xFFFFFFFF,4(%esi);");
    asm("loc_65F4D9B: mov 0xC(%esi),%eax;");
    asm("loc_65F4D9E: test %eax,%eax;");
    asm("loc_65F4DA0: jne loc_65F4DAA;");
    asm("loc_65F4DA2: mov 0x10(%esi),%eax;");
    asm("loc_65F4DA5: mov %eax,0xC(%ebx);");
    asm("loc_65F4DA8: jmp loc_65F4DB0;");
    asm("loc_65F4DAA: mov 0x10(%esi),%ecx;");
    asm("loc_65F4DAD: mov %ecx,0x10(%eax);");
    asm("loc_65F4DB0: mov 0x10(%esi),%eax;");
    asm("loc_65F4DB3: test %eax,%eax;");
    asm("loc_65F4DB5: jne loc_65F4DBF;");
    asm("loc_65F4DB7: mov 0xC(%esi),%edx;");
    asm("loc_65F4DBA: mov %edx,0x10(%ebx);");
    asm("loc_65F4DBD: jmp loc_65F4DC5;");
    asm("loc_65F4DBF: mov 0xC(%esi),%ecx;");
    asm("loc_65F4DC2: mov %ecx,0xC(%eax);");
    asm("loc_65F4DC5: mov 0x14(%ebx),%edx;");
    asm("loc_65F4DC8: dec %edx;");
    asm("loc_65F4DC9: push %esi;");
    asm("loc_65F4DCA: mov %edx,0x14(%ebx);");
    asm("loc_65F4DCD: call _sub_6600BB0;");
    asm("loc_65F4DD2: add $4,%esp;");
    asm("loc_65F4DD5: pop %edi;");
    asm("loc_65F4DD6: pop %esi;");
    asm("loc_65F4DD7: pop %ebx;");
    asm("loc_65F4DD8: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F4DE0() // _sub_65F4DE0
{
    __DEBUG_ASM(65F4DE0);
    // chunk 0x65F4DE0 _sub_65F4DE0
    asm("loc_65F4DE0: push %ebp;");
    asm("loc_65F4DE1: mov %ecx,%ebp;");
    asm("loc_65F4DE3: push %esi;");
    asm("loc_65F4DE4: mov 0xC(%ebp),%esi;");
    asm("loc_65F4DE7: test %esi,%esi;");
    asm("loc_65F4DE9: je loc_65F4EDF;");
    asm("loc_65F4DEF: push %ebx;");
    asm("loc_65F4DF0: push %edi;");
    asm("loc_65F4DF1: test %esi,%esi;");
    asm("loc_65F4DF3: jne loc_65F4DFA;");
    asm("loc_65F4DF5: mov 0xC(%ebp),%ebx;");
    asm("loc_65F4DF8: jmp loc_65F4DFD;");
    asm("loc_65F4DFA: mov 0x10(%esi),%ebx;");
    asm("loc_65F4DFD: cmpb $0,(%esi);");
    asm("loc_65F4E00: je loc_65F4E8C;");
    asm("loc_65F4E06: mov 4(%esi),%eax;");
    asm("loc_65F4E09: testb $1,0x34(%eax);");
    asm("loc_65F4E0D: je loc_65F4ED3;");
    asm("loc_65F4E13: mov 0x18(%eax),%eax;");
    asm("loc_65F4E16: mov (%eax),%eax;");
    asm("loc_65F4E18: mov _data_660313C,%ecx;");
    asm("loc_65F4E1E: mov (%ecx),%edx;");
    asm("loc_65F4E20: push %eax;");
    asm("loc_65F4E21: push %ecx;");
    asm("loc_65F4E22: calll *0x3C(%edx);");
    asm("loc_65F4E25: test %al,%al;");
    asm("loc_65F4E27: jne loc_65F4ED3;");
    asm("loc_65F4E2D: cmpb $0,(%esi);");
    asm("loc_65F4E30: mov _data_6603138,%eax;");
    asm("loc_65F4E35: je loc_65F4E57;");
    asm("loc_65F4E37: mov 4(%esi),%edi;");
    asm("loc_65F4E3A: test %edi,%edi;");
    asm("loc_65F4E3C: je loc_65F4E4E;");
    asm("loc_65F4E3E: mov %edi,%ecx;");
    asm("loc_65F4E40: call _sub_65FBF40;");
    asm("loc_65F4E45: push %edi;");
    asm("loc_65F4E46: call _sub_6600BB0;");
    asm("loc_65F4E4B: add $4,%esp;");
    asm("loc_65F4E4E: movl $0,4(%esi);");
    asm("loc_65F4E55: jmp loc_65F4E68;");
    asm("loc_65F4E57: mov 4(%esi),%edx;");
    asm("loc_65F4E5A: mov (%eax),%ecx;");
    asm("loc_65F4E5C: push %edx;");
    asm("loc_65F4E5D: push %eax;");
    asm("loc_65F4E5E: calll *0x28(%ecx);");
    asm("loc_65F4E61: movl $0xFFFFFFFF,4(%esi);");
    asm("loc_65F4E68: mov 0xC(%esi),%eax;");
    asm("loc_65F4E6B: test %eax,%eax;");
    asm("loc_65F4E6D: jne loc_65F4E77;");
    asm("loc_65F4E6F: mov 0x10(%esi),%eax;");
    asm("loc_65F4E72: mov %eax,0xC(%ebp);");
    asm("loc_65F4E75: jmp loc_65F4E7D;");
    asm("loc_65F4E77: mov 0x10(%esi),%ecx;");
    asm("loc_65F4E7A: mov %ecx,0x10(%eax);");
    asm("loc_65F4E7D: mov 0x10(%esi),%eax;");
    asm("loc_65F4E80: test %eax,%eax;");
    asm("loc_65F4E82: jne loc_65F4EBD;");
    asm("loc_65F4E84: mov 0xC(%esi),%edx;");
    asm("loc_65F4E87: mov %edx,0x10(%ebp);");
    asm("loc_65F4E8A: jmp loc_65F4EC3;");
    asm("loc_65F4E8C: mov 4(%esi),%ecx;");
    asm("loc_65F4E8F: mov _data_6603138,%eax;");
    asm("loc_65F4E94: mov (%eax),%edx;");
    asm("loc_65F4E96: push %ecx;");
    asm("loc_65F4E97: push %eax;");
    asm("loc_65F4E98: calll *0x44(%edx);");
    asm("loc_65F4E9B: test %eax,%eax;");
    asm("loc_65F4E9D: je loc_65F4ED3;");
    asm("loc_65F4E9F: mov 4(%esi),%ecx;");
    asm("loc_65F4EA2: mov _data_6603138,%eax;");
    asm("loc_65F4EA7: mov (%eax),%edx;");
    asm("loc_65F4EA9: push %ecx;");
    asm("loc_65F4EAA: push %eax;");
    asm("loc_65F4EAB: calll *0x28(%edx);");
    asm("loc_65F4EAE: mov 0xC(%esi),%eax;");
    asm("loc_65F4EB1: test %eax,%eax;");
    asm("loc_65F4EB3: jne loc_65F4E77;");
    asm("loc_65F4EB5: mov 0x10(%esi),%edx;");
    asm("loc_65F4EB8: mov %edx,0xC(%ebp);");
    asm("loc_65F4EBB: jmp loc_65F4E7D;");
    asm("loc_65F4EBD: mov 0xC(%esi),%ecx;");
    asm("loc_65F4EC0: mov %ecx,0xC(%eax);");
    asm("loc_65F4EC3: mov 0x14(%ebp),%edx;");
    asm("loc_65F4EC6: dec %edx;");
    asm("loc_65F4EC7: push %esi;");
    asm("loc_65F4EC8: mov %edx,0x14(%ebp);");
    asm("loc_65F4ECB: call _sub_6600BB0;");
    asm("loc_65F4ED0: add $4,%esp;");
    asm("loc_65F4ED3: test %ebx,%ebx;");
    asm("loc_65F4ED5: mov %ebx,%esi;");
    asm("loc_65F4ED7: jne loc_65F4DF1;");
    asm("loc_65F4EDD: pop %edi;");
    asm("loc_65F4EDE: pop %ebx;");
    asm("loc_65F4EDF: mov 0x14(%ebp),%eax;");
    asm("loc_65F4EE2: test %eax,%eax;");
    asm("loc_65F4EE4: jne loc_65F4EF7;");
    asm("loc_65F4EE6: mov 8(%ebp),%edx;");
    asm("loc_65F4EE9: mov (%edx),%eax;");
    asm("loc_65F4EEB: mov 4(%eax),%ecx;");
    asm("loc_65F4EEE: flds 0x34(%ecx);");
    asm("loc_65F4EF1: fsubs 0x20(%ebp);");
    asm("loc_65F4EF4: fstps 0x24(%ebp);");
    asm("loc_65F4EF7: pop %esi;");
    asm("loc_65F4EF8: pop %ebp;");
    asm("loc_65F4EF9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F4F00() // _sub_65F4F00
{
    __DEBUG_ASM(65F4F00);
    // chunk 0x65F4F00 _sub_65F4F00
    asm("loc_65F4F00: sub $0x34,%esp;");
    asm("loc_65F4F03: push %ebx;");
    asm("loc_65F4F04: push %esi;");
    asm("loc_65F4F05: push %edi;");
    asm("loc_65F4F06: mov %ecx,%edi;");
    asm("loc_65F4F08: call _sub_65F4DE0;");
    asm("loc_65F4F0D: mov 0x44(%esp),%ebx;");
    asm("loc_65F4F11: mov 0xC(%edi),%esi;");
    asm("loc_65F4F14: mov %ebx,%eax;");
    asm("loc_65F4F16: mov (%eax),%ecx;");
    asm("loc_65F4F18: mov 4(%eax),%edx;");
    asm("loc_65F4F1B: mov 8(%eax),%eax;");
    asm("loc_65F4F1E: mov %eax,0x18(%esp);");
    asm("loc_65F4F22: xor %al,%al;");
    asm("loc_65F4F24: test %esi,%esi;");
    asm("loc_65F4F26: mov %ecx,0x10(%esp);");
    asm("loc_65F4F2A: mov %edx,0x14(%esp);");
    asm("loc_65F4F2E: je loc_65F500D;");
    asm("loc_65F4F34: cmpb $0,(%esi);");
    asm("loc_65F4F37: jne loc_65F4FFE;");
    asm("loc_65F4F3D: mov _data_6603138,%eax;");
    asm("loc_65F4F42: lea 0xC(%esp),%edx;");
    asm("loc_65F4F46: push %edx;");
    asm("loc_65F4F47: mov 4(%esi),%edx;");
    asm("loc_65F4F4A: push %edx;");
    asm("loc_65F4F4B: movl $0,0x3C(%esp);");
    asm("loc_65F4F53: movl $0,0x40(%esp);");
    asm("loc_65F4F5B: movl $0,0x44(%esp);");
    asm("loc_65F4F63: movl $0,0x30(%esp);");
    asm("loc_65F4F6B: movl $0,0x34(%esp);");
    asm("loc_65F4F73: movl $0,0x38(%esp);");
    asm("loc_65F4F7B: mov (%eax),%ecx;");
    asm("loc_65F4F7D: push %eax;");
    asm("loc_65F4F7E: calll *0x60(%ecx);");
    asm("loc_65F4F81: test %eax,%eax;");
    asm("loc_65F4F83: je loc_65F4FAC;");
    asm("loc_65F4F85: mov _data_6603138,%eax;");
    asm("loc_65F4F8A: mov (%eax),%ecx;");
    asm("loc_65F4F8C: lea 0x28(%esp),%edx;");
    asm("loc_65F4F90: push %edx;");
    asm("loc_65F4F91: lea 0x38(%esp),%edx;");
    asm("loc_65F4F95: push %edx;");
    asm("loc_65F4F96: mov 4(%esi),%edx;");
    asm("loc_65F4F99: push %edx;");
    asm("loc_65F4F9A: push %eax;");
    asm("loc_65F4F9B: calll *0x54(%ecx);");
    asm("loc_65F4F9E: flds 0xC(%esp);");
    asm("loc_65F4FA2: mov 0x2C(%esp),%eax;");
    asm("loc_65F4FA6: mov %eax,0x44(%esp);");
    asm("loc_65F4FAA: jmp loc_65F4FB7;");
    asm("loc_65F4FAC: flds 0x24(%edi);");
    asm("loc_65F4FAF: movl $0,0x44(%esp);");
    asm("loc_65F4FB7: fadds 0x44(%esp);");
    asm("loc_65F4FBB: mov %ebx,%ecx;");
    asm("loc_65F4FBD: mov (%ecx),%eax;");
    asm("loc_65F4FBF: mov 4(%ecx),%edx;");
    asm("loc_65F4FC2: mov 8(%ecx),%ecx;");
    asm("loc_65F4FC5: fadds 0x20(%edi);");
    asm("loc_65F4FC8: mov %edx,0x20(%esp);");
    asm("loc_65F4FCC: mov %eax,0x10(%esp);");
    asm("loc_65F4FD0: mov %eax,0x1C(%esp);");
    asm("loc_65F4FD4: fstps 0x20(%esp);");
    asm("loc_65F4FD8: mov 0x20(%esp),%eax;");
    asm("loc_65F4FDC: mov %eax,0x14(%esp);");
    asm("loc_65F4FE0: mov _data_6603138,%eax;");
    asm("loc_65F4FE5: lea 0x1C(%esp),%edx;");
    asm("loc_65F4FE9: push %edx;");
    asm("loc_65F4FEA: mov %ecx,0x1C(%esp);");
    asm("loc_65F4FEE: mov 4(%esi),%edx;");
    asm("loc_65F4FF1: push %edx;");
    asm("loc_65F4FF2: mov %ecx,0x2C(%esp);");
    asm("loc_65F4FF6: mov (%eax),%ecx;");
    asm("loc_65F4FF8: push %eax;");
    asm("loc_65F4FF9: calll *0x48(%ecx);");
    asm("loc_65F4FFC: mov $1,%al;");
    asm("loc_65F4FFE: mov 0x10(%esi),%esi;");
    asm("loc_65F5001: test %esi,%esi;");
    asm("loc_65F5003: jne loc_65F4F34;");
    asm("loc_65F5009: test %al,%al;");
    asm("loc_65F500B: jne loc_65F5017;");
    asm("loc_65F500D: flds 0x24(%edi);");
    asm("loc_65F5010: fadds 0x20(%edi);");
    asm("loc_65F5013: fstps 0x14(%esp);");
    asm("loc_65F5017: mov 8(%edi),%edi;");
    asm("loc_65F501A: test %edi,%edi;");
    asm("loc_65F501C: jne loc_65F5023;");
    asm("loc_65F501E: or $0xFFFFFFFF,%eax;");
    asm("loc_65F5021: jmp loc_65F502B;");
    asm("loc_65F5023: mov (%edi),%eax;");
    asm("loc_65F5025: mov 4(%eax),%ecx;");
    asm("loc_65F5028: mov 4(%ecx),%eax;");
    asm("loc_65F502B: mov _data_6603134,%ecx;");
    asm("loc_65F5031: mov (%ecx),%edx;");
    asm("loc_65F5033: lea 0x10(%esp),%esi;");
    asm("loc_65F5037: push %esi;");
    asm("loc_65F5038: push %eax;");
    asm("loc_65F5039: push %ecx;");
    asm("loc_65F503A: calll *0x8C(%edx);");
    asm("loc_65F5040: pop %edi;");
    asm("loc_65F5041: pop %esi;");
    asm("loc_65F5042: pop %ebx;");
    asm("loc_65F5043: add $0x34,%esp;");
    asm("loc_65F5046: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5050() // _sub_65F5050
{
    __DEBUG_ASM(65F5050);
    // chunk 0x65F5050 _sub_65F5050
    asm("loc_65F5050: push %ebx;");
    asm("loc_65F5051: mov 8(%esp),%ebx;");
    asm("loc_65F5055: push %esi;");
    asm("loc_65F5056: push %edi;");
    asm("loc_65F5057: mov %ecx,%edi;");
    asm("loc_65F5059: mov 0xC(%edi),%esi;");
    asm("loc_65F505C: test %esi,%esi;");
    asm("loc_65F505E: je loc_65F507C;");
    asm("loc_65F5060: cmpb $0,(%esi);");
    asm("loc_65F5063: jne loc_65F5075;");
    asm("loc_65F5065: mov 4(%esi),%edx;");
    asm("loc_65F5068: mov _data_6603138,%eax;");
    asm("loc_65F506D: mov (%eax),%ecx;");
    asm("loc_65F506F: push %ebx;");
    asm("loc_65F5070: push %edx;");
    asm("loc_65F5071: push %eax;");
    asm("loc_65F5072: calll *0x4C(%ecx);");
    asm("loc_65F5075: mov 0x10(%esi),%esi;");
    asm("loc_65F5078: test %esi,%esi;");
    asm("loc_65F507A: jne loc_65F5060;");
    asm("loc_65F507C: mov 8(%edi),%eax;");
    asm("loc_65F507F: test %eax,%eax;");
    asm("loc_65F5081: jne loc_65F5088;");
    asm("loc_65F5083: or $0xFFFFFFFF,%ecx;");
    asm("loc_65F5086: jmp loc_65F5090;");
    asm("loc_65F5088: mov (%eax),%eax;");
    asm("loc_65F508A: mov 4(%eax),%ecx;");
    asm("loc_65F508D: mov 4(%ecx),%ecx;");
    asm("loc_65F5090: mov _data_6603134,%eax;");
    asm("loc_65F5095: mov (%eax),%edx;");
    asm("loc_65F5097: push %ebx;");
    asm("loc_65F5098: push %ecx;");
    asm("loc_65F5099: push %eax;");
    asm("loc_65F509A: calll *0x94(%edx);");
    asm("loc_65F50A0: pop %edi;");
    asm("loc_65F50A1: pop %esi;");
    asm("loc_65F50A2: pop %ebx;");
    asm("loc_65F50A3: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F50B0() // _sub_65F50B0
{
    __DEBUG_ASM(65F50B0);
    // chunk 0x65F50B0 _sub_65F50B0
    asm("loc_65F50B0: mov 4(%esp),%eax;");
    asm("loc_65F50B4: sub $0x2C,%esp;");
    asm("loc_65F50B7: push %esi;");
    asm("loc_65F50B8: push %edi;");
    asm("loc_65F50B9: mov %ecx,%edi;");
    asm("loc_65F50BB: mov %eax,0x20(%edi);");
    asm("loc_65F50BE: call _sub_65F4DE0;");
    asm("loc_65F50C3: mov 0xC(%edi),%esi;");
    asm("loc_65F50C6: test %esi,%esi;");
    asm("loc_65F50C8: je loc_65F51C5;");
    asm("loc_65F50CE: mov %edi,%edi;");
    asm("loc_65F50D0: cmpb $0,(%esi);");
    asm("loc_65F50D3: jne loc_65F51BA;");
    asm("loc_65F50D9: mov _data_6603138,%eax;");
    asm("loc_65F50DE: lea 0x38(%esp),%edx;");
    asm("loc_65F50E2: push %edx;");
    asm("loc_65F50E3: mov 4(%esi),%edx;");
    asm("loc_65F50E6: push %edx;");
    asm("loc_65F50E7: movl $0,0x40(%esp);");
    asm("loc_65F50EF: mov (%eax),%ecx;");
    asm("loc_65F50F1: push %eax;");
    asm("loc_65F50F2: calll *0x60(%ecx);");
    asm("loc_65F50F5: test %eax,%eax;");
    asm("loc_65F50F7: je loc_65F5158;");
    asm("loc_65F50F9: mov _data_6603138,%eax;");
    asm("loc_65F50FE: lea 0x1C(%esp),%edx;");
    asm("loc_65F5102: push %edx;");
    asm("loc_65F5103: lea 0x14(%esp),%edx;");
    asm("loc_65F5107: push %edx;");
    asm("loc_65F5108: mov 4(%esi),%edx;");
    asm("loc_65F510B: push %edx;");
    asm("loc_65F510C: movl $0,0x1C(%esp);");
    asm("loc_65F5114: movl $0,0x20(%esp);");
    asm("loc_65F511C: movl $0,0x24(%esp);");
    asm("loc_65F5124: movl $0,0x28(%esp);");
    asm("loc_65F512C: movl $0,0x2C(%esp);");
    asm("loc_65F5134: movl $0,0x30(%esp);");
    asm("loc_65F513C: mov (%eax),%ecx;");
    asm("loc_65F513E: push %eax;");
    asm("loc_65F513F: calll *0x54(%ecx);");
    asm("loc_65F5142: flds 0x38(%esp);");
    asm("loc_65F5146: mov 0x14(%esp),%eax;");
    asm("loc_65F514A: mov 0x20(%esp),%ecx;");
    asm("loc_65F514E: mov %eax,0xC(%esp);");
    asm("loc_65F5152: mov %ecx,8(%esp);");
    asm("loc_65F5156: jmp loc_65F5172;");
    asm("loc_65F5158: mov 8(%edi),%edx;");
    asm("loc_65F515B: flds 0x24(%edi);");
    asm("loc_65F515E: mov (%edx),%eax;");
    asm("loc_65F5160: mov 4(%eax),%ecx;");
    asm("loc_65F5163: mov 0x34(%ecx),%edx;");
    asm("loc_65F5166: movl $0,8(%esp);");
    asm("loc_65F516E: mov %edx,0xC(%esp);");
    asm("loc_65F5172: fadds 8(%esp);");
    asm("loc_65F5176: fadds 0x20(%edi);");
    asm("loc_65F5179: fsubs 0xC(%esp);");
    asm("loc_65F517D: fld %st(0);");
    asm("loc_65F517F: fabs;");
    asm("loc_65F5181: fcompl _data_6601330;");
    asm("loc_65F5187: fnstsw %ax;");
    asm("loc_65F5189: test $0x41,%ah;");
    asm("loc_65F518C: jne loc_65F51B8;");
    asm("loc_65F518E: mov _data_6603138,%eax;");
    asm("loc_65F5193: fstps 0x2C(%esp);");
    asm("loc_65F5197: lea 0x28(%esp),%edx;");
    asm("loc_65F519B: push %edx;");
    asm("loc_65F519C: mov 4(%esi),%edx;");
    asm("loc_65F519F: push %edx;");
    asm("loc_65F51A0: movl $0,0x30(%esp);");
    asm("loc_65F51A8: movl $0,0x38(%esp);");
    asm("loc_65F51B0: mov (%eax),%ecx;");
    asm("loc_65F51B2: push %eax;");
    asm("loc_65F51B3: calll *0x58(%ecx);");
    asm("loc_65F51B6: jmp loc_65F51BA;");
    asm("loc_65F51B8: fstp %st(0);");
    asm("loc_65F51BA: mov 0x10(%esi),%esi;");
    asm("loc_65F51BD: test %esi,%esi;");
    asm("loc_65F51BF: jne loc_65F50D0;");
    asm("loc_65F51C5: pop %edi;");
    asm("loc_65F51C6: pop %esi;");
    asm("loc_65F51C7: add $0x2C,%esp;");
    asm("loc_65F51CA: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F51D0() // _sub_65F51D0
{
    __DEBUG_ASM(65F51D0);
    // chunk 0x65F51D0 _sub_65F51D0
    asm("loc_65F51D0: push %esi;");
    asm("loc_65F51D1: mov %ecx,%esi;");
    asm("loc_65F51D3: call _sub_65F4DE0;");
    asm("loc_65F51D8: mov 0x14(%esi),%eax;");
    asm("loc_65F51DB: pop %esi;");
    asm("loc_65F51DC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F51E0() // _sub_65F51E0
{
    __DEBUG_ASM(65F51E0);
    // chunk 0x65F51E0 _sub_65F51E0
    asm("loc_65F51E0: mov 0xC(%ecx),%eax;");
    asm("loc_65F51E3: test %eax,%eax;");
    asm("loc_65F51E5: mov 4(%esp),%ecx;");
    asm("loc_65F51E9: je loc_65F51FF;");
    asm("loc_65F51EB: nop;");
    asm("loc_65F51EC: lea (%esp),%esp;");
    asm("loc_65F51F0: mov 4(%eax),%edx;");
    asm("loc_65F51F3: mov %edx,(%ecx);");
    asm("loc_65F51F5: mov 0x10(%eax),%eax;");
    asm("loc_65F51F8: add $4,%ecx;");
    asm("loc_65F51FB: test %eax,%eax;");
    asm("loc_65F51FD: jne loc_65F51F0;");
    asm("loc_65F51FF: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5210() // _sub_65F5210
{
    __DEBUG_ASM(65F5210);
    // chunk 0x65F5210 _sub_65F5210
    asm("loc_65F5210: push %ebx;");
    asm("loc_65F5211: mov 8(%esp),%ebx;");
    asm("loc_65F5215: mov 0x18(%ebx),%eax;");
    asm("loc_65F5218: test %eax,%eax;");
    asm("loc_65F521A: je loc_65F5280;");
    asm("loc_65F521C: push %esi;");
    asm("loc_65F521D: mov 0xC(%ebx),%esi;");
    asm("loc_65F5220: test %esi,%esi;");
    asm("loc_65F5222: push %edi;");
    asm("loc_65F5223: movl $0,0x10(%esp);");
    asm("loc_65F522B: je loc_65F5267;");
    asm("loc_65F522D: mov 0x14(%esp),%edi;");
    asm("loc_65F5231: cmpb $0,(%esi);");
    asm("loc_65F5234: jne loc_65F524A;");
    asm("loc_65F5236: mov 4(%esi),%edx;");
    asm("loc_65F5239: mov _data_6603138,%eax;");
    asm("loc_65F523E: mov (%eax),%ecx;");
    asm("loc_65F5240: push %edi;");
    asm("loc_65F5241: push %edx;");
    asm("loc_65F5242: push %eax;");
    asm("loc_65F5243: calll *0x50(%ecx);");
    asm("loc_65F5246: test %eax,%eax;");
    asm("loc_65F5248: jne loc_65F5253;");
    asm("loc_65F524A: mov 0x10(%esi),%esi;");
    asm("loc_65F524D: test %esi,%esi;");
    asm("loc_65F524F: jne loc_65F5231;");
    asm("loc_65F5251: jmp loc_65F5267;");
    asm("loc_65F5253: mov _data_6603138,%eax;");
    asm("loc_65F5258: mov (%eax),%ecx;");
    asm("loc_65F525A: lea 0x10(%esp),%edx;");
    asm("loc_65F525E: push %edx;");
    asm("loc_65F525F: mov 4(%esi),%edx;");
    asm("loc_65F5262: push %edx;");
    asm("loc_65F5263: push %eax;");
    asm("loc_65F5264: calll *0x5C(%ecx);");
    asm("loc_65F5267: mov 0x1C(%esp),%edx;");
    asm("loc_65F526B: mov 0x18(%ebx),%eax;");
    asm("loc_65F526E: mov (%eax),%ecx;");
    asm("loc_65F5270: push %edx;");
    asm("loc_65F5271: mov 0x1C(%esp),%edx;");
    asm("loc_65F5275: push %edx;");
    asm("loc_65F5276: mov 0x18(%esp),%edx;");
    asm("loc_65F527A: push %edx;");
    asm("loc_65F527B: push %eax;");
    asm("loc_65F527C: calll *(%ecx);");
    asm("loc_65F527E: pop %edi;");
    asm("loc_65F527F: pop %esi;");
    asm("loc_65F5280: pop %ebx;");
    asm("loc_65F5281: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5290() // _sub_65F5290
{
    __DEBUG_ASM(65F5290);
    // chunk 0x65F5290 _sub_65F5290
    asm("loc_65F5290: mov 4(%esp),%eax;");
    asm("loc_65F5294: mov 0x18(%eax),%eax;");
    asm("loc_65F5297: test %eax,%eax;");
    asm("loc_65F5299: je loc_65F52A4;");
    asm("loc_65F529B: mov (%eax),%ecx;");
    asm("loc_65F529D: mov %eax,4(%esp);");
    asm("loc_65F52A1: jmpl *4(%ecx);");
    asm("loc_65F52A4: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F52B0() // _sub_65F52B0
{
    __DEBUG_ASM(65F52B0);
    // chunk 0x65F52B0 _sub_65F52B0
    asm("loc_65F52B0: sub $0x44,%esp;");
    asm("loc_65F52B3: push %ebx;");
    asm("loc_65F52B4: push %ebp;");
    asm("loc_65F52B5: mov 0x50(%esp),%ebp;");
    asm("loc_65F52B9: push %esi;");
    asm("loc_65F52BA: mov 0xC(%ebp),%esi;");
    asm("loc_65F52BD: test %esi,%esi;");
    asm("loc_65F52BF: je loc_65F53EF;");
    asm("loc_65F52C5: cmpb $0,(%esi);");
    asm("loc_65F52C8: jne loc_65F52E2;");
    asm("loc_65F52CA: mov 0x58(%esp),%edx;");
    asm("loc_65F52CE: mov _data_6603138,%eax;");
    asm("loc_65F52D3: mov (%eax),%ecx;");
    asm("loc_65F52D5: push %edx;");
    asm("loc_65F52D6: mov 4(%esi),%edx;");
    asm("loc_65F52D9: push %edx;");
    asm("loc_65F52DA: push %eax;");
    asm("loc_65F52DB: calll *0x50(%ecx);");
    asm("loc_65F52DE: test %eax,%eax;");
    asm("loc_65F52E0: jne loc_65F52F2;");
    asm("loc_65F52E2: mov 0x10(%esi),%esi;");
    asm("loc_65F52E5: test %esi,%esi;");
    asm("loc_65F52E7: jne loc_65F52C5;");
    asm("loc_65F52E9: pop %esi;");
    asm("loc_65F52EA: pop %ebp;");
    asm("loc_65F52EB: pop %ebx;");
    asm("loc_65F52EC: add $0x44,%esp;");
    asm("loc_65F52EF: ret $0x10;");
    asm("loc_65F52F2: mov _data_6603138,%eax;");
    asm("loc_65F52F7: mov (%eax),%ecx;");
    asm("loc_65F52F9: mov 0x5C(%esp),%ebx;");
    asm("loc_65F52FD: lea 0x5C(%esp),%edx;");
    asm("loc_65F5301: push %edx;");
    asm("loc_65F5302: mov 4(%esi),%edx;");
    asm("loc_65F5305: push %edx;");
    asm("loc_65F5306: push %eax;");
    asm("loc_65F5307: calll *0x60(%ecx);");
    asm("loc_65F530A: test %eax,%eax;");
    asm("loc_65F530C: je loc_65F5314;");
    asm("loc_65F530E: flds 0x5C(%esp);");
    asm("loc_65F5312: jmp loc_65F5317;");
    asm("loc_65F5314: flds 0x24(%ebp);");
    asm("loc_65F5317: flds 0x24(%ebx);");
    asm("loc_65F531A: fstps 0x10(%esp);");
    asm("loc_65F531E: mov 0x10(%esp),%eax;");
    asm("loc_65F5322: fadds 0x20(%ebp);");
    asm("loc_65F5325: fstps 0x14(%esp);");
    asm("loc_65F5329: flds 0x2C(%ebx);");
    asm("loc_65F532C: mov 0x14(%esp),%ecx;");
    asm("loc_65F5330: fstps 0x18(%esp);");
    asm("loc_65F5334: flds 8(%ebx);");
    asm("loc_65F5337: mov 0x18(%esp),%edx;");
    asm("loc_65F533B: flds 0x20(%ebx);");
    asm("loc_65F533E: mov %eax,0x24(%ebx);");
    asm("loc_65F5341: fpatan;");
    asm("loc_65F5343: mov %ecx,0x28(%ebx);");
    asm("loc_65F5346: mov %edx,0x2C(%ebx);");
    asm("loc_65F5349: fmuls _data_6601328;");
    asm("loc_65F534F: fld %st(0);");
    asm("loc_65F5351: fsin;");
    asm("loc_65F5353: fldl _data_6601320;");
    asm("loc_65F5359: fsqrt;");
    asm("loc_65F535B: fxch;");
    asm("loc_65F535D: fxch;");
    asm("loc_65F535F: fdivrp;");
    asm("loc_65F5361: fstps 0x54(%esp);");
    asm("loc_65F5365: mov 0x54(%esp),%ecx;");
    asm("loc_65F5369: fcos;");
    asm("loc_65F536B: fstps 0x1C(%esp);");
    asm("loc_65F536F: flds 0x54(%esp);");
    asm("loc_65F5373: fmuls _data_6601318;");
    asm("loc_65F5379: fstps 0xC(%esp);");
    asm("loc_65F537D: mov 0xC(%esp),%eax;");
    asm("loc_65F5381: push %eax;");
    asm("loc_65F5382: push %ecx;");
    asm("loc_65F5383: push %eax;");
    asm("loc_65F5384: lea 0x1C(%esp),%ecx;");
    asm("loc_65F5388: call _sub_65F4580;");
    asm("loc_65F538D: mov 0x14(%esp),%eax;");
    asm("loc_65F5391: mov 0x10(%esp),%edx;");
    asm("loc_65F5395: mov 0x18(%esp),%ecx;");
    asm("loc_65F5399: mov %eax,0x24(%esp);");
    asm("loc_65F539D: mov _data_6603170,%eax;");
    asm("loc_65F53A2: test %eax,%eax;");
    asm("loc_65F53A4: mov %edx,0x20(%esp);");
    asm("loc_65F53A8: mov %ecx,0x28(%esp);");
    asm("loc_65F53AC: jne loc_65F53B8;");
    asm("loc_65F53AE: call _sub_6600DE0;");
    asm("loc_65F53B3: mov %eax,_data_6603170;");
    asm("loc_65F53B8: mov (%eax),%edx;");
    asm("loc_65F53BA: push %edi;");
    asm("loc_65F53BB: lea 0x20(%esp),%ecx;");
    asm("loc_65F53BF: push %ecx;");
    asm("loc_65F53C0: lea 0x34(%esp),%ecx;");
    asm("loc_65F53C4: push %ecx;");
    asm("loc_65F53C5: push %eax;");
    asm("loc_65F53C6: calll *0x54(%edx);");
    asm("loc_65F53C9: mov $9,%ecx;");
    asm("loc_65F53CE: lea 0x30(%esp),%esi;");
    asm("loc_65F53D2: mov %ebx,%edi;");
    asm("loc_65F53D4: rep movsl (%esi),(%edi);");
    asm("loc_65F53D6: mov 0x18(%ebp),%eax;");
    asm("loc_65F53D9: test %eax,%eax;");
    asm("loc_65F53DB: pop %edi;");
    asm("loc_65F53DC: je loc_65F53EF;");
    asm("loc_65F53DE: mov 0x60(%esp),%ecx;");
    asm("loc_65F53E2: mov (%eax),%edx;");
    asm("loc_65F53E4: push %ecx;");
    asm("loc_65F53E5: mov 0x5C(%esp),%ecx;");
    asm("loc_65F53E9: push %ebx;");
    asm("loc_65F53EA: push %ecx;");
    asm("loc_65F53EB: push %eax;");
    asm("loc_65F53EC: calll *8(%edx);");
    asm("loc_65F53EF: pop %esi;");
    asm("loc_65F53F0: pop %ebp;");
    asm("loc_65F53F1: pop %ebx;");
    asm("loc_65F53F2: add $0x44,%esp;");
    asm("loc_65F53F5: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5400() // _sub_65F5400
{
    __DEBUG_ASM(65F5400);
    // chunk 0x65F5400 _sub_65F5400
    asm("loc_65F5400: sub $0x9C,%esp;");
    asm("loc_65F5406: push %ebx;");
    asm("loc_65F5407: push %ebp;");
    asm("loc_65F5408: push %esi;");
    asm("loc_65F5409: push %edi;");
    asm("loc_65F540A: mov %ecx,%edi;");
    asm("loc_65F540C: mov 8(%edi),%eax;");
    asm("loc_65F540F: xor %ebx,%ebx;");
    asm("loc_65F5411: test %eax,%eax;");
    asm("loc_65F5413: mov %edi,0x14(%esp);");
    asm("loc_65F5417: mov %ebx,0x24(%esp);");
    asm("loc_65F541B: mov %bl,0x12(%esp);");
    asm("loc_65F541F: jne loc_65F542B;");
    asm("loc_65F5421: movl $0xFFFFFFFF,0x28(%esp);");
    asm("loc_65F5429: jmp loc_65F5437;");
    asm("loc_65F542B: mov (%eax),%eax;");
    asm("loc_65F542D: mov 4(%eax),%ecx;");
    asm("loc_65F5430: mov 4(%ecx),%edx;");
    asm("loc_65F5433: mov %edx,0x28(%esp);");
    asm("loc_65F5437: mov 0xB0(%esp),%eax;");
    asm("loc_65F543E: mov 8(%eax),%esi;");
    asm("loc_65F5441: cmp 4(%eax),%esi;");
    asm("loc_65F5444: je loc_65F54FD;");
    asm("loc_65F544A: lea (%ebx),%ebx;");
    asm("loc_65F5450: mov _data_6603138,%eax;");
    asm("loc_65F5455: test %eax,%eax;");
    asm("loc_65F5457: je loc_65F5483;");
    asm("loc_65F5459: mov (%eax),%ecx;");
    asm("loc_65F545B: lea 0x13(%esp),%edx;");
    asm("loc_65F545F: push %edx;");
    asm("loc_65F5460: push %esi;");
    asm("loc_65F5461: push %eax;");
    asm("loc_65F5462: calll *0x94(%ecx);");
    asm("loc_65F5468: mov 0x13(%esp),%al;");
    asm("loc_65F546C: test %al,%al;");
    asm("loc_65F546E: jne loc_65F5549;");
    asm("loc_65F5474: mov _data_6603138,%eax;");
    asm("loc_65F5479: mov (%eax),%ecx;");
    asm("loc_65F547B: push %esi;");
    asm("loc_65F547C: push %eax;");
    asm("loc_65F547D: calll *0x90(%ecx);");
    asm("loc_65F5483: mov _data_6603134,%eax;");
    asm("loc_65F5488: mov (%eax),%edx;");
    asm("loc_65F548A: push %esi;");
    asm("loc_65F548B: push %eax;");
    asm("loc_65F548C: mov %esi,0x34(%esp,%ebx,4);");
    asm("loc_65F5490: calll *0xD4(%edx);");
    asm("loc_65F5496: mov %eax,%ebp;");
    asm("loc_65F5498: mov _data_6603134,%eax;");
    asm("loc_65F549D: mov (%eax),%ecx;");
    asm("loc_65F549F: push %esi;");
    asm("loc_65F54A0: push %eax;");
    asm("loc_65F54A1: calll *0xC4(%ecx);");
    asm("loc_65F54A7: cmpl $4,(%eax);");
    asm("loc_65F54AA: jne loc_65F54E4;");
    asm("loc_65F54AC: flds 0x18(%eax);");
    asm("loc_65F54AF: movb $1,0x12(%esp);");
    asm("loc_65F54B4: flds 0x14(%eax);");
    asm("loc_65F54B7: flds 0x10(%eax);");
    asm("loc_65F54BA: fld %st(0);");
    asm("loc_65F54BC: fmul %st(1),%st;");
    asm("loc_65F54BE: fld %st(2);");
    asm("loc_65F54C0: fmul %st(3),%st;");
    asm("loc_65F54C2: faddp;");
    asm("loc_65F54C4: fld %st(3);");
    asm("loc_65F54C6: fmul %st(4),%st;");
    asm("loc_65F54C8: faddp;");
    asm("loc_65F54CA: fsqrt;");
    asm("loc_65F54CC: fstp %st(3);");
    asm("loc_65F54CE: fstp %st(0);");
    asm("loc_65F54D0: fstp %st(0);");
    asm("loc_65F54D2: fcompl _data_6601348;");
    asm("loc_65F54D8: fnstsw %ax;");
    asm("loc_65F54DA: test $0x41,%ah;");
    asm("loc_65F54DD: je loc_65F54E4;");
    asm("loc_65F54DF: movb $0,0x12(%esp);");
    asm("loc_65F54E4: mov 0xB0(%esp),%edx;");
    asm("loc_65F54EB: mov 4(%edx),%eax;");
    asm("loc_65F54EE: inc %ebx;");
    asm("loc_65F54EF: cmp %eax,%ebp;");
    asm("loc_65F54F1: mov %ebp,%esi;");
    asm("loc_65F54F3: jne loc_65F5450;");
    asm("loc_65F54F9: mov %ebx,0x24(%esp);");
    asm("loc_65F54FD: xor %ebp,%ebp;");
    asm("loc_65F54FF: xor %eax,%eax;");
    asm("loc_65F5501: cmp %ebp,%ebx;");
    asm("loc_65F5503: jle loc_65F551E;");
    asm("loc_65F5505: lea 0x28(%esp,%ebx,4),%ecx;");
    asm("loc_65F5509: lea (%esp),%esp;");
    asm("loc_65F5510: mov (%ecx),%edx;");
    asm("loc_65F5512: mov %edx,0x68(%esp,%eax,4);");
    asm("loc_65F5516: inc %eax;");
    asm("loc_65F5517: sub $4,%ecx;");
    asm("loc_65F551A: cmp %ebx,%eax;");
    asm("loc_65F551C: jl loc_65F5510;");
    asm("loc_65F551E: push $0x14;");
    asm("loc_65F5520: call _sub_6600BB6;");
    asm("loc_65F5525: add $4,%esp;");
    asm("loc_65F5528: cmp %ebp,%eax;");
    asm("loc_65F552A: je loc_65F55C6;");
    asm("loc_65F5530: movb $0,(%eax);");
    asm("loc_65F5533: movl $0xFFFFFFFF,4(%eax);");
    asm("loc_65F553A: mov 0x10(%edi),%ecx;");
    asm("loc_65F553D: cmp %ebp,%ecx;");
    asm("loc_65F553F: mov %eax,0x10(%edi);");
    asm("loc_65F5542: jne loc_65F55B8;");
    asm("loc_65F5544: mov %eax,0xC(%edi);");
    asm("loc_65F5547: jmp loc_65F55BB;");
    asm("loc_65F5549: mov 0xB0(%esp),%eax;");
    asm("loc_65F5550: mov 8(%eax),%edi;");
    asm("loc_65F5553: cmp %esi,%edi;");
    asm("loc_65F5555: mov %ebx,0x24(%esp);");
    asm("loc_65F5559: je loc_65F5584;");
    asm("loc_65F555B: nop;");
    asm("loc_65F555C: lea (%esp),%esp;");
    asm("loc_65F5560: mov _data_6603138,%eax;");
    asm("loc_65F5565: mov (%eax),%ecx;");
    asm("loc_65F5567: push %edi;");
    asm("loc_65F5568: push %eax;");
    asm("loc_65F5569: calll *0x98(%ecx);");
    asm("loc_65F556F: mov _data_6603134,%eax;");
    asm("loc_65F5574: mov (%eax),%edx;");
    asm("loc_65F5576: push %edi;");
    asm("loc_65F5577: push %eax;");
    asm("loc_65F5578: calll *0xD4(%edx);");
    asm("loc_65F557E: mov %eax,%edi;");
    asm("loc_65F5580: cmp %esi,%edi;");
    asm("loc_65F5582: jne loc_65F5560;");
    asm("loc_65F5584: push $_data_66026DC;");
    asm("loc_65F5589: push $0x44D;");
    asm("loc_65F558E: push $_data_6602570;");
    asm("loc_65F5593: mov $0x100002,%eax;");
    asm("loc_65F5598: push $_data_66024C8;");
    asm("loc_65F559D: push %eax;");
    asm("loc_65F559E: mov _import_6601008,%eax;");
    asm("loc_65F55A3: calll *(%eax);");
    asm("loc_65F55A5: add $0x14,%esp;");
    asm("loc_65F55A8: pop %edi;");
    asm("loc_65F55A9: pop %esi;");
    asm("loc_65F55AA: pop %ebp;");
    asm("loc_65F55AB: or $0xFFFFFFFF,%eax;");
    asm("loc_65F55AE: pop %ebx;");
    asm("loc_65F55AF: add $0x9C,%esp;");
    asm("loc_65F55B5: ret $8;");
    asm("loc_65F55B8: mov %eax,0x10(%ecx);");
    asm("loc_65F55BB: mov %ebp,0x10(%eax);");
    asm("loc_65F55BE: mov %ecx,0xC(%eax);");
    asm("loc_65F55C1: incl 0x14(%edi);");
    asm("loc_65F55C4: mov %eax,%ebp;");
    asm("loc_65F55C6: push $0x44;");
    asm("loc_65F55C8: movb $1,(%ebp);");
    asm("loc_65F55CC: call _sub_6600BB6;");
    asm("loc_65F55D1: add $4,%esp;");
    asm("loc_65F55D4: test %eax,%eax;");
    asm("loc_65F55D6: je loc_65F5603;");
    asm("loc_65F55D8: mov 0xB0(%esp),%edx;");
    asm("loc_65F55DF: mov 0x14(%edx),%ecx;");
    asm("loc_65F55E2: mov 0x10(%edx),%edx;");
    asm("loc_65F55E5: mov %ecx,0x24(%eax);");
    asm("loc_65F55E8: mov 0x34(%eax),%cl;");
    asm("loc_65F55EB: and $0xFE,%cl;");
    asm("loc_65F55EE: mov %edx,0x20(%eax);");
    asm("loc_65F55F1: mov %cl,0x34(%eax);");
    asm("loc_65F55F4: movl $_off_6601340,(%eax);");
    asm("loc_65F55FA: movl $0,0x3C(%eax);");
    asm("loc_65F5601: jmp loc_65F5605;");
    asm("loc_65F5603: xor %eax,%eax;");
    asm("loc_65F5605: lea (,%ebx,4),%esi;");
    asm("loc_65F560C: mov %eax,4(%ebp);");
    asm("loc_65F560F: push %esi;");
    asm("loc_65F5610: mov %ebp,4(%eax);");
    asm("loc_65F5613: call _sub_6600BB6;");
    asm("loc_65F5618: mov 4(%ebp),%ecx;");
    asm("loc_65F561B: mov %eax,8(%ecx);");
    asm("loc_65F561E: mov 4(%ebp),%edx;");
    asm("loc_65F5621: mov 8(%edx),%edi;");
    asm("loc_65F5624: mov %esi,%ecx;");
    asm("loc_65F5626: mov %ecx,%eax;");
    asm("loc_65F5628: shr $2,%ecx;");
    asm("loc_65F562B: lea 0x6C(%esp),%esi;");
    asm("loc_65F562F: rep movsl (%esi),(%edi);");
    asm("loc_65F5631: mov %eax,%ecx;");
    asm("loc_65F5633: lea (,%ebx,4),%eax;");
    asm("loc_65F563A: and $3,%ecx;");
    asm("loc_65F563D: push %eax;");
    asm("loc_65F563E: rep movsb (%esi),(%edi);");
    asm("loc_65F5640: call _sub_6600BB6;");
    asm("loc_65F5645: mov 4(%ebp),%ecx;");
    asm("loc_65F5648: mov %ebx,%edx;");
    asm("loc_65F564A: shl $4,%edx;");
    asm("loc_65F564D: push %edx;");
    asm("loc_65F564E: mov %eax,0x18(%ecx);");
    asm("loc_65F5651: call _sub_6600BB6;");
    asm("loc_65F5656: mov 4(%ebp),%ecx;");
    asm("loc_65F5659: mov 0xBC(%esp),%esi;");
    asm("loc_65F5660: mov %eax,0x1C(%ecx);");
    asm("loc_65F5663: mov 4(%ebp),%edx;");
    asm("loc_65F5666: mov 0xC(%esi),%eax;");
    asm("loc_65F5669: mov %eax,0x28(%edx);");
    asm("loc_65F566C: mov 4(%ebp),%ecx;");
    asm("loc_65F566F: mov 4(%esi),%edx;");
    asm("loc_65F5672: mov %edx,0x10(%ecx);");
    asm("loc_65F5675: mov 4(%ebp),%eax;");
    asm("loc_65F5678: mov 8(%esi),%ecx;");
    asm("loc_65F567B: lea (%ebx,%ebx,8),%edx;");
    asm("loc_65F567E: shl $2,%edx;");
    asm("loc_65F5681: push %edx;");
    asm("loc_65F5682: mov %ecx,0x14(%eax);");
    asm("loc_65F5685: call _sub_6600BB6;");
    asm("loc_65F568A: mov 4(%ebp),%ecx;");
    asm("loc_65F568D: push %ebx;");
    asm("loc_65F568E: mov %eax,0xC(%ecx);");
    asm("loc_65F5691: call _sub_6600BB6;");
    asm("loc_65F5696: mov 4(%ebp),%edx;");
    asm("loc_65F5699: mov %eax,0x2C(%edx);");
    asm("loc_65F569C: mov 4(%ebp),%edx;");
    asm("loc_65F569F: mov 0x2C(%edx),%edi;");
    asm("loc_65F56A2: mov %ebx,%ecx;");
    asm("loc_65F56A4: mov %ecx,%edx;");
    asm("loc_65F56A6: shr $2,%ecx;");
    asm("loc_65F56A9: xor %eax,%eax;");
    asm("loc_65F56AB: rep stos %eax,(%edi);");
    asm("loc_65F56AD: mov %edx,%ecx;");
    asm("loc_65F56AF: and $3,%ecx;");
    asm("loc_65F56B2: rep stos %al,(%edi);");
    asm("loc_65F56B4: mov 4(%ebp),%eax;");
    asm("loc_65F56B7: mov 0x18(%esi),%ecx;");
    asm("loc_65F56BA: mov %ecx,0x38(%eax);");
    asm("loc_65F56BD: mov 4(%ebp),%edx;");
    asm("loc_65F56C0: mov 0x1C(%esi),%eax;");
    asm("loc_65F56C3: add $0x14,%esp;");
    asm("loc_65F56C6: mov %eax,0x30(%edx);");
    asm("loc_65F56C9: mov 4(%ebp),%ecx;");
    asm("loc_65F56CC: push %ebx;");
    asm("loc_65F56CD: call _sub_65FB030;");
    asm("loc_65F56D2: test %al,%al;");
    asm("loc_65F56D4: jne loc_65F56F0;");
    asm("loc_65F56D6: mov 0x14(%esp),%ecx;");
    asm("loc_65F56DA: push %ebp;");
    asm("loc_65F56DB: call _sub_65F5950;");
    asm("loc_65F56E0: pop %edi;");
    asm("loc_65F56E1: pop %esi;");
    asm("loc_65F56E2: pop %ebp;");
    asm("loc_65F56E3: or $0xFFFFFFFF,%eax;");
    asm("loc_65F56E6: pop %ebx;");
    asm("loc_65F56E7: add $0x9C,%esp;");
    asm("loc_65F56ED: ret $8;");
    asm("loc_65F56F0: mov 0xC(%esi),%edx;");
    asm("loc_65F56F3: mov 0xB4(%esp),%ecx;");
    asm("loc_65F56FA: xor %edi,%edi;");
    asm("loc_65F56FC: shr $1,%edx;");
    asm("loc_65F56FE: and $0x80,%edx;");
    asm("loc_65F5704: cmp %edi,%ebx;");
    asm("loc_65F5706: movl $0,0x4C(%esp);");
    asm("loc_65F570E: movl $0x3F800000,0x54(%esp);");
    asm("loc_65F5716: movl $0x3F800000,0x5C(%esp);");
    asm("loc_65F571E: movl $0x3F800000,0x60(%esp);");
    asm("loc_65F5726: mov %edi,0x64(%esp);");
    asm("loc_65F572A: mov %ecx,0x58(%esp);");
    asm("loc_65F572E: mov %edx,0x50(%esp);");
    asm("loc_65F5732: movl $0xFFFFFFFF,0x48(%esp);");
    asm("loc_65F573A: mov %edi,0x40(%esp);");
    asm("loc_65F573E: mov %edi,0x44(%esp);");
    asm("loc_65F5742: mov %edi,0x3C(%esp);");
    asm("loc_65F5746: mov %edi,0x1C(%esp);");
    asm("loc_65F574A: jle loc_65F5922;");
    asm("loc_65F5750: xor %esi,%esi;");
    asm("loc_65F5752: mov %esi,0x20(%esp);");
    asm("loc_65F5756: jmp loc_65F5760;");
    asm("loc_65F5758: mov 0x20(%esp),%esi;");
    asm("loc_65F575C: mov 0x1C(%esp),%edi;");
    asm("loc_65F5760: mov 0x28(%esp),%edx;");
    asm("loc_65F5764: mov 0x68(%esp,%edi,4),%ebx;");
    asm("loc_65F5768: mov _data_660313C,%eax;");
    asm("loc_65F576D: push %edx;");
    asm("loc_65F576E: lea 0x40(%esp),%edx;");
    asm("loc_65F5772: push %edx;");
    asm("loc_65F5773: mov %ebx,0x50(%esp);");
    asm("loc_65F5777: mov 4(%ebp),%edx;");
    asm("loc_65F577A: mov (%eax),%ecx;");
    asm("loc_65F577C: push $4;");
    asm("loc_65F577E: push %edx;");
    asm("loc_65F577F: push %eax;");
    asm("loc_65F5780: calll *0xC(%ecx);");
    asm("loc_65F5783: mov 4(%ebp),%ecx;");
    asm("loc_65F5786: mov 0x18(%ecx),%edx;");
    asm("loc_65F5789: mov %eax,(%edx,%edi,4);");
    asm("loc_65F578C: mov _data_660313C,%ecx;");
    asm("loc_65F5792: mov (%ecx),%edx;");
    asm("loc_65F5794: lea 0x4C(%esp),%edi;");
    asm("loc_65F5798: push %edi;");
    asm("loc_65F5799: push %eax;");
    asm("loc_65F579A: push %ecx;");
    asm("loc_65F579B: calll *0x1C(%edx);");
    asm("loc_65F579E: mov _data_6603134,%eax;");
    asm("loc_65F57A3: mov (%eax),%ecx;");
    asm("loc_65F57A5: push %ebx;");
    asm("loc_65F57A6: push %eax;");
    asm("loc_65F57A7: calll *0xC4(%ecx);");
    asm("loc_65F57AD: flds 0x50(%eax);");
    asm("loc_65F57B0: fadds 0x4C(%eax);");
    asm("loc_65F57B3: mov 4(%ebp),%edx;");
    asm("loc_65F57B6: fmull _data_6601338;");
    asm("loc_65F57BC: fstps 0x2C(%esp);");
    asm("loc_65F57C0: flds 0x58(%eax);");
    asm("loc_65F57C3: fadds 0x54(%eax);");
    asm("loc_65F57C6: fmull _data_6601338;");
    asm("loc_65F57CC: fstps 0x18(%esp);");
    asm("loc_65F57D0: flds 0x44(%eax);");
    asm("loc_65F57D3: fadds 0x40(%eax);");
    asm("loc_65F57D6: mov 0xC(%edx),%eax;");
    asm("loc_65F57D9: add %esi,%eax;");
    asm("loc_65F57DB: fmull _data_6601338;");
    asm("loc_65F57E1: fstps 0x14(%esp);");
    asm("loc_65F57E5: flds 0x2C(%esp);");
    asm("loc_65F57E9: fsin;");
    asm("loc_65F57EB: flds 0x2C(%esp);");
    asm("loc_65F57EF: fcos;");
    asm("loc_65F57F1: flds 0x18(%esp);");
    asm("loc_65F57F5: fsin;");
    asm("loc_65F57F7: flds 0x18(%esp);");
    asm("loc_65F57FB: fcos;");
    asm("loc_65F57FD: fstpl 0x2C(%esp);");
    asm("loc_65F5801: flds 0x14(%esp);");
    asm("loc_65F5805: fsin;");
    asm("loc_65F5807: flds 0x14(%esp);");
    asm("loc_65F580B: fcos;");
    asm("loc_65F580D: fld %st(2);");
    asm("loc_65F580F: fmul %st(5),%st;");
    asm("loc_65F5811: fld %st(2);");
    asm("loc_65F5813: fmul %st(5),%st;");
    asm("loc_65F5815: fstps 0x18(%esp);");
    asm("loc_65F5819: fld %st(1);");
    asm("loc_65F581B: fmul %st(5),%st;");
    asm("loc_65F581D: fstps 0x14(%esp);");
    asm("loc_65F5821: fld %st(1);");
    asm("loc_65F5823: fmull 0x2C(%esp);");
    asm("loc_65F5827: fstps (%eax);");
    asm("loc_65F5829: fld %st(0);");
    asm("loc_65F582B: fmul %st(2),%st;");
    asm("loc_65F582D: fsubs 0x18(%esp);");
    asm("loc_65F5831: fstps 4(%eax);");
    asm("loc_65F5834: flds 0x14(%esp);");
    asm("loc_65F5838: fmul %st(4),%st;");
    asm("loc_65F583A: fld %st(3);");
    asm("loc_65F583C: fmul %st(7),%st;");
    asm("loc_65F583E: faddp;");
    asm("loc_65F5840: fstps 8(%eax);");
    asm("loc_65F5843: fld %st(2);");
    asm("loc_65F5845: fmull 0x2C(%esp);");
    asm("loc_65F5849: lea 0x78(%esp),%edx;");
    asm("loc_65F584D: push %edx;");
    asm("loc_65F584E: push $0;");
    asm("loc_65F5850: fstps 0xC(%eax);");
    asm("loc_65F5853: push %ebx;");
    asm("loc_65F5854: fmul %st(2),%st;");
    asm("loc_65F5856: fadds 0x20(%esp);");
    asm("loc_65F585A: fstps 0x10(%eax);");
    asm("loc_65F585D: flds 0x24(%esp);");
    asm("loc_65F5861: fmul %st(3),%st;");
    asm("loc_65F5863: fxch;");
    asm("loc_65F5865: fmul %st(5),%st;");
    asm("loc_65F5867: fsubrp;");
    asm("loc_65F5869: fstps 0x14(%eax);");
    asm("loc_65F586C: fstp %st(0);");
    asm("loc_65F586E: fchs;");
    asm("loc_65F5870: fstps 0x18(%eax);");
    asm("loc_65F5873: fldl 0x38(%esp);");
    asm("loc_65F5877: fmul %st(2),%st;");
    asm("loc_65F5879: fstps 0x1C(%eax);");
    asm("loc_65F587C: fldl 0x38(%esp);");
    asm("loc_65F5880: fmul %st(1),%st;");
    asm("loc_65F5882: fstps 0x20(%eax);");
    asm("loc_65F5885: mov _data_6603134,%eax;");
    asm("loc_65F588A: mov (%eax),%ecx;");
    asm("loc_65F588C: fstp %st(0);");
    asm("loc_65F588E: push %eax;");
    asm("loc_65F588F: fstp %st(0);");
    asm("loc_65F5891: calll *0xCC(%ecx);");
    asm("loc_65F5897: mov _data_6603170,%eax;");
    asm("loc_65F589C: test %eax,%eax;");
    asm("loc_65F589E: jne loc_65F58AA;");
    asm("loc_65F58A0: call _sub_6600DE0;");
    asm("loc_65F58A5: mov %eax,_data_6603170;");
    asm("loc_65F58AA: mov (%eax),%ecx;");
    asm("loc_65F58AC: lea 0x78(%esp),%edx;");
    asm("loc_65F58B0: push %edx;");
    asm("loc_65F58B1: lea 0x8C(%esp),%edx;");
    asm("loc_65F58B8: push %edx;");
    asm("loc_65F58B9: push %eax;");
    asm("loc_65F58BA: calll *0x54(%ecx);");
    asm("loc_65F58BD: mov 4(%ebp),%eax;");
    asm("loc_65F58C0: mov 0xC(%eax),%edi;");
    asm("loc_65F58C3: mov 0xB0(%esp),%edx;");
    asm("loc_65F58CA: add %esi,%edi;");
    asm("loc_65F58CC: mov $9,%ecx;");
    asm("loc_65F58D1: lea 0x88(%esp),%esi;");
    asm("loc_65F58D8: rep movsl (%esi),(%edi);");
    asm("loc_65F58DA: mov 0x1C(%edx),%ecx;");
    asm("loc_65F58DD: xor %eax,%eax;");
    asm("loc_65F58DF: test %ecx,%ecx;");
    asm("loc_65F58E1: jle loc_65F5902;");
    asm("loc_65F58E3: add $0x20,%edx;");
    asm("loc_65F58E6: cmp %ebx,(%edx);");
    asm("loc_65F58E8: je loc_65F58F4;");
    asm("loc_65F58EA: inc %eax;");
    asm("loc_65F58EB: add $4,%edx;");
    asm("loc_65F58EE: cmp %ecx,%eax;");
    asm("loc_65F58F0: jl loc_65F58E6;");
    asm("loc_65F58F2: jmp loc_65F5902;");
    asm("loc_65F58F4: mov 4(%ebp),%ecx;");
    asm("loc_65F58F7: mov 0x2C(%ecx),%edx;");
    asm("loc_65F58FA: mov 0x1C(%esp),%eax;");
    asm("loc_65F58FE: movb $1,(%eax,%edx);");
    asm("loc_65F5902: mov 0x1C(%esp),%eax;");
    asm("loc_65F5906: mov 0x20(%esp),%edx;");
    asm("loc_65F590A: mov 0x24(%esp),%ecx;");
    asm("loc_65F590E: inc %eax;");
    asm("loc_65F590F: add $0x24,%edx;");
    asm("loc_65F5912: cmp %ecx,%eax;");
    asm("loc_65F5914: mov %eax,0x1C(%esp);");
    asm("loc_65F5918: mov %edx,0x20(%esp);");
    asm("loc_65F591C: jl loc_65F5758;");
    asm("loc_65F5922: mov 4(%ebp),%ecx;");
    asm("loc_65F5925: mov 0x12(%esp),%al;");
    asm("loc_65F5929: mov 0x34(%ecx),%dl;");
    asm("loc_65F592C: shl $1,%al;");
    asm("loc_65F592E: xor %dl,%al;");
    asm("loc_65F5930: and $2,%al;");
    asm("loc_65F5932: pop %edi;");
    asm("loc_65F5933: xor %dl,%al;");
    asm("loc_65F5935: pop %esi;");
    asm("loc_65F5936: mov %al,0x34(%ecx);");
    asm("loc_65F5939: mov %ebp,%eax;");
    asm("loc_65F593B: pop %ebp;");
    asm("loc_65F593C: pop %ebx;");
    asm("loc_65F593D: add $0x9C,%esp;");
    asm("loc_65F5943: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5950() // _sub_65F5950
{
    __DEBUG_ASM(65F5950);
    // chunk 0x65F5950 _sub_65F5950
    asm("loc_65F5950: push %esi;");
    asm("loc_65F5951: push %edi;");
    asm("loc_65F5952: mov 0xC(%esp),%edi;");
    asm("loc_65F5956: cmp $0xFFFFFFFF,%edi;");
    asm("loc_65F5959: je loc_65F59A3;");
    asm("loc_65F595B: mov 4(%edi),%eax;");
    asm("loc_65F595E: orb $1,0x34(%eax);");
    asm("loc_65F5962: mov _data_6603138,%eax;");
    asm("loc_65F5967: test %eax,%eax;");
    asm("loc_65F5969: je loc_65F59A3;");
    asm("loc_65F596B: mov 4(%edi),%ecx;");
    asm("loc_65F596E: mov 0x14(%ecx),%esi;");
    asm("loc_65F5971: cmp 0x10(%ecx),%esi;");
    asm("loc_65F5974: je loc_65F59A3;");
    asm("loc_65F5976: jmp loc_65F5980;");
    asm("loc_65F5978: mov _data_6603138,%eax;");
    asm("loc_65F597D: lea (%ecx),%ecx;");
    asm("loc_65F5980: mov (%eax),%ecx;");
    asm("loc_65F5982: push %esi;");
    asm("loc_65F5983: push %eax;");
    asm("loc_65F5984: calll *0x98(%ecx);");
    asm("loc_65F598A: mov _data_6603134,%eax;");
    asm("loc_65F598F: mov (%eax),%edx;");
    asm("loc_65F5991: push %esi;");
    asm("loc_65F5992: push %eax;");
    asm("loc_65F5993: calll *0xD4(%edx);");
    asm("loc_65F5999: mov %eax,%esi;");
    asm("loc_65F599B: mov 4(%edi),%eax;");
    asm("loc_65F599E: cmp 0x10(%eax),%esi;");
    asm("loc_65F59A1: jne loc_65F5978;");
    asm("loc_65F59A3: pop %edi;");
    asm("loc_65F59A4: pop %esi;");
    asm("loc_65F59A5: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F59B0() // _sub_65F59B0
{
    __DEBUG_ASM(65F59B0);
    // chunk 0x65F59B0 _sub_65F59B0
    asm("loc_65F59B0: mov 8(%esp),%eax;");
    asm("loc_65F59B4: mov 4(%eax),%ecx;");
    asm("loc_65F59B7: mov 4(%esp),%edx;");
    asm("loc_65F59BB: push %ecx;");
    asm("loc_65F59BC: mov 8(%eax),%ecx;");
    asm("loc_65F59BF: push %edx;");
    asm("loc_65F59C0: push %ecx;");
    asm("loc_65F59C1: calll *(%eax);");
    asm("loc_65F59C3: add $0xC,%esp;");
    asm("loc_65F59C6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F59D0() // _sub_65F59D0
{
    __DEBUG_ASM(65F59D0);
    // chunk 0x65F59D0 _sub_65F59D0
    asm("loc_65F59D0: sub $0x1C,%esp;");
    asm("loc_65F59D3: mov _data_6603134,%eax;");
    asm("loc_65F59D8: push %ebx;");
    asm("loc_65F59D9: push %esi;");
    asm("loc_65F59DA: lea 8(%esp),%edx;");
    asm("loc_65F59DE: push %edx;");
    asm("loc_65F59DF: mov %ecx,%ebx;");
    asm("loc_65F59E1: xor %esi,%esi;");
    asm("loc_65F59E3: push $_data_6602634;");
    asm("loc_65F59E8: mov %esi,0x10(%esp);");
    asm("loc_65F59EC: mov (%eax),%ecx;");
    asm("loc_65F59EE: push %eax;");
    asm("loc_65F59EF: mov %ebx,0x20(%esp);");
    asm("loc_65F59F3: calll *(%ecx);");
    asm("loc_65F59F5: test %eax,%eax;");
    asm("loc_65F59F7: jge loc_65F5A35;");
    asm("loc_65F59F9: push $_data_66025F4;");
    asm("loc_65F59FE: push $0x4EF;");
    asm("loc_65F5A03: push $_data_6602570;");
    asm("loc_65F5A08: mov $0x100002,%eax;");
    asm("loc_65F5A0D: push $_data_66024C8;");
    asm("loc_65F5A12: push %eax;");
    asm("loc_65F5A13: mov _import_6601008,%eax;");
    asm("loc_65F5A18: calll *(%eax);");
    asm("loc_65F5A1A: mov 0x1C(%esp),%eax;");
    asm("loc_65F5A1E: add $0x14,%esp;");
    asm("loc_65F5A21: cmp %esi,%eax;");
    asm("loc_65F5A23: je loc_65F5A2B;");
    asm("loc_65F5A25: mov (%eax),%ecx;");
    asm("loc_65F5A27: push %eax;");
    asm("loc_65F5A28: calll *8(%ecx);");
    asm("loc_65F5A2B: pop %esi;");
    asm("loc_65F5A2C: xor %al,%al;");
    asm("loc_65F5A2E: pop %ebx;");
    asm("loc_65F5A2F: add $0x1C,%esp;");
    asm("loc_65F5A32: ret $8;");
    asm("loc_65F5A35: cmp %esi,4(%ebx);");
    asm("loc_65F5A38: mov %esi,0x10(%esp);");
    asm("loc_65F5A3C: jle loc_65F5AC5;");
    asm("loc_65F5A42: push %ebp;");
    asm("loc_65F5A43: push %edi;");
    asm("loc_65F5A44: mov %esi,0x14(%esp);");
    asm("loc_65F5A48: mov 0x14(%esp),%eax;");
    asm("loc_65F5A4C: mov 8(%ebx),%edx;");
    asm("loc_65F5A4F: mov (%eax,%edx),%esi;");
    asm("loc_65F5A52: mov 8(%esi),%eax;");
    asm("loc_65F5A55: xor %edi,%edi;");
    asm("loc_65F5A57: test %eax,%eax;");
    asm("loc_65F5A59: jle loc_65F5AA8;");
    asm("loc_65F5A5B: xor %ebp,%ebp;");
    asm("loc_65F5A5D: xor %ebx,%ebx;");
    asm("loc_65F5A5F: nop;");
    asm("loc_65F5A60: mov 0x30(%esp),%ecx;");
    asm("loc_65F5A64: mov 0x34(%esp),%edx;");
    asm("loc_65F5A68: mov 4(%esi),%eax;");
    asm("loc_65F5A6B: mov %ecx,0x20(%esp);");
    asm("loc_65F5A6F: mov %edx,0x24(%esp);");
    asm("loc_65F5A73: mov 4(%ebx,%eax),%ecx;");
    asm("loc_65F5A77: mov 0x10(%esp),%eax;");
    asm("loc_65F5A7B: mov %ecx,0x28(%esp);");
    asm("loc_65F5A7F: mov (%eax),%edx;");
    asm("loc_65F5A81: lea 0x20(%esp),%ecx;");
    asm("loc_65F5A85: push %ecx;");
    asm("loc_65F5A86: mov (%esi),%ecx;");
    asm("loc_65F5A88: mov 8(%ecx,%ebp),%ecx;");
    asm("loc_65F5A8C: push %ecx;");
    asm("loc_65F5A8D: push $_sub_65F59B0;");
    asm("loc_65F5A92: push %eax;");
    asm("loc_65F5A93: calll *0x14(%edx);");
    asm("loc_65F5A96: mov 8(%esi),%eax;");
    asm("loc_65F5A99: inc %edi;");
    asm("loc_65F5A9A: add $0x70,%ebx;");
    asm("loc_65F5A9D: add $0x34,%ebp;");
    asm("loc_65F5AA0: cmp %eax,%edi;");
    asm("loc_65F5AA2: jl loc_65F5A60;");
    asm("loc_65F5AA4: mov 0x1C(%esp),%ebx;");
    asm("loc_65F5AA8: mov 0x18(%esp),%eax;");
    asm("loc_65F5AAC: mov 0x14(%esp),%edx;");
    asm("loc_65F5AB0: mov 4(%ebx),%ecx;");
    asm("loc_65F5AB3: inc %eax;");
    asm("loc_65F5AB4: add $0x34,%edx;");
    asm("loc_65F5AB7: cmp %ecx,%eax;");
    asm("loc_65F5AB9: mov %eax,0x18(%esp);");
    asm("loc_65F5ABD: mov %edx,0x14(%esp);");
    asm("loc_65F5AC1: jl loc_65F5A48;");
    asm("loc_65F5AC3: pop %edi;");
    asm("loc_65F5AC4: pop %ebp;");
    asm("loc_65F5AC5: mov 8(%esp),%eax;");
    asm("loc_65F5AC9: test %eax,%eax;");
    asm("loc_65F5ACB: je loc_65F5AD3;");
    asm("loc_65F5ACD: mov (%eax),%edx;");
    asm("loc_65F5ACF: push %eax;");
    asm("loc_65F5AD0: calll *8(%edx);");
    asm("loc_65F5AD3: pop %esi;");
    asm("loc_65F5AD4: mov $1,%al;");
    asm("loc_65F5AD6: pop %ebx;");
    asm("loc_65F5AD7: add $0x1C,%esp;");
    asm("loc_65F5ADA: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5AE0() // _sub_65F5AE0
{
    __DEBUG_ASM(65F5AE0);
    // chunk 0x65F5AE0 _sub_65F5AE0
    asm("loc_65F5AE0: push %ebx;");
    asm("loc_65F5AE1: push %esi;");
    asm("loc_65F5AE2: mov 0xC(%esp),%esi;");
    asm("loc_65F5AE6: mov %ecx,%ebx;");
    asm("loc_65F5AE8: xor %ecx,%ecx;");
    asm("loc_65F5AEA: cmp %ecx,%esi;");
    asm("loc_65F5AEC: jne loc_65F5AF5;");
    asm("loc_65F5AEE: pop %esi;");
    asm("loc_65F5AEF: xor %al,%al;");
    asm("loc_65F5AF1: pop %ebx;");
    asm("loc_65F5AF2: ret $4;");
    asm("loc_65F5AF5: mov 4(%ebx),%eax;");
    asm("loc_65F5AF8: cmp %ecx,%eax;");
    asm("loc_65F5AFA: jg loc_65F5B03;");
    asm("loc_65F5AFC: pop %esi;");
    asm("loc_65F5AFD: xor %al,%al;");
    asm("loc_65F5AFF: pop %ebx;");
    asm("loc_65F5B00: ret $4;");
    asm("loc_65F5B03: mov %eax,(%esi);");
    asm("loc_65F5B05: movl $0xFFFFFFFF,4(%esi);");
    asm("loc_65F5B0C: mov %ecx,8(%esi);");
    asm("loc_65F5B0F: mov %ecx,0xC(%esi);");
    asm("loc_65F5B12: mov %ecx,0x10(%esi);");
    asm("loc_65F5B15: mov %ecx,0x14(%esi);");
    asm("loc_65F5B18: mov %ecx,0x1C(%esi);");
    asm("loc_65F5B1B: mov %ecx,0x18(%esi);");
    asm("loc_65F5B1E: mov %ecx,0x20(%esi);");
    asm("loc_65F5B21: cmp %ecx,4(%ebx);");
    asm("loc_65F5B24: mov %ecx,0xC(%esp);");
    asm("loc_65F5B28: jle loc_65F5BB3;");
    asm("loc_65F5B2E: push %ebp;");
    asm("loc_65F5B2F: push %edi;");
    asm("loc_65F5B30: xor %ebp,%ebp;");
    asm("loc_65F5B32: mov 8(%ebx),%eax;");
    asm("loc_65F5B35: mov 0x10(%eax,%ebp),%eax;");
    asm("loc_65F5B39: cmp 4(%esi),%eax;");
    asm("loc_65F5B3C: jae loc_65F5B41;");
    asm("loc_65F5B3E: mov %eax,4(%esi);");
    asm("loc_65F5B41: mov 8(%ebx),%edx;");
    asm("loc_65F5B44: mov (%edx,%ebp),%eax;");
    asm("loc_65F5B47: mov 8(%eax),%edx;");
    asm("loc_65F5B4A: add %edx,0x18(%esi);");
    asm("loc_65F5B4D: mov 8(%ebx),%eax;");
    asm("loc_65F5B50: mov 4(%eax,%ebp),%edi;");
    asm("loc_65F5B54: cmp %ecx,%edi;");
    asm("loc_65F5B56: je loc_65F5B9E;");
    asm("loc_65F5B58: mov (%edi),%edx;");
    asm("loc_65F5B5A: mov %edi,%ecx;");
    asm("loc_65F5B5C: calll *4(%edx);");
    asm("loc_65F5B5F: add %eax,8(%esi);");
    asm("loc_65F5B62: mov (%edi),%eax;");
    asm("loc_65F5B64: mov %edi,%ecx;");
    asm("loc_65F5B66: calll *(%eax);");
    asm("loc_65F5B68: mov 0xC(%esi),%ecx;");
    asm("loc_65F5B6B: mov 0x10(%esi),%edx;");
    asm("loc_65F5B6E: add %eax,%ecx;");
    asm("loc_65F5B70: mov 0x14(%esi),%eax;");
    asm("loc_65F5B73: mov %ecx,0xC(%esi);");
    asm("loc_65F5B76: mov 0x24(%edi),%ecx;");
    asm("loc_65F5B79: add %ecx,%edx;");
    asm("loc_65F5B7B: mov 0x1C(%esi),%ecx;");
    asm("loc_65F5B7E: mov %edx,0x10(%esi);");
    asm("loc_65F5B81: mov 0x40(%edi),%edx;");
    asm("loc_65F5B84: add %edx,%eax;");
    asm("loc_65F5B86: mov %eax,0x14(%esi);");
    asm("loc_65F5B89: mov 0x44(%edi),%eax;");
    asm("loc_65F5B8C: add %eax,%ecx;");
    asm("loc_65F5B8E: mov 0x20(%esi),%eax;");
    asm("loc_65F5B91: mov %ecx,0x1C(%esi);");
    asm("loc_65F5B94: mov 0x48(%edi),%ecx;");
    asm("loc_65F5B97: add %ecx,%eax;");
    asm("loc_65F5B99: mov %eax,0x20(%esi);");
    asm("loc_65F5B9C: xor %ecx,%ecx;");
    asm("loc_65F5B9E: mov 0x14(%esp),%eax;");
    asm("loc_65F5BA2: mov 4(%ebx),%edx;");
    asm("loc_65F5BA5: inc %eax;");
    asm("loc_65F5BA6: add $0x34,%ebp;");
    asm("loc_65F5BA9: cmp %edx,%eax;");
    asm("loc_65F5BAB: mov %eax,0x14(%esp);");
    asm("loc_65F5BAF: jl loc_65F5B32;");
    asm("loc_65F5BB1: pop %edi;");
    asm("loc_65F5BB2: pop %ebp;");
    asm("loc_65F5BB3: pop %esi;");
    asm("loc_65F5BB4: mov $1,%al;");
    asm("loc_65F5BB6: pop %ebx;");
    asm("loc_65F5BB7: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5BC0() // _sub_65F5BC0
{
    __DEBUG_ASM(65F5BC0);
    // chunk 0x65F5BC0 _sub_65F5BC0
    asm("loc_65F5BC0: sub $0x20,%esp;");
    asm("loc_65F5BC3: push %esi;");
    asm("loc_65F5BC4: mov %ecx,%esi;");
    asm("loc_65F5BC6: mov 4(%esi),%eax;");
    asm("loc_65F5BC9: test %eax,%eax;");
    asm("loc_65F5BCB: jg loc_65F5BD6;");
    asm("loc_65F5BCD: xor %al,%al;");
    asm("loc_65F5BCF: pop %esi;");
    asm("loc_65F5BD0: add $0x20,%esp;");
    asm("loc_65F5BD3: ret $8;");
    asm("loc_65F5BD6: push %edi;");
    asm("loc_65F5BD7: lea 0x10(%esp),%eax;");
    asm("loc_65F5BDB: push %eax;");
    asm("loc_65F5BDC: lea 0x10(%esp),%ecx;");
    asm("loc_65F5BE0: push %ecx;");
    asm("loc_65F5BE1: mov 8(%esi),%ecx;");
    asm("loc_65F5BE4: call _sub_65F68C0;");
    asm("loc_65F5BE9: mov 4(%esi),%eax;");
    asm("loc_65F5BEC: xor %edi,%edi;");
    asm("loc_65F5BEE: test %eax,%eax;");
    asm("loc_65F5BF0: jle loc_65F5C60;");
    asm("loc_65F5BF2: push %ebx;");
    asm("loc_65F5BF3: xor %ebx,%ebx;");
    asm("loc_65F5BF5: mov 8(%esi),%ecx;");
    asm("loc_65F5BF8: lea 0x20(%esp),%edx;");
    asm("loc_65F5BFC: push %edx;");
    asm("loc_65F5BFD: lea 0x10(%esp),%eax;");
    asm("loc_65F5C01: push %eax;");
    asm("loc_65F5C02: add %ebx,%ecx;");
    asm("loc_65F5C04: call _sub_65F68C0;");
    asm("loc_65F5C09: flds 0x20(%esp);");
    asm("loc_65F5C0D: fsubs 0x14(%esp);");
    asm("loc_65F5C11: flds 0x24(%esp);");
    asm("loc_65F5C15: fsubs 0x18(%esp);");
    asm("loc_65F5C19: flds 0x28(%esp);");
    asm("loc_65F5C1D: fsubs 0x1C(%esp);");
    asm("loc_65F5C21: fld %st(0);");
    asm("loc_65F5C23: fmul %st(1),%st;");
    asm("loc_65F5C25: fld %st(2);");
    asm("loc_65F5C27: fmul %st(3),%st;");
    asm("loc_65F5C29: faddp;");
    asm("loc_65F5C2B: fld %st(3);");
    asm("loc_65F5C2D: fmul %st(4),%st;");
    asm("loc_65F5C2F: faddp;");
    asm("loc_65F5C31: fsqrt;");
    asm("loc_65F5C33: fstp %st(3);");
    asm("loc_65F5C35: fstp %st(0);");
    asm("loc_65F5C37: fstp %st(0);");
    asm("loc_65F5C39: fadds 0xC(%esp);");
    asm("loc_65F5C3D: fsts 0xC(%esp);");
    asm("loc_65F5C41: fcomps 0x10(%esp);");
    asm("loc_65F5C45: fnstsw %ax;");
    asm("loc_65F5C47: test $0x41,%ah;");
    asm("loc_65F5C4A: jne loc_65F5C54;");
    asm("loc_65F5C4C: mov 0xC(%esp),%ecx;");
    asm("loc_65F5C50: mov %ecx,0x10(%esp);");
    asm("loc_65F5C54: mov 4(%esi),%eax;");
    asm("loc_65F5C57: inc %edi;");
    asm("loc_65F5C58: add $0x34,%ebx;");
    asm("loc_65F5C5B: cmp %eax,%edi;");
    asm("loc_65F5C5D: jl loc_65F5BF5;");
    asm("loc_65F5C5F: pop %ebx;");
    asm("loc_65F5C60: flds 0xC(%esp);");
    asm("loc_65F5C64: pop %edi;");
    asm("loc_65F5C65: fcomps _data_6601318;");
    asm("loc_65F5C6B: fnstsw %ax;");
    asm("loc_65F5C6D: test $0x41,%ah;");
    asm("loc_65F5C70: jne loc_65F5BCD;");
    asm("loc_65F5C76: mov 0xC(%esp),%ecx;");
    asm("loc_65F5C7A: flds 8(%esp);");
    asm("loc_65F5C7E: mov 0x2C(%esp),%edx;");
    asm("loc_65F5C82: mov %ecx,(%edx);");
    asm("loc_65F5C84: mov 0x10(%esp),%ecx;");
    asm("loc_65F5C88: mov %ecx,4(%edx);");
    asm("loc_65F5C8B: mov 0x14(%esp),%ecx;");
    asm("loc_65F5C8F: mov %ecx,8(%edx);");
    asm("loc_65F5C92: mov 0x28(%esp),%edx;");
    asm("loc_65F5C96: fstps (%edx);");
    asm("loc_65F5C98: mov $1,%al;");
    asm("loc_65F5C9A: pop %esi;");
    asm("loc_65F5C9B: add $0x20,%esp;");
    asm("loc_65F5C9E: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5CB0() // _sub_65F5CB0
{
    __DEBUG_ASM(65F5CB0);
    // chunk 0x65F5CB0 _sub_65F5CB0
    asm("loc_65F5CB0: push %ecx;");
    asm("loc_65F5CB1: push %ebx;");
    asm("loc_65F5CB2: mov 0x10(%esp),%ebx;");
    asm("loc_65F5CB6: push %ebp;");
    asm("loc_65F5CB7: push %esi;");
    asm("loc_65F5CB8: push %edi;");
    asm("loc_65F5CB9: mov %ecx,%edi;");
    asm("loc_65F5CBB: mov 4(%edi),%ecx;");
    asm("loc_65F5CBE: mov 4(%ecx),%ebp;");
    asm("loc_65F5CC1: mov 8(%edi),%edx;");
    asm("loc_65F5CC4: cmp %edx,%ebp;");
    asm("loc_65F5CC6: mov %ecx,%esi;");
    asm("loc_65F5CC8: mov $1,%al;");
    asm("loc_65F5CCA: je loc_65F5CEA;");
    asm("loc_65F5CCC: lea (%esp),%esp;");
    asm("loc_65F5CD0: mov (%ebx),%eax;");
    asm("loc_65F5CD2: cmp 0xC(%ebp),%eax;");
    asm("loc_65F5CD5: mov %ebp,%esi;");
    asm("loc_65F5CD7: setb %al;");
    asm("loc_65F5CDA: test %al,%al;");
    asm("loc_65F5CDC: je loc_65F5CE3;");
    asm("loc_65F5CDE: mov (%ebp),%ebp;");
    asm("loc_65F5CE1: jmp loc_65F5CE6;");
    asm("loc_65F5CE3: mov 8(%ebp),%ebp;");
    asm("loc_65F5CE6: cmp %edx,%ebp;");
    asm("loc_65F5CE8: jne loc_65F5CD0;");
    asm("loc_65F5CEA: mov 0xC(%edi),%dl;");
    asm("loc_65F5CED: test %dl,%dl;");
    asm("loc_65F5CEF: je loc_65F5E61;");
    asm("loc_65F5CF5: push $0;");
    asm("loc_65F5CF7: push %esi;");
    asm("loc_65F5CF8: mov %edi,%ecx;");
    asm("loc_65F5CFA: call _sub_65F65A0;");
    asm("loc_65F5CFF: mov 8(%edi),%ecx;");
    asm("loc_65F5D02: mov %ecx,(%eax);");
    asm("loc_65F5D04: mov 8(%edi),%edx;");
    asm("loc_65F5D07: mov %eax,0x1C(%esp);");
    asm("loc_65F5D0B: mov %edx,8(%eax);");
    asm("loc_65F5D0E: add $0xC,%eax;");
    asm("loc_65F5D11: push %ebx;");
    asm("loc_65F5D12: push %eax;");
    asm("loc_65F5D13: call _sub_65F6670;");
    asm("loc_65F5D18: mov 0x10(%edi),%ecx;");
    asm("loc_65F5D1B: mov 4(%edi),%eax;");
    asm("loc_65F5D1E: add $8,%esp;");
    asm("loc_65F5D21: inc %ecx;");
    asm("loc_65F5D22: cmp %eax,%esi;");
    asm("loc_65F5D24: mov %ecx,0x10(%edi);");
    asm("loc_65F5D27: je loc_65F5D49;");
    asm("loc_65F5D29: cmp 8(%edi),%ebp;");
    asm("loc_65F5D2C: jne loc_65F5D49;");
    asm("loc_65F5D2E: mov (%ebx),%eax;");
    asm("loc_65F5D30: cmp 0xC(%esi),%eax;");
    asm("loc_65F5D33: jb loc_65F5D49;");
    asm("loc_65F5D35: mov 0x1C(%esp),%ebx;");
    asm("loc_65F5D39: mov %ebx,8(%esi);");
    asm("loc_65F5D3C: mov 4(%edi),%eax;");
    asm("loc_65F5D3F: cmp 8(%eax),%esi;");
    asm("loc_65F5D42: jne loc_65F5D6F;");
    asm("loc_65F5D44: mov %ebx,8(%eax);");
    asm("loc_65F5D47: jmp loc_65F5D6F;");
    asm("loc_65F5D49: mov 0x1C(%esp),%ecx;");
    asm("loc_65F5D4D: mov %ecx,(%esi);");
    asm("loc_65F5D4F: mov 4(%edi),%eax;");
    asm("loc_65F5D52: cmp %eax,%esi;");
    asm("loc_65F5D54: jne loc_65F5D61;");
    asm("loc_65F5D56: mov %ecx,4(%eax);");
    asm("loc_65F5D59: mov 4(%edi),%edx;");
    asm("loc_65F5D5C: mov %ecx,8(%edx);");
    asm("loc_65F5D5F: jmp loc_65F5D6B;");
    asm("loc_65F5D61: cmp (%eax),%esi;");
    asm("loc_65F5D63: jne loc_65F5D6B;");
    asm("loc_65F5D65: mov 0x1C(%esp),%ecx;");
    asm("loc_65F5D69: mov %ecx,(%eax);");
    asm("loc_65F5D6B: mov 0x1C(%esp),%ebx;");
    asm("loc_65F5D6F: mov 4(%edi),%edx;");
    asm("loc_65F5D72: cmp 4(%edx),%ebx;");
    asm("loc_65F5D75: mov %ebx,%esi;");
    asm("loc_65F5D77: je loc_65F5E45;");
    asm("loc_65F5D7D: lea (%ecx),%ecx;");
    asm("loc_65F5D80: mov 4(%esi),%eax;");
    asm("loc_65F5D83: mov 0x18(%eax),%cl;");
    asm("loc_65F5D86: test %cl,%cl;");
    asm("loc_65F5D88: jne loc_65F5E45;");
    asm("loc_65F5D8E: mov 4(%eax),%edx;");
    asm("loc_65F5D91: mov (%edx),%ecx;");
    asm("loc_65F5D93: cmp %ecx,%eax;");
    asm("loc_65F5D95: jne loc_65F5DEB;");
    asm("loc_65F5D97: mov 8(%edx),%ecx;");
    asm("loc_65F5D9A: mov 0x18(%ecx),%dl;");
    asm("loc_65F5D9D: test %dl,%dl;");
    asm("loc_65F5D9F: jne loc_65F5DBB;");
    asm("loc_65F5DA1: movb $1,0x18(%eax);");
    asm("loc_65F5DA5: movb $1,0x18(%ecx);");
    asm("loc_65F5DA9: mov 4(%esi),%eax;");
    asm("loc_65F5DAC: mov 4(%eax),%ecx;");
    asm("loc_65F5DAF: movb $0,0x18(%ecx);");
    asm("loc_65F5DB3: mov 4(%esi),%edx;");
    asm("loc_65F5DB6: mov 4(%edx),%esi;");
    asm("loc_65F5DB9: jmp loc_65F5E39;");
    asm("loc_65F5DBB: cmp 8(%eax),%esi;");
    asm("loc_65F5DBE: jne loc_65F5DCA;");
    asm("loc_65F5DC0: mov %eax,%esi;");
    asm("loc_65F5DC2: push %esi;");
    asm("loc_65F5DC3: mov %edi,%ecx;");
    asm("loc_65F5DC5: call _sub_65F3350;");
    asm("loc_65F5DCA: mov 4(%esi),%eax;");
    asm("loc_65F5DCD: movb $1,0x18(%eax);");
    asm("loc_65F5DD1: mov 4(%esi),%ecx;");
    asm("loc_65F5DD4: mov 4(%ecx),%edx;");
    asm("loc_65F5DD7: movb $0,0x18(%edx);");
    asm("loc_65F5DDB: mov 4(%esi),%eax;");
    asm("loc_65F5DDE: mov 4(%eax),%ecx;");
    asm("loc_65F5DE1: push %ecx;");
    asm("loc_65F5DE2: mov %edi,%ecx;");
    asm("loc_65F5DE4: call _sub_65F33C0;");
    asm("loc_65F5DE9: jmp loc_65F5E39;");
    asm("loc_65F5DEB: mov 0x18(%ecx),%dl;");
    asm("loc_65F5DEE: test %dl,%dl;");
    asm("loc_65F5DF0: jne loc_65F5E0C;");
    asm("loc_65F5DF2: movb $1,0x18(%eax);");
    asm("loc_65F5DF6: movb $1,0x18(%ecx);");
    asm("loc_65F5DFA: mov 4(%esi),%edx;");
    asm("loc_65F5DFD: mov 4(%edx),%eax;");
    asm("loc_65F5E00: movb $0,0x18(%eax);");
    asm("loc_65F5E04: mov 4(%esi),%ecx;");
    asm("loc_65F5E07: mov 4(%ecx),%esi;");
    asm("loc_65F5E0A: jmp loc_65F5E39;");
    asm("loc_65F5E0C: cmp (%eax),%esi;");
    asm("loc_65F5E0E: jne loc_65F5E1A;");
    asm("loc_65F5E10: mov %eax,%esi;");
    asm("loc_65F5E12: push %esi;");
    asm("loc_65F5E13: mov %edi,%ecx;");
    asm("loc_65F5E15: call _sub_65F33C0;");
    asm("loc_65F5E1A: mov 4(%esi),%edx;");
    asm("loc_65F5E1D: movb $1,0x18(%edx);");
    asm("loc_65F5E21: mov 4(%esi),%eax;");
    asm("loc_65F5E24: mov 4(%eax),%ecx;");
    asm("loc_65F5E27: movb $0,0x18(%ecx);");
    asm("loc_65F5E2B: mov 4(%esi),%edx;");
    asm("loc_65F5E2E: mov 4(%edx),%eax;");
    asm("loc_65F5E31: push %eax;");
    asm("loc_65F5E32: mov %edi,%ecx;");
    asm("loc_65F5E34: call _sub_65F3350;");
    asm("loc_65F5E39: mov 4(%edi),%ecx;");
    asm("loc_65F5E3C: cmp 4(%ecx),%esi;");
    asm("loc_65F5E3F: jne loc_65F5D80;");
    asm("loc_65F5E45: mov 4(%edi),%edx;");
    asm("loc_65F5E48: mov 4(%edx),%eax;");
    asm("loc_65F5E4B: pop %edi;");
    asm("loc_65F5E4C: movb $1,0x18(%eax);");
    asm("loc_65F5E50: mov 0x14(%esp),%eax;");
    asm("loc_65F5E54: pop %esi;");
    asm("loc_65F5E55: pop %ebp;");
    asm("loc_65F5E56: mov %ebx,(%eax);");
    asm("loc_65F5E58: movb $1,4(%eax);");
    asm("loc_65F5E5C: pop %ebx;");
    asm("loc_65F5E5D: pop %ecx;");
    asm("loc_65F5E5E: ret $8;");
    asm("loc_65F5E61: test %al,%al;");
    asm("loc_65F5E63: mov %esi,%edx;");
    asm("loc_65F5E65: mov %edx,0x10(%esp);");
    asm("loc_65F5E69: je loc_65F5E7C;");
    asm("loc_65F5E6B: cmp (%ecx),%esi;");
    asm("loc_65F5E6D: je loc_65F5E83;");
    asm("loc_65F5E6F: lea 0x10(%esp),%ecx;");
    asm("loc_65F5E73: call _sub_65F65C0;");
    asm("loc_65F5E78: mov 0x10(%esp),%edx;");
    asm("loc_65F5E7C: mov 0xC(%edx),%eax;");
    asm("loc_65F5E7F: cmp (%ebx),%eax;");
    asm("loc_65F5E81: jae loc_65F5EA6;");
    asm("loc_65F5E83: push %ebx;");
    asm("loc_65F5E84: push %esi;");
    asm("loc_65F5E85: push %ebp;");
    asm("loc_65F5E86: lea 0x28(%esp),%ecx;");
    asm("loc_65F5E8A: push %ecx;");
    asm("loc_65F5E8B: mov %edi,%ecx;");
    asm("loc_65F5E8D: call _sub_65F6350;");
    asm("loc_65F5E92: mov (%eax),%edx;");
    asm("loc_65F5E94: mov 0x18(%esp),%eax;");
    asm("loc_65F5E98: pop %edi;");
    asm("loc_65F5E99: pop %esi;");
    asm("loc_65F5E9A: pop %ebp;");
    asm("loc_65F5E9B: movb $1,4(%eax);");
    asm("loc_65F5E9F: mov %edx,(%eax);");
    asm("loc_65F5EA1: pop %ebx;");
    asm("loc_65F5EA2: pop %ecx;");
    asm("loc_65F5EA3: ret $8;");
    asm("loc_65F5EA6: mov 0x18(%esp),%eax;");
    asm("loc_65F5EAA: pop %edi;");
    asm("loc_65F5EAB: pop %esi;");
    asm("loc_65F5EAC: pop %ebp;");
    asm("loc_65F5EAD: movb $0,4(%eax);");
    asm("loc_65F5EB1: mov %edx,(%eax);");
    asm("loc_65F5EB3: pop %ebx;");
    asm("loc_65F5EB4: pop %ecx;");
    asm("loc_65F5EB5: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F5EC0() // _sub_65F5EC0
{
    __DEBUG_ASM(65F5EC0);
    // chunk 0x65F5EC0 _sub_65F5EC0
    asm("loc_65F5EC0: push %ecx;");
    asm("loc_65F5EC1: push %ebx;");
    asm("loc_65F5EC2: push %ebp;");
    asm("loc_65F5EC3: push %esi;");
    asm("loc_65F5EC4: mov 0x18(%esp),%esi;");
    asm("loc_65F5EC8: push %edi;");
    asm("loc_65F5EC9: mov %ecx,%edi;");
    asm("loc_65F5ECB: lea 0x1C(%esp),%ecx;");
    asm("loc_65F5ECF: call _sub_65F6620;");
    asm("loc_65F5ED4: mov (%esi),%edx;");
    asm("loc_65F5ED6: mov 8(%edi),%eax;");
    asm("loc_65F5ED9: cmp %eax,%edx;");
    asm("loc_65F5EDB: mov %esi,0x10(%esp);");
    asm("loc_65F5EDF: jne loc_65F5F02;");
    asm("loc_65F5EE1: mov 8(%esi),%eax;");
    asm("loc_65F5EE4: mov 0x10(%esp),%ecx;");
    asm("loc_65F5EE8: mov 4(%ecx),%edx;");
    asm("loc_65F5EEB: mov %edx,4(%eax);");
    asm("loc_65F5EEE: mov 4(%edi),%ecx;");
    asm("loc_65F5EF1: cmp %esi,4(%ecx);");
    asm("loc_65F5EF4: jne loc_65F5F87;");
    asm("loc_65F5EFA: mov %eax,4(%ecx);");
    asm("loc_65F5EFD: jmp loc_65F5F95;");
    asm("loc_65F5F02: mov 8(%esi),%ecx;");
    asm("loc_65F5F05: cmp %eax,%ecx;");
    asm("loc_65F5F07: jne loc_65F5F0D;");
    asm("loc_65F5F09: mov %edx,%eax;");
    asm("loc_65F5F0B: jmp loc_65F5EE4;");
    asm("loc_65F5F0D: mov (%ecx),%eax;");
    asm("loc_65F5F0F: mov 0x19(%eax),%bl;");
    asm("loc_65F5F12: test %bl,%bl;");
    asm("loc_65F5F14: jne loc_65F5F21;");
    asm("loc_65F5F16: mov %eax,%ecx;");
    asm("loc_65F5F18: mov (%ecx),%eax;");
    asm("loc_65F5F1A: mov 0x19(%eax),%bl;");
    asm("loc_65F5F1D: test %bl,%bl;");
    asm("loc_65F5F1F: je loc_65F5F16;");
    asm("loc_65F5F21: cmp %esi,%ecx;");
    asm("loc_65F5F23: mov 8(%ecx),%eax;");
    asm("loc_65F5F26: mov %ecx,0x10(%esp);");
    asm("loc_65F5F2A: je loc_65F5EE4;");
    asm("loc_65F5F2C: mov %ecx,4(%edx);");
    asm("loc_65F5F2F: mov (%esi),%edx;");
    asm("loc_65F5F31: mov %edx,(%ecx);");
    asm("loc_65F5F33: cmp 8(%esi),%ecx;");
    asm("loc_65F5F36: jne loc_65F5F3D;");
    asm("loc_65F5F38: mov %ecx,4(%eax);");
    asm("loc_65F5F3B: jmp loc_65F5F54;");
    asm("loc_65F5F3D: mov 4(%ecx),%edx;");
    asm("loc_65F5F40: mov %edx,4(%eax);");
    asm("loc_65F5F43: mov 4(%ecx),%edx;");
    asm("loc_65F5F46: mov %eax,(%edx);");
    asm("loc_65F5F48: mov 8(%esi),%edx;");
    asm("loc_65F5F4B: mov %edx,8(%ecx);");
    asm("loc_65F5F4E: mov 8(%esi),%edx;");
    asm("loc_65F5F51: mov %ecx,4(%edx);");
    asm("loc_65F5F54: mov 4(%edi),%edx;");
    asm("loc_65F5F57: cmp %esi,4(%edx);");
    asm("loc_65F5F5A: jne loc_65F5F61;");
    asm("loc_65F5F5C: mov %ecx,4(%edx);");
    asm("loc_65F5F5F: jmp loc_65F5F6F;");
    asm("loc_65F5F61: mov 4(%esi),%edx;");
    asm("loc_65F5F64: cmp %esi,(%edx);");
    asm("loc_65F5F66: jne loc_65F5F6C;");
    asm("loc_65F5F68: mov %ecx,(%edx);");
    asm("loc_65F5F6A: jmp loc_65F5F6F;");
    asm("loc_65F5F6C: mov %ecx,8(%edx);");
    asm("loc_65F5F6F: mov 4(%esi),%edx;");
    asm("loc_65F5F72: mov %edx,4(%ecx);");
    asm("loc_65F5F75: mov 0x18(%esi),%bl;");
    asm("loc_65F5F78: mov 0x18(%ecx),%dl;");
    asm("loc_65F5F7B: mov %bl,0x18(%ecx);");
    asm("loc_65F5F7E: mov %dl,0x18(%esi);");
    asm("loc_65F5F81: mov %esi,0x10(%esp);");
    asm("loc_65F5F85: jmp loc_65F5FF2;");
    asm("loc_65F5F87: mov 4(%esi),%ecx;");
    asm("loc_65F5F8A: cmp %esi,(%ecx);");
    asm("loc_65F5F8C: jne loc_65F5F92;");
    asm("loc_65F5F8E: mov %eax,(%ecx);");
    asm("loc_65F5F90: jmp loc_65F5F95;");
    asm("loc_65F5F92: mov %eax,8(%ecx);");
    asm("loc_65F5F95: mov 4(%edi),%ebp;");
    asm("loc_65F5F98: cmp %esi,(%ebp);");
    asm("loc_65F5F9B: jne loc_65F5FC3;");
    asm("loc_65F5F9D: mov 8(%esi),%ecx;");
    asm("loc_65F5FA0: cmp 8(%edi),%ecx;");
    asm("loc_65F5FA3: jne loc_65F5FAA;");
    asm("loc_65F5FA5: mov 4(%esi),%edx;");
    asm("loc_65F5FA8: jmp loc_65F5FC0;");
    asm("loc_65F5FAA: mov (%eax),%ecx;");
    asm("loc_65F5FAC: mov 0x19(%ecx),%bl;");
    asm("loc_65F5FAF: test %bl,%bl;");
    asm("loc_65F5FB1: mov %eax,%edx;");
    asm("loc_65F5FB3: jne loc_65F5FC0;");
    asm("loc_65F5FB5: mov %ecx,%edx;");
    asm("loc_65F5FB7: mov (%edx),%ecx;");
    asm("loc_65F5FB9: mov 0x19(%ecx),%bl;");
    asm("loc_65F5FBC: test %bl,%bl;");
    asm("loc_65F5FBE: je loc_65F5FB5;");
    asm("loc_65F5FC0: mov %edx,(%ebp);");
    asm("loc_65F5FC3: mov 4(%edi),%ebp;");
    asm("loc_65F5FC6: cmp %esi,8(%ebp);");
    asm("loc_65F5FC9: jne loc_65F5FF2;");
    asm("loc_65F5FCB: mov (%esi),%ecx;");
    asm("loc_65F5FCD: cmp 8(%edi),%ecx;");
    asm("loc_65F5FD0: jne loc_65F5FD7;");
    asm("loc_65F5FD2: mov 4(%esi),%edx;");
    asm("loc_65F5FD5: jmp loc_65F5FEF;");
    asm("loc_65F5FD7: mov 8(%eax),%ecx;");
    asm("loc_65F5FDA: mov 0x19(%ecx),%bl;");
    asm("loc_65F5FDD: test %bl,%bl;");
    asm("loc_65F5FDF: mov %eax,%edx;");
    asm("loc_65F5FE1: jne loc_65F5FEF;");
    asm("loc_65F5FE3: mov %ecx,%edx;");
    asm("loc_65F5FE5: mov 8(%edx),%ecx;");
    asm("loc_65F5FE8: mov 0x19(%ecx),%bl;");
    asm("loc_65F5FEB: test %bl,%bl;");
    asm("loc_65F5FED: je loc_65F5FE3;");
    asm("loc_65F5FEF: mov %edx,8(%ebp);");
    asm("loc_65F5FF2: mov 0x10(%esp),%ecx;");
    asm("loc_65F5FF6: mov 0x18(%ecx),%dl;");
    asm("loc_65F5FF9: mov $1,%bl;");
    asm("loc_65F5FFB: cmp %bl,%dl;");
    asm("loc_65F5FFD: jne loc_65F626A;");
    asm("loc_65F6003: mov 4(%edi),%edx;");
    asm("loc_65F6006: cmp 4(%edx),%eax;");
    asm("loc_65F6009: je loc_65F6267;");
    asm("loc_65F600F: nop;");
    asm("loc_65F6010: cmp %bl,0x18(%eax);");
    asm("loc_65F6013: jne loc_65F6267;");
    asm("loc_65F6019: mov 4(%eax),%edx;");
    asm("loc_65F601C: mov (%edx),%ecx;");
    asm("loc_65F601E: cmp %ecx,%eax;");
    asm("loc_65F6020: jne loc_65F60CF;");
    asm("loc_65F6026: mov 8(%edx),%ecx;");
    asm("loc_65F6029: mov 0x18(%ecx),%dl;");
    asm("loc_65F602C: test %dl,%dl;");
    asm("loc_65F602E: jne loc_65F607B;");
    asm("loc_65F6030: mov %bl,0x18(%ecx);");
    asm("loc_65F6033: mov 4(%eax),%ecx;");
    asm("loc_65F6036: movb $0,0x18(%ecx);");
    asm("loc_65F603A: mov 4(%eax),%ecx;");
    asm("loc_65F603D: mov 8(%ecx),%edx;");
    asm("loc_65F6040: mov (%edx),%esi;");
    asm("loc_65F6042: mov %esi,8(%ecx);");
    asm("loc_65F6045: mov (%edx),%esi;");
    asm("loc_65F6047: cmp 8(%edi),%esi;");
    asm("loc_65F604A: je loc_65F604F;");
    asm("loc_65F604C: mov %ecx,4(%esi);");
    asm("loc_65F604F: mov 4(%ecx),%esi;");
    asm("loc_65F6052: mov %esi,4(%edx);");
    asm("loc_65F6055: mov 4(%edi),%esi;");
    asm("loc_65F6058: cmp 4(%esi),%ecx;");
    asm("loc_65F605B: jne loc_65F6062;");
    asm("loc_65F605D: mov %edx,4(%esi);");
    asm("loc_65F6060: jmp loc_65F6070;");
    asm("loc_65F6062: mov 4(%ecx),%esi;");
    asm("loc_65F6065: cmp (%esi),%ecx;");
    asm("loc_65F6067: jne loc_65F606D;");
    asm("loc_65F6069: mov %edx,(%esi);");
    asm("loc_65F606B: jmp loc_65F6070;");
    asm("loc_65F606D: mov %edx,8(%esi);");
    asm("loc_65F6070: mov %ecx,(%edx);");
    asm("loc_65F6072: mov %edx,4(%ecx);");
    asm("loc_65F6075: mov 4(%eax),%edx;");
    asm("loc_65F6078: mov 8(%edx),%ecx;");
    asm("loc_65F607B: mov (%ecx),%edx;");
    asm("loc_65F607D: cmp %bl,0x18(%edx);");
    asm("loc_65F6080: jne loc_65F608E;");
    asm("loc_65F6082: mov 8(%ecx),%edx;");
    asm("loc_65F6085: cmp %bl,0x18(%edx);");
    asm("loc_65F6088: je loc_65F6139;");
    asm("loc_65F608E: mov 8(%ecx),%edx;");
    asm("loc_65F6091: cmp %bl,0x18(%edx);");
    asm("loc_65F6094: jne loc_65F616C;");
    asm("loc_65F609A: mov (%ecx),%edx;");
    asm("loc_65F609C: mov %bl,0x18(%edx);");
    asm("loc_65F609F: mov (%ecx),%edx;");
    asm("loc_65F60A1: movb $0,0x18(%ecx);");
    asm("loc_65F60A5: mov 8(%edx),%esi;");
    asm("loc_65F60A8: mov %esi,(%ecx);");
    asm("loc_65F60AA: mov 8(%edx),%esi;");
    asm("loc_65F60AD: cmp 8(%edi),%esi;");
    asm("loc_65F60B0: je loc_65F60B5;");
    asm("loc_65F60B2: mov %ecx,4(%esi);");
    asm("loc_65F60B5: mov 4(%ecx),%esi;");
    asm("loc_65F60B8: mov %esi,4(%edx);");
    asm("loc_65F60BB: mov 4(%edi),%esi;");
    asm("loc_65F60BE: cmp 4(%esi),%ecx;");
    asm("loc_65F60C1: jne loc_65F6151;");
    asm("loc_65F60C7: mov %edx,4(%esi);");
    asm("loc_65F60CA: jmp loc_65F6160;");
    asm("loc_65F60CF: mov 0x18(%ecx),%dl;");
    asm("loc_65F60D2: test %dl,%dl;");
    asm("loc_65F60D4: jne loc_65F6122;");
    asm("loc_65F60D6: mov %bl,0x18(%ecx);");
    asm("loc_65F60D9: mov 4(%eax),%ecx;");
    asm("loc_65F60DC: movb $0,0x18(%ecx);");
    asm("loc_65F60E0: mov 4(%eax),%ecx;");
    asm("loc_65F60E3: mov (%ecx),%edx;");
    asm("loc_65F60E5: mov 8(%edx),%esi;");
    asm("loc_65F60E8: mov %esi,(%ecx);");
    asm("loc_65F60EA: mov 8(%edx),%esi;");
    asm("loc_65F60ED: cmp 8(%edi),%esi;");
    asm("loc_65F60F0: je loc_65F60F5;");
    asm("loc_65F60F2: mov %ecx,4(%esi);");
    asm("loc_65F60F5: mov 4(%ecx),%esi;");
    asm("loc_65F60F8: mov %esi,4(%edx);");
    asm("loc_65F60FB: mov 4(%edi),%esi;");
    asm("loc_65F60FE: cmp 4(%esi),%ecx;");
    asm("loc_65F6101: jne loc_65F6108;");
    asm("loc_65F6103: mov %edx,4(%esi);");
    asm("loc_65F6106: jmp loc_65F6117;");
    asm("loc_65F6108: mov 4(%ecx),%esi;");
    asm("loc_65F610B: cmp 8(%esi),%ecx;");
    asm("loc_65F610E: jne loc_65F6115;");
    asm("loc_65F6110: mov %edx,8(%esi);");
    asm("loc_65F6113: jmp loc_65F6117;");
    asm("loc_65F6115: mov %edx,(%esi);");
    asm("loc_65F6117: mov %ecx,8(%edx);");
    asm("loc_65F611A: mov %edx,4(%ecx);");
    asm("loc_65F611D: mov 4(%eax),%edx;");
    asm("loc_65F6120: mov (%edx),%ecx;");
    asm("loc_65F6122: mov 8(%ecx),%edx;");
    asm("loc_65F6125: cmp %bl,0x18(%edx);");
    asm("loc_65F6128: jne loc_65F61C8;");
    asm("loc_65F612E: mov (%ecx),%edx;");
    asm("loc_65F6130: cmp %bl,0x18(%edx);");
    asm("loc_65F6133: jne loc_65F61C8;");
    asm("loc_65F6139: movb $0,0x18(%ecx);");
    asm("loc_65F613D: mov 4(%edi),%ecx;");
    asm("loc_65F6140: mov 4(%eax),%eax;");
    asm("loc_65F6143: cmp 4(%ecx),%eax;");
    asm("loc_65F6146: jne loc_65F6010;");
    asm("loc_65F614C: jmp loc_65F6267;");
    asm("loc_65F6151: mov 4(%ecx),%esi;");
    asm("loc_65F6154: cmp 8(%esi),%ecx;");
    asm("loc_65F6157: jne loc_65F615E;");
    asm("loc_65F6159: mov %edx,8(%esi);");
    asm("loc_65F615C: jmp loc_65F6160;");
    asm("loc_65F615E: mov %edx,(%esi);");
    asm("loc_65F6160: mov %ecx,8(%edx);");
    asm("loc_65F6163: mov %edx,4(%ecx);");
    asm("loc_65F6166: mov 4(%eax),%ecx;");
    asm("loc_65F6169: mov 8(%ecx),%ecx;");
    asm("loc_65F616C: mov 4(%eax),%edx;");
    asm("loc_65F616F: mov 0x18(%edx),%dl;");
    asm("loc_65F6172: mov %dl,0x18(%ecx);");
    asm("loc_65F6175: mov 4(%eax),%edx;");
    asm("loc_65F6178: mov %bl,0x18(%edx);");
    asm("loc_65F617B: mov 8(%ecx),%ecx;");
    asm("loc_65F617E: mov %bl,0x18(%ecx);");
    asm("loc_65F6181: mov 4(%eax),%ecx;");
    asm("loc_65F6184: mov 8(%ecx),%edx;");
    asm("loc_65F6187: mov (%edx),%esi;");
    asm("loc_65F6189: mov %esi,8(%ecx);");
    asm("loc_65F618C: mov (%edx),%esi;");
    asm("loc_65F618E: cmp 8(%edi),%esi;");
    asm("loc_65F6191: je loc_65F6196;");
    asm("loc_65F6193: mov %ecx,4(%esi);");
    asm("loc_65F6196: mov 4(%ecx),%esi;");
    asm("loc_65F6199: mov %esi,4(%edx);");
    asm("loc_65F619C: mov 4(%edi),%esi;");
    asm("loc_65F619F: cmp 4(%esi),%ecx;");
    asm("loc_65F61A2: jne loc_65F61AE;");
    asm("loc_65F61A4: mov %edx,4(%esi);");
    asm("loc_65F61A7: mov %ecx,(%edx);");
    asm("loc_65F61A9: jmp loc_65F6264;");
    asm("loc_65F61AE: mov 4(%ecx),%esi;");
    asm("loc_65F61B1: cmp (%esi),%ecx;");
    asm("loc_65F61B3: jne loc_65F61BE;");
    asm("loc_65F61B5: mov %edx,(%esi);");
    asm("loc_65F61B7: mov %ecx,(%edx);");
    asm("loc_65F61B9: jmp loc_65F6264;");
    asm("loc_65F61BE: mov %edx,8(%esi);");
    asm("loc_65F61C1: mov %ecx,(%edx);");
    asm("loc_65F61C3: jmp loc_65F6264;");
    asm("loc_65F61C8: mov (%ecx),%edx;");
    asm("loc_65F61CA: cmp %bl,0x18(%edx);");
    asm("loc_65F61CD: jne loc_65F6216;");
    asm("loc_65F61CF: mov 8(%ecx),%edx;");
    asm("loc_65F61D2: mov %bl,0x18(%edx);");
    asm("loc_65F61D5: mov 8(%ecx),%edx;");
    asm("loc_65F61D8: movb $0,0x18(%ecx);");
    asm("loc_65F61DC: mov (%edx),%esi;");
    asm("loc_65F61DE: mov %esi,8(%ecx);");
    asm("loc_65F61E1: mov (%edx),%esi;");
    asm("loc_65F61E3: cmp 8(%edi),%esi;");
    asm("loc_65F61E6: je loc_65F61EB;");
    asm("loc_65F61E8: mov %ecx,4(%esi);");
    asm("loc_65F61EB: mov 4(%ecx),%esi;");
    asm("loc_65F61EE: mov %esi,4(%edx);");
    asm("loc_65F61F1: mov 4(%edi),%esi;");
    asm("loc_65F61F4: cmp 4(%esi),%ecx;");
    asm("loc_65F61F7: jne loc_65F61FE;");
    asm("loc_65F61F9: mov %edx,4(%esi);");
    asm("loc_65F61FC: jmp loc_65F620C;");
    asm("loc_65F61FE: mov 4(%ecx),%esi;");
    asm("loc_65F6201: cmp (%esi),%ecx;");
    asm("loc_65F6203: jne loc_65F6209;");
    asm("loc_65F6205: mov %edx,(%esi);");
    asm("loc_65F6207: jmp loc_65F620C;");
    asm("loc_65F6209: mov %edx,8(%esi);");
    asm("loc_65F620C: mov %ecx,(%edx);");
    asm("loc_65F620E: mov %edx,4(%ecx);");
    asm("loc_65F6211: mov 4(%eax),%ecx;");
    asm("loc_65F6214: mov (%ecx),%ecx;");
    asm("loc_65F6216: mov 4(%eax),%edx;");
    asm("loc_65F6219: mov 0x18(%edx),%dl;");
    asm("loc_65F621C: mov %dl,0x18(%ecx);");
    asm("loc_65F621F: mov 4(%eax),%edx;");
    asm("loc_65F6222: mov %bl,0x18(%edx);");
    asm("loc_65F6225: mov (%ecx),%ecx;");
    asm("loc_65F6227: mov %bl,0x18(%ecx);");
    asm("loc_65F622A: mov 4(%eax),%ecx;");
    asm("loc_65F622D: mov (%ecx),%edx;");
    asm("loc_65F622F: mov 8(%edx),%esi;");
    asm("loc_65F6232: mov %esi,(%ecx);");
    asm("loc_65F6234: mov 8(%edx),%esi;");
    asm("loc_65F6237: cmp 8(%edi),%esi;");
    asm("loc_65F623A: je loc_65F623F;");
    asm("loc_65F623C: mov %ecx,4(%esi);");
    asm("loc_65F623F: mov 4(%ecx),%esi;");
    asm("loc_65F6242: mov %esi,4(%edx);");
    asm("loc_65F6245: mov 4(%edi),%esi;");
    asm("loc_65F6248: cmp 4(%esi),%ecx;");
    asm("loc_65F624B: jne loc_65F6252;");
    asm("loc_65F624D: mov %edx,4(%esi);");
    asm("loc_65F6250: jmp loc_65F6261;");
    asm("loc_65F6252: mov 4(%ecx),%esi;");
    asm("loc_65F6255: cmp 8(%esi),%ecx;");
    asm("loc_65F6258: jne loc_65F625F;");
    asm("loc_65F625A: mov %edx,8(%esi);");
    asm("loc_65F625D: jmp loc_65F6261;");
    asm("loc_65F625F: mov %edx,(%esi);");
    asm("loc_65F6261: mov %ecx,8(%edx);");
    asm("loc_65F6264: mov %edx,4(%ecx);");
    asm("loc_65F6267: mov %bl,0x18(%eax);");
    asm("loc_65F626A: mov 0x10(%esp),%edx;");
    asm("loc_65F626E: push %edx;");
    asm("loc_65F626F: call _sub_6600BB0;");
    asm("loc_65F6274: mov 0x10(%edi),%eax;");
    asm("loc_65F6277: mov 0x20(%esp),%ecx;");
    asm("loc_65F627B: add $4,%esp;");
    asm("loc_65F627E: dec %eax;");
    asm("loc_65F627F: mov %eax,0x10(%edi);");
    asm("loc_65F6282: mov 0x18(%esp),%eax;");
    asm("loc_65F6286: pop %edi;");
    asm("loc_65F6287: pop %esi;");
    asm("loc_65F6288: pop %ebp;");
    asm("loc_65F6289: mov %ecx,(%eax);");
    asm("loc_65F628B: pop %ebx;");
    asm("loc_65F628C: pop %ecx;");
    asm("loc_65F628D: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6290() // _sub_65F6290
{
    __DEBUG_ASM(65F6290);
    // chunk 0x65F6290 _sub_65F6290
    asm("loc_65F6290: push %ebx;");
    asm("loc_65F6291: push %esi;");
    asm("loc_65F6292: mov %ecx,%ebx;");
    asm("loc_65F6294: mov 8(%ebx),%eax;");
    asm("loc_65F6297: push %edi;");
    asm("loc_65F6298: mov 0x10(%esp),%edi;");
    asm("loc_65F629C: cmp %eax,%edi;");
    asm("loc_65F629E: mov %edi,%esi;");
    asm("loc_65F62A0: je loc_65F62C1;");
    asm("loc_65F62A2: mov 8(%esi),%eax;");
    asm("loc_65F62A5: push %eax;");
    asm("loc_65F62A6: mov %ebx,%ecx;");
    asm("loc_65F62A8: call _sub_65F6290;");
    asm("loc_65F62AD: mov (%esi),%esi;");
    asm("loc_65F62AF: push %edi;");
    asm("loc_65F62B0: call _sub_6600BB0;");
    asm("loc_65F62B5: mov 8(%ebx),%eax;");
    asm("loc_65F62B8: add $4,%esp;");
    asm("loc_65F62BB: cmp %eax,%esi;");
    asm("loc_65F62BD: mov %esi,%edi;");
    asm("loc_65F62BF: jne loc_65F62A2;");
    asm("loc_65F62C1: pop %edi;");
    asm("loc_65F62C2: pop %esi;");
    asm("loc_65F62C3: pop %ebx;");
    asm("loc_65F62C4: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F62D0() // _sub_65F62D0
{
    __DEBUG_ASM(65F62D0);
    // chunk 0x65F62D0 _sub_65F62D0
    asm("loc_65F62D0: push %ebx;");
    asm("loc_65F62D1: push %esi;");
    asm("loc_65F62D2: push %edi;");
    asm("loc_65F62D3: push $0x1C;");
    asm("loc_65F62D5: mov %ecx,%esi;");
    asm("loc_65F62D7: call _sub_6600BB6;");
    asm("loc_65F62DC: xor %ebx,%ebx;");
    asm("loc_65F62DE: mov %ebx,4(%eax);");
    asm("loc_65F62E1: mov %bl,0x19(%eax);");
    asm("loc_65F62E4: mov $1,%cl;");
    asm("loc_65F62E6: mov %cl,0x18(%eax);");
    asm("loc_65F62E9: mov %eax,8(%esi);");
    asm("loc_65F62EC: mov %cl,0x19(%eax);");
    asm("loc_65F62EF: mov 8(%esi),%eax;");
    asm("loc_65F62F2: mov %ebx,(%eax);");
    asm("loc_65F62F4: mov 8(%esi),%ecx;");
    asm("loc_65F62F7: mov %ebx,8(%ecx);");
    asm("loc_65F62FA: mov 8(%esi),%edi;");
    asm("loc_65F62FD: push $0x1C;");
    asm("loc_65F62FF: call _sub_6600BB6;");
    asm("loc_65F6304: mov %edi,4(%eax);");
    asm("loc_65F6307: mov %bl,0x18(%eax);");
    asm("loc_65F630A: mov %bl,0x19(%eax);");
    asm("loc_65F630D: mov %eax,4(%esi);");
    asm("loc_65F6310: mov %eax,(%eax);");
    asm("loc_65F6312: mov 4(%esi),%eax;");
    asm("loc_65F6315: add $8,%esp;");
    asm("loc_65F6318: pop %edi;");
    asm("loc_65F6319: mov %eax,8(%eax);");
    asm("loc_65F631C: mov %ebx,0x10(%esi);");
    asm("loc_65F631F: pop %esi;");
    asm("loc_65F6320: pop %ebx;");
    asm("loc_65F6321: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6330() // _sub_65F6330
{
    __DEBUG_ASM(65F6330);
    // chunk 0x65F6330 _sub_65F6330
    asm("loc_65F6330: mov %ecx,%eax;");
    asm("loc_65F6332: mov 4(%esp),%ecx;");
    asm("loc_65F6336: mov (%ecx),%edx;");
    asm("loc_65F6338: mov 8(%esp),%ecx;");
    asm("loc_65F633C: mov %edx,(%eax);");
    asm("loc_65F633E: mov (%ecx),%dl;");
    asm("loc_65F6340: mov %dl,4(%eax);");
    asm("loc_65F6343: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6350() // _sub_65F6350
{
    __DEBUG_ASM(65F6350);
    // chunk 0x65F6350 _sub_65F6350
    asm("loc_65F6350: push %ebx;");
    asm("loc_65F6351: push %ebp;");
    asm("loc_65F6352: push %esi;");
    asm("loc_65F6353: push %edi;");
    asm("loc_65F6354: push $0x1C;");
    asm("loc_65F6356: mov %ecx,%esi;");
    asm("loc_65F6358: call _sub_6600BB6;");
    asm("loc_65F635D: mov 0x20(%esp),%edi;");
    asm("loc_65F6361: mov 0x24(%esp),%ebp;");
    asm("loc_65F6365: mov %eax,%ebx;");
    asm("loc_65F6367: mov %edi,4(%ebx);");
    asm("loc_65F636A: movb $0,0x18(%ebx);");
    asm("loc_65F636E: movb $0,0x19(%ebx);");
    asm("loc_65F6372: mov 8(%esi),%eax;");
    asm("loc_65F6375: mov %eax,(%ebx);");
    asm("loc_65F6377: mov 8(%esi),%ecx;");
    asm("loc_65F637A: lea 0xC(%ebx),%edx;");
    asm("loc_65F637D: push %ebp;");
    asm("loc_65F637E: push %edx;");
    asm("loc_65F637F: mov %ecx,8(%ebx);");
    asm("loc_65F6382: call _sub_65F6670;");
    asm("loc_65F6387: mov 0x10(%esi),%ecx;");
    asm("loc_65F638A: mov 4(%esi),%eax;");
    asm("loc_65F638D: add $0xC,%esp;");
    asm("loc_65F6390: inc %ecx;");
    asm("loc_65F6391: cmp %eax,%edi;");
    asm("loc_65F6393: mov %ecx,0x10(%esi);");
    asm("loc_65F6396: je loc_65F63B9;");
    asm("loc_65F6398: mov 0x18(%esp),%eax;");
    asm("loc_65F639C: cmp 8(%esi),%eax;");
    asm("loc_65F639F: jne loc_65F63B9;");
    asm("loc_65F63A1: mov (%ebp),%ecx;");
    asm("loc_65F63A4: cmp 0xC(%edi),%ecx;");
    asm("loc_65F63A7: jb loc_65F63B9;");
    asm("loc_65F63A9: mov %ebx,8(%edi);");
    asm("loc_65F63AC: mov 4(%esi),%eax;");
    asm("loc_65F63AF: cmp 8(%eax),%edi;");
    asm("loc_65F63B2: jne loc_65F63D3;");
    asm("loc_65F63B4: mov %ebx,8(%eax);");
    asm("loc_65F63B7: jmp loc_65F63D3;");
    asm("loc_65F63B9: mov %ebx,(%edi);");
    asm("loc_65F63BB: mov 4(%esi),%eax;");
    asm("loc_65F63BE: cmp %eax,%edi;");
    asm("loc_65F63C0: jne loc_65F63CD;");
    asm("loc_65F63C2: mov %ebx,4(%eax);");
    asm("loc_65F63C5: mov 4(%esi),%edx;");
    asm("loc_65F63C8: mov %ebx,8(%edx);");
    asm("loc_65F63CB: jmp loc_65F63D3;");
    asm("loc_65F63CD: cmp (%eax),%edi;");
    asm("loc_65F63CF: jne loc_65F63D3;");
    asm("loc_65F63D1: mov %ebx,(%eax);");
    asm("loc_65F63D3: mov 4(%esi),%ecx;");
    asm("loc_65F63D6: cmp 4(%ecx),%ebx;");
    asm("loc_65F63D9: mov %ebx,%eax;");
    asm("loc_65F63DB: je loc_65F657E;");
    asm("loc_65F63E1: mov 4(%eax),%ecx;");
    asm("loc_65F63E4: mov 0x18(%ecx),%dl;");
    asm("loc_65F63E7: test %dl,%dl;");
    asm("loc_65F63E9: jne loc_65F657E;");
    asm("loc_65F63EF: mov 4(%ecx),%edi;");
    asm("loc_65F63F2: mov (%edi),%edx;");
    asm("loc_65F63F4: cmp %edx,%ecx;");
    asm("loc_65F63F6: jne loc_65F64C0;");
    asm("loc_65F63FC: mov 8(%edi),%edx;");
    asm("loc_65F63FF: cmpb $0,0x18(%edx);");
    asm("loc_65F6403: jne loc_65F6422;");
    asm("loc_65F6405: movb $1,0x18(%ecx);");
    asm("loc_65F6409: movb $1,0x18(%edx);");
    asm("loc_65F640D: mov 4(%eax),%edx;");
    asm("loc_65F6410: mov 4(%edx),%ecx;");
    asm("loc_65F6413: movb $0,0x18(%ecx);");
    asm("loc_65F6417: mov 4(%eax),%edx;");
    asm("loc_65F641A: mov 4(%edx),%eax;");
    asm("loc_65F641D: jmp loc_65F6572;");
    asm("loc_65F6422: cmp 8(%ecx),%eax;");
    asm("loc_65F6425: jne loc_65F6461;");
    asm("loc_65F6427: mov %ecx,%eax;");
    asm("loc_65F6429: mov 8(%eax),%ecx;");
    asm("loc_65F642C: mov (%ecx),%edx;");
    asm("loc_65F642E: mov %edx,8(%eax);");
    asm("loc_65F6431: mov (%ecx),%edx;");
    asm("loc_65F6433: cmp 8(%esi),%edx;");
    asm("loc_65F6436: je loc_65F643B;");
    asm("loc_65F6438: mov %eax,4(%edx);");
    asm("loc_65F643B: mov 4(%eax),%edx;");
    asm("loc_65F643E: mov %edx,4(%ecx);");
    asm("loc_65F6441: mov 4(%esi),%edx;");
    asm("loc_65F6444: cmp 4(%edx),%eax;");
    asm("loc_65F6447: jne loc_65F644E;");
    asm("loc_65F6449: mov %ecx,4(%edx);");
    asm("loc_65F644C: jmp loc_65F645C;");
    asm("loc_65F644E: mov 4(%eax),%edx;");
    asm("loc_65F6451: cmp (%edx),%eax;");
    asm("loc_65F6453: jne loc_65F6459;");
    asm("loc_65F6455: mov %ecx,(%edx);");
    asm("loc_65F6457: jmp loc_65F645C;");
    asm("loc_65F6459: mov %ecx,8(%edx);");
    asm("loc_65F645C: mov %eax,(%ecx);");
    asm("loc_65F645E: mov %ecx,4(%eax);");
    asm("loc_65F6461: mov 4(%eax),%ecx;");
    asm("loc_65F6464: movb $1,0x18(%ecx);");
    asm("loc_65F6468: mov 4(%eax),%edx;");
    asm("loc_65F646B: mov 4(%edx),%ecx;");
    asm("loc_65F646E: movb $0,0x18(%ecx);");
    asm("loc_65F6472: mov 4(%eax),%edx;");
    asm("loc_65F6475: mov 4(%edx),%ecx;");
    asm("loc_65F6478: mov (%ecx),%edx;");
    asm("loc_65F647A: mov 8(%edx),%edi;");
    asm("loc_65F647D: mov %edi,(%ecx);");
    asm("loc_65F647F: mov 8(%edx),%edi;");
    asm("loc_65F6482: cmp 8(%esi),%edi;");
    asm("loc_65F6485: je loc_65F648A;");
    asm("loc_65F6487: mov %ecx,4(%edi);");
    asm("loc_65F648A: mov 4(%ecx),%edi;");
    asm("loc_65F648D: mov %edi,4(%edx);");
    asm("loc_65F6490: mov 4(%esi),%edi;");
    asm("loc_65F6493: cmp 4(%edi),%ecx;");
    asm("loc_65F6496: jne loc_65F64A3;");
    asm("loc_65F6498: mov %edx,4(%edi);");
    asm("loc_65F649B: mov %ecx,8(%edx);");
    asm("loc_65F649E: jmp loc_65F656F;");
    asm("loc_65F64A3: mov 4(%ecx),%edi;");
    asm("loc_65F64A6: cmp 8(%edi),%ecx;");
    asm("loc_65F64A9: jne loc_65F64B6;");
    asm("loc_65F64AB: mov %edx,8(%edi);");
    asm("loc_65F64AE: mov %ecx,8(%edx);");
    asm("loc_65F64B1: jmp loc_65F656F;");
    asm("loc_65F64B6: mov %edx,(%edi);");
    asm("loc_65F64B8: mov %ecx,8(%edx);");
    asm("loc_65F64BB: jmp loc_65F656F;");
    asm("loc_65F64C0: cmpb $0,0x18(%edx);");
    asm("loc_65F64C4: jne loc_65F64E3;");
    asm("loc_65F64C6: movb $1,0x18(%ecx);");
    asm("loc_65F64CA: movb $1,0x18(%edx);");
    asm("loc_65F64CE: mov 4(%eax),%ecx;");
    asm("loc_65F64D1: mov 4(%ecx),%edx;");
    asm("loc_65F64D4: movb $0,0x18(%edx);");
    asm("loc_65F64D8: mov 4(%eax),%eax;");
    asm("loc_65F64DB: mov 4(%eax),%eax;");
    asm("loc_65F64DE: jmp loc_65F6572;");
    asm("loc_65F64E3: cmp (%ecx),%eax;");
    asm("loc_65F64E5: jne loc_65F6523;");
    asm("loc_65F64E7: mov %ecx,%eax;");
    asm("loc_65F64E9: mov (%eax),%ecx;");
    asm("loc_65F64EB: mov 8(%ecx),%edx;");
    asm("loc_65F64EE: mov %edx,(%eax);");
    asm("loc_65F64F0: mov 8(%ecx),%edx;");
    asm("loc_65F64F3: cmp 8(%esi),%edx;");
    asm("loc_65F64F6: je loc_65F64FB;");
    asm("loc_65F64F8: mov %eax,4(%edx);");
    asm("loc_65F64FB: mov 4(%eax),%edx;");
    asm("loc_65F64FE: mov %edx,4(%ecx);");
    asm("loc_65F6501: mov 4(%esi),%edx;");
    asm("loc_65F6504: cmp 4(%edx),%eax;");
    asm("loc_65F6507: jne loc_65F650E;");
    asm("loc_65F6509: mov %ecx,4(%edx);");
    asm("loc_65F650C: jmp loc_65F651D;");
    asm("loc_65F650E: mov 4(%eax),%edx;");
    asm("loc_65F6511: cmp 8(%edx),%eax;");
    asm("loc_65F6514: jne loc_65F651B;");
    asm("loc_65F6516: mov %ecx,8(%edx);");
    asm("loc_65F6519: jmp loc_65F651D;");
    asm("loc_65F651B: mov %ecx,(%edx);");
    asm("loc_65F651D: mov %eax,8(%ecx);");
    asm("loc_65F6520: mov %ecx,4(%eax);");
    asm("loc_65F6523: mov 4(%eax),%ecx;");
    asm("loc_65F6526: movb $1,0x18(%ecx);");
    asm("loc_65F652A: mov 4(%eax),%edx;");
    asm("loc_65F652D: mov 4(%edx),%ecx;");
    asm("loc_65F6530: movb $0,0x18(%ecx);");
    asm("loc_65F6534: mov 4(%eax),%edx;");
    asm("loc_65F6537: mov 4(%edx),%ecx;");
    asm("loc_65F653A: mov 8(%ecx),%edx;");
    asm("loc_65F653D: mov (%edx),%edi;");
    asm("loc_65F653F: mov %edi,8(%ecx);");
    asm("loc_65F6542: mov (%edx),%edi;");
    asm("loc_65F6544: cmp 8(%esi),%edi;");
    asm("loc_65F6547: je loc_65F654C;");
    asm("loc_65F6549: mov %ecx,4(%edi);");
    asm("loc_65F654C: mov 4(%ecx),%edi;");
    asm("loc_65F654F: mov %edi,4(%edx);");
    asm("loc_65F6552: mov 4(%esi),%edi;");
    asm("loc_65F6555: cmp 4(%edi),%ecx;");
    asm("loc_65F6558: jne loc_65F655F;");
    asm("loc_65F655A: mov %edx,4(%edi);");
    asm("loc_65F655D: jmp loc_65F656D;");
    asm("loc_65F655F: mov 4(%ecx),%edi;");
    asm("loc_65F6562: cmp (%edi),%ecx;");
    asm("loc_65F6564: jne loc_65F656A;");
    asm("loc_65F6566: mov %edx,(%edi);");
    asm("loc_65F6568: jmp loc_65F656D;");
    asm("loc_65F656A: mov %edx,8(%edi);");
    asm("loc_65F656D: mov %ecx,(%edx);");
    asm("loc_65F656F: mov %edx,4(%ecx);");
    asm("loc_65F6572: mov 4(%esi),%ecx;");
    asm("loc_65F6575: cmp 4(%ecx),%eax;");
    asm("loc_65F6578: jne loc_65F63E1;");
    asm("loc_65F657E: mov 4(%esi),%edx;");
    asm("loc_65F6581: mov 4(%edx),%eax;");
    asm("loc_65F6584: pop %edi;");
    asm("loc_65F6585: movb $1,0x18(%eax);");
    asm("loc_65F6589: mov 0x10(%esp),%eax;");
    asm("loc_65F658D: pop %esi;");
    asm("loc_65F658E: pop %ebp;");
    asm("loc_65F658F: mov %ebx,(%eax);");
    asm("loc_65F6591: pop %ebx;");
    asm("loc_65F6592: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F65A0() // _sub_65F65A0
{
    __DEBUG_ASM(65F65A0);
    // chunk 0x65F65A0 _sub_65F65A0
    asm("loc_65F65A0: push $0x1C;");
    asm("loc_65F65A2: call _sub_6600BB6;");
    asm("loc_65F65A7: mov 8(%esp),%ecx;");
    asm("loc_65F65AB: mov 0xC(%esp),%dl;");
    asm("loc_65F65AF: add $4,%esp;");
    asm("loc_65F65B2: mov %ecx,4(%eax);");
    asm("loc_65F65B5: mov %dl,0x18(%eax);");
    asm("loc_65F65B8: movb $0,0x19(%eax);");
    asm("loc_65F65BC: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F65C0() // _sub_65F65C0
{
    __DEBUG_ASM(65F65C0);
    // chunk 0x65F65C0 _sub_65F65C0
    asm("loc_65F65C0: mov (%ecx),%eax;");
    asm("loc_65F65C2: mov 0x18(%eax),%dl;");
    asm("loc_65F65C5: test %dl,%dl;");
    asm("loc_65F65C7: push %ebx;");
    asm("loc_65F65C8: jne loc_65F65D9;");
    asm("loc_65F65CA: mov 4(%eax),%edx;");
    asm("loc_65F65CD: cmp %eax,4(%edx);");
    asm("loc_65F65D0: jne loc_65F65D9;");
    asm("loc_65F65D2: mov 8(%eax),%eax;");
    asm("loc_65F65D5: mov %eax,(%ecx);");
    asm("loc_65F65D7: pop %ebx;");
    asm("loc_65F65D8: ret;");
    asm("loc_65F65D9: mov (%eax),%edx;");
    asm("loc_65F65DB: mov 0x19(%edx),%bl;");
    asm("loc_65F65DE: test %bl,%bl;");
    asm("loc_65F65E0: jne loc_65F6600;");
    asm("loc_65F65E2: mov 8(%edx),%eax;");
    asm("loc_65F65E5: mov 0x19(%eax),%bl;");
    asm("loc_65F65E8: test %bl,%bl;");
    asm("loc_65F65EA: jne loc_65F65FC;");
    asm("loc_65F65EC: lea (%esp),%esp;");
    asm("loc_65F65F0: mov %eax,%edx;");
    asm("loc_65F65F2: mov 8(%edx),%eax;");
    asm("loc_65F65F5: mov 0x19(%eax),%bl;");
    asm("loc_65F65F8: test %bl,%bl;");
    asm("loc_65F65FA: je loc_65F65F0;");
    asm("loc_65F65FC: mov %edx,(%ecx);");
    asm("loc_65F65FE: pop %ebx;");
    asm("loc_65F65FF: ret;");
    asm("loc_65F6600: mov 4(%eax),%eax;");
    asm("loc_65F6603: mov (%ecx),%edx;");
    asm("loc_65F6605: cmp (%eax),%edx;");
    asm("loc_65F6607: jne loc_65F661B;");
    asm("loc_65F6609: lea (%esp),%esp;");
    asm("loc_65F6610: mov %eax,(%ecx);");
    asm("loc_65F6612: mov 4(%eax),%eax;");
    asm("loc_65F6615: mov (%ecx),%edx;");
    asm("loc_65F6617: cmp (%eax),%edx;");
    asm("loc_65F6619: je loc_65F6610;");
    asm("loc_65F661B: mov %eax,(%ecx);");
    asm("loc_65F661D: pop %ebx;");
    asm("loc_65F661E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6620() // _sub_65F6620
{
    __DEBUG_ASM(65F6620);
    // chunk 0x65F6620 _sub_65F6620
    asm("loc_65F6620: mov (%ecx),%eax;");
    asm("loc_65F6622: mov 8(%eax),%edx;");
    asm("loc_65F6625: push %ebx;");
    asm("loc_65F6626: mov 0x19(%edx),%bl;");
    asm("loc_65F6629: test %bl,%bl;");
    asm("loc_65F662B: jne loc_65F6645;");
    asm("loc_65F662D: mov (%edx),%eax;");
    asm("loc_65F662F: mov 0x19(%eax),%bl;");
    asm("loc_65F6632: test %bl,%bl;");
    asm("loc_65F6634: jne loc_65F6641;");
    asm("loc_65F6636: mov %eax,%edx;");
    asm("loc_65F6638: mov (%edx),%eax;");
    asm("loc_65F663A: mov 0x19(%eax),%bl;");
    asm("loc_65F663D: test %bl,%bl;");
    asm("loc_65F663F: je loc_65F6636;");
    asm("loc_65F6641: mov %edx,(%ecx);");
    asm("loc_65F6643: pop %ebx;");
    asm("loc_65F6644: ret;");
    asm("loc_65F6645: mov 4(%eax),%eax;");
    asm("loc_65F6648: mov (%ecx),%edx;");
    asm("loc_65F664A: cmp 8(%eax),%edx;");
    asm("loc_65F664D: jne loc_65F665C;");
    asm("loc_65F664F: nop;");
    asm("loc_65F6650: mov %eax,(%ecx);");
    asm("loc_65F6652: mov 4(%eax),%eax;");
    asm("loc_65F6655: mov (%ecx),%edx;");
    asm("loc_65F6657: cmp 8(%eax),%edx;");
    asm("loc_65F665A: je loc_65F6650;");
    asm("loc_65F665C: mov (%ecx),%edx;");
    asm("loc_65F665E: cmp %eax,8(%edx);");
    asm("loc_65F6661: je loc_65F6665;");
    asm("loc_65F6663: mov %eax,(%ecx);");
    asm("loc_65F6665: pop %ebx;");
    asm("loc_65F6666: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6670() // _sub_65F6670
{
    __DEBUG_ASM(65F6670);
    // chunk 0x65F6670 _sub_65F6670
    asm("loc_65F6670: mov 4(%esp),%eax;");
    asm("loc_65F6674: test %eax,%eax;");
    asm("loc_65F6676: je loc_65F668C;");
    asm("loc_65F6678: mov 8(%esp),%ecx;");
    asm("loc_65F667C: mov (%ecx),%edx;");
    asm("loc_65F667E: mov %edx,(%eax);");
    asm("loc_65F6680: mov 4(%ecx),%edx;");
    asm("loc_65F6683: mov %edx,4(%eax);");
    asm("loc_65F6686: mov 8(%ecx),%ecx;");
    asm("loc_65F6689: mov %ecx,8(%eax);");
    asm("loc_65F668C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6690() // _j___cfltcvt_init
{
    __DEBUG_ASM(65F6690);
    // chunk 0x65F6690 _sub_65F6690
    asm("loc_65F6690: jmp _sub_65F66A0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F66A0() // __cfltcvt_init
{
    __DEBUG_ASM(65F66A0);
    // chunk 0x65F66A0 _sub_65F66A0
    asm("loc_65F66A0: movl $0x3F800000,_data_6603194;");
    asm("loc_65F66AA: movl $0x3F800000,_data_6603184;");
    asm("loc_65F66B4: movl $0x3F800000,_data_6603174;");
    asm("loc_65F66BE: movl $0,_data_6603190;");
    asm("loc_65F66C8: movl $0,_data_660318C;");
    asm("loc_65F66D2: movl $0,_data_6603188;");
    asm("loc_65F66DC: movl $0,_data_6603180;");
    asm("loc_65F66E6: movl $0,_data_660317C;");
    asm("loc_65F66F0: movl $0,_data_6603178;");
    asm("loc_65F66FA: movl $0,_data_66031A0;");
    asm("loc_65F6704: movl $0,_data_660319C;");
    asm("loc_65F670E: movl $0,_data_6603198;");
    asm("loc_65F6718: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6720() // _sub_65F6720
{
    __DEBUG_ASM(65F6720);
    // chunk 0x65F6720 _sub_65F6720
    asm("loc_65F6720: mov %ecx,%eax;");
    asm("loc_65F6722: xor %ecx,%ecx;");
    asm("loc_65F6724: mov %ecx,(%eax);");
    asm("loc_65F6726: mov %ecx,4(%eax);");
    asm("loc_65F6729: mov %ecx,8(%eax);");
    asm("loc_65F672C: mov %ecx,0xC(%eax);");
    asm("loc_65F672F: mov %ecx,0x10(%eax);");
    asm("loc_65F6732: mov %ecx,0x14(%eax);");
    asm("loc_65F6735: mov %ecx,0x1C(%eax);");
    asm("loc_65F6738: mov %ecx,0x18(%eax);");
    asm("loc_65F673B: mov %ecx,0x20(%eax);");
    asm("loc_65F673E: mov %ecx,0x2C(%eax);");
    asm("loc_65F6741: mov %ecx,0x24(%eax);");
    asm("loc_65F6744: mov %ecx,0x28(%eax);");
    asm("loc_65F6747: mov %ecx,0x30(%eax);");
    asm("loc_65F674A: or $1,%cl;");
    asm("loc_65F674D: mov %cl,0x30(%eax);");
    asm("loc_65F6750: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6760() // _sub_65F6760
{
    __DEBUG_ASM(65F6760);
    // chunk 0x65F6760 _sub_65F6760
    asm("loc_65F6760: push %ecx;");
    asm("loc_65F6761: mov _data_6603144,%eax;");
    asm("loc_65F6766: push %esi;");
    asm("loc_65F6767: push %edi;");
    asm("loc_65F6768: mov %ecx,%esi;");
    asm("loc_65F676A: mov (%eax),%ecx;");
    asm("loc_65F676C: lea 0x14(%esi),%edi;");
    asm("loc_65F676F: push %edi;");
    asm("loc_65F6770: push %eax;");
    asm("loc_65F6771: calll *0x10(%ecx);");
    asm("loc_65F6774: movl $0,0xC(%edi);");
    asm("loc_65F677B: mov _data_6603148,%eax;");
    asm("loc_65F6780: lea 0x24(%esi),%ecx;");
    asm("loc_65F6783: push %ecx;");
    asm("loc_65F6784: movl $0,8(%ecx);");
    asm("loc_65F678B: mov (%eax),%edx;");
    asm("loc_65F678D: push %eax;");
    asm("loc_65F678E: calll *0x10(%edx);");
    asm("loc_65F6791: mov (%esi),%ecx;");
    asm("loc_65F6793: call _sub_65F17E0;");
    asm("loc_65F6798: mov 8(%esi),%eax;");
    asm("loc_65F679B: test %eax,%eax;");
    asm("loc_65F679D: je loc_65F67D6;");
    asm("loc_65F679F: mov -4(%eax),%ecx;");
    asm("loc_65F67A2: push %ebp;");
    asm("loc_65F67A3: lea -4(%eax),%ebp;");
    asm("loc_65F67A6: lea (%eax,%ecx,4),%edi;");
    asm("loc_65F67A9: dec %ecx;");
    asm("loc_65F67AA: js loc_65F67CC;");
    asm("loc_65F67AC: inc %ecx;");
    asm("loc_65F67AD: mov %ecx,0xC(%esp);");
    asm("loc_65F67B1: mov -4(%edi),%ecx;");
    asm("loc_65F67B4: sub $4,%edi;");
    asm("loc_65F67B7: test %ecx,%ecx;");
    asm("loc_65F67B9: je loc_65F67C6;");
    asm("loc_65F67BB: call _sub_65F28F0;");
    asm("loc_65F67C0: movl $0,(%edi);");
    asm("loc_65F67C6: decl 0xC(%esp);");
    asm("loc_65F67CA: jne loc_65F67B1;");
    asm("loc_65F67CC: push %ebp;");
    asm("loc_65F67CD: call _sub_6600BB0;");
    asm("loc_65F67D2: add $4,%esp;");
    asm("loc_65F67D5: pop %ebp;");
    asm("loc_65F67D6: mov (%esi),%ecx;");
    asm("loc_65F67D8: test %ecx,%ecx;");
    asm("loc_65F67DA: je loc_65F67E7;");
    asm("loc_65F67DC: call _sub_65F17E0;");
    asm("loc_65F67E1: movl $0,(%esi);");
    asm("loc_65F67E7: pop %edi;");
    asm("loc_65F67E8: pop %esi;");
    asm("loc_65F67E9: pop %ecx;");
    asm("loc_65F67EA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F67F0() // _sub_65F67F0
{
    __DEBUG_ASM(65F67F0);
    // chunk 0x65F67F0 _sub_65F67F0
    asm("loc_65F67F0: push %ebx;");
    asm("loc_65F67F1: push %ebp;");
    asm("loc_65F67F2: push %esi;");
    asm("loc_65F67F3: mov %ecx,%esi;");
    asm("loc_65F67F5: mov (%esi),%ecx;");
    asm("loc_65F67F7: push %edi;");
    asm("loc_65F67F8: mov 0x14(%esp),%edi;");
    asm("loc_65F67FC: cmp %edi,%ecx;");
    asm("loc_65F67FE: je loc_65F681C;");
    asm("loc_65F6800: test %ecx,%ecx;");
    asm("loc_65F6802: je loc_65F680F;");
    asm("loc_65F6804: call _sub_65F17E0;");
    asm("loc_65F6809: movl $0,(%esi);");
    asm("loc_65F680F: test %edi,%edi;");
    asm("loc_65F6811: mov %edi,(%esi);");
    asm("loc_65F6813: je loc_65F681C;");
    asm("loc_65F6815: mov %edi,%ecx;");
    asm("loc_65F6817: call _sub_65F17D0;");
    asm("loc_65F681C: mov 0x1C(%esp),%edi;");
    asm("loc_65F6820: lea 4(,%edi,4),%eax;");
    asm("loc_65F6827: push %eax;");
    asm("loc_65F6828: mov %edi,0xC(%esi);");
    asm("loc_65F682B: call _sub_6600BB6;");
    asm("loc_65F6830: add $4,%esp;");
    asm("loc_65F6833: test %eax,%eax;");
    asm("loc_65F6835: je loc_65F6854;");
    asm("loc_65F6837: mov %edi,(%eax);");
    asm("loc_65F6839: lea 4(%eax),%edx;");
    asm("loc_65F683C: lea -1(%edi),%eax;");
    asm("loc_65F683F: test %eax,%eax;");
    asm("loc_65F6841: jl loc_65F6850;");
    asm("loc_65F6843: lea 1(%eax),%ecx;");
    asm("loc_65F6846: xor %eax,%eax;");
    asm("loc_65F6848: mov %edx,%edi;");
    asm("loc_65F684A: rep stos %eax,(%edi);");
    asm("loc_65F684C: lea (%esp),%esp;");
    asm("loc_65F6850: mov %edx,%eax;");
    asm("loc_65F6852: jmp loc_65F6856;");
    asm("loc_65F6854: xor %eax,%eax;");
    asm("loc_65F6856: mov %eax,8(%esi);");
    asm("loc_65F6859: mov 0xC(%esi),%eax;");
    asm("loc_65F685C: xor %ebx,%ebx;");
    asm("loc_65F685E: xor %ebp,%ebp;");
    asm("loc_65F6860: xor %edi,%edi;");
    asm("loc_65F6862: test %eax,%eax;");
    asm("loc_65F6864: jle loc_65F68B3;");
    asm("loc_65F6866: mov 0x18(%esp),%edx;");
    asm("loc_65F686A: mov 8(%esi),%ecx;");
    asm("loc_65F686D: mov (%edx,%edi,4),%eax;");
    asm("loc_65F6870: mov %eax,(%ecx,%edi,4);");
    asm("loc_65F6873: mov 8(%esi),%ecx;");
    asm("loc_65F6876: mov (%ecx,%edi,4),%ecx;");
    asm("loc_65F6879: mov (%ecx),%edx;");
    asm("loc_65F687B: calll *4(%edx);");
    asm("loc_65F687E: cmp %ebx,%eax;");
    asm("loc_65F6880: jle loc_65F6884;");
    asm("loc_65F6882: mov %eax,%ebx;");
    asm("loc_65F6884: mov 8(%esi),%eax;");
    asm("loc_65F6887: mov (%eax,%edi,4),%ecx;");
    asm("loc_65F688A: mov (%ecx),%edx;");
    asm("loc_65F688C: calll *(%edx);");
    asm("loc_65F688E: cmp %ebp,%eax;");
    asm("loc_65F6890: jle loc_65F6894;");
    asm("loc_65F6892: mov %eax,%ebp;");
    asm("loc_65F6894: mov 0xC(%esi),%eax;");
    asm("loc_65F6897: inc %edi;");
    asm("loc_65F6898: cmp %eax,%edi;");
    asm("loc_65F689A: jl loc_65F6866;");
    asm("loc_65F689C: test %ebx,%ebx;");
    asm("loc_65F689E: jle loc_65F68A3;");
    asm("loc_65F68A0: mov %ebx,0x20(%esi);");
    asm("loc_65F68A3: test %ebp,%ebp;");
    asm("loc_65F68A5: mov $1,%al;");
    asm("loc_65F68A7: jle loc_65F68B5;");
    asm("loc_65F68A9: pop %edi;");
    asm("loc_65F68AA: mov %ebp,0x2C(%esi);");
    asm("loc_65F68AD: pop %esi;");
    asm("loc_65F68AE: pop %ebp;");
    asm("loc_65F68AF: pop %ebx;");
    asm("loc_65F68B0: ret $0xC;");
    asm("loc_65F68B3: mov $1,%al;");
    asm("loc_65F68B5: pop %edi;");
    asm("loc_65F68B6: pop %esi;");
    asm("loc_65F68B7: pop %ebp;");
    asm("loc_65F68B8: pop %ebx;");
    asm("loc_65F68B9: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F68C0() // _sub_65F68C0
{
    __DEBUG_ASM(65F68C0);
    // chunk 0x65F68C0 _sub_65F68C0
    asm("loc_65F68C0: sub $0xC,%esp;");
    asm("loc_65F68C3: push %ebx;");
    asm("loc_65F68C4: push %esi;");
    asm("loc_65F68C5: mov 0x1C(%esp),%esi;");
    asm("loc_65F68C9: push %edi;");
    asm("loc_65F68CA: mov %ecx,%edi;");
    asm("loc_65F68CC: mov 8(%edi),%eax;");
    asm("loc_65F68CF: mov (%eax),%ecx;");
    asm("loc_65F68D1: mov 0x1C(%esp),%eax;");
    asm("loc_65F68D5: mov (%ecx),%edx;");
    asm("loc_65F68D7: push %esi;");
    asm("loc_65F68D8: push %eax;");
    asm("loc_65F68D9: calll *0x10(%edx);");
    asm("loc_65F68DC: mov %al,%bl;");
    asm("loc_65F68DE: test %bl,%bl;");
    asm("loc_65F68E0: je loc_65F691E;");
    asm("loc_65F68E2: mov (%edi),%ecx;");
    asm("loc_65F68E4: mov 4(%ecx),%edi;");
    asm("loc_65F68E7: mov _data_66031A4,%eax;");
    asm("loc_65F68EC: add $0xC,%edi;");
    asm("loc_65F68EF: test %eax,%eax;");
    asm("loc_65F68F1: jne loc_65F68FD;");
    asm("loc_65F68F3: call _sub_6600DE0;");
    asm("loc_65F68F8: mov %eax,_data_66031A4;");
    asm("loc_65F68FD: mov (%eax),%edx;");
    asm("loc_65F68FF: push %esi;");
    asm("loc_65F6900: push %edi;");
    asm("loc_65F6901: lea 0x14(%esp),%ecx;");
    asm("loc_65F6905: push %ecx;");
    asm("loc_65F6906: push %eax;");
    asm("loc_65F6907: calll *0x28(%edx);");
    asm("loc_65F690A: mov 0xC(%esp),%edx;");
    asm("loc_65F690E: mov 0x10(%esp),%eax;");
    asm("loc_65F6912: mov 0x14(%esp),%ecx;");
    asm("loc_65F6916: mov %edx,(%esi);");
    asm("loc_65F6918: mov %eax,4(%esi);");
    asm("loc_65F691B: mov %ecx,8(%esi);");
    asm("loc_65F691E: pop %edi;");
    asm("loc_65F691F: pop %esi;");
    asm("loc_65F6920: mov %bl,%al;");
    asm("loc_65F6922: pop %ebx;");
    asm("loc_65F6923: add $0xC,%esp;");
    asm("loc_65F6926: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6930() // _sub_65F6930
{
    __DEBUG_ASM(65F6930);
    // chunk 0x65F6930 _sub_65F6930
    asm("loc_65F6930: push %esi;");
    asm("loc_65F6931: mov 8(%esp),%esi;");
    asm("loc_65F6935: test %esi,%esi;");
    asm("loc_65F6937: push %edi;");
    asm("loc_65F6938: mov 4(%ecx),%edi;");
    asm("loc_65F693B: jl loc_65F699C;");
    asm("loc_65F693D: cmp 0xC(%ecx),%esi;");
    asm("loc_65F6940: jge loc_65F699C;");
    asm("loc_65F6942: mov 8(%ecx),%eax;");
    asm("loc_65F6945: mov (%eax,%esi,4),%edx;");
    asm("loc_65F6948: mov 0x30(%ecx),%al;");
    asm("loc_65F694B: test $1,%al;");
    asm("loc_65F694D: mov %edx,4(%ecx);");
    asm("loc_65F6950: jne loc_65F6978;");
    asm("loc_65F6952: cmp %edx,%edi;");
    asm("loc_65F6954: jne loc_65F6978;");
    asm("loc_65F6956: push %ebx;");
    asm("loc_65F6957: mov %al,%bl;");
    asm("loc_65F6959: xor %edx,%edx;");
    asm("loc_65F695B: xor %dl,%bl;");
    asm("loc_65F695D: mov 4(%ecx),%edx;");
    asm("loc_65F6960: and $1,%bl;");
    asm("loc_65F6963: xor %al,%bl;");
    asm("loc_65F6965: mov %bl,0x30(%ecx);");
    asm("loc_65F6968: pop %ebx;");
    asm("loc_65F6969: xor %eax,%eax;");
    asm("loc_65F696B: cmp %edx,%edi;");
    asm("loc_65F696D: pop %edi;");
    asm("loc_65F696E: mov %esi,0x10(%ecx);");
    asm("loc_65F6971: setne %al;");
    asm("loc_65F6974: pop %esi;");
    asm("loc_65F6975: ret $4;");
    asm("loc_65F6978: push %ebx;");
    asm("loc_65F6979: mov %al,%bl;");
    asm("loc_65F697B: mov $1,%edx;");
    asm("loc_65F6980: xor %dl,%bl;");
    asm("loc_65F6982: and %dl,%bl;");
    asm("loc_65F6984: mov 4(%ecx),%edx;");
    asm("loc_65F6987: xor %al,%bl;");
    asm("loc_65F6989: mov %bl,0x30(%ecx);");
    asm("loc_65F698C: pop %ebx;");
    asm("loc_65F698D: xor %eax,%eax;");
    asm("loc_65F698F: cmp %edx,%edi;");
    asm("loc_65F6991: pop %edi;");
    asm("loc_65F6992: mov %esi,0x10(%ecx);");
    asm("loc_65F6995: setne %al;");
    asm("loc_65F6998: pop %esi;");
    asm("loc_65F6999: ret $4;");
    asm("loc_65F699C: movl $0,4(%ecx);");
    asm("loc_65F69A3: mov 4(%ecx),%edx;");
    asm("loc_65F69A6: xor %eax,%eax;");
    asm("loc_65F69A8: cmp %edx,%edi;");
    asm("loc_65F69AA: pop %edi;");
    asm("loc_65F69AB: mov %esi,0x10(%ecx);");
    asm("loc_65F69AE: setne %al;");
    asm("loc_65F69B1: pop %esi;");
    asm("loc_65F69B2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F69C0() // _sub_65F69C0
{
    __DEBUG_ASM(65F69C0);
    // chunk 0x65F69C0 _sub_65F69C0
    asm("loc_65F69C0: orb $2,0x30(%ecx);");
    asm("loc_65F69C4: mov $1,%al;");
    asm("loc_65F69C6: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F69D0() // _sub_65F69D0
{
    __DEBUG_ASM(65F69D0);
    // chunk 0x65F69D0 _sub_65F69D0
    asm("loc_65F69D0: push %ecx;");
    asm("loc_65F69D1: push %esi;");
    asm("loc_65F69D2: mov %ecx,%esi;");
    asm("loc_65F69D4: mov 4(%esi),%eax;");
    asm("loc_65F69D7: test %eax,%eax;");
    asm("loc_65F69D9: push %edi;");
    asm("loc_65F69DA: je loc_65F6ABD;");
    asm("loc_65F69E0: mov 0x14(%esi),%edx;");
    asm("loc_65F69E3: mov _data_6603144,%eax;");
    asm("loc_65F69E8: mov (%eax),%ecx;");
    asm("loc_65F69EA: lea 0x14(%esi),%edi;");
    asm("loc_65F69ED: push %edx;");
    asm("loc_65F69EE: push %eax;");
    asm("loc_65F69EF: calll *0x28(%ecx);");
    asm("loc_65F69F2: test %eax,%eax;");
    asm("loc_65F69F4: mov 0x30(%esi),%al;");
    asm("loc_65F69F7: setge %cl;");
    asm("loc_65F69FA: test $1,%al;");
    asm("loc_65F69FC: jne loc_65F6A06;");
    asm("loc_65F69FE: test %cl,%cl;");
    asm("loc_65F6A00: je loc_65F6A06;");
    asm("loc_65F6A02: xor %cl,%cl;");
    asm("loc_65F6A04: jmp loc_65F6A08;");
    asm("loc_65F6A06: mov $1,%cl;");
    asm("loc_65F6A08: test $2,%al;");
    asm("loc_65F6A0A: mov %cl,8(%esp);");
    asm("loc_65F6A0E: jne loc_65F6A14;");
    asm("loc_65F6A10: test %cl,%cl;");
    asm("loc_65F6A12: je loc_65F6A4B;");
    asm("loc_65F6A14: mov (%esi),%eax;");
    asm("loc_65F6A16: mov 4(%esi),%ecx;");
    asm("loc_65F6A19: mov (%ecx),%edx;");
    asm("loc_65F6A1B: push %ebx;");
    asm("loc_65F6A1C: mov 0xC(%esp),%ebx;");
    asm("loc_65F6A20: push %ebx;");
    asm("loc_65F6A21: push %edi;");
    asm("loc_65F6A22: push %eax;");
    asm("loc_65F6A23: calll *0xC(%edx);");
    asm("loc_65F6A26: test %al,%al;");
    asm("loc_65F6A28: pop %ebx;");
    asm("loc_65F6A29: jne loc_65F6A31;");
    asm("loc_65F6A2B: pop %edi;");
    asm("loc_65F6A2C: pop %esi;");
    asm("loc_65F6A2D: pop %ecx;");
    asm("loc_65F6A2E: ret $8;");
    asm("loc_65F6A31: mov (%edi),%edx;");
    asm("loc_65F6A33: mov _data_6603144,%eax;");
    asm("loc_65F6A38: mov (%eax),%ecx;");
    asm("loc_65F6A3A: push %edx;");
    asm("loc_65F6A3B: push %eax;");
    asm("loc_65F6A3C: calll *0x28(%ecx);");
    asm("loc_65F6A3F: test %eax,%eax;");
    asm("loc_65F6A41: jge loc_65F6A4B;");
    asm("loc_65F6A43: pop %edi;");
    asm("loc_65F6A44: xor %al,%al;");
    asm("loc_65F6A46: pop %esi;");
    asm("loc_65F6A47: pop %ecx;");
    asm("loc_65F6A48: ret $8;");
    asm("loc_65F6A4B: mov 0x1C(%esi),%edx;");
    asm("loc_65F6A4E: mov _data_6603148,%eax;");
    asm("loc_65F6A53: mov (%eax),%ecx;");
    asm("loc_65F6A55: push $0;");
    asm("loc_65F6A57: push $0;");
    asm("loc_65F6A59: push %edx;");
    asm("loc_65F6A5A: mov 0x24(%esi),%edx;");
    asm("loc_65F6A5D: lea 0x24(%esi),%edi;");
    asm("loc_65F6A60: push %edx;");
    asm("loc_65F6A61: push %eax;");
    asm("loc_65F6A62: calll *0x24(%ecx);");
    asm("loc_65F6A65: mov 0x30(%esi),%cl;");
    asm("loc_65F6A68: test %eax,%eax;");
    asm("loc_65F6A6A: setge %al;");
    asm("loc_65F6A6D: test $1,%cl;");
    asm("loc_65F6A70: jne loc_65F6A76;");
    asm("loc_65F6A72: test %al,%al;");
    asm("loc_65F6A74: jne loc_65F6AAB;");
    asm("loc_65F6A76: mov 4(%esi),%ecx;");
    asm("loc_65F6A79: mov (%ecx),%eax;");
    asm("loc_65F6A7B: push %edi;");
    asm("loc_65F6A7C: calll *8(%eax);");
    asm("loc_65F6A7F: test %al,%al;");
    asm("loc_65F6A81: jne loc_65F6A89;");
    asm("loc_65F6A83: pop %edi;");
    asm("loc_65F6A84: pop %esi;");
    asm("loc_65F6A85: pop %ecx;");
    asm("loc_65F6A86: ret $8;");
    asm("loc_65F6A89: mov 0x1C(%esi),%edx;");
    asm("loc_65F6A8C: mov _data_6603148,%eax;");
    asm("loc_65F6A91: mov (%eax),%ecx;");
    asm("loc_65F6A93: push $0;");
    asm("loc_65F6A95: push $0;");
    asm("loc_65F6A97: push %edx;");
    asm("loc_65F6A98: mov (%edi),%edx;");
    asm("loc_65F6A9A: push %edx;");
    asm("loc_65F6A9B: push %eax;");
    asm("loc_65F6A9C: calll *0x24(%ecx);");
    asm("loc_65F6A9F: test %eax,%eax;");
    asm("loc_65F6AA1: jge loc_65F6AAB;");
    asm("loc_65F6AA3: pop %edi;");
    asm("loc_65F6AA4: xor %al,%al;");
    asm("loc_65F6AA6: pop %esi;");
    asm("loc_65F6AA7: pop %ecx;");
    asm("loc_65F6AA8: ret $8;");
    asm("loc_65F6AAB: mov 4(%esi),%ecx;");
    asm("loc_65F6AAE: mov 0x10(%esp),%edx;");
    asm("loc_65F6AB2: mov (%ecx),%eax;");
    asm("loc_65F6AB4: push %esi;");
    asm("loc_65F6AB5: push %edx;");
    asm("loc_65F6AB6: calll *0x14(%eax);");
    asm("loc_65F6AB9: andb $0xFC,0x30(%esi);");
    asm("loc_65F6ABD: pop %edi;");
    asm("loc_65F6ABE: mov $1,%al;");
    asm("loc_65F6AC0: pop %esi;");
    asm("loc_65F6AC1: pop %ecx;");
    asm("loc_65F6AC2: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6AD0() // _sub_65F6AD0
{
    __DEBUG_ASM(65F6AD0);
    // chunk 0x65F6AD0 _sub_65F6AD0
    asm("loc_65F6AD0: mov 4(%esp),%eax;");
    asm("loc_65F6AD4: mov 8(%esp),%ecx;");
    asm("loc_65F6AD8: sub %eax,%ecx;");
    asm("loc_65F6ADA: mov $0xC,%edx;");
    asm("loc_65F6ADF: nop;");
    asm("loc_65F6AE0: flds 0xC(%esp);");
    asm("loc_65F6AE4: add $4,%eax;");
    asm("loc_65F6AE7: dec %edx;");
    asm("loc_65F6AE8: fmuls -4(%ecx,%eax);");
    asm("loc_65F6AEC: fstps -4(%eax);");
    asm("loc_65F6AEF: jne loc_65F6AE0;");
    asm("loc_65F6AF1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6B00() // _sub_65F6B00
{
    __DEBUG_ASM(65F6B00);
    // chunk 0x65F6B00 _sub_65F6B00
    asm("loc_65F6B00: mov 4(%esp),%eax;");
    asm("loc_65F6B04: mov 8(%esp),%ecx;");
    asm("loc_65F6B08: sub %eax,%ecx;");
    asm("loc_65F6B0A: mov $0xC,%edx;");
    asm("loc_65F6B0F: nop;");
    asm("loc_65F6B10: flds 0xC(%esp);");
    asm("loc_65F6B14: add $4,%eax;");
    asm("loc_65F6B17: dec %edx;");
    asm("loc_65F6B18: fmuls -4(%ecx,%eax);");
    asm("loc_65F6B1C: fadds -4(%eax);");
    asm("loc_65F6B1F: fstps -4(%eax);");
    asm("loc_65F6B22: jne loc_65F6B10;");
    asm("loc_65F6B24: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6B30() // _sub_65F6B30
{
    __DEBUG_ASM(65F6B30);
    // chunk 0x65F6B30 _sub_65F6B30
    asm("loc_65F6B30: mov 8(%esp),%eax;");
    asm("loc_65F6B34: mov 0xC(%esp),%ecx;");
    asm("loc_65F6B38: flds 8(%eax);");
    asm("loc_65F6B3B: fmuls 8(%ecx);");
    asm("loc_65F6B3E: mov 4(%esp),%edx;");
    asm("loc_65F6B42: flds 4(%eax);");
    asm("loc_65F6B45: fmuls 4(%ecx);");
    asm("loc_65F6B48: faddp;");
    asm("loc_65F6B4A: flds (%eax);");
    asm("loc_65F6B4C: fmuls (%ecx);");
    asm("loc_65F6B4E: faddp;");
    asm("loc_65F6B50: fadds 0x24(%eax);");
    asm("loc_65F6B53: fstps (%edx);");
    asm("loc_65F6B55: flds 0x14(%eax);");
    asm("loc_65F6B58: fmuls 8(%ecx);");
    asm("loc_65F6B5B: flds 0xC(%eax);");
    asm("loc_65F6B5E: fmuls (%ecx);");
    asm("loc_65F6B60: faddp;");
    asm("loc_65F6B62: flds 0x10(%eax);");
    asm("loc_65F6B65: fmuls 4(%ecx);");
    asm("loc_65F6B68: faddp;");
    asm("loc_65F6B6A: fadds 0x28(%eax);");
    asm("loc_65F6B6D: fstps 4(%edx);");
    asm("loc_65F6B70: flds 0x20(%eax);");
    asm("loc_65F6B73: fmuls 8(%ecx);");
    asm("loc_65F6B76: flds 0x18(%eax);");
    asm("loc_65F6B79: fmuls (%ecx);");
    asm("loc_65F6B7B: faddp;");
    asm("loc_65F6B7D: flds 0x1C(%eax);");
    asm("loc_65F6B80: fmuls 4(%ecx);");
    asm("loc_65F6B83: faddp;");
    asm("loc_65F6B85: fadds 0x2C(%eax);");
    asm("loc_65F6B88: fstps 8(%edx);");
    asm("loc_65F6B8B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6B90() // _sub_65F6B90
{
    __DEBUG_ASM(65F6B90);
    // chunk 0x65F6B90 _sub_65F6B90
    asm("loc_65F6B90: mov 8(%esp),%ecx;");
    asm("loc_65F6B94: mov 0xC(%esp),%eax;");
    asm("loc_65F6B98: flds 8(%ecx);");
    asm("loc_65F6B9B: fmuls 8(%eax);");
    asm("loc_65F6B9E: mov 4(%esp),%edx;");
    asm("loc_65F6BA2: flds 4(%ecx);");
    asm("loc_65F6BA5: fmuls 4(%eax);");
    asm("loc_65F6BA8: faddp;");
    asm("loc_65F6BAA: flds (%ecx);");
    asm("loc_65F6BAC: fmuls (%eax);");
    asm("loc_65F6BAE: faddp;");
    asm("loc_65F6BB0: fstps (%edx);");
    asm("loc_65F6BB2: flds 0x14(%ecx);");
    asm("loc_65F6BB5: fmuls 8(%eax);");
    asm("loc_65F6BB8: flds 0xC(%ecx);");
    asm("loc_65F6BBB: fmuls (%eax);");
    asm("loc_65F6BBD: faddp;");
    asm("loc_65F6BBF: flds 0x10(%ecx);");
    asm("loc_65F6BC2: fmuls 4(%eax);");
    asm("loc_65F6BC5: faddp;");
    asm("loc_65F6BC7: fstps 4(%edx);");
    asm("loc_65F6BCA: flds 0x20(%ecx);");
    asm("loc_65F6BCD: fmuls 8(%eax);");
    asm("loc_65F6BD0: flds 0x18(%ecx);");
    asm("loc_65F6BD3: fmuls (%eax);");
    asm("loc_65F6BD5: faddp;");
    asm("loc_65F6BD7: flds 0x1C(%ecx);");
    asm("loc_65F6BDA: fmuls 4(%eax);");
    asm("loc_65F6BDD: faddp;");
    asm("loc_65F6BDF: fstps 8(%edx);");
    asm("loc_65F6BE2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F6BF0() // _sub_65F6BF0
{
    __DEBUG_ASM(65F6BF0);
    // chunk 0x65F6BF0 _sub_65F6BF0
    asm("loc_65F6BF0: sub $0x110,%esp;");
    asm("loc_65F6BF6: push %ebx;");
    asm("loc_65F6BF7: mov 0x118(%esp),%ebx;");
    asm("loc_65F6BFE: push %ebp;");
    asm("loc_65F6BFF: push %esi;");
    asm("loc_65F6C00: mov 4(%ebx),%esi;");
    asm("loc_65F6C03: add $0xC,%esi;");
    asm("loc_65F6C06: push %edi;");
    asm("loc_65F6C07: lea 0x24(%esi),%eax;");
    asm("loc_65F6C0A: push %eax;");
    asm("loc_65F6C0B: mov %ecx,%ebp;");
    asm("loc_65F6C0D: lea 0x28(%esp),%ecx;");
    asm("loc_65F6C11: push %esi;");
    asm("loc_65F6C12: push %ecx;");
    asm("loc_65F6C13: call _sub_65F7120;");
    asm("loc_65F6C18: add $0xC,%esp;");
    asm("loc_65F6C1B: lea 0x44(%esp),%edx;");
    asm("loc_65F6C1F: push %edx;");
    asm("loc_65F6C20: lea 0x28(%esp),%ecx;");
    asm("loc_65F6C24: call _sub_65F70B0;");
    asm("loc_65F6C29: lea 0x50(%esp),%eax;");
    asm("loc_65F6C2D: push %eax;");
    asm("loc_65F6C2E: mov %esi,%ecx;");
    asm("loc_65F6C30: call _sub_65F70D0;");
    asm("loc_65F6C35: mov 0x48(%esp),%edx;");
    asm("loc_65F6C39: mov %eax,%esi;");
    asm("loc_65F6C3B: mov 0x4C(%esp),%eax;");
    asm("loc_65F6C3F: mov $9,%ecx;");
    asm("loc_65F6C44: lea 0x80(%esp),%edi;");
    asm("loc_65F6C4B: rep movsl (%esi),(%edi);");
    asm("loc_65F6C4D: mov 0x44(%esp),%ecx;");
    asm("loc_65F6C51: xor %esi,%esi;");
    asm("loc_65F6C53: mov %eax,0xAC(%esp);");
    asm("loc_65F6C5A: mov %esi,0x40(%ebp);");
    asm("loc_65F6C5D: mov %esi,0x44(%ebp);");
    asm("loc_65F6C60: cmp %esi,8(%ebx);");
    asm("loc_65F6C63: mov %ecx,0xA4(%esp);");
    asm("loc_65F6C6A: mov %edx,0xA8(%esp);");
    asm("loc_65F6C71: mov %esi,0x18(%esp);");
    asm("loc_65F6C75: jle loc_65F6D2A;");
    asm("loc_65F6C7B: mov %esi,0x14(%esp);");
    asm("loc_65F6C7F: xor %edi,%edi;");
    asm("loc_65F6C81: mov 4(%ebx),%ecx;");
    asm("loc_65F6C84: mov 0x14(%esp),%eax;");
    asm("loc_65F6C88: mov 0x34(%ebp),%esi;");
    asm("loc_65F6C8B: add %edi,%ecx;");
    asm("loc_65F6C8D: add %eax,%esi;");
    asm("loc_65F6C8F: mov 0x3C(%ecx),%al;");
    asm("loc_65F6C92: test $2,%al;");
    asm("loc_65F6C94: jne loc_65F6CA1;");
    asm("loc_65F6C96: mov 0x12C(%esp),%dl;");
    asm("loc_65F6C9D: test %dl,%dl;");
    asm("loc_65F6C9F: je loc_65F6D06;");
    asm("loc_65F6CA1: and $0xFD,%al;");
    asm("loc_65F6CA3: mov %al,0x3C(%ecx);");
    asm("loc_65F6CA6: mov 4(%esi),%edx;");
    asm("loc_65F6CA9: test %edx,%edx;");
    asm("loc_65F6CAB: je loc_65F6D06;");
    asm("loc_65F6CAD: mov 8(%esi),%eax;");
    asm("loc_65F6CB0: sub %edx,%eax;");
    asm("loc_65F6CB2: sar $1,%eax;");
    asm("loc_65F6CB4: test %eax,%eax;");
    asm("loc_65F6CB6: je loc_65F6D06;");
    asm("loc_65F6CB8: mov 0x44(%ebp),%edx;");
    asm("loc_65F6CBB: mov 0x70(%ebp),%al;");
    asm("loc_65F6CBE: inc %edx;");
    asm("loc_65F6CBF: test %al,%al;");
    asm("loc_65F6CC1: mov %edx,0x44(%ebp);");
    asm("loc_65F6CC4: jne loc_65F6CDD;");
    asm("loc_65F6CC6: lea 0x40(%ecx),%esi;");
    asm("loc_65F6CC9: mov %esi,%ecx;");
    asm("loc_65F6CCB: call _sub_65F1660;");
    asm("loc_65F6CD0: xor %eax,%eax;");
    asm("loc_65F6CD2: mov %eax,0x2C(%esi);");
    asm("loc_65F6CD5: mov %eax,0x28(%esi);");
    asm("loc_65F6CD8: mov %eax,0x24(%esi);");
    asm("loc_65F6CDB: jmp loc_65F6D06;");
    asm("loc_65F6CDD: lea 0x80(%esp),%edx;");
    asm("loc_65F6CE4: push %edx;");
    asm("loc_65F6CE5: call _sub_65F1030;");
    asm("loc_65F6CEA: mov 4(%esi),%eax;");
    asm("loc_65F6CED: cmp %eax,8(%esi);");
    asm("loc_65F6CF0: je loc_65F6D06;");
    asm("loc_65F6CF2: movzwl (%eax),%ecx;");
    asm("loc_65F6CF5: mov 0x38(%ebp),%edx;");
    asm("loc_65F6CF8: movb $1,(%ecx,%edx);");
    asm("loc_65F6CFC: mov 8(%esi),%ecx;");
    asm("loc_65F6CFF: add $2,%eax;");
    asm("loc_65F6D02: cmp %eax,%ecx;");
    asm("loc_65F6D04: jne loc_65F6CF2;");
    asm("loc_65F6D06: mov 0x18(%esp),%eax;");
    asm("loc_65F6D0A: mov 0x14(%esp),%edx;");
    asm("loc_65F6D0E: mov 8(%ebx),%ecx;");
    asm("loc_65F6D11: inc %eax;");
    asm("loc_65F6D12: add $0x10,%edx;");
    asm("loc_65F6D15: add $0x70,%edi;");
    asm("loc_65F6D18: cmp %ecx,%eax;");
    asm("loc_65F6D1A: mov %eax,0x18(%esp);");
    asm("loc_65F6D1E: mov %edx,0x14(%esp);");
    asm("loc_65F6D22: jl loc_65F6C81;");
    asm("loc_65F6D28: xor %esi,%esi;");
    asm("loc_65F6D2A: mov 0xC(%ebp),%ebx;");
    asm("loc_65F6D2D: mov %ebx,%eax;");
    asm("loc_65F6D2F: and $0xC,%eax;");
    asm("loc_65F6D32: xor %edi,%edi;");
    asm("loc_65F6D34: cmp $0xC,%al;");
    asm("loc_65F6D36: jne loc_65F6D3F;");
    asm("loc_65F6D38: mov $0x1C,%edi;");
    asm("loc_65F6D3D: jmp loc_65F6D5F;");
    asm("loc_65F6D3F: mov %ebx,%ecx;");
    asm("loc_65F6D41: and $4,%ecx;");
    asm("loc_65F6D44: cmp $4,%cl;");
    asm("loc_65F6D47: jne loc_65F6D50;");
    asm("loc_65F6D49: mov $0x10,%edi;");
    asm("loc_65F6D4E: jmp loc_65F6D5F;");
    asm("loc_65F6D50: mov %ebx,%edx;");
    asm("loc_65F6D52: and $2,%edx;");
    asm("loc_65F6D55: cmp $2,%dl;");
    asm("loc_65F6D58: jne loc_65F6D5F;");
    asm("loc_65F6D5A: mov $0xC,%edi;");
    asm("loc_65F6D5F: test $0x10,%bl;");
    asm("loc_65F6D62: je loc_65F6D69;");
    asm("loc_65F6D64: mov $0xC,%esi;");
    asm("loc_65F6D69: push %ebx;");
    asm("loc_65F6D6A: call _sub_65F7220;");
    asm("loc_65F6D6F: push %ebx;");
    asm("loc_65F6D70: mov %eax,0x18(%esp);");
    asm("loc_65F6D74: call _sub_65F71C0;");
    asm("loc_65F6D79: mov 0x18(%esp),%ecx;");
    asm("loc_65F6D7D: mov (%ebp),%edx;");
    asm("loc_65F6D80: add %ecx,%esi;");
    asm("loc_65F6D82: add %esi,%eax;");
    asm("loc_65F6D84: add %edi,%eax;");
    asm("loc_65F6D86: mov %eax,0x48(%esp);");
    asm("loc_65F6D8A: mov 0x64(%ebp),%eax;");
    asm("loc_65F6D8D: add $8,%esp;");
    asm("loc_65F6D90: mov %ebp,%ecx;");
    asm("loc_65F6D92: mov %eax,0x10(%esp);");
    asm("loc_65F6D96: movl $0,0x3C(%esp);");
    asm("loc_65F6D9E: calll *4(%edx);");
    asm("loc_65F6DA1: mov _data_6603144,%esi;");
    asm("loc_65F6DA7: mov 0x128(%esp),%ecx;");
    asm("loc_65F6DAE: mov %eax,%ebx;");
    asm("loc_65F6DB0: mov 0xC(%ebp),%eax;");
    asm("loc_65F6DB3: push %ebx;");
    asm("loc_65F6DB4: push %eax;");
    asm("loc_65F6DB5: push %esi;");
    asm("loc_65F6DB6: call _sub_65F7170;");
    asm("loc_65F6DBB: test %al,%al;");
    asm("loc_65F6DBD: je loc_65F6DE8;");
    asm("loc_65F6DBF: mov 0x128(%esp),%eax;");
    asm("loc_65F6DC6: push %ebx;");
    asm("loc_65F6DC7: lea 8(%eax),%edi;");
    asm("loc_65F6DCA: mov (%eax),%eax;");
    asm("loc_65F6DCC: lea 0x40(%esp),%edx;");
    asm("loc_65F6DD0: push %edx;");
    asm("loc_65F6DD1: push %edi;");
    asm("loc_65F6DD2: push %eax;");
    asm("loc_65F6DD3: movl $0,(%edi);");
    asm("loc_65F6DD9: mov (%esi),%ecx;");
    asm("loc_65F6DDB: push %esi;");
    asm("loc_65F6DDC: calll *0x1C(%ecx);");
    asm("loc_65F6DDF: test %eax,%eax;");
    asm("loc_65F6DE1: setge %al;");
    asm("loc_65F6DE4: test %al,%al;");
    asm("loc_65F6DE6: jne loc_65F6DF7;");
    asm("loc_65F6DE8: pop %edi;");
    asm("loc_65F6DE9: pop %esi;");
    asm("loc_65F6DEA: pop %ebp;");
    asm("loc_65F6DEB: xor %al,%al;");
    asm("loc_65F6DED: pop %ebx;");
    asm("loc_65F6DEE: add $0x110,%esp;");
    asm("loc_65F6DF4: ret $0xC;");
    asm("loc_65F6DF7: mov 0x12C(%esp),%al;");
    asm("loc_65F6DFE: test %al,%al;");
    asm("loc_65F6E00: je loc_65F6E7B;");
    asm("loc_65F6E02: lea 0xB0(%esp),%ecx;");
    asm("loc_65F6E09: push %ecx;");
    asm("loc_65F6E0A: mov %ebp,%ecx;");
    asm("loc_65F6E0C: call _sub_65F90C0;");
    asm("loc_65F6E11: mov 0x10(%ebp),%ecx;");
    asm("loc_65F6E14: mov 0x128(%esp),%esi;");
    asm("loc_65F6E1B: mov _data_6603144,%eax;");
    asm("loc_65F6E20: mov (%eax),%edx;");
    asm("loc_65F6E22: push %ecx;");
    asm("loc_65F6E23: push $0;");
    asm("loc_65F6E25: lea 0xB8(%esp),%ecx;");
    asm("loc_65F6E2C: push %ecx;");
    asm("loc_65F6E2D: mov (%esi),%ecx;");
    asm("loc_65F6E2F: push %edi;");
    asm("loc_65F6E30: push %ecx;");
    asm("loc_65F6E31: push %eax;");
    asm("loc_65F6E32: calll *0x18(%edx);");
    asm("loc_65F6E35: test %eax,%eax;");
    asm("loc_65F6E37: jge loc_65F6E7B;");
    asm("loc_65F6E39: mov _import_6601008,%edx;");
    asm("loc_65F6E3F: push $_data_660275C;");
    asm("loc_65F6E44: push $0x134;");
    asm("loc_65F6E49: push $_data_6602710;");
    asm("loc_65F6E4E: mov $0x100002,%eax;");
    asm("loc_65F6E53: push $_data_66024C8;");
    asm("loc_65F6E58: push %eax;");
    asm("loc_65F6E59: calll *(%edx);");
    asm("loc_65F6E5B: mov (%esi),%edx;");
    asm("loc_65F6E5D: mov _data_6603144,%eax;");
    asm("loc_65F6E62: mov (%eax),%ecx;");
    asm("loc_65F6E64: add $0x14,%esp;");
    asm("loc_65F6E67: push %edx;");
    asm("loc_65F6E68: push %eax;");
    asm("loc_65F6E69: calll *0x20(%ecx);");
    asm("loc_65F6E6C: pop %edi;");
    asm("loc_65F6E6D: pop %esi;");
    asm("loc_65F6E6E: pop %ebp;");
    asm("loc_65F6E6F: xor %al,%al;");
    asm("loc_65F6E71: pop %ebx;");
    asm("loc_65F6E72: add $0x110,%esp;");
    asm("loc_65F6E78: ret $0xC;");
    asm("loc_65F6E7B: mov 0x24(%ebp),%eax;");
    asm("loc_65F6E7E: xor %ecx,%ecx;");
    asm("loc_65F6E80: cmp %ecx,%eax;");
    asm("loc_65F6E82: mov %ecx,0x20(%esp);");
    asm("loc_65F6E86: jbe loc_65F7087;");
    asm("loc_65F6E8C: mov 0x10(%esp),%eax;");
    asm("loc_65F6E90: add $8,%eax;");
    asm("loc_65F6E93: mov %eax,0x18(%esp);");
    asm("loc_65F6E97: mov %ecx,0x1C(%esp);");
    asm("loc_65F6E9B: nop;");
    asm("loc_65F6E9C: lea (%esp),%esp;");
    asm("loc_65F6EA0: mov 0x30(%ebp),%edx;");
    asm("loc_65F6EA3: mov 0x38(%ebp),%eax;");
    asm("loc_65F6EA6: add %ecx,%eax;");
    asm("loc_65F6EA8: lea (%edx,%ecx,8),%edi;");
    asm("loc_65F6EAB: cmpb $0,(%eax);");
    asm("loc_65F6EAE: je loc_65F7061;");
    asm("loc_65F6EB4: mov 0x124(%esp),%edx;");
    asm("loc_65F6EBB: movb $0,(%eax);");
    asm("loc_65F6EBE: incl 0x40(%ebp);");
    asm("loc_65F6EC1: mov 4(%edi),%eax;");
    asm("loc_65F6EC4: mov (%eax),%ecx;");
    asm("loc_65F6EC6: mov 4(%edx),%edx;");
    asm("loc_65F6EC9: imul $0x70,%ecx;");
    asm("loc_65F6ECC: mov 0x28(%ebp),%esi;");
    asm("loc_65F6ECF: mov (%edi),%ebx;");
    asm("loc_65F6ED1: lea 0x40(%ecx,%edx),%ecx;");
    asm("loc_65F6ED5: add 0x1C(%esp),%esi;");
    asm("loc_65F6ED9: cmp $1,%ebx;");
    asm("loc_65F6EDC: mov %ecx,0x10(%esp);");
    asm("loc_65F6EE0: jne loc_65F6F09;");
    asm("loc_65F6EE2: push %esi;");
    asm("loc_65F6EE3: push %ecx;");
    asm("loc_65F6EE4: lea 0x2C(%esp),%eax;");
    asm("loc_65F6EE8: push %eax;");
    asm("loc_65F6EE9: call _sub_65F6B30;");
    asm("loc_65F6EEE: mov 0x1C(%esp),%ecx;");
    asm("loc_65F6EF2: add $0xC,%esi;");
    asm("loc_65F6EF5: push %esi;");
    asm("loc_65F6EF6: push %ecx;");
    asm("loc_65F6EF7: lea 0x44(%esp),%edx;");
    asm("loc_65F6EFB: push %edx;");
    asm("loc_65F6EFC: call _sub_65F6B90;");
    asm("loc_65F6F01: add $0x18,%esp;");
    asm("loc_65F6F04: jmp loc_65F7033;");
    asm("loc_65F6F09: mov 4(%eax),%eax;");
    asm("loc_65F6F0C: push %eax;");
    asm("loc_65F6F0D: push %ecx;");
    asm("loc_65F6F0E: lea 0x58(%esp),%ecx;");
    asm("loc_65F6F12: push %ecx;");
    asm("loc_65F6F13: call _sub_65F6AD0;");
    asm("loc_65F6F18: add $0xC,%esp;");
    asm("loc_65F6F1B: dec %ebx;");
    asm("loc_65F6F1C: dec %ebx;");
    asm("loc_65F6F1D: je loc_65F6F77;");
    asm("loc_65F6F1F: dec %ebx;");
    asm("loc_65F6F20: je loc_65F6F4E;");
    asm("loc_65F6F22: dec %ebx;");
    asm("loc_65F6F23: jne loc_65F6FA0;");
    asm("loc_65F6F25: mov 4(%edi),%eax;");
    asm("loc_65F6F28: mov 0x1C(%eax),%edx;");
    asm("loc_65F6F2B: mov 0x18(%eax),%eax;");
    asm("loc_65F6F2E: mov 0x124(%esp),%ecx;");
    asm("loc_65F6F35: imul $0x70,%eax;");
    asm("loc_65F6F38: push %edx;");
    asm("loc_65F6F39: mov 4(%ecx),%edx;");
    asm("loc_65F6F3C: lea 0x40(%eax,%edx),%eax;");
    asm("loc_65F6F40: push %eax;");
    asm("loc_65F6F41: lea 0x58(%esp),%ecx;");
    asm("loc_65F6F45: push %ecx;");
    asm("loc_65F6F46: call _sub_65F6B00;");
    asm("loc_65F6F4B: add $0xC,%esp;");
    asm("loc_65F6F4E: mov 4(%edi),%eax;");
    asm("loc_65F6F51: mov 0x14(%eax),%edx;");
    asm("loc_65F6F54: mov 0x10(%eax),%eax;");
    asm("loc_65F6F57: mov 0x124(%esp),%ecx;");
    asm("loc_65F6F5E: imul $0x70,%eax;");
    asm("loc_65F6F61: push %edx;");
    asm("loc_65F6F62: mov 4(%ecx),%edx;");
    asm("loc_65F6F65: lea 0x40(%eax,%edx),%eax;");
    asm("loc_65F6F69: push %eax;");
    asm("loc_65F6F6A: lea 0x58(%esp),%ecx;");
    asm("loc_65F6F6E: push %ecx;");
    asm("loc_65F6F6F: call _sub_65F6B00;");
    asm("loc_65F6F74: add $0xC,%esp;");
    asm("loc_65F6F77: mov 4(%edi),%edi;");
    asm("loc_65F6F7A: mov 8(%edi),%eax;");
    asm("loc_65F6F7D: mov 0xC(%edi),%edx;");
    asm("loc_65F6F80: imul $0x70,%eax;");
    asm("loc_65F6F83: mov 0x124(%esp),%ecx;");
    asm("loc_65F6F8A: push %edx;");
    asm("loc_65F6F8B: mov 4(%ecx),%edx;");
    asm("loc_65F6F8E: lea 0x40(%eax,%edx),%eax;");
    asm("loc_65F6F92: push %eax;");
    asm("loc_65F6F93: lea 0x58(%esp),%ecx;");
    asm("loc_65F6F97: push %ecx;");
    asm("loc_65F6F98: call _sub_65F6B00;");
    asm("loc_65F6F9D: add $0xC,%esp;");
    asm("loc_65F6FA0: push %esi;");
    asm("loc_65F6FA1: lea 0x54(%esp),%edx;");
    asm("loc_65F6FA5: push %edx;");
    asm("loc_65F6FA6: lea 0x2C(%esp),%eax;");
    asm("loc_65F6FAA: push %eax;");
    asm("loc_65F6FAB: call _sub_65F6B30;");
    asm("loc_65F6FB0: add $0xC,%esi;");
    asm("loc_65F6FB3: push %esi;");
    asm("loc_65F6FB4: lea 0x60(%esp),%ecx;");
    asm("loc_65F6FB8: push %ecx;");
    asm("loc_65F6FB9: lea 0x44(%esp),%edx;");
    asm("loc_65F6FBD: push %edx;");
    asm("loc_65F6FBE: call _sub_65F6B90;");
    asm("loc_65F6FC3: flds 0x4C(%esp);");
    asm("loc_65F6FC7: fmuls 0x4C(%esp);");
    asm("loc_65F6FCB: mov $0x5F3759DF,%ecx;");
    asm("loc_65F6FD0: flds 0x50(%esp);");
    asm("loc_65F6FD4: add $0x18,%esp;");
    asm("loc_65F6FD7: fmuls 0x38(%esp);");
    asm("loc_65F6FDB: faddp;");
    asm("loc_65F6FDD: flds 0x30(%esp);");
    asm("loc_65F6FE1: fmuls 0x30(%esp);");
    asm("loc_65F6FE5: faddp;");
    asm("loc_65F6FE7: fstps 0x10(%esp);");
    asm("loc_65F6FEB: mov 0x10(%esp),%eax;");
    asm("loc_65F6FEF: sar $1,%eax;");
    asm("loc_65F6FF1: sub %eax,%ecx;");
    asm("loc_65F6FF3: mov %ecx,0x14(%esp);");
    asm("loc_65F6FF7: flds 0x14(%esp);");
    asm("loc_65F6FFB: fmuls 0x14(%esp);");
    asm("loc_65F6FFF: fmuls 0x10(%esp);");
    asm("loc_65F7003: fmuls _data_6601328;");
    asm("loc_65F7009: fsubrs _data_6601354;");
    asm("loc_65F700F: fmuls 0x14(%esp);");
    asm("loc_65F7013: flds 0x30(%esp);");
    asm("loc_65F7017: fmul %st(1),%st;");
    asm("loc_65F7019: fstps 0x30(%esp);");
    asm("loc_65F701D: flds 0x34(%esp);");
    asm("loc_65F7021: fmul %st(1),%st;");
    asm("loc_65F7023: fstps 0x34(%esp);");
    asm("loc_65F7027: flds 0x38(%esp);");
    asm("loc_65F702B: fmul %st(1),%st;");
    asm("loc_65F702D: fstps 0x38(%esp);");
    asm("loc_65F7031: fstp %st(0);");
    asm("loc_65F7033: mov 0x18(%esp),%ecx;");
    asm("loc_65F7037: mov -4(%ecx),%eax;");
    asm("loc_65F703A: mov (%ecx),%edx;");
    asm("loc_65F703C: cmp %edx,%eax;");
    asm("loc_65F703E: je loc_65F705D;");
    asm("loc_65F7040: mov (%eax),%edi;");
    asm("loc_65F7042: imul 0x40(%esp),%edi;");
    asm("loc_65F7047: add 0x3C(%esp),%edi;");
    asm("loc_65F704B: add $4,%eax;");
    asm("loc_65F704E: cmp %edx,%eax;");
    asm("loc_65F7050: mov $6,%ecx;");
    asm("loc_65F7055: lea 0x24(%esp),%esi;");
    asm("loc_65F7059: rep movsl (%esi),(%edi);");
    asm("loc_65F705B: jne loc_65F7040;");
    asm("loc_65F705D: mov 0x20(%esp),%ecx;");
    asm("loc_65F7061: mov 0x1C(%esp),%esi;");
    asm("loc_65F7065: mov 0x18(%esp),%edx;");
    asm("loc_65F7069: mov 0x24(%ebp),%eax;");
    asm("loc_65F706C: inc %ecx;");
    asm("loc_65F706D: add $0x18,%esi;");
    asm("loc_65F7070: add $0x10,%edx;");
    asm("loc_65F7073: cmp %eax,%ecx;");
    asm("loc_65F7075: mov %ecx,0x20(%esp);");
    asm("loc_65F7079: mov %esi,0x1C(%esp);");
    asm("loc_65F707D: mov %edx,0x18(%esp);");
    asm("loc_65F7081: jb loc_65F6EA0;");
    asm("loc_65F7087: mov 0x128(%esp),%ecx;");
    asm("loc_65F708E: mov (%ecx),%ecx;");
    asm("loc_65F7090: mov _data_6603144,%eax;");
    asm("loc_65F7095: mov (%eax),%edx;");
    asm("loc_65F7097: push %ecx;");
    asm("loc_65F7098: push %eax;");
    asm("loc_65F7099: calll *0x20(%edx);");
    asm("loc_65F709C: pop %edi;");
    asm("loc_65F709D: pop %esi;");
    asm("loc_65F709E: pop %ebp;");
    asm("loc_65F709F: mov $1,%al;");
    asm("loc_65F70A1: pop %ebx;");
    asm("loc_65F70A2: add $0x110,%esp;");
    asm("loc_65F70A8: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F70B0() // _sub_65F70B0
{
    __DEBUG_ASM(65F70B0);
    // chunk 0x65F70B0 _sub_65F70B0
    asm("loc_65F70B0: flds 8(%ecx);");
    asm("loc_65F70B3: mov 4(%esp),%eax;");
    asm("loc_65F70B7: fchs;");
    asm("loc_65F70B9: flds 4(%ecx);");
    asm("loc_65F70BC: fchs;");
    asm("loc_65F70BE: flds (%ecx);");
    asm("loc_65F70C0: fchs;");
    asm("loc_65F70C2: fstps (%eax);");
    asm("loc_65F70C4: fstps 4(%eax);");
    asm("loc_65F70C7: fstps 8(%eax);");
    asm("loc_65F70CA: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F70D0() // _sub_65F70D0
{
    __DEBUG_ASM(65F70D0);
    // chunk 0x65F70D0 _sub_65F70D0
    asm("loc_65F70D0: push %ecx;");
    asm("loc_65F70D1: flds 0x20(%ecx);");
    asm("loc_65F70D4: mov 0xC(%ecx),%eax;");
    asm("loc_65F70D7: flds 0x14(%ecx);");
    asm("loc_65F70DA: mov %eax,(%esp);");
    asm("loc_65F70DE: flds 8(%ecx);");
    asm("loc_65F70E1: mov 8(%esp),%eax;");
    asm("loc_65F70E5: flds 0x1C(%ecx);");
    asm("loc_65F70E8: flds 0x10(%ecx);");
    asm("loc_65F70EB: flds 4(%ecx);");
    asm("loc_65F70EE: flds 0x18(%ecx);");
    asm("loc_65F70F1: flds (%ecx);");
    asm("loc_65F70F3: mov (%esp),%ecx;");
    asm("loc_65F70F7: fstps (%eax);");
    asm("loc_65F70F9: mov %ecx,4(%eax);");
    asm("loc_65F70FC: fstps 8(%eax);");
    asm("loc_65F70FF: fstps 0xC(%eax);");
    asm("loc_65F7102: fstps 0x10(%eax);");
    asm("loc_65F7105: fstps 0x14(%eax);");
    asm("loc_65F7108: fstps 0x18(%eax);");
    asm("loc_65F710B: fstps 0x1C(%eax);");
    asm("loc_65F710E: fstps 0x20(%eax);");
    asm("loc_65F7111: pop %ecx;");
    asm("loc_65F7112: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7120() // _sub_65F7120
{
    __DEBUG_ASM(65F7120);
    // chunk 0x65F7120 _sub_65F7120
    asm("loc_65F7120: mov _data_66031A4,%eax;");
    asm("loc_65F7125: sub $0xC,%esp;");
    asm("loc_65F7128: test %eax,%eax;");
    asm("loc_65F712A: jne loc_65F7136;");
    asm("loc_65F712C: call _sub_6600DE0;");
    asm("loc_65F7131: mov %eax,_data_66031A4;");
    asm("loc_65F7136: mov 0x18(%esp),%edx;");
    asm("loc_65F713A: mov (%eax),%ecx;");
    asm("loc_65F713C: push %edx;");
    asm("loc_65F713D: mov 0x18(%esp),%edx;");
    asm("loc_65F7141: push %edx;");
    asm("loc_65F7142: lea 8(%esp),%edx;");
    asm("loc_65F7146: push %edx;");
    asm("loc_65F7147: push %eax;");
    asm("loc_65F7148: calll *0x38(%ecx);");
    asm("loc_65F714B: mov 0x10(%esp),%eax;");
    asm("loc_65F714F: mov (%esp),%edx;");
    asm("loc_65F7153: mov %eax,%ecx;");
    asm("loc_65F7155: mov %edx,(%ecx);");
    asm("loc_65F7157: mov 4(%esp),%edx;");
    asm("loc_65F715B: mov %edx,4(%ecx);");
    asm("loc_65F715E: mov 8(%esp),%edx;");
    asm("loc_65F7162: mov %edx,8(%ecx);");
    asm("loc_65F7165: add $0xC,%esp;");
    asm("loc_65F7168: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7170() // _sub_65F7170
{
    __DEBUG_ASM(65F7170);
    // chunk 0x65F7170 _sub_65F7170
    asm("loc_65F7170: mov 8(%esp),%eax;");
    asm("loc_65F7174: push %esi;");
    asm("loc_65F7175: mov %ecx,%esi;");
    asm("loc_65F7177: mov (%esi),%edx;");
    asm("loc_65F7179: push %edi;");
    asm("loc_65F717A: mov 0xC(%esp),%edi;");
    asm("loc_65F717E: push %edx;");
    asm("loc_65F717F: mov %eax,4(%esi);");
    asm("loc_65F7182: movl $0,8(%esi);");
    asm("loc_65F7189: mov (%edi),%ecx;");
    asm("loc_65F718B: push %edi;");
    asm("loc_65F718C: calll *0x30(%ecx);");
    asm("loc_65F718F: test %eax,%eax;");
    asm("loc_65F7191: setne %al;");
    asm("loc_65F7194: test %al,%al;");
    asm("loc_65F7196: jne loc_65F71B5;");
    asm("loc_65F7198: mov (%edi),%eax;");
    asm("loc_65F719A: push %esi;");
    asm("loc_65F719B: push %edi;");
    asm("loc_65F719C: calll *0x10(%eax);");
    asm("loc_65F719F: mov 0xC(%esi),%edx;");
    asm("loc_65F71A2: mov 4(%esi),%eax;");
    asm("loc_65F71A5: mov (%edi),%ecx;");
    asm("loc_65F71A7: push $0;");
    asm("loc_65F71A9: push %esi;");
    asm("loc_65F71AA: push %edx;");
    asm("loc_65F71AB: push %eax;");
    asm("loc_65F71AC: push %edi;");
    asm("loc_65F71AD: calll *0xC(%ecx);");
    asm("loc_65F71B0: test %eax,%eax;");
    asm("loc_65F71B2: setge %al;");
    asm("loc_65F71B5: pop %edi;");
    asm("loc_65F71B6: pop %esi;");
    asm("loc_65F71B7: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F71C0() // _sub_65F71C0
{
    asm("jmp dgb_65F71C0;"); // jumptable skip
    asm(".long _jmp_65F7210;"); // jumptable address
    __DEBUG_ASM(65F71C0);
    // chunk 0x65F71C0 _sub_65F71C0
    asm("loc_65F71C0: push %edi;");
    asm("loc_65F71C1: mov 8(%esp),%edi;");
    asm("loc_65F71C5: mov %edi,%edx;");
    asm("loc_65F71C7: shr $8,%edx;");
    asm("loc_65F71CA: xor %eax,%eax;");
    asm("loc_65F71CC: and $0xF,%edx;");
    asm("loc_65F71CF: jle loc_65F720C;");
    asm("loc_65F71D1: push %esi;");
    asm("loc_65F71D2: mov $0x10,%ecx;");
    asm("loc_65F71D7: mov %edx,%esi;");
    asm("loc_65F71D9: lea (%esp),%esp;");
    asm("loc_65F71E0: mov %edi,%edx;");
    asm("loc_65F71E2: shr %cl,%edx;");
    asm("loc_65F71E4: and $3,%edx;");
    asm("loc_65F71E7: cmp $3,%edx;");
    asm("loc_65F71EA: ja loc_65F7205;");
    asm("loc_65F71EC: jmpl *_jmp_65F7210(,%edx,4);");
    asm("loc_65F71F3: add $4,%eax;");
    asm("loc_65F71F6: jmp loc_65F7205;");
    asm("loc_65F71F8: add $8,%eax;");
    asm("loc_65F71FB: jmp loc_65F7205;");
    asm("loc_65F71FD: add $0xC,%eax;");
    asm("loc_65F7200: jmp loc_65F7205;");
    asm("loc_65F7202: add $0x10,%eax;");
    asm("loc_65F7205: add $2,%ecx;");
    asm("loc_65F7208: dec %esi;");
    asm("loc_65F7209: jne loc_65F71E0;");
    asm("loc_65F720B: pop %esi;");
    asm("loc_65F720C: pop %edi;");
    asm("loc_65F720D: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_65F7210: .long loc_65F71F8;");
    asm(".long loc_65F71FD;");
    asm(".long loc_65F7202;");
    asm(".long loc_65F71F3;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65F71C0);
_naked _weak void _sub_65F7220() // _sub_65F7220
{
    __DEBUG_ASM(65F7220);
    // chunk 0x65F7220 _sub_65F7220
    asm("loc_65F7220: mov 4(%esp),%cl;");
    asm("loc_65F7224: xor %eax,%eax;");
    asm("loc_65F7226: test $0x40,%cl;");
    asm("loc_65F7229: je loc_65F7230;");
    asm("loc_65F722B: mov $4,%eax;");
    asm("loc_65F7230: test %cl,%cl;");
    asm("loc_65F7232: jns loc_65F7237;");
    asm("loc_65F7234: add $4,%eax;");
    asm("loc_65F7237: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7240() // _sub_65F7240
{
    __DEBUG_ASM(65F7240);
    // chunk 0x65F7240 _sub_65F7240
    asm("loc_65F7240: sub $8,%esp;");
    asm("loc_65F7243: push %ebx;");
    asm("loc_65F7244: push %ebp;");
    asm("loc_65F7245: push %esi;");
    asm("loc_65F7246: push %edi;");
    asm("loc_65F7247: mov %ecx,%edi;");
    asm("loc_65F7249: mov (%edi),%eax;");
    asm("loc_65F724B: calll *(%eax);");
    asm("loc_65F724D: mov 0x1C(%esp),%ebp;");
    asm("loc_65F7251: mov (%ebp),%edx;");
    asm("loc_65F7254: mov _data_6603148,%esi;");
    asm("loc_65F725A: push %edx;");
    asm("loc_65F725B: movl $0,0x14(%esp);");
    asm("loc_65F7263: mov (%esi),%ecx;");
    asm("loc_65F7265: push %esi;");
    asm("loc_65F7266: mov %eax,%ebx;");
    asm("loc_65F7268: calll *0x2C(%ecx);");
    asm("loc_65F726B: test %eax,%eax;");
    asm("loc_65F726D: setne %al;");
    asm("loc_65F7270: test %al,%al;");
    asm("loc_65F7272: jne loc_65F7295;");
    asm("loc_65F7274: mov (%esi),%eax;");
    asm("loc_65F7276: push %ebp;");
    asm("loc_65F7277: push %esi;");
    asm("loc_65F7278: calll *0x10(%eax);");
    asm("loc_65F727B: mov 8(%ebp),%edx;");
    asm("loc_65F727E: mov (%esi),%ecx;");
    asm("loc_65F7280: push $0;");
    asm("loc_65F7282: push %ebp;");
    asm("loc_65F7283: push %edx;");
    asm("loc_65F7284: push %esi;");
    asm("loc_65F7285: calll *0xC(%ecx);");
    asm("loc_65F7288: test %eax,%eax;");
    asm("loc_65F728A: setge %al;");
    asm("loc_65F728D: test %al,%al;");
    asm("loc_65F728F: je loc_65F7327;");
    asm("loc_65F7295: push %ebx;");
    asm("loc_65F7296: lea 0x14(%esp),%edx;");
    asm("loc_65F729A: push %edx;");
    asm("loc_65F729B: lea 4(%ebp),%eax;");
    asm("loc_65F729E: push %eax;");
    asm("loc_65F729F: movl $0,(%eax);");
    asm("loc_65F72A5: mov (%ebp),%eax;");
    asm("loc_65F72A8: mov (%esi),%ecx;");
    asm("loc_65F72AA: push %eax;");
    asm("loc_65F72AB: push %esi;");
    asm("loc_65F72AC: calll *0x1C(%ecx);");
    asm("loc_65F72AF: test %eax,%eax;");
    asm("loc_65F72B1: setge %bl;");
    asm("loc_65F72B4: test %bl,%bl;");
    asm("loc_65F72B6: mov %bl,0x1C(%esp);");
    asm("loc_65F72BA: je loc_65F7325;");
    asm("loc_65F72BC: mov 0x18(%edi),%eax;");
    asm("loc_65F72BF: xor %edx,%edx;");
    asm("loc_65F72C1: cmp %edx,%eax;");
    asm("loc_65F72C3: mov %edx,0x14(%esp);");
    asm("loc_65F72C7: jle loc_65F7316;");
    asm("loc_65F72C9: lea (%esp),%esp;");
    asm("loc_65F72D0: mov 0x1C(%edi),%eax;");
    asm("loc_65F72D3: mov 0x1C(%eax,%edx),%esi;");
    asm("loc_65F72D7: add %edx,%eax;");
    asm("loc_65F72D9: xor %ecx,%ecx;");
    asm("loc_65F72DB: test %esi,%esi;");
    asm("loc_65F72DD: jbe loc_65F7303;");
    asm("loc_65F72DF: nop;");
    asm("loc_65F72E0: mov 0x18(%eax),%esi;");
    asm("loc_65F72E3: mov (%esi,%ecx,2),%si;");
    asm("loc_65F72E7: add 0x10(%eax),%si;");
    asm("loc_65F72EB: mov 0x10(%esp),%ebx;");
    asm("loc_65F72EF: mov %si,(%ebx);");
    asm("loc_65F72F2: addl $2,0x10(%esp);");
    asm("loc_65F72F7: mov 0x1C(%eax),%esi;");
    asm("loc_65F72FA: inc %ecx;");
    asm("loc_65F72FB: cmp %esi,%ecx;");
    asm("loc_65F72FD: jb loc_65F72E0;");
    asm("loc_65F72FF: mov 0x1C(%esp),%bl;");
    asm("loc_65F7303: mov 0x14(%esp),%eax;");
    asm("loc_65F7307: mov 0x18(%edi),%ecx;");
    asm("loc_65F730A: inc %eax;");
    asm("loc_65F730B: add $0x24,%edx;");
    asm("loc_65F730E: cmp %ecx,%eax;");
    asm("loc_65F7310: mov %eax,0x14(%esp);");
    asm("loc_65F7314: jl loc_65F72D0;");
    asm("loc_65F7316: mov (%ebp),%edx;");
    asm("loc_65F7319: mov _data_6603148,%eax;");
    asm("loc_65F731E: mov (%eax),%ecx;");
    asm("loc_65F7320: push %edx;");
    asm("loc_65F7321: push %eax;");
    asm("loc_65F7322: calll *0x20(%ecx);");
    asm("loc_65F7325: mov %bl,%al;");
    asm("loc_65F7327: pop %edi;");
    asm("loc_65F7328: pop %esi;");
    asm("loc_65F7329: pop %ebp;");
    asm("loc_65F732A: pop %ebx;");
    asm("loc_65F732B: add $8,%esp;");
    asm("loc_65F732E: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7340() // _sub_65F7340
{
    __DEBUG_ASM(65F7340);
    // chunk 0x65F7340 _sub_65F7340
    asm("loc_65F7340: push %esi;");
    asm("loc_65F7341: mov %ecx,%esi;");
    asm("loc_65F7343: mov 0x1C(%esi),%ecx;");
    asm("loc_65F7346: xor %eax,%eax;");
    asm("loc_65F7348: test %ecx,%ecx;");
    asm("loc_65F734A: jbe loc_65F7399;");
    asm("loc_65F734C: mov 0x10(%esi),%eax;");
    asm("loc_65F734F: push %ebx;");
    asm("loc_65F7350: mov 0xC(%esp),%ebx;");
    asm("loc_65F7354: push %edi;");
    asm("loc_65F7355: mov 0x14(%esi),%edi;");
    asm("loc_65F7358: sub %eax,%edi;");
    asm("loc_65F735A: mov 0xC(%esi),%eax;");
    asm("loc_65F735D: mov %eax,0x20(%ebx);");
    asm("loc_65F7360: mov 8(%esi),%eax;");
    asm("loc_65F7363: mov (%eax),%ecx;");
    asm("loc_65F7365: push %ebx;");
    asm("loc_65F7366: push %eax;");
    asm("loc_65F7367: inc %edi;");
    asm("loc_65F7368: calll *0x20(%ecx);");
    asm("loc_65F736B: mov 0x1C(%esi),%ecx;");
    asm("loc_65F736E: mov 8(%esi),%eax;");
    asm("loc_65F7371: mov (%eax),%edx;");
    asm("loc_65F7373: push $0x100;");
    asm("loc_65F7378: push %ecx;");
    asm("loc_65F7379: mov 0x1C(%esp),%ecx;");
    asm("loc_65F737D: push %ecx;");
    asm("loc_65F737E: mov 0x10(%esi),%ecx;");
    asm("loc_65F7381: push %edi;");
    asm("loc_65F7382: push %ecx;");
    asm("loc_65F7383: mov (%esi),%ecx;");
    asm("loc_65F7385: push %ecx;");
    asm("loc_65F7386: push %ebx;");
    asm("loc_65F7387: push %eax;");
    asm("loc_65F7388: calll *0x28(%edx);");
    asm("loc_65F738B: mov 8(%esi),%esi;");
    asm("loc_65F738E: mov (%esi),%edx;");
    asm("loc_65F7390: push %ebx;");
    asm("loc_65F7391: push %esi;");
    asm("loc_65F7392: calll *0x24(%edx);");
    asm("loc_65F7395: mov %edi,%eax;");
    asm("loc_65F7397: pop %edi;");
    asm("loc_65F7398: pop %ebx;");
    asm("loc_65F7399: pop %esi;");
    asm("loc_65F739A: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F73A0() // _sub_65F73A0
{
    __DEBUG_ASM(65F73A0);
    // chunk 0x65F73A0 _sub_65F73A0
    asm("loc_65F73A0: sub $0x9C,%esp;");
    asm("loc_65F73A6: push %ebx;");
    asm("loc_65F73A7: push %ebp;");
    asm("loc_65F73A8: push %esi;");
    asm("loc_65F73A9: push %edi;");
    asm("loc_65F73AA: mov 0xB4(%esp),%edi;");
    asm("loc_65F73B1: mov (%edi),%eax;");
    asm("loc_65F73B3: mov 4(%eax),%ebp;");
    asm("loc_65F73B6: mov 0xB0(%esp),%eax;");
    asm("loc_65F73BD: mov %ecx,%ebx;");
    asm("loc_65F73BF: mov (%eax),%ecx;");
    asm("loc_65F73C1: push %eax;");
    asm("loc_65F73C2: add $0xC,%ebp;");
    asm("loc_65F73C5: calll *0x40(%ecx);");
    asm("loc_65F73C8: lea 0x18(%esp),%ecx;");
    asm("loc_65F73CC: push %ecx;");
    asm("loc_65F73CD: mov %eax,%esi;");
    asm("loc_65F73CF: mov _data_6603130,%eax;");
    asm("loc_65F73D4: push $7;");
    asm("loc_65F73D6: movl $1,0x20(%esp);");
    asm("loc_65F73DE: mov (%eax),%edx;");
    asm("loc_65F73E0: push %eax;");
    asm("loc_65F73E1: mov %esi,0x1C(%esp);");
    asm("loc_65F73E5: calll *0x18(%edx);");
    asm("loc_65F73E8: mov 0x18(%esp),%eax;");
    asm("loc_65F73EC: test %eax,%eax;");
    asm("loc_65F73EE: je loc_65F743C;");
    asm("loc_65F73F0: mov _data_66031A4,%eax;");
    asm("loc_65F73F5: test %eax,%eax;");
    asm("loc_65F73F7: jne loc_65F7403;");
    asm("loc_65F73F9: call _sub_6600DE0;");
    asm("loc_65F73FE: mov %eax,_data_66031A4;");
    asm("loc_65F7403: mov (%eax),%edx;");
    asm("loc_65F7405: push %ebp;");
    asm("loc_65F7406: push %esi;");
    asm("loc_65F7407: lea 0x30(%esp),%ecx;");
    asm("loc_65F740B: push %ecx;");
    asm("loc_65F740C: push %eax;");
    asm("loc_65F740D: calll *0x1C(%edx);");
    asm("loc_65F7410: mov _data_6603130,%eax;");
    asm("loc_65F7415: mov $0xC,%ecx;");
    asm("loc_65F741A: lea 0x28(%esp),%esi;");
    asm("loc_65F741E: lea 0x7C(%esp),%edi;");
    asm("loc_65F7422: rep movsl (%esi),(%edi);");
    asm("loc_65F7424: mov (%eax),%edx;");
    asm("loc_65F7426: lea 0x7C(%esp),%ecx;");
    asm("loc_65F742A: push %ecx;");
    asm("loc_65F742B: push %eax;");
    asm("loc_65F742C: calll *0x7C(%edx);");
    asm("loc_65F742F: mov 0xB4(%esp),%edi;");
    asm("loc_65F7436: mov 0x10(%esp),%esi;");
    asm("loc_65F743A: jmp loc_65F74AC;");
    asm("loc_65F743C: mov _data_6603130,%eax;");
    asm("loc_65F7441: lea 0x28(%esp),%ecx;");
    asm("loc_65F7445: push %ecx;");
    asm("loc_65F7446: movl $0x3F800000,0x4C(%esp);");
    asm("loc_65F744E: movl $0x3F800000,0x3C(%esp);");
    asm("loc_65F7456: movl $0x3F800000,0x2C(%esp);");
    asm("loc_65F745E: movl $0,0x48(%esp);");
    asm("loc_65F7466: movl $0,0x44(%esp);");
    asm("loc_65F746E: movl $0,0x40(%esp);");
    asm("loc_65F7476: movl $0,0x38(%esp);");
    asm("loc_65F747E: movl $0,0x34(%esp);");
    asm("loc_65F7486: movl $0,0x30(%esp);");
    asm("loc_65F748E: movl $0,0x58(%esp);");
    asm("loc_65F7496: movl $0,0x54(%esp);");
    asm("loc_65F749E: movl $0,0x50(%esp);");
    asm("loc_65F74A6: mov (%eax),%edx;");
    asm("loc_65F74A8: push %eax;");
    asm("loc_65F74A9: calll *0x6C(%edx);");
    asm("loc_65F74AC: mov (%edi),%edx;");
    asm("loc_65F74AE: mov 4(%edx),%eax;");
    asm("loc_65F74B1: mov 4(%eax),%ecx;");
    asm("loc_65F74B4: lea 0x24(%edi),%eax;");
    asm("loc_65F74B7: mov %ecx,0x58(%esp);");
    asm("loc_65F74BB: mov 0x18(%ebx),%ecx;");
    asm("loc_65F74BE: mov %ebp,0x5C(%esp);");
    asm("loc_65F74C2: xor %ebp,%ebp;");
    asm("loc_65F74C4: mov %eax,0x70(%esp);");
    asm("loc_65F74C8: xor %eax,%eax;");
    asm("loc_65F74CA: cmp %ebp,%ecx;");
    asm("loc_65F74CC: lea 0x14(%edi),%edx;");
    asm("loc_65F74CF: mov %esi,0x60(%esp);");
    asm("loc_65F74D3: mov %edx,0x6C(%esp);");
    asm("loc_65F74D7: mov %ebp,0x64(%esp);");
    asm("loc_65F74DB: mov %ebp,0x68(%esp);");
    asm("loc_65F74DF: mov %ebp,0x1C(%esp);");
    asm("loc_65F74E3: mov %ebp,0x20(%esp);");
    asm("loc_65F74E7: mov %eax,0x24(%esp);");
    asm("loc_65F74EB: mov %ebp,0x10(%esp);");
    asm("loc_65F74EF: jle loc_65F757E;");
    asm("loc_65F74F5: mov %ebp,0x14(%esp);");
    asm("loc_65F74F9: lea (%esp),%esp;");
    asm("loc_65F7500: mov 0x1C(%ebx),%esi;");
    asm("loc_65F7503: mov 0x14(%esp),%ecx;");
    asm("loc_65F7507: mov 0x58(%ebx),%eax;");
    asm("loc_65F750A: add %ecx,%esi;");
    asm("loc_65F750C: test %eax,%eax;");
    asm("loc_65F750E: je loc_65F753B;");
    asm("loc_65F7510: mov 0x20(%esi),%eax;");
    asm("loc_65F7513: test %eax,%eax;");
    asm("loc_65F7515: jl loc_65F753B;");
    asm("loc_65F7517: mov 0x5C(%ebx),%edx;");
    asm("loc_65F751A: lea (%eax,%eax,8),%ecx;");
    asm("loc_65F751D: lea (%edx,%ecx,4),%eax;");
    asm("loc_65F7520: mov (%edi),%ecx;");
    asm("loc_65F7522: mov %eax,0x1C(%esp);");
    asm("loc_65F7526: mov (%eax),%edx;");
    asm("loc_65F7528: mov 4(%ecx),%eax;");
    asm("loc_65F752B: imul $0x70,%edx;");
    asm("loc_65F752E: add %eax,%edx;");
    asm("loc_65F7530: lea 0x1C(%esp),%eax;");
    asm("loc_65F7534: mov %edx,0x20(%esp);");
    asm("loc_65F7538: mov %eax,0xC(%esi);");
    asm("loc_65F753B: push %ebp;");
    asm("loc_65F753C: lea 0x5C(%esp),%ecx;");
    asm("loc_65F7540: push %ecx;");
    asm("loc_65F7541: mov %esi,%ecx;");
    asm("loc_65F7543: call _sub_65F7340;");
    asm("loc_65F7548: mov 0x1C(%esi),%eax;");
    asm("loc_65F754B: mov 0x14(%esp),%edx;");
    asm("loc_65F754F: mov 0x18(%ebx),%ecx;");
    asm("loc_65F7552: add %eax,%ebp;");
    asm("loc_65F7554: mov 0x10(%esp),%eax;");
    asm("loc_65F7558: inc %eax;");
    asm("loc_65F7559: add $0x24,%edx;");
    asm("loc_65F755C: cmp %ecx,%eax;");
    asm("loc_65F755E: mov %eax,0x10(%esp);");
    asm("loc_65F7562: mov %edx,0x14(%esp);");
    asm("loc_65F7566: jl loc_65F7500;");
    asm("loc_65F7568: mov 0x24(%esp),%edx;");
    asm("loc_65F756C: pop %edi;");
    asm("loc_65F756D: pop %esi;");
    asm("loc_65F756E: pop %ebp;");
    asm("loc_65F756F: mov %edx,0x48(%ebx);");
    asm("loc_65F7572: mov $1,%al;");
    asm("loc_65F7574: pop %ebx;");
    asm("loc_65F7575: add $0x9C,%esp;");
    asm("loc_65F757B: ret $8;");
    asm("loc_65F757E: pop %edi;");
    asm("loc_65F757F: pop %esi;");
    asm("loc_65F7580: mov %eax,0x48(%ebx);");
    asm("loc_65F7583: pop %ebp;");
    asm("loc_65F7584: mov $1,%al;");
    asm("loc_65F7586: pop %ebx;");
    asm("loc_65F7587: add $0x9C,%esp;");
    asm("loc_65F758D: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7590() // _sub_65F7590
{
    __DEBUG_ASM(65F7590);
    // chunk 0x65F7590 _sub_65F7590
    asm("loc_65F7590: push %ecx;");
    asm("loc_65F7591: mov 8(%esp),%eax;");
    asm("loc_65F7595: mov 0x18(%eax),%ecx;");
    asm("loc_65F7598: push %ebp;");
    asm("loc_65F7599: xor %ebp,%ebp;");
    asm("loc_65F759B: cmp %ebp,%ecx;");
    asm("loc_65F759D: mov %ebp,4(%esp);");
    asm("loc_65F75A1: jle loc_65F75E7;");
    asm("loc_65F75A3: push %ebx;");
    asm("loc_65F75A4: push %esi;");
    asm("loc_65F75A5: push %edi;");
    asm("loc_65F75A6: mov 0x1C(%eax),%ebx;");
    asm("loc_65F75A9: mov 8(%ebx,%ebp),%ecx;");
    asm("loc_65F75AD: add %ebp,%ebx;");
    asm("loc_65F75AF: test %ecx,%ecx;");
    asm("loc_65F75B1: je loc_65F75CD;");
    asm("loc_65F75B3: mov (%ecx),%eax;");
    asm("loc_65F75B5: calll *0x50(%eax);");
    asm("loc_65F75B8: mov $_data_6602790,%edi;");
    asm("loc_65F75BD: mov %eax,%esi;");
    asm("loc_65F75BF: mov $0xC,%ecx;");
    asm("loc_65F75C4: xor %edx,%edx;");
    asm("loc_65F75C6: repe cmpsb (%edi),(%esi);");
    asm("loc_65F75C8: jne loc_65F75CD;");
    asm("loc_65F75CA: mov %edx,0x20(%ebx);");
    asm("loc_65F75CD: mov 0x10(%esp),%ecx;");
    asm("loc_65F75D1: mov 0x18(%esp),%eax;");
    asm("loc_65F75D5: mov 0x18(%eax),%edx;");
    asm("loc_65F75D8: inc %ecx;");
    asm("loc_65F75D9: add $0x24,%ebp;");
    asm("loc_65F75DC: cmp %edx,%ecx;");
    asm("loc_65F75DE: mov %ecx,0x10(%esp);");
    asm("loc_65F75E2: jl loc_65F75A6;");
    asm("loc_65F75E4: pop %edi;");
    asm("loc_65F75E5: pop %esi;");
    asm("loc_65F75E6: pop %ebx;");
    asm("loc_65F75E7: mov $1,%al;");
    asm("loc_65F75E9: pop %ebp;");
    asm("loc_65F75EA: pop %ecx;");
    asm("loc_65F75EB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F75F0() // _sub_65F75F0
{
    __DEBUG_ASM(65F75F0);
    // chunk 0x65F75F0 _sub_65F75F0
    asm("loc_65F75F0: sub $0x18,%esp;");
    asm("loc_65F75F3: push %ebx;");
    asm("loc_65F75F4: mov 0x20(%esp),%ebx;");
    asm("loc_65F75F8: mov 0x24(%ebx),%eax;");
    asm("loc_65F75FB: push %esi;");
    asm("loc_65F75FC: push %edi;");
    asm("loc_65F75FD: xor %edi,%edi;");
    asm("loc_65F75FF: cmp %edi,%eax;");
    asm("loc_65F7601: mov %eax,0xC(%esp);");
    asm("loc_65F7605: je loc_65F7751;");
    asm("loc_65F760B: mov 0x64(%ebx),%edx;");
    asm("loc_65F760E: cmp %edi,%edx;");
    asm("loc_65F7610: lea 0x60(%ebx),%esi;");
    asm("loc_65F7613: jne loc_65F7619;");
    asm("loc_65F7615: xor %ecx,%ecx;");
    asm("loc_65F7617: jmp loc_65F7621;");
    asm("loc_65F7619: mov 0xC(%esi),%ecx;");
    asm("loc_65F761C: sub %edx,%ecx;");
    asm("loc_65F761E: sar $4,%ecx;");
    asm("loc_65F7621: cmp %eax,%ecx;");
    asm("loc_65F7623: push %ebp;");
    asm("loc_65F7624: jae loc_65F76A7;");
    asm("loc_65F762A: cmp %edi,%eax;");
    asm("loc_65F762C: jge loc_65F7630;");
    asm("loc_65F762E: xor %eax,%eax;");
    asm("loc_65F7630: shl $4,%eax;");
    asm("loc_65F7633: push %eax;");
    asm("loc_65F7634: call _sub_6600BB6;");
    asm("loc_65F7639: mov 4(%esi),%edi;");
    asm("loc_65F763C: mov %eax,0x18(%esp);");
    asm("loc_65F7640: mov %eax,%ebp;");
    asm("loc_65F7642: mov 8(%esi),%eax;");
    asm("loc_65F7645: add $4,%esp;");
    asm("loc_65F7648: cmp %eax,%edi;");
    asm("loc_65F764A: mov %eax,0x2C(%esp);");
    asm("loc_65F764E: je loc_65F7668;");
    asm("loc_65F7650: push %edi;");
    asm("loc_65F7651: push %ebp;");
    asm("loc_65F7652: call _sub_65F9AA0;");
    asm("loc_65F7657: mov 0x34(%esp),%eax;");
    asm("loc_65F765B: add $0x10,%edi;");
    asm("loc_65F765E: add $8,%esp;");
    asm("loc_65F7661: add $0x10,%ebp;");
    asm("loc_65F7664: cmp %eax,%edi;");
    asm("loc_65F7666: jne loc_65F7650;");
    asm("loc_65F7668: mov 8(%esi),%eax;");
    asm("loc_65F766B: mov 4(%esi),%ecx;");
    asm("loc_65F766E: push %eax;");
    asm("loc_65F766F: push %ecx;");
    asm("loc_65F7670: mov %esi,%ecx;");
    asm("loc_65F7672: call _sub_65F9450;");
    asm("loc_65F7677: mov 4(%esi),%edx;");
    asm("loc_65F767A: push %edx;");
    asm("loc_65F767B: call _sub_6600BB0;");
    asm("loc_65F7680: mov 0x14(%esp),%eax;");
    asm("loc_65F7684: mov 0x18(%esp),%edi;");
    asm("loc_65F7688: shl $4,%eax;");
    asm("loc_65F768B: add %edi,%eax;");
    asm("loc_65F768D: add $4,%esp;");
    asm("loc_65F7690: mov %esi,%ecx;");
    asm("loc_65F7692: mov %eax,0xC(%esi);");
    asm("loc_65F7695: call _sub_65F9190;");
    asm("loc_65F769A: shl $4,%eax;");
    asm("loc_65F769D: add %edi,%eax;");
    asm("loc_65F769F: mov %edi,4(%esi);");
    asm("loc_65F76A2: mov %eax,8(%esi);");
    asm("loc_65F76A5: xor %edi,%edi;");
    asm("loc_65F76A7: mov 0x2C(%esp),%al;");
    asm("loc_65F76AB: mov 4(%esi),%ecx;");
    asm("loc_65F76AE: mov 0x24(%ebx),%ebp;");
    asm("loc_65F76B1: mov %al,0x18(%esp);");
    asm("loc_65F76B5: mov 8(%esi),%eax;");
    asm("loc_65F76B8: push %ecx;");
    asm("loc_65F76B9: push %eax;");
    asm("loc_65F76BA: push %eax;");
    asm("loc_65F76BB: mov %edi,0x28(%esp);");
    asm("loc_65F76BF: mov %edi,0x2C(%esp);");
    asm("loc_65F76C3: mov %edi,0x30(%esp);");
    asm("loc_65F76C7: call _sub_65F98E0;");
    asm("loc_65F76CC: mov 8(%esi),%ecx;");
    asm("loc_65F76CF: add $0xC,%esp;");
    asm("loc_65F76D2: push %ecx;");
    asm("loc_65F76D3: mov %eax,%edi;");
    asm("loc_65F76D5: push %edi;");
    asm("loc_65F76D6: mov %esi,%ecx;");
    asm("loc_65F76D8: call _sub_65F9450;");
    asm("loc_65F76DD: mov 4(%esi),%eax;");
    asm("loc_65F76E0: lea 0x18(%esp),%edx;");
    asm("loc_65F76E4: push %edx;");
    asm("loc_65F76E5: push %ebp;");
    asm("loc_65F76E6: push %eax;");
    asm("loc_65F76E7: mov %esi,%ecx;");
    asm("loc_65F76E9: mov %edi,8(%esi);");
    asm("loc_65F76EC: call _sub_65F91B0;");
    asm("loc_65F76F1: mov 0x20(%esp),%ecx;");
    asm("loc_65F76F5: mov 0x1C(%esp),%edx;");
    asm("loc_65F76F9: push %ecx;");
    asm("loc_65F76FA: push %edx;");
    asm("loc_65F76FB: lea 0x20(%esp),%ecx;");
    asm("loc_65F76FF: call _sub_65F16A0;");
    asm("loc_65F7704: mov 0x1C(%esp),%eax;");
    asm("loc_65F7708: push %eax;");
    asm("loc_65F7709: call _sub_6600BB0;");
    asm("loc_65F770E: mov 0x10(%ebx),%eax;");
    asm("loc_65F7711: add $4,%esp;");
    asm("loc_65F7714: xor %esi,%esi;");
    asm("loc_65F7716: test %eax,%eax;");
    asm("loc_65F7718: pop %ebp;");
    asm("loc_65F7719: jbe loc_65F7751;");
    asm("loc_65F771B: nop;");
    asm("loc_65F771C: lea (%esp),%esp;");
    asm("loc_65F7720: mov 0x14(%ebx),%ecx;");
    asm("loc_65F7723: mov (%ecx,%esi,4),%eax;");
    asm("loc_65F7726: cmp 0x24(%ebx),%eax;");
    asm("loc_65F7729: jae loc_65F7749;");
    asm("loc_65F772B: mov 0x64(%ebx),%ecx;");
    asm("loc_65F772E: shl $4,%eax;");
    asm("loc_65F7731: lea 0x28(%esp),%edx;");
    asm("loc_65F7735: add %ecx,%eax;");
    asm("loc_65F7737: mov 8(%eax),%ecx;");
    asm("loc_65F773A: push %edx;");
    asm("loc_65F773B: push $1;");
    asm("loc_65F773D: push %ecx;");
    asm("loc_65F773E: mov %eax,%ecx;");
    asm("loc_65F7740: mov %esi,0x34(%esp);");
    asm("loc_65F7744: call _sub_65F9490;");
    asm("loc_65F7749: mov 0x10(%ebx),%eax;");
    asm("loc_65F774C: inc %esi;");
    asm("loc_65F774D: cmp %eax,%esi;");
    asm("loc_65F774F: jb loc_65F7720;");
    asm("loc_65F7751: pop %edi;");
    asm("loc_65F7752: pop %esi;");
    asm("loc_65F7753: pop %ebx;");
    asm("loc_65F7754: add $0x18,%esp;");
    asm("loc_65F7757: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7760() // _sub_65F7760
{
    __DEBUG_ASM(65F7760);
    // chunk 0x65F7760 _sub_65F7760
    asm("loc_65F7760: mov $0x425C,%eax;");
    asm("loc_65F7765: call _sub_6600C00;");
    asm("loc_65F776A: push %ebx;");
    asm("loc_65F776B: push %ebp;");
    asm("loc_65F776C: mov 0x4268(%esp),%ebp;");
    asm("loc_65F7773: mov (%ebp),%eax;");
    asm("loc_65F7776: push $_data_660287C;");
    asm("loc_65F777B: mov %ecx,%ebx;");
    asm("loc_65F777D: push %ebp;");
    asm("loc_65F777E: mov %ebx,0x38(%esp);");
    asm("loc_65F7782: calll *0x60(%eax);");
    asm("loc_65F7785: test %eax,%eax;");
    asm("loc_65F7787: jne loc_65F7796;");
    asm("loc_65F7789: pop %ebp;");
    asm("loc_65F778A: xor %al,%al;");
    asm("loc_65F778C: pop %ebx;");
    asm("loc_65F778D: add $0x425C,%esp;");
    asm("loc_65F7793: ret $4;");
    asm("loc_65F7796: push %esi;");
    asm("loc_65F7797: push %edi;");
    asm("loc_65F7798: push $_data_6602040;");
    asm("loc_65F779D: xor %edi,%edi;");
    asm("loc_65F779F: push $_data_6602874;");
    asm("loc_65F77A4: lea 0x98(%esp),%ecx;");
    asm("loc_65F77AB: mov %edi,0x1C(%esp);");
    asm("loc_65F77AF: call _sub_65F3E80;");
    asm("loc_65F77B4: mov (%ebp),%ecx;");
    asm("loc_65F77B7: lea 0x90(%esp),%edx;");
    asm("loc_65F77BE: push %edx;");
    asm("loc_65F77BF: push %ebp;");
    asm("loc_65F77C0: calll *0x7C(%ecx);");
    asm("loc_65F77C3: mov %eax,%esi;");
    asm("loc_65F77C5: cmp $0xFFFFFFFF,%esi;");
    asm("loc_65F77C8: je loc_65F77FC;");
    asm("loc_65F77CA: mov (%ebp),%eax;");
    asm("loc_65F77CD: push %edi;");
    asm("loc_65F77CE: lea 0x20(%esp),%ecx;");
    asm("loc_65F77D2: push %ecx;");
    asm("loc_65F77D3: push $4;");
    asm("loc_65F77D5: lea 0x24(%esp),%edx;");
    asm("loc_65F77D9: push %edx;");
    asm("loc_65F77DA: push %esi;");
    asm("loc_65F77DB: push %ebp;");
    asm("loc_65F77DC: calll *0x14(%eax);");
    asm("loc_65F77DF: test %eax,%eax;");
    asm("loc_65F77E1: je loc_65F77F4;");
    asm("loc_65F77E3: cmpl $4,0x1C(%esp);");
    asm("loc_65F77E8: jne loc_65F77F4;");
    asm("loc_65F77EA: mov 0x18(%esp),%eax;");
    asm("loc_65F77EE: mov %eax,0x14(%esp);");
    asm("loc_65F77F2: mov %eax,%edi;");
    asm("loc_65F77F4: mov (%ebp),%ecx;");
    asm("loc_65F77F7: push %esi;");
    asm("loc_65F77F8: push %ebp;");
    asm("loc_65F77F9: calll *0x10(%ecx);");
    asm("loc_65F77FC: lea (%edi,%edi,8),%edx;");
    asm("loc_65F77FF: lea 4(,%edx,4),%eax;");
    asm("loc_65F7806: push %eax;");
    asm("loc_65F7807: call _sub_6600BB6;");
    asm("loc_65F780C: add $4,%esp;");
    asm("loc_65F780F: test %eax,%eax;");
    asm("loc_65F7811: je loc_65F783D;");
    asm("loc_65F7813: mov 0x14(%esp),%ecx;");
    asm("loc_65F7817: mov %edi,(%eax);");
    asm("loc_65F7819: lea 4(%eax),%edi;");
    asm("loc_65F781C: lea -1(%ecx),%eax;");
    asm("loc_65F781F: test %eax,%eax;");
    asm("loc_65F7821: mov %edi,%esi;");
    asm("loc_65F7823: jl loc_65F7839;");
    asm("loc_65F7825: lea 1(%eax),%ebx;");
    asm("loc_65F7828: mov %esi,%ecx;");
    asm("loc_65F782A: call _sub_65F7C70;");
    asm("loc_65F782F: add $0x24,%esi;");
    asm("loc_65F7832: dec %ebx;");
    asm("loc_65F7833: jne loc_65F7828;");
    asm("loc_65F7835: mov 0x38(%esp),%ebx;");
    asm("loc_65F7839: mov %edi,%eax;");
    asm("loc_65F783B: jmp loc_65F783F;");
    asm("loc_65F783D: xor %eax,%eax;");
    asm("loc_65F783F: mov %eax,0x1C(%ebx);");
    asm("loc_65F7842: mov (%ebp),%edx;");
    asm("loc_65F7845: lea 0x12C(%esp),%eax;");
    asm("loc_65F784C: push %eax;");
    asm("loc_65F784D: push $_data_660286C;");
    asm("loc_65F7852: push %ebp;");
    asm("loc_65F7853: calll *0x48(%edx);");
    asm("loc_65F7856: mov %eax,%edx;");
    asm("loc_65F7858: cmp $0xFFFFFFFF,%edx;");
    asm("loc_65F785B: mov %edx,0x34(%esp);");
    asm("loc_65F785F: je loc_65F7C50;");
    asm("loc_65F7865: jmp loc_65F7870;");
    asm("loc_65F7867: mov 0x38(%esp),%ebx;");
    asm("loc_65F786B: mov 0x34(%esp),%edx;");
    asm("loc_65F786F: nop;");
    asm("loc_65F7870: mov 0x18(%ebx),%eax;");
    asm("loc_65F7873: lea (%eax,%eax,8),%ecx;");
    asm("loc_65F7876: mov 0x1C(%ebx),%eax;");
    asm("loc_65F7879: lea (%eax,%ecx,4),%ebx;");
    asm("loc_65F787C: xor %eax,%eax;");
    asm("loc_65F787E: movl $_data_6602040,0x60(%esp);");
    asm("loc_65F7886: mov $0xB,%ecx;");
    asm("loc_65F788B: lea 0x64(%esp),%edi;");
    asm("loc_65F788F: rep stos %eax,(%edi);");
    asm("loc_65F7891: lea 0x158(%esp),%ecx;");
    asm("loc_65F7898: mov %ecx,0x68(%esp);");
    asm("loc_65F789C: xor %esi,%esi;");
    asm("loc_65F789E: lea 0x10(%esp),%ecx;");
    asm("loc_65F78A2: mov %ebx,0x1C(%esp);");
    asm("loc_65F78A6: mov %esi,0x10(%esp);");
    asm("loc_65F78AA: movl $0x80000000,0x6C(%esp);");
    asm("loc_65F78B2: movl $1,0x70(%esp);");
    asm("loc_65F78BA: movl $3,0x78(%esp);");
    asm("loc_65F78C2: movl $0x8000080,0x7C(%esp);");
    asm("loc_65F78CA: movl $0x34,0x5C(%esp);");
    asm("loc_65F78D2: mov %edx,0x8C(%esp);");
    asm("loc_65F78D9: call _sub_65F9170;");
    asm("loc_65F78DE: mov (%ebp),%edx;");
    asm("loc_65F78E1: lea 0x10(%esp),%eax;");
    asm("loc_65F78E5: push %eax;");
    asm("loc_65F78E6: lea 0x60(%esp),%ecx;");
    asm("loc_65F78EA: push %ecx;");
    asm("loc_65F78EB: push %ebp;");
    asm("loc_65F78EC: calll *0xC(%edx);");
    asm("loc_65F78EF: test %eax,%eax;");
    asm("loc_65F78F1: jge loc_65F7927;");
    asm("loc_65F78F3: lea 0x26C(%esp),%edx;");
    asm("loc_65F78FA: push $_data_6602850;");
    asm("loc_65F78FF: push %edx;");
    asm("loc_65F7900: call _sub_65F28B0;");
    asm("loc_65F7905: push %eax;");
    asm("loc_65F7906: mov _import_6601008,%eax;");
    asm("loc_65F790B: push $0x37;");
    asm("loc_65F790D: push $_data_66027F8;");
    asm("loc_65F7912: mov $0x100002,%ecx;");
    asm("loc_65F7917: push $_data_66024C8;");
    asm("loc_65F791C: push %ecx;");
    asm("loc_65F791D: calll *(%eax);");
    asm("loc_65F791F: add $0x1C,%esp;");
    asm("loc_65F7922: jmp loc_65F7C0F;");
    asm("loc_65F7927: mov 0x10(%esp),%ecx;");
    asm("loc_65F792B: push %ecx;");
    asm("loc_65F792C: lea 0x34(%esp),%ecx;");
    asm("loc_65F7930: call _sub_65F9150;");
    asm("loc_65F7935: push $_data_6602040;");
    asm("loc_65F793A: or $0xFFFFFFFF,%edi;");
    asm("loc_65F793D: push $_data_66027E4;");
    asm("loc_65F7942: lea 0xCC(%esp),%ecx;");
    asm("loc_65F7949: mov %edi,0x28(%esp);");
    asm("loc_65F794D: mov %esi,0x2C(%esp);");
    asm("loc_65F7951: mov %esi,0x34(%esp);");
    asm("loc_65F7955: call _sub_65F3E80;");
    asm("loc_65F795A: mov 0x30(%esp),%eax;");
    asm("loc_65F795E: lea 0xC4(%esp),%ecx;");
    asm("loc_65F7965: push %ecx;");
    asm("loc_65F7966: mov %edi,0xF8(%esp);");
    asm("loc_65F796D: mov (%eax),%edx;");
    asm("loc_65F796F: push %eax;");
    asm("loc_65F7970: calll *0x7C(%edx);");
    asm("loc_65F7973: cmp %edi,%eax;");
    asm("loc_65F7975: mov %eax,0x20(%esp);");
    asm("loc_65F7979: je loc_65F79BE;");
    asm("loc_65F797B: mov 0x30(%esp),%ecx;");
    asm("loc_65F797F: mov (%ecx),%edx;");
    asm("loc_65F7981: push %esi;");
    asm("loc_65F7982: push %eax;");
    asm("loc_65F7983: push %ecx;");
    asm("loc_65F7984: calll *0x28(%edx);");
    asm("loc_65F7987: mov 0x20(%esp),%edx;");
    asm("loc_65F798B: push %esi;");
    asm("loc_65F798C: push %esi;");
    asm("loc_65F798D: push %esi;");
    asm("loc_65F798E: push $2;");
    asm("loc_65F7990: push %esi;");
    asm("loc_65F7991: mov %eax,0x38(%esp);");
    asm("loc_65F7995: mov 0x44(%esp),%eax;");
    asm("loc_65F7999: mov (%eax),%ecx;");
    asm("loc_65F799B: push %edx;");
    asm("loc_65F799C: push %eax;");
    asm("loc_65F799D: calll *0x3C(%ecx);");
    asm("loc_65F79A0: cmp %edi,%eax;");
    asm("loc_65F79A2: mov %eax,0x28(%esp);");
    asm("loc_65F79A6: je loc_65F79BE;");
    asm("loc_65F79A8: mov 0x30(%esp),%ecx;");
    asm("loc_65F79AC: mov (%ecx),%edx;");
    asm("loc_65F79AE: push %esi;");
    asm("loc_65F79AF: push %esi;");
    asm("loc_65F79B0: push %esi;");
    asm("loc_65F79B1: push $4;");
    asm("loc_65F79B3: push %eax;");
    asm("loc_65F79B4: push %ecx;");
    asm("loc_65F79B5: calll *0x40(%edx);");
    asm("loc_65F79B8: mov %eax,0x2C(%esp);");
    asm("loc_65F79BC: jmp loc_65F79C2;");
    asm("loc_65F79BE: mov 0x2C(%esp),%eax;");
    asm("loc_65F79C2: test %eax,%eax;");
    asm("loc_65F79C4: mov %eax,%esi;");
    asm("loc_65F79C6: jne loc_65F79DF;");
    asm("loc_65F79C8: lea 0x20(%esp),%ecx;");
    asm("loc_65F79CC: call _sub_65F7D10;");
    asm("loc_65F79D1: lea 0x30(%esp),%ecx;");
    asm("loc_65F79D5: call _sub_65F9170;");
    asm("loc_65F79DA: jmp loc_65F7C0F;");
    asm("loc_65F79DF: mov _import_660100C,%edi;");
    asm("loc_65F79E5: push %eax;");
    asm("loc_65F79E6: call *%edi;");
    asm("loc_65F79E8: push %esi;");
    asm("loc_65F79E9: mov %eax,4(%ebx);");
    asm("loc_65F79EC: mov %esi,0x58(%esp);");
    asm("loc_65F79F0: call *%edi;");
    asm("loc_65F79F2: add $8,%esp;");
    asm("loc_65F79F5: lea 8(%ebx),%edx;");
    asm("loc_65F79F8: push %edx;");
    asm("loc_65F79F9: mov %eax,0x58(%esp);");
    asm("loc_65F79FD: mov _data_660312C,%eax;");
    asm("loc_65F7A02: mov (%eax),%ecx;");
    asm("loc_65F7A04: lea 0x54(%esp),%edx;");
    asm("loc_65F7A08: push %edx;");
    asm("loc_65F7A09: push %eax;");
    asm("loc_65F7A0A: calll *0x40(%ecx);");
    asm("loc_65F7A0D: test %eax,%eax;");
    asm("loc_65F7A0F: jge loc_65F7A81;");
    asm("loc_65F7A11: push $_data_66031AC;");
    asm("loc_65F7A16: push $_data_66027E0;");
    asm("loc_65F7A1B: lea 0x2274(%esp),%eax;");
    asm("loc_65F7A22: push $_data_66027C0;");
    asm("loc_65F7A27: push %eax;");
    asm("loc_65F7A28: call _sub_65F28B0;");
    asm("loc_65F7A2D: push %eax;");
    asm("loc_65F7A2E: push $0x45;");
    asm("loc_65F7A30: push $_data_66027F8;");
    asm("loc_65F7A35: mov $0x100002,%ecx;");
    asm("loc_65F7A3A: push $_data_66024C8;");
    asm("loc_65F7A3F: push %ecx;");
    asm("loc_65F7A40: mov _import_6601008,%ecx;");
    asm("loc_65F7A46: calll *(%ecx);");
    asm("loc_65F7A48: add $0x24,%esp;");
    asm("loc_65F7A4B: lea 0x20(%esp),%ecx;");
    asm("loc_65F7A4F: call _sub_65F7D10;");
    asm("loc_65F7A54: mov 0x30(%esp),%eax;");
    asm("loc_65F7A58: test %eax,%eax;");
    asm("loc_65F7A5A: je loc_65F7A6A;");
    asm("loc_65F7A5C: mov (%eax),%edx;");
    asm("loc_65F7A5E: push %eax;");
    asm("loc_65F7A5F: calll *8(%edx);");
    asm("loc_65F7A62: movl $0,0x30(%esp);");
    asm("loc_65F7A6A: mov 0x10(%esp),%eax;");
    asm("loc_65F7A6E: test %eax,%eax;");
    asm("loc_65F7A70: je loc_65F7C18;");
    asm("loc_65F7A76: mov (%eax),%ecx;");
    asm("loc_65F7A78: push %eax;");
    asm("loc_65F7A79: calll *8(%ecx);");
    asm("loc_65F7A7C: jmp loc_65F7C18;");
    asm("loc_65F7A81: mov 0x10(%esp),%eax;");
    asm("loc_65F7A85: xor %edi,%edi;");
    asm("loc_65F7A87: cmp %edi,%eax;");
    asm("loc_65F7A89: mov %eax,0x4C(%esp);");
    asm("loc_65F7A8D: je loc_65F7A95;");
    asm("loc_65F7A8F: mov (%eax),%edx;");
    asm("loc_65F7A91: push %eax;");
    asm("loc_65F7A92: calll *4(%edx);");
    asm("loc_65F7A95: push $_data_6602040;");
    asm("loc_65F7A9A: or $0xFFFFFFFF,%esi;");
    asm("loc_65F7A9D: push $_data_66027AC;");
    asm("loc_65F7AA2: lea 0x98(%esp),%ecx;");
    asm("loc_65F7AA9: mov %esi,0x44(%esp);");
    asm("loc_65F7AAD: mov %edi,0x48(%esp);");
    asm("loc_65F7AB1: mov %edi,0x50(%esp);");
    asm("loc_65F7AB5: call _sub_65F3E80;");
    asm("loc_65F7ABA: mov 0x4C(%esp),%eax;");
    asm("loc_65F7ABE: lea 0x90(%esp),%edx;");
    asm("loc_65F7AC5: push %edx;");
    asm("loc_65F7AC6: mov %esi,0xC4(%esp);");
    asm("loc_65F7ACD: mov (%eax),%ecx;");
    asm("loc_65F7ACF: push %eax;");
    asm("loc_65F7AD0: calll *0x7C(%ecx);");
    asm("loc_65F7AD3: cmp %esi,%eax;");
    asm("loc_65F7AD5: mov %eax,0x3C(%esp);");
    asm("loc_65F7AD9: je loc_65F7B1C;");
    asm("loc_65F7ADB: mov 0x4C(%esp),%ecx;");
    asm("loc_65F7ADF: mov (%ecx),%edx;");
    asm("loc_65F7AE1: push %edi;");
    asm("loc_65F7AE2: push %eax;");
    asm("loc_65F7AE3: push %ecx;");
    asm("loc_65F7AE4: calll *0x28(%edx);");
    asm("loc_65F7AE7: mov 0x3C(%esp),%edx;");
    asm("loc_65F7AEB: push %edi;");
    asm("loc_65F7AEC: push %edi;");
    asm("loc_65F7AED: push %edi;");
    asm("loc_65F7AEE: push $2;");
    asm("loc_65F7AF0: push %edi;");
    asm("loc_65F7AF1: mov %eax,0x54(%esp);");
    asm("loc_65F7AF5: mov 0x60(%esp),%eax;");
    asm("loc_65F7AF9: mov (%eax),%ecx;");
    asm("loc_65F7AFB: push %edx;");
    asm("loc_65F7AFC: push %eax;");
    asm("loc_65F7AFD: calll *0x3C(%ecx);");
    asm("loc_65F7B00: cmp %esi,%eax;");
    asm("loc_65F7B02: mov %eax,0x44(%esp);");
    asm("loc_65F7B06: je loc_65F7B1C;");
    asm("loc_65F7B08: mov 0x4C(%esp),%ecx;");
    asm("loc_65F7B0C: mov (%ecx),%edx;");
    asm("loc_65F7B0E: push %edi;");
    asm("loc_65F7B0F: push %edi;");
    asm("loc_65F7B10: push %edi;");
    asm("loc_65F7B11: push $4;");
    asm("loc_65F7B13: push %eax;");
    asm("loc_65F7B14: push %ecx;");
    asm("loc_65F7B15: calll *0x40(%edx);");
    asm("loc_65F7B18: mov %eax,0x48(%esp);");
    asm("loc_65F7B1C: mov 0x40(%esp),%esi;");
    asm("loc_65F7B20: test %esi,%esi;");
    asm("loc_65F7B22: mov 0x48(%esp),%edi;");
    asm("loc_65F7B26: je loc_65F7B4E;");
    asm("loc_65F7B28: shr $1,%esi;");
    asm("loc_65F7B2A: lea (%esi,%esi,2),%eax;");
    asm("loc_65F7B2D: lea -0xC(%eax,%eax),%ecx;");
    asm("loc_65F7B31: push %ecx;");
    asm("loc_65F7B32: call _sub_6600BB6;");
    asm("loc_65F7B37: lea 0x1C(%ebx),%edx;");
    asm("loc_65F7B3A: push %edx;");
    asm("loc_65F7B3B: push %eax;");
    asm("loc_65F7B3C: push %esi;");
    asm("loc_65F7B3D: push %edi;");
    asm("loc_65F7B3E: mov %eax,0x18(%ebx);");
    asm("loc_65F7B41: call _sub_65F7D70;");
    asm("loc_65F7B46: add $0x14,%esp;");
    asm("loc_65F7B49: jmp loc_65F7BDF;");
    asm("loc_65F7B4E: mov 0x10(%esp),%esi;");
    asm("loc_65F7B52: push $_data_6602040;");
    asm("loc_65F7B57: push $_data_660279C;");
    asm("loc_65F7B5C: lea 0x100(%esp),%ecx;");
    asm("loc_65F7B63: call _sub_65F3E80;");
    asm("loc_65F7B68: mov (%esi),%eax;");
    asm("loc_65F7B6A: lea 0xF8(%esp),%ecx;");
    asm("loc_65F7B71: push %ecx;");
    asm("loc_65F7B72: push %esi;");
    asm("loc_65F7B73: calll *0x7C(%eax);");
    asm("loc_65F7B76: mov %eax,%ebp;");
    asm("loc_65F7B78: cmp $0xFFFFFFFF,%ebp;");
    asm("loc_65F7B7B: je loc_65F7BD8;");
    asm("loc_65F7B7D: mov (%esi),%edx;");
    asm("loc_65F7B7F: push $0;");
    asm("loc_65F7B81: push %ebp;");
    asm("loc_65F7B82: push %esi;");
    asm("loc_65F7B83: calll *0x28(%edx);");
    asm("loc_65F7B86: mov %eax,%ebx;");
    asm("loc_65F7B88: mov %ebx,%edi;");
    asm("loc_65F7B8A: shr $1,%edi;");
    asm("loc_65F7B8C: lea (%edi,%edi),%eax;");
    asm("loc_65F7B8F: push %eax;");
    asm("loc_65F7B90: call _sub_6600BB6;");
    asm("loc_65F7B95: mov (%esi),%ecx;");
    asm("loc_65F7B97: add $4,%esp;");
    asm("loc_65F7B9A: push $0;");
    asm("loc_65F7B9C: lea 0x5C(%esp),%edx;");
    asm("loc_65F7BA0: push %edx;");
    asm("loc_65F7BA1: push %ebx;");
    asm("loc_65F7BA2: push %eax;");
    asm("loc_65F7BA3: push %ebp;");
    asm("loc_65F7BA4: push %esi;");
    asm("loc_65F7BA5: mov %eax,0x30(%esp);");
    asm("loc_65F7BA9: calll *0x14(%ecx);");
    asm("loc_65F7BAC: test %eax,%eax;");
    asm("loc_65F7BAE: je loc_65F7BC0;");
    asm("loc_65F7BB0: mov 0x1C(%esp),%eax;");
    asm("loc_65F7BB4: mov 0x18(%esp),%ecx;");
    asm("loc_65F7BB8: mov %edi,0x1C(%eax);");
    asm("loc_65F7BBB: mov %ecx,0x18(%eax);");
    asm("loc_65F7BBE: jmp loc_65F7BCD;");
    asm("loc_65F7BC0: mov 0x18(%esp),%edx;");
    asm("loc_65F7BC4: push %edx;");
    asm("loc_65F7BC5: call _sub_6600BB0;");
    asm("loc_65F7BCA: add $4,%esp;");
    asm("loc_65F7BCD: mov (%esi),%eax;");
    asm("loc_65F7BCF: push %ebp;");
    asm("loc_65F7BD0: push %esi;");
    asm("loc_65F7BD1: calll *0x10(%eax);");
    asm("loc_65F7BD4: mov 0x1C(%esp),%ebx;");
    asm("loc_65F7BD8: mov 0x4270(%esp),%ebp;");
    asm("loc_65F7BDF: mov 0x1C(%ebx),%eax;");
    asm("loc_65F7BE2: lea 0x14(%ebx),%ecx;");
    asm("loc_65F7BE5: push %ecx;");
    asm("loc_65F7BE6: mov 0x18(%ebx),%ecx;");
    asm("loc_65F7BE9: lea 0x10(%ebx),%edx;");
    asm("loc_65F7BEC: push %edx;");
    asm("loc_65F7BED: push %eax;");
    asm("loc_65F7BEE: push %ecx;");
    asm("loc_65F7BEF: movl $4,(%ebx);");
    asm("loc_65F7BF5: call _sub_65F7E00;");
    asm("loc_65F7BFA: add $0x10,%esp;");
    asm("loc_65F7BFD: lea 0x3C(%esp),%ecx;");
    asm("loc_65F7C01: call _sub_65F7CA0;");
    asm("loc_65F7C06: lea 0x20(%esp),%ecx;");
    asm("loc_65F7C0A: call _sub_65F7CA0;");
    asm("loc_65F7C0F: lea 0x10(%esp),%ecx;");
    asm("loc_65F7C13: call _sub_65F9170;");
    asm("loc_65F7C18: mov 0x38(%esp),%eax;");
    asm("loc_65F7C1C: incl 0x18(%eax);");
    asm("loc_65F7C1F: mov 0x14(%esp),%edx;");
    asm("loc_65F7C23: cmp %edx,0x18(%eax);");
    asm("loc_65F7C26: jge loc_65F7C44;");
    asm("loc_65F7C28: mov 0x34(%esp),%edx;");
    asm("loc_65F7C2C: mov (%ebp),%eax;");
    asm("loc_65F7C2F: lea 0x12C(%esp),%ecx;");
    asm("loc_65F7C36: push %ecx;");
    asm("loc_65F7C37: push %edx;");
    asm("loc_65F7C38: push %ebp;");
    asm("loc_65F7C39: calll *0x4C(%eax);");
    asm("loc_65F7C3C: test %eax,%eax;");
    asm("loc_65F7C3E: jne loc_65F7867;");
    asm("loc_65F7C44: mov 0x34(%esp),%ecx;");
    asm("loc_65F7C48: mov (%ebp),%eax;");
    asm("loc_65F7C4B: push %ecx;");
    asm("loc_65F7C4C: push %ebp;");
    asm("loc_65F7C4D: calll *0x50(%eax);");
    asm("loc_65F7C50: mov (%ebp),%edx;");
    asm("loc_65F7C53: push $_data_6602020;");
    asm("loc_65F7C58: push %ebp;");
    asm("loc_65F7C59: calll *0x60(%edx);");
    asm("loc_65F7C5C: pop %edi;");
    asm("loc_65F7C5D: pop %esi;");
    asm("loc_65F7C5E: pop %ebp;");
    asm("loc_65F7C5F: mov $1,%al;");
    asm("loc_65F7C61: pop %ebx;");
    asm("loc_65F7C62: add $0x425C,%esp;");
    asm("loc_65F7C68: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7C70() // _sub_65F7C70
{
    __DEBUG_ASM(65F7C70);
    // chunk 0x65F7C70 _sub_65F7C70
    asm("loc_65F7C70: mov %ecx,%eax;");
    asm("loc_65F7C72: xor %ecx,%ecx;");
    asm("loc_65F7C74: movl $4,(%eax);");
    asm("loc_65F7C7A: mov %ecx,4(%eax);");
    asm("loc_65F7C7D: mov %ecx,8(%eax);");
    asm("loc_65F7C80: mov %ecx,0xC(%eax);");
    asm("loc_65F7C83: mov %ecx,0x10(%eax);");
    asm("loc_65F7C86: mov %ecx,0x14(%eax);");
    asm("loc_65F7C89: mov %ecx,0x18(%eax);");
    asm("loc_65F7C8C: mov %ecx,0x1C(%eax);");
    asm("loc_65F7C8F: movl $0xFFFFFFFF,0x20(%eax);");
    asm("loc_65F7C96: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7CA0() // _sub_65F7CA0
{
    __DEBUG_ASM(65F7CA0);
    // chunk 0x65F7CA0 _sub_65F7CA0
    asm("loc_65F7CA0: push %esi;");
    asm("loc_65F7CA1: mov %ecx,%esi;");
    asm("loc_65F7CA3: cmpl $0xFFFFFFFF,(%esi);");
    asm("loc_65F7CA6: je loc_65F7CE5;");
    asm("loc_65F7CA8: cmpl $0xFFFFFFFF,8(%esi);");
    asm("loc_65F7CAC: je loc_65F7CD3;");
    asm("loc_65F7CAE: mov 0xC(%esi),%ecx;");
    asm("loc_65F7CB1: test %ecx,%ecx;");
    asm("loc_65F7CB3: je loc_65F7CC6;");
    asm("loc_65F7CB5: mov 0x10(%esi),%eax;");
    asm("loc_65F7CB8: mov (%eax),%edx;");
    asm("loc_65F7CBA: push %ecx;");
    asm("loc_65F7CBB: push %eax;");
    asm("loc_65F7CBC: calll *0x44(%edx);");
    asm("loc_65F7CBF: movl $0,0xC(%esi);");
    asm("loc_65F7CC6: mov 8(%esi),%edx;");
    asm("loc_65F7CC9: mov 0x10(%esi),%eax;");
    asm("loc_65F7CCC: mov (%eax),%ecx;");
    asm("loc_65F7CCE: push %edx;");
    asm("loc_65F7CCF: push %eax;");
    asm("loc_65F7CD0: calll *0x10(%ecx);");
    asm("loc_65F7CD3: mov (%esi),%edx;");
    asm("loc_65F7CD5: mov 0x10(%esi),%eax;");
    asm("loc_65F7CD8: mov (%eax),%ecx;");
    asm("loc_65F7CDA: push %edx;");
    asm("loc_65F7CDB: push %eax;");
    asm("loc_65F7CDC: calll *0x10(%ecx);");
    asm("loc_65F7CDF: movl $0xFFFFFFFF,(%esi);");
    asm("loc_65F7CE5: mov 0x10(%esi),%eax;");
    asm("loc_65F7CE8: test %eax,%eax;");
    asm("loc_65F7CEA: je loc_65F7CF9;");
    asm("loc_65F7CEC: mov (%eax),%ecx;");
    asm("loc_65F7CEE: push %eax;");
    asm("loc_65F7CEF: calll *8(%ecx);");
    asm("loc_65F7CF2: movl $0,0x10(%esi);");
    asm("loc_65F7CF9: mov 0x10(%esi),%eax;");
    asm("loc_65F7CFC: test %eax,%eax;");
    asm("loc_65F7CFE: je loc_65F7D0D;");
    asm("loc_65F7D00: mov (%eax),%edx;");
    asm("loc_65F7D02: push %eax;");
    asm("loc_65F7D03: calll *8(%edx);");
    asm("loc_65F7D06: movl $0,0x10(%esi);");
    asm("loc_65F7D0D: pop %esi;");
    asm("loc_65F7D0E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7D10() // _sub_65F7D10
{
    __DEBUG_ASM(65F7D10);
    // chunk 0x65F7D10 _sub_65F7D10
    asm("loc_65F7D10: push %esi;");
    asm("loc_65F7D11: mov %ecx,%esi;");
    asm("loc_65F7D13: cmpl $0xFFFFFFFF,(%esi);");
    asm("loc_65F7D16: je loc_65F7D55;");
    asm("loc_65F7D18: cmpl $0xFFFFFFFF,8(%esi);");
    asm("loc_65F7D1C: je loc_65F7D43;");
    asm("loc_65F7D1E: mov 0xC(%esi),%ecx;");
    asm("loc_65F7D21: test %ecx,%ecx;");
    asm("loc_65F7D23: je loc_65F7D36;");
    asm("loc_65F7D25: mov 0x10(%esi),%eax;");
    asm("loc_65F7D28: mov (%eax),%edx;");
    asm("loc_65F7D2A: push %ecx;");
    asm("loc_65F7D2B: push %eax;");
    asm("loc_65F7D2C: calll *0x44(%edx);");
    asm("loc_65F7D2F: movl $0,0xC(%esi);");
    asm("loc_65F7D36: mov 8(%esi),%edx;");
    asm("loc_65F7D39: mov 0x10(%esi),%eax;");
    asm("loc_65F7D3C: mov (%eax),%ecx;");
    asm("loc_65F7D3E: push %edx;");
    asm("loc_65F7D3F: push %eax;");
    asm("loc_65F7D40: calll *0x10(%ecx);");
    asm("loc_65F7D43: mov (%esi),%edx;");
    asm("loc_65F7D45: mov 0x10(%esi),%eax;");
    asm("loc_65F7D48: mov (%eax),%ecx;");
    asm("loc_65F7D4A: push %edx;");
    asm("loc_65F7D4B: push %eax;");
    asm("loc_65F7D4C: calll *0x10(%ecx);");
    asm("loc_65F7D4F: movl $0xFFFFFFFF,(%esi);");
    asm("loc_65F7D55: mov 0x10(%esi),%eax;");
    asm("loc_65F7D58: test %eax,%eax;");
    asm("loc_65F7D5A: je loc_65F7D69;");
    asm("loc_65F7D5C: mov (%eax),%ecx;");
    asm("loc_65F7D5E: push %eax;");
    asm("loc_65F7D5F: calll *8(%ecx);");
    asm("loc_65F7D62: movl $0,0x10(%esi);");
    asm("loc_65F7D69: pop %esi;");
    asm("loc_65F7D6A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7D70() // _sub_65F7D70
{
    __DEBUG_ASM(65F7D70);
    // chunk 0x65F7D70 _sub_65F7D70
    asm("loc_65F7D70: mov 8(%esp),%eax;");
    asm("loc_65F7D74: mov 0x10(%esp),%ecx;");
    asm("loc_65F7D78: add $0xFFFFFFFE,%eax;");
    asm("loc_65F7D7B: push %ebx;");
    asm("loc_65F7D7C: xor %ebx,%ebx;");
    asm("loc_65F7D7E: test %eax,%eax;");
    asm("loc_65F7D80: movl $0,(%ecx);");
    asm("loc_65F7D86: mov %eax,0x14(%esp);");
    asm("loc_65F7D8A: jbe loc_65F7DFA;");
    asm("loc_65F7D8C: mov 8(%esp),%edx;");
    asm("loc_65F7D90: push %ebp;");
    asm("loc_65F7D91: push %esi;");
    asm("loc_65F7D92: mov 0x18(%esp),%esi;");
    asm("loc_65F7D96: push %edi;");
    asm("loc_65F7D97: lea 4(%edx),%eax;");
    asm("loc_65F7D9A: lea (%ebx),%ebx;");
    asm("loc_65F7DA0: mov -4(%eax),%dx;");
    asm("loc_65F7DA4: mov -2(%eax),%di;");
    asm("loc_65F7DA8: cmp %di,%dx;");
    asm("loc_65F7DAB: je loc_65F7DEB;");
    asm("loc_65F7DAD: mov (%eax),%bp;");
    asm("loc_65F7DB0: cmp %bp,%di;");
    asm("loc_65F7DB3: je loc_65F7DEB;");
    asm("loc_65F7DB5: cmp %dx,%bp;");
    asm("loc_65F7DB8: je loc_65F7DEB;");
    asm("loc_65F7DBA: test $1,%bl;");
    asm("loc_65F7DBD: mov (%ecx),%edi;");
    asm("loc_65F7DBF: mov %dx,(%esi,%edi,2);");
    asm("loc_65F7DC3: mov (%ecx),%edx;");
    asm("loc_65F7DC5: je loc_65F7DD5;");
    asm("loc_65F7DC7: mov (%eax),%di;");
    asm("loc_65F7DCA: mov %di,2(%esi,%edx,2);");
    asm("loc_65F7DCF: mov -2(%eax),%di;");
    asm("loc_65F7DD3: jmp loc_65F7DE1;");
    asm("loc_65F7DD5: mov -2(%eax),%di;");
    asm("loc_65F7DD9: mov %di,2(%esi,%edx,2);");
    asm("loc_65F7DDE: mov (%eax),%di;");
    asm("loc_65F7DE1: mov (%ecx),%edx;");
    asm("loc_65F7DE3: mov %di,4(%esi,%edx,2);");
    asm("loc_65F7DE8: addl $3,(%ecx);");
    asm("loc_65F7DEB: mov 0x20(%esp),%edx;");
    asm("loc_65F7DEF: inc %ebx;");
    asm("loc_65F7DF0: add $2,%eax;");
    asm("loc_65F7DF3: cmp %edx,%ebx;");
    asm("loc_65F7DF5: jb loc_65F7DA0;");
    asm("loc_65F7DF7: pop %edi;");
    asm("loc_65F7DF8: pop %esi;");
    asm("loc_65F7DF9: pop %ebp;");
    asm("loc_65F7DFA: pop %ebx;");
    asm("loc_65F7DFB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7E00() // _sub_65F7E00
{
    __DEBUG_ASM(65F7E00);
    // chunk 0x65F7E00 _sub_65F7E00
    asm("loc_65F7E00: mov 4(%esp),%ecx;");
    asm("loc_65F7E04: mov 8(%esp),%edx;");
    asm("loc_65F7E08: push %esi;");
    asm("loc_65F7E09: mov -2(%ecx,%edx,2),%si;");
    asm("loc_65F7E0E: xor %eax,%eax;");
    asm("loc_65F7E10: mov (%ecx),%ax;");
    asm("loc_65F7E13: cmp %si,%ax;");
    asm("loc_65F7E16: push %edi;");
    asm("loc_65F7E17: jb loc_65F7E1B;");
    asm("loc_65F7E19: mov %esi,%eax;");
    asm("loc_65F7E1B: mov 0x14(%esp),%edi;");
    asm("loc_65F7E1F: movzwl %ax,%eax;");
    asm("loc_65F7E22: mov %eax,(%edi);");
    asm("loc_65F7E24: mov (%ecx),%ax;");
    asm("loc_65F7E27: xor %esi,%esi;");
    asm("loc_65F7E29: mov -2(%ecx,%edx,2),%si;");
    asm("loc_65F7E2E: cmp %si,%ax;");
    asm("loc_65F7E31: jae loc_65F7E35;");
    asm("loc_65F7E33: mov %esi,%eax;");
    asm("loc_65F7E35: movzwl %ax,%eax;");
    asm("loc_65F7E38: push %ebx;");
    asm("loc_65F7E39: mov 0x1C(%esp),%ebx;");
    asm("loc_65F7E3D: xor %esi,%esi;");
    asm("loc_65F7E3F: test %edx,%edx;");
    asm("loc_65F7E41: mov %eax,(%ebx);");
    asm("loc_65F7E43: jbe loc_65F7E5C;");
    asm("loc_65F7E45: movzwl (%ecx,%esi,2),%eax;");
    asm("loc_65F7E49: cmp (%edi),%eax;");
    asm("loc_65F7E4B: jae loc_65F7E51;");
    asm("loc_65F7E4D: mov %eax,(%edi);");
    asm("loc_65F7E4F: jmp loc_65F7E57;");
    asm("loc_65F7E51: cmp (%ebx),%eax;");
    asm("loc_65F7E53: jbe loc_65F7E57;");
    asm("loc_65F7E55: mov %eax,(%ebx);");
    asm("loc_65F7E57: inc %esi;");
    asm("loc_65F7E58: cmp %edx,%esi;");
    asm("loc_65F7E5A: jb loc_65F7E45;");
    asm("loc_65F7E5C: xor %eax,%eax;");
    asm("loc_65F7E5E: test %edx,%edx;");
    asm("loc_65F7E60: pop %ebx;");
    asm("loc_65F7E61: jbe loc_65F7E6F;");
    asm("loc_65F7E63: mov (%edi),%si;");
    asm("loc_65F7E66: sub %si,(%ecx,%eax,2);");
    asm("loc_65F7E6A: inc %eax;");
    asm("loc_65F7E6B: cmp %edx,%eax;");
    asm("loc_65F7E6D: jb loc_65F7E63;");
    asm("loc_65F7E6F: pop %edi;");
    asm("loc_65F7E70: pop %esi;");
    asm("loc_65F7E71: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F7E80() // _sub_65F7E80
{
    __DEBUG_ASM(65F7E80);
    // chunk 0x65F7E80 _sub_65F7E80
    asm("loc_65F7E80: sub $0x7C,%esp;");
    asm("loc_65F7E83: push %esi;");
    asm("loc_65F7E84: mov 0x84(%esp),%esi;");
    asm("loc_65F7E8B: mov (%esi),%eax;");
    asm("loc_65F7E8D: push %edi;");
    asm("loc_65F7E8E: push $_data_66028F8;");
    asm("loc_65F7E93: push %esi;");
    asm("loc_65F7E94: mov %ecx,%edi;");
    asm("loc_65F7E96: calll *0x60(%eax);");
    asm("loc_65F7E99: test %eax,%eax;");
    asm("loc_65F7E9B: jne loc_65F7EA7;");
    asm("loc_65F7E9D: pop %edi;");
    asm("loc_65F7E9E: xor %al,%al;");
    asm("loc_65F7EA0: pop %esi;");
    asm("loc_65F7EA1: add $0x7C,%esp;");
    asm("loc_65F7EA4: ret $4;");
    asm("loc_65F7EA7: push %ebx;");
    asm("loc_65F7EA8: push %ebp;");
    asm("loc_65F7EA9: push $_data_6602040;");
    asm("loc_65F7EAE: push $_data_66028E8;");
    asm("loc_65F7EB3: lea 0x60(%esp),%ecx;");
    asm("loc_65F7EB7: call _sub_65F3E80;");
    asm("loc_65F7EBC: mov (%esi),%ecx;");
    asm("loc_65F7EBE: lea 0x58(%esp),%edx;");
    asm("loc_65F7EC2: push %edx;");
    asm("loc_65F7EC3: push %esi;");
    asm("loc_65F7EC4: calll *0x7C(%ecx);");
    asm("loc_65F7EC7: mov %eax,%ebp;");
    asm("loc_65F7EC9: or $0xFFFFFFFF,%ebx;");
    asm("loc_65F7ECC: cmp %ebx,%ebp;");
    asm("loc_65F7ECE: je loc_65F7F31;");
    asm("loc_65F7ED0: mov (%esi),%eax;");
    asm("loc_65F7ED2: push $0;");
    asm("loc_65F7ED4: push %ebp;");
    asm("loc_65F7ED5: push %esi;");
    asm("loc_65F7ED6: calll *0x28(%eax);");
    asm("loc_65F7ED9: mov %eax,%ebx;");
    asm("loc_65F7EDB: shr $2,%ebx;");
    asm("loc_65F7EDE: lea (,%ebx,4),%ecx;");
    asm("loc_65F7EE5: push %ecx;");
    asm("loc_65F7EE6: mov %eax,0x18(%esp);");
    asm("loc_65F7EEA: call _sub_6600BB6;");
    asm("loc_65F7EEF: mov (%esi),%edx;");
    asm("loc_65F7EF1: add $4,%esp;");
    asm("loc_65F7EF4: push $0;");
    asm("loc_65F7EF6: lea 0x1C(%esp),%ecx;");
    asm("loc_65F7EFA: push %ecx;");
    asm("loc_65F7EFB: mov 0x1C(%esp),%ecx;");
    asm("loc_65F7EFF: push %ecx;");
    asm("loc_65F7F00: push %eax;");
    asm("loc_65F7F01: push %ebp;");
    asm("loc_65F7F02: push %esi;");
    asm("loc_65F7F03: mov %eax,0x28(%esp);");
    asm("loc_65F7F07: calll *0x14(%edx);");
    asm("loc_65F7F0A: test %eax,%eax;");
    asm("loc_65F7F0C: je loc_65F7F1A;");
    asm("loc_65F7F0E: mov 0x10(%esp),%edx;");
    asm("loc_65F7F12: mov %ebx,0x10(%edi);");
    asm("loc_65F7F15: mov %edx,0x14(%edi);");
    asm("loc_65F7F18: jmp loc_65F7F27;");
    asm("loc_65F7F1A: mov 0x10(%esp),%eax;");
    asm("loc_65F7F1E: push %eax;");
    asm("loc_65F7F1F: call _sub_6600BB0;");
    asm("loc_65F7F24: add $4,%esp;");
    asm("loc_65F7F27: mov (%esi),%ecx;");
    asm("loc_65F7F29: push %ebp;");
    asm("loc_65F7F2A: push %esi;");
    asm("loc_65F7F2B: calll *0x10(%ecx);");
    asm("loc_65F7F2E: or $0xFFFFFFFF,%ebx;");
    asm("loc_65F7F31: mov %esi,0x2C(%esp);");
    asm("loc_65F7F35: mov (%esi),%edx;");
    asm("loc_65F7F37: push %esi;");
    asm("loc_65F7F38: calll *4(%edx);");
    asm("loc_65F7F3B: push $_data_6602040;");
    asm("loc_65F7F40: xor %ebp,%ebp;");
    asm("loc_65F7F42: push $_data_66028E0;");
    asm("loc_65F7F47: lea 0x60(%esp),%ecx;");
    asm("loc_65F7F4B: mov %ebx,0x24(%esp);");
    asm("loc_65F7F4F: mov %ebp,0x28(%esp);");
    asm("loc_65F7F53: mov %ebp,0x30(%esp);");
    asm("loc_65F7F57: call _sub_65F3E80;");
    asm("loc_65F7F5C: mov 0x2C(%esp),%eax;");
    asm("loc_65F7F60: lea 0x58(%esp),%edx;");
    asm("loc_65F7F64: push %edx;");
    asm("loc_65F7F65: mov %ebx,0x8C(%esp);");
    asm("loc_65F7F6C: mov (%eax),%ecx;");
    asm("loc_65F7F6E: push %eax;");
    asm("loc_65F7F6F: calll *0x7C(%ecx);");
    asm("loc_65F7F72: cmp %ebx,%eax;");
    asm("loc_65F7F74: mov %eax,0x1C(%esp);");
    asm("loc_65F7F78: je loc_65F7FBB;");
    asm("loc_65F7F7A: mov 0x2C(%esp),%ecx;");
    asm("loc_65F7F7E: mov (%ecx),%edx;");
    asm("loc_65F7F80: push %ebp;");
    asm("loc_65F7F81: push %eax;");
    asm("loc_65F7F82: push %ecx;");
    asm("loc_65F7F83: calll *0x28(%edx);");
    asm("loc_65F7F86: mov 0x1C(%esp),%edx;");
    asm("loc_65F7F8A: push %ebp;");
    asm("loc_65F7F8B: push %ebp;");
    asm("loc_65F7F8C: push %ebp;");
    asm("loc_65F7F8D: push $2;");
    asm("loc_65F7F8F: push %ebp;");
    asm("loc_65F7F90: mov %eax,0x34(%esp);");
    asm("loc_65F7F94: mov 0x40(%esp),%eax;");
    asm("loc_65F7F98: mov (%eax),%ecx;");
    asm("loc_65F7F9A: push %edx;");
    asm("loc_65F7F9B: push %eax;");
    asm("loc_65F7F9C: calll *0x3C(%ecx);");
    asm("loc_65F7F9F: cmp %ebx,%eax;");
    asm("loc_65F7FA1: mov %eax,0x24(%esp);");
    asm("loc_65F7FA5: je loc_65F7FBB;");
    asm("loc_65F7FA7: mov 0x2C(%esp),%ecx;");
    asm("loc_65F7FAB: mov (%ecx),%edx;");
    asm("loc_65F7FAD: push %ebp;");
    asm("loc_65F7FAE: push %ebp;");
    asm("loc_65F7FAF: push %ebp;");
    asm("loc_65F7FB0: push $4;");
    asm("loc_65F7FB2: push %eax;");
    asm("loc_65F7FB3: push %ecx;");
    asm("loc_65F7FB4: calll *0x40(%edx);");
    asm("loc_65F7FB7: mov %eax,0x28(%esp);");
    asm("loc_65F7FBB: mov 0x28(%esp),%eax;");
    asm("loc_65F7FBF: mov %esi,0x40(%esp);");
    asm("loc_65F7FC3: mov (%esi),%ecx;");
    asm("loc_65F7FC5: push %esi;");
    asm("loc_65F7FC6: mov %eax,0x1C(%esp);");
    asm("loc_65F7FCA: calll *4(%ecx);");
    asm("loc_65F7FCD: push $_data_6602040;");
    asm("loc_65F7FD2: push $_data_66028D0;");
    asm("loc_65F7FD7: lea 0x60(%esp),%ecx;");
    asm("loc_65F7FDB: mov %ebx,0x38(%esp);");
    asm("loc_65F7FDF: mov %ebp,0x3C(%esp);");
    asm("loc_65F7FE3: mov %ebp,0x44(%esp);");
    asm("loc_65F7FE7: call _sub_65F3E80;");
    asm("loc_65F7FEC: mov 0x40(%esp),%eax;");
    asm("loc_65F7FF0: lea 0x58(%esp),%ecx;");
    asm("loc_65F7FF4: push %ecx;");
    asm("loc_65F7FF5: mov %ebx,0x8C(%esp);");
    asm("loc_65F7FFC: mov (%eax),%edx;");
    asm("loc_65F7FFE: push %eax;");
    asm("loc_65F7FFF: calll *0x7C(%edx);");
    asm("loc_65F8002: cmp %ebx,%eax;");
    asm("loc_65F8004: mov %eax,0x30(%esp);");
    asm("loc_65F8008: je loc_65F804B;");
    asm("loc_65F800A: mov 0x40(%esp),%ecx;");
    asm("loc_65F800E: mov (%ecx),%edx;");
    asm("loc_65F8010: push %ebp;");
    asm("loc_65F8011: push %eax;");
    asm("loc_65F8012: push %ecx;");
    asm("loc_65F8013: calll *0x28(%edx);");
    asm("loc_65F8016: mov 0x30(%esp),%edx;");
    asm("loc_65F801A: push %ebp;");
    asm("loc_65F801B: push %ebp;");
    asm("loc_65F801C: push %ebp;");
    asm("loc_65F801D: push $2;");
    asm("loc_65F801F: push %ebp;");
    asm("loc_65F8020: mov %eax,0x48(%esp);");
    asm("loc_65F8024: mov 0x54(%esp),%eax;");
    asm("loc_65F8028: mov (%eax),%ecx;");
    asm("loc_65F802A: push %edx;");
    asm("loc_65F802B: push %eax;");
    asm("loc_65F802C: calll *0x3C(%ecx);");
    asm("loc_65F802F: cmp %ebx,%eax;");
    asm("loc_65F8031: mov %eax,0x38(%esp);");
    asm("loc_65F8035: je loc_65F804B;");
    asm("loc_65F8037: mov 0x40(%esp),%ecx;");
    asm("loc_65F803B: mov (%ecx),%edx;");
    asm("loc_65F803D: push %ebp;");
    asm("loc_65F803E: push %ebp;");
    asm("loc_65F803F: push %ebp;");
    asm("loc_65F8040: push $4;");
    asm("loc_65F8042: push %eax;");
    asm("loc_65F8043: push %ecx;");
    asm("loc_65F8044: calll *0x40(%edx);");
    asm("loc_65F8047: mov %eax,0x3C(%esp);");
    asm("loc_65F804B: mov 0x3C(%esp),%eax;");
    asm("loc_65F804F: mov %eax,0x14(%esp);");
    asm("loc_65F8053: mov $0xAAAAAAAB,%eax;");
    asm("loc_65F8058: mull 0x20(%esp);");
    asm("loc_65F805C: mov %edx,%ebx;");
    asm("loc_65F805E: shr $3,%ebx;");
    asm("loc_65F8061: lea (%ebx,%ebx,2),%ecx;");
    asm("loc_65F8064: shl $3,%ecx;");
    asm("loc_65F8067: push %ecx;");
    asm("loc_65F8068: mov %ebx,0x24(%edi);");
    asm("loc_65F806B: call _sub_6600BB6;");
    asm("loc_65F8070: mov %eax,%ebp;");
    asm("loc_65F8072: add $4,%esp;");
    asm("loc_65F8075: test %ebp,%ebp;");
    asm("loc_65F8077: je loc_65F809C;");
    asm("loc_65F8079: dec %ebx;");
    asm("loc_65F807A: test %ebx,%ebx;");
    asm("loc_65F807C: mov %ebp,0x10(%esp);");
    asm("loc_65F8080: jl loc_65F809E;");
    asm("loc_65F8082: inc %ebx;");
    asm("loc_65F8083: mov 0x10(%esp),%ecx;");
    asm("loc_65F8087: call _sub_65F8470;");
    asm("loc_65F808C: mov 0x10(%esp),%ecx;");
    asm("loc_65F8090: add $0x18,%ecx;");
    asm("loc_65F8093: dec %ebx;");
    asm("loc_65F8094: mov %ecx,0x10(%esp);");
    asm("loc_65F8098: jne loc_65F8083;");
    asm("loc_65F809A: jmp loc_65F809E;");
    asm("loc_65F809C: xor %ebp,%ebp;");
    asm("loc_65F809E: mov 0x24(%edi),%eax;");
    asm("loc_65F80A1: xor %ecx,%ecx;");
    asm("loc_65F80A3: cmp %ecx,%eax;");
    asm("loc_65F80A5: mov %ebp,0x28(%edi);");
    asm("loc_65F80A8: mov %ecx,0x10(%esp);");
    asm("loc_65F80AC: jbe loc_65F8108;");
    asm("loc_65F80AE: mov 0x18(%esp),%edx;");
    asm("loc_65F80B2: mov 0x14(%esp),%eax;");
    asm("loc_65F80B6: sub %eax,%edx;");
    asm("loc_65F80B8: mov %edx,0x18(%esp);");
    asm("loc_65F80BC: jmp loc_65F80C2;");
    asm("loc_65F80BE: mov 0x18(%esp),%edx;");
    asm("loc_65F80C2: mov 0x28(%edi),%ebx;");
    asm("loc_65F80C5: add %eax,%edx;");
    asm("loc_65F80C7: mov (%edx),%ebp;");
    asm("loc_65F80C9: add %ecx,%ebx;");
    asm("loc_65F80CB: mov %ebp,(%ebx);");
    asm("loc_65F80CD: mov 4(%edx),%ebp;");
    asm("loc_65F80D0: mov %ebp,4(%ebx);");
    asm("loc_65F80D3: mov 8(%edx),%edx;");
    asm("loc_65F80D6: mov %edx,8(%ebx);");
    asm("loc_65F80D9: mov 0x28(%edi),%edx;");
    asm("loc_65F80DC: lea 0xC(%edx,%ecx),%edx;");
    asm("loc_65F80E0: mov %eax,%ebx;");
    asm("loc_65F80E2: mov (%ebx),%ebp;");
    asm("loc_65F80E4: mov %ebp,(%edx);");
    asm("loc_65F80E6: mov 4(%ebx),%ebp;");
    asm("loc_65F80E9: mov %ebp,4(%edx);");
    asm("loc_65F80EC: mov 8(%ebx),%ebx;");
    asm("loc_65F80EF: mov %ebx,8(%edx);");
    asm("loc_65F80F2: mov 0x10(%esp),%edx;");
    asm("loc_65F80F6: mov 0x24(%edi),%ebx;");
    asm("loc_65F80F9: inc %edx;");
    asm("loc_65F80FA: add $0xC,%eax;");
    asm("loc_65F80FD: add $0x18,%ecx;");
    asm("loc_65F8100: cmp %ebx,%edx;");
    asm("loc_65F8102: mov %edx,0x10(%esp);");
    asm("loc_65F8106: jb loc_65F80BE;");
    asm("loc_65F8108: lea 0x30(%esp),%ecx;");
    asm("loc_65F810C: call _sub_65F7D10;");
    asm("loc_65F8111: lea 0x40(%esp),%ecx;");
    asm("loc_65F8115: call _sub_65F9170;");
    asm("loc_65F811A: lea 0x1C(%esp),%ecx;");
    asm("loc_65F811E: call _sub_65F7D10;");
    asm("loc_65F8123: lea 0x2C(%esp),%ecx;");
    asm("loc_65F8127: call _sub_65F9170;");
    asm("loc_65F812C: push $_data_6602040;");
    asm("loc_65F8131: push $_data_66028C4;");
    asm("loc_65F8136: lea 0x60(%esp),%ecx;");
    asm("loc_65F813A: call _sub_65F3E80;");
    asm("loc_65F813F: mov (%esi),%eax;");
    asm("loc_65F8141: lea 0x58(%esp),%ecx;");
    asm("loc_65F8145: push %ecx;");
    asm("loc_65F8146: push %esi;");
    asm("loc_65F8147: calll *0x7C(%eax);");
    asm("loc_65F814A: mov %eax,%ebx;");
    asm("loc_65F814C: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_65F814F: je loc_65F81A0;");
    asm("loc_65F8151: mov (%esi),%edx;");
    asm("loc_65F8153: push $0;");
    asm("loc_65F8155: push %ebx;");
    asm("loc_65F8156: push %esi;");
    asm("loc_65F8157: calll *0x28(%edx);");
    asm("loc_65F815A: mov %eax,%ebp;");
    asm("loc_65F815C: shr $2,%eax;");
    asm("loc_65F815F: shl $2,%eax;");
    asm("loc_65F8162: push %eax;");
    asm("loc_65F8163: call _sub_6600BB6;");
    asm("loc_65F8168: mov (%esi),%ecx;");
    asm("loc_65F816A: add $4,%esp;");
    asm("loc_65F816D: push $0;");
    asm("loc_65F816F: lea 0x1C(%esp),%edx;");
    asm("loc_65F8173: push %edx;");
    asm("loc_65F8174: push %ebp;");
    asm("loc_65F8175: push %eax;");
    asm("loc_65F8176: push %ebx;");
    asm("loc_65F8177: push %esi;");
    asm("loc_65F8178: mov %eax,0x28(%esp);");
    asm("loc_65F817C: calll *0x14(%ecx);");
    asm("loc_65F817F: test %eax,%eax;");
    asm("loc_65F8181: je loc_65F818C;");
    asm("loc_65F8183: mov 0x10(%esp),%eax;");
    asm("loc_65F8187: mov %eax,0x54(%edi);");
    asm("loc_65F818A: jmp loc_65F8199;");
    asm("loc_65F818C: mov 0x10(%esp),%ecx;");
    asm("loc_65F8190: push %ecx;");
    asm("loc_65F8191: call _sub_6600BB0;");
    asm("loc_65F8196: add $4,%esp;");
    asm("loc_65F8199: mov (%esi),%edx;");
    asm("loc_65F819B: push %ebx;");
    asm("loc_65F819C: push %esi;");
    asm("loc_65F819D: calll *0x10(%edx);");
    asm("loc_65F81A0: push $_data_6602040;");
    asm("loc_65F81A5: push $_data_66028C0;");
    asm("loc_65F81AA: lea 0x60(%esp),%ecx;");
    asm("loc_65F81AE: call _sub_65F3E80;");
    asm("loc_65F81B3: mov (%esi),%eax;");
    asm("loc_65F81B5: lea 0x58(%esp),%ecx;");
    asm("loc_65F81B9: push %ecx;");
    asm("loc_65F81BA: push %esi;");
    asm("loc_65F81BB: calll *0x7C(%eax);");
    asm("loc_65F81BE: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F81C1: mov %eax,0x10(%esp);");
    asm("loc_65F81C5: je loc_65F8239;");
    asm("loc_65F81C7: mov (%esi),%edx;");
    asm("loc_65F81C9: push $0;");
    asm("loc_65F81CB: push %eax;");
    asm("loc_65F81CC: push %esi;");
    asm("loc_65F81CD: calll *0x28(%edx);");
    asm("loc_65F81D0: mov %eax,%ebx;");
    asm("loc_65F81D2: mov %eax,0x18(%esp);");
    asm("loc_65F81D6: shr $3,%ebx;");
    asm("loc_65F81D9: lea (,%ebx,8),%eax;");
    asm("loc_65F81E0: push %eax;");
    asm("loc_65F81E1: call _sub_6600BB6;");
    asm("loc_65F81E6: mov %eax,%ebp;");
    asm("loc_65F81E8: add $4,%esp;");
    asm("loc_65F81EB: test %ebp,%ebp;");
    asm("loc_65F81ED: je loc_65F81FF;");
    asm("loc_65F81EF: push $_sub_65F8470;");
    asm("loc_65F81F4: push %ebx;");
    asm("loc_65F81F5: push $8;");
    asm("loc_65F81F7: push %ebp;");
    asm("loc_65F81F8: call _sub_65F1000;");
    asm("loc_65F81FD: jmp loc_65F8201;");
    asm("loc_65F81FF: xor %ebp,%ebp;");
    asm("loc_65F8201: mov 0x18(%esp),%eax;");
    asm("loc_65F8205: mov (%esi),%ecx;");
    asm("loc_65F8207: push $0;");
    asm("loc_65F8209: lea 0x18(%esp),%edx;");
    asm("loc_65F820D: push %edx;");
    asm("loc_65F820E: mov 0x18(%esp),%edx;");
    asm("loc_65F8212: push %eax;");
    asm("loc_65F8213: push %ebp;");
    asm("loc_65F8214: push %edx;");
    asm("loc_65F8215: push %esi;");
    asm("loc_65F8216: calll *0x14(%ecx);");
    asm("loc_65F8219: test %eax,%eax;");
    asm("loc_65F821B: je loc_65F8225;");
    asm("loc_65F821D: mov %ebx,0x4C(%edi);");
    asm("loc_65F8220: mov %ebp,0x50(%edi);");
    asm("loc_65F8223: jmp loc_65F822E;");
    asm("loc_65F8225: push %ebp;");
    asm("loc_65F8226: call _sub_6600BB0;");
    asm("loc_65F822B: add $4,%esp;");
    asm("loc_65F822E: mov 0x10(%esp),%ecx;");
    asm("loc_65F8232: mov (%esi),%eax;");
    asm("loc_65F8234: push %ecx;");
    asm("loc_65F8235: push %esi;");
    asm("loc_65F8236: calll *0x10(%eax);");
    asm("loc_65F8239: push %esi;");
    asm("loc_65F823A: lea 0x48(%esp),%ecx;");
    asm("loc_65F823E: call _sub_65F8360;");
    asm("loc_65F8243: push $0xFFFFFFFF;");
    asm("loc_65F8245: push $_data_66028AC;");
    asm("loc_65F824A: lea 0x4C(%esp),%ecx;");
    asm("loc_65F824E: call _sub_65F8390;");
    asm("loc_65F8253: mov 0x50(%esp),%ebp;");
    asm("loc_65F8257: push %esi;");
    asm("loc_65F8258: lea 0x34(%esp),%ecx;");
    asm("loc_65F825C: mov %ebp,0x14(%esp);");
    asm("loc_65F8260: call _sub_65F8360;");
    asm("loc_65F8265: push $0xFFFFFFFF;");
    asm("loc_65F8267: push $_data_660289C;");
    asm("loc_65F826C: lea 0x38(%esp),%ecx;");
    asm("loc_65F8270: call _sub_65F8390;");
    asm("loc_65F8275: mov 0x3C(%esp),%edx;");
    asm("loc_65F8279: push %esi;");
    asm("loc_65F827A: lea 0x20(%esp),%ecx;");
    asm("loc_65F827E: mov %edx,0x18(%esp);");
    asm("loc_65F8282: call _sub_65F8360;");
    asm("loc_65F8287: push $0xFFFFFFFF;");
    asm("loc_65F8289: push $_data_6602888;");
    asm("loc_65F828E: lea 0x24(%esp),%ecx;");
    asm("loc_65F8292: call _sub_65F8390;");
    asm("loc_65F8297: mov 0x34(%esp),%ebx;");
    asm("loc_65F829B: mov 0x28(%esp),%eax;");
    asm("loc_65F829F: shr $2,%ebx;");
    asm("loc_65F82A2: lea (,%ebx,8),%ecx;");
    asm("loc_65F82A9: push %ecx;");
    asm("loc_65F82AA: mov %eax,0x1C(%esp);");
    asm("loc_65F82AE: call _sub_6600BB6;");
    asm("loc_65F82B3: mov %eax,0x2C(%edi);");
    asm("loc_65F82B6: add $4,%esp;");
    asm("loc_65F82B9: xor %eax,%eax;");
    asm("loc_65F82BB: test %ebx,%ebx;");
    asm("loc_65F82BD: jbe loc_65F82F2;");
    asm("loc_65F82BF: mov 0x18(%esp),%ecx;");
    asm("loc_65F82C3: mov 0x14(%esp),%edx;");
    asm("loc_65F82C7: sub %ecx,%edx;");
    asm("loc_65F82C9: mov %edx,0x18(%esp);");
    asm("loc_65F82CD: jmp loc_65F82D3;");
    asm("loc_65F82CF: mov 0x18(%esp),%edx;");
    asm("loc_65F82D3: mov (%edx,%ecx),%edx;");
    asm("loc_65F82D6: mov 0x2C(%edi),%ebp;");
    asm("loc_65F82D9: mov %edx,(%ebp,%eax,8);");
    asm("loc_65F82DD: mov (%ecx),%ebp;");
    asm("loc_65F82DF: mov 0x2C(%edi),%edx;");
    asm("loc_65F82E2: mov %ebp,4(%edx,%eax,8);");
    asm("loc_65F82E6: inc %eax;");
    asm("loc_65F82E7: add $4,%ecx;");
    asm("loc_65F82EA: cmp %ebx,%eax;");
    asm("loc_65F82EC: jb loc_65F82CF;");
    asm("loc_65F82EE: mov 0x10(%esp),%ebp;");
    asm("loc_65F82F2: mov 0x24(%edi),%eax;");
    asm("loc_65F82F5: mov 0x2C(%edi),%ebx;");
    asm("loc_65F82F8: shl $3,%eax;");
    asm("loc_65F82FB: push %eax;");
    asm("loc_65F82FC: call _sub_6600BB6;");
    asm("loc_65F8301: mov 0x24(%edi),%ecx;");
    asm("loc_65F8304: mov %eax,0x30(%edi);");
    asm("loc_65F8307: add $4,%esp;");
    asm("loc_65F830A: xor %eax,%eax;");
    asm("loc_65F830C: test %ecx,%ecx;");
    asm("loc_65F830E: jbe loc_65F832C;");
    asm("loc_65F8310: mov (%ebp,%eax,4),%ecx;");
    asm("loc_65F8314: mov 0x30(%edi),%edx;");
    asm("loc_65F8317: mov %ecx,(%edx,%eax,8);");
    asm("loc_65F831A: mov 0x30(%edi),%edx;");
    asm("loc_65F831D: mov %ebx,4(%edx,%eax,8);");
    asm("loc_65F8321: lea (%ebx,%ecx,8),%ebx;");
    asm("loc_65F8324: mov 0x24(%edi),%ecx;");
    asm("loc_65F8327: inc %eax;");
    asm("loc_65F8328: cmp %ecx,%eax;");
    asm("loc_65F832A: jb loc_65F8310;");
    asm("loc_65F832C: lea 0x1C(%esp),%ecx;");
    asm("loc_65F8330: call _sub_65F7CA0;");
    asm("loc_65F8335: lea 0x30(%esp),%ecx;");
    asm("loc_65F8339: call _sub_65F7CA0;");
    asm("loc_65F833E: lea 0x44(%esp),%ecx;");
    asm("loc_65F8342: call _sub_65F7CA0;");
    asm("loc_65F8347: mov (%esi),%eax;");
    asm("loc_65F8349: push $_data_6602020;");
    asm("loc_65F834E: push %esi;");
    asm("loc_65F834F: calll *0x60(%eax);");
    asm("loc_65F8352: pop %ebp;");
    asm("loc_65F8353: pop %ebx;");
    asm("loc_65F8354: pop %edi;");
    asm("loc_65F8355: mov $1,%al;");
    asm("loc_65F8357: pop %esi;");
    asm("loc_65F8358: add $0x7C,%esp;");
    asm("loc_65F835B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8360() // _sub_65F8360
{
    __DEBUG_ASM(65F8360);
    // chunk 0x65F8360 _sub_65F8360
    asm("loc_65F8360: mov 4(%esp),%eax;");
    asm("loc_65F8364: test %eax,%eax;");
    asm("loc_65F8366: push %esi;");
    asm("loc_65F8367: mov %ecx,%esi;");
    asm("loc_65F8369: mov %eax,0x10(%esi);");
    asm("loc_65F836C: je loc_65F8374;");
    asm("loc_65F836E: mov (%eax),%ecx;");
    asm("loc_65F8370: push %eax;");
    asm("loc_65F8371: calll *4(%ecx);");
    asm("loc_65F8374: movl $0xFFFFFFFF,(%esi);");
    asm("loc_65F837A: movl $0,4(%esi);");
    asm("loc_65F8381: movl $0,0xC(%esi);");
    asm("loc_65F8388: mov %esi,%eax;");
    asm("loc_65F838A: pop %esi;");
    asm("loc_65F838B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8390() // _sub_65F8390
{
    __DEBUG_ASM(65F8390);
    // chunk 0x65F8390 _sub_65F8390
    asm("loc_65F8390: sub $0x34,%esp;");
    asm("loc_65F8393: push %esi;");
    asm("loc_65F8394: push %edi;");
    asm("loc_65F8395: mov %ecx,%esi;");
    asm("loc_65F8397: xor %eax,%eax;");
    asm("loc_65F8399: movl $_data_6602040,0xC(%esp);");
    asm("loc_65F83A1: mov $0xB,%ecx;");
    asm("loc_65F83A6: lea 0x10(%esp),%edi;");
    asm("loc_65F83AA: rep stos %eax,(%edi);");
    asm("loc_65F83AC: mov 0x44(%esp),%ecx;");
    asm("loc_65F83B0: mov 0x40(%esp),%eax;");
    asm("loc_65F83B4: mov %ecx,0x38(%esp);");
    asm("loc_65F83B8: mov %eax,0x14(%esp);");
    asm("loc_65F83BC: mov 0x10(%esi),%eax;");
    asm("loc_65F83BF: lea 8(%esp),%ecx;");
    asm("loc_65F83C3: push %ecx;");
    asm("loc_65F83C4: movl $0x80000000,0x1C(%esp);");
    asm("loc_65F83CC: movl $1,0x20(%esp);");
    asm("loc_65F83D4: movl $3,0x28(%esp);");
    asm("loc_65F83DC: movl $0x8000080,0x2C(%esp);");
    asm("loc_65F83E4: movl $0x34,0xC(%esp);");
    asm("loc_65F83EC: mov (%eax),%edx;");
    asm("loc_65F83EE: push %eax;");
    asm("loc_65F83EF: or $0xFFFFFFFF,%edi;");
    asm("loc_65F83F2: calll *0x7C(%edx);");
    asm("loc_65F83F5: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F83F8: mov %eax,(%esi);");
    asm("loc_65F83FA: jne loc_65F8409;");
    asm("loc_65F83FC: pop %edi;");
    asm("loc_65F83FD: mov $0xFFFFFFF8,%eax;");
    asm("loc_65F8402: pop %esi;");
    asm("loc_65F8403: add $0x34,%esp;");
    asm("loc_65F8406: ret $8;");
    asm("loc_65F8409: mov 0x10(%esi),%ecx;");
    asm("loc_65F840C: mov (%ecx),%edx;");
    asm("loc_65F840E: push $0;");
    asm("loc_65F8410: push %eax;");
    asm("loc_65F8411: push %ecx;");
    asm("loc_65F8412: calll *0x28(%edx);");
    asm("loc_65F8415: mov (%esi),%edx;");
    asm("loc_65F8417: push $0;");
    asm("loc_65F8419: push $0;");
    asm("loc_65F841B: push $0;");
    asm("loc_65F841D: push $2;");
    asm("loc_65F841F: push $0;");
    asm("loc_65F8421: mov %eax,4(%esi);");
    asm("loc_65F8424: mov 0x10(%esi),%eax;");
    asm("loc_65F8427: mov (%eax),%ecx;");
    asm("loc_65F8429: push %edx;");
    asm("loc_65F842A: push %eax;");
    asm("loc_65F842B: calll *0x3C(%ecx);");
    asm("loc_65F842E: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F8431: mov %eax,8(%esi);");
    asm("loc_65F8434: jne loc_65F8443;");
    asm("loc_65F8436: pop %edi;");
    asm("loc_65F8437: mov $0xFFFFFFFA,%eax;");
    asm("loc_65F843C: pop %esi;");
    asm("loc_65F843D: add $0x34,%esp;");
    asm("loc_65F8440: ret $8;");
    asm("loc_65F8443: mov 0x10(%esi),%ecx;");
    asm("loc_65F8446: mov (%ecx),%edx;");
    asm("loc_65F8448: push $0;");
    asm("loc_65F844A: push $0;");
    asm("loc_65F844C: push $0;");
    asm("loc_65F844E: push $4;");
    asm("loc_65F8450: push %eax;");
    asm("loc_65F8451: push %ecx;");
    asm("loc_65F8452: calll *0x40(%edx);");
    asm("loc_65F8455: test %eax,%eax;");
    asm("loc_65F8457: mov %eax,0xC(%esi);");
    asm("loc_65F845A: je loc_65F8466;");
    asm("loc_65F845C: pop %edi;");
    asm("loc_65F845D: xor %eax,%eax;");
    asm("loc_65F845F: pop %esi;");
    asm("loc_65F8460: add $0x34,%esp;");
    asm("loc_65F8463: ret $8;");
    asm("loc_65F8466: mov %edi,%eax;");
    asm("loc_65F8468: pop %edi;");
    asm("loc_65F8469: pop %esi;");
    asm("loc_65F846A: add $0x34,%esp;");
    asm("loc_65F846D: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8470() // ??0Iostream_init@@QAE@XZ
{
    __DEBUG_ASM(65F8470);
    // chunk 0x65F8470 _sub_65F8470
    asm("loc_65F8470: mov %ecx,%eax;");
    asm("loc_65F8472: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8480() // _sub_65F8480
{
    __DEBUG_ASM(65F8480);
    // chunk 0x65F8480 _sub_65F8480
    asm("loc_65F8480: sub $0x108,%esp;");
    asm("loc_65F8486: push %ebx;");
    asm("loc_65F8487: mov 0x110(%esp),%ebx;");
    asm("loc_65F848E: mov (%ebx),%eax;");
    asm("loc_65F8490: push %esi;");
    asm("loc_65F8491: push $_data_66028F8;");
    asm("loc_65F8496: push %ebx;");
    asm("loc_65F8497: mov %ecx,%esi;");
    asm("loc_65F8499: calll *0x60(%eax);");
    asm("loc_65F849C: test %eax,%eax;");
    asm("loc_65F849E: jne loc_65F84AD;");
    asm("loc_65F84A0: pop %esi;");
    asm("loc_65F84A1: xor %al,%al;");
    asm("loc_65F84A3: pop %ebx;");
    asm("loc_65F84A4: add $0x108,%esp;");
    asm("loc_65F84AA: ret $4;");
    asm("loc_65F84AD: mov (%ebx),%ecx;");
    asm("loc_65F84AF: push %ebp;");
    asm("loc_65F84B0: push %edi;");
    asm("loc_65F84B1: push %ebx;");
    asm("loc_65F84B2: mov %ebx,0x80(%esp);");
    asm("loc_65F84B9: calll *4(%ecx);");
    asm("loc_65F84BC: push $_data_6602040;");
    asm("loc_65F84C1: xor %ebp,%ebp;");
    asm("loc_65F84C3: push $_data_6602970;");
    asm("loc_65F84C8: lea 0xD8(%esp),%ecx;");
    asm("loc_65F84CF: mov %ebp,0x78(%esp);");
    asm("loc_65F84D3: mov %ebp,0x80(%esp);");
    asm("loc_65F84DA: call _sub_65F3E80;");
    asm("loc_65F84DF: lea 0xD0(%esp),%eax;");
    asm("loc_65F84E6: push %eax;");
    asm("loc_65F84E7: movl $0xFFFFFFFF,0x104(%esp);");
    asm("loc_65F84F2: mov (%ebx),%edx;");
    asm("loc_65F84F4: push %ebx;");
    asm("loc_65F84F5: calll *0x7C(%edx);");
    asm("loc_65F84F8: mov %eax,%edi;");
    asm("loc_65F84FA: cmp $0xFFFFFFFF,%edi;");
    asm("loc_65F84FD: mov %edi,0x6C(%esp);");
    asm("loc_65F8501: je loc_65F8538;");
    asm("loc_65F8503: mov (%ebx),%ecx;");
    asm("loc_65F8505: push %ebp;");
    asm("loc_65F8506: push %edi;");
    asm("loc_65F8507: push %ebx;");
    asm("loc_65F8508: calll *0x28(%ecx);");
    asm("loc_65F850B: mov (%ebx),%edx;");
    asm("loc_65F850D: push %ebp;");
    asm("loc_65F850E: push %ebp;");
    asm("loc_65F850F: push %ebp;");
    asm("loc_65F8510: push $2;");
    asm("loc_65F8512: push %ebp;");
    asm("loc_65F8513: push %edi;");
    asm("loc_65F8514: push %ebx;");
    asm("loc_65F8515: mov %eax,0x8C(%esp);");
    asm("loc_65F851C: calll *0x3C(%edx);");
    asm("loc_65F851F: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F8522: mov %eax,0x74(%esp);");
    asm("loc_65F8526: je loc_65F8538;");
    asm("loc_65F8528: mov (%ebx),%ecx;");
    asm("loc_65F852A: push %ebp;");
    asm("loc_65F852B: push %ebp;");
    asm("loc_65F852C: push %ebp;");
    asm("loc_65F852D: push $4;");
    asm("loc_65F852F: push %eax;");
    asm("loc_65F8530: push %ebx;");
    asm("loc_65F8531: calll *0x40(%ecx);");
    asm("loc_65F8534: mov %eax,0x78(%esp);");
    asm("loc_65F8538: push %ebx;");
    asm("loc_65F8539: lea 0x68(%esp),%ecx;");
    asm("loc_65F853D: call _sub_65F9150;");
    asm("loc_65F8542: push $_data_6602040;");
    asm("loc_65F8547: or $0xFFFFFFFF,%edi;");
    asm("loc_65F854A: push $_data_6602960;");
    asm("loc_65F854F: lea 0xD8(%esp),%ecx;");
    asm("loc_65F8556: mov %edi,0x5C(%esp);");
    asm("loc_65F855A: mov %ebp,0x60(%esp);");
    asm("loc_65F855E: mov %ebp,0x68(%esp);");
    asm("loc_65F8562: call _sub_65F3E80;");
    asm("loc_65F8567: mov 0x64(%esp),%eax;");
    asm("loc_65F856B: lea 0xD0(%esp),%ecx;");
    asm("loc_65F8572: push %ecx;");
    asm("loc_65F8573: mov %edi,0x104(%esp);");
    asm("loc_65F857A: mov (%eax),%edx;");
    asm("loc_65F857C: push %eax;");
    asm("loc_65F857D: calll *0x7C(%edx);");
    asm("loc_65F8580: cmp %edi,%eax;");
    asm("loc_65F8582: mov %eax,0x54(%esp);");
    asm("loc_65F8586: je loc_65F85C9;");
    asm("loc_65F8588: mov 0x64(%esp),%ecx;");
    asm("loc_65F858C: mov (%ecx),%edx;");
    asm("loc_65F858E: push %ebp;");
    asm("loc_65F858F: push %eax;");
    asm("loc_65F8590: push %ecx;");
    asm("loc_65F8591: calll *0x28(%edx);");
    asm("loc_65F8594: mov 0x54(%esp),%edx;");
    asm("loc_65F8598: push %ebp;");
    asm("loc_65F8599: push %ebp;");
    asm("loc_65F859A: push %ebp;");
    asm("loc_65F859B: push $2;");
    asm("loc_65F859D: push %ebp;");
    asm("loc_65F859E: mov %eax,0x6C(%esp);");
    asm("loc_65F85A2: mov 0x78(%esp),%eax;");
    asm("loc_65F85A6: mov (%eax),%ecx;");
    asm("loc_65F85A8: push %edx;");
    asm("loc_65F85A9: push %eax;");
    asm("loc_65F85AA: calll *0x3C(%ecx);");
    asm("loc_65F85AD: cmp %edi,%eax;");
    asm("loc_65F85AF: mov %eax,0x5C(%esp);");
    asm("loc_65F85B3: je loc_65F85C9;");
    asm("loc_65F85B5: mov 0x64(%esp),%ecx;");
    asm("loc_65F85B9: mov (%ecx),%edx;");
    asm("loc_65F85BB: push %ebp;");
    asm("loc_65F85BC: push %ebp;");
    asm("loc_65F85BD: push %ebp;");
    asm("loc_65F85BE: push $4;");
    asm("loc_65F85C0: push %eax;");
    asm("loc_65F85C1: push %ecx;");
    asm("loc_65F85C2: calll *0x40(%edx);");
    asm("loc_65F85C5: mov %eax,0x60(%esp);");
    asm("loc_65F85C9: mov 0x60(%esp),%edi;");
    asm("loc_65F85CD: push %ebx;");
    asm("loc_65F85CE: lea 0x54(%esp),%ecx;");
    asm("loc_65F85D2: call _sub_65F9150;");
    asm("loc_65F85D7: push $_data_6602040;");
    asm("loc_65F85DC: push $_data_660294C;");
    asm("loc_65F85E1: lea 0xD8(%esp),%ecx;");
    asm("loc_65F85E8: movl $0xFFFFFFFF,0x48(%esp);");
    asm("loc_65F85F0: mov %ebp,0x4C(%esp);");
    asm("loc_65F85F4: mov %ebp,0x54(%esp);");
    asm("loc_65F85F8: call _sub_65F3E80;");
    asm("loc_65F85FD: mov 0x50(%esp),%eax;");
    asm("loc_65F8601: lea 0xD0(%esp),%edx;");
    asm("loc_65F8608: push %edx;");
    asm("loc_65F8609: movl $0xFFFFFFFF,0x104(%esp);");
    asm("loc_65F8614: mov (%eax),%ecx;");
    asm("loc_65F8616: push %eax;");
    asm("loc_65F8617: calll *0x7C(%ecx);");
    asm("loc_65F861A: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F861D: mov %eax,0x40(%esp);");
    asm("loc_65F8621: je loc_65F8665;");
    asm("loc_65F8623: mov 0x50(%esp),%ecx;");
    asm("loc_65F8627: mov (%ecx),%edx;");
    asm("loc_65F8629: push %ebp;");
    asm("loc_65F862A: push %eax;");
    asm("loc_65F862B: push %ecx;");
    asm("loc_65F862C: calll *0x28(%edx);");
    asm("loc_65F862F: mov 0x40(%esp),%edx;");
    asm("loc_65F8633: push %ebp;");
    asm("loc_65F8634: push %ebp;");
    asm("loc_65F8635: push %ebp;");
    asm("loc_65F8636: push $2;");
    asm("loc_65F8638: push %ebp;");
    asm("loc_65F8639: mov %eax,0x58(%esp);");
    asm("loc_65F863D: mov 0x64(%esp),%eax;");
    asm("loc_65F8641: mov (%eax),%ecx;");
    asm("loc_65F8643: push %edx;");
    asm("loc_65F8644: push %eax;");
    asm("loc_65F8645: calll *0x3C(%ecx);");
    asm("loc_65F8648: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F864B: mov %eax,0x48(%esp);");
    asm("loc_65F864F: je loc_65F8665;");
    asm("loc_65F8651: mov 0x50(%esp),%ecx;");
    asm("loc_65F8655: mov (%ecx),%edx;");
    asm("loc_65F8657: push %ebp;");
    asm("loc_65F8658: push %ebp;");
    asm("loc_65F8659: push %ebp;");
    asm("loc_65F865A: push $4;");
    asm("loc_65F865C: push %eax;");
    asm("loc_65F865D: push %ecx;");
    asm("loc_65F865E: calll *0x40(%edx);");
    asm("loc_65F8661: mov %eax,0x4C(%esp);");
    asm("loc_65F8665: mov 0x4C(%esp),%eax;");
    asm("loc_65F8669: push %ebx;");
    asm("loc_65F866A: lea 0x40(%esp),%ecx;");
    asm("loc_65F866E: mov %eax,0x28(%esp);");
    asm("loc_65F8672: call _sub_65F9150;");
    asm("loc_65F8677: push $_data_6602040;");
    asm("loc_65F867C: push $_data_6602938;");
    asm("loc_65F8681: lea 0xD8(%esp),%ecx;");
    asm("loc_65F8688: movl $0xFFFFFFFF,0x34(%esp);");
    asm("loc_65F8690: mov %ebp,0x38(%esp);");
    asm("loc_65F8694: mov %ebp,0x40(%esp);");
    asm("loc_65F8698: call _sub_65F3E80;");
    asm("loc_65F869D: mov 0x3C(%esp),%eax;");
    asm("loc_65F86A1: lea 0xD0(%esp),%edx;");
    asm("loc_65F86A8: push %edx;");
    asm("loc_65F86A9: movl $0xFFFFFFFF,0x104(%esp);");
    asm("loc_65F86B4: mov (%eax),%ecx;");
    asm("loc_65F86B6: push %eax;");
    asm("loc_65F86B7: calll *0x7C(%ecx);");
    asm("loc_65F86BA: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F86BD: mov %eax,0x2C(%esp);");
    asm("loc_65F86C1: je loc_65F8705;");
    asm("loc_65F86C3: mov 0x3C(%esp),%ecx;");
    asm("loc_65F86C7: mov (%ecx),%edx;");
    asm("loc_65F86C9: push %ebp;");
    asm("loc_65F86CA: push %eax;");
    asm("loc_65F86CB: push %ecx;");
    asm("loc_65F86CC: calll *0x28(%edx);");
    asm("loc_65F86CF: mov 0x2C(%esp),%edx;");
    asm("loc_65F86D3: push %ebp;");
    asm("loc_65F86D4: push %ebp;");
    asm("loc_65F86D5: push %ebp;");
    asm("loc_65F86D6: push $2;");
    asm("loc_65F86D8: push %ebp;");
    asm("loc_65F86D9: mov %eax,0x44(%esp);");
    asm("loc_65F86DD: mov 0x50(%esp),%eax;");
    asm("loc_65F86E1: mov (%eax),%ecx;");
    asm("loc_65F86E3: push %edx;");
    asm("loc_65F86E4: push %eax;");
    asm("loc_65F86E5: calll *0x3C(%ecx);");
    asm("loc_65F86E8: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65F86EB: mov %eax,0x34(%esp);");
    asm("loc_65F86EF: je loc_65F8705;");
    asm("loc_65F86F1: mov 0x3C(%esp),%ecx;");
    asm("loc_65F86F5: mov (%ecx),%edx;");
    asm("loc_65F86F7: push %ebp;");
    asm("loc_65F86F8: push %ebp;");
    asm("loc_65F86F9: push %ebp;");
    asm("loc_65F86FA: push $4;");
    asm("loc_65F86FC: push %eax;");
    asm("loc_65F86FD: push %ecx;");
    asm("loc_65F86FE: calll *0x40(%edx);");
    asm("loc_65F8701: mov %eax,0x38(%esp);");
    asm("loc_65F8705: mov 0x38(%esp),%eax;");
    asm("loc_65F8709: push %ebx;");
    asm("loc_65F870A: lea 0xA8(%esp),%ecx;");
    asm("loc_65F8711: mov %eax,0x20(%esp);");
    asm("loc_65F8715: call _sub_65F9150;");
    asm("loc_65F871A: push $0xFFFFFFFF;");
    asm("loc_65F871C: push $_data_6602924;");
    asm("loc_65F8721: lea 0x9C(%esp),%ecx;");
    asm("loc_65F8728: movl $0xFFFFFFFF,0x9C(%esp);");
    asm("loc_65F8733: mov %ebp,0xA0(%esp);");
    asm("loc_65F873A: mov %ebp,0xA8(%esp);");
    asm("loc_65F8741: call _sub_65F8390;");
    asm("loc_65F8746: mov 0xA0(%esp),%ecx;");
    asm("loc_65F874D: mov %ecx,0x10(%esp);");
    asm("loc_65F8751: push %ebx;");
    asm("loc_65F8752: lea 0xD0(%esp),%ecx;");
    asm("loc_65F8759: call _sub_65F9150;");
    asm("loc_65F875E: push $0xFFFFFFFF;");
    asm("loc_65F8760: push $_data_660291C;");
    asm("loc_65F8765: lea 0xC4(%esp),%ecx;");
    asm("loc_65F876C: movl $0xFFFFFFFF,0xC4(%esp);");
    asm("loc_65F8777: mov %ebp,0xC8(%esp);");
    asm("loc_65F877E: mov %ebp,0xD0(%esp);");
    asm("loc_65F8785: call _sub_65F8390;");
    asm("loc_65F878A: mov 0xC8(%esp),%edx;");
    asm("loc_65F8791: push %ebx;");
    asm("loc_65F8792: lea 0xBC(%esp),%ecx;");
    asm("loc_65F8799: mov %edx,0x1C(%esp);");
    asm("loc_65F879D: call _sub_65F9150;");
    asm("loc_65F87A2: push $0xFFFFFFFF;");
    asm("loc_65F87A4: push $_data_6602914;");
    asm("loc_65F87A9: lea 0xB0(%esp),%ecx;");
    asm("loc_65F87B0: movl $0xFFFFFFFF,0xB0(%esp);");
    asm("loc_65F87BB: mov %ebp,0xB4(%esp);");
    asm("loc_65F87C2: mov %ebp,0xBC(%esp);");
    asm("loc_65F87C9: call _sub_65F8390;");
    asm("loc_65F87CE: mov 0xB4(%esp),%eax;");
    asm("loc_65F87D5: push %ebx;");
    asm("loc_65F87D6: lea 0x94(%esp),%ecx;");
    asm("loc_65F87DD: mov %eax,0x24(%esp);");
    asm("loc_65F87E1: call _sub_65F9150;");
    asm("loc_65F87E6: push $0xFFFFFFFF;");
    asm("loc_65F87E8: push $_data_660290C;");
    asm("loc_65F87ED: lea 0x88(%esp),%ecx;");
    asm("loc_65F87F4: movl $0xFFFFFFFF,0x88(%esp);");
    asm("loc_65F87FF: mov %ebp,0x8C(%esp);");
    asm("loc_65F8806: mov %ebp,0x94(%esp);");
    asm("loc_65F880D: call _sub_65F8390;");
    asm("loc_65F8812: mov 0x8C(%esp),%ecx;");
    asm("loc_65F8819: mov %ecx,0x28(%esp);");
    asm("loc_65F881D: push %ebx;");
    asm("loc_65F881E: lea 0x108(%esp),%ecx;");
    asm("loc_65F8825: call _sub_65F8360;");
    asm("loc_65F882A: push $0xFFFFFFFF;");
    asm("loc_65F882C: push $_data_6602904;");
    asm("loc_65F8831: lea 0x10C(%esp),%ecx;");
    asm("loc_65F8838: call _sub_65F8390;");
    asm("loc_65F883D: mov 0x70(%esp),%eax;");
    asm("loc_65F8841: mov 0x110(%esp),%edx;");
    asm("loc_65F8848: shr $2,%eax;");
    asm("loc_65F884B: cmp %ebp,%eax;");
    asm("loc_65F884D: mov %edx,0x14(%esp);");
    asm("loc_65F8851: mov %eax,0x58(%esi);");
    asm("loc_65F8854: jbe loc_65F895E;");
    asm("loc_65F885A: lea (%eax,%eax,8),%eax;");
    asm("loc_65F885D: shl $2,%eax;");
    asm("loc_65F8860: push %eax;");
    asm("loc_65F8861: call _sub_6600BB6;");
    asm("loc_65F8866: mov %eax,0x5C(%esi);");
    asm("loc_65F8869: mov 0x58(%esi),%eax;");
    asm("loc_65F886C: add $4,%esp;");
    asm("loc_65F886F: cmp %ebp,%eax;");
    asm("loc_65F8871: mov %ebp,0x68(%esp);");
    asm("loc_65F8875: jbe loc_65F895E;");
    asm("loc_65F887B: mov 0x24(%esp),%ebp;");
    asm("loc_65F887F: sub %edi,%ebp;");
    asm("loc_65F8881: mov %ebp,0x24(%esp);");
    asm("loc_65F8885: mov 0x1C(%esp),%ebp;");
    asm("loc_65F8889: mov 0x78(%esp),%edx;");
    asm("loc_65F888D: sub %edi,%ebp;");
    asm("loc_65F888F: mov %ebp,0x1C(%esp);");
    asm("loc_65F8893: mov 0x10(%esp),%ebp;");
    asm("loc_65F8897: sub %edi,%ebp;");
    asm("loc_65F8899: mov %ebp,0x10(%esp);");
    asm("loc_65F889D: mov 0x18(%esp),%ebp;");
    asm("loc_65F88A1: sub %edi,%ebp;");
    asm("loc_65F88A3: mov %ebp,0x18(%esp);");
    asm("loc_65F88A7: mov 0x20(%esp),%ebp;");
    asm("loc_65F88AB: sub %edi,%ebp;");
    asm("loc_65F88AD: mov %ebp,0x20(%esp);");
    asm("loc_65F88B1: mov 0x28(%esp),%ebp;");
    asm("loc_65F88B5: sub %edi,%ebp;");
    asm("loc_65F88B7: mov %ebp,0x28(%esp);");
    asm("loc_65F88BB: mov 0x14(%esp),%ebp;");
    asm("loc_65F88BF: xor %ecx,%ecx;");
    asm("loc_65F88C1: sub %edi,%edx;");
    asm("loc_65F88C3: sub %edi,%ebp;");
    asm("loc_65F88C5: mov %edi,%eax;");
    asm("loc_65F88C7: mov %ebp,0x14(%esp);");
    asm("loc_65F88CB: nop;");
    asm("loc_65F88CC: lea (%esp),%esp;");
    asm("loc_65F88D0: mov (%edx,%eax),%ebp;");
    asm("loc_65F88D3: mov 0x5C(%esi),%edi;");
    asm("loc_65F88D6: mov %ebp,(%ecx,%edi);");
    asm("loc_65F88D9: mov (%eax),%ebp;");
    asm("loc_65F88DB: mov 0x5C(%esi),%edi;");
    asm("loc_65F88DE: mov %ebp,4(%ecx,%edi);");
    asm("loc_65F88E2: mov 0x5C(%esi),%edi;");
    asm("loc_65F88E5: mov 0x24(%esp),%ebp;");
    asm("loc_65F88E9: mov (%eax,%ebp),%ebp;");
    asm("loc_65F88EC: mov %ebp,8(%ecx,%edi);");
    asm("loc_65F88F0: mov 0x5C(%esi),%edi;");
    asm("loc_65F88F3: mov 0x1C(%esp),%ebp;");
    asm("loc_65F88F7: mov (%eax,%ebp),%ebp;");
    asm("loc_65F88FA: mov %ebp,0xC(%ecx,%edi);");
    asm("loc_65F88FE: mov 0x5C(%esi),%edi;");
    asm("loc_65F8901: mov 0x10(%esp),%ebp;");
    asm("loc_65F8905: mov (%eax,%ebp),%ebp;");
    asm("loc_65F8908: mov %ebp,0x10(%ecx,%edi);");
    asm("loc_65F890C: mov 0x5C(%esi),%edi;");
    asm("loc_65F890F: mov 0x18(%esp),%ebp;");
    asm("loc_65F8913: mov (%eax,%ebp),%ebp;");
    asm("loc_65F8916: mov %ebp,0x14(%ecx,%edi);");
    asm("loc_65F891A: mov 0x5C(%esi),%edi;");
    asm("loc_65F891D: mov 0x20(%esp),%ebp;");
    asm("loc_65F8921: mov (%eax,%ebp),%ebp;");
    asm("loc_65F8924: mov %ebp,0x18(%ecx,%edi);");
    asm("loc_65F8928: mov 0x5C(%esi),%edi;");
    asm("loc_65F892B: mov 0x28(%esp),%ebp;");
    asm("loc_65F892F: mov (%eax,%ebp),%ebp;");
    asm("loc_65F8932: mov %ebp,0x1C(%ecx,%edi);");
    asm("loc_65F8936: mov 0x14(%esp),%ebp;");
    asm("loc_65F893A: mov (%eax,%ebp),%ebp;");
    asm("loc_65F893D: mov 0x5C(%esi),%edi;");
    asm("loc_65F8940: mov %ebp,0x20(%ecx,%edi);");
    asm("loc_65F8944: mov 0x68(%esp),%edi;");
    asm("loc_65F8948: mov 0x58(%esi),%ebp;");
    asm("loc_65F894B: inc %edi;");
    asm("loc_65F894C: add $4,%eax;");
    asm("loc_65F894F: add $0x24,%ecx;");
    asm("loc_65F8952: cmp %ebp,%edi;");
    asm("loc_65F8954: mov %edi,0x68(%esp);");
    asm("loc_65F8958: jb loc_65F88D0;");
    asm("loc_65F895E: lea 0x104(%esp),%ecx;");
    asm("loc_65F8965: call _sub_65F7CA0;");
    asm("loc_65F896A: lea 0x80(%esp),%ecx;");
    asm("loc_65F8971: call _sub_65F7CA0;");
    asm("loc_65F8976: lea 0xA8(%esp),%ecx;");
    asm("loc_65F897D: call _sub_65F7CA0;");
    asm("loc_65F8982: lea 0xBC(%esp),%ecx;");
    asm("loc_65F8989: call _sub_65F7CA0;");
    asm("loc_65F898E: lea 0x94(%esp),%ecx;");
    asm("loc_65F8995: call _sub_65F7CA0;");
    asm("loc_65F899A: lea 0x2C(%esp),%ecx;");
    asm("loc_65F899E: call _sub_65F7CA0;");
    asm("loc_65F89A3: lea 0x40(%esp),%ecx;");
    asm("loc_65F89A7: call _sub_65F7CA0;");
    asm("loc_65F89AC: lea 0x54(%esp),%ecx;");
    asm("loc_65F89B0: call _sub_65F7CA0;");
    asm("loc_65F89B5: lea 0x6C(%esp),%ecx;");
    asm("loc_65F89B9: call _sub_65F7CA0;");
    asm("loc_65F89BE: mov (%ebx),%ecx;");
    asm("loc_65F89C0: push $_data_6602020;");
    asm("loc_65F89C5: push %ebx;");
    asm("loc_65F89C6: calll *0x60(%ecx);");
    asm("loc_65F89C9: pop %edi;");
    asm("loc_65F89CA: pop %ebp;");
    asm("loc_65F89CB: pop %esi;");
    asm("loc_65F89CC: mov $1,%al;");
    asm("loc_65F89CE: pop %ebx;");
    asm("loc_65F89CF: add $0x108,%esp;");
    asm("loc_65F89D5: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F89E0() // _sub_65F89E0
{
    __DEBUG_ASM(65F89E0);
    // chunk 0x65F89E0 _sub_65F89E0
    asm("loc_65F89E0: push %ebx;");
    asm("loc_65F89E1: push %esi;");
    asm("loc_65F89E2: mov 0x10(%esp),%esi;");
    asm("loc_65F89E6: push %esi;");
    asm("loc_65F89E7: mov %ecx,%ebx;");
    asm("loc_65F89E9: call _sub_65F7760;");
    asm("loc_65F89EE: test %al,%al;");
    asm("loc_65F89F0: jne loc_65F89F7;");
    asm("loc_65F89F2: pop %esi;");
    asm("loc_65F89F3: pop %ebx;");
    asm("loc_65F89F4: ret $8;");
    asm("loc_65F89F7: push %esi;");
    asm("loc_65F89F8: mov %ebx,%ecx;");
    asm("loc_65F89FA: call _sub_65F7E80;");
    asm("loc_65F89FF: test %al,%al;");
    asm("loc_65F8A01: jne loc_65F8A08;");
    asm("loc_65F8A03: pop %esi;");
    asm("loc_65F8A04: pop %ebx;");
    asm("loc_65F8A05: ret $8;");
    asm("loc_65F8A08: push %esi;");
    asm("loc_65F8A09: mov %ebx,%ecx;");
    asm("loc_65F8A0B: call _sub_65F8480;");
    asm("loc_65F8A10: test %al,%al;");
    asm("loc_65F8A12: jne loc_65F8A19;");
    asm("loc_65F8A14: pop %esi;");
    asm("loc_65F8A15: pop %ebx;");
    asm("loc_65F8A16: ret $8;");
    asm("loc_65F8A19: push %ebp;");
    asm("loc_65F8A1A: push %edi;");
    asm("loc_65F8A1B: push %ebx;");
    asm("loc_65F8A1C: call _sub_65F7590;");
    asm("loc_65F8A21: push %ebx;");
    asm("loc_65F8A22: call _sub_65F75F0;");
    asm("loc_65F8A27: mov 0x1C(%esp),%eax;");
    asm("loc_65F8A2B: mov 8(%eax),%edi;");
    asm("loc_65F8A2E: mov %edi,%ecx;");
    asm("loc_65F8A30: shl $4,%ecx;");
    asm("loc_65F8A33: add $4,%ecx;");
    asm("loc_65F8A36: push %ecx;");
    asm("loc_65F8A37: call _sub_6600BB6;");
    asm("loc_65F8A3C: xor %esi,%esi;");
    asm("loc_65F8A3E: add $0xC,%esp;");
    asm("loc_65F8A41: cmp %esi,%eax;");
    asm("loc_65F8A43: je loc_65F8A75;");
    asm("loc_65F8A45: lea -1(%edi),%ecx;");
    asm("loc_65F8A48: cmp %esi,%ecx;");
    asm("loc_65F8A4A: lea 4(%eax),%edx;");
    asm("loc_65F8A4D: mov %edi,(%eax);");
    asm("loc_65F8A4F: mov %edx,%eax;");
    asm("loc_65F8A51: jl loc_65F8A71;");
    asm("loc_65F8A53: lea 1(%ecx),%edi;");
    asm("loc_65F8A56: mov 0x18(%esp),%cl;");
    asm("loc_65F8A5A: lea (%ebx),%ebx;");
    asm("loc_65F8A60: mov %cl,(%eax);");
    asm("loc_65F8A62: mov %esi,4(%eax);");
    asm("loc_65F8A65: mov %esi,8(%eax);");
    asm("loc_65F8A68: mov %esi,0xC(%eax);");
    asm("loc_65F8A6B: add $0x10,%eax;");
    asm("loc_65F8A6E: dec %edi;");
    asm("loc_65F8A6F: jne loc_65F8A60;");
    asm("loc_65F8A71: mov %edx,%eax;");
    asm("loc_65F8A73: jmp loc_65F8A77;");
    asm("loc_65F8A75: xor %eax,%eax;");
    asm("loc_65F8A77: mov %eax,0x34(%ebx);");
    asm("loc_65F8A7A: mov 0x24(%ebx),%eax;");
    asm("loc_65F8A7D: xor %ebp,%ebp;");
    asm("loc_65F8A7F: cmp %esi,%eax;");
    asm("loc_65F8A81: jbe loc_65F8AC4;");
    asm("loc_65F8A83: mov 0x30(%ebx),%edx;");
    asm("loc_65F8A86: mov (%edx,%ebp,8),%eax;");
    asm("loc_65F8A89: cmp %esi,%eax;");
    asm("loc_65F8A8B: lea (%edx,%ebp,8),%edi;");
    asm("loc_65F8A8E: jle loc_65F8ABC;");
    asm("loc_65F8A90: mov 4(%edi),%eax;");
    asm("loc_65F8A93: mov (%eax,%esi,8),%ecx;");
    asm("loc_65F8A96: mov 0x34(%ebx),%edx;");
    asm("loc_65F8A99: shl $4,%ecx;");
    asm("loc_65F8A9C: mov 8(%ecx,%edx),%eax;");
    asm("loc_65F8AA0: add %edx,%ecx;");
    asm("loc_65F8AA2: lea 0x18(%esp),%edx;");
    asm("loc_65F8AA6: push %edx;");
    asm("loc_65F8AA7: push $1;");
    asm("loc_65F8AA9: push %eax;");
    asm("loc_65F8AAA: mov %ebp,0x24(%esp);");
    asm("loc_65F8AAE: call _sub_65F96B0;");
    asm("loc_65F8AB3: mov (%edi),%eax;");
    asm("loc_65F8AB5: inc %esi;");
    asm("loc_65F8AB6: cmp %eax,%esi;");
    asm("loc_65F8AB8: jl loc_65F8A90;");
    asm("loc_65F8ABA: xor %esi,%esi;");
    asm("loc_65F8ABC: mov 0x24(%ebx),%eax;");
    asm("loc_65F8ABF: inc %ebp;");
    asm("loc_65F8AC0: cmp %eax,%ebp;");
    asm("loc_65F8AC2: jb loc_65F8A83;");
    asm("loc_65F8AC4: mov 0x24(%ebx),%eax;");
    asm("loc_65F8AC7: push %eax;");
    asm("loc_65F8AC8: mov %eax,0x3C(%ebx);");
    asm("loc_65F8ACB: call _sub_6600BB6;");
    asm("loc_65F8AD0: mov %eax,0x38(%ebx);");
    asm("loc_65F8AD3: mov 0x3C(%ebx),%ecx;");
    asm("loc_65F8AD6: mov 0x38(%ebx),%edi;");
    asm("loc_65F8AD9: mov %ecx,%edx;");
    asm("loc_65F8ADB: shr $2,%ecx;");
    asm("loc_65F8ADE: xor %eax,%eax;");
    asm("loc_65F8AE0: rep stos %eax,(%edi);");
    asm("loc_65F8AE2: add $4,%esp;");
    asm("loc_65F8AE5: mov %edx,%ecx;");
    asm("loc_65F8AE7: and $3,%ecx;");
    asm("loc_65F8AEA: rep stos %al,(%edi);");
    asm("loc_65F8AEC: pop %edi;");
    asm("loc_65F8AED: pop %ebp;");
    asm("loc_65F8AEE: pop %esi;");
    asm("loc_65F8AEF: movl $0x112,0xC(%ebx);");
    asm("loc_65F8AF6: mov $1,%al;");
    asm("loc_65F8AF8: pop %ebx;");
    asm("loc_65F8AF9: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8B00() // _sub_65F8B00
{
    __DEBUG_ASM(65F8B00);
    // chunk 0x65F8B00 _sub_65F8B00
    asm("loc_65F8B00: mov 4(%esp),%eax;");
    asm("loc_65F8B04: push %esi;");
    asm("loc_65F8B05: mov %ecx,%esi;");
    asm("loc_65F8B07: push %eax;");
    asm("loc_65F8B08: movl $1,4(%esi);");
    asm("loc_65F8B0F: calll *_import_660100C;");
    asm("loc_65F8B15: mov 0xC(%esp),%cl;");
    asm("loc_65F8B19: mov %eax,8(%esi);");
    asm("loc_65F8B1C: xor %eax,%eax;");
    asm("loc_65F8B1E: mov %eax,0x38(%esi);");
    asm("loc_65F8B21: mov %eax,0x3C(%esi);");
    asm("loc_65F8B24: mov %eax,0x64(%esi);");
    asm("loc_65F8B27: mov %eax,0x68(%esi);");
    asm("loc_65F8B2A: mov %eax,0x6C(%esi);");
    asm("loc_65F8B2D: mov %cl,0x60(%esi);");
    asm("loc_65F8B30: add $4,%esp;");
    asm("loc_65F8B33: movl $_off_660135C,(%esi);");
    asm("loc_65F8B39: mov %esi,%eax;");
    asm("loc_65F8B3B: pop %esi;");
    asm("loc_65F8B3C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8B40() // _sub_65F8B40
{
    __DEBUG_ASM(65F8B40);
    // chunk 0x65F8B40 _sub_65F8B40
    asm("loc_65F8B40: mov 0x18(%ecx),%edx;");
    asm("loc_65F8B43: xor %eax,%eax;");
    asm("loc_65F8B45: test %edx,%edx;");
    asm("loc_65F8B47: jle loc_65F8B58;");
    asm("loc_65F8B49: mov 0x1C(%ecx),%ecx;");
    asm("loc_65F8B4C: add $0x1C,%ecx;");
    asm("loc_65F8B4F: nop;");
    asm("loc_65F8B50: add (%ecx),%eax;");
    asm("loc_65F8B52: add $0x24,%ecx;");
    asm("loc_65F8B55: dec %edx;");
    asm("loc_65F8B56: jne loc_65F8B50;");
    asm("loc_65F8B58: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8B60() // _sub_65F8B60
{
    __DEBUG_ASM(65F8B60);
    // chunk 0x65F8B60 _sub_65F8B60
    asm("loc_65F8B60: mov 0x20(%ecx),%eax;");
    asm("loc_65F8B63: add 0x10(%ecx),%eax;");
    asm("loc_65F8B66: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8B70() // _sub_65F8B70
{
    __DEBUG_ASM(65F8B70);
    // chunk 0x65F8B70 _sub_65F8B70
    asm("loc_65F8B70: push %esi;");
    asm("loc_65F8B71: mov %ecx,%esi;");
    asm("loc_65F8B73: call _sub_65F8B90;");
    asm("loc_65F8B78: testb $1,8(%esp);");
    asm("loc_65F8B7D: je loc_65F8B88;");
    asm("loc_65F8B7F: push %esi;");
    asm("loc_65F8B80: call _sub_6600BB0;");
    asm("loc_65F8B85: add $4,%esp;");
    asm("loc_65F8B88: mov %esi,%eax;");
    asm("loc_65F8B8A: pop %esi;");
    asm("loc_65F8B8B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8B90() // _sub_65F8B90
{
    __DEBUG_ASM(65F8B90);
    // chunk 0x65F8B90 _sub_65F8B90
    asm("loc_65F8B90: push %ebx;");
    asm("loc_65F8B91: push %ebp;");
    asm("loc_65F8B92: push %esi;");
    asm("loc_65F8B93: mov %ecx,%esi;");
    asm("loc_65F8B95: mov 0x1C(%esi),%ecx;");
    asm("loc_65F8B98: test %ecx,%ecx;");
    asm("loc_65F8B9A: push %edi;");
    asm("loc_65F8B9B: movl $_off_660135C,(%esi);");
    asm("loc_65F8BA1: je loc_65F8BDA;");
    asm("loc_65F8BA3: mov -4(%ecx),%eax;");
    asm("loc_65F8BA6: lea -4(%ecx),%ebp;");
    asm("loc_65F8BA9: lea (%eax,%eax,8),%edx;");
    asm("loc_65F8BAC: dec %eax;");
    asm("loc_65F8BAD: lea (%ecx,%edx,4),%ecx;");
    asm("loc_65F8BB0: js loc_65F8BD1;");
    asm("loc_65F8BB2: lea 8(%ecx),%edi;");
    asm("loc_65F8BB5: lea 1(%eax),%ebx;");
    asm("loc_65F8BB8: mov -0x14(%edi),%eax;");
    asm("loc_65F8BBB: sub $0x24,%edi;");
    asm("loc_65F8BBE: push %eax;");
    asm("loc_65F8BBF: call _sub_6600BB0;");
    asm("loc_65F8BC4: add $4,%esp;");
    asm("loc_65F8BC7: mov %edi,%ecx;");
    asm("loc_65F8BC9: call _sub_65F9170;");
    asm("loc_65F8BCE: dec %ebx;");
    asm("loc_65F8BCF: jne loc_65F8BB8;");
    asm("loc_65F8BD1: push %ebp;");
    asm("loc_65F8BD2: call _sub_6600BB0;");
    asm("loc_65F8BD7: add $4,%esp;");
    asm("loc_65F8BDA: mov 0x14(%esi),%ecx;");
    asm("loc_65F8BDD: push %ecx;");
    asm("loc_65F8BDE: call _sub_6600BB0;");
    asm("loc_65F8BE3: mov 0x28(%esi),%edx;");
    asm("loc_65F8BE6: push %edx;");
    asm("loc_65F8BE7: call _sub_6600BB0;");
    asm("loc_65F8BEC: mov 0x2C(%esi),%eax;");
    asm("loc_65F8BEF: push %eax;");
    asm("loc_65F8BF0: call _sub_6600BB0;");
    asm("loc_65F8BF5: mov 0x30(%esi),%ecx;");
    asm("loc_65F8BF8: push %ecx;");
    asm("loc_65F8BF9: call _sub_6600BB0;");
    asm("loc_65F8BFE: mov 0x54(%esi),%edx;");
    asm("loc_65F8C01: push %edx;");
    asm("loc_65F8C02: call _sub_6600BB0;");
    asm("loc_65F8C07: mov 0x50(%esi),%eax;");
    asm("loc_65F8C0A: push %eax;");
    asm("loc_65F8C0B: call _sub_6600BB0;");
    asm("loc_65F8C10: mov 0x5C(%esi),%ecx;");
    asm("loc_65F8C13: push %ecx;");
    asm("loc_65F8C14: call _sub_6600BB0;");
    asm("loc_65F8C19: mov 0x34(%esi),%eax;");
    asm("loc_65F8C1C: add $0x1C,%esp;");
    asm("loc_65F8C1F: test %eax,%eax;");
    asm("loc_65F8C21: je loc_65F8C4C;");
    asm("loc_65F8C23: mov -4(%eax),%ecx;");
    asm("loc_65F8C26: lea -4(%eax),%ebp;");
    asm("loc_65F8C29: mov %ecx,%edi;");
    asm("loc_65F8C2B: shl $4,%edi;");
    asm("loc_65F8C2E: add %eax,%edi;");
    asm("loc_65F8C30: dec %ecx;");
    asm("loc_65F8C31: js loc_65F8C43;");
    asm("loc_65F8C33: lea 1(%ecx),%ebx;");
    asm("loc_65F8C36: sub $0x10,%edi;");
    asm("loc_65F8C39: mov %edi,%ecx;");
    asm("loc_65F8C3B: call _sub_65F9430;");
    asm("loc_65F8C40: dec %ebx;");
    asm("loc_65F8C41: jne loc_65F8C36;");
    asm("loc_65F8C43: push %ebp;");
    asm("loc_65F8C44: call _sub_6600BB0;");
    asm("loc_65F8C49: add $4,%esp;");
    asm("loc_65F8C4C: mov 0x68(%esi),%ebx;");
    asm("loc_65F8C4F: mov 0x64(%esi),%edi;");
    asm("loc_65F8C52: cmp %ebx,%edi;");
    asm("loc_65F8C54: je loc_65F8C66;");
    asm("loc_65F8C56: push $0;");
    asm("loc_65F8C58: mov %edi,%ecx;");
    asm("loc_65F8C5A: call _sub_65F9BA0;");
    asm("loc_65F8C5F: add $0x10,%edi;");
    asm("loc_65F8C62: cmp %ebx,%edi;");
    asm("loc_65F8C64: jne loc_65F8C56;");
    asm("loc_65F8C66: mov 0x64(%esi),%edx;");
    asm("loc_65F8C69: push %edx;");
    asm("loc_65F8C6A: call _sub_6600BB0;");
    asm("loc_65F8C6F: xor %eax,%eax;");
    asm("loc_65F8C71: mov %eax,0x64(%esi);");
    asm("loc_65F8C74: mov %eax,0x68(%esi);");
    asm("loc_65F8C77: mov %eax,0x6C(%esi);");
    asm("loc_65F8C7A: mov 0x38(%esi),%eax;");
    asm("loc_65F8C7D: push %eax;");
    asm("loc_65F8C7E: call _sub_6600BB0;");
    asm("loc_65F8C83: add $8,%esp;");
    asm("loc_65F8C86: pop %edi;");
    asm("loc_65F8C87: movl $_off_6601378,(%esi);");
    asm("loc_65F8C8D: pop %esi;");
    asm("loc_65F8C8E: pop %ebp;");
    asm("loc_65F8C8F: pop %ebx;");
    asm("loc_65F8C90: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8CA0() // _sub_65F8CA0
{
    __DEBUG_ASM(65F8CA0);
    // chunk 0x65F8CA0 _sub_65F8CA0
    asm("loc_65F8CA0: xor %eax,%eax;");
    asm("loc_65F8CA2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8CB0() // _sub_65F8CB0
{
    __DEBUG_ASM(65F8CB0);
    // chunk 0x65F8CB0 _sub_65F8CB0
    asm("loc_65F8CB0: xor %al,%al;");
    asm("loc_65F8CB2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8CC0() // _sub_65F8CC0
{
    __DEBUG_ASM(65F8CC0);
    // chunk 0x65F8CC0 _sub_65F8CC0
    asm("loc_65F8CC0: xor %al,%al;");
    asm("loc_65F8CC2: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8CD0() // _sub_65F8CD0
{
    __DEBUG_ASM(65F8CD0);
    // chunk 0x65F8CD0 _sub_65F8CD0
    asm("loc_65F8CD0: xor %al,%al;");
    asm("loc_65F8CD2: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8CE0() // _sub_65F8CE0
{
    __DEBUG_ASM(65F8CE0);
    // chunk 0x65F8CE0 _sub_65F8CE0
    asm("loc_65F8CE0: testb $1,4(%esp);");
    asm("loc_65F8CE5: push %esi;");
    asm("loc_65F8CE6: mov %ecx,%esi;");
    asm("loc_65F8CE8: movl $_off_6601378,(%esi);");
    asm("loc_65F8CEE: je loc_65F8CF9;");
    asm("loc_65F8CF0: push %esi;");
    asm("loc_65F8CF1: call _sub_6600BB0;");
    asm("loc_65F8CF6: add $4,%esp;");
    asm("loc_65F8CF9: mov %esi,%eax;");
    asm("loc_65F8CFB: pop %esi;");
    asm("loc_65F8CFC: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F8D00() // _sub_65F8D00
{
    __DEBUG_ASM(65F8D00);
    // chunk 0x65F8D00 _sub_65F8D00
    asm("loc_65F8D00: sub $0x8C,%esp;");
    asm("loc_65F8D06: push %edi;");
    asm("loc_65F8D07: mov %ecx,%edi;");
    asm("loc_65F8D09: mov 0x71(%edi),%cl;");
    asm("loc_65F8D0C: xor %eax,%eax;");
    asm("loc_65F8D0E: cmp %al,%cl;");
    asm("loc_65F8D10: mov %edi,0x3C(%esp);");
    asm("loc_65F8D14: jne loc_65F9086;");
    asm("loc_65F8D1A: mov 0x24(%edi),%ecx;");
    asm("loc_65F8D1D: push %ebx;");
    asm("loc_65F8D1E: cmp %eax,%ecx;");
    asm("loc_65F8D20: push %ebp;");
    asm("loc_65F8D21: mov %ecx,0x58(%esp);");
    asm("loc_65F8D25: setne %cl;");
    asm("loc_65F8D28: cmp %al,%cl;");
    asm("loc_65F8D2A: push %esi;");
    asm("loc_65F8D2B: mov 0x28(%edi),%esi;");
    asm("loc_65F8D2E: mov %eax,0x7C(%edi);");
    asm("loc_65F8D31: mov %eax,0x78(%edi);");
    asm("loc_65F8D34: mov %eax,0x74(%edi);");
    asm("loc_65F8D37: mov %eax,0x80(%edi);");
    asm("loc_65F8D3D: mov %cl,0x1F(%esp);");
    asm("loc_65F8D41: je loc_65F907C;");
    asm("loc_65F8D47: xor %edx,%edx;");
    asm("loc_65F8D49: xor %edi,%edi;");
    asm("loc_65F8D4B: mov $1,%ecx;");
    asm("loc_65F8D50: xor %ebx,%ebx;");
    asm("loc_65F8D52: xor %ebp,%ebp;");
    asm("loc_65F8D54: cmp %ecx,0x5C(%esp);");
    asm("loc_65F8D58: mov %eax,0x20(%esp);");
    asm("loc_65F8D5C: mov %edx,0x24(%esp);");
    asm("loc_65F8D60: mov %eax,0x14(%esp);");
    asm("loc_65F8D64: mov %edi,0x34(%esp);");
    asm("loc_65F8D68: jbe loc_65F8E45;");
    asm("loc_65F8D6E: mov %eax,0x28(%esp);");
    asm("loc_65F8D72: mov $0xC,%edx;");
    asm("loc_65F8D77: mov %eax,0x2C(%esp);");
    asm("loc_65F8D7B: mov %eax,0x38(%esp);");
    asm("loc_65F8D7F: mov %eax,0x30(%esp);");
    asm("loc_65F8D83: mov %eax,0x18(%esp);");
    asm("loc_65F8D87: mov %eax,0x10(%esp);");
    asm("loc_65F8D8B: lea 0x14(%esi),%edi;");
    asm("loc_65F8D8E: mov %edi,%edi;");
    asm("loc_65F8D90: mov 0x10(%esp),%eax;");
    asm("loc_65F8D94: flds -8(%edi);");
    asm("loc_65F8D97: fcomps (%eax,%esi);");
    asm("loc_65F8D9A: fnstsw %ax;");
    asm("loc_65F8D9C: test $5,%ah;");
    asm("loc_65F8D9F: jp loc_65F8DAB;");
    asm("loc_65F8DA1: mov %ecx,0x20(%esp);");
    asm("loc_65F8DA5: mov %edx,0x10(%esp);");
    asm("loc_65F8DA9: jmp loc_65F8DC4;");
    asm("loc_65F8DAB: mov 0x18(%esp),%eax;");
    asm("loc_65F8DAF: flds -8(%edi);");
    asm("loc_65F8DB2: fcomps (%eax,%esi);");
    asm("loc_65F8DB5: fnstsw %ax;");
    asm("loc_65F8DB7: test $0x41,%ah;");
    asm("loc_65F8DBA: jne loc_65F8DC4;");
    asm("loc_65F8DBC: mov %ecx,0x24(%esp);");
    asm("loc_65F8DC0: mov %edx,0x18(%esp);");
    asm("loc_65F8DC4: mov 0x30(%esp),%eax;");
    asm("loc_65F8DC8: flds -4(%edi);");
    asm("loc_65F8DCB: fcomps 4(%eax,%esi);");
    asm("loc_65F8DCF: fnstsw %ax;");
    asm("loc_65F8DD1: test $5,%ah;");
    asm("loc_65F8DD4: jp loc_65F8DE0;");
    asm("loc_65F8DD6: mov %ecx,0x14(%esp);");
    asm("loc_65F8DDA: mov %edx,0x30(%esp);");
    asm("loc_65F8DDE: jmp loc_65F8DFA;");
    asm("loc_65F8DE0: mov 0x38(%esp),%eax;");
    asm("loc_65F8DE4: flds -4(%edi);");
    asm("loc_65F8DE7: fcomps 4(%eax,%esi);");
    asm("loc_65F8DEB: fnstsw %ax;");
    asm("loc_65F8DED: test $0x41,%ah;");
    asm("loc_65F8DF0: jne loc_65F8DFA;");
    asm("loc_65F8DF2: mov %ecx,0x34(%esp);");
    asm("loc_65F8DF6: mov %edx,0x38(%esp);");
    asm("loc_65F8DFA: mov 0x2C(%esp),%eax;");
    asm("loc_65F8DFE: flds (%edi);");
    asm("loc_65F8E00: fcomps 8(%eax,%esi);");
    asm("loc_65F8E04: fnstsw %ax;");
    asm("loc_65F8E06: test $5,%ah;");
    asm("loc_65F8E09: jp loc_65F8E13;");
    asm("loc_65F8E0B: mov %ecx,%ebx;");
    asm("loc_65F8E0D: mov %edx,0x2C(%esp);");
    asm("loc_65F8E11: jmp loc_65F8E2A;");
    asm("loc_65F8E13: mov 0x28(%esp),%eax;");
    asm("loc_65F8E17: flds (%edi);");
    asm("loc_65F8E19: fcomps 8(%eax,%esi);");
    asm("loc_65F8E1D: fnstsw %ax;");
    asm("loc_65F8E1F: test $0x41,%ah;");
    asm("loc_65F8E22: jne loc_65F8E2A;");
    asm("loc_65F8E24: mov %ecx,%ebp;");
    asm("loc_65F8E26: mov %edx,0x28(%esp);");
    asm("loc_65F8E2A: mov 0x5C(%esp),%eax;");
    asm("loc_65F8E2E: inc %ecx;");
    asm("loc_65F8E2F: add $0xC,%edx;");
    asm("loc_65F8E32: add $0xC,%edi;");
    asm("loc_65F8E35: cmp %eax,%ecx;");
    asm("loc_65F8E37: jb loc_65F8D90;");
    asm("loc_65F8E3D: mov 0x34(%esp),%edi;");
    asm("loc_65F8E41: mov 0x24(%esp),%edx;");
    asm("loc_65F8E45: lea (%edx,%edx,2),%ecx;");
    asm("loc_65F8E48: flds (%esi,%ecx,4);");
    asm("loc_65F8E4B: lea (%esi,%ecx,4),%eax;");
    asm("loc_65F8E4E: mov 0x20(%esp),%ecx;");
    asm("loc_65F8E52: lea (%ecx,%ecx,2),%edx;");
    asm("loc_65F8E55: fsubs (%esi,%edx,4);");
    asm("loc_65F8E58: lea (%esi,%edx,4),%ecx;");
    asm("loc_65F8E5B: lea (%edi,%edi,2),%edx;");
    asm("loc_65F8E5E: mov 0x14(%esp),%edi;");
    asm("loc_65F8E62: fstps 0x18(%esp);");
    asm("loc_65F8E66: lea 4(%esi,%edx,4),%edx;");
    asm("loc_65F8E6A: flds (%edx);");
    asm("loc_65F8E6C: lea (%edi,%edi,2),%edi;");
    asm("loc_65F8E6F: fsubs 4(%esi,%edi,4);");
    asm("loc_65F8E73: lea 4(%esi,%edi,4),%edi;");
    asm("loc_65F8E77: lea (%ebp,%ebp,2),%ebp;");
    asm("loc_65F8E7B: lea 8(%esi,%ebp,4),%ebp;");
    asm("loc_65F8E7F: fstps 0x10(%esp);");
    asm("loc_65F8E83: lea (%ebx,%ebx,2),%ebx;");
    asm("loc_65F8E86: flds (%ebp);");
    asm("loc_65F8E89: lea 8(%esi,%ebx,4),%ebx;");
    asm("loc_65F8E8D: fsubs (%ebx);");
    asm("loc_65F8E8F: push $0x3F000000;");
    asm("loc_65F8E94: fstps 0x18(%esp);");
    asm("loc_65F8E98: flds (%ecx);");
    asm("loc_65F8E9A: lea 0x94(%esp),%ecx;");
    asm("loc_65F8EA1: fadds (%eax);");
    asm("loc_65F8EA3: lea 0x88(%esp),%eax;");
    asm("loc_65F8EAA: push %eax;");
    asm("loc_65F8EAB: push %ecx;");
    asm("loc_65F8EAC: fstps 0x90(%esp);");
    asm("loc_65F8EB3: flds (%edx);");
    asm("loc_65F8EB5: fadds (%edi);");
    asm("loc_65F8EB7: fstps 0x94(%esp);");
    asm("loc_65F8EBE: flds (%ebp);");
    asm("loc_65F8EC1: fadds (%ebx);");
    asm("loc_65F8EC3: fstps 0x98(%esp);");
    asm("loc_65F8ECA: call _sub_65F45A0;");
    asm("loc_65F8ECF: flds 0x24(%esp);");
    asm("loc_65F8ED3: mov 0x54(%esp),%edi;");
    asm("loc_65F8ED7: fcomps 0x1C(%esp);");
    asm("loc_65F8EDB: mov 0x9C(%esp),%eax;");
    asm("loc_65F8EE2: mov 0xA0(%esp),%ecx;");
    asm("loc_65F8EE9: lea 0x74(%edi),%ebx;");
    asm("loc_65F8EEC: mov %ebx,%edx;");
    asm("loc_65F8EEE: mov %eax,(%edx);");
    asm("loc_65F8EF0: mov 0xA4(%esp),%eax;");
    asm("loc_65F8EF7: mov %ecx,4(%edx);");
    asm("loc_65F8EFA: mov %eax,8(%edx);");
    asm("loc_65F8EFD: fnstsw %ax;");
    asm("loc_65F8EFF: add $0xC,%esp;");
    asm("loc_65F8F02: test $0x41,%ah;");
    asm("loc_65F8F05: jne loc_65F8F0D;");
    asm("loc_65F8F07: flds 0x18(%esp);");
    asm("loc_65F8F0B: jmp loc_65F8F11;");
    asm("loc_65F8F0D: flds 0x10(%esp);");
    asm("loc_65F8F11: fcomps 0x14(%esp);");
    asm("loc_65F8F15: fnstsw %ax;");
    asm("loc_65F8F17: test $0x41,%ah;");
    asm("loc_65F8F1A: jne loc_65F8F37;");
    asm("loc_65F8F1C: flds 0x18(%esp);");
    asm("loc_65F8F20: fcomps 0x10(%esp);");
    asm("loc_65F8F24: fnstsw %ax;");
    asm("loc_65F8F26: test $0x41,%ah;");
    asm("loc_65F8F29: jne loc_65F8F31;");
    asm("loc_65F8F2B: flds 0x18(%esp);");
    asm("loc_65F8F2F: jmp loc_65F8F3B;");
    asm("loc_65F8F31: flds 0x10(%esp);");
    asm("loc_65F8F35: jmp loc_65F8F3B;");
    asm("loc_65F8F37: flds 0x14(%esp);");
    asm("loc_65F8F3B: fmuls _data_6601328;");
    asm("loc_65F8F41: mov 0x5C(%esp),%eax;");
    asm("loc_65F8F45: test %eax,%eax;");
    asm("loc_65F8F47: fsts 0x80(%edi);");
    asm("loc_65F8F4D: fld %st(0);");
    asm("loc_65F8F4F: fmul %st(1),%st;");
    asm("loc_65F8F51: fstps 0x14(%esp);");
    asm("loc_65F8F55: fstp %st(0);");
    asm("loc_65F8F57: jbe loc_65F907C;");
    asm("loc_65F8F5D: mov %eax,%ebp;");
    asm("loc_65F8F5F: nop;");
    asm("loc_65F8F60: push %ebx;");
    asm("loc_65F8F61: lea 0x40(%esp),%ecx;");
    asm("loc_65F8F65: push %esi;");
    asm("loc_65F8F66: push %ecx;");
    asm("loc_65F8F67: call _sub_65F4C50;");
    asm("loc_65F8F6C: flds 0x4C(%esp);");
    asm("loc_65F8F70: fmuls 0x4C(%esp);");
    asm("loc_65F8F74: add $0xC,%esp;");
    asm("loc_65F8F77: flds 0x44(%esp);");
    asm("loc_65F8F7B: fmuls 0x44(%esp);");
    asm("loc_65F8F7F: faddp;");
    asm("loc_65F8F81: flds 0x3C(%esp);");
    asm("loc_65F8F85: fmuls 0x3C(%esp);");
    asm("loc_65F8F89: faddp;");
    asm("loc_65F8F8B: fcoms 0x14(%esp);");
    asm("loc_65F8F8F: fnstsw %ax;");
    asm("loc_65F8F91: test $0x41,%ah;");
    asm("loc_65F8F94: jne loc_65F9070;");
    asm("loc_65F8F9A: fsqrt;");
    asm("loc_65F8F9C: push %ecx;");
    asm("loc_65F8F9D: lea 0x64(%esp),%edx;");
    asm("loc_65F8FA1: fsts 0x14(%esp);");
    asm("loc_65F8FA5: fadds 0x80(%edi);");
    asm("loc_65F8FAB: fmuls _data_6601328;");
    asm("loc_65F8FB1: fsts 0x80(%edi);");
    asm("loc_65F8FB7: fld %st(0);");
    asm("loc_65F8FB9: fmul %st(1),%st;");
    asm("loc_65F8FBB: fstps 0x18(%esp);");
    asm("loc_65F8FBF: flds 0x14(%esp);");
    asm("loc_65F8FC3: fsub %st(1),%st;");
    asm("loc_65F8FC5: fstps (%esp);");
    asm("loc_65F8FC8: push %esi;");
    asm("loc_65F8FC9: push %edx;");
    asm("loc_65F8FCA: fstp %st(0);");
    asm("loc_65F8FCC: call _sub_65F45A0;");
    asm("loc_65F8FD1: flds 0x80(%edi);");
    asm("loc_65F8FD7: add $8,%esp;");
    asm("loc_65F8FDA: fstps (%esp);");
    asm("loc_65F8FDD: lea 0x70(%esp),%eax;");
    asm("loc_65F8FE1: push %ebx;");
    asm("loc_65F8FE2: push %eax;");
    asm("loc_65F8FE3: call _sub_65F45A0;");
    asm("loc_65F8FE8: flds 0x74(%esp);");
    asm("loc_65F8FEC: fadds 0x80(%esp);");
    asm("loc_65F8FF3: lea 0x84(%esp),%ecx;");
    asm("loc_65F8FFA: fstps 8(%esp);");
    asm("loc_65F8FFE: flds 0x70(%esp);");
    asm("loc_65F9002: fadds 0x7C(%esp);");
    asm("loc_65F9006: fstps 4(%esp);");
    asm("loc_65F900A: flds 0x6C(%esp);");
    asm("loc_65F900E: fadds 0x78(%esp);");
    asm("loc_65F9012: fstps (%esp);");
    asm("loc_65F9015: call _sub_65F4580;");
    asm("loc_65F901A: flds _data_66011E0;");
    asm("loc_65F9020: sub $0xC,%esp;");
    asm("loc_65F9023: fdivs 0x1C(%esp);");
    asm("loc_65F9027: lea 0x58(%esp),%ecx;");
    asm("loc_65F902B: flds 0x8C(%esp);");
    asm("loc_65F9032: fmul %st(1),%st;");
    asm("loc_65F9034: fstps 8(%esp);");
    asm("loc_65F9038: flds 0x88(%esp);");
    asm("loc_65F903F: fmul %st(1),%st;");
    asm("loc_65F9041: fstps 4(%esp);");
    asm("loc_65F9045: flds 0x84(%esp);");
    asm("loc_65F904C: fmul %st(1),%st;");
    asm("loc_65F904E: fstps (%esp);");
    asm("loc_65F9051: fstp %st(0);");
    asm("loc_65F9053: call _sub_65F4580;");
    asm("loc_65F9058: mov 0x4C(%esp),%edx;");
    asm("loc_65F905C: mov 0x50(%esp),%eax;");
    asm("loc_65F9060: mov %ebx,%ecx;");
    asm("loc_65F9062: mov %edx,(%ecx);");
    asm("loc_65F9064: mov 0x54(%esp),%edx;");
    asm("loc_65F9068: mov %eax,4(%ecx);");
    asm("loc_65F906B: mov %edx,8(%ecx);");
    asm("loc_65F906E: jmp loc_65F9072;");
    asm("loc_65F9070: fstp %st(0);");
    asm("loc_65F9072: add $0xC,%esi;");
    asm("loc_65F9075: dec %ebp;");
    asm("loc_65F9076: jne loc_65F8F60;");
    asm("loc_65F907C: mov 0x1F(%esp),%al;");
    asm("loc_65F9080: pop %esi;");
    asm("loc_65F9081: pop %ebp;");
    asm("loc_65F9082: mov %al,0x71(%edi);");
    asm("loc_65F9085: pop %ebx;");
    asm("loc_65F9086: mov 0x98(%esp),%edx;");
    asm("loc_65F908D: lea 0x74(%edi),%ecx;");
    asm("loc_65F9090: mov (%ecx),%eax;");
    asm("loc_65F9092: mov %eax,(%edx);");
    asm("loc_65F9094: mov 4(%ecx),%eax;");
    asm("loc_65F9097: mov %eax,4(%edx);");
    asm("loc_65F909A: mov 8(%ecx),%ecx;");
    asm("loc_65F909D: mov 0x94(%esp),%eax;");
    asm("loc_65F90A4: mov %ecx,8(%edx);");
    asm("loc_65F90A7: mov 0x80(%edi),%edx;");
    asm("loc_65F90AD: mov %edx,(%eax);");
    asm("loc_65F90AF: mov $1,%al;");
    asm("loc_65F90B1: pop %edi;");
    asm("loc_65F90B2: add $0x8C,%esp;");
    asm("loc_65F90B8: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F90C0() // _sub_65F90C0
{
    __DEBUG_ASM(65F90C0);
    // chunk 0x65F90C0 _sub_65F90C0
    asm("loc_65F90C0: mov 4(%esp),%edx;");
    asm("loc_65F90C4: xor %eax,%eax;");
    asm("loc_65F90C6: push %esi;");
    asm("loc_65F90C7: mov %ecx,%esi;");
    asm("loc_65F90C9: push %edi;");
    asm("loc_65F90CA: mov $0x1C,%ecx;");
    asm("loc_65F90CF: mov %edx,%edi;");
    asm("loc_65F90D1: rep stos %eax,(%edi);");
    asm("loc_65F90D3: mov 0xC(%esi),%eax;");
    asm("loc_65F90D6: mov %eax,0x68(%edx);");
    asm("loc_65F90D9: movl $6,(%edx);");
    asm("loc_65F90DF: mov 0x10(%esi),%ecx;");
    asm("loc_65F90E2: mov %ecx,0x6C(%edx);");
    asm("loc_65F90E5: mov 0x28(%esi),%eax;");
    asm("loc_65F90E8: mov %eax,4(%edx);");
    asm("loc_65F90EB: mov $0xC,%ecx;");
    asm("loc_65F90F0: mov %ecx,8(%edx);");
    asm("loc_65F90F3: mov $0x18,%eax;");
    asm("loc_65F90F8: mov %eax,0xC(%edx);");
    asm("loc_65F90FB: mov 0x14(%esi),%edi;");
    asm("loc_65F90FE: mov %edi,0x10(%edx);");
    asm("loc_65F9101: mov 0x24(%esi),%edi;");
    asm("loc_65F9104: mov %edi,0x14(%edx);");
    asm("loc_65F9107: mov 0x28(%esi),%edi;");
    asm("loc_65F910A: add %ecx,%edi;");
    asm("loc_65F910C: mov %edi,0x18(%edx);");
    asm("loc_65F910F: mov %ecx,0x1C(%edx);");
    asm("loc_65F9112: mov %eax,0x20(%edx);");
    asm("loc_65F9115: mov 0x14(%esi),%ecx;");
    asm("loc_65F9118: mov %ecx,0x24(%edx);");
    asm("loc_65F911B: mov 0x24(%esi),%eax;");
    asm("loc_65F911E: mov %eax,0x28(%edx);");
    asm("loc_65F9121: mov 0x50(%esi),%eax;");
    asm("loc_65F9124: test %eax,%eax;");
    asm("loc_65F9126: je loc_65F9142;");
    asm("loc_65F9128: mov %eax,0x40(%edx);");
    asm("loc_65F912B: mov $8,%eax;");
    asm("loc_65F9130: mov %eax,0x44(%edx);");
    asm("loc_65F9133: mov %eax,0x48(%edx);");
    asm("loc_65F9136: mov 0x54(%esi),%ecx;");
    asm("loc_65F9139: mov %ecx,0x4C(%edx);");
    asm("loc_65F913C: mov 0x4C(%esi),%eax;");
    asm("loc_65F913F: mov %eax,0x50(%edx);");
    asm("loc_65F9142: pop %edi;");
    asm("loc_65F9143: pop %esi;");
    asm("loc_65F9144: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9150() // _sub_65F9150
{
    __DEBUG_ASM(65F9150);
    // chunk 0x65F9150 _sub_65F9150
    asm("loc_65F9150: mov 4(%esp),%eax;");
    asm("loc_65F9154: test %eax,%eax;");
    asm("loc_65F9156: push %esi;");
    asm("loc_65F9157: mov %ecx,%esi;");
    asm("loc_65F9159: mov %eax,(%esi);");
    asm("loc_65F915B: je loc_65F9163;");
    asm("loc_65F915D: mov (%eax),%ecx;");
    asm("loc_65F915F: push %eax;");
    asm("loc_65F9160: calll *4(%ecx);");
    asm("loc_65F9163: mov %esi,%eax;");
    asm("loc_65F9165: pop %esi;");
    asm("loc_65F9166: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9170() // _sub_65F9170
{
    __DEBUG_ASM(65F9170);
    // chunk 0x65F9170 _sub_65F9170
    asm("loc_65F9170: push %esi;");
    asm("loc_65F9171: mov %ecx,%esi;");
    asm("loc_65F9173: mov (%esi),%eax;");
    asm("loc_65F9175: test %eax,%eax;");
    asm("loc_65F9177: je loc_65F9185;");
    asm("loc_65F9179: mov (%eax),%ecx;");
    asm("loc_65F917B: push %eax;");
    asm("loc_65F917C: calll *8(%ecx);");
    asm("loc_65F917F: movl $0,(%esi);");
    asm("loc_65F9185: pop %esi;");
    asm("loc_65F9186: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9190() // _sub_65F9190
{
    __DEBUG_ASM(65F9190);
    // chunk 0x65F9190 _sub_65F9190
    asm("loc_65F9190: mov 4(%ecx),%edx;");
    asm("loc_65F9193: test %edx,%edx;");
    asm("loc_65F9195: jne loc_65F919A;");
    asm("loc_65F9197: xor %eax,%eax;");
    asm("loc_65F9199: ret;");
    asm("loc_65F919A: mov 8(%ecx),%eax;");
    asm("loc_65F919D: sub %edx,%eax;");
    asm("loc_65F919F: sar $4,%eax;");
    asm("loc_65F91A2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F91B0() // _sub_65F91B0
{
    __DEBUG_ASM(65F91B0);
    // chunk 0x65F91B0 _sub_65F91B0
    asm("loc_65F91B0: sub $0xC,%esp;");
    asm("loc_65F91B3: mov 0xC(%ecx),%edx;");
    asm("loc_65F91B6: mov 0x14(%esp),%eax;");
    asm("loc_65F91BA: push %ebx;");
    asm("loc_65F91BB: push %ebp;");
    asm("loc_65F91BC: push %esi;");
    asm("loc_65F91BD: mov 8(%ecx),%esi;");
    asm("loc_65F91C0: sub %esi,%edx;");
    asm("loc_65F91C2: sar $4,%edx;");
    asm("loc_65F91C5: cmp %eax,%edx;");
    asm("loc_65F91C7: push %edi;");
    asm("loc_65F91C8: mov %ecx,0x10(%esp);");
    asm("loc_65F91CC: jae loc_65F9307;");
    asm("loc_65F91D2: mov 4(%ecx),%edx;");
    asm("loc_65F91D5: test %edx,%edx;");
    asm("loc_65F91D7: je loc_65F91EA;");
    asm("loc_65F91D9: mov %esi,%ecx;");
    asm("loc_65F91DB: sub %edx,%ecx;");
    asm("loc_65F91DD: sar $4,%ecx;");
    asm("loc_65F91E0: cmp %ecx,%eax;");
    asm("loc_65F91E2: jae loc_65F91E6;");
    asm("loc_65F91E4: mov %ecx,%eax;");
    asm("loc_65F91E6: test %edx,%edx;");
    asm("loc_65F91E8: jne loc_65F91EE;");
    asm("loc_65F91EA: xor %esi,%esi;");
    asm("loc_65F91EC: jmp loc_65F91F3;");
    asm("loc_65F91EE: sub %edx,%esi;");
    asm("loc_65F91F0: sar $4,%esi;");
    asm("loc_65F91F3: add %esi,%eax;");
    asm("loc_65F91F5: test %eax,%eax;");
    asm("loc_65F91F7: mov %eax,0x14(%esp);");
    asm("loc_65F91FB: jge loc_65F91FF;");
    asm("loc_65F91FD: xor %eax,%eax;");
    asm("loc_65F91FF: shl $4,%eax;");
    asm("loc_65F9202: push %eax;");
    asm("loc_65F9203: call _sub_6600BB6;");
    asm("loc_65F9208: mov 0x24(%esp),%ecx;");
    asm("loc_65F920C: mov %eax,0x1C(%esp);");
    asm("loc_65F9210: mov %eax,%edi;");
    asm("loc_65F9212: mov 0x14(%esp),%eax;");
    asm("loc_65F9216: mov 4(%eax),%esi;");
    asm("loc_65F9219: add $4,%esp;");
    asm("loc_65F921C: cmp %ecx,%esi;");
    asm("loc_65F921E: je loc_65F923A;");
    asm("loc_65F9220: test %edi,%edi;");
    asm("loc_65F9222: je loc_65F922C;");
    asm("loc_65F9224: push %esi;");
    asm("loc_65F9225: mov %edi,%ecx;");
    asm("loc_65F9227: call _sub_65F9B30;");
    asm("loc_65F922C: mov 0x20(%esp),%ecx;");
    asm("loc_65F9230: add $0x10,%esi;");
    asm("loc_65F9233: add $0x10,%edi;");
    asm("loc_65F9236: cmp %ecx,%esi;");
    asm("loc_65F9238: jne loc_65F9220;");
    asm("loc_65F923A: mov 0x24(%esp),%eax;");
    asm("loc_65F923E: test %eax,%eax;");
    asm("loc_65F9240: mov %edi,%esi;");
    asm("loc_65F9242: jbe loc_65F926A;");
    asm("loc_65F9244: mov 0x28(%esp),%ebp;");
    asm("loc_65F9248: mov %eax,%ebx;");
    asm("loc_65F924A: lea (%ebx),%ebx;");
    asm("loc_65F9250: test %esi,%esi;");
    asm("loc_65F9252: je loc_65F925C;");
    asm("loc_65F9254: push %ebp;");
    asm("loc_65F9255: mov %esi,%ecx;");
    asm("loc_65F9257: call _sub_65F9B30;");
    asm("loc_65F925C: add $0x10,%esi;");
    asm("loc_65F925F: dec %ebx;");
    asm("loc_65F9260: jne loc_65F9250;");
    asm("loc_65F9262: mov 0x20(%esp),%ecx;");
    asm("loc_65F9266: mov 0x24(%esp),%eax;");
    asm("loc_65F926A: mov 0x10(%esp),%edx;");
    asm("loc_65F926E: mov 8(%edx),%ebp;");
    asm("loc_65F9271: shl $4,%eax;");
    asm("loc_65F9274: cmp %ebp,%ecx;");
    asm("loc_65F9276: lea (%eax,%edi),%ebx;");
    asm("loc_65F9279: je loc_65F9299;");
    asm("loc_65F927B: mov %ebx,%esi;");
    asm("loc_65F927D: sub %eax,%esi;");
    asm("loc_65F927F: sub %edi,%esi;");
    asm("loc_65F9281: add %ecx,%esi;");
    asm("loc_65F9283: test %ebx,%ebx;");
    asm("loc_65F9285: je loc_65F928F;");
    asm("loc_65F9287: push %esi;");
    asm("loc_65F9288: mov %ebx,%ecx;");
    asm("loc_65F928A: call _sub_65F9B30;");
    asm("loc_65F928F: add $0x10,%esi;");
    asm("loc_65F9292: add $0x10,%ebx;");
    asm("loc_65F9295: cmp %ebp,%esi;");
    asm("loc_65F9297: jne loc_65F9283;");
    asm("loc_65F9299: mov 0x10(%esp),%eax;");
    asm("loc_65F929D: mov 8(%eax),%edi;");
    asm("loc_65F92A0: mov 4(%eax),%esi;");
    asm("loc_65F92A3: cmp %edi,%esi;");
    asm("loc_65F92A5: je loc_65F92B5;");
    asm("loc_65F92A7: mov %esi,%ecx;");
    asm("loc_65F92A9: call _sub_65F9430;");
    asm("loc_65F92AE: add $0x10,%esi;");
    asm("loc_65F92B1: cmp %edi,%esi;");
    asm("loc_65F92B3: jne loc_65F92A7;");
    asm("loc_65F92B5: mov 0x10(%esp),%eax;");
    asm("loc_65F92B9: mov 4(%eax),%ecx;");
    asm("loc_65F92BC: push %ecx;");
    asm("loc_65F92BD: call _sub_6600BB0;");
    asm("loc_65F92C2: mov 0x18(%esp),%eax;");
    asm("loc_65F92C6: mov 0x14(%esp),%ecx;");
    asm("loc_65F92CA: mov 0x1C(%esp),%esi;");
    asm("loc_65F92CE: mov 4(%ecx),%edx;");
    asm("loc_65F92D1: shl $4,%eax;");
    asm("loc_65F92D4: add %esi,%eax;");
    asm("loc_65F92D6: add $4,%esp;");
    asm("loc_65F92D9: test %edx,%edx;");
    asm("loc_65F92DB: mov %eax,0xC(%ecx);");
    asm("loc_65F92DE: jne loc_65F92E4;");
    asm("loc_65F92E0: xor %eax,%eax;");
    asm("loc_65F92E2: jmp loc_65F92EC;");
    asm("loc_65F92E4: mov 8(%ecx),%eax;");
    asm("loc_65F92E7: sub %edx,%eax;");
    asm("loc_65F92E9: sar $4,%eax;");
    asm("loc_65F92EC: mov 0x24(%esp),%edx;");
    asm("loc_65F92F0: add %edx,%eax;");
    asm("loc_65F92F2: pop %edi;");
    asm("loc_65F92F3: shl $4,%eax;");
    asm("loc_65F92F6: add %esi,%eax;");
    asm("loc_65F92F8: mov %esi,4(%ecx);");
    asm("loc_65F92FB: pop %esi;");
    asm("loc_65F92FC: pop %ebp;");
    asm("loc_65F92FD: mov %eax,8(%ecx);");
    asm("loc_65F9300: pop %ebx;");
    asm("loc_65F9301: add $0xC,%esp;");
    asm("loc_65F9304: ret $0xC;");
    asm("loc_65F9307: mov 0x20(%esp),%ebx;");
    asm("loc_65F930B: mov %esi,%edx;");
    asm("loc_65F930D: sub %ebx,%edx;");
    asm("loc_65F930F: sar $4,%edx;");
    asm("loc_65F9312: cmp %eax,%edx;");
    asm("loc_65F9314: jae loc_65F939B;");
    asm("loc_65F931A: mov %eax,%edx;");
    asm("loc_65F931C: shl $4,%edx;");
    asm("loc_65F931F: cmp %esi,%ebx;");
    asm("loc_65F9321: mov %edx,0x20(%esp);");
    asm("loc_65F9325: lea (%edx,%ebx),%ebp;");
    asm("loc_65F9328: je loc_65F934E;");
    asm("loc_65F932A: mov %ebp,%edi;");
    asm("loc_65F932C: sub %edx,%edi;");
    asm("loc_65F932E: mov %edi,%edi;");
    asm("loc_65F9330: test %ebp,%ebp;");
    asm("loc_65F9332: je loc_65F9344;");
    asm("loc_65F9334: push %edi;");
    asm("loc_65F9335: mov %ebp,%ecx;");
    asm("loc_65F9337: call _sub_65F9B30;");
    asm("loc_65F933C: mov 0x10(%esp),%ecx;");
    asm("loc_65F9340: mov 0x24(%esp),%eax;");
    asm("loc_65F9344: add $0x10,%edi;");
    asm("loc_65F9347: add $0x10,%ebp;");
    asm("loc_65F934A: cmp %esi,%edi;");
    asm("loc_65F934C: jne loc_65F9330;");
    asm("loc_65F934E: mov 8(%ecx),%edx;");
    asm("loc_65F9351: mov 0x28(%esp),%ebp;");
    asm("loc_65F9355: mov %edx,%esi;");
    asm("loc_65F9357: sub %ebx,%esi;");
    asm("loc_65F9359: sar $4,%esi;");
    asm("loc_65F935C: sub %esi,%eax;");
    asm("loc_65F935E: mov %edx,%esi;");
    asm("loc_65F9360: je loc_65F937A;");
    asm("loc_65F9362: mov %eax,%edi;");
    asm("loc_65F9364: test %esi,%esi;");
    asm("loc_65F9366: je loc_65F9374;");
    asm("loc_65F9368: push %ebp;");
    asm("loc_65F9369: mov %esi,%ecx;");
    asm("loc_65F936B: call _sub_65F9B30;");
    asm("loc_65F9370: mov 0x10(%esp),%ecx;");
    asm("loc_65F9374: add $0x10,%esi;");
    asm("loc_65F9377: dec %edi;");
    asm("loc_65F9378: jne loc_65F9364;");
    asm("loc_65F937A: mov 8(%ecx),%edi;");
    asm("loc_65F937D: cmp %edi,%ebx;");
    asm("loc_65F937F: mov %ebx,%esi;");
    asm("loc_65F9381: je loc_65F941A;");
    asm("loc_65F9387: push %ebp;");
    asm("loc_65F9388: mov %esi,%ecx;");
    asm("loc_65F938A: call _sub_65F9BE0;");
    asm("loc_65F938F: add $0x10,%esi;");
    asm("loc_65F9392: cmp %edi,%esi;");
    asm("loc_65F9394: jne loc_65F9387;");
    asm("loc_65F9396: jmp loc_65F9416;");
    asm("loc_65F939B: test %eax,%eax;");
    asm("loc_65F939D: jbe loc_65F9421;");
    asm("loc_65F93A3: shl $4,%eax;");
    asm("loc_65F93A6: mov %esi,%edi;");
    asm("loc_65F93A8: sub %eax,%edi;");
    asm("loc_65F93AA: cmp %esi,%edi;");
    asm("loc_65F93AC: mov %esi,%ebp;");
    asm("loc_65F93AE: mov %eax,0x20(%esp);");
    asm("loc_65F93B2: je loc_65F93D0;");
    asm("loc_65F93B4: push %edi;");
    asm("loc_65F93B5: push %ebp;");
    asm("loc_65F93B6: call _sub_65F9AA0;");
    asm("loc_65F93BB: add $0x10,%edi;");
    asm("loc_65F93BE: add $8,%esp;");
    asm("loc_65F93C1: add $0x10,%ebp;");
    asm("loc_65F93C4: cmp %esi,%edi;");
    asm("loc_65F93C6: jne loc_65F93B4;");
    asm("loc_65F93C8: mov 0x10(%esp),%ecx;");
    asm("loc_65F93CC: mov 0x20(%esp),%eax;");
    asm("loc_65F93D0: mov 8(%ecx),%edi;");
    asm("loc_65F93D3: mov %edi,%esi;");
    asm("loc_65F93D5: sub %eax,%esi;");
    asm("loc_65F93D7: cmp %esi,%ebx;");
    asm("loc_65F93D9: je loc_65F93FA;");
    asm("loc_65F93DB: nop;");
    asm("loc_65F93DC: lea (%esp),%esp;");
    asm("loc_65F93E0: sub $0x10,%esi;");
    asm("loc_65F93E3: sub $0x10,%edi;");
    asm("loc_65F93E6: push %esi;");
    asm("loc_65F93E7: mov %edi,%ecx;");
    asm("loc_65F93E9: call _sub_65F9BE0;");
    asm("loc_65F93EE: cmp %ebx,%esi;");
    asm("loc_65F93F0: jne loc_65F93E0;");
    asm("loc_65F93F2: mov 0x10(%esp),%ecx;");
    asm("loc_65F93F6: mov 0x20(%esp),%eax;");
    asm("loc_65F93FA: lea (%eax,%ebx),%edi;");
    asm("loc_65F93FD: cmp %edi,%ebx;");
    asm("loc_65F93FF: mov %ebx,%esi;");
    asm("loc_65F9401: je loc_65F941E;");
    asm("loc_65F9403: mov 0x28(%esp),%ebx;");
    asm("loc_65F9407: push %ebx;");
    asm("loc_65F9408: mov %esi,%ecx;");
    asm("loc_65F940A: call _sub_65F9BE0;");
    asm("loc_65F940F: add $0x10,%esi;");
    asm("loc_65F9412: cmp %edi,%esi;");
    asm("loc_65F9414: jne loc_65F9407;");
    asm("loc_65F9416: mov 0x10(%esp),%ecx;");
    asm("loc_65F941A: mov 0x20(%esp),%eax;");
    asm("loc_65F941E: add %eax,8(%ecx);");
    asm("loc_65F9421: pop %edi;");
    asm("loc_65F9422: pop %esi;");
    asm("loc_65F9423: pop %ebp;");
    asm("loc_65F9424: pop %ebx;");
    asm("loc_65F9425: add $0xC,%esp;");
    asm("loc_65F9428: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9430() // _sub_65F9430
{
    __DEBUG_ASM(65F9430);
    // chunk 0x65F9430 _sub_65F9430
    asm("loc_65F9430: push %esi;");
    asm("loc_65F9431: mov %ecx,%esi;");
    asm("loc_65F9433: mov 4(%esi),%eax;");
    asm("loc_65F9436: push %eax;");
    asm("loc_65F9437: call _sub_6600BB0;");
    asm("loc_65F943C: xor %eax,%eax;");
    asm("loc_65F943E: add $4,%esp;");
    asm("loc_65F9441: mov %eax,4(%esi);");
    asm("loc_65F9444: mov %eax,8(%esi);");
    asm("loc_65F9447: mov %eax,0xC(%esi);");
    asm("loc_65F944A: pop %esi;");
    asm("loc_65F944B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9450() // _sub_65F9450
{
    __DEBUG_ASM(65F9450);
    // chunk 0x65F9450 _sub_65F9450
    asm("loc_65F9450: push %ebx;");
    asm("loc_65F9451: mov 0xC(%esp),%ebx;");
    asm("loc_65F9455: push %esi;");
    asm("loc_65F9456: mov 0xC(%esp),%esi;");
    asm("loc_65F945A: cmp %ebx,%esi;");
    asm("loc_65F945C: je loc_65F947E;");
    asm("loc_65F945E: push %edi;");
    asm("loc_65F945F: xor %edi,%edi;");
    asm("loc_65F9461: mov 4(%esi),%eax;");
    asm("loc_65F9464: push %eax;");
    asm("loc_65F9465: call _sub_6600BB0;");
    asm("loc_65F946A: mov %edi,4(%esi);");
    asm("loc_65F946D: mov %edi,8(%esi);");
    asm("loc_65F9470: mov %edi,0xC(%esi);");
    asm("loc_65F9473: add $0x10,%esi;");
    asm("loc_65F9476: add $4,%esp;");
    asm("loc_65F9479: cmp %ebx,%esi;");
    asm("loc_65F947B: jne loc_65F9461;");
    asm("loc_65F947D: pop %edi;");
    asm("loc_65F947E: pop %esi;");
    asm("loc_65F947F: pop %ebx;");
    asm("loc_65F9480: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9490() // _sub_65F9490
{
    __DEBUG_ASM(65F9490);
    // chunk 0x65F9490 _sub_65F9490
    asm("loc_65F9490: sub $8,%esp;");
    asm("loc_65F9493: push %ebx;");
    asm("loc_65F9494: push %ebp;");
    asm("loc_65F9495: mov 0x18(%esp),%ebp;");
    asm("loc_65F9499: push %esi;");
    asm("loc_65F949A: push %edi;");
    asm("loc_65F949B: mov %ecx,%edi;");
    asm("loc_65F949D: mov 8(%edi),%eax;");
    asm("loc_65F94A0: mov 0xC(%edi),%ecx;");
    asm("loc_65F94A3: sub %eax,%ecx;");
    asm("loc_65F94A5: sar $2,%ecx;");
    asm("loc_65F94A8: cmp %ebp,%ecx;");
    asm("loc_65F94AA: mov %edi,0x10(%esp);");
    asm("loc_65F94AE: jae loc_65F95BB;");
    asm("loc_65F94B4: mov 4(%edi),%edx;");
    asm("loc_65F94B7: test %edx,%edx;");
    asm("loc_65F94B9: je loc_65F94C6;");
    asm("loc_65F94BB: mov %eax,%ecx;");
    asm("loc_65F94BD: sub %edx,%ecx;");
    asm("loc_65F94BF: sar $2,%ecx;");
    asm("loc_65F94C2: cmp %ecx,%ebp;");
    asm("loc_65F94C4: jb loc_65F94C8;");
    asm("loc_65F94C6: mov %ebp,%ecx;");
    asm("loc_65F94C8: test %edx,%edx;");
    asm("loc_65F94CA: jne loc_65F94D0;");
    asm("loc_65F94CC: xor %eax,%eax;");
    asm("loc_65F94CE: jmp loc_65F94D5;");
    asm("loc_65F94D0: sub %edx,%eax;");
    asm("loc_65F94D2: sar $2,%eax;");
    asm("loc_65F94D5: add %ecx,%eax;");
    asm("loc_65F94D7: test %eax,%eax;");
    asm("loc_65F94D9: mov %eax,0x14(%esp);");
    asm("loc_65F94DD: jge loc_65F94E1;");
    asm("loc_65F94DF: xor %eax,%eax;");
    asm("loc_65F94E1: lea (,%eax,4),%edx;");
    asm("loc_65F94E8: push %edx;");
    asm("loc_65F94E9: call _sub_6600BB6;");
    asm("loc_65F94EE: mov 0x20(%esp),%ebx;");
    asm("loc_65F94F2: mov %eax,0x24(%esp);");
    asm("loc_65F94F6: mov %eax,%ecx;");
    asm("loc_65F94F8: mov 4(%edi),%eax;");
    asm("loc_65F94FB: add $4,%esp;");
    asm("loc_65F94FE: cmp %ebx,%eax;");
    asm("loc_65F9500: je loc_65F9514;");
    asm("loc_65F9502: test %ecx,%ecx;");
    asm("loc_65F9504: je loc_65F950A;");
    asm("loc_65F9506: mov (%eax),%edx;");
    asm("loc_65F9508: mov %edx,(%ecx);");
    asm("loc_65F950A: add $4,%eax;");
    asm("loc_65F950D: add $4,%ecx;");
    asm("loc_65F9510: cmp %ebx,%eax;");
    asm("loc_65F9512: jne loc_65F9502;");
    asm("loc_65F9514: test %ebp,%ebp;");
    asm("loc_65F9516: mov %ecx,%eax;");
    asm("loc_65F9518: jbe loc_65F9532;");
    asm("loc_65F951A: mov 0x24(%esp),%esi;");
    asm("loc_65F951E: mov %ebp,%edx;");
    asm("loc_65F9520: test %eax,%eax;");
    asm("loc_65F9522: je loc_65F952C;");
    asm("loc_65F9524: mov (%esi),%edi;");
    asm("loc_65F9526: mov %edi,(%eax);");
    asm("loc_65F9528: mov 0x10(%esp),%edi;");
    asm("loc_65F952C: add $4,%eax;");
    asm("loc_65F952F: dec %edx;");
    asm("loc_65F9530: jne loc_65F9520;");
    asm("loc_65F9532: mov 8(%edi),%edi;");
    asm("loc_65F9535: cmp %edi,%ebx;");
    asm("loc_65F9537: lea (,%ebp,4),%esi;");
    asm("loc_65F953E: lea (%esi,%ecx),%edx;");
    asm("loc_65F9541: je loc_65F9562;");
    asm("loc_65F9543: mov %edx,%eax;");
    asm("loc_65F9545: sub %esi,%eax;");
    asm("loc_65F9547: sub %ecx,%eax;");
    asm("loc_65F9549: add %ebx,%eax;");
    asm("loc_65F954B: nop;");
    asm("loc_65F954C: lea (%esp),%esp;");
    asm("loc_65F9550: test %edx,%edx;");
    asm("loc_65F9552: je loc_65F9558;");
    asm("loc_65F9554: mov (%eax),%ecx;");
    asm("loc_65F9556: mov %ecx,(%edx);");
    asm("loc_65F9558: add $4,%eax;");
    asm("loc_65F955B: add $4,%edx;");
    asm("loc_65F955E: cmp %edi,%eax;");
    asm("loc_65F9560: jne loc_65F9550;");
    asm("loc_65F9562: mov 0x10(%esp),%esi;");
    asm("loc_65F9566: mov 4(%esi),%edx;");
    asm("loc_65F9569: push %edx;");
    asm("loc_65F956A: call _sub_6600BB0;");
    asm("loc_65F956F: mov 0x24(%esp),%edx;");
    asm("loc_65F9573: mov 0x18(%esp),%eax;");
    asm("loc_65F9577: lea (%edx,%eax,4),%ecx;");
    asm("loc_65F957A: mov %ecx,0xC(%esi);");
    asm("loc_65F957D: mov 4(%esi),%ecx;");
    asm("loc_65F9580: add $4,%esp;");
    asm("loc_65F9583: test %ecx,%ecx;");
    asm("loc_65F9585: jne loc_65F959E;");
    asm("loc_65F9587: xor %eax,%eax;");
    asm("loc_65F9589: mov %ebp,%eax;");
    asm("loc_65F958B: pop %edi;");
    asm("loc_65F958C: lea (%edx,%eax,4),%eax;");
    asm("loc_65F958F: mov %eax,8(%esi);");
    asm("loc_65F9592: mov %edx,4(%esi);");
    asm("loc_65F9595: pop %esi;");
    asm("loc_65F9596: pop %ebp;");
    asm("loc_65F9597: pop %ebx;");
    asm("loc_65F9598: add $8,%esp;");
    asm("loc_65F959B: ret $0xC;");
    asm("loc_65F959E: mov 8(%esi),%eax;");
    asm("loc_65F95A1: sub %ecx,%eax;");
    asm("loc_65F95A3: sar $2,%eax;");
    asm("loc_65F95A6: add %ebp,%eax;");
    asm("loc_65F95A8: pop %edi;");
    asm("loc_65F95A9: lea (%edx,%eax,4),%eax;");
    asm("loc_65F95AC: mov %eax,8(%esi);");
    asm("loc_65F95AF: mov %edx,4(%esi);");
    asm("loc_65F95B2: pop %esi;");
    asm("loc_65F95B3: pop %ebp;");
    asm("loc_65F95B4: pop %ebx;");
    asm("loc_65F95B5: add $8,%esp;");
    asm("loc_65F95B8: ret $0xC;");
    asm("loc_65F95BB: mov 0x1C(%esp),%edx;");
    asm("loc_65F95BF: mov %eax,%ecx;");
    asm("loc_65F95C1: sub %edx,%ecx;");
    asm("loc_65F95C3: sar $2,%ecx;");
    asm("loc_65F95C6: cmp %ebp,%ecx;");
    asm("loc_65F95C8: jae loc_65F9638;");
    asm("loc_65F95CA: cmp %eax,%edx;");
    asm("loc_65F95CC: lea (,%ebp,4),%ebx;");
    asm("loc_65F95D3: lea (%ebx,%edx),%esi;");
    asm("loc_65F95D6: je loc_65F95F6;");
    asm("loc_65F95D8: mov %esi,%ecx;");
    asm("loc_65F95DA: sub %ebx,%ecx;");
    asm("loc_65F95DC: lea (%esp),%esp;");
    asm("loc_65F95E0: test %esi,%esi;");
    asm("loc_65F95E2: je loc_65F95EC;");
    asm("loc_65F95E4: mov (%ecx),%edi;");
    asm("loc_65F95E6: mov %edi,(%esi);");
    asm("loc_65F95E8: mov 0x10(%esp),%edi;");
    asm("loc_65F95EC: add $4,%ecx;");
    asm("loc_65F95EF: add $4,%esi;");
    asm("loc_65F95F2: cmp %eax,%ecx;");
    asm("loc_65F95F4: jne loc_65F95E0;");
    asm("loc_65F95F6: mov 8(%edi),%eax;");
    asm("loc_65F95F9: mov 0x24(%esp),%esi;");
    asm("loc_65F95FD: mov %eax,%ecx;");
    asm("loc_65F95FF: sub %edx,%ecx;");
    asm("loc_65F9601: sar $2,%ecx;");
    asm("loc_65F9604: sub %ecx,%ebp;");
    asm("loc_65F9606: je loc_65F9616;");
    asm("loc_65F9608: test %eax,%eax;");
    asm("loc_65F960A: je loc_65F9610;");
    asm("loc_65F960C: mov (%esi),%ecx;");
    asm("loc_65F960E: mov %ecx,(%eax);");
    asm("loc_65F9610: add $4,%eax;");
    asm("loc_65F9613: dec %ebp;");
    asm("loc_65F9614: jne loc_65F9608;");
    asm("loc_65F9616: mov 8(%edi),%ecx;");
    asm("loc_65F9619: cmp %ecx,%edx;");
    asm("loc_65F961B: mov %edx,%eax;");
    asm("loc_65F961D: je loc_65F962B;");
    asm("loc_65F961F: nop;");
    asm("loc_65F9620: mov (%esi),%edx;");
    asm("loc_65F9622: mov %edx,(%eax);");
    asm("loc_65F9624: add $4,%eax;");
    asm("loc_65F9627: cmp %ecx,%eax;");
    asm("loc_65F9629: jne loc_65F9620;");
    asm("loc_65F962B: add %ebx,8(%edi);");
    asm("loc_65F962E: pop %edi;");
    asm("loc_65F962F: pop %esi;");
    asm("loc_65F9630: pop %ebp;");
    asm("loc_65F9631: pop %ebx;");
    asm("loc_65F9632: add $8,%esp;");
    asm("loc_65F9635: ret $0xC;");
    asm("loc_65F9638: test %ebp,%ebp;");
    asm("loc_65F963A: jbe loc_65F969E;");
    asm("loc_65F963C: shl $2,%ebp;");
    asm("loc_65F963F: mov %eax,%ecx;");
    asm("loc_65F9641: sub %ebp,%ecx;");
    asm("loc_65F9643: cmp %eax,%ecx;");
    asm("loc_65F9645: mov %eax,%esi;");
    asm("loc_65F9647: je loc_65F9662;");
    asm("loc_65F9649: lea (%esp),%esp;");
    asm("loc_65F9650: test %esi,%esi;");
    asm("loc_65F9652: je loc_65F9658;");
    asm("loc_65F9654: mov (%ecx),%ebx;");
    asm("loc_65F9656: mov %ebx,(%esi);");
    asm("loc_65F9658: add $4,%ecx;");
    asm("loc_65F965B: add $4,%esi;");
    asm("loc_65F965E: cmp %eax,%ecx;");
    asm("loc_65F9660: jne loc_65F9650;");
    asm("loc_65F9662: mov 8(%edi),%ecx;");
    asm("loc_65F9665: mov %ecx,%eax;");
    asm("loc_65F9667: sub %ebp,%eax;");
    asm("loc_65F9669: cmp %eax,%edx;");
    asm("loc_65F966B: je loc_65F967F;");
    asm("loc_65F966D: lea (%ecx),%ecx;");
    asm("loc_65F9670: mov -4(%eax),%esi;");
    asm("loc_65F9673: sub $4,%eax;");
    asm("loc_65F9676: sub $4,%ecx;");
    asm("loc_65F9679: cmp %edx,%eax;");
    asm("loc_65F967B: mov %esi,(%ecx);");
    asm("loc_65F967D: jne loc_65F9670;");
    asm("loc_65F967F: lea (%edx,%ebp),%ecx;");
    asm("loc_65F9682: cmp %ecx,%edx;");
    asm("loc_65F9684: mov %edx,%eax;");
    asm("loc_65F9686: je loc_65F969B;");
    asm("loc_65F9688: mov 0x24(%esp),%edx;");
    asm("loc_65F968C: lea (%esp),%esp;");
    asm("loc_65F9690: mov (%edx),%esi;");
    asm("loc_65F9692: mov %esi,(%eax);");
    asm("loc_65F9694: add $4,%eax;");
    asm("loc_65F9697: cmp %ecx,%eax;");
    asm("loc_65F9699: jne loc_65F9690;");
    asm("loc_65F969B: add %ebp,8(%edi);");
    asm("loc_65F969E: pop %edi;");
    asm("loc_65F969F: pop %esi;");
    asm("loc_65F96A0: pop %ebp;");
    asm("loc_65F96A1: pop %ebx;");
    asm("loc_65F96A2: add $8,%esp;");
    asm("loc_65F96A5: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F96B0() // _sub_65F96B0
{
    __DEBUG_ASM(65F96B0);
    // chunk 0x65F96B0 _sub_65F96B0
    asm("loc_65F96B0: sub $8,%esp;");
    asm("loc_65F96B3: push %ebx;");
    asm("loc_65F96B4: push %ebp;");
    asm("loc_65F96B5: mov 0x18(%esp),%ebp;");
    asm("loc_65F96B9: push %esi;");
    asm("loc_65F96BA: push %edi;");
    asm("loc_65F96BB: mov %ecx,%edi;");
    asm("loc_65F96BD: mov 8(%edi),%eax;");
    asm("loc_65F96C0: mov 0xC(%edi),%ecx;");
    asm("loc_65F96C3: sub %eax,%ecx;");
    asm("loc_65F96C5: sar $1,%ecx;");
    asm("loc_65F96C7: cmp %ebp,%ecx;");
    asm("loc_65F96C9: mov %edi,0x10(%esp);");
    asm("loc_65F96CD: jae loc_65F97DC;");
    asm("loc_65F96D3: mov 4(%edi),%edx;");
    asm("loc_65F96D6: test %edx,%edx;");
    asm("loc_65F96D8: je loc_65F96E4;");
    asm("loc_65F96DA: mov %eax,%ecx;");
    asm("loc_65F96DC: sub %edx,%ecx;");
    asm("loc_65F96DE: sar $1,%ecx;");
    asm("loc_65F96E0: cmp %ecx,%ebp;");
    asm("loc_65F96E2: jb loc_65F96E6;");
    asm("loc_65F96E4: mov %ebp,%ecx;");
    asm("loc_65F96E6: test %edx,%edx;");
    asm("loc_65F96E8: jne loc_65F96EE;");
    asm("loc_65F96EA: xor %eax,%eax;");
    asm("loc_65F96EC: jmp loc_65F96F2;");
    asm("loc_65F96EE: sub %edx,%eax;");
    asm("loc_65F96F0: sar $1,%eax;");
    asm("loc_65F96F2: add %ecx,%eax;");
    asm("loc_65F96F4: test %eax,%eax;");
    asm("loc_65F96F6: mov %eax,0x14(%esp);");
    asm("loc_65F96FA: jge loc_65F96FE;");
    asm("loc_65F96FC: xor %eax,%eax;");
    asm("loc_65F96FE: lea (%eax,%eax),%edx;");
    asm("loc_65F9701: push %edx;");
    asm("loc_65F9702: call _sub_6600BB6;");
    asm("loc_65F9707: mov 0x20(%esp),%ebx;");
    asm("loc_65F970B: mov %eax,0x24(%esp);");
    asm("loc_65F970F: mov %eax,%ecx;");
    asm("loc_65F9711: mov 4(%edi),%eax;");
    asm("loc_65F9714: add $4,%esp;");
    asm("loc_65F9717: cmp %ebx,%eax;");
    asm("loc_65F9719: je loc_65F9734;");
    asm("loc_65F971B: nop;");
    asm("loc_65F971C: lea (%esp),%esp;");
    asm("loc_65F9720: test %ecx,%ecx;");
    asm("loc_65F9722: je loc_65F972A;");
    asm("loc_65F9724: mov (%eax),%dx;");
    asm("loc_65F9727: mov %dx,(%ecx);");
    asm("loc_65F972A: add $2,%eax;");
    asm("loc_65F972D: add $2,%ecx;");
    asm("loc_65F9730: cmp %ebx,%eax;");
    asm("loc_65F9732: jne loc_65F9720;");
    asm("loc_65F9734: test %ebp,%ebp;");
    asm("loc_65F9736: mov %ecx,%eax;");
    asm("loc_65F9738: jbe loc_65F9754;");
    asm("loc_65F973A: mov 0x24(%esp),%esi;");
    asm("loc_65F973E: mov %ebp,%edx;");
    asm("loc_65F9740: test %eax,%eax;");
    asm("loc_65F9742: je loc_65F974E;");
    asm("loc_65F9744: mov (%esi),%di;");
    asm("loc_65F9747: mov %di,(%eax);");
    asm("loc_65F974A: mov 0x10(%esp),%edi;");
    asm("loc_65F974E: add $2,%eax;");
    asm("loc_65F9751: dec %edx;");
    asm("loc_65F9752: jne loc_65F9740;");
    asm("loc_65F9754: mov 8(%edi),%edi;");
    asm("loc_65F9757: cmp %edi,%ebx;");
    asm("loc_65F9759: lea (%ebp,%ebp),%esi;");
    asm("loc_65F975D: lea (%esi,%ecx),%edx;");
    asm("loc_65F9760: je loc_65F9784;");
    asm("loc_65F9762: mov %edx,%eax;");
    asm("loc_65F9764: sub %esi,%eax;");
    asm("loc_65F9766: sub %ecx,%eax;");
    asm("loc_65F9768: add %ebx,%eax;");
    asm("loc_65F976A: lea (%ebx),%ebx;");
    asm("loc_65F9770: test %edx,%edx;");
    asm("loc_65F9772: je loc_65F977A;");
    asm("loc_65F9774: mov (%eax),%cx;");
    asm("loc_65F9777: mov %cx,(%edx);");
    asm("loc_65F977A: add $2,%eax;");
    asm("loc_65F977D: add $2,%edx;");
    asm("loc_65F9780: cmp %edi,%eax;");
    asm("loc_65F9782: jne loc_65F9770;");
    asm("loc_65F9784: mov 0x10(%esp),%esi;");
    asm("loc_65F9788: mov 4(%esi),%edx;");
    asm("loc_65F978B: push %edx;");
    asm("loc_65F978C: call _sub_6600BB0;");
    asm("loc_65F9791: mov 0x24(%esp),%edx;");
    asm("loc_65F9795: mov 0x18(%esp),%eax;");
    asm("loc_65F9799: lea (%edx,%eax,2),%ecx;");
    asm("loc_65F979C: mov %ecx,0xC(%esi);");
    asm("loc_65F979F: mov 4(%esi),%ecx;");
    asm("loc_65F97A2: add $4,%esp;");
    asm("loc_65F97A5: test %ecx,%ecx;");
    asm("loc_65F97A7: jne loc_65F97C0;");
    asm("loc_65F97A9: xor %eax,%eax;");
    asm("loc_65F97AB: mov %ebp,%eax;");
    asm("loc_65F97AD: pop %edi;");
    asm("loc_65F97AE: lea (%edx,%eax,2),%eax;");
    asm("loc_65F97B1: mov %eax,8(%esi);");
    asm("loc_65F97B4: mov %edx,4(%esi);");
    asm("loc_65F97B7: pop %esi;");
    asm("loc_65F97B8: pop %ebp;");
    asm("loc_65F97B9: pop %ebx;");
    asm("loc_65F97BA: add $8,%esp;");
    asm("loc_65F97BD: ret $0xC;");
    asm("loc_65F97C0: mov 8(%esi),%eax;");
    asm("loc_65F97C3: sub %ecx,%eax;");
    asm("loc_65F97C5: sar $1,%eax;");
    asm("loc_65F97C7: add %ebp,%eax;");
    asm("loc_65F97C9: pop %edi;");
    asm("loc_65F97CA: lea (%edx,%eax,2),%eax;");
    asm("loc_65F97CD: mov %eax,8(%esi);");
    asm("loc_65F97D0: mov %edx,4(%esi);");
    asm("loc_65F97D3: pop %esi;");
    asm("loc_65F97D4: pop %ebp;");
    asm("loc_65F97D5: pop %ebx;");
    asm("loc_65F97D6: add $8,%esp;");
    asm("loc_65F97D9: ret $0xC;");
    asm("loc_65F97DC: mov 0x1C(%esp),%edx;");
    asm("loc_65F97E0: mov %eax,%ecx;");
    asm("loc_65F97E2: sub %edx,%ecx;");
    asm("loc_65F97E4: sar $1,%ecx;");
    asm("loc_65F97E6: cmp %ebp,%ecx;");
    asm("loc_65F97E8: jae loc_65F986A;");
    asm("loc_65F97EE: cmp %eax,%edx;");
    asm("loc_65F97F0: lea (%ebp,%ebp),%ebx;");
    asm("loc_65F97F4: lea (%ebx,%edx),%esi;");
    asm("loc_65F97F7: je loc_65F9818;");
    asm("loc_65F97F9: mov %esi,%ecx;");
    asm("loc_65F97FB: sub %ebx,%ecx;");
    asm("loc_65F97FD: lea (%ecx),%ecx;");
    asm("loc_65F9800: test %esi,%esi;");
    asm("loc_65F9802: je loc_65F980E;");
    asm("loc_65F9804: mov (%ecx),%di;");
    asm("loc_65F9807: mov %di,(%esi);");
    asm("loc_65F980A: mov 0x10(%esp),%edi;");
    asm("loc_65F980E: add $2,%ecx;");
    asm("loc_65F9811: add $2,%esi;");
    asm("loc_65F9814: cmp %eax,%ecx;");
    asm("loc_65F9816: jne loc_65F9800;");
    asm("loc_65F9818: mov 8(%edi),%eax;");
    asm("loc_65F981B: mov 0x24(%esp),%esi;");
    asm("loc_65F981F: mov %eax,%ecx;");
    asm("loc_65F9821: sub %edx,%ecx;");
    asm("loc_65F9823: sar $1,%ecx;");
    asm("loc_65F9825: sub %ecx,%ebp;");
    asm("loc_65F9827: je loc_65F9840;");
    asm("loc_65F9829: lea (%esp),%esp;");
    asm("loc_65F9830: test %eax,%eax;");
    asm("loc_65F9832: je loc_65F983A;");
    asm("loc_65F9834: mov (%esi),%cx;");
    asm("loc_65F9837: mov %cx,(%eax);");
    asm("loc_65F983A: add $2,%eax;");
    asm("loc_65F983D: dec %ebp;");
    asm("loc_65F983E: jne loc_65F9830;");
    asm("loc_65F9840: mov 8(%edi),%ecx;");
    asm("loc_65F9843: cmp %ecx,%edx;");
    asm("loc_65F9845: mov %edx,%eax;");
    asm("loc_65F9847: je loc_65F985D;");
    asm("loc_65F9849: lea (%esp),%esp;");
    asm("loc_65F9850: mov (%esi),%dx;");
    asm("loc_65F9853: mov %dx,(%eax);");
    asm("loc_65F9856: add $2,%eax;");
    asm("loc_65F9859: cmp %ecx,%eax;");
    asm("loc_65F985B: jne loc_65F9850;");
    asm("loc_65F985D: add %ebx,8(%edi);");
    asm("loc_65F9860: pop %edi;");
    asm("loc_65F9861: pop %esi;");
    asm("loc_65F9862: pop %ebp;");
    asm("loc_65F9863: pop %ebx;");
    asm("loc_65F9864: add $8,%esp;");
    asm("loc_65F9867: ret $0xC;");
    asm("loc_65F986A: test %ebp,%ebp;");
    asm("loc_65F986C: jbe loc_65F98D0;");
    asm("loc_65F986E: add %ebp,%ebp;");
    asm("loc_65F9870: mov %eax,%ecx;");
    asm("loc_65F9872: sub %ebp,%ecx;");
    asm("loc_65F9874: cmp %eax,%ecx;");
    asm("loc_65F9876: mov %eax,%esi;");
    asm("loc_65F9878: je loc_65F9894;");
    asm("loc_65F987A: lea (%ebx),%ebx;");
    asm("loc_65F9880: test %esi,%esi;");
    asm("loc_65F9882: je loc_65F988A;");
    asm("loc_65F9884: mov (%ecx),%bx;");
    asm("loc_65F9887: mov %bx,(%esi);");
    asm("loc_65F988A: add $2,%ecx;");
    asm("loc_65F988D: add $2,%esi;");
    asm("loc_65F9890: cmp %eax,%ecx;");
    asm("loc_65F9892: jne loc_65F9880;");
    asm("loc_65F9894: mov 8(%edi),%ecx;");
    asm("loc_65F9897: mov %ecx,%eax;");
    asm("loc_65F9899: sub %ebp,%eax;");
    asm("loc_65F989B: cmp %eax,%edx;");
    asm("loc_65F989D: je loc_65F98B1;");
    asm("loc_65F989F: nop;");
    asm("loc_65F98A0: mov -2(%eax),%si;");
    asm("loc_65F98A4: sub $2,%eax;");
    asm("loc_65F98A7: sub $2,%ecx;");
    asm("loc_65F98AA: cmp %edx,%eax;");
    asm("loc_65F98AC: mov %si,(%ecx);");
    asm("loc_65F98AF: jne loc_65F98A0;");
    asm("loc_65F98B1: lea (%edx,%ebp),%ecx;");
    asm("loc_65F98B4: cmp %ecx,%edx;");
    asm("loc_65F98B6: mov %edx,%eax;");
    asm("loc_65F98B8: je loc_65F98CD;");
    asm("loc_65F98BA: mov 0x24(%esp),%edx;");
    asm("loc_65F98BE: mov %edi,%edi;");
    asm("loc_65F98C0: mov (%edx),%si;");
    asm("loc_65F98C3: mov %si,(%eax);");
    asm("loc_65F98C6: add $2,%eax;");
    asm("loc_65F98C9: cmp %ecx,%eax;");
    asm("loc_65F98CB: jne loc_65F98C0;");
    asm("loc_65F98CD: add %ebp,8(%edi);");
    asm("loc_65F98D0: pop %edi;");
    asm("loc_65F98D1: pop %esi;");
    asm("loc_65F98D2: pop %ebp;");
    asm("loc_65F98D3: pop %ebx;");
    asm("loc_65F98D4: add $8,%esp;");
    asm("loc_65F98D7: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F98E0() // _sub_65F98E0
{
    __DEBUG_ASM(65F98E0);
    // chunk 0x65F98E0 _sub_65F98E0
    asm("loc_65F98E0: mov 8(%esp),%eax;");
    asm("loc_65F98E4: push %edi;");
    asm("loc_65F98E5: mov 8(%esp),%edi;");
    asm("loc_65F98E9: cmp %eax,%edi;");
    asm("loc_65F98EB: je loc_65F9A61;");
    asm("loc_65F98F1: push %ebx;");
    asm("loc_65F98F2: push %ebp;");
    asm("loc_65F98F3: push %esi;");
    asm("loc_65F98F4: mov 0x1C(%esp),%esi;");
    asm("loc_65F98F8: cmp %edi,%esi;");
    asm("loc_65F98FA: je loc_65F9A44;");
    asm("loc_65F9900: mov 4(%edi),%eax;");
    asm("loc_65F9903: test %eax,%eax;");
    asm("loc_65F9905: jne loc_65F990B;");
    asm("loc_65F9907: xor %ebx,%ebx;");
    asm("loc_65F9909: jmp loc_65F9913;");
    asm("loc_65F990B: mov 8(%edi),%ebx;");
    asm("loc_65F990E: sub %eax,%ebx;");
    asm("loc_65F9910: sar $2,%ebx;");
    asm("loc_65F9913: mov 4(%esi),%edx;");
    asm("loc_65F9916: test %edx,%edx;");
    asm("loc_65F9918: jne loc_65F991E;");
    asm("loc_65F991A: xor %ecx,%ecx;");
    asm("loc_65F991C: jmp loc_65F9926;");
    asm("loc_65F991E: mov 8(%esi),%ecx;");
    asm("loc_65F9921: sub %edx,%ecx;");
    asm("loc_65F9923: sar $2,%ecx;");
    asm("loc_65F9926: cmp %ecx,%ebx;");
    asm("loc_65F9928: ja loc_65F996C;");
    asm("loc_65F992A: mov 8(%edi),%ecx;");
    asm("loc_65F992D: cmp %ecx,%eax;");
    asm("loc_65F992F: je loc_65F993F;");
    asm("loc_65F9931: mov (%eax),%ebx;");
    asm("loc_65F9933: mov %ebx,(%edx);");
    asm("loc_65F9935: add $4,%eax;");
    asm("loc_65F9938: add $4,%edx;");
    asm("loc_65F993B: cmp %ecx,%eax;");
    asm("loc_65F993D: jne loc_65F9931;");
    asm("loc_65F993F: mov 4(%edi),%ecx;");
    asm("loc_65F9942: test %ecx,%ecx;");
    asm("loc_65F9944: jne loc_65F9956;");
    asm("loc_65F9946: mov 4(%esi),%ecx;");
    asm("loc_65F9949: xor %eax,%eax;");
    asm("loc_65F994B: lea (%ecx,%eax,4),%edx;");
    asm("loc_65F994E: mov %edx,8(%esi);");
    asm("loc_65F9951: jmp loc_65F9A44;");
    asm("loc_65F9956: mov 8(%edi),%eax;");
    asm("loc_65F9959: sub %ecx,%eax;");
    asm("loc_65F995B: mov 4(%esi),%ecx;");
    asm("loc_65F995E: sar $2,%eax;");
    asm("loc_65F9961: lea (%ecx,%eax,4),%edx;");
    asm("loc_65F9964: mov %edx,8(%esi);");
    asm("loc_65F9967: jmp loc_65F9A44;");
    asm("loc_65F996C: test %eax,%eax;");
    asm("loc_65F996E: jne loc_65F9974;");
    asm("loc_65F9970: xor %ebx,%ebx;");
    asm("loc_65F9972: jmp loc_65F997C;");
    asm("loc_65F9974: mov 8(%edi),%ebx;");
    asm("loc_65F9977: sub %eax,%ebx;");
    asm("loc_65F9979: sar $2,%ebx;");
    asm("loc_65F997C: test %edx,%edx;");
    asm("loc_65F997E: jne loc_65F9984;");
    asm("loc_65F9980: xor %ecx,%ecx;");
    asm("loc_65F9982: jmp loc_65F998C;");
    asm("loc_65F9984: mov 0xC(%esi),%ecx;");
    asm("loc_65F9987: sub %edx,%ecx;");
    asm("loc_65F9989: sar $2,%ecx;");
    asm("loc_65F998C: cmp %ecx,%ebx;");
    asm("loc_65F998E: ja loc_65F99F9;");
    asm("loc_65F9990: test %edx,%edx;");
    asm("loc_65F9992: jne loc_65F9998;");
    asm("loc_65F9994: xor %ecx,%ecx;");
    asm("loc_65F9996: jmp loc_65F99A0;");
    asm("loc_65F9998: mov 8(%esi),%ecx;");
    asm("loc_65F999B: sub %edx,%ecx;");
    asm("loc_65F999D: sar $2,%ecx;");
    asm("loc_65F99A0: lea (%eax,%ecx,4),%ecx;");
    asm("loc_65F99A3: cmp %ecx,%eax;");
    asm("loc_65F99A5: je loc_65F99B5;");
    asm("loc_65F99A7: mov (%eax),%ebx;");
    asm("loc_65F99A9: mov %ebx,(%edx);");
    asm("loc_65F99AB: add $4,%eax;");
    asm("loc_65F99AE: add $4,%edx;");
    asm("loc_65F99B1: cmp %ecx,%eax;");
    asm("loc_65F99B3: jne loc_65F99A7;");
    asm("loc_65F99B5: mov 8(%edi),%ebp;");
    asm("loc_65F99B8: cmp %ebp,%ecx;");
    asm("loc_65F99BA: mov 8(%esi),%ebx;");
    asm("loc_65F99BD: mov %ecx,%esi;");
    asm("loc_65F99BF: je loc_65F99D5;");
    asm("loc_65F99C1: push %esi;");
    asm("loc_65F99C2: push %ebx;");
    asm("loc_65F99C3: call _sub_65F9B10;");
    asm("loc_65F99C8: add $4,%esi;");
    asm("loc_65F99CB: add $8,%esp;");
    asm("loc_65F99CE: add $4,%ebx;");
    asm("loc_65F99D1: cmp %ebp,%esi;");
    asm("loc_65F99D3: jne loc_65F99C1;");
    asm("loc_65F99D5: mov 4(%edi),%ecx;");
    asm("loc_65F99D8: test %ecx,%ecx;");
    asm("loc_65F99DA: jne loc_65F99E0;");
    asm("loc_65F99DC: xor %eax,%eax;");
    asm("loc_65F99DE: jmp loc_65F99E8;");
    asm("loc_65F99E0: mov 8(%edi),%eax;");
    asm("loc_65F99E3: sub %ecx,%eax;");
    asm("loc_65F99E5: sar $2,%eax;");
    asm("loc_65F99E8: mov 0x1C(%esp),%ecx;");
    asm("loc_65F99EC: mov 4(%ecx),%edx;");
    asm("loc_65F99EF: lea (%edx,%eax,4),%eax;");
    asm("loc_65F99F2: mov %eax,8(%ecx);");
    asm("loc_65F99F5: mov %ecx,%esi;");
    asm("loc_65F99F7: jmp loc_65F9A44;");
    asm("loc_65F99F9: push %edx;");
    asm("loc_65F99FA: call _sub_6600BB0;");
    asm("loc_65F99FF: mov 4(%edi),%ecx;");
    asm("loc_65F9A02: add $4,%esp;");
    asm("loc_65F9A05: test %ecx,%ecx;");
    asm("loc_65F9A07: jne loc_65F9A0D;");
    asm("loc_65F9A09: xor %eax,%eax;");
    asm("loc_65F9A0B: jmp loc_65F9A15;");
    asm("loc_65F9A0D: mov 8(%edi),%eax;");
    asm("loc_65F9A10: sub %ecx,%eax;");
    asm("loc_65F9A12: sar $2,%eax;");
    asm("loc_65F9A15: test %eax,%eax;");
    asm("loc_65F9A17: jge loc_65F9A1B;");
    asm("loc_65F9A19: xor %eax,%eax;");
    asm("loc_65F9A1B: lea (,%eax,4),%ecx;");
    asm("loc_65F9A22: push %ecx;");
    asm("loc_65F9A23: call _sub_6600BB6;");
    asm("loc_65F9A28: add $4,%esp;");
    asm("loc_65F9A2B: mov %eax,4(%esi);");
    asm("loc_65F9A2E: mov 8(%edi),%ecx;");
    asm("loc_65F9A31: mov 4(%edi),%edx;");
    asm("loc_65F9A34: push %eax;");
    asm("loc_65F9A35: push %ecx;");
    asm("loc_65F9A36: push %edx;");
    asm("loc_65F9A37: mov %esi,%ecx;");
    asm("loc_65F9A39: call _sub_65F9A70;");
    asm("loc_65F9A3E: mov %eax,8(%esi);");
    asm("loc_65F9A41: mov %eax,0xC(%esi);");
    asm("loc_65F9A44: mov 0x18(%esp),%eax;");
    asm("loc_65F9A48: add $0x10,%esi;");
    asm("loc_65F9A4B: add $0x10,%edi;");
    asm("loc_65F9A4E: cmp %eax,%edi;");
    asm("loc_65F9A50: mov %esi,0x1C(%esp);");
    asm("loc_65F9A54: jne loc_65F98F4;");
    asm("loc_65F9A5A: mov %esi,%eax;");
    asm("loc_65F9A5C: pop %esi;");
    asm("loc_65F9A5D: pop %ebp;");
    asm("loc_65F9A5E: pop %ebx;");
    asm("loc_65F9A5F: pop %edi;");
    asm("loc_65F9A60: ret;");
    asm("loc_65F9A61: mov 0x10(%esp),%eax;");
    asm("loc_65F9A65: pop %edi;");
    asm("loc_65F9A66: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9A70() // _sub_65F9A70
{
    __DEBUG_ASM(65F9A70);
    // chunk 0x65F9A70 _sub_65F9A70
    asm("loc_65F9A70: mov 4(%esp),%ecx;");
    asm("loc_65F9A74: mov 8(%esp),%edx;");
    asm("loc_65F9A78: cmp %edx,%ecx;");
    asm("loc_65F9A7A: mov 0xC(%esp),%eax;");
    asm("loc_65F9A7E: je loc_65F9A94;");
    asm("loc_65F9A80: push %esi;");
    asm("loc_65F9A81: test %eax,%eax;");
    asm("loc_65F9A83: je loc_65F9A89;");
    asm("loc_65F9A85: mov (%ecx),%esi;");
    asm("loc_65F9A87: mov %esi,(%eax);");
    asm("loc_65F9A89: add $4,%ecx;");
    asm("loc_65F9A8C: add $4,%eax;");
    asm("loc_65F9A8F: cmp %edx,%ecx;");
    asm("loc_65F9A91: jne loc_65F9A81;");
    asm("loc_65F9A93: pop %esi;");
    asm("loc_65F9A94: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9AA0() // _sub_65F9AA0
{
    __DEBUG_ASM(65F9AA0);
    // chunk 0x65F9AA0 _sub_65F9AA0
    asm("loc_65F9AA0: push %edi;");
    asm("loc_65F9AA1: mov 8(%esp),%edi;");
    asm("loc_65F9AA5: test %edi,%edi;");
    asm("loc_65F9AA7: je loc_65F9B09;");
    asm("loc_65F9AA9: push %esi;");
    asm("loc_65F9AAA: mov 0x10(%esp),%esi;");
    asm("loc_65F9AAE: mov (%esi),%al;");
    asm("loc_65F9AB0: mov %al,(%edi);");
    asm("loc_65F9AB2: mov 4(%esi),%ecx;");
    asm("loc_65F9AB5: test %ecx,%ecx;");
    asm("loc_65F9AB7: jne loc_65F9ABD;");
    asm("loc_65F9AB9: xor %eax,%eax;");
    asm("loc_65F9ABB: jmp loc_65F9AC5;");
    asm("loc_65F9ABD: mov 8(%esi),%eax;");
    asm("loc_65F9AC0: sub %ecx,%eax;");
    asm("loc_65F9AC2: sar $2,%eax;");
    asm("loc_65F9AC5: test %eax,%eax;");
    asm("loc_65F9AC7: jge loc_65F9ACB;");
    asm("loc_65F9AC9: xor %eax,%eax;");
    asm("loc_65F9ACB: lea (,%eax,4),%ecx;");
    asm("loc_65F9AD2: push %ecx;");
    asm("loc_65F9AD3: call _sub_6600BB6;");
    asm("loc_65F9AD8: mov %eax,4(%edi);");
    asm("loc_65F9ADB: mov 8(%esi),%edx;");
    asm("loc_65F9ADE: mov %eax,%ecx;");
    asm("loc_65F9AE0: mov 4(%esi),%eax;");
    asm("loc_65F9AE3: add $4,%esp;");
    asm("loc_65F9AE6: cmp %edx,%eax;");
    asm("loc_65F9AE8: je loc_65F9B02;");
    asm("loc_65F9AEA: lea (%ebx),%ebx;");
    asm("loc_65F9AF0: test %ecx,%ecx;");
    asm("loc_65F9AF2: je loc_65F9AF8;");
    asm("loc_65F9AF4: mov (%eax),%esi;");
    asm("loc_65F9AF6: mov %esi,(%ecx);");
    asm("loc_65F9AF8: add $4,%eax;");
    asm("loc_65F9AFB: add $4,%ecx;");
    asm("loc_65F9AFE: cmp %edx,%eax;");
    asm("loc_65F9B00: jne loc_65F9AF0;");
    asm("loc_65F9B02: mov %ecx,8(%edi);");
    asm("loc_65F9B05: mov %ecx,0xC(%edi);");
    asm("loc_65F9B08: pop %esi;");
    asm("loc_65F9B09: pop %edi;");
    asm("loc_65F9B0A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9B10() // _sub_65F9B10
{
    __DEBUG_ASM(65F9B10);
    // chunk 0x65F9B10 _sub_65F9B10
    asm("loc_65F9B10: mov 4(%esp),%eax;");
    asm("loc_65F9B14: test %eax,%eax;");
    asm("loc_65F9B16: je loc_65F9B20;");
    asm("loc_65F9B18: mov 8(%esp),%ecx;");
    asm("loc_65F9B1C: mov (%ecx),%edx;");
    asm("loc_65F9B1E: mov %edx,(%eax);");
    asm("loc_65F9B20: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9B30() // _sub_65F9B30
{
    __DEBUG_ASM(65F9B30);
    // chunk 0x65F9B30 _sub_65F9B30
    asm("loc_65F9B30: push %esi;");
    asm("loc_65F9B31: mov 8(%esp),%esi;");
    asm("loc_65F9B35: mov (%esi),%al;");
    asm("loc_65F9B37: push %edi;");
    asm("loc_65F9B38: mov %ecx,%edi;");
    asm("loc_65F9B3A: mov %al,(%edi);");
    asm("loc_65F9B3C: mov 4(%esi),%ecx;");
    asm("loc_65F9B3F: test %ecx,%ecx;");
    asm("loc_65F9B41: jne loc_65F9B47;");
    asm("loc_65F9B43: xor %eax,%eax;");
    asm("loc_65F9B45: jmp loc_65F9B4F;");
    asm("loc_65F9B47: mov 8(%esi),%eax;");
    asm("loc_65F9B4A: sub %ecx,%eax;");
    asm("loc_65F9B4C: sar $2,%eax;");
    asm("loc_65F9B4F: test %eax,%eax;");
    asm("loc_65F9B51: jge loc_65F9B55;");
    asm("loc_65F9B53: xor %eax,%eax;");
    asm("loc_65F9B55: lea (,%eax,4),%ecx;");
    asm("loc_65F9B5C: push %ecx;");
    asm("loc_65F9B5D: call _sub_6600BB6;");
    asm("loc_65F9B62: mov %eax,4(%edi);");
    asm("loc_65F9B65: mov 8(%esi),%edx;");
    asm("loc_65F9B68: mov %eax,%ecx;");
    asm("loc_65F9B6A: mov 4(%esi),%eax;");
    asm("loc_65F9B6D: add $4,%esp;");
    asm("loc_65F9B70: cmp %edx,%eax;");
    asm("loc_65F9B72: je loc_65F9B86;");
    asm("loc_65F9B74: test %ecx,%ecx;");
    asm("loc_65F9B76: je loc_65F9B7C;");
    asm("loc_65F9B78: mov (%eax),%esi;");
    asm("loc_65F9B7A: mov %esi,(%ecx);");
    asm("loc_65F9B7C: add $4,%eax;");
    asm("loc_65F9B7F: add $4,%ecx;");
    asm("loc_65F9B82: cmp %edx,%eax;");
    asm("loc_65F9B84: jne loc_65F9B74;");
    asm("loc_65F9B86: mov %ecx,8(%edi);");
    asm("loc_65F9B89: mov %ecx,0xC(%edi);");
    asm("loc_65F9B8C: mov %edi,%eax;");
    asm("loc_65F9B8E: pop %edi;");
    asm("loc_65F9B8F: pop %esi;");
    asm("loc_65F9B90: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9BA0() // _sub_65F9BA0
{
    __DEBUG_ASM(65F9BA0);
    // chunk 0x65F9BA0 _sub_65F9BA0
    asm("loc_65F9BA0: push %esi;");
    asm("loc_65F9BA1: mov %ecx,%esi;");
    asm("loc_65F9BA3: mov 4(%esi),%eax;");
    asm("loc_65F9BA6: push %eax;");
    asm("loc_65F9BA7: call _sub_6600BB0;");
    asm("loc_65F9BAC: xor %eax,%eax;");
    asm("loc_65F9BAE: mov %eax,4(%esi);");
    asm("loc_65F9BB1: mov %eax,8(%esi);");
    asm("loc_65F9BB4: mov %eax,0xC(%esi);");
    asm("loc_65F9BB7: mov 0xC(%esp),%al;");
    asm("loc_65F9BBB: add $4,%esp;");
    asm("loc_65F9BBE: test $1,%al;");
    asm("loc_65F9BC0: je loc_65F9BCB;");
    asm("loc_65F9BC2: push %esi;");
    asm("loc_65F9BC3: call _sub_6600BB0;");
    asm("loc_65F9BC8: add $4,%esp;");
    asm("loc_65F9BCB: mov %esi,%eax;");
    asm("loc_65F9BCD: pop %esi;");
    asm("loc_65F9BCE: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9BE0() // _sub_65F9BE0
{
    __DEBUG_ASM(65F9BE0);
    // chunk 0x65F9BE0 _sub_65F9BE0
    asm("loc_65F9BE0: push %ebx;");
    asm("loc_65F9BE1: push %esi;");
    asm("loc_65F9BE2: mov 0xC(%esp),%esi;");
    asm("loc_65F9BE6: mov %ecx,%ebx;");
    asm("loc_65F9BE8: cmp %esi,%ebx;");
    asm("loc_65F9BEA: push %edi;");
    asm("loc_65F9BEB: je loc_65F9D5E;");
    asm("loc_65F9BF1: mov 4(%esi),%eax;");
    asm("loc_65F9BF4: test %eax,%eax;");
    asm("loc_65F9BF6: jne loc_65F9BFC;");
    asm("loc_65F9BF8: xor %edi,%edi;");
    asm("loc_65F9BFA: jmp loc_65F9C04;");
    asm("loc_65F9BFC: mov 8(%esi),%edi;");
    asm("loc_65F9BFF: sub %eax,%edi;");
    asm("loc_65F9C01: sar $2,%edi;");
    asm("loc_65F9C04: mov 4(%ebx),%edx;");
    asm("loc_65F9C07: test %edx,%edx;");
    asm("loc_65F9C09: jne loc_65F9C0F;");
    asm("loc_65F9C0B: xor %ecx,%ecx;");
    asm("loc_65F9C0D: jmp loc_65F9C17;");
    asm("loc_65F9C0F: mov 8(%ebx),%ecx;");
    asm("loc_65F9C12: sub %edx,%ecx;");
    asm("loc_65F9C14: sar $2,%ecx;");
    asm("loc_65F9C17: cmp %ecx,%edi;");
    asm("loc_65F9C19: ja loc_65F9C63;");
    asm("loc_65F9C1B: mov 8(%esi),%ecx;");
    asm("loc_65F9C1E: cmp %ecx,%eax;");
    asm("loc_65F9C20: je loc_65F9C30;");
    asm("loc_65F9C22: mov (%eax),%edi;");
    asm("loc_65F9C24: mov %edi,(%edx);");
    asm("loc_65F9C26: add $4,%eax;");
    asm("loc_65F9C29: add $4,%edx;");
    asm("loc_65F9C2C: cmp %ecx,%eax;");
    asm("loc_65F9C2E: jne loc_65F9C22;");
    asm("loc_65F9C30: mov 4(%esi),%eax;");
    asm("loc_65F9C33: test %eax,%eax;");
    asm("loc_65F9C35: jne loc_65F9C4A;");
    asm("loc_65F9C37: mov 4(%ebx),%eax;");
    asm("loc_65F9C3A: xor %esi,%esi;");
    asm("loc_65F9C3C: lea (%eax,%esi,4),%ecx;");
    asm("loc_65F9C3F: pop %edi;");
    asm("loc_65F9C40: pop %esi;");
    asm("loc_65F9C41: mov %ecx,8(%ebx);");
    asm("loc_65F9C44: mov %ebx,%eax;");
    asm("loc_65F9C46: pop %ebx;");
    asm("loc_65F9C47: ret $4;");
    asm("loc_65F9C4A: mov 8(%esi),%esi;");
    asm("loc_65F9C4D: sub %eax,%esi;");
    asm("loc_65F9C4F: mov 4(%ebx),%eax;");
    asm("loc_65F9C52: sar $2,%esi;");
    asm("loc_65F9C55: lea (%eax,%esi,4),%ecx;");
    asm("loc_65F9C58: pop %edi;");
    asm("loc_65F9C59: pop %esi;");
    asm("loc_65F9C5A: mov %ecx,8(%ebx);");
    asm("loc_65F9C5D: mov %ebx,%eax;");
    asm("loc_65F9C5F: pop %ebx;");
    asm("loc_65F9C60: ret $4;");
    asm("loc_65F9C63: test %eax,%eax;");
    asm("loc_65F9C65: jne loc_65F9C6B;");
    asm("loc_65F9C67: xor %edi,%edi;");
    asm("loc_65F9C69: jmp loc_65F9C73;");
    asm("loc_65F9C6B: mov 8(%esi),%edi;");
    asm("loc_65F9C6E: sub %eax,%edi;");
    asm("loc_65F9C70: sar $2,%edi;");
    asm("loc_65F9C73: test %edx,%edx;");
    asm("loc_65F9C75: jne loc_65F9C7B;");
    asm("loc_65F9C77: xor %ecx,%ecx;");
    asm("loc_65F9C79: jmp loc_65F9C83;");
    asm("loc_65F9C7B: mov 0xC(%ebx),%ecx;");
    asm("loc_65F9C7E: sub %edx,%ecx;");
    asm("loc_65F9C80: sar $2,%ecx;");
    asm("loc_65F9C83: cmp %ecx,%edi;");
    asm("loc_65F9C85: ja loc_65F9D05;");
    asm("loc_65F9C8B: test %edx,%edx;");
    asm("loc_65F9C8D: jne loc_65F9C93;");
    asm("loc_65F9C8F: xor %ecx,%ecx;");
    asm("loc_65F9C91: jmp loc_65F9C9B;");
    asm("loc_65F9C93: mov 8(%ebx),%ecx;");
    asm("loc_65F9C96: sub %edx,%ecx;");
    asm("loc_65F9C98: sar $2,%ecx;");
    asm("loc_65F9C9B: lea (%eax,%ecx,4),%ecx;");
    asm("loc_65F9C9E: cmp %ecx,%eax;");
    asm("loc_65F9CA0: je loc_65F9CB0;");
    asm("loc_65F9CA2: mov (%eax),%edi;");
    asm("loc_65F9CA4: mov %edi,(%edx);");
    asm("loc_65F9CA6: add $4,%eax;");
    asm("loc_65F9CA9: add $4,%edx;");
    asm("loc_65F9CAC: cmp %ecx,%eax;");
    asm("loc_65F9CAE: jne loc_65F9CA2;");
    asm("loc_65F9CB0: mov 8(%esi),%edi;");
    asm("loc_65F9CB3: cmp %edi,%ecx;");
    asm("loc_65F9CB5: mov 8(%ebx),%edx;");
    asm("loc_65F9CB8: mov %ecx,%eax;");
    asm("loc_65F9CBA: je loc_65F9CD2;");
    asm("loc_65F9CBC: lea (%esp),%esp;");
    asm("loc_65F9CC0: test %edx,%edx;");
    asm("loc_65F9CC2: je loc_65F9CC8;");
    asm("loc_65F9CC4: mov (%eax),%ecx;");
    asm("loc_65F9CC6: mov %ecx,(%edx);");
    asm("loc_65F9CC8: add $4,%eax;");
    asm("loc_65F9CCB: add $4,%edx;");
    asm("loc_65F9CCE: cmp %edi,%eax;");
    asm("loc_65F9CD0: jne loc_65F9CC0;");
    asm("loc_65F9CD2: mov 4(%esi),%eax;");
    asm("loc_65F9CD5: test %eax,%eax;");
    asm("loc_65F9CD7: jne loc_65F9CEC;");
    asm("loc_65F9CD9: mov 4(%ebx),%edx;");
    asm("loc_65F9CDC: xor %esi,%esi;");
    asm("loc_65F9CDE: lea (%edx,%esi,4),%eax;");
    asm("loc_65F9CE1: pop %edi;");
    asm("loc_65F9CE2: mov %eax,8(%ebx);");
    asm("loc_65F9CE5: pop %esi;");
    asm("loc_65F9CE6: mov %ebx,%eax;");
    asm("loc_65F9CE8: pop %ebx;");
    asm("loc_65F9CE9: ret $4;");
    asm("loc_65F9CEC: mov 8(%esi),%esi;");
    asm("loc_65F9CEF: mov 4(%ebx),%edx;");
    asm("loc_65F9CF2: sub %eax,%esi;");
    asm("loc_65F9CF4: sar $2,%esi;");
    asm("loc_65F9CF7: lea (%edx,%esi,4),%eax;");
    asm("loc_65F9CFA: pop %edi;");
    asm("loc_65F9CFB: mov %eax,8(%ebx);");
    asm("loc_65F9CFE: pop %esi;");
    asm("loc_65F9CFF: mov %ebx,%eax;");
    asm("loc_65F9D01: pop %ebx;");
    asm("loc_65F9D02: ret $4;");
    asm("loc_65F9D05: push %edx;");
    asm("loc_65F9D06: call _sub_6600BB0;");
    asm("loc_65F9D0B: mov 4(%esi),%ecx;");
    asm("loc_65F9D0E: add $4,%esp;");
    asm("loc_65F9D11: test %ecx,%ecx;");
    asm("loc_65F9D13: jne loc_65F9D19;");
    asm("loc_65F9D15: xor %eax,%eax;");
    asm("loc_65F9D17: jmp loc_65F9D21;");
    asm("loc_65F9D19: mov 8(%esi),%eax;");
    asm("loc_65F9D1C: sub %ecx,%eax;");
    asm("loc_65F9D1E: sar $2,%eax;");
    asm("loc_65F9D21: test %eax,%eax;");
    asm("loc_65F9D23: jge loc_65F9D27;");
    asm("loc_65F9D25: xor %eax,%eax;");
    asm("loc_65F9D27: lea (,%eax,4),%ecx;");
    asm("loc_65F9D2E: push %ecx;");
    asm("loc_65F9D2F: call _sub_6600BB6;");
    asm("loc_65F9D34: mov %eax,4(%ebx);");
    asm("loc_65F9D37: mov 8(%esi),%edx;");
    asm("loc_65F9D3A: mov %eax,%ecx;");
    asm("loc_65F9D3C: mov 4(%esi),%eax;");
    asm("loc_65F9D3F: add $4,%esp;");
    asm("loc_65F9D42: cmp %edx,%eax;");
    asm("loc_65F9D44: je loc_65F9D58;");
    asm("loc_65F9D46: test %ecx,%ecx;");
    asm("loc_65F9D48: je loc_65F9D4E;");
    asm("loc_65F9D4A: mov (%eax),%esi;");
    asm("loc_65F9D4C: mov %esi,(%ecx);");
    asm("loc_65F9D4E: add $4,%eax;");
    asm("loc_65F9D51: add $4,%ecx;");
    asm("loc_65F9D54: cmp %edx,%eax;");
    asm("loc_65F9D56: jne loc_65F9D46;");
    asm("loc_65F9D58: mov %ecx,0xC(%ebx);");
    asm("loc_65F9D5B: mov %ecx,8(%ebx);");
    asm("loc_65F9D5E: pop %edi;");
    asm("loc_65F9D5F: pop %esi;");
    asm("loc_65F9D60: mov %ebx,%eax;");
    asm("loc_65F9D62: pop %ebx;");
    asm("loc_65F9D63: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9D70() // _sub_65F9D70
{
    __DEBUG_ASM(65F9D70);
    // chunk 0x65F9D70 _sub_65F9D70
    asm("loc_65F9D70: mov 0x244(%ecx),%edx;");
    asm("loc_65F9D76: mov 4(%esp),%eax;");
    asm("loc_65F9D7A: mov %edx,0x240(%eax);");
    asm("loc_65F9D80: mov 0x240(%ecx),%edx;");
    asm("loc_65F9D86: mov %edx,0x244(%eax);");
    asm("loc_65F9D8C: mov 0x240(%ecx),%edx;");
    asm("loc_65F9D92: test %edx,%edx;");
    asm("loc_65F9D94: movl $0,4(%esp);");
    asm("loc_65F9D9C: jle loc_65F9DF2;");
    asm("loc_65F9D9E: push %ebx;");
    asm("loc_65F9D9F: push %ebp;");
    asm("loc_65F9DA0: push %esi;");
    asm("loc_65F9DA1: mov 0x244(%ecx),%esi;");
    asm("loc_65F9DA7: push %edi;");
    asm("loc_65F9DA8: mov %eax,%ebp;");
    asm("loc_65F9DAA: mov %ecx,%ebx;");
    asm("loc_65F9DAC: lea (%esp),%esp;");
    asm("loc_65F9DB0: xor %edi,%edi;");
    asm("loc_65F9DB2: test %esi,%esi;");
    asm("loc_65F9DB4: jle loc_65F9DD5;");
    asm("loc_65F9DB6: mov %ebx,%eax;");
    asm("loc_65F9DB8: mov %ebp,%edx;");
    asm("loc_65F9DBA: lea (%ebx),%ebx;");
    asm("loc_65F9DC0: mov (%eax),%esi;");
    asm("loc_65F9DC2: mov %esi,(%edx);");
    asm("loc_65F9DC4: mov 0x244(%ecx),%esi;");
    asm("loc_65F9DCA: inc %edi;");
    asm("loc_65F9DCB: add $4,%eax;");
    asm("loc_65F9DCE: add $0x30,%edx;");
    asm("loc_65F9DD1: cmp %esi,%edi;");
    asm("loc_65F9DD3: jl loc_65F9DC0;");
    asm("loc_65F9DD5: mov 0x14(%esp),%eax;");
    asm("loc_65F9DD9: mov 0x240(%ecx),%edx;");
    asm("loc_65F9DDF: inc %eax;");
    asm("loc_65F9DE0: add $0x30,%ebx;");
    asm("loc_65F9DE3: add $4,%ebp;");
    asm("loc_65F9DE6: cmp %edx,%eax;");
    asm("loc_65F9DE8: mov %eax,0x14(%esp);");
    asm("loc_65F9DEC: jl loc_65F9DB0;");
    asm("loc_65F9DEE: pop %edi;");
    asm("loc_65F9DEF: pop %esi;");
    asm("loc_65F9DF0: pop %ebp;");
    asm("loc_65F9DF1: pop %ebx;");
    asm("loc_65F9DF2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9E00() // _sub_65F9E00
{
    __DEBUG_ASM(65F9E00);
    // chunk 0x65F9E00 _sub_65F9E00
    asm("loc_65F9E00: flds 4(%esp);");
    asm("loc_65F9E04: fabs;");
    asm("loc_65F9E06: flds 8(%esp);");
    asm("loc_65F9E0A: fabs;");
    asm("loc_65F9E0C: fstps 4(%esp);");
    asm("loc_65F9E10: fcoms 4(%esp);");
    asm("loc_65F9E14: fnstsw %ax;");
    asm("loc_65F9E16: test $0x41,%ah;");
    asm("loc_65F9E19: jne loc_65F9E60;");
    asm("loc_65F9E1B: flds 4(%esp);");
    asm("loc_65F9E1F: fdiv %st(1),%st;");
    asm("loc_65F9E21: fsts _data_66033A4;");
    asm("loc_65F9E27: fcompl _data_6601398;");
    asm("loc_65F9E2D: fnstsw %ax;");
    asm("loc_65F9E2F: test $0x44,%ah;");
    asm("loc_65F9E32: jp loc_65F9E47;");
    asm("loc_65F9E34: fldl _data_6601398;");
    asm("loc_65F9E3A: faddl _data_6601320;");
    asm("loc_65F9E40: fsqrt;");
    asm("loc_65F9E42: fmulp;");
    asm("loc_65F9E44: ret $8;");
    asm("loc_65F9E47: flds _data_66033A4;");
    asm("loc_65F9E4D: fmuls _data_66033A4;");
    asm("loc_65F9E53: faddl _data_6601320;");
    asm("loc_65F9E59: fsqrt;");
    asm("loc_65F9E5B: fmulp;");
    asm("loc_65F9E5D: ret $8;");
    asm("loc_65F9E60: flds 4(%esp);");
    asm("loc_65F9E64: fcompl _data_6601398;");
    asm("loc_65F9E6A: fnstsw %ax;");
    asm("loc_65F9E6C: test $0x44,%ah;");
    asm("loc_65F9E6F: jp loc_65F9E7C;");
    asm("loc_65F9E71: fstp %st(0);");
    asm("loc_65F9E73: fldl _data_6601398;");
    asm("loc_65F9E79: ret $8;");
    asm("loc_65F9E7C: fdivs 4(%esp);");
    asm("loc_65F9E80: fsts _data_66033A4;");
    asm("loc_65F9E86: fcompl _data_6601398;");
    asm("loc_65F9E8C: fnstsw %ax;");
    asm("loc_65F9E8E: test $0x44,%ah;");
    asm("loc_65F9E91: jp loc_65F9EA8;");
    asm("loc_65F9E93: fldl _data_6601398;");
    asm("loc_65F9E99: faddl _data_6601320;");
    asm("loc_65F9E9F: fsqrt;");
    asm("loc_65F9EA1: fmuls 4(%esp);");
    asm("loc_65F9EA5: ret $8;");
    asm("loc_65F9EA8: flds _data_66033A4;");
    asm("loc_65F9EAE: fmuls _data_66033A4;");
    asm("loc_65F9EB4: faddl _data_6601320;");
    asm("loc_65F9EBA: fsqrt;");
    asm("loc_65F9EBC: fmuls 4(%esp);");
    asm("loc_65F9EC0: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9ED0() // _sub_65F9ED0
{
    __DEBUG_ASM(65F9ED0);
    // chunk 0x65F9ED0 _sub_65F9ED0
    asm("loc_65F9ED0: push %ebp;");
    asm("loc_65F9ED1: mov %esp,%ebp;");
    asm("loc_65F9ED3: push %ecx;");
    asm("loc_65F9ED4: flds 8(%ebp);");
    asm("loc_65F9ED7: fadds 0xC(%ebp);");
    asm("loc_65F9EDA: fstps -4(%ebp);");
    asm("loc_65F9EDD: flds -4(%ebp);");
    asm("loc_65F9EE0: fcomps 0xC(%ebp);");
    asm("loc_65F9EE3: fnstsw %ax;");
    asm("loc_65F9EE5: test $0x44,%ah;");
    asm("loc_65F9EE8: jp loc_65F9EEE;");
    asm("loc_65F9EEA: mov $1,%al;");
    asm("loc_65F9EEC: jmp loc_65F9EF0;");
    asm("loc_65F9EEE: xor %al,%al;");
    asm("loc_65F9EF0: mov %ebp,%esp;");
    asm("loc_65F9EF2: pop %ebp;");
    asm("loc_65F9EF3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65F9F00() // _sub_65F9F00
{
    __DEBUG_ASM(65F9F00);
    // chunk 0x65F9F00 _sub_65F9F00
    asm("loc_65F9F00: sub $0x74,%esp;");
    asm("loc_65F9F03: flds _data_6601318;");
    asm("loc_65F9F09: mov 0x78(%esp),%edx;");
    asm("loc_65F9F0D: push %ebx;");
    asm("loc_65F9F0E: push %ebp;");
    asm("loc_65F9F0F: push %esi;");
    asm("loc_65F9F10: mov %ecx,%esi;");
    asm("loc_65F9F12: mov 0x244(%esi),%eax;");
    asm("loc_65F9F18: push %edi;");
    asm("loc_65F9F19: xor %edi,%edi;");
    asm("loc_65F9F1B: cmp %edi,%eax;");
    asm("loc_65F9F1D: movl $0,0x30(%esp);");
    asm("loc_65F9F25: movl $0,0x10(%esp);");
    asm("loc_65F9F2D: jle loc_65FA33C;");
    asm("loc_65F9F33: mov 0x8C(%esp),%ecx;");
    asm("loc_65F9F3A: mov $0x34,%eax;");
    asm("loc_65F9F3F: sub %edx,%eax;");
    asm("loc_65F9F41: lea 0x54(%esp),%ebx;");
    asm("loc_65F9F45: sub %ebx,%ecx;");
    asm("loc_65F9F47: mov %edi,0x2C(%esp);");
    asm("loc_65F9F4B: mov %edx,0x34(%esp);");
    asm("loc_65F9F4F: mov %eax,0x3C(%esp);");
    asm("loc_65F9F53: mov %ecx,0x24(%esp);");
    asm("loc_65F9F57: jmp loc_65F9F60;");
    asm("loc_65F9F59: mov 0x3C(%esp),%eax;");
    asm("loc_65F9F5D: lea (%ecx),%ecx;");
    asm("loc_65F9F60: fmuls 0x10(%esp);");
    asm("loc_65F9F64: add %edx,%eax;");
    asm("loc_65F9F66: mov %eax,0x38(%esp);");
    asm("loc_65F9F6A: lea 0x54(%esp,%edi,4),%eax;");
    asm("loc_65F9F6E: fstps (%eax);");
    asm("loc_65F9F70: mov %eax,0x44(%esp);");
    asm("loc_65F9F74: mov 0x240(%esi),%eax;");
    asm("loc_65F9F7A: flds _data_6601318;");
    asm("loc_65F9F80: cmp %eax,%edi;");
    asm("loc_65F9F82: flds _data_6601318;");
    asm("loc_65F9F88: lea 1(%edi),%ebx;");
    asm("loc_65F9F8B: movl $0,0x10(%esp);");
    asm("loc_65F9F93: jge loc_65FA11A;");
    asm("loc_65F9F99: mov %edx,%ecx;");
    asm("loc_65F9F9B: sub %edi,%eax;");
    asm("loc_65F9F9D: lea (%ecx),%ecx;");
    asm("loc_65F9FA0: flds (%ecx);");
    asm("loc_65F9FA2: add $0x30,%ecx;");
    asm("loc_65F9FA5: dec %eax;");
    asm("loc_65F9FA6: fabs;");
    asm("loc_65F9FA8: faddp %st,%st(2);");
    asm("loc_65F9FAA: jne loc_65F9FA0;");
    asm("loc_65F9FAC: fld %st(1);");
    asm("loc_65F9FAE: fcomps _data_6601318;");
    asm("loc_65F9FB4: fnstsw %ax;");
    asm("loc_65F9FB6: test $0x44,%ah;");
    asm("loc_65F9FB9: jnp loc_65FA11A;");
    asm("loc_65F9FBF: flds _data_66011E0;");
    asm("loc_65F9FC5: mov %edi,%ecx;");
    asm("loc_65F9FC7: fdiv %st(2),%st;");
    asm("loc_65F9FC9: mov %edx,%eax;");
    asm("loc_65F9FCB: nop;");
    asm("loc_65F9FCC: lea (%esp),%esp;");
    asm("loc_65F9FD0: fld %st(0);");
    asm("loc_65F9FD2: inc %ecx;");
    asm("loc_65F9FD3: fmuls (%eax);");
    asm("loc_65F9FD5: add $0x30,%eax;");
    asm("loc_65F9FD8: fld %st(0);");
    asm("loc_65F9FDA: fxch;");
    asm("loc_65F9FDC: fstps -0x30(%eax);");
    asm("loc_65F9FDF: mov 0x240(%esi),%ebp;");
    asm("loc_65F9FE5: cmp %ebp,%ecx;");
    asm("loc_65F9FE7: fld %st(0);");
    asm("loc_65F9FE9: fmul %st(1),%st;");
    asm("loc_65F9FEB: faddp %st,%st(3);");
    asm("loc_65F9FED: fstp %st(0);");
    asm("loc_65F9FEF: jl loc_65F9FD0;");
    asm("loc_65F9FF1: mov (%edx),%eax;");
    asm("loc_65F9FF3: fstp %st(0);");
    asm("loc_65F9FF5: mov %eax,0x14(%esp);");
    asm("loc_65F9FF9: flds 0x14(%esp);");
    asm("loc_65F9FFD: fcompl _data_6601398;");
    asm("loc_65FA003: fld %st(0);");
    asm("loc_65FA005: fsqrt;");
    asm("loc_65FA007: fnstsw %ax;");
    asm("loc_65FA009: fabs;");
    asm("loc_65FA00B: test $1,%ah;");
    asm("loc_65FA00E: je loc_65FA012;");
    asm("loc_65FA010: fchs;");
    asm("loc_65FA012: fchs;");
    asm("loc_65FA014: mov %ebx,0x18(%esp);");
    asm("loc_65FA018: fstps 0x10(%esp);");
    asm("loc_65FA01C: flds 0x14(%esp);");
    asm("loc_65FA020: fmuls 0x10(%esp);");
    asm("loc_65FA024: fsubp;");
    asm("loc_65FA026: flds 0x14(%esp);");
    asm("loc_65FA02A: fsubs 0x10(%esp);");
    asm("loc_65FA02E: fstps (%edx);");
    asm("loc_65FA030: mov 0x244(%esi),%eax;");
    asm("loc_65FA036: cmp %eax,%ebx;");
    asm("loc_65FA038: jge loc_65FA0F3;");
    asm("loc_65FA03E: fdivrs _data_66011E0;");
    asm("loc_65FA044: mov 0x240(%esi),%ecx;");
    asm("loc_65FA04A: lea (%ebx),%ebx;");
    asm("loc_65FA050: cmp %ecx,%edi;");
    asm("loc_65FA052: flds _data_6601318;");
    asm("loc_65FA058: jge loc_65FA086;");
    asm("loc_65FA05A: mov 0x18(%esp),%eax;");
    asm("loc_65FA05E: mov 0x2C(%esp),%edx;");
    asm("loc_65FA062: mov 0x34(%esp),%ebp;");
    asm("loc_65FA066: add %eax,%edx;");
    asm("loc_65FA068: mov 0x88(%esp),%eax;");
    asm("loc_65FA06F: lea (%eax,%edx,4),%edx;");
    asm("loc_65FA072: mov %ecx,%eax;");
    asm("loc_65FA074: sub %edi,%eax;");
    asm("loc_65FA076: flds (%edx);");
    asm("loc_65FA078: add $0x30,%edx;");
    asm("loc_65FA07B: fmuls (%ebp);");
    asm("loc_65FA07E: add $0x30,%ebp;");
    asm("loc_65FA081: dec %eax;");
    asm("loc_65FA082: faddp;");
    asm("loc_65FA084: jne loc_65FA076;");
    asm("loc_65FA086: cmp %ecx,%edi;");
    asm("loc_65FA088: fld %st(1);");
    asm("loc_65FA08A: fmul %st(1),%st;");
    asm("loc_65FA08C: mov %edi,0x28(%esp);");
    asm("loc_65FA090: fstps 0x14(%esp);");
    asm("loc_65FA094: fstp %st(0);");
    asm("loc_65FA096: jge loc_65FA0D8;");
    asm("loc_65FA098: mov 0x18(%esp),%edx;");
    asm("loc_65FA09C: mov 0x2C(%esp),%ecx;");
    asm("loc_65FA0A0: mov 0x88(%esp),%eax;");
    asm("loc_65FA0A7: add %edx,%ecx;");
    asm("loc_65FA0A9: mov 0x34(%esp),%edx;");
    asm("loc_65FA0AD: lea (%eax,%ecx,4),%eax;");
    asm("loc_65FA0B0: flds 0x14(%esp);");
    asm("loc_65FA0B4: mov 0x28(%esp),%ecx;");
    asm("loc_65FA0B8: fmuls (%edx);");
    asm("loc_65FA0BA: inc %ecx;");
    asm("loc_65FA0BB: mov %ecx,0x28(%esp);");
    asm("loc_65FA0BF: mov 0x28(%esp),%ebp;");
    asm("loc_65FA0C3: fadds (%eax);");
    asm("loc_65FA0C5: add $0x30,%edx;");
    asm("loc_65FA0C8: add $0x30,%eax;");
    asm("loc_65FA0CB: fstps -0x30(%eax);");
    asm("loc_65FA0CE: mov 0x240(%esi),%ecx;");
    asm("loc_65FA0D4: cmp %ecx,%ebp;");
    asm("loc_65FA0D6: jl loc_65FA0B0;");
    asm("loc_65FA0D8: mov 0x18(%esp),%eax;");
    asm("loc_65FA0DC: mov 0x244(%esi),%edx;");
    asm("loc_65FA0E2: inc %eax;");
    asm("loc_65FA0E3: cmp %edx,%eax;");
    asm("loc_65FA0E5: mov %eax,0x18(%esp);");
    asm("loc_65FA0E9: jl loc_65FA050;");
    asm("loc_65FA0EF: mov 0x34(%esp),%edx;");
    asm("loc_65FA0F3: mov 0x240(%esi),%eax;");
    asm("loc_65FA0F9: fstp %st(0);");
    asm("loc_65FA0FB: cmp %eax,%edi;");
    asm("loc_65FA0FD: mov %edi,%ecx;");
    asm("loc_65FA0FF: jge loc_65FA11C;");
    asm("loc_65FA101: mov %edx,%eax;");
    asm("loc_65FA103: fld %st(0);");
    asm("loc_65FA105: inc %ecx;");
    asm("loc_65FA106: fmuls (%eax);");
    asm("loc_65FA108: add $0x30,%eax;");
    asm("loc_65FA10B: fstps -0x30(%eax);");
    asm("loc_65FA10E: mov 0x240(%esi),%edx;");
    asm("loc_65FA114: cmp %edx,%ecx;");
    asm("loc_65FA116: jl loc_65FA103;");
    asm("loc_65FA118: jmp loc_65FA11C;");
    asm("loc_65FA11A: fstp %st(0);");
    asm("loc_65FA11C: fmuls 0x10(%esp);");
    asm("loc_65FA120: mov 0x24(%esp),%ecx;");
    asm("loc_65FA124: lea (%ecx,%edi,4),%edx;");
    asm("loc_65FA127: lea 0x54(%esp,%edx),%eax;");
    asm("loc_65FA12B: fstps (%eax);");
    asm("loc_65FA12D: mov %eax,0x28(%esp);");
    asm("loc_65FA131: mov 0x240(%esi),%eax;");
    asm("loc_65FA137: flds _data_6601318;");
    asm("loc_65FA13D: cmp %eax,%edi;");
    asm("loc_65FA13F: flds _data_6601318;");
    asm("loc_65FA145: movl $0,0x10(%esp);");
    asm("loc_65FA14D: jge loc_65FA2D7;");
    asm("loc_65FA153: mov 0x244(%esi),%eax;");
    asm("loc_65FA159: cmp %eax,%edi;");
    asm("loc_65FA15B: je loc_65FA2D7;");
    asm("loc_65FA161: cmp %eax,%ebx;");
    asm("loc_65FA163: jge loc_65FA2D7;");
    asm("loc_65FA169: mov 0x2C(%esp),%ecx;");
    asm("loc_65FA16D: mov 0x88(%esp),%edx;");
    asm("loc_65FA174: add %ebx,%ecx;");
    asm("loc_65FA176: lea (%edx,%ecx,4),%edx;");
    asm("loc_65FA179: mov %edx,0x40(%esp);");
    asm("loc_65FA17D: mov %edx,%ecx;");
    asm("loc_65FA17F: sub %ebx,%eax;");
    asm("loc_65FA181: flds (%ecx);");
    asm("loc_65FA183: add $4,%ecx;");
    asm("loc_65FA186: dec %eax;");
    asm("loc_65FA187: fabs;");
    asm("loc_65FA189: faddp %st,%st(2);");
    asm("loc_65FA18B: jne loc_65FA181;");
    asm("loc_65FA18D: fld %st(1);");
    asm("loc_65FA18F: fcomps _data_6601318;");
    asm("loc_65FA195: fnstsw %ax;");
    asm("loc_65FA197: test $0x44,%ah;");
    asm("loc_65FA19A: jnp loc_65FA2D7;");
    asm("loc_65FA1A0: flds _data_66011E0;");
    asm("loc_65FA1A6: mov %ebx,%ecx;");
    asm("loc_65FA1A8: fdiv %st(2),%st;");
    asm("loc_65FA1AA: mov %edx,%eax;");
    asm("loc_65FA1AC: lea (%esp),%esp;");
    asm("loc_65FA1B0: fld %st(0);");
    asm("loc_65FA1B2: inc %ecx;");
    asm("loc_65FA1B3: fmuls (%eax);");
    asm("loc_65FA1B5: add $4,%eax;");
    asm("loc_65FA1B8: fld %st(0);");
    asm("loc_65FA1BA: fxch;");
    asm("loc_65FA1BC: fstps -4(%eax);");
    asm("loc_65FA1BF: mov 0x244(%esi),%edi;");
    asm("loc_65FA1C5: cmp %edi,%ecx;");
    asm("loc_65FA1C7: fld %st(0);");
    asm("loc_65FA1C9: fmul %st(1),%st;");
    asm("loc_65FA1CB: faddp %st,%st(3);");
    asm("loc_65FA1CD: fstp %st(0);");
    asm("loc_65FA1CF: jl loc_65FA1B0;");
    asm("loc_65FA1D1: fstp %st(0);");
    asm("loc_65FA1D3: fstps 0x1C(%esp);");
    asm("loc_65FA1D7: flds (%edx);");
    asm("loc_65FA1D9: fcoml _data_6601398;");
    asm("loc_65FA1DF: flds 0x1C(%esp);");
    asm("loc_65FA1E3: fsqrt;");
    asm("loc_65FA1E5: fnstsw %ax;");
    asm("loc_65FA1E7: fabs;");
    asm("loc_65FA1E9: test $1,%ah;");
    asm("loc_65FA1EC: je loc_65FA1F0;");
    asm("loc_65FA1EE: fchs;");
    asm("loc_65FA1F0: fchs;");
    asm("loc_65FA1F2: mov %ebx,%ecx;");
    asm("loc_65FA1F4: fsts 0x10(%esp);");
    asm("loc_65FA1F8: fmul %st(1),%st;");
    asm("loc_65FA1FA: fsubs 0x1C(%esp);");
    asm("loc_65FA1FE: fstps 0x20(%esp);");
    asm("loc_65FA202: fsubs 0x10(%esp);");
    asm("loc_65FA206: fstps (%edx);");
    asm("loc_65FA208: mov 0x244(%esi),%eax;");
    asm("loc_65FA20E: cmp %eax,%ebx;");
    asm("loc_65FA210: jge loc_65FA232;");
    asm("loc_65FA212: flds _data_66011E0;");
    asm("loc_65FA218: fdivs 0x20(%esp);");
    asm("loc_65FA21C: lea (%esp),%esp;");
    asm("loc_65FA220: fld %st(0);");
    asm("loc_65FA222: inc %ecx;");
    asm("loc_65FA223: fmuls (%edx);");
    asm("loc_65FA225: add $4,%edx;");
    asm("loc_65FA228: cmp %eax,%ecx;");
    asm("loc_65FA22A: fstps 0x50(%esp,%ecx,4);");
    asm("loc_65FA22E: jl loc_65FA220;");
    asm("loc_65FA230: fstp %st(0);");
    asm("loc_65FA232: cmp 0x240(%esi),%ebx;");
    asm("loc_65FA238: mov %ebx,0x18(%esp);");
    asm("loc_65FA23C: jge loc_65FA2B2;");
    asm("loc_65FA23E: mov 0x88(%esp),%ecx;");
    asm("loc_65FA245: mov 0x38(%esp),%edx;");
    asm("loc_65FA249: lea (%edx,%ecx),%ebp;");
    asm("loc_65FA24C: lea (%esp),%esp;");
    asm("loc_65FA250: cmp %eax,%ebx;");
    asm("loc_65FA252: flds _data_6601318;");
    asm("loc_65FA258: jge loc_65FA274;");
    asm("loc_65FA25A: mov 0x40(%esp),%edi;");
    asm("loc_65FA25E: mov %eax,%ecx;");
    asm("loc_65FA260: mov %ebp,%edx;");
    asm("loc_65FA262: sub %ebx,%ecx;");
    asm("loc_65FA264: flds (%edi);");
    asm("loc_65FA266: add $4,%edx;");
    asm("loc_65FA269: fmuls -4(%edx);");
    asm("loc_65FA26C: add $4,%edi;");
    asm("loc_65FA26F: dec %ecx;");
    asm("loc_65FA270: faddp;");
    asm("loc_65FA272: jne loc_65FA264;");
    asm("loc_65FA274: cmp %eax,%ebx;");
    asm("loc_65FA276: mov %ebx,%ecx;");
    asm("loc_65FA278: jge loc_65FA29A;");
    asm("loc_65FA27A: mov %ebp,%edx;");
    asm("loc_65FA27C: lea (%esp),%esp;");
    asm("loc_65FA280: fld %st(0);");
    asm("loc_65FA282: inc %ecx;");
    asm("loc_65FA283: fmuls 0x50(%esp,%ecx,4);");
    asm("loc_65FA287: add $4,%edx;");
    asm("loc_65FA28A: fadds -4(%edx);");
    asm("loc_65FA28D: fstps -4(%edx);");
    asm("loc_65FA290: mov 0x244(%esi),%eax;");
    asm("loc_65FA296: cmp %eax,%ecx;");
    asm("loc_65FA298: jl loc_65FA280;");
    asm("loc_65FA29A: mov 0x18(%esp),%ecx;");
    asm("loc_65FA29E: fstp %st(0);");
    asm("loc_65FA2A0: mov 0x240(%esi),%edx;");
    asm("loc_65FA2A6: inc %ecx;");
    asm("loc_65FA2A7: add $0x30,%ebp;");
    asm("loc_65FA2AA: cmp %edx,%ecx;");
    asm("loc_65FA2AC: mov %ecx,0x18(%esp);");
    asm("loc_65FA2B0: jl loc_65FA250;");
    asm("loc_65FA2B2: cmp 0x244(%esi),%ebx;");
    asm("loc_65FA2B8: mov %ebx,%ecx;");
    asm("loc_65FA2BA: jge loc_65FA2D9;");
    asm("loc_65FA2BC: mov 0x40(%esp),%eax;");
    asm("loc_65FA2C0: fld %st(0);");
    asm("loc_65FA2C2: inc %ecx;");
    asm("loc_65FA2C3: fmuls (%eax);");
    asm("loc_65FA2C5: add $4,%eax;");
    asm("loc_65FA2C8: fstps -4(%eax);");
    asm("loc_65FA2CB: mov 0x244(%esi),%edx;");
    asm("loc_65FA2D1: cmp %edx,%ecx;");
    asm("loc_65FA2D3: jl loc_65FA2C0;");
    asm("loc_65FA2D5: jmp loc_65FA2D9;");
    asm("loc_65FA2D7: fstp %st(0);");
    asm("loc_65FA2D9: mov 0x30(%esp),%eax;");
    asm("loc_65FA2DD: mov 0x28(%esp),%ecx;");
    asm("loc_65FA2E1: mov 0x44(%esp),%edx;");
    asm("loc_65FA2E5: mov %eax,_data_660339C;");
    asm("loc_65FA2EA: flds (%ecx);");
    asm("loc_65FA2EC: fabs;");
    asm("loc_65FA2EE: flds (%edx);");
    asm("loc_65FA2F0: fabs;");
    asm("loc_65FA2F2: faddp;");
    asm("loc_65FA2F4: fstps _data_66033A0;");
    asm("loc_65FA2FA: flds 0x30(%esp);");
    asm("loc_65FA2FE: fcomps _data_66033A0;");
    asm("loc_65FA304: fnstsw %ax;");
    asm("loc_65FA306: test $0x41,%ah;");
    asm("loc_65FA309: je loc_65FA314;");
    asm("loc_65FA30B: mov _data_66033A0,%eax;");
    asm("loc_65FA310: mov %eax,0x30(%esp);");
    asm("loc_65FA314: mov 0x34(%esp),%edx;");
    asm("loc_65FA318: mov 0x2C(%esp),%ecx;");
    asm("loc_65FA31C: mov 0x244(%esi),%eax;");
    asm("loc_65FA322: mov %ebx,%edi;");
    asm("loc_65FA324: add $0x34,%edx;");
    asm("loc_65FA327: add $0xC,%ecx;");
    asm("loc_65FA32A: cmp %eax,%edi;");
    asm("loc_65FA32C: mov %edx,0x34(%esp);");
    asm("loc_65FA330: mov %ecx,0x2C(%esp);");
    asm("loc_65FA334: jl loc_65F9F59;");
    asm("loc_65FA33A: jmp loc_65FA340;");
    asm("loc_65FA33C: mov 0x3C(%esp),%ebx;");
    asm("loc_65FA340: mov 0x244(%esi),%eax;");
    asm("loc_65FA346: fstp %st(0);");
    asm("loc_65FA348: dec %eax;");
    asm("loc_65FA349: mov %eax,0x28(%esp);");
    asm("loc_65FA34D: js loc_65FA50C;");
    asm("loc_65FA353: lea (%eax,%eax,2),%ecx;");
    asm("loc_65FA356: imul $0x34,%eax;");
    asm("loc_65FA359: shl $2,%ecx;");
    asm("loc_65FA35C: lea (%ebx,%ebx,2),%ebp;");
    asm("loc_65FA35F: mov %ecx,0x34(%esp);");
    asm("loc_65FA363: mov 0x90(%esp),%ecx;");
    asm("loc_65FA36A: shl $2,%ebp;");
    asm("loc_65FA36D: add %ecx,%eax;");
    asm("loc_65FA36F: mov %eax,0x40(%esp);");
    asm("loc_65FA373: mov 0x244(%esi),%ecx;");
    asm("loc_65FA379: cmp %ecx,0x28(%esp);");
    asm("loc_65FA37D: jge loc_65FA4D3;");
    asm("loc_65FA383: flds 0x10(%esp);");
    asm("loc_65FA387: fcomps _data_6601318;");
    asm("loc_65FA38D: fnstsw %ax;");
    asm("loc_65FA38F: test $0x44,%ah;");
    asm("loc_65FA392: jnp loc_65FA494;");
    asm("loc_65FA398: cmp %ecx,%ebx;");
    asm("loc_65FA39A: mov %ebx,%edx;");
    asm("loc_65FA39C: jge loc_65FA3EA;");
    asm("loc_65FA39E: mov 0x34(%esp),%ecx;");
    asm("loc_65FA3A2: flds _data_66011E0;");
    asm("loc_65FA3A8: mov 0x88(%esp),%eax;");
    asm("loc_65FA3AF: fdivs 0x10(%esp);");
    asm("loc_65FA3B3: mov 0x90(%esp),%edi;");
    asm("loc_65FA3BA: add %ebx,%ecx;");
    asm("loc_65FA3BC: lea (%eax,%ecx,4),%eax;");
    asm("loc_65FA3BF: mov 0x28(%esp),%ecx;");
    asm("loc_65FA3C3: add %ebp,%ecx;");
    asm("loc_65FA3C5: lea (%edi,%ecx,4),%ecx;");
    asm("loc_65FA3C8: mov %eax,0x44(%esp);");
    asm("loc_65FA3CC: mov %eax,%edi;");
    asm("loc_65FA3CE: mov %edi,%edi;");
    asm("loc_65FA3D0: flds (%eax);");
    asm("loc_65FA3D2: inc %edx;");
    asm("loc_65FA3D3: fdivs (%edi);");
    asm("loc_65FA3D5: add $4,%eax;");
    asm("loc_65FA3D8: add $0x30,%ecx;");
    asm("loc_65FA3DB: fmul %st(1),%st;");
    asm("loc_65FA3DD: fstps -0x30(%ecx);");
    asm("loc_65FA3E0: cmp 0x244(%esi),%edx;");
    asm("loc_65FA3E6: jl loc_65FA3D0;");
    asm("loc_65FA3E8: fstp %st(0);");
    asm("loc_65FA3EA: mov 0x244(%esi),%edi;");
    asm("loc_65FA3F0: cmp %edi,%ebx;");
    asm("loc_65FA3F2: mov %ebx,0x18(%esp);");
    asm("loc_65FA3F6: jge loc_65FA494;");
    asm("loc_65FA3FC: lea (%esp),%esp;");
    asm("loc_65FA400: cmp %edi,%ebx;");
    asm("loc_65FA402: flds _data_6601318;");
    asm("loc_65FA408: jge loc_65FA440;");
    asm("loc_65FA40A: mov 0x34(%esp),%edx;");
    asm("loc_65FA40E: mov 0x88(%esp),%eax;");
    asm("loc_65FA415: add %ebx,%edx;");
    asm("loc_65FA417: lea (%eax,%edx,4),%ecx;");
    asm("loc_65FA41A: mov 0x18(%esp),%edx;");
    asm("loc_65FA41E: lea (%edx,%ebp),%eax;");
    asm("loc_65FA421: mov 0x90(%esp),%edx;");
    asm("loc_65FA428: lea (%edx,%eax,4),%edx;");
    asm("loc_65FA42B: mov %edi,%eax;");
    asm("loc_65FA42D: sub %ebx,%eax;");
    asm("loc_65FA42F: nop;");
    asm("loc_65FA430: flds (%edx);");
    asm("loc_65FA432: add $4,%ecx;");
    asm("loc_65FA435: fmuls -4(%ecx);");
    asm("loc_65FA438: add $0x30,%edx;");
    asm("loc_65FA43B: dec %eax;");
    asm("loc_65FA43C: faddp;");
    asm("loc_65FA43E: jne loc_65FA430;");
    asm("loc_65FA440: cmp %edi,%ebx;");
    asm("loc_65FA442: mov %ebx,%edx;");
    asm("loc_65FA444: jge loc_65FA47B;");
    asm("loc_65FA446: mov 0x18(%esp),%eax;");
    asm("loc_65FA44A: mov 0x90(%esp),%ecx;");
    asm("loc_65FA451: mov 0x28(%esp),%edi;");
    asm("loc_65FA455: add %ebp,%eax;");
    asm("loc_65FA457: add %ebp,%edi;");
    asm("loc_65FA459: lea (%ecx,%eax,4),%eax;");
    asm("loc_65FA45C: lea (%ecx,%edi,4),%ecx;");
    asm("loc_65FA45F: nop;");
    asm("loc_65FA460: fld %st(0);");
    asm("loc_65FA462: inc %edx;");
    asm("loc_65FA463: fmuls (%ecx);");
    asm("loc_65FA465: add $0x30,%ecx;");
    asm("loc_65FA468: add $0x30,%eax;");
    asm("loc_65FA46B: fadds -0x30(%eax);");
    asm("loc_65FA46E: fstps -0x30(%eax);");
    asm("loc_65FA471: mov 0x244(%esi),%edi;");
    asm("loc_65FA477: cmp %edi,%edx;");
    asm("loc_65FA479: jl loc_65FA460;");
    asm("loc_65FA47B: mov 0x18(%esp),%eax;");
    asm("loc_65FA47F: fstp %st(0);");
    asm("loc_65FA481: mov 0x244(%esi),%edi;");
    asm("loc_65FA487: inc %eax;");
    asm("loc_65FA488: cmp %edi,%eax;");
    asm("loc_65FA48A: mov %eax,0x18(%esp);");
    asm("loc_65FA48E: jl loc_65FA400;");
    asm("loc_65FA494: cmp 0x244(%esi),%ebx;");
    asm("loc_65FA49A: jge loc_65FA4D3;");
    asm("loc_65FA49C: mov 0x34(%esp),%ecx;");
    asm("loc_65FA4A0: lea (%ecx,%ebx),%edx;");
    asm("loc_65FA4A3: mov 0x90(%esp),%ecx;");
    asm("loc_65FA4AA: lea (%ecx,%edx,4),%eax;");
    asm("loc_65FA4AD: mov 0x28(%esp),%edx;");
    asm("loc_65FA4B1: add %edx,%ebp;");
    asm("loc_65FA4B3: lea (%ecx,%ebp,4),%ecx;");
    asm("loc_65FA4B6: movl $0,(%ecx);");
    asm("loc_65FA4BC: movl $0,(%eax);");
    asm("loc_65FA4C2: mov 0x244(%esi),%edx;");
    asm("loc_65FA4C8: inc %ebx;");
    asm("loc_65FA4C9: add $4,%eax;");
    asm("loc_65FA4CC: add $0x30,%ecx;");
    asm("loc_65FA4CF: cmp %edx,%ebx;");
    asm("loc_65FA4D1: jl loc_65FA4B6;");
    asm("loc_65FA4D3: mov 0x28(%esp),%eax;");
    asm("loc_65FA4D7: mov 0x40(%esp),%edx;");
    asm("loc_65FA4DB: flds 0x54(%esp,%eax,4);");
    asm("loc_65FA4DF: mov 0x34(%esp),%ecx;");
    asm("loc_65FA4E3: fstps 0x10(%esp);");
    asm("loc_65FA4E7: mov %eax,%ebx;");
    asm("loc_65FA4E9: dec %eax;");
    asm("loc_65FA4EA: movl $0x3F800000,(%edx);");
    asm("loc_65FA4F0: mov %ecx,%ebp;");
    asm("loc_65FA4F2: sub $0xC,%ecx;");
    asm("loc_65FA4F5: sub $0x34,%edx;");
    asm("loc_65FA4F8: test %eax,%eax;");
    asm("loc_65FA4FA: mov %eax,0x28(%esp);");
    asm("loc_65FA4FE: mov %ecx,0x34(%esp);");
    asm("loc_65FA502: mov %edx,0x40(%esp);");
    asm("loc_65FA506: jge loc_65FA373;");
    asm("loc_65FA50C: mov 0x240(%esi),%eax;");
    asm("loc_65FA512: mov %eax,_data_66032A4;");
    asm("loc_65FA517: mov 0x244(%esi),%ecx;");
    asm("loc_65FA51D: cmp %ecx,%eax;");
    asm("loc_65FA51F: mov %ecx,_data_66032A0;");
    asm("loc_65FA525: jl loc_65FA529;");
    asm("loc_65FA527: mov %ecx,%eax;");
    asm("loc_65FA529: lea -1(%eax),%ebx;");
    asm("loc_65FA52C: test %ebx,%ebx;");
    asm("loc_65FA52E: jl loc_65FA6F6;");
    asm("loc_65FA534: mov 0x88(%esp),%ecx;");
    asm("loc_65FA53B: lea (%ebx,%ebx,2),%eax;");
    asm("loc_65FA53E: shl $2,%eax;");
    asm("loc_65FA541: mov %eax,0x28(%esp);");
    asm("loc_65FA545: lea 1(%ebx),%eax;");
    asm("loc_65FA548: mov %eax,0x34(%esp);");
    asm("loc_65FA54C: mov 0x34(%esp),%edx;");
    asm("loc_65FA550: mov %ebx,%eax;");
    asm("loc_65FA552: imul $0x34,%eax;");
    asm("loc_65FA555: add %ecx,%eax;");
    asm("loc_65FA557: mov %eax,0x2C(%esp);");
    asm("loc_65FA55B: mov %eax,%edi;");
    asm("loc_65FA55D: lea (%ecx),%ecx;");
    asm("loc_65FA560: mov 0x8C(%esp),%ecx;");
    asm("loc_65FA567: mov 0x244(%esi),%eax;");
    asm("loc_65FA56D: flds (%ecx,%ebx,4);");
    asm("loc_65FA570: cmp %eax,%edx;");
    asm("loc_65FA572: mov %edx,%ecx;");
    asm("loc_65FA574: jge loc_65FA59B;");
    asm("loc_65FA576: mov 0x28(%esp),%eax;");
    asm("loc_65FA57A: mov 0x88(%esp),%ebp;");
    asm("loc_65FA581: add %edx,%eax;");
    asm("loc_65FA583: lea (%ebp,%eax,4),%eax;");
    asm("loc_65FA587: movl $0,(%eax);");
    asm("loc_65FA58D: mov 0x244(%esi),%ebp;");
    asm("loc_65FA593: inc %ecx;");
    asm("loc_65FA594: add $4,%eax;");
    asm("loc_65FA597: cmp %ebp,%ecx;");
    asm("loc_65FA599: jl loc_65FA587;");
    asm("loc_65FA59B: fcoms _data_6601318;");
    asm("loc_65FA5A1: fnstsw %ax;");
    asm("loc_65FA5A3: test $0x44,%ah;");
    asm("loc_65FA5A6: jnp loc_65FA69B;");
    asm("loc_65FA5AC: fdivrl _data_6601320;");
    asm("loc_65FA5B2: mov 0x244(%esi),%eax;");
    asm("loc_65FA5B8: cmp %eax,%edx;");
    asm("loc_65FA5BA: mov %edx,0x18(%esp);");
    asm("loc_65FA5BE: fstps 0x10(%esp);");
    asm("loc_65FA5C2: jge loc_65FA674;");
    asm("loc_65FA5C8: mov 0x240(%esi),%ecx;");
    asm("loc_65FA5CE: mov 0x88(%esp),%ebp;");
    asm("loc_65FA5D5: mov 0x34(%esp),%eax;");
    asm("loc_65FA5D9: flds _data_6601318;");
    asm("loc_65FA5DF: cmp %ecx,%eax;");
    asm("loc_65FA5E1: jge loc_65FA61A;");
    asm("loc_65FA5E3: mov 0x28(%esp),%eax;");
    asm("loc_65FA5E7: lea 0xC(%eax,%ebx),%edx;");
    asm("loc_65FA5EB: lea (%ebp,%edx,4),%edi;");
    asm("loc_65FA5EF: mov 0x18(%esp),%edx;");
    asm("loc_65FA5F3: lea 0xC(%eax,%edx),%eax;");
    asm("loc_65FA5F7: lea (%ebp,%eax,4),%edx;");
    asm("loc_65FA5FB: mov 0x34(%esp),%ebp;");
    asm("loc_65FA5FF: mov %ecx,%eax;");
    asm("loc_65FA601: sub %ebp,%eax;");
    asm("loc_65FA603: flds (%edi);");
    asm("loc_65FA605: add $0x30,%edx;");
    asm("loc_65FA608: fmuls -0x30(%edx);");
    asm("loc_65FA60B: add $0x30,%edi;");
    asm("loc_65FA60E: dec %eax;");
    asm("loc_65FA60F: faddp;");
    asm("loc_65FA611: jne loc_65FA603;");
    asm("loc_65FA613: mov 0x88(%esp),%ebp;");
    asm("loc_65FA61A: cmp %ecx,%ebx;");
    asm("loc_65FA61C: mov 0x2C(%esp),%edx;");
    asm("loc_65FA620: fdivs (%edx);");
    asm("loc_65FA622: mov %ebx,%edi;");
    asm("loc_65FA624: fmuls 0x10(%esp);");
    asm("loc_65FA628: fstps 0x14(%esp);");
    asm("loc_65FA62C: jge loc_65FA65D;");
    asm("loc_65FA62E: mov 0x28(%esp),%eax;");
    asm("loc_65FA632: mov 0x18(%esp),%ecx;");
    asm("loc_65FA636: add %ecx,%eax;");
    asm("loc_65FA638: lea (%ebp,%eax,4),%eax;");
    asm("loc_65FA63C: lea (%esp),%esp;");
    asm("loc_65FA640: flds 0x14(%esp);");
    asm("loc_65FA644: inc %edi;");
    asm("loc_65FA645: fmuls (%edx);");
    asm("loc_65FA647: add $0x30,%edx;");
    asm("loc_65FA64A: add $0x30,%eax;");
    asm("loc_65FA64D: fadds -0x30(%eax);");
    asm("loc_65FA650: fstps -0x30(%eax);");
    asm("loc_65FA653: mov 0x240(%esi),%ecx;");
    asm("loc_65FA659: cmp %ecx,%edi;");
    asm("loc_65FA65B: jl loc_65FA640;");
    asm("loc_65FA65D: mov 0x18(%esp),%eax;");
    asm("loc_65FA661: mov 0x244(%esi),%edx;");
    asm("loc_65FA667: inc %eax;");
    asm("loc_65FA668: cmp %edx,%eax;");
    asm("loc_65FA66A: mov %eax,0x18(%esp);");
    asm("loc_65FA66E: jl loc_65FA5D5;");
    asm("loc_65FA674: cmp 0x240(%esi),%ebx;");
    asm("loc_65FA67A: mov %ebx,%ecx;");
    asm("loc_65FA67C: jge loc_65FA6C4;");
    asm("loc_65FA67E: mov 0x2C(%esp),%eax;");
    asm("loc_65FA682: flds 0x10(%esp);");
    asm("loc_65FA686: inc %ecx;");
    asm("loc_65FA687: fmuls (%eax);");
    asm("loc_65FA689: add $0x30,%eax;");
    asm("loc_65FA68C: fstps -0x30(%eax);");
    asm("loc_65FA68F: mov 0x240(%esi),%edx;");
    asm("loc_65FA695: cmp %edx,%ecx;");
    asm("loc_65FA697: jl loc_65FA682;");
    asm("loc_65FA699: jmp loc_65FA6C4;");
    asm("loc_65FA69B: mov 0x240(%esi),%ecx;");
    asm("loc_65FA6A1: fstp %st(0);");
    asm("loc_65FA6A3: cmp %ecx,%ebx;");
    asm("loc_65FA6A5: mov %ebx,%eax;");
    asm("loc_65FA6A7: jge loc_65FA6C4;");
    asm("loc_65FA6A9: mov %edi,%ecx;");
    asm("loc_65FA6AB: nop;");
    asm("loc_65FA6AC: lea (%esp),%esp;");
    asm("loc_65FA6B0: movl $0,(%ecx);");
    asm("loc_65FA6B6: mov 0x240(%esi),%edx;");
    asm("loc_65FA6BC: inc %eax;");
    asm("loc_65FA6BD: add $0x30,%ecx;");
    asm("loc_65FA6C0: cmp %edx,%eax;");
    asm("loc_65FA6C2: jl loc_65FA6B0;");
    asm("loc_65FA6C4: mov 0x2C(%esp),%edi;");
    asm("loc_65FA6C8: flds (%edi);");
    asm("loc_65FA6CA: mov 0x34(%esp),%edx;");
    asm("loc_65FA6CE: fadds _data_66011E0;");
    asm("loc_65FA6D4: mov 0x28(%esp),%ebp;");
    asm("loc_65FA6D8: dec %ebx;");
    asm("loc_65FA6D9: dec %edx;");
    asm("loc_65FA6DA: fstps (%edi);");
    asm("loc_65FA6DC: sub $0xC,%ebp;");
    asm("loc_65FA6DF: sub $0x34,%edi;");
    asm("loc_65FA6E2: test %ebx,%ebx;");
    asm("loc_65FA6E4: mov %edx,0x34(%esp);");
    asm("loc_65FA6E8: mov %ebp,0x28(%esp);");
    asm("loc_65FA6EC: mov %edi,0x2C(%esp);");
    asm("loc_65FA6F0: jge loc_65FA560;");
    asm("loc_65FA6F6: mov 0x244(%esi),%eax;");
    asm("loc_65FA6FC: dec %eax;");
    asm("loc_65FA6FD: mov %eax,0x28(%esp);");
    asm("loc_65FA701: js loc_65FAC30;");
    asm("loc_65FA707: mov 0x28(%esp),%ebp;");
    asm("loc_65FA70B: mov 0x8C(%esp),%edx;");
    asm("loc_65FA712: movl $1,0x40(%esp);");
    asm("loc_65FA71A: lea (%ebx),%ebx;");
    asm("loc_65FA720: test %ebp,%ebp;");
    asm("loc_65FA722: mov %ebp,%ebx;");
    asm("loc_65FA724: mov %ebx,0x3C(%esp);");
    asm("loc_65FA728: jl loc_65FA789;");
    asm("loc_65FA72A: lea -4(%edx,%ebp,4),%edi;");
    asm("loc_65FA72E: mov %edi,%edi;");
    asm("loc_65FA730: mov 0x30(%esp),%eax;");
    asm("loc_65FA734: flds 0x54(%esp,%ebx,4);");
    asm("loc_65FA738: push %eax;");
    asm("loc_65FA739: fabs;");
    asm("loc_65FA73B: lea -1(%ebx),%edx;");
    asm("loc_65FA73E: push %ecx;");
    asm("loc_65FA73F: fstps (%esp);");
    asm("loc_65FA742: mov %edx,0x40(%esp);");
    asm("loc_65FA746: call _sub_65F9ED0;");
    asm("loc_65FA74B: add $8,%esp;");
    asm("loc_65FA74E: test %al,%al;");
    asm("loc_65FA750: jne loc_65FA89B;");
    asm("loc_65FA756: mov 0x30(%esp),%ecx;");
    asm("loc_65FA75A: flds (%edi);");
    asm("loc_65FA75C: push %ecx;");
    asm("loc_65FA75D: fabs;");
    asm("loc_65FA75F: push %ecx;");
    asm("loc_65FA760: fstps (%esp);");
    asm("loc_65FA763: call _sub_65F9ED0;");
    asm("loc_65FA768: add $8,%esp;");
    asm("loc_65FA76B: test %al,%al;");
    asm("loc_65FA76D: jne loc_65FA77A;");
    asm("loc_65FA76F: mov 0x38(%esp),%ebx;");
    asm("loc_65FA773: sub $4,%edi;");
    asm("loc_65FA776: test %ebx,%ebx;");
    asm("loc_65FA778: jge loc_65FA730;");
    asm("loc_65FA77A: mov 0x8C(%esp),%edx;");
    asm("loc_65FA781: mov 0x28(%esp),%ebp;");
    asm("loc_65FA785: mov %ebx,0x3C(%esp);");
    asm("loc_65FA789: cmp %ebp,%ebx;");
    asm("loc_65FA78B: flds _data_66011E0;");
    asm("loc_65FA791: movl $0,0x18(%esp);");
    asm("loc_65FA799: mov %ebx,%edi;");
    asm("loc_65FA79B: jg loc_65FA8AC;");
    asm("loc_65FA7A1: lea 0x54(%esp),%eax;");
    asm("loc_65FA7A5: sub %eax,%edx;");
    asm("loc_65FA7A7: mov 0x88(%esp),%eax;");
    asm("loc_65FA7AE: lea 0x54(%esp),%ecx;");
    asm("loc_65FA7B2: sub %ecx,%eax;");
    asm("loc_65FA7B4: mov %edx,0x24(%esp);");
    asm("loc_65FA7B8: mov %eax,0x34(%esp);");
    asm("loc_65FA7BC: lea (%esp),%esp;");
    asm("loc_65FA7C0: fmuls 0x54(%esp,%edi,4);");
    asm("loc_65FA7C4: mov 0x30(%esp),%edx;");
    asm("loc_65FA7C8: push %edx;");
    asm("loc_65FA7C9: push %ecx;");
    asm("loc_65FA7CA: fstps 0x1C(%esp);");
    asm("loc_65FA7CE: flds 0x20(%esp);");
    asm("loc_65FA7D2: fmuls 0x5C(%esp,%edi,4);");
    asm("loc_65FA7D6: fstps 0x5C(%esp,%edi,4);");
    asm("loc_65FA7DA: flds 0x1C(%esp);");
    asm("loc_65FA7DE: fabs;");
    asm("loc_65FA7E0: fstps (%esp);");
    asm("loc_65FA7E3: call _sub_65F9ED0;");
    asm("loc_65FA7E8: add $8,%esp;");
    asm("loc_65FA7EB: test %al,%al;");
    asm("loc_65FA7ED: jne loc_65FA89F;");
    asm("loc_65FA7F3: mov 0x24(%esp),%eax;");
    asm("loc_65FA7F7: lea (%eax,%edi,4),%ecx;");
    asm("loc_65FA7FA: mov 0x54(%esp,%ecx),%eax;");
    asm("loc_65FA7FE: lea 0x54(%esp,%ecx),%edx;");
    asm("loc_65FA802: mov %eax,%ecx;");
    asm("loc_65FA804: mov %eax,0x10(%esp);");
    asm("loc_65FA808: mov 0x14(%esp),%eax;");
    asm("loc_65FA80C: push %ecx;");
    asm("loc_65FA80D: push %eax;");
    asm("loc_65FA80E: mov %esi,%ecx;");
    asm("loc_65FA810: call _sub_65F9E00;");
    asm("loc_65FA815: fsts (%edx);");
    asm("loc_65FA817: fdivrl _data_6601320;");
    asm("loc_65FA81D: mov 0x240(%esi),%eax;");
    asm("loc_65FA823: xor %edx,%edx;");
    asm("loc_65FA825: test %eax,%eax;");
    asm("loc_65FA827: flds 0x10(%esp);");
    asm("loc_65FA82B: fmul %st(1),%st;");
    asm("loc_65FA82D: fstps 0x18(%esp);");
    asm("loc_65FA831: fmuls 0x14(%esp);");
    asm("loc_65FA835: fchs;");
    asm("loc_65FA837: jle loc_65FA883;");
    asm("loc_65FA839: mov 0x34(%esp),%ecx;");
    asm("loc_65FA83D: mov 0x38(%esp),%ebp;");
    asm("loc_65FA841: lea (%ecx,%edi,4),%eax;");
    asm("loc_65FA844: lea 0x54(%esp,%eax),%ecx;");
    asm("loc_65FA848: mov 0x88(%esp),%eax;");
    asm("loc_65FA84F: lea (%eax,%ebp,4),%eax;");
    asm("loc_65FA852: flds (%eax);");
    asm("loc_65FA854: inc %edx;");
    asm("loc_65FA855: flds (%ecx);");
    asm("loc_65FA857: add $0x30,%eax;");
    asm("loc_65FA85A: fld %st(1);");
    asm("loc_65FA85C: add $0x30,%ecx;");
    asm("loc_65FA85F: fmuls 0x18(%esp);");
    asm("loc_65FA863: fld %st(1);");
    asm("loc_65FA865: fmul %st(4),%st;");
    asm("loc_65FA867: faddp;");
    asm("loc_65FA869: fstps -0x30(%eax);");
    asm("loc_65FA86C: fmuls 0x18(%esp);");
    asm("loc_65FA870: fxch;");
    asm("loc_65FA872: fmul %st(2),%st;");
    asm("loc_65FA874: fsubrp;");
    asm("loc_65FA876: fstps -0x30(%ecx);");
    asm("loc_65FA879: mov 0x240(%esi),%ebp;");
    asm("loc_65FA87F: cmp %ebp,%edx;");
    asm("loc_65FA881: jl loc_65FA852;");
    asm("loc_65FA883: mov 0x28(%esp),%ebp;");
    asm("loc_65FA887: inc %edi;");
    asm("loc_65FA888: cmp %ebp,%edi;");
    asm("loc_65FA88A: jle loc_65FA7C0;");
    asm("loc_65FA890: mov 0x8C(%esp),%edx;");
    asm("loc_65FA897: fstp %st(0);");
    asm("loc_65FA899: jmp loc_65FA8AE;");
    asm("loc_65FA89B: mov %ebx,0x3C(%esp);");
    asm("loc_65FA89F: mov 0x28(%esp),%ebp;");
    asm("loc_65FA8A3: mov 0x8C(%esp),%edx;");
    asm("loc_65FA8AA: jmp loc_65FA8AE;");
    asm("loc_65FA8AC: fstp %st(0);");
    asm("loc_65FA8AE: cmp %ebp,%ebx;");
    asm("loc_65FA8B0: flds (%edx,%ebp,4);");
    asm("loc_65FA8B3: fstps 0x34(%esp);");
    asm("loc_65FA8B7: je loc_65FABDF;");
    asm("loc_65FA8BD: cmpl $0x1E,0x40(%esp);");
    asm("loc_65FA8C2: je loc_65FAC3C;");
    asm("loc_65FA8C8: flds (%edx,%ebx,4);");
    asm("loc_65FA8CB: mov 0x54(%esp,%ebp,4),%ecx;");
    asm("loc_65FA8CF: fstps 0x2C(%esp);");
    asm("loc_65FA8D3: lea -1(%ebp),%eax;");
    asm("loc_65FA8D6: flds (%edx,%eax,4);");
    asm("loc_65FA8D9: mov %ecx,0x20(%esp);");
    asm("loc_65FA8DD: fstps 0x24(%esp);");
    asm("loc_65FA8E1: mov %eax,0x38(%esp);");
    asm("loc_65FA8E5: flds 0x54(%esp,%eax,4);");
    asm("loc_65FA8E9: push $0x3F800000;");
    asm("loc_65FA8EE: flds 0x28(%esp);");
    asm("loc_65FA8F2: mov %esi,%ecx;");
    asm("loc_65FA8F4: fsubs 0x38(%esp);");
    asm("loc_65FA8F8: flds 0x38(%esp);");
    asm("loc_65FA8FC: fadds 0x28(%esp);");
    asm("loc_65FA900: fmulp;");
    asm("loc_65FA902: fld %st(1);");
    asm("loc_65FA904: fsubs 0x24(%esp);");
    asm("loc_65FA908: flds 0x24(%esp);");
    asm("loc_65FA90C: fadd %st(3),%st;");
    asm("loc_65FA90E: fmulp;");
    asm("loc_65FA910: faddp;");
    asm("loc_65FA912: flds 0x28(%esp);");
    asm("loc_65FA916: fmuls 0x24(%esp);");
    asm("loc_65FA91A: fadd %st,%st(0);");
    asm("loc_65FA91C: fdivrp;");
    asm("loc_65FA91E: fstps 0x18(%esp);");
    asm("loc_65FA922: mov 0x18(%esp),%eax;");
    asm("loc_65FA926: push %eax;");
    asm("loc_65FA927: fstp %st(0);");
    asm("loc_65FA929: call _sub_65F9E00;");
    asm("loc_65FA92E: flds 0x14(%esp);");
    asm("loc_65FA932: fcompl _data_6601398;");
    asm("loc_65FA938: fnstsw %ax;");
    asm("loc_65FA93A: fabs;");
    asm("loc_65FA93C: test $1,%ah;");
    asm("loc_65FA93F: je loc_65FA943;");
    asm("loc_65FA941: fchs;");
    asm("loc_65FA943: flds 0x24(%esp);");
    asm("loc_65FA947: mov 0x38(%esp),%eax;");
    asm("loc_65FA94B: cmp %eax,%ebx;");
    asm("loc_65FA94D: flds 0x14(%esp);");
    asm("loc_65FA951: fadd %st(2),%st;");
    asm("loc_65FA953: movl $0x3F800000,0x1C(%esp);");
    asm("loc_65FA95B: movl $0x3F800000,0x18(%esp);");
    asm("loc_65FA963: mov %ebx,%edi;");
    asm("loc_65FA965: fdivrp;");
    asm("loc_65FA967: fsubs 0x20(%esp);");
    asm("loc_65FA96B: fmuls 0x20(%esp);");
    asm("loc_65FA96F: flds 0x2C(%esp);");
    asm("loc_65FA973: fsubs 0x34(%esp);");
    asm("loc_65FA977: flds 0x2C(%esp);");
    asm("loc_65FA97B: fadds 0x34(%esp);");
    asm("loc_65FA97F: fmulp;");
    asm("loc_65FA981: faddp;");
    asm("loc_65FA983: fdivs 0x2C(%esp);");
    asm("loc_65FA987: fstps 0x14(%esp);");
    asm("loc_65FA98B: fstp %st(0);");
    asm("loc_65FA98D: jg loc_65FABB4;");
    asm("loc_65FA993: mov 0x90(%esp),%ecx;");
    asm("loc_65FA99A: lea 0x54(%esp),%eax;");
    asm("loc_65FA99E: sub %edx,%eax;");
    asm("loc_65FA9A0: mov %eax,0x48(%esp);");
    asm("loc_65FA9A4: mov %ecx,%eax;");
    asm("loc_65FA9A6: sub %edx,%eax;");
    asm("loc_65FA9A8: mov %eax,0x4C(%esp);");
    asm("loc_65FA9AC: lea 4(%edx,%ebx,4),%ebx;");
    asm("loc_65FA9B0: lea 0x54(%esp),%edx;");
    asm("loc_65FA9B4: mov $4,%eax;");
    asm("loc_65FA9B9: sub %edx,%eax;");
    asm("loc_65FA9BB: mov %eax,0x44(%esp);");
    asm("loc_65FA9BF: mov %ecx,%eax;");
    asm("loc_65FA9C1: lea 0x54(%esp),%ecx;");
    asm("loc_65FA9C5: sub %ecx,%eax;");
    asm("loc_65FA9C7: mov %eax,0x50(%esp);");
    asm("loc_65FA9CB: mov 0x88(%esp),%eax;");
    asm("loc_65FA9D2: lea 0x54(%esp),%edx;");
    asm("loc_65FA9D6: sub %edx,%eax;");
    asm("loc_65FA9D8: mov %eax,0x34(%esp);");
    asm("loc_65FA9DC: lea (%esp),%esp;");
    asm("loc_65FA9E0: mov 0x48(%esp),%edx;");
    asm("loc_65FA9E4: flds (%edx,%ebx);");
    asm("loc_65FA9E7: mov 0x44(%esp),%eax;");
    asm("loc_65FA9EB: flds 0x1C(%esp);");
    asm("loc_65FA9EF: mov 0x14(%esp),%edx;");
    asm("loc_65FA9F3: fmul %st(1),%st;");
    asm("loc_65FA9F5: lea (%eax,%edi,4),%ecx;");
    asm("loc_65FA9F8: mov (%ebx),%eax;");
    asm("loc_65FA9FA: lea 0x54(%esp,%ecx),%ebp;");
    asm("loc_65FA9FE: fstps 0x20(%esp);");
    asm("loc_65FAA02: mov %eax,0x24(%esp);");
    asm("loc_65FAA06: flds 0x18(%esp);");
    asm("loc_65FAA0A: mov 0x20(%esp),%ecx;");
    asm("loc_65FAA0E: fmul %st(1),%st;");
    asm("loc_65FAA10: push %ecx;");
    asm("loc_65FAA11: push %edx;");
    asm("loc_65FAA12: mov %esi,%ecx;");
    asm("loc_65FAA14: fstps 0x18(%esp);");
    asm("loc_65FAA18: fstp %st(0);");
    asm("loc_65FAA1A: call _sub_65F9E00;");
    asm("loc_65FAA1F: fsts 0x54(%esp,%edi,4);");
    asm("loc_65FAA23: mov 0x244(%esi),%eax;");
    asm("loc_65FAA29: fdivrs _data_66011E0;");
    asm("loc_65FAA2F: xor %edx,%edx;");
    asm("loc_65FAA31: test %eax,%eax;");
    asm("loc_65FAA33: flds 0x14(%esp);");
    asm("loc_65FAA37: fmul %st(1),%st;");
    asm("loc_65FAA39: fstps 0x18(%esp);");
    asm("loc_65FAA3D: fmuls 0x20(%esp);");
    asm("loc_65FAA41: fstps 0x1C(%esp);");
    asm("loc_65FAA45: flds 0x2C(%esp);");
    asm("loc_65FAA49: fmuls 0x18(%esp);");
    asm("loc_65FAA4D: flds 0x1C(%esp);");
    asm("loc_65FAA51: fmuls 0x10(%esp);");
    asm("loc_65FAA55: faddp;");
    asm("loc_65FAA57: fstps 0x14(%esp);");
    asm("loc_65FAA5B: flds 0x18(%esp);");
    asm("loc_65FAA5F: fmuls 0x10(%esp);");
    asm("loc_65FAA63: flds 0x2C(%esp);");
    asm("loc_65FAA67: fmuls 0x1C(%esp);");
    asm("loc_65FAA6B: fsubrp;");
    asm("loc_65FAA6D: fstps 0x10(%esp);");
    asm("loc_65FAA71: flds 0x24(%esp);");
    asm("loc_65FAA75: fmuls 0x1C(%esp);");
    asm("loc_65FAA79: fstps 0x20(%esp);");
    asm("loc_65FAA7D: flds 0x24(%esp);");
    asm("loc_65FAA81: fmuls 0x18(%esp);");
    asm("loc_65FAA85: fstps 0x24(%esp);");
    asm("loc_65FAA89: jle loc_65FAAD3;");
    asm("loc_65FAA8B: mov 0x4C(%esp),%eax;");
    asm("loc_65FAA8F: lea (%eax,%ebx),%ecx;");
    asm("loc_65FAA92: mov 0x50(%esp),%eax;");
    asm("loc_65FAA96: lea (%eax,%edi,4),%eax;");
    asm("loc_65FAA99: lea 0x54(%esp,%eax),%eax;");
    asm("loc_65FAA9D: lea (%ecx),%ecx;");
    asm("loc_65FAAA0: flds (%eax);");
    asm("loc_65FAAA2: inc %edx;");
    asm("loc_65FAAA3: flds (%ecx);");
    asm("loc_65FAAA5: add $0x30,%eax;");
    asm("loc_65FAAA8: fld %st(1);");
    asm("loc_65FAAAA: add $0x30,%ecx;");
    asm("loc_65FAAAD: fmuls 0x18(%esp);");
    asm("loc_65FAAB1: fld %st(1);");
    asm("loc_65FAAB3: fmuls 0x1C(%esp);");
    asm("loc_65FAAB7: faddp;");
    asm("loc_65FAAB9: fstps -0x30(%eax);");
    asm("loc_65FAABC: fmuls 0x18(%esp);");
    asm("loc_65FAAC0: fxch;");
    asm("loc_65FAAC2: fmuls 0x1C(%esp);");
    asm("loc_65FAAC6: fsubrp;");
    asm("loc_65FAAC8: fstps -0x30(%ecx);");
    asm("loc_65FAACB: cmp 0x244(%esi),%edx;");
    asm("loc_65FAAD1: jl loc_65FAAA0;");
    asm("loc_65FAAD3: mov 0x20(%esp),%ecx;");
    asm("loc_65FAAD7: mov 0x14(%esp),%edx;");
    asm("loc_65FAADB: push %ecx;");
    asm("loc_65FAADC: push %edx;");
    asm("loc_65FAADD: mov %esi,%ecx;");
    asm("loc_65FAADF: call _sub_65F9E00;");
    asm("loc_65FAAE4: fcoms _data_6601318;");
    asm("loc_65FAAEA: fsts -4(%ebx);");
    asm("loc_65FAAED: fnstsw %ax;");
    asm("loc_65FAAEF: test $0x44,%ah;");
    asm("loc_65FAAF2: jnp loc_65FAB0E;");
    asm("loc_65FAAF4: fdivrl _data_6601320;");
    asm("loc_65FAAFA: flds 0x14(%esp);");
    asm("loc_65FAAFE: fmul %st(1),%st;");
    asm("loc_65FAB00: fstps 0x18(%esp);");
    asm("loc_65FAB04: fmuls 0x20(%esp);");
    asm("loc_65FAB08: fstps 0x1C(%esp);");
    asm("loc_65FAB0C: jmp loc_65FAB10;");
    asm("loc_65FAB0E: fstp %st(0);");
    asm("loc_65FAB10: flds 0x24(%esp);");
    asm("loc_65FAB14: mov 0x240(%esi),%eax;");
    asm("loc_65FAB1A: fmuls 0x1C(%esp);");
    asm("loc_65FAB1E: xor %edx,%edx;");
    asm("loc_65FAB20: test %eax,%eax;");
    asm("loc_65FAB22: flds 0x18(%esp);");
    asm("loc_65FAB26: fmuls 0x10(%esp);");
    asm("loc_65FAB2A: faddp;");
    asm("loc_65FAB2C: fstps 0x14(%esp);");
    asm("loc_65FAB30: flds 0x24(%esp);");
    asm("loc_65FAB34: fmuls 0x18(%esp);");
    asm("loc_65FAB38: flds 0x1C(%esp);");
    asm("loc_65FAB3C: fmuls 0x10(%esp);");
    asm("loc_65FAB40: fsubrp;");
    asm("loc_65FAB42: fstps 0x2C(%esp);");
    asm("loc_65FAB46: jle loc_65FAB95;");
    asm("loc_65FAB48: mov 0x88(%esp),%eax;");
    asm("loc_65FAB4F: lea (%eax,%ebp),%ecx;");
    asm("loc_65FAB52: mov 0x34(%esp),%eax;");
    asm("loc_65FAB56: lea (%eax,%edi,4),%eax;");
    asm("loc_65FAB59: lea 0x54(%esp,%eax),%eax;");
    asm("loc_65FAB5D: lea (%ecx),%ecx;");
    asm("loc_65FAB60: flds (%eax);");
    asm("loc_65FAB62: inc %edx;");
    asm("loc_65FAB63: flds (%ecx);");
    asm("loc_65FAB65: add $0x30,%eax;");
    asm("loc_65FAB68: fld %st(1);");
    asm("loc_65FAB6A: add $0x30,%ecx;");
    asm("loc_65FAB6D: fmuls 0x18(%esp);");
    asm("loc_65FAB71: fld %st(1);");
    asm("loc_65FAB73: fmuls 0x1C(%esp);");
    asm("loc_65FAB77: faddp;");
    asm("loc_65FAB79: fstps -0x30(%eax);");
    asm("loc_65FAB7C: fmuls 0x18(%esp);");
    asm("loc_65FAB80: fxch;");
    asm("loc_65FAB82: fmuls 0x1C(%esp);");
    asm("loc_65FAB86: fsubrp;");
    asm("loc_65FAB88: fstps -0x30(%ecx);");
    asm("loc_65FAB8B: mov 0x240(%esi),%ebp;");
    asm("loc_65FAB91: cmp %ebp,%edx;");
    asm("loc_65FAB93: jl loc_65FAB60;");
    asm("loc_65FAB95: mov 0x38(%esp),%eax;");
    asm("loc_65FAB99: inc %edi;");
    asm("loc_65FAB9A: add $4,%ebx;");
    asm("loc_65FAB9D: cmp %eax,%edi;");
    asm("loc_65FAB9F: jle loc_65FA9E0;");
    asm("loc_65FABA5: mov 0x28(%esp),%ebp;");
    asm("loc_65FABA9: mov 0x3C(%esp),%ebx;");
    asm("loc_65FABAD: mov 0x8C(%esp),%edx;");
    asm("loc_65FABB4: mov 0x40(%esp),%eax;");
    asm("loc_65FABB8: flds 0x2C(%esp);");
    asm("loc_65FABBC: mov 0x14(%esp),%ecx;");
    asm("loc_65FABC0: fstps (%edx,%ebp,4);");
    asm("loc_65FABC3: inc %eax;");
    asm("loc_65FABC4: cmp $0x1E,%eax;");
    asm("loc_65FABC7: movl $0,0x54(%esp,%ebx,4);");
    asm("loc_65FABCF: mov %ecx,0x54(%esp,%ebp,4);");
    asm("loc_65FABD3: mov %eax,0x40(%esp);");
    asm("loc_65FABD7: jle loc_65FA720;");
    asm("loc_65FABDD: jmp loc_65FAC25;");
    asm("loc_65FABDF: flds 0x34(%esp);");
    asm("loc_65FABE3: fcompl _data_6601398;");
    asm("loc_65FABE9: fnstsw %ax;");
    asm("loc_65FABEB: test $5,%ah;");
    asm("loc_65FABEE: jp loc_65FAC25;");
    asm("loc_65FABF0: flds 0x34(%esp);");
    asm("loc_65FABF4: xor %ecx,%ecx;");
    asm("loc_65FABF6: fchs;");
    asm("loc_65FABF8: fstps (%edx,%ebp,4);");
    asm("loc_65FABFB: mov 0x244(%esi),%eax;");
    asm("loc_65FAC01: test %eax,%eax;");
    asm("loc_65FAC03: jle loc_65FAC25;");
    asm("loc_65FAC05: mov 0x90(%esp),%edx;");
    asm("loc_65FAC0C: lea (%edx,%ebp,4),%eax;");
    asm("loc_65FAC0F: nop;");
    asm("loc_65FAC10: flds (%eax);");
    asm("loc_65FAC12: inc %ecx;");
    asm("loc_65FAC13: fchs;");
    asm("loc_65FAC15: add $0x30,%eax;");
    asm("loc_65FAC18: fstps -0x30(%eax);");
    asm("loc_65FAC1B: mov 0x244(%esi),%edx;");
    asm("loc_65FAC21: cmp %edx,%ecx;");
    asm("loc_65FAC23: jl loc_65FAC10;");
    asm("loc_65FAC25: dec %ebp;");
    asm("loc_65FAC26: mov %ebp,0x28(%esp);");
    asm("loc_65FAC2A: jns loc_65FA707;");
    asm("loc_65FAC30: pop %edi;");
    asm("loc_65FAC31: pop %esi;");
    asm("loc_65FAC32: pop %ebp;");
    asm("loc_65FAC33: mov $1,%al;");
    asm("loc_65FAC35: pop %ebx;");
    asm("loc_65FAC36: add $0x74,%esp;");
    asm("loc_65FAC39: ret $0xC;");
    asm("loc_65FAC3C: pop %edi;");
    asm("loc_65FAC3D: pop %esi;");
    asm("loc_65FAC3E: pop %ebp;");
    asm("loc_65FAC3F: xor %al,%al;");
    asm("loc_65FAC41: pop %ebx;");
    asm("loc_65FAC42: add $0x74,%esp;");
    asm("loc_65FAC45: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FAC50() // _sub_65FAC50
{
    __DEBUG_ASM(65FAC50);
    // chunk 0x65FAC50 _sub_65FAC50
    asm("loc_65FAC50: push %ebp;");
    asm("loc_65FAC51: mov 0x10(%esp),%ebp;");
    asm("loc_65FAC55: push %esi;");
    asm("loc_65FAC56: mov 0xC(%esp),%esi;");
    asm("loc_65FAC5A: mov 0x240(%esi),%eax;");
    asm("loc_65FAC60: mov %eax,0x240(%ebp);");
    asm("loc_65FAC66: mov 0x244(%esi),%ecx;");
    asm("loc_65FAC6C: mov %ecx,0x244(%ebp);");
    asm("loc_65FAC72: mov 0x240(%esi),%eax;");
    asm("loc_65FAC78: test %eax,%eax;");
    asm("loc_65FAC7A: movl $0,0xC(%esp);");
    asm("loc_65FAC82: jle loc_65FACCF;");
    asm("loc_65FAC84: mov 0x244(%esi),%edx;");
    asm("loc_65FAC8A: push %ebx;");
    asm("loc_65FAC8B: mov 0x14(%esp),%ebx;");
    asm("loc_65FAC8F: push %edi;");
    asm("loc_65FAC90: xor %ecx,%ecx;");
    asm("loc_65FAC92: test %edx,%edx;");
    asm("loc_65FAC94: jle loc_65FACB7;");
    asm("loc_65FAC96: mov 0x1C(%esp),%edx;");
    asm("loc_65FAC9A: mov %esi,%edi;");
    asm("loc_65FAC9C: mov %ebp,%eax;");
    asm("loc_65FAC9E: sub %edx,%edi;");
    asm("loc_65FACA0: flds (%ebx,%ecx,4);");
    asm("loc_65FACA3: inc %ecx;");
    asm("loc_65FACA4: fmuls (%edi,%eax);");
    asm("loc_65FACA7: add $4,%eax;");
    asm("loc_65FACAA: fstps -4(%eax);");
    asm("loc_65FACAD: mov 0x244(%esi),%edx;");
    asm("loc_65FACB3: cmp %edx,%ecx;");
    asm("loc_65FACB5: jl loc_65FACA0;");
    asm("loc_65FACB7: mov 0x14(%esp),%eax;");
    asm("loc_65FACBB: mov 0x240(%esi),%ecx;");
    asm("loc_65FACC1: inc %eax;");
    asm("loc_65FACC2: add $0x30,%ebp;");
    asm("loc_65FACC5: cmp %ecx,%eax;");
    asm("loc_65FACC7: mov %eax,0x14(%esp);");
    asm("loc_65FACCB: jl loc_65FAC90;");
    asm("loc_65FACCD: pop %edi;");
    asm("loc_65FACCE: pop %ebx;");
    asm("loc_65FACCF: pop %esi;");
    asm("loc_65FACD0: pop %ebp;");
    asm("loc_65FACD1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FACE0() // _sub_65FACE0
{
    __DEBUG_ASM(65FACE0);
    // chunk 0x65FACE0 _sub_65FACE0
    asm("loc_65FACE0: push %ecx;");
    asm("loc_65FACE1: mov 0x10(%esp),%eax;");
    asm("loc_65FACE5: mov 0xC(%esp),%edx;");
    asm("loc_65FACE9: push %edi;");
    asm("loc_65FACEA: mov 0xC(%esp),%edi;");
    asm("loc_65FACEE: mov 0x240(%edi),%ecx;");
    asm("loc_65FACF4: mov %ecx,0x240(%eax);");
    asm("loc_65FACFA: mov 0x240(%edx),%ecx;");
    asm("loc_65FAD00: mov %ecx,0x244(%eax);");
    asm("loc_65FAD06: mov 0x240(%edi),%ecx;");
    asm("loc_65FAD0C: test %ecx,%ecx;");
    asm("loc_65FAD0E: movl $0,0xC(%esp);");
    asm("loc_65FAD16: jle loc_65FADA3;");
    asm("loc_65FAD1C: push %ebx;");
    asm("loc_65FAD1D: push %ebp;");
    asm("loc_65FAD1E: mov %edi,%ecx;");
    asm("loc_65FAD20: sub %edi,%eax;");
    asm("loc_65FAD22: push %esi;");
    asm("loc_65FAD23: mov %ecx,0x20(%esp);");
    asm("loc_65FAD27: mov %eax,0x10(%esp);");
    asm("loc_65FAD2B: nop;");
    asm("loc_65FAD2C: lea (%esp),%esp;");
    asm("loc_65FAD30: mov 0x244(%edx),%esi;");
    asm("loc_65FAD36: xor %ebp,%ebp;");
    asm("loc_65FAD38: test %esi,%esi;");
    asm("loc_65FAD3A: jle loc_65FAD86;");
    asm("loc_65FAD3C: mov %edx,%ebx;");
    asm("loc_65FAD3E: add %ecx,%eax;");
    asm("loc_65FAD40: xor %esi,%esi;");
    asm("loc_65FAD42: movl $0,(%eax);");
    asm("loc_65FAD48: cmp %esi,0x244(%edi);");
    asm("loc_65FAD4E: jle loc_65FAD71;");
    asm("loc_65FAD50: mov %ebx,%edx;");
    asm("loc_65FAD52: flds (%edx);");
    asm("loc_65FAD54: inc %esi;");
    asm("loc_65FAD55: fmuls (%ecx);");
    asm("loc_65FAD57: add $4,%ecx;");
    asm("loc_65FAD5A: add $4,%edx;");
    asm("loc_65FAD5D: fadds (%eax);");
    asm("loc_65FAD5F: fstps (%eax);");
    asm("loc_65FAD61: cmp 0x244(%edi),%esi;");
    asm("loc_65FAD67: jl loc_65FAD52;");
    asm("loc_65FAD69: mov 0x1C(%esp),%edx;");
    asm("loc_65FAD6D: mov 0x20(%esp),%ecx;");
    asm("loc_65FAD71: mov 0x244(%edx),%esi;");
    asm("loc_65FAD77: inc %ebp;");
    asm("loc_65FAD78: add $4,%eax;");
    asm("loc_65FAD7B: add $0x30,%ebx;");
    asm("loc_65FAD7E: cmp %esi,%ebp;");
    asm("loc_65FAD80: jl loc_65FAD40;");
    asm("loc_65FAD82: mov 0x10(%esp),%eax;");
    asm("loc_65FAD86: mov 0x18(%esp),%esi;");
    asm("loc_65FAD8A: mov 0x240(%edi),%ebx;");
    asm("loc_65FAD90: inc %esi;");
    asm("loc_65FAD91: add $0x30,%ecx;");
    asm("loc_65FAD94: cmp %ebx,%esi;");
    asm("loc_65FAD96: mov %esi,0x18(%esp);");
    asm("loc_65FAD9A: mov %ecx,0x20(%esp);");
    asm("loc_65FAD9E: jl loc_65FAD30;");
    asm("loc_65FADA0: pop %esi;");
    asm("loc_65FADA1: pop %ebp;");
    asm("loc_65FADA2: pop %ebx;");
    asm("loc_65FADA3: pop %edi;");
    asm("loc_65FADA4: pop %ecx;");
    asm("loc_65FADA5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FADB0() // _sub_65FADB0
{
    __DEBUG_ASM(65FADB0);
    // chunk 0x65FADB0 _sub_65FADB0
    asm("loc_65FADB0: sub $0x70C,%esp;");
    asm("loc_65FADB6: mov %ecx,%edx;");
    asm("loc_65FADB8: mov 0x244(%edx),%eax;");
    asm("loc_65FADBE: push %ebx;");
    asm("loc_65FADBF: mov 0x714(%esp),%ebx;");
    asm("loc_65FADC6: mov %eax,0x240(%ebx);");
    asm("loc_65FADCC: mov 0x240(%edx),%ecx;");
    asm("loc_65FADD2: push %esi;");
    asm("loc_65FADD3: mov %ecx,0x244(%ebx);");
    asm("loc_65FADD9: mov 0x244(%edx),%esi;");
    asm("loc_65FADDF: push %edi;");
    asm("loc_65FADE0: mov %esi,%ecx;");
    asm("loc_65FADE2: mov %ecx,0x3C(%esp);");
    asm("loc_65FADE6: xor %eax,%eax;");
    asm("loc_65FADE8: lea 0xC(%esp),%edi;");
    asm("loc_65FADEC: rep stos %eax,(%edi);");
    asm("loc_65FADEE: mov %esi,0x280(%esp);");
    asm("loc_65FADF5: mov %esi,0x284(%esp);");
    asm("loc_65FADFC: mov %edx,%esi;");
    asm("loc_65FADFE: mov $0x92,%ecx;");
    asm("loc_65FAE03: lea 0x4D0(%esp),%edi;");
    asm("loc_65FAE0A: rep movsl (%esi),(%edi);");
    asm("loc_65FAE0C: lea 0x40(%esp),%eax;");
    asm("loc_65FAE10: push %eax;");
    asm("loc_65FAE11: lea 0x10(%esp),%ecx;");
    asm("loc_65FAE15: push %ecx;");
    asm("loc_65FAE16: lea 0x4D8(%esp),%eax;");
    asm("loc_65FAE1D: push %eax;");
    asm("loc_65FAE1E: mov %edx,%ecx;");
    asm("loc_65FAE20: call _sub_65F9F00;");
    asm("loc_65FAE25: test %al,%al;");
    asm("loc_65FAE27: jne loc_65FAE4E;");
    asm("loc_65FAE29: mov _import_6601008,%ecx;");
    asm("loc_65FAE2F: push $_data_66029BC;");
    asm("loc_65FAE34: push $0x2E8;");
    asm("loc_65FAE39: push $_data_660297C;");
    asm("loc_65FAE3E: mov $0x100002,%eax;");
    asm("loc_65FAE43: push $_data_66024C8;");
    asm("loc_65FAE48: push %eax;");
    asm("loc_65FAE49: calll *(%ecx);");
    asm("loc_65FAE4B: add $0x14,%esp;");
    asm("loc_65FAE4E: mov 0x3C(%esp),%eax;");
    asm("loc_65FAE52: xor %ecx,%ecx;");
    asm("loc_65FAE54: test %eax,%eax;");
    asm("loc_65FAE56: jle loc_65FAE8A;");
    asm("loc_65FAE58: flds 0xC(%esp,%ecx,4);");
    asm("loc_65FAE5C: fcompl _data_66013A0;");
    asm("loc_65FAE62: fnstsw %ax;");
    asm("loc_65FAE64: test $5,%ah;");
    asm("loc_65FAE67: jp loc_65FAE73;");
    asm("loc_65FAE69: movl $0,0xC(%esp,%ecx,4);");
    asm("loc_65FAE71: jmp loc_65FAE81;");
    asm("loc_65FAE73: flds 0xC(%esp,%ecx,4);");
    asm("loc_65FAE77: fdivrl _data_6601320;");
    asm("loc_65FAE7D: fstps 0xC(%esp,%ecx,4);");
    asm("loc_65FAE81: mov 0x3C(%esp),%eax;");
    asm("loc_65FAE85: inc %ecx;");
    asm("loc_65FAE86: cmp %eax,%ecx;");
    asm("loc_65FAE88: jl loc_65FAE58;");
    asm("loc_65FAE8A: mov 0x280(%esp),%edx;");
    asm("loc_65FAE91: mov 0x284(%esp),%eax;");
    asm("loc_65FAE98: lea 0x288(%esp),%ecx;");
    asm("loc_65FAE9F: mov %edx,0x4C8(%esp);");
    asm("loc_65FAEA6: push %ecx;");
    asm("loc_65FAEA7: lea 0x10(%esp),%edx;");
    asm("loc_65FAEAB: mov %eax,0x4D0(%esp);");
    asm("loc_65FAEB2: push %edx;");
    asm("loc_65FAEB3: lea 0x48(%esp),%eax;");
    asm("loc_65FAEB7: push %eax;");
    asm("loc_65FAEB8: call _sub_65FAC50;");
    asm("loc_65FAEBD: push %ebx;");
    asm("loc_65FAEBE: lea 0x4E0(%esp),%ecx;");
    asm("loc_65FAEC5: push %ecx;");
    asm("loc_65FAEC6: lea 0x29C(%esp),%edx;");
    asm("loc_65FAECD: push %edx;");
    asm("loc_65FAECE: call _sub_65FACE0;");
    asm("loc_65FAED3: add $0x18,%esp;");
    asm("loc_65FAED6: pop %edi;");
    asm("loc_65FAED7: pop %esi;");
    asm("loc_65FAED8: pop %ebx;");
    asm("loc_65FAED9: add $0x70C,%esp;");
    asm("loc_65FAEDF: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FAEF0() // _sub_65FAEF0
{
    __DEBUG_ASM(65FAEF0);
    // chunk 0x65FAEF0 _sub_65FAEF0
    asm("loc_65FAEF0: push %ecx;");
    asm("loc_65FAEF1: mov 0x10(%esp),%eax;");
    asm("loc_65FAEF5: mov 0xC(%esp),%edx;");
    asm("loc_65FAEF9: push %edi;");
    asm("loc_65FAEFA: mov 0xC(%esp),%edi;");
    asm("loc_65FAEFE: mov 0x240(%edi),%ecx;");
    asm("loc_65FAF04: mov %ecx,0x240(%eax);");
    asm("loc_65FAF0A: mov 0x244(%edx),%ecx;");
    asm("loc_65FAF10: mov %ecx,0x244(%eax);");
    asm("loc_65FAF16: mov 0x240(%edi),%ecx;");
    asm("loc_65FAF1C: test %ecx,%ecx;");
    asm("loc_65FAF1E: movl $0,0xC(%esp);");
    asm("loc_65FAF26: jle loc_65FAFB3;");
    asm("loc_65FAF2C: push %ebx;");
    asm("loc_65FAF2D: push %ebp;");
    asm("loc_65FAF2E: mov %edi,%ecx;");
    asm("loc_65FAF30: sub %edi,%eax;");
    asm("loc_65FAF32: push %esi;");
    asm("loc_65FAF33: mov %ecx,0x20(%esp);");
    asm("loc_65FAF37: mov %eax,0x10(%esp);");
    asm("loc_65FAF3B: nop;");
    asm("loc_65FAF3C: lea (%esp),%esp;");
    asm("loc_65FAF40: mov 0x244(%edx),%esi;");
    asm("loc_65FAF46: xor %ebp,%ebp;");
    asm("loc_65FAF48: test %esi,%esi;");
    asm("loc_65FAF4A: jle loc_65FAF96;");
    asm("loc_65FAF4C: mov %edx,%ebx;");
    asm("loc_65FAF4E: add %ecx,%eax;");
    asm("loc_65FAF50: xor %esi,%esi;");
    asm("loc_65FAF52: movl $0,(%eax);");
    asm("loc_65FAF58: cmp %esi,0x244(%edi);");
    asm("loc_65FAF5E: jle loc_65FAF81;");
    asm("loc_65FAF60: mov %ebx,%edx;");
    asm("loc_65FAF62: flds (%ecx);");
    asm("loc_65FAF64: inc %esi;");
    asm("loc_65FAF65: fmuls (%edx);");
    asm("loc_65FAF67: add $4,%ecx;");
    asm("loc_65FAF6A: add $0x30,%edx;");
    asm("loc_65FAF6D: fadds (%eax);");
    asm("loc_65FAF6F: fstps (%eax);");
    asm("loc_65FAF71: cmp 0x244(%edi),%esi;");
    asm("loc_65FAF77: jl loc_65FAF62;");
    asm("loc_65FAF79: mov 0x1C(%esp),%edx;");
    asm("loc_65FAF7D: mov 0x20(%esp),%ecx;");
    asm("loc_65FAF81: mov 0x244(%edx),%esi;");
    asm("loc_65FAF87: inc %ebp;");
    asm("loc_65FAF88: add $4,%eax;");
    asm("loc_65FAF8B: add $4,%ebx;");
    asm("loc_65FAF8E: cmp %esi,%ebp;");
    asm("loc_65FAF90: jl loc_65FAF50;");
    asm("loc_65FAF92: mov 0x10(%esp),%eax;");
    asm("loc_65FAF96: mov 0x18(%esp),%esi;");
    asm("loc_65FAF9A: mov 0x240(%edi),%ebx;");
    asm("loc_65FAFA0: inc %esi;");
    asm("loc_65FAFA1: add $0x30,%ecx;");
    asm("loc_65FAFA4: cmp %ebx,%esi;");
    asm("loc_65FAFA6: mov %esi,0x18(%esp);");
    asm("loc_65FAFAA: mov %ecx,0x20(%esp);");
    asm("loc_65FAFAE: jl loc_65FAF40;");
    asm("loc_65FAFB0: pop %esi;");
    asm("loc_65FAFB1: pop %ebp;");
    asm("loc_65FAFB2: pop %ebx;");
    asm("loc_65FAFB3: pop %edi;");
    asm("loc_65FAFB4: pop %ecx;");
    asm("loc_65FAFB5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FAFC0() // _sub_65FAFC0
{
    __DEBUG_ASM(65FAFC0);
    // chunk 0x65FAFC0 _sub_65FAFC0
    asm("loc_65FAFC0: mov 0x240(%ecx),%eax;");
    asm("loc_65FAFC6: mov 8(%esp),%edx;");
    asm("loc_65FAFCA: mov %eax,0x30(%edx);");
    asm("loc_65FAFCD: mov 0x240(%ecx),%eax;");
    asm("loc_65FAFD3: push %ebx;");
    asm("loc_65FAFD4: xor %ebx,%ebx;");
    asm("loc_65FAFD6: test %eax,%eax;");
    asm("loc_65FAFD8: jle loc_65FB020;");
    asm("loc_65FAFDA: push %ebp;");
    asm("loc_65FAFDB: push %esi;");
    asm("loc_65FAFDC: push %edi;");
    asm("loc_65FAFDD: mov 0x14(%esp),%edi;");
    asm("loc_65FAFE1: mov %ecx,%ebp;");
    asm("loc_65FAFE3: movl $0,(%edx);");
    asm("loc_65FAFE9: mov 0x244(%ecx),%esi;");
    asm("loc_65FAFEF: xor %eax,%eax;");
    asm("loc_65FAFF1: test %esi,%esi;");
    asm("loc_65FAFF3: jle loc_65FB00C;");
    asm("loc_65FAFF5: mov %ebp,%esi;");
    asm("loc_65FAFF7: flds (%edi,%eax,4);");
    asm("loc_65FAFFA: inc %eax;");
    asm("loc_65FAFFB: fmuls (%esi);");
    asm("loc_65FAFFD: add $4,%esi;");
    asm("loc_65FB000: fadds (%edx);");
    asm("loc_65FB002: fstps (%edx);");
    asm("loc_65FB004: cmp 0x244(%ecx),%eax;");
    asm("loc_65FB00A: jl loc_65FAFF7;");
    asm("loc_65FB00C: mov 0x240(%ecx),%eax;");
    asm("loc_65FB012: inc %ebx;");
    asm("loc_65FB013: add $4,%edx;");
    asm("loc_65FB016: add $0x30,%ebp;");
    asm("loc_65FB019: cmp %eax,%ebx;");
    asm("loc_65FB01B: jl loc_65FAFE3;");
    asm("loc_65FB01D: pop %edi;");
    asm("loc_65FB01E: pop %esi;");
    asm("loc_65FB01F: pop %ebp;");
    asm("loc_65FB020: pop %ebx;");
    asm("loc_65FB021: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FB030() // _sub_65FB030
{
    __DEBUG_ASM(65FB030);
    // chunk 0x65FB030 _sub_65FB030
    asm("loc_65FB030: mov $0x2000,%eax;");
    asm("loc_65FB035: call _sub_6600C00;");
    asm("loc_65FB03A: mov 0x2004(%esp),%eax;");
    asm("loc_65FB041: cmp $4,%eax;");
    asm("loc_65FB044: jbe loc_65FB081;");
    asm("loc_65FB046: push $4;");
    asm("loc_65FB048: push %eax;");
    asm("loc_65FB049: lea 8(%esp),%eax;");
    asm("loc_65FB04D: push $_data_6602A30;");
    asm("loc_65FB052: push %eax;");
    asm("loc_65FB053: call _sub_65F28B0;");
    asm("loc_65FB058: push %eax;");
    asm("loc_65FB059: push $0x15;");
    asm("loc_65FB05B: push $_data_66029E8;");
    asm("loc_65FB060: mov $0x100002,%ecx;");
    asm("loc_65FB065: push $_data_66024C8;");
    asm("loc_65FB06A: push %ecx;");
    asm("loc_65FB06B: mov _import_6601008,%ecx;");
    asm("loc_65FB071: calll *(%ecx);");
    asm("loc_65FB073: add $0x24,%esp;");
    asm("loc_65FB076: xor %al,%al;");
    asm("loc_65FB078: add $0x2000,%esp;");
    asm("loc_65FB07E: ret $4;");
    asm("loc_65FB081: mov %eax,0x40(%ecx);");
    asm("loc_65FB084: mov $1,%al;");
    asm("loc_65FB086: add $0x2000,%esp;");
    asm("loc_65FB08C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FB090() // _sub_65FB090
{
    __DEBUG_ASM(65FB090);
    // chunk 0x65FB090 _sub_65FB090
    asm("loc_65FB090: flds 8(%esp);");
    asm("loc_65FB094: mov 4(%esp),%ecx;");
    asm("loc_65FB098: fcomps 0x4C(%ecx);");
    asm("loc_65FB09B: xor %edx,%edx;");
    asm("loc_65FB09D: fnstsw %ax;");
    asm("loc_65FB09F: test $5,%ah;");
    asm("loc_65FB0A2: jnp loc_65FB0B2;");
    asm("loc_65FB0A4: flds 8(%esp);");
    asm("loc_65FB0A8: fcomps 0x50(%ecx);");
    asm("loc_65FB0AB: fnstsw %ax;");
    asm("loc_65FB0AD: test $0x41,%ah;");
    asm("loc_65FB0B0: jne loc_65FB0B7;");
    asm("loc_65FB0B2: mov $1,%edx;");
    asm("loc_65FB0B7: flds 0xC(%esp);");
    asm("loc_65FB0BB: fcomps 0x54(%ecx);");
    asm("loc_65FB0BE: fnstsw %ax;");
    asm("loc_65FB0C0: test $5,%ah;");
    asm("loc_65FB0C3: jnp loc_65FB0D3;");
    asm("loc_65FB0C5: flds 0xC(%esp);");
    asm("loc_65FB0C9: fcomps 0x58(%ecx);");
    asm("loc_65FB0CC: fnstsw %ax;");
    asm("loc_65FB0CE: test $0x41,%ah;");
    asm("loc_65FB0D1: jne loc_65FB0D4;");
    asm("loc_65FB0D3: inc %edx;");
    asm("loc_65FB0D4: flds 0x10(%esp);");
    asm("loc_65FB0D8: fcomps 0x40(%ecx);");
    asm("loc_65FB0DB: fnstsw %ax;");
    asm("loc_65FB0DD: test $5,%ah;");
    asm("loc_65FB0E0: jnp loc_65FB0F0;");
    asm("loc_65FB0E2: flds 0x10(%esp);");
    asm("loc_65FB0E6: fcomps 0x44(%ecx);");
    asm("loc_65FB0E9: fnstsw %ax;");
    asm("loc_65FB0EB: test $0x41,%ah;");
    asm("loc_65FB0EE: jne loc_65FB0F1;");
    asm("loc_65FB0F0: inc %edx;");
    asm("loc_65FB0F1: mov %edx,%eax;");
    asm("loc_65FB0F3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FB100() // _sub_65FB100
{
    __DEBUG_ASM(65FB100);
    // chunk 0x65FB100 _sub_65FB100
    asm("loc_65FB100: mov 0x10(%esp),%al;");
    asm("loc_65FB104: sub $0x54,%esp;");
    asm("loc_65FB107: test $4,%al;");
    asm("loc_65FB109: je loc_65FB225;");
    asm("loc_65FB10F: mov 0x5C(%esp),%eax;");
    asm("loc_65FB113: mov (%eax),%ecx;");
    asm("loc_65FB115: mov 4(%eax),%edx;");
    asm("loc_65FB118: mov 8(%eax),%eax;");
    asm("loc_65FB11B: mov %eax,0x14(%esp);");
    asm("loc_65FB11F: mov 0x60(%esp),%eax;");
    asm("loc_65FB123: flds 8(%eax);");
    asm("loc_65FB126: mov %edx,0x10(%esp);");
    asm("loc_65FB12A: flds 0x14(%eax);");
    asm("loc_65FB12D: mov %ecx,0xC(%esp);");
    asm("loc_65FB131: flds 0x20(%eax);");
    asm("loc_65FB134: flds 0x14(%esp);");
    asm("loc_65FB138: fmul %st(2),%st;");
    asm("loc_65FB13A: flds 0x10(%esp);");
    asm("loc_65FB13E: fmul %st(2),%st;");
    asm("loc_65FB140: fsubrp;");
    asm("loc_65FB142: fstps 0x18(%esp);");
    asm("loc_65FB146: mov 0x18(%esp),%ecx;");
    asm("loc_65FB14A: fmuls 0xC(%esp);");
    asm("loc_65FB14E: mov %ecx,(%esp);");
    asm("loc_65FB152: flds 0x14(%esp);");
    asm("loc_65FB156: fmul %st(3),%st;");
    asm("loc_65FB158: fsubrp;");
    asm("loc_65FB15A: fstps 0x1C(%esp);");
    asm("loc_65FB15E: flds 0x10(%esp);");
    asm("loc_65FB162: mov 0x1C(%esp),%edx;");
    asm("loc_65FB166: fmul %st(2),%st;");
    asm("loc_65FB168: mov %edx,4(%esp);");
    asm("loc_65FB16C: fxch;");
    asm("loc_65FB16E: fmuls 0xC(%esp);");
    asm("loc_65FB172: fsubrp;");
    asm("loc_65FB174: fstps 0x20(%esp);");
    asm("loc_65FB178: mov 0x20(%esp),%eax;");
    asm("loc_65FB17C: fstp %st(0);");
    asm("loc_65FB17E: mov %eax,8(%esp);");
    asm("loc_65FB182: flds 0x20(%esp);");
    asm("loc_65FB186: fmuls 0x20(%esp);");
    asm("loc_65FB18A: flds 0x1C(%esp);");
    asm("loc_65FB18E: fmuls 0x1C(%esp);");
    asm("loc_65FB192: faddp;");
    asm("loc_65FB194: flds 0x18(%esp);");
    asm("loc_65FB198: fmuls 0x18(%esp);");
    asm("loc_65FB19C: faddp;");
    asm("loc_65FB19E: fsqrt;");
    asm("loc_65FB1A0: fdivrs _data_66011E0;");
    asm("loc_65FB1A6: flds 0x18(%esp);");
    asm("loc_65FB1AA: fmul %st(1),%st;");
    asm("loc_65FB1AC: fstps (%esp);");
    asm("loc_65FB1B0: flds 4(%esp);");
    asm("loc_65FB1B4: fmul %st(1),%st;");
    asm("loc_65FB1B6: fstps 4(%esp);");
    asm("loc_65FB1BA: flds 8(%esp);");
    asm("loc_65FB1BE: fmul %st(1),%st;");
    asm("loc_65FB1C0: fstps 8(%esp);");
    asm("loc_65FB1C4: fstp %st(0);");
    asm("loc_65FB1C6: flds 8(%esp);");
    asm("loc_65FB1CA: fmuls 0x10(%esp);");
    asm("loc_65FB1CE: flds 4(%esp);");
    asm("loc_65FB1D2: fmuls 0x14(%esp);");
    asm("loc_65FB1D6: fsubrp;");
    asm("loc_65FB1D8: fstps 0x24(%esp);");
    asm("loc_65FB1DC: flds 0x14(%esp);");
    asm("loc_65FB1E0: fmuls (%esp);");
    asm("loc_65FB1E4: flds 8(%esp);");
    asm("loc_65FB1E8: fmuls 0xC(%esp);");
    asm("loc_65FB1EC: fsubrp;");
    asm("loc_65FB1EE: fstps 0x28(%esp);");
    asm("loc_65FB1F2: flds 4(%esp);");
    asm("loc_65FB1F6: fmuls 0xC(%esp);");
    asm("loc_65FB1FA: flds 0x10(%esp);");
    asm("loc_65FB1FE: fmuls (%esp);");
    asm("loc_65FB202: fsubrp;");
    asm("loc_65FB204: mov 0x24(%esp),%ecx;");
    asm("loc_65FB208: fstps 0x2C(%esp);");
    asm("loc_65FB20C: mov 0x28(%esp),%edx;");
    asm("loc_65FB210: mov 0x2C(%esp),%eax;");
    asm("loc_65FB214: mov %ecx,0x18(%esp);");
    asm("loc_65FB218: mov %edx,0x1C(%esp);");
    asm("loc_65FB21C: mov %eax,0x20(%esp);");
    asm("loc_65FB220: jmp loc_65FB449;");
    asm("loc_65FB225: test $8,%al;");
    asm("loc_65FB227: je loc_65FB373;");
    asm("loc_65FB22D: mov 0x5C(%esp),%ecx;");
    asm("loc_65FB231: mov (%ecx),%edx;");
    asm("loc_65FB233: mov 4(%ecx),%eax;");
    asm("loc_65FB236: mov 8(%ecx),%ecx;");
    asm("loc_65FB239: mov %eax,4(%esp);");
    asm("loc_65FB23D: mov 0x60(%esp),%eax;");
    asm("loc_65FB241: mov %edx,(%esp);");
    asm("loc_65FB245: mov 0x18(%eax),%edx;");
    asm("loc_65FB248: mov %ecx,8(%esp);");
    asm("loc_65FB24C: mov 0xC(%eax),%ecx;");
    asm("loc_65FB24F: push %edx;");
    asm("loc_65FB250: mov (%eax),%edx;");
    asm("loc_65FB252: push %ecx;");
    asm("loc_65FB253: push %edx;");
    asm("loc_65FB254: lea 0x30(%esp),%ecx;");
    asm("loc_65FB258: call _sub_65F4580;");
    asm("loc_65FB25D: flds 0x24(%esp);");
    asm("loc_65FB261: fmuls 4(%esp);");
    asm("loc_65FB265: mov 0x28(%esp),%ecx;");
    asm("loc_65FB269: flds 0x28(%esp);");
    asm("loc_65FB26D: mov 0x24(%esp),%eax;");
    asm("loc_65FB271: fmuls (%esp);");
    asm("loc_65FB275: mov 0x2C(%esp),%edx;");
    asm("loc_65FB279: sub $0xC,%esp;");
    asm("loc_65FB27C: mov %ecx,0x1C(%esp);");
    asm("loc_65FB280: fsubrp;");
    asm("loc_65FB282: lea 0x30(%esp),%ecx;");
    asm("loc_65FB286: mov %eax,0x18(%esp);");
    asm("loc_65FB28A: mov %edx,0x20(%esp);");
    asm("loc_65FB28E: fstps 8(%esp);");
    asm("loc_65FB292: flds 0x38(%esp);");
    asm("loc_65FB296: fmuls 0xC(%esp);");
    asm("loc_65FB29A: flds 0x30(%esp);");
    asm("loc_65FB29E: fmuls 0x14(%esp);");
    asm("loc_65FB2A2: fsubrp;");
    asm("loc_65FB2A4: fstps 4(%esp);");
    asm("loc_65FB2A8: flds 0x34(%esp);");
    asm("loc_65FB2AC: fmuls 0x14(%esp);");
    asm("loc_65FB2B0: flds 0x38(%esp);");
    asm("loc_65FB2B4: fmuls 0x10(%esp);");
    asm("loc_65FB2B8: fsubrp;");
    asm("loc_65FB2BA: fstps (%esp);");
    asm("loc_65FB2BD: call _sub_65F4580;");
    asm("loc_65FB2C2: mov 0x28(%esp),%ecx;");
    asm("loc_65FB2C6: mov 0x24(%esp),%eax;");
    asm("loc_65FB2CA: mov 0x2C(%esp),%edx;");
    asm("loc_65FB2CE: mov %ecx,0x1C(%esp);");
    asm("loc_65FB2D2: lea 0x18(%esp),%ecx;");
    asm("loc_65FB2D6: mov %eax,0x18(%esp);");
    asm("loc_65FB2DA: mov %edx,0x20(%esp);");
    asm("loc_65FB2DE: call _sub_65FB480;");
    asm("loc_65FB2E3: fdivrs _data_66011E0;");
    asm("loc_65FB2E9: sub $0xC,%esp;");
    asm("loc_65FB2EC: flds 0x24(%esp);");
    asm("loc_65FB2F0: fmul %st(1),%st;");
    asm("loc_65FB2F2: fstps 0x24(%esp);");
    asm("loc_65FB2F6: flds 0x28(%esp);");
    asm("loc_65FB2FA: fmul %st(1),%st;");
    asm("loc_65FB2FC: fstps 0x28(%esp);");
    asm("loc_65FB300: flds 0x2C(%esp);");
    asm("loc_65FB304: fmul %st(1),%st;");
    asm("loc_65FB306: fstps 0x2C(%esp);");
    asm("loc_65FB30A: fstp %st(0);");
    asm("loc_65FB30C: flds 0x28(%esp);");
    asm("loc_65FB310: fmuls 0xC(%esp);");
    asm("loc_65FB314: flds 0x10(%esp);");
    asm("loc_65FB318: fmuls 0x24(%esp);");
    asm("loc_65FB31C: fsubrp;");
    asm("loc_65FB31E: fstps 8(%esp);");
    asm("loc_65FB322: flds 0x14(%esp);");
    asm("loc_65FB326: fmuls 0x24(%esp);");
    asm("loc_65FB32A: flds 0x2C(%esp);");
    asm("loc_65FB32E: fmuls 0xC(%esp);");
    asm("loc_65FB332: fsubrp;");
    asm("loc_65FB334: fstps 4(%esp);");
    asm("loc_65FB338: flds 0x10(%esp);");
    asm("loc_65FB33C: fmuls 0x2C(%esp);");
    asm("loc_65FB340: flds 0x14(%esp);");
    asm("loc_65FB344: fmuls 0x28(%esp);");
    asm("loc_65FB348: fsubrp;");
    asm("loc_65FB34A: fstps (%esp);");
    asm("loc_65FB34D: lea 0x30(%esp),%ecx;");
    asm("loc_65FB351: call _sub_65F4580;");
    asm("loc_65FB356: mov 0x24(%esp),%eax;");
    asm("loc_65FB35A: mov 0x28(%esp),%ecx;");
    asm("loc_65FB35E: mov 0x2C(%esp),%edx;");
    asm("loc_65FB362: mov %eax,0xC(%esp);");
    asm("loc_65FB366: mov %ecx,0x10(%esp);");
    asm("loc_65FB36A: mov %edx,0x14(%esp);");
    asm("loc_65FB36E: jmp loc_65FB449;");
    asm("loc_65FB373: test $0x10,%al;");
    asm("loc_65FB375: je loc_65FB449;");
    asm("loc_65FB37B: mov 0x5C(%esp),%eax;");
    asm("loc_65FB37F: mov (%eax),%ecx;");
    asm("loc_65FB381: mov 4(%eax),%edx;");
    asm("loc_65FB384: mov 8(%eax),%eax;");
    asm("loc_65FB387: mov %eax,0x20(%esp);");
    asm("loc_65FB38B: mov 0x60(%esp),%eax;");
    asm("loc_65FB38F: mov %ecx,0x18(%esp);");
    asm("loc_65FB393: mov 0x1C(%eax),%ecx;");
    asm("loc_65FB396: push %ecx;");
    asm("loc_65FB397: mov %edx,0x20(%esp);");
    asm("loc_65FB39B: mov 0x10(%eax),%edx;");
    asm("loc_65FB39E: mov 4(%eax),%eax;");
    asm("loc_65FB3A1: push %edx;");
    asm("loc_65FB3A2: push %eax;");
    asm("loc_65FB3A3: lea 0x30(%esp),%ecx;");
    asm("loc_65FB3A7: call _sub_65F4580;");
    asm("loc_65FB3AC: mov 0x24(%esp),%ecx;");
    asm("loc_65FB3B0: mov 0x28(%esp),%edx;");
    asm("loc_65FB3B4: mov 0x2C(%esp),%eax;");
    asm("loc_65FB3B8: mov %ecx,(%esp);");
    asm("loc_65FB3BC: lea 0x18(%esp),%ecx;");
    asm("loc_65FB3C0: mov %edx,4(%esp);");
    asm("loc_65FB3C4: push %ecx;");
    asm("loc_65FB3C5: lea 4(%esp),%edx;");
    asm("loc_65FB3C9: mov %eax,0xC(%esp);");
    asm("loc_65FB3CD: push %edx;");
    asm("loc_65FB3CE: lea 0x2C(%esp),%eax;");
    asm("loc_65FB3D2: push %eax;");
    asm("loc_65FB3D3: call _sub_65FB4B0;");
    asm("loc_65FB3D8: mov (%eax),%ecx;");
    asm("loc_65FB3DA: mov %ecx,0x18(%esp);");
    asm("loc_65FB3DE: mov 4(%eax),%edx;");
    asm("loc_65FB3E1: mov %edx,0x1C(%esp);");
    asm("loc_65FB3E5: mov 8(%eax),%eax;");
    asm("loc_65FB3E8: add $0xC,%esp;");
    asm("loc_65FB3EB: lea 0xC(%esp),%ecx;");
    asm("loc_65FB3EF: mov %eax,0x14(%esp);");
    asm("loc_65FB3F3: call _sub_65FB480;");
    asm("loc_65FB3F8: fdivrs _data_66011E0;");
    asm("loc_65FB3FE: lea 0xC(%esp),%ecx;");
    asm("loc_65FB402: push %ecx;");
    asm("loc_65FB403: lea 0x1C(%esp),%edx;");
    asm("loc_65FB407: push %edx;");
    asm("loc_65FB408: lea 0x2C(%esp),%eax;");
    asm("loc_65FB40C: push %eax;");
    asm("loc_65FB40D: flds 0x18(%esp);");
    asm("loc_65FB411: fmul %st(1),%st;");
    asm("loc_65FB413: fstps 0x18(%esp);");
    asm("loc_65FB417: flds 0x1C(%esp);");
    asm("loc_65FB41B: fmul %st(1),%st;");
    asm("loc_65FB41D: fstps 0x1C(%esp);");
    asm("loc_65FB421: flds 0x20(%esp);");
    asm("loc_65FB425: fmul %st(1),%st;");
    asm("loc_65FB427: fstps 0x20(%esp);");
    asm("loc_65FB42B: fstp %st(0);");
    asm("loc_65FB42D: call _sub_65FB4B0;");
    asm("loc_65FB432: mov (%eax),%ecx;");
    asm("loc_65FB434: mov %ecx,0xC(%esp);");
    asm("loc_65FB438: mov 4(%eax),%edx;");
    asm("loc_65FB43B: mov %edx,0x10(%esp);");
    asm("loc_65FB43F: mov 8(%eax),%eax;");
    asm("loc_65FB442: add $0xC,%esp;");
    asm("loc_65FB445: mov %eax,8(%esp);");
    asm("loc_65FB449: push %esi;");
    asm("loc_65FB44A: push %edi;");
    asm("loc_65FB44B: lea 0x20(%esp),%ecx;");
    asm("loc_65FB44F: push %ecx;");
    asm("loc_65FB450: lea 0xC(%esp),%edx;");
    asm("loc_65FB454: push %edx;");
    asm("loc_65FB455: lea 0x1C(%esp),%eax;");
    asm("loc_65FB459: push %eax;");
    asm("loc_65FB45A: lea 0x44(%esp),%ecx;");
    asm("loc_65FB45E: call _sub_65FB4F0;");
    asm("loc_65FB463: mov 0x60(%esp),%eax;");
    asm("loc_65FB467: mov $9,%ecx;");
    asm("loc_65FB46C: lea 0x38(%esp),%esi;");
    asm("loc_65FB470: mov %eax,%edi;");
    asm("loc_65FB472: rep movsl (%esi),(%edi);");
    asm("loc_65FB474: pop %edi;");
    asm("loc_65FB475: pop %esi;");
    asm("loc_65FB476: add $0x54,%esp;");
    asm("loc_65FB479: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FB480() // _sub_65FB480
{
    __DEBUG_ASM(65FB480);
    // chunk 0x65FB480 _sub_65FB480
    asm("loc_65FB480: flds 8(%ecx);");
    asm("loc_65FB483: flds 4(%ecx);");
    asm("loc_65FB486: flds (%ecx);");
    asm("loc_65FB488: fld %st(0);");
    asm("loc_65FB48A: fmul %st(1),%st;");
    asm("loc_65FB48C: fld %st(2);");
    asm("loc_65FB48E: fmul %st(3),%st;");
    asm("loc_65FB490: faddp;");
    asm("loc_65FB492: fld %st(3);");
    asm("loc_65FB494: fmul %st(4),%st;");
    asm("loc_65FB496: faddp;");
    asm("loc_65FB498: fsqrt;");
    asm("loc_65FB49A: fstp %st(3);");
    asm("loc_65FB49C: fstp %st(0);");
    asm("loc_65FB49E: fstp %st(0);");
    asm("loc_65FB4A0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FB4B0() // _sub_65FB4B0
{
    __DEBUG_ASM(65FB4B0);
    // chunk 0x65FB4B0 _sub_65FB4B0
    asm("loc_65FB4B0: mov 8(%esp),%ecx;");
    asm("loc_65FB4B4: mov 0xC(%esp),%eax;");
    asm("loc_65FB4B8: flds (%ecx);");
    asm("loc_65FB4BA: fmuls 4(%eax);");
    asm("loc_65FB4BD: flds 4(%ecx);");
    asm("loc_65FB4C0: fmuls (%eax);");
    asm("loc_65FB4C2: fsubrp;");
    asm("loc_65FB4C4: flds 8(%ecx);");
    asm("loc_65FB4C7: fmuls (%eax);");
    asm("loc_65FB4C9: flds 8(%eax);");
    asm("loc_65FB4CC: fmuls (%ecx);");
    asm("loc_65FB4CE: fsubrp;");
    asm("loc_65FB4D0: flds 4(%ecx);");
    asm("loc_65FB4D3: fmuls 8(%eax);");
    asm("loc_65FB4D6: flds 8(%ecx);");
    asm("loc_65FB4D9: fmuls 4(%eax);");
    asm("loc_65FB4DC: mov 4(%esp),%eax;");
    asm("loc_65FB4E0: fsubrp;");
    asm("loc_65FB4E2: fstps (%eax);");
    asm("loc_65FB4E4: fstps 4(%eax);");
    asm("loc_65FB4E7: fstps 8(%eax);");
    asm("loc_65FB4EA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FB4F0() // _sub_65FB4F0
{
    __DEBUG_ASM(65FB4F0);
    // chunk 0x65FB4F0 _sub_65FB4F0
    asm("loc_65FB4F0: mov %ecx,%eax;");
    asm("loc_65FB4F2: mov 4(%esp),%ecx;");
    asm("loc_65FB4F6: mov (%ecx),%edx;");
    asm("loc_65FB4F8: mov %edx,(%eax);");
    asm("loc_65FB4FA: mov 4(%ecx),%edx;");
    asm("loc_65FB4FD: mov %edx,0xC(%eax);");
    asm("loc_65FB500: mov 8(%ecx),%ecx;");
    asm("loc_65FB503: mov %ecx,0x18(%eax);");
    asm("loc_65FB506: mov 8(%esp),%ecx;");
    asm("loc_65FB50A: mov (%ecx),%edx;");
    asm("loc_65FB50C: mov %edx,4(%eax);");
    asm("loc_65FB50F: mov 4(%ecx),%edx;");
    asm("loc_65FB512: mov %edx,0x10(%eax);");
    asm("loc_65FB515: mov 8(%ecx),%ecx;");
    asm("loc_65FB518: mov %ecx,0x1C(%eax);");
    asm("loc_65FB51B: mov 0xC(%esp),%ecx;");
    asm("loc_65FB51F: mov (%ecx),%edx;");
    asm("loc_65FB521: mov %edx,8(%eax);");
    asm("loc_65FB524: mov 4(%ecx),%edx;");
    asm("loc_65FB527: mov %edx,0x14(%eax);");
    asm("loc_65FB52A: mov 8(%ecx),%ecx;");
    asm("loc_65FB52D: mov %ecx,0x20(%eax);");
    asm("loc_65FB530: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FB540() // _sub_65FB540
{
    __DEBUG_ASM(65FB540);
    // chunk 0x65FB540 _sub_65FB540
    asm("loc_65FB540: sub $0xB0,%esp;");
    asm("loc_65FB546: push %ebp;");
    asm("loc_65FB547: mov %ecx,%ebp;");
    asm("loc_65FB549: testb $1,0x34(%ebp);");
    asm("loc_65FB54D: push %esi;");
    asm("loc_65FB54E: push %edi;");
    asm("loc_65FB54F: je loc_65FB5B2;");
    asm("loc_65FB551: mov 0x40(%ebp),%edx;");
    asm("loc_65FB554: xor %eax,%eax;");
    asm("loc_65FB556: test %edx,%edx;");
    asm("loc_65FB558: jle loc_65FB5A1;");
    asm("loc_65FB55A: mov 0x18(%ebp),%ecx;");
    asm("loc_65FB55D: mov 0xC4(%esp),%esi;");
    asm("loc_65FB564: cmp %esi,(%ecx);");
    asm("loc_65FB566: je loc_65FB581;");
    asm("loc_65FB568: inc %eax;");
    asm("loc_65FB569: add $4,%ecx;");
    asm("loc_65FB56C: cmp %edx,%eax;");
    asm("loc_65FB56E: jl loc_65FB564;");
    asm("loc_65FB570: pop %edi;");
    asm("loc_65FB571: pop %esi;");
    asm("loc_65FB572: mov $1,%eax;");
    asm("loc_65FB577: pop %ebp;");
    asm("loc_65FB578: add $0xB0,%esp;");
    asm("loc_65FB57E: ret $0x10;");
    asm("loc_65FB581: mov 0xC0(%esp),%esi;");
    asm("loc_65FB588: mov _data_6603134,%ecx;");
    asm("loc_65FB58E: mov (%ecx),%edx;");
    asm("loc_65FB590: push %esi;");
    asm("loc_65FB591: mov 8(%ebp),%esi;");
    asm("loc_65FB594: mov (%esi,%eax,4),%eax;");
    asm("loc_65FB597: push $0;");
    asm("loc_65FB599: push %eax;");
    asm("loc_65FB59A: push %ecx;");
    asm("loc_65FB59B: calll *0xCC(%edx);");
    asm("loc_65FB5A1: pop %edi;");
    asm("loc_65FB5A2: pop %esi;");
    asm("loc_65FB5A3: mov $1,%eax;");
    asm("loc_65FB5A8: pop %ebp;");
    asm("loc_65FB5A9: add $0xB0,%esp;");
    asm("loc_65FB5AF: ret $0x10;");
    asm("loc_65FB5B2: mov 0x3C(%ebp),%eax;");
    asm("loc_65FB5B5: test %eax,%eax;");
    asm("loc_65FB5B7: lea 1(%eax),%ecx;");
    asm("loc_65FB5BA: mov %ecx,0x3C(%ebp);");
    asm("loc_65FB5BD: jne loc_65FB88F;");
    asm("loc_65FB5C3: mov 0xC8(%esp),%esi;");
    asm("loc_65FB5CA: cmpl $0,(%esi);");
    asm("loc_65FB5CD: jne loc_65FB88F;");
    asm("loc_65FB5D3: mov 0xC(%esi),%ecx;");
    asm("loc_65FB5D6: mov _data_6603134,%eax;");
    asm("loc_65FB5DB: mov (%eax),%edx;");
    asm("loc_65FB5DD: push %ecx;");
    asm("loc_65FB5DE: push %eax;");
    asm("loc_65FB5DF: calll *0xC4(%edx);");
    asm("loc_65FB5E5: mov %eax,0x18(%esp);");
    asm("loc_65FB5E9: cmpl $1,0x40(%ebp);");
    asm("loc_65FB5ED: jne loc_65FB87B;");
    asm("loc_65FB5F3: mov _data_6603134,%eax;");
    asm("loc_65FB5F8: mov (%eax),%edx;");
    asm("loc_65FB5FA: push %ebx;");
    asm("loc_65FB5FB: mov 0xC(%esi),%ebx;");
    asm("loc_65FB5FE: push %ebx;");
    asm("loc_65FB5FF: push %eax;");
    asm("loc_65FB600: calll *0xD4(%edx);");
    asm("loc_65FB606: mov _data_6603134,%ecx;");
    asm("loc_65FB60C: mov (%ecx),%edx;");
    asm("loc_65FB60E: push %eax;");
    asm("loc_65FB60F: push %ecx;");
    asm("loc_65FB610: calll *0x98(%edx);");
    asm("loc_65FB616: mov %eax,%esi;");
    asm("loc_65FB618: testb $0x40,0x28(%ebp);");
    asm("loc_65FB61C: mov $9,%ecx;");
    asm("loc_65FB621: lea 0x20(%esp),%edi;");
    asm("loc_65FB625: rep movsl (%esi),(%edi);");
    asm("loc_65FB627: je loc_65FB6C2;");
    asm("loc_65FB62D: flds 0x20(%esp);");
    asm("loc_65FB631: mov _data_66033A8,%eax;");
    asm("loc_65FB636: test %eax,%eax;");
    asm("loc_65FB638: fstps 0x44(%esp);");
    asm("loc_65FB63C: flds 0x2C(%esp);");
    asm("loc_65FB640: mov 0x24(%ebp),%esi;");
    asm("loc_65FB643: fstps 0x48(%esp);");
    asm("loc_65FB647: flds 0x38(%esp);");
    asm("loc_65FB64B: fstps 0x4C(%esp);");
    asm("loc_65FB64F: flds 0x24(%esp);");
    asm("loc_65FB653: fstps 0x50(%esp);");
    asm("loc_65FB657: flds 0x30(%esp);");
    asm("loc_65FB65B: fstps 0x54(%esp);");
    asm("loc_65FB65F: flds 0x3C(%esp);");
    asm("loc_65FB663: fstps 0x58(%esp);");
    asm("loc_65FB667: flds 0x28(%esp);");
    asm("loc_65FB66B: fstps 0x5C(%esp);");
    asm("loc_65FB66F: flds 0x34(%esp);");
    asm("loc_65FB673: fstps 0x60(%esp);");
    asm("loc_65FB677: flds 0x40(%esp);");
    asm("loc_65FB67B: fstps 0x64(%esp);");
    asm("loc_65FB67F: jne loc_65FB68B;");
    asm("loc_65FB681: call _sub_6600DE0;");
    asm("loc_65FB686: mov %eax,_data_66033A8;");
    asm("loc_65FB68B: mov (%eax),%ecx;");
    asm("loc_65FB68D: push %esi;");
    asm("loc_65FB68E: lea 0x48(%esp),%edx;");
    asm("loc_65FB692: push %edx;");
    asm("loc_65FB693: lea 0x28(%esp),%edx;");
    asm("loc_65FB697: push %edx;");
    asm("loc_65FB698: push %eax;");
    asm("loc_65FB699: calll *0x20(%ecx);");
    asm("loc_65FB69C: mov 0x28(%ebp),%al;");
    asm("loc_65FB69F: test %al,%al;");
    asm("loc_65FB6A1: mov $9,%ecx;");
    asm("loc_65FB6A6: lea 0x20(%esp),%esi;");
    asm("loc_65FB6AA: lea 0x78(%esp),%edi;");
    asm("loc_65FB6AE: rep movsl (%esi),(%edi);");
    asm("loc_65FB6B0: js loc_65FB837;");
    asm("loc_65FB6B6: lea 0x9C(%esp),%edx;");
    asm("loc_65FB6BD: jmp loc_65FB814;");
    asm("loc_65FB6C2: mov _data_6603134,%eax;");
    asm("loc_65FB6C7: mov (%eax),%ecx;");
    asm("loc_65FB6C9: push %ebx;");
    asm("loc_65FB6CA: push %eax;");
    asm("loc_65FB6CB: calll *0x90(%ecx);");
    asm("loc_65FB6D1: mov 4(%eax),%ecx;");
    asm("loc_65FB6D4: mov (%eax),%edx;");
    asm("loc_65FB6D6: mov %ecx,0x14(%esp);");
    asm("loc_65FB6DA: mov 0x28(%ebp),%ecx;");
    asm("loc_65FB6DD: test $1,%cl;");
    asm("loc_65FB6E0: mov %edx,0x10(%esp);");
    asm("loc_65FB6E4: mov 8(%eax),%edx;");
    asm("loc_65FB6E7: mov 0x20(%ebp),%eax;");
    asm("loc_65FB6EA: mov %edx,0x18(%esp);");
    asm("loc_65FB6EE: je loc_65FB714;");
    asm("loc_65FB6F0: flds (%eax);");
    asm("loc_65FB6F2: fsubs 0x10(%esp);");
    asm("loc_65FB6F6: fstps 0x68(%esp);");
    asm("loc_65FB6FA: flds 4(%eax);");
    asm("loc_65FB6FD: fsubs 0x14(%esp);");
    asm("loc_65FB701: fstps 0x6C(%esp);");
    asm("loc_65FB705: flds 8(%eax);");
    asm("loc_65FB708: lea 0x68(%esp),%eax;");
    asm("loc_65FB70C: fsubs 0x18(%esp);");
    asm("loc_65FB710: fstps 0x70(%esp);");
    asm("loc_65FB714: mov (%eax),%edx;");
    asm("loc_65FB716: mov %edx,0x10(%esp);");
    asm("loc_65FB71A: mov 4(%eax),%edx;");
    asm("loc_65FB71D: mov 8(%eax),%eax;");
    asm("loc_65FB720: mov %edx,0x14(%esp);");
    asm("loc_65FB724: flds 0x14(%esp);");
    asm("loc_65FB728: fmuls 0x14(%esp);");
    asm("loc_65FB72C: mov %eax,0x18(%esp);");
    asm("loc_65FB730: flds 0x18(%esp);");
    asm("loc_65FB734: push %ecx;");
    asm("loc_65FB735: fmuls 0x1C(%esp);");
    asm("loc_65FB739: lea 0x24(%esp),%ecx;");
    asm("loc_65FB73D: push %ecx;");
    asm("loc_65FB73E: lea 0x18(%esp),%edx;");
    asm("loc_65FB742: faddp;");
    asm("loc_65FB744: push %edx;");
    asm("loc_65FB745: flds 0x1C(%esp);");
    asm("loc_65FB749: lea 0xA8(%esp),%eax;");
    asm("loc_65FB750: fmuls 0x1C(%esp);");
    asm("loc_65FB754: push %eax;");
    asm("loc_65FB755: faddp;");
    asm("loc_65FB757: fsqrt;");
    asm("loc_65FB759: fdivrs _data_66011E0;");
    asm("loc_65FB75F: flds 0x20(%esp);");
    asm("loc_65FB763: fmul %st(1),%st;");
    asm("loc_65FB765: fstps 0x20(%esp);");
    asm("loc_65FB769: flds 0x24(%esp);");
    asm("loc_65FB76D: fmul %st(1),%st;");
    asm("loc_65FB76F: fstps 0x24(%esp);");
    asm("loc_65FB773: flds 0x28(%esp);");
    asm("loc_65FB777: fmul %st(1),%st;");
    asm("loc_65FB779: fstps 0x28(%esp);");
    asm("loc_65FB77D: fstp %st(0);");
    asm("loc_65FB77F: call _sub_65FB100;");
    asm("loc_65FB784: flds 0x30(%esp);");
    asm("loc_65FB788: mov _data_66033A8,%eax;");
    asm("loc_65FB78D: fstps 0x54(%esp);");
    asm("loc_65FB791: flds 0x3C(%esp);");
    asm("loc_65FB795: add $0x10,%esp;");
    asm("loc_65FB798: test %eax,%eax;");
    asm("loc_65FB79A: fstps 0x48(%esp);");
    asm("loc_65FB79E: flds 0x38(%esp);");
    asm("loc_65FB7A2: fstps 0x4C(%esp);");
    asm("loc_65FB7A6: flds 0x24(%esp);");
    asm("loc_65FB7AA: fstps 0x50(%esp);");
    asm("loc_65FB7AE: flds 0x30(%esp);");
    asm("loc_65FB7B2: fstps 0x54(%esp);");
    asm("loc_65FB7B6: flds 0x3C(%esp);");
    asm("loc_65FB7BA: fstps 0x58(%esp);");
    asm("loc_65FB7BE: flds 0x28(%esp);");
    asm("loc_65FB7C2: fstps 0x5C(%esp);");
    asm("loc_65FB7C6: flds 0x34(%esp);");
    asm("loc_65FB7CA: fstps 0x60(%esp);");
    asm("loc_65FB7CE: flds 0x40(%esp);");
    asm("loc_65FB7D2: fstps 0x64(%esp);");
    asm("loc_65FB7D6: jne loc_65FB7E2;");
    asm("loc_65FB7D8: call _sub_6600DE0;");
    asm("loc_65FB7DD: mov %eax,_data_66033A8;");
    asm("loc_65FB7E2: mov (%eax),%ecx;");
    asm("loc_65FB7E4: lea 0x9C(%esp),%edx;");
    asm("loc_65FB7EB: push %edx;");
    asm("loc_65FB7EC: lea 0x48(%esp),%edx;");
    asm("loc_65FB7F0: push %edx;");
    asm("loc_65FB7F1: lea 0x28(%esp),%edx;");
    asm("loc_65FB7F5: push %edx;");
    asm("loc_65FB7F6: push %eax;");
    asm("loc_65FB7F7: calll *0x20(%ecx);");
    asm("loc_65FB7FA: mov 0x28(%ebp),%al;");
    asm("loc_65FB7FD: test %al,%al;");
    asm("loc_65FB7FF: mov $9,%ecx;");
    asm("loc_65FB804: lea 0x20(%esp),%esi;");
    asm("loc_65FB808: lea 0x78(%esp),%edi;");
    asm("loc_65FB80C: rep movsl (%esi),(%edi);");
    asm("loc_65FB80E: js loc_65FB837;");
    asm("loc_65FB810: lea 0x44(%esp),%edx;");
    asm("loc_65FB814: mov 0x1C(%esp),%ecx;");
    asm("loc_65FB818: lea 0x78(%esp),%eax;");
    asm("loc_65FB81C: push %eax;");
    asm("loc_65FB81D: push %ecx;");
    asm("loc_65FB81E: push %edx;");
    asm("loc_65FB81F: call _sub_65FB900;");
    asm("loc_65FB824: mov %eax,%esi;");
    asm("loc_65FB826: lea 0x84(%esp),%edi;");
    asm("loc_65FB82D: mov $9,%ecx;");
    asm("loc_65FB832: add $0xC,%esp;");
    asm("loc_65FB835: rep movsl (%esi),(%edi);");
    asm("loc_65FB837: mov _data_66033A8,%eax;");
    asm("loc_65FB83C: test %eax,%eax;");
    asm("loc_65FB83E: pop %ebx;");
    asm("loc_65FB83F: jne loc_65FB84B;");
    asm("loc_65FB841: call _sub_6600DE0;");
    asm("loc_65FB846: mov %eax,_data_66033A8;");
    asm("loc_65FB84B: mov (%eax),%ecx;");
    asm("loc_65FB84D: lea 0x74(%esp),%edx;");
    asm("loc_65FB851: push %edx;");
    asm("loc_65FB852: lea 0x68(%esp),%edx;");
    asm("loc_65FB856: push %edx;");
    asm("loc_65FB857: push %eax;");
    asm("loc_65FB858: calll *0x50(%ecx);");
    asm("loc_65FB85B: mov 0x64(%esp),%ecx;");
    asm("loc_65FB85F: mov 0x1C(%ebp),%eax;");
    asm("loc_65FB862: mov %ecx,(%eax);");
    asm("loc_65FB864: mov 0x68(%esp),%edx;");
    asm("loc_65FB868: mov %edx,4(%eax);");
    asm("loc_65FB86B: mov 0x6C(%esp),%ecx;");
    asm("loc_65FB86F: mov %ecx,8(%eax);");
    asm("loc_65FB872: mov 0x70(%esp),%edx;");
    asm("loc_65FB876: mov %edx,0xC(%eax);");
    asm("loc_65FB879: jmp loc_65FB88F;");
    asm("loc_65FB87B: testb $2,0x34(%ebp);");
    asm("loc_65FB87F: mov %ebp,%ecx;");
    asm("loc_65FB881: je loc_65FB88A;");
    asm("loc_65FB883: call _sub_65FCE60;");
    asm("loc_65FB888: jmp loc_65FB88F;");
    asm("loc_65FB88A: call _sub_65FC000;");
    asm("loc_65FB88F: mov 0x40(%ebp),%edx;");
    asm("loc_65FB892: cmp %edx,0x3C(%ebp);");
    asm("loc_65FB895: jne loc_65FB89E;");
    asm("loc_65FB897: movl $0,0x3C(%ebp);");
    asm("loc_65FB89E: xor %eax,%eax;");
    asm("loc_65FB8A0: test %edx,%edx;");
    asm("loc_65FB8A2: jle loc_65FB8EF;");
    asm("loc_65FB8A4: mov 0x18(%ebp),%ecx;");
    asm("loc_65FB8A7: mov 0xC4(%esp),%esi;");
    asm("loc_65FB8AE: mov %edi,%edi;");
    asm("loc_65FB8B0: cmp %esi,(%ecx);");
    asm("loc_65FB8B2: je loc_65FB8CA;");
    asm("loc_65FB8B4: inc %eax;");
    asm("loc_65FB8B5: add $4,%ecx;");
    asm("loc_65FB8B8: cmp %edx,%eax;");
    asm("loc_65FB8BA: jl loc_65FB8B0;");
    asm("loc_65FB8BC: pop %edi;");
    asm("loc_65FB8BD: pop %esi;");
    asm("loc_65FB8BE: xor %eax,%eax;");
    asm("loc_65FB8C0: pop %ebp;");
    asm("loc_65FB8C1: add $0xB0,%esp;");
    asm("loc_65FB8C7: ret $0x10;");
    asm("loc_65FB8CA: mov 0x1C(%ebp),%ecx;");
    asm("loc_65FB8CD: shl $4,%eax;");
    asm("loc_65FB8D0: add %ecx,%eax;");
    asm("loc_65FB8D2: mov (%eax),%edx;");
    asm("loc_65FB8D4: mov 0xC0(%esp),%ecx;");
    asm("loc_65FB8DB: mov %edx,(%ecx);");
    asm("loc_65FB8DD: mov 4(%eax),%edx;");
    asm("loc_65FB8E0: mov %edx,4(%ecx);");
    asm("loc_65FB8E3: mov 8(%eax),%edx;");
    asm("loc_65FB8E6: mov %edx,8(%ecx);");
    asm("loc_65FB8E9: mov 0xC(%eax),%eax;");
    asm("loc_65FB8EC: mov %eax,0xC(%ecx);");
    asm("loc_65FB8EF: pop %edi;");
    asm("loc_65FB8F0: pop %esi;");
    asm("loc_65FB8F1: xor %eax,%eax;");
    asm("loc_65FB8F3: pop %ebp;");
    asm("loc_65FB8F4: add $0xB0,%esp;");
    asm("loc_65FB8FA: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FB900() // _sub_65FB900
{
    __DEBUG_ASM(65FB900);
    // chunk 0x65FB900 _sub_65FB900
    asm("loc_65FB900: sub $0x54,%esp;");
    asm("loc_65FB903: push %esi;");
    asm("loc_65FB904: mov 0x64(%esp),%esi;");
    asm("loc_65FB908: mov 0x18(%esi),%eax;");
    asm("loc_65FB90B: mov 0xC(%esi),%ecx;");
    asm("loc_65FB90E: mov (%esi),%edx;");
    asm("loc_65FB910: push %edi;");
    asm("loc_65FB911: push %eax;");
    asm("loc_65FB912: push %ecx;");
    asm("loc_65FB913: push %edx;");
    asm("loc_65FB914: lea 0x20(%esp),%ecx;");
    asm("loc_65FB918: call _sub_65F4580;");
    asm("loc_65FB91D: mov 0x1C(%esi),%eax;");
    asm("loc_65FB920: mov 0x10(%esi),%ecx;");
    asm("loc_65FB923: mov 4(%esi),%edx;");
    asm("loc_65FB926: push %eax;");
    asm("loc_65FB927: push %ecx;");
    asm("loc_65FB928: push %edx;");
    asm("loc_65FB929: lea 0x38(%esp),%ecx;");
    asm("loc_65FB92D: call _sub_65F4580;");
    asm("loc_65FB932: mov 0x20(%esi),%eax;");
    asm("loc_65FB935: mov 0x14(%esi),%ecx;");
    asm("loc_65FB938: mov 8(%esi),%edx;");
    asm("loc_65FB93B: push %eax;");
    asm("loc_65FB93C: push %ecx;");
    asm("loc_65FB93D: push %edx;");
    asm("loc_65FB93E: lea 0x2C(%esp),%ecx;");
    asm("loc_65FB942: call _sub_65F4580;");
    asm("loc_65FB947: flds 0x14(%esp);");
    asm("loc_65FB94B: fmuls 0x14(%esp);");
    asm("loc_65FB94F: flds 0x18(%esp);");
    asm("loc_65FB953: fmuls 0x18(%esp);");
    asm("loc_65FB957: faddp;");
    asm("loc_65FB959: fsqrt;");
    asm("loc_65FB95B: fcoms _data_66013A8;");
    asm("loc_65FB961: fnstsw %ax;");
    asm("loc_65FB963: test $0x41,%ah;");
    asm("loc_65FB966: jne loc_65FB994;");
    asm("loc_65FB968: flds 0x34(%esp);");
    asm("loc_65FB96C: flds 0x28(%esp);");
    asm("loc_65FB970: fpatan;");
    asm("loc_65FB972: fstps 0x68(%esp);");
    asm("loc_65FB976: flds 0x1C(%esp);");
    asm("loc_65FB97A: fchs;");
    asm("loc_65FB97C: fxch;");
    asm("loc_65FB97E: fpatan;");
    asm("loc_65FB980: fstps 8(%esp);");
    asm("loc_65FB984: flds 0x18(%esp);");
    asm("loc_65FB988: flds 0x14(%esp);");
    asm("loc_65FB98C: fpatan;");
    asm("loc_65FB98E: fstps 0xC(%esp);");
    asm("loc_65FB992: jmp loc_65FB9BA;");
    asm("loc_65FB994: flds 0x24(%esp);");
    asm("loc_65FB998: movl $0,0xC(%esp);");
    asm("loc_65FB9A0: fchs;");
    asm("loc_65FB9A2: flds 0x30(%esp);");
    asm("loc_65FB9A6: fpatan;");
    asm("loc_65FB9A8: fstps 0x68(%esp);");
    asm("loc_65FB9AC: flds 0x1C(%esp);");
    asm("loc_65FB9B0: fchs;");
    asm("loc_65FB9B2: fxch;");
    asm("loc_65FB9B4: fpatan;");
    asm("loc_65FB9B6: fstps 8(%esp);");
    asm("loc_65FB9BA: mov 0xC(%esp),%eax;");
    asm("loc_65FB9BE: mov 8(%esp),%ecx;");
    asm("loc_65FB9C2: mov 0x68(%esp),%edx;");
    asm("loc_65FB9C6: mov 0x64(%esp),%edi;");
    asm("loc_65FB9CA: push %ebx;");
    asm("loc_65FB9CB: push %eax;");
    asm("loc_65FB9CC: push %ecx;");
    asm("loc_65FB9CD: push %edx;");
    asm("loc_65FB9CE: push %edi;");
    asm("loc_65FB9CF: call _sub_65FB090;");
    asm("loc_65FB9D4: mov %eax,%ebx;");
    asm("loc_65FB9D6: add $0x10,%esp;");
    asm("loc_65FB9D9: test %ebx,%ebx;");
    asm("loc_65FB9DB: je loc_65FBA28;");
    asm("loc_65FB9DD: push $1;");
    asm("loc_65FB9DF: push %esi;");
    asm("loc_65FB9E0: lea 0x20(%esp),%eax;");
    asm("loc_65FB9E4: push %eax;");
    asm("loc_65FB9E5: lea 0x20(%esp),%ecx;");
    asm("loc_65FB9E9: push %ecx;");
    asm("loc_65FB9EA: lea 0x78(%esp),%edx;");
    asm("loc_65FB9EE: push %edx;");
    asm("loc_65FB9EF: call _sub_65FBB90;");
    asm("loc_65FB9F4: mov 0x2C(%esp),%eax;");
    asm("loc_65FB9F8: mov 0x28(%esp),%ecx;");
    asm("loc_65FB9FC: mov 0x7C(%esp),%edx;");
    asm("loc_65FBA00: push %eax;");
    asm("loc_65FBA01: push %ecx;");
    asm("loc_65FBA02: push %edx;");
    asm("loc_65FBA03: push %edi;");
    asm("loc_65FBA04: call _sub_65FB090;");
    asm("loc_65FBA09: add $0x24,%esp;");
    asm("loc_65FBA0C: cmp %ebx,%eax;");
    asm("loc_65FBA0E: jg loc_65FBA28;");
    asm("loc_65FBA10: mov 0x68(%esp),%eax;");
    asm("loc_65FBA14: mov 0x14(%esp),%ecx;");
    asm("loc_65FBA18: mov 0x18(%esp),%edx;");
    asm("loc_65FBA1C: mov %eax,0x6C(%esp);");
    asm("loc_65FBA20: mov %ecx,0xC(%esp);");
    asm("loc_65FBA24: mov %edx,0x10(%esp);");
    asm("loc_65FBA28: flds 0x6C(%esp);");
    asm("loc_65FBA2C: xor %cl,%cl;");
    asm("loc_65FBA2E: fcomps 0x4C(%edi);");
    asm("loc_65FBA31: pop %ebx;");
    asm("loc_65FBA32: fnstsw %ax;");
    asm("loc_65FBA34: test $5,%ah;");
    asm("loc_65FBA37: jp loc_65FBA42;");
    asm("loc_65FBA39: mov 0x4C(%edi),%eax;");
    asm("loc_65FBA3C: mov %eax,0x68(%esp);");
    asm("loc_65FBA40: mov $1,%cl;");
    asm("loc_65FBA42: flds 0x68(%esp);");
    asm("loc_65FBA46: fcomps 0x50(%edi);");
    asm("loc_65FBA49: fnstsw %ax;");
    asm("loc_65FBA4B: test $0x41,%ah;");
    asm("loc_65FBA4E: jne loc_65FBA59;");
    asm("loc_65FBA50: mov 0x50(%edi),%ecx;");
    asm("loc_65FBA53: mov %ecx,0x68(%esp);");
    asm("loc_65FBA57: mov $1,%cl;");
    asm("loc_65FBA59: flds 8(%esp);");
    asm("loc_65FBA5D: fcomps 0x54(%edi);");
    asm("loc_65FBA60: fnstsw %ax;");
    asm("loc_65FBA62: test $5,%ah;");
    asm("loc_65FBA65: jp loc_65FBA70;");
    asm("loc_65FBA67: mov 0x54(%edi),%edx;");
    asm("loc_65FBA6A: mov %edx,8(%esp);");
    asm("loc_65FBA6E: mov $1,%cl;");
    asm("loc_65FBA70: flds 8(%esp);");
    asm("loc_65FBA74: fcomps 0x58(%edi);");
    asm("loc_65FBA77: fnstsw %ax;");
    asm("loc_65FBA79: test $0x41,%ah;");
    asm("loc_65FBA7C: jne loc_65FBA87;");
    asm("loc_65FBA7E: mov 0x58(%edi),%eax;");
    asm("loc_65FBA81: mov %eax,8(%esp);");
    asm("loc_65FBA85: mov $1,%cl;");
    asm("loc_65FBA87: flds 0xC(%esp);");
    asm("loc_65FBA8B: fcomps 0x40(%edi);");
    asm("loc_65FBA8E: fnstsw %ax;");
    asm("loc_65FBA90: test $5,%ah;");
    asm("loc_65FBA93: jp loc_65FBA9E;");
    asm("loc_65FBA95: mov 0x40(%edi),%ecx;");
    asm("loc_65FBA98: mov %ecx,0xC(%esp);");
    asm("loc_65FBA9C: mov $1,%cl;");
    asm("loc_65FBA9E: flds 0xC(%esp);");
    asm("loc_65FBAA2: fcomps 0x44(%edi);");
    asm("loc_65FBAA5: fnstsw %ax;");
    asm("loc_65FBAA7: test $0x41,%ah;");
    asm("loc_65FBAAA: jne loc_65FBAB5;");
    asm("loc_65FBAAC: mov 0x44(%edi),%edx;");
    asm("loc_65FBAAF: mov %edx,0xC(%esp);");
    asm("loc_65FBAB3: jmp loc_65FBABD;");
    asm("loc_65FBAB5: test %cl,%cl;");
    asm("loc_65FBAB7: je loc_65FBB65;");
    asm("loc_65FBABD: flds 0x68(%esp);");
    asm("loc_65FBAC1: fsin;");
    asm("loc_65FBAC3: flds 0x68(%esp);");
    asm("loc_65FBAC7: fcos;");
    asm("loc_65FBAC9: flds 8(%esp);");
    asm("loc_65FBACD: fsin;");
    asm("loc_65FBACF: flds 8(%esp);");
    asm("loc_65FBAD3: fcos;");
    asm("loc_65FBAD5: fstpl 0x14(%esp);");
    asm("loc_65FBAD9: flds 0xC(%esp);");
    asm("loc_65FBADD: fsin;");
    asm("loc_65FBADF: flds 0xC(%esp);");
    asm("loc_65FBAE3: fcos;");
    asm("loc_65FBAE5: fld %st(2);");
    asm("loc_65FBAE7: fmul %st(5),%st;");
    asm("loc_65FBAE9: fld %st(2);");
    asm("loc_65FBAEB: fmul %st(5),%st;");
    asm("loc_65FBAED: fstps 0x64(%esp);");
    asm("loc_65FBAF1: fld %st(1);");
    asm("loc_65FBAF3: fmul %st(5),%st;");
    asm("loc_65FBAF5: fstps 0x68(%esp);");
    asm("loc_65FBAF9: fld %st(1);");
    asm("loc_65FBAFB: fmull 0x14(%esp);");
    asm("loc_65FBAFF: fstps 0x38(%esp);");
    asm("loc_65FBB03: fld %st(0);");
    asm("loc_65FBB05: fmul %st(2),%st;");
    asm("loc_65FBB07: fsubs 0x64(%esp);");
    asm("loc_65FBB0B: fstps 0x3C(%esp);");
    asm("loc_65FBB0F: flds 0x68(%esp);");
    asm("loc_65FBB13: fmul %st(4),%st;");
    asm("loc_65FBB15: fld %st(3);");
    asm("loc_65FBB17: fmul %st(7),%st;");
    asm("loc_65FBB19: faddp;");
    asm("loc_65FBB1B: fstps 0x40(%esp);");
    asm("loc_65FBB1F: fld %st(2);");
    asm("loc_65FBB21: fmull 0x14(%esp);");
    asm("loc_65FBB25: fstps 0x44(%esp);");
    asm("loc_65FBB29: fmul %st(2),%st;");
    asm("loc_65FBB2B: fadds 0x68(%esp);");
    asm("loc_65FBB2F: fstps 0x48(%esp);");
    asm("loc_65FBB33: flds 0x64(%esp);");
    asm("loc_65FBB37: fmul %st(3),%st;");
    asm("loc_65FBB39: fxch;");
    asm("loc_65FBB3B: fmul %st(5),%st;");
    asm("loc_65FBB3D: fsubrp;");
    asm("loc_65FBB3F: fstps 0x4C(%esp);");
    asm("loc_65FBB43: fstp %st(0);");
    asm("loc_65FBB45: fchs;");
    asm("loc_65FBB47: fstps 0x50(%esp);");
    asm("loc_65FBB4B: fldl 0x14(%esp);");
    asm("loc_65FBB4F: fmul %st(2),%st;");
    asm("loc_65FBB51: fstps 0x54(%esp);");
    asm("loc_65FBB55: fldl 0x14(%esp);");
    asm("loc_65FBB59: fmul %st(1),%st;");
    asm("loc_65FBB5B: fstps 0x58(%esp);");
    asm("loc_65FBB5F: fstp %st(0);");
    asm("loc_65FBB61: fstp %st(0);");
    asm("loc_65FBB63: jmp loc_65FBB70;");
    asm("loc_65FBB65: mov $9,%ecx;");
    asm("loc_65FBB6A: lea 0x38(%esp),%edi;");
    asm("loc_65FBB6E: rep movsl (%esi),(%edi);");
    asm("loc_65FBB70: mov 0x60(%esp),%eax;");
    asm("loc_65FBB74: mov $9,%ecx;");
    asm("loc_65FBB79: lea 0x38(%esp),%esi;");
    asm("loc_65FBB7D: mov %eax,%edi;");
    asm("loc_65FBB7F: rep movsl (%esi),(%edi);");
    asm("loc_65FBB81: pop %edi;");
    asm("loc_65FBB82: pop %esi;");
    asm("loc_65FBB83: add $0x54,%esp;");
    asm("loc_65FBB86: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBB90() // _sub_65FBB90
{
    __DEBUG_ASM(65FBB90);
    // chunk 0x65FBB90 _sub_65FBB90
    asm("loc_65FBB90: sub $0x24,%esp;");
    asm("loc_65FBB93: mov 0x34(%esp),%eax;");
    asm("loc_65FBB97: flds (%eax);");
    asm("loc_65FBB99: mov 0x2C(%esp),%ecx;");
    asm("loc_65FBB9D: fstps (%esp);");
    asm("loc_65FBBA1: flds 0xC(%eax);");
    asm("loc_65FBBA4: mov 0x30(%esp),%edx;");
    asm("loc_65FBBA8: fstps 4(%esp);");
    asm("loc_65FBBAC: flds 0x18(%eax);");
    asm("loc_65FBBAF: flds 0x10(%eax);");
    asm("loc_65FBBB2: fstps 0x1C(%esp);");
    asm("loc_65FBBB6: flds 0x1C(%eax);");
    asm("loc_65FBBB9: fstps 0x20(%esp);");
    asm("loc_65FBBBD: flds 0x14(%eax);");
    asm("loc_65FBBC0: fstps 0x10(%esp);");
    asm("loc_65FBBC4: flds 0x20(%eax);");
    asm("loc_65FBBC7: fstps 0x14(%esp);");
    asm("loc_65FBBCB: flds (%esp);");
    asm("loc_65FBBCF: fmuls (%esp);");
    asm("loc_65FBBD3: flds 4(%esp);");
    asm("loc_65FBBD7: fmuls 4(%esp);");
    asm("loc_65FBBDB: faddp;");
    asm("loc_65FBBDD: fsqrt;");
    asm("loc_65FBBDF: fcoms _data_66013A8;");
    asm("loc_65FBBE5: fnstsw %ax;");
    asm("loc_65FBBE7: mov 0x38(%esp),%al;");
    asm("loc_65FBBEB: test $0x41,%ah;");
    asm("loc_65FBBEE: jne loc_65FBC42;");
    asm("loc_65FBBF0: flds 0x20(%esp);");
    asm("loc_65FBBF4: test %al,%al;");
    asm("loc_65FBBF6: flds 0x14(%esp);");
    asm("loc_65FBBFA: mov 0x28(%esp),%eax;");
    asm("loc_65FBBFE: je loc_65FBC24;");
    asm("loc_65FBC00: fchs;");
    asm("loc_65FBC02: fpatan;");
    asm("loc_65FBC04: fstps (%eax);");
    asm("loc_65FBC06: fxch;");
    asm("loc_65FBC08: fchs;");
    asm("loc_65FBC0A: fxch;");
    asm("loc_65FBC0C: fchs;");
    asm("loc_65FBC0E: fpatan;");
    asm("loc_65FBC10: fstps (%ecx);");
    asm("loc_65FBC12: flds 4(%esp);");
    asm("loc_65FBC16: flds (%esp);");
    asm("loc_65FBC1A: fchs;");
    asm("loc_65FBC1C: fpatan;");
    asm("loc_65FBC1E: fstps (%edx);");
    asm("loc_65FBC20: add $0x24,%esp;");
    asm("loc_65FBC23: ret;");
    asm("loc_65FBC24: fpatan;");
    asm("loc_65FBC26: fstps (%eax);");
    asm("loc_65FBC28: fxch;");
    asm("loc_65FBC2A: fchs;");
    asm("loc_65FBC2C: fxch;");
    asm("loc_65FBC2E: fpatan;");
    asm("loc_65FBC30: fstps (%ecx);");
    asm("loc_65FBC32: flds 4(%esp);");
    asm("loc_65FBC36: flds (%esp);");
    asm("loc_65FBC3A: fpatan;");
    asm("loc_65FBC3C: fstps (%edx);");
    asm("loc_65FBC3E: add $0x24,%esp;");
    asm("loc_65FBC41: ret;");
    asm("loc_65FBC42: test %al,%al;");
    asm("loc_65FBC44: mov 0x28(%esp),%eax;");
    asm("loc_65FBC48: je loc_65FBC68;");
    asm("loc_65FBC4A: flds 0x10(%esp);");
    asm("loc_65FBC4E: flds 0x1C(%esp);");
    asm("loc_65FBC52: fchs;");
    asm("loc_65FBC54: fpatan;");
    asm("loc_65FBC56: fstps (%eax);");
    asm("loc_65FBC58: fchs;");
    asm("loc_65FBC5A: fpatan;");
    asm("loc_65FBC5C: fstps (%ecx);");
    asm("loc_65FBC5E: movl $0,(%edx);");
    asm("loc_65FBC64: add $0x24,%esp;");
    asm("loc_65FBC67: ret;");
    asm("loc_65FBC68: flds 0x10(%esp);");
    asm("loc_65FBC6C: fchs;");
    asm("loc_65FBC6E: flds 0x1C(%esp);");
    asm("loc_65FBC72: fpatan;");
    asm("loc_65FBC74: fstps (%eax);");
    asm("loc_65FBC76: fxch;");
    asm("loc_65FBC78: fchs;");
    asm("loc_65FBC7A: fxch;");
    asm("loc_65FBC7C: fpatan;");
    asm("loc_65FBC7E: fstps (%ecx);");
    asm("loc_65FBC80: movl $0,(%edx);");
    asm("loc_65FBC86: add $0x24,%esp;");
    asm("loc_65FBC89: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBC90() // _sub_65FBC90
{
    __DEBUG_ASM(65FBC90);
    // chunk 0x65FBC90 _sub_65FBC90
    asm("loc_65FBC90: flds _data_66011E0;");
    asm("loc_65FBC96: sub $0xC,%esp;");
    asm("loc_65FBC99: push %esi;");
    asm("loc_65FBC9A: mov 0x18(%esp),%esi;");
    asm("loc_65FBC9E: fsubs (%esi);");
    asm("loc_65FBCA0: push %edi;");
    asm("loc_65FBCA1: fabs;");
    asm("loc_65FBCA3: fcompl _data_66013B0;");
    asm("loc_65FBCA9: fnstsw %ax;");
    asm("loc_65FBCAB: test $5,%ah;");
    asm("loc_65FBCAE: jp loc_65FBCCA;");
    asm("loc_65FBCB0: movl $0,0x10(%esp);");
    asm("loc_65FBCB8: movl $0,0xC(%esp);");
    asm("loc_65FBCC0: movl $0,8(%esp);");
    asm("loc_65FBCC8: jmp loc_65FBD02;");
    asm("loc_65FBCCA: mov (%esi),%eax;");
    asm("loc_65FBCCC: flds (%esi);");
    asm("loc_65FBCCE: mov %eax,0x1C(%esp);");
    asm("loc_65FBCD2: call _sub_6600C30;");
    asm("loc_65FBCD7: flds 0x1C(%esp);");
    asm("loc_65FBCDB: fmuls 0x1C(%esp);");
    asm("loc_65FBCDF: fsubrs _data_66011E0;");
    asm("loc_65FBCE5: fsqrt;");
    asm("loc_65FBCE7: fdivrp;");
    asm("loc_65FBCE9: fld %st(0);");
    asm("loc_65FBCEB: fmuls 4(%esi);");
    asm("loc_65FBCEE: fstps 8(%esp);");
    asm("loc_65FBCF2: fld %st(0);");
    asm("loc_65FBCF4: fmuls 8(%esi);");
    asm("loc_65FBCF7: fstps 0xC(%esp);");
    asm("loc_65FBCFB: fmuls 0xC(%esi);");
    asm("loc_65FBCFE: fstps 0x10(%esp);");
    asm("loc_65FBD02: mov 0x18(%esp),%eax;");
    asm("loc_65FBD06: mov 8(%esp),%ecx;");
    asm("loc_65FBD0A: mov 0xC(%esp),%edx;");
    asm("loc_65FBD0E: mov 0x10(%esp),%esi;");
    asm("loc_65FBD12: mov %eax,%edi;");
    asm("loc_65FBD14: mov %ecx,(%edi);");
    asm("loc_65FBD16: mov %edx,4(%edi);");
    asm("loc_65FBD19: mov %esi,8(%edi);");
    asm("loc_65FBD1C: pop %edi;");
    asm("loc_65FBD1D: pop %esi;");
    asm("loc_65FBD1E: add $0xC,%esp;");
    asm("loc_65FBD21: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBD30() // _sub_65FBD30
{
    __DEBUG_ASM(65FBD30);
    // chunk 0x65FBD30 _sub_65FBD30
    asm("loc_65FBD30: mov 8(%esp),%ecx;");
    asm("loc_65FBD34: flds 8(%ecx);");
    asm("loc_65FBD37: sub $0x1C,%esp;");
    asm("loc_65FBD3A: flds 4(%ecx);");
    asm("loc_65FBD3D: push %ebx;");
    asm("loc_65FBD3E: flds (%ecx);");
    asm("loc_65FBD40: push %esi;");
    asm("loc_65FBD41: fld %st(0);");
    asm("loc_65FBD43: push %edi;");
    asm("loc_65FBD44: fmul %st(1),%st;");
    asm("loc_65FBD46: fld %st(2);");
    asm("loc_65FBD48: fmul %st(3),%st;");
    asm("loc_65FBD4A: faddp;");
    asm("loc_65FBD4C: fld %st(3);");
    asm("loc_65FBD4E: fmul %st(4),%st;");
    asm("loc_65FBD50: faddp;");
    asm("loc_65FBD52: fsqrt;");
    asm("loc_65FBD54: fstp %st(3);");
    asm("loc_65FBD56: fstp %st(0);");
    asm("loc_65FBD58: fstp %st(0);");
    asm("loc_65FBD5A: fcoml _data_6601348;");
    asm("loc_65FBD60: fnstsw %ax;");
    asm("loc_65FBD62: test $0x41,%ah;");
    asm("loc_65FBD65: jne loc_65FBD9B;");
    asm("loc_65FBD67: fld %st(0);");
    asm("loc_65FBD69: fcos;");
    asm("loc_65FBD6B: fstps 0x18(%esp);");
    asm("loc_65FBD6F: fld %st(0);");
    asm("loc_65FBD71: fsin;");
    asm("loc_65FBD73: fdivp;");
    asm("loc_65FBD75: fld %st(0);");
    asm("loc_65FBD77: fmuls (%ecx);");
    asm("loc_65FBD79: fstps 0xC(%esp);");
    asm("loc_65FBD7D: mov 0xC(%esp),%edx;");
    asm("loc_65FBD81: fld %st(0);");
    asm("loc_65FBD83: fmuls 4(%ecx);");
    asm("loc_65FBD86: fstps 0x10(%esp);");
    asm("loc_65FBD8A: fmuls 8(%ecx);");
    asm("loc_65FBD8D: mov 0x10(%esp),%ecx;");
    asm("loc_65FBD91: fstps 0x14(%esp);");
    asm("loc_65FBD95: mov 0x14(%esp),%esi;");
    asm("loc_65FBD99: jmp loc_65FBDC9;");
    asm("loc_65FBD9B: movl $0,0x24(%esp);");
    asm("loc_65FBDA3: fstp %st(0);");
    asm("loc_65FBDA5: mov 0x24(%esp),%esi;");
    asm("loc_65FBDA9: movl $0,0x20(%esp);");
    asm("loc_65FBDB1: mov 0x20(%esp),%ecx;");
    asm("loc_65FBDB5: movl $0,0x1C(%esp);");
    asm("loc_65FBDBD: mov 0x1C(%esp),%edx;");
    asm("loc_65FBDC1: movl $0x3F800000,0x18(%esp);");
    asm("loc_65FBDC9: mov 0x2C(%esp),%eax;");
    asm("loc_65FBDCD: mov 0x18(%esp),%ebx;");
    asm("loc_65FBDD1: mov %eax,%edi;");
    asm("loc_65FBDD3: mov %ebx,(%edi);");
    asm("loc_65FBDD5: mov %edx,4(%edi);");
    asm("loc_65FBDD8: mov %ecx,8(%edi);");
    asm("loc_65FBDDB: mov %esi,0xC(%edi);");
    asm("loc_65FBDDE: pop %edi;");
    asm("loc_65FBDDF: pop %esi;");
    asm("loc_65FBDE0: pop %ebx;");
    asm("loc_65FBDE1: add $0x1C,%esp;");
    asm("loc_65FBDE4: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBDF0() // _sub_65FBDF0
{
    __DEBUG_ASM(65FBDF0);
    // chunk 0x65FBDF0 _sub_65FBDF0
    asm("loc_65FBDF0: mov 8(%esp),%ecx;");
    asm("loc_65FBDF4: mov 0xC(%esp),%edx;");
    asm("loc_65FBDF8: flds 0xC(%ecx);");
    asm("loc_65FBDFB: fmuls 0xC(%edx);");
    asm("loc_65FBDFE: sub $0x4C,%esp;");
    asm("loc_65FBE01: flds 8(%ecx);");
    asm("loc_65FBE04: fmuls 8(%edx);");
    asm("loc_65FBE07: faddp;");
    asm("loc_65FBE09: flds 4(%ecx);");
    asm("loc_65FBE0C: fmuls 4(%edx);");
    asm("loc_65FBE0F: faddp;");
    asm("loc_65FBE11: flds (%ecx);");
    asm("loc_65FBE13: fmuls (%edx);");
    asm("loc_65FBE15: faddp;");
    asm("loc_65FBE17: fcomps _data_6601318;");
    asm("loc_65FBE1D: fnstsw %ax;");
    asm("loc_65FBE1F: test $1,%ah;");
    asm("loc_65FBE22: jne loc_65FBE41;");
    asm("loc_65FBE24: mov (%edx),%eax;");
    asm("loc_65FBE26: mov %eax,0x1C(%esp);");
    asm("loc_65FBE2A: mov 4(%edx),%eax;");
    asm("loc_65FBE2D: mov %eax,0x20(%esp);");
    asm("loc_65FBE31: mov 8(%edx),%eax;");
    asm("loc_65FBE34: mov 0xC(%edx),%edx;");
    asm("loc_65FBE37: mov %eax,0x24(%esp);");
    asm("loc_65FBE3B: mov %edx,0x28(%esp);");
    asm("loc_65FBE3F: jmp loc_65FBE64;");
    asm("loc_65FBE41: flds (%edx);");
    asm("loc_65FBE43: fchs;");
    asm("loc_65FBE45: fstps 0x1C(%esp);");
    asm("loc_65FBE49: flds 4(%edx);");
    asm("loc_65FBE4C: fchs;");
    asm("loc_65FBE4E: fstps 0x20(%esp);");
    asm("loc_65FBE52: flds 8(%edx);");
    asm("loc_65FBE55: fchs;");
    asm("loc_65FBE57: fstps 0x24(%esp);");
    asm("loc_65FBE5B: flds 0xC(%edx);");
    asm("loc_65FBE5E: fchs;");
    asm("loc_65FBE60: fstps 0x28(%esp);");
    asm("loc_65FBE64: flds 4(%ecx);");
    asm("loc_65FBE67: mov (%ecx),%eax;");
    asm("loc_65FBE69: fchs;");
    asm("loc_65FBE6B: mov %eax,0x3C(%esp);");
    asm("loc_65FBE6F: fstps (%esp);");
    asm("loc_65FBE73: flds 8(%ecx);");
    asm("loc_65FBE76: mov (%esp),%eax;");
    asm("loc_65FBE7A: fchs;");
    asm("loc_65FBE7C: push %esi;");
    asm("loc_65FBE7D: mov 0x40(%esp),%esi;");
    asm("loc_65FBE81: fstps 8(%esp);");
    asm("loc_65FBE85: flds 0xC(%ecx);");
    asm("loc_65FBE88: mov 8(%esp),%ecx;");
    asm("loc_65FBE8C: fchs;");
    asm("loc_65FBE8E: mov %eax,0x34(%esp);");
    asm("loc_65FBE92: mov _data_66033A8,%eax;");
    asm("loc_65FBE97: test %eax,%eax;");
    asm("loc_65FBE99: fstps 0xC(%esp);");
    asm("loc_65FBE9D: mov 0xC(%esp),%edx;");
    asm("loc_65FBEA1: mov %esi,0x30(%esp);");
    asm("loc_65FBEA5: mov %ecx,0x38(%esp);");
    asm("loc_65FBEA9: mov %edx,0x3C(%esp);");
    asm("loc_65FBEAD: pop %esi;");
    asm("loc_65FBEAE: jne loc_65FBEBA;");
    asm("loc_65FBEB0: call _sub_6600DE0;");
    asm("loc_65FBEB5: mov %eax,_data_66033A8;");
    asm("loc_65FBEBA: mov (%eax),%ecx;");
    asm("loc_65FBEBC: lea 0x2C(%esp),%edx;");
    asm("loc_65FBEC0: push %edx;");
    asm("loc_65FBEC1: lea 0x20(%esp),%edx;");
    asm("loc_65FBEC5: push %edx;");
    asm("loc_65FBEC6: lea 0x44(%esp),%edx;");
    asm("loc_65FBECA: push %edx;");
    asm("loc_65FBECB: push %eax;");
    asm("loc_65FBECC: calll *0x18(%ecx);");
    asm("loc_65FBECF: mov 0x40(%esp),%ecx;");
    asm("loc_65FBED3: mov 0x44(%esp),%edx;");
    asm("loc_65FBED7: mov 0x3C(%esp),%eax;");
    asm("loc_65FBEDB: mov %ecx,4(%esp);");
    asm("loc_65FBEDF: lea (%esp),%ecx;");
    asm("loc_65FBEE3: mov %edx,8(%esp);");
    asm("loc_65FBEE7: mov %eax,(%esp);");
    asm("loc_65FBEEB: mov 0x48(%esp),%eax;");
    asm("loc_65FBEEF: push %ecx;");
    asm("loc_65FBEF0: lea 0x14(%esp),%edx;");
    asm("loc_65FBEF4: push %edx;");
    asm("loc_65FBEF5: mov %eax,0x14(%esp);");
    asm("loc_65FBEF9: call _sub_65FBC90;");
    asm("loc_65FBEFE: flds (%eax);");
    asm("loc_65FBF00: fadd %st,%st(0);");
    asm("loc_65FBF02: fstps 8(%esp);");
    asm("loc_65FBF06: flds 4(%eax);");
    asm("loc_65FBF09: mov 8(%esp),%edx;");
    asm("loc_65FBF0D: fadd %st,%st(0);");
    asm("loc_65FBF0F: fstps 0xC(%esp);");
    asm("loc_65FBF13: flds 8(%eax);");
    asm("loc_65FBF16: mov 0x58(%esp),%eax;");
    asm("loc_65FBF1A: fadd %st,%st(0);");
    asm("loc_65FBF1C: mov %eax,%ecx;");
    asm("loc_65FBF1E: mov %edx,(%ecx);");
    asm("loc_65FBF20: mov 0xC(%esp),%edx;");
    asm("loc_65FBF24: fstps 0x10(%esp);");
    asm("loc_65FBF28: mov %edx,4(%ecx);");
    asm("loc_65FBF2B: mov 0x10(%esp),%edx;");
    asm("loc_65FBF2F: mov %edx,8(%ecx);");
    asm("loc_65FBF32: add $0x54,%esp;");
    asm("loc_65FBF35: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBF40() // _sub_65FBF40
{
    __DEBUG_ASM(65FBF40);
    // chunk 0x65FBF40 _sub_65FBF40
    asm("loc_65FBF40: push %ebx;");
    asm("loc_65FBF41: push %esi;");
    asm("loc_65FBF42: mov %ecx,%esi;");
    asm("loc_65FBF44: mov 0x40(%esi),%eax;");
    asm("loc_65FBF47: push %edi;");
    asm("loc_65FBF48: xor %ebx,%ebx;");
    asm("loc_65FBF4A: xor %edi,%edi;");
    asm("loc_65FBF4C: cmp %ebx,%eax;");
    asm("loc_65FBF4E: movl $_off_6601340,(%esi);");
    asm("loc_65FBF54: jle loc_65FBF70;");
    asm("loc_65FBF56: mov 0x18(%esi),%edx;");
    asm("loc_65FBF59: mov (%edx,%edi,4),%edx;");
    asm("loc_65FBF5C: mov _data_660313C,%eax;");
    asm("loc_65FBF61: mov (%eax),%ecx;");
    asm("loc_65FBF63: push %edx;");
    asm("loc_65FBF64: push %eax;");
    asm("loc_65FBF65: calll *0x14(%ecx);");
    asm("loc_65FBF68: mov 0x40(%esi),%eax;");
    asm("loc_65FBF6B: inc %edi;");
    asm("loc_65FBF6C: cmp %eax,%edi;");
    asm("loc_65FBF6E: jl loc_65FBF56;");
    asm("loc_65FBF70: mov 8(%esi),%eax;");
    asm("loc_65FBF73: push %eax;");
    asm("loc_65FBF74: mov %ebx,0x40(%esi);");
    asm("loc_65FBF77: call _sub_6600BB0;");
    asm("loc_65FBF7C: mov 0x18(%esi),%ecx;");
    asm("loc_65FBF7F: push %ecx;");
    asm("loc_65FBF80: mov %ebx,8(%esi);");
    asm("loc_65FBF83: call _sub_6600BB0;");
    asm("loc_65FBF88: mov 0x1C(%esi),%edx;");
    asm("loc_65FBF8B: push %edx;");
    asm("loc_65FBF8C: mov %ebx,0x18(%esi);");
    asm("loc_65FBF8F: call _sub_6600BB0;");
    asm("loc_65FBF94: mov 0xC(%esi),%eax;");
    asm("loc_65FBF97: push %eax;");
    asm("loc_65FBF98: mov %ebx,0x1C(%esi);");
    asm("loc_65FBF9B: call _sub_6600BB0;");
    asm("loc_65FBFA0: mov 0x2C(%esi),%ecx;");
    asm("loc_65FBFA3: push %ecx;");
    asm("loc_65FBFA4: mov %ebx,0xC(%esi);");
    asm("loc_65FBFA7: call _sub_6600BB0;");
    asm("loc_65FBFAC: add $0x14,%esp;");
    asm("loc_65FBFAF: pop %edi;");
    asm("loc_65FBFB0: mov %ebx,0x2C(%esi);");
    asm("loc_65FBFB3: pop %esi;");
    asm("loc_65FBFB4: pop %ebx;");
    asm("loc_65FBFB5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBFC0() // _j_nullsub_5
{
    __DEBUG_ASM(65FBFC0);
    // chunk 0x65FBFC0 _sub_65FBFC0
    asm("loc_65FBFC0: jmp _sub_65FBFD0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBFD0() // _nullsub_5
{
    __DEBUG_ASM(65FBFD0);
    // chunk 0x65FBFD0 _sub_65FBFD0
    asm("loc_65FBFD0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBFE0() // _j_nullsub_6
{
    __DEBUG_ASM(65FBFE0);
    // chunk 0x65FBFE0 _sub_65FBFE0
    asm("loc_65FBFE0: jmp _sub_65FBFF0;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FBFF0() // _nullsub_6
{
    __DEBUG_ASM(65FBFF0);
    // chunk 0x65FBFF0 _sub_65FBFF0
    asm("loc_65FBFF0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FC000() // _sub_65FC000
{
    __DEBUG_ASM(65FC000);
    // chunk 0x65FC000 _sub_65FC000
    asm("loc_65FC000: sub $0xC28,%esp;");
    asm("loc_65FC006: push %ebx;");
    asm("loc_65FC007: mov %ecx,%ebx;");
    asm("loc_65FC009: mov 0x28(%ebx),%eax;");
    asm("loc_65FC00C: mov %eax,%edx;");
    asm("loc_65FC00E: push %ebp;");
    asm("loc_65FC00F: shr $5,%edx;");
    asm("loc_65FC012: push %esi;");
    asm("loc_65FC013: and $1,%dl;");
    asm("loc_65FC016: shr $6,%eax;");
    asm("loc_65FC019: push %edi;");
    asm("loc_65FC01A: mov 0x40(%ebx),%edi;");
    asm("loc_65FC01D: and $1,%al;");
    asm("loc_65FC01F: mov %ebx,0x34(%esp);");
    asm("loc_65FC023: mov %dl,0x13(%esp);");
    asm("loc_65FC027: mov %al,0x11(%esp);");
    asm("loc_65FC02B: mov %edi,%ecx;");
    asm("loc_65FC02D: jne loc_65FC032;");
    asm("loc_65FC02F: lea -1(%edi),%ecx;");
    asm("loc_65FC032: lea (%ecx,%ecx,2),%ecx;");
    asm("loc_65FC035: mov %ecx,0x38(%esp);");
    asm("loc_65FC039: mov %dl,%cl;");
    asm("loc_65FC03B: neg %cl;");
    asm("loc_65FC03D: sbb %ecx,%ecx;");
    asm("loc_65FC03F: and $3,%ecx;");
    asm("loc_65FC042: mov %ecx,%esi;");
    asm("loc_65FC044: mov %al,%cl;");
    asm("loc_65FC046: neg %cl;");
    asm("loc_65FC048: mov %esi,0x48(%esp);");
    asm("loc_65FC04C: sbb %ecx,%ecx;");
    asm("loc_65FC04E: and $3,%ecx;");
    asm("loc_65FC051: add %esi,%ecx;");
    asm("loc_65FC053: test %al,%al;");
    asm("loc_65FC055: mov %ecx,0x58(%esp);");
    asm("loc_65FC059: je loc_65FC06D;");
    asm("loc_65FC05B: mov 0x30(%ebx),%edx;");
    asm("loc_65FC05E: mov 0x38(%esp),%eax;");
    asm("loc_65FC062: imul $0xFFFFFFFD,%edx;");
    asm("loc_65FC065: add %edx,%eax;");
    asm("loc_65FC067: mov %eax,0x38(%esp);");
    asm("loc_65FC06B: jmp loc_65FC091;");
    asm("loc_65FC06D: test %dl,%dl;");
    asm("loc_65FC06F: je loc_65FC091;");
    asm("loc_65FC071: mov 0x30(%ebx),%eax;");
    asm("loc_65FC074: test %eax,%eax;");
    asm("loc_65FC076: jle loc_65FC084;");
    asm("loc_65FC078: mov 0x2C(%ebx),%ecx;");
    asm("loc_65FC07B: mov -1(%ecx,%edi),%dl;");
    asm("loc_65FC07F: test %dl,%dl;");
    asm("loc_65FC081: je loc_65FC084;");
    asm("loc_65FC083: dec %eax;");
    asm("loc_65FC084: mov 0x38(%esp),%ecx;");
    asm("loc_65FC088: imul $0xFFFFFFFD,%eax;");
    asm("loc_65FC08B: add %eax,%ecx;");
    asm("loc_65FC08D: mov %ecx,0x38(%esp);");
    asm("loc_65FC091: mov 0x10(%ebx),%ecx;");
    asm("loc_65FC094: mov _data_6603134,%eax;");
    asm("loc_65FC099: mov (%eax),%edx;");
    asm("loc_65FC09B: push %ecx;");
    asm("loc_65FC09C: push %eax;");
    asm("loc_65FC09D: calll *0x90(%edx);");
    asm("loc_65FC0A3: mov (%eax),%ecx;");
    asm("loc_65FC0A5: mov %ecx,_data_66032A8;");
    asm("loc_65FC0AB: mov 4(%eax),%edx;");
    asm("loc_65FC0AE: mov %edx,_data_66032AC;");
    asm("loc_65FC0B4: mov 8(%eax),%eax;");
    asm("loc_65FC0B7: mov %eax,_data_66032B0;");
    asm("loc_65FC0BC: mov %eax,_data_660326C;");
    asm("loc_65FC0C1: mov _data_6603134,%eax;");
    asm("loc_65FC0C6: mov %ecx,_data_6603264;");
    asm("loc_65FC0CC: mov %edx,_data_6603268;");
    asm("loc_65FC0D2: mov 0x10(%ebx),%ecx;");
    asm("loc_65FC0D5: mov (%eax),%edx;");
    asm("loc_65FC0D7: push %ecx;");
    asm("loc_65FC0D8: push %eax;");
    asm("loc_65FC0D9: calll *0x98(%edx);");
    asm("loc_65FC0DF: mov %eax,%esi;");
    asm("loc_65FC0E1: mov $9,%ecx;");
    asm("loc_65FC0E6: mov $_data_66032E8,%edi;");
    asm("loc_65FC0EB: rep movsl (%esi),(%edi);");
    asm("loc_65FC0ED: mov $9,%ecx;");
    asm("loc_65FC0F2: mov $_data_66032E8,%esi;");
    asm("loc_65FC0F7: mov $_data_66031B0,%edi;");
    asm("loc_65FC0FC: rep movsl (%esi),(%edi);");
    asm("loc_65FC0FE: mov 0x40(%ebx),%eax;");
    asm("loc_65FC101: xor %ebp,%ebp;");
    asm("loc_65FC103: test %eax,%eax;");
    asm("loc_65FC105: jle loc_65FC1CE;");
    asm("loc_65FC10B: mov %ebp,0x1C(%esp);");
    asm("loc_65FC10F: movl $_data_66031D4,0x24(%esp);");
    asm("loc_65FC117: movl $_data_6603270,0x20(%esp);");
    asm("loc_65FC11F: nop;");
    asm("loc_65FC120: mov 0x1C(%ebx),%ecx;");
    asm("loc_65FC123: mov 0x1C(%esp),%edi;");
    asm("loc_65FC127: mov _data_6603134,%eax;");
    asm("loc_65FC12C: mov (%eax),%edx;");
    asm("loc_65FC12E: add %edi,%ecx;");
    asm("loc_65FC130: push %ecx;");
    asm("loc_65FC131: mov 8(%ebx),%ecx;");
    asm("loc_65FC134: mov (%ecx,%ebp,4),%ecx;");
    asm("loc_65FC137: push $0;");
    asm("loc_65FC139: push %ecx;");
    asm("loc_65FC13A: push %eax;");
    asm("loc_65FC13B: calll *0xCC(%edx);");
    asm("loc_65FC141: mov 8(%ebx),%ecx;");
    asm("loc_65FC144: mov (%ecx,%ebp,4),%ecx;");
    asm("loc_65FC147: mov _data_6603134,%eax;");
    asm("loc_65FC14C: mov (%eax),%edx;");
    asm("loc_65FC14E: push %ecx;");
    asm("loc_65FC14F: push %eax;");
    asm("loc_65FC150: calll *0xC4(%edx);");
    asm("loc_65FC156: mov 8(%ebx),%ecx;");
    asm("loc_65FC159: mov (%ecx,%ebp,4),%ecx;");
    asm("loc_65FC15C: mov _data_6603134,%eax;");
    asm("loc_65FC161: mov (%eax),%edx;");
    asm("loc_65FC163: push %ecx;");
    asm("loc_65FC164: push %eax;");
    asm("loc_65FC165: calll *0x90(%edx);");
    asm("loc_65FC16B: mov (%eax),%ecx;");
    asm("loc_65FC16D: mov 0x20(%esp),%edx;");
    asm("loc_65FC171: mov %ecx,(%edx);");
    asm("loc_65FC173: mov 4(%eax),%ecx;");
    asm("loc_65FC176: mov %ecx,4(%edx);");
    asm("loc_65FC179: mov 8(%eax),%eax;");
    asm("loc_65FC17C: mov %eax,8(%edx);");
    asm("loc_65FC17F: mov 8(%ebx),%edx;");
    asm("loc_65FC182: mov (%edx,%ebp,4),%edx;");
    asm("loc_65FC185: mov _data_6603134,%eax;");
    asm("loc_65FC18A: mov (%eax),%ecx;");
    asm("loc_65FC18C: push %edx;");
    asm("loc_65FC18D: push %eax;");
    asm("loc_65FC18E: calll *0x98(%ecx);");
    asm("loc_65FC194: mov 0x24(%esp),%edi;");
    asm("loc_65FC198: mov 0x20(%esp),%edx;");
    asm("loc_65FC19C: mov %eax,%esi;");
    asm("loc_65FC19E: mov $9,%ecx;");
    asm("loc_65FC1A3: rep movsl (%esi),(%edi);");
    asm("loc_65FC1A5: mov 0x1C(%esp),%esi;");
    asm("loc_65FC1A9: mov 0x24(%esp),%ecx;");
    asm("loc_65FC1AD: mov 0x40(%ebx),%eax;");
    asm("loc_65FC1B0: inc %ebp;");
    asm("loc_65FC1B1: add $0x10,%esi;");
    asm("loc_65FC1B4: add $0xC,%edx;");
    asm("loc_65FC1B7: add $0x24,%ecx;");
    asm("loc_65FC1BA: cmp %eax,%ebp;");
    asm("loc_65FC1BC: mov %esi,0x1C(%esp);");
    asm("loc_65FC1C0: mov %edx,0x20(%esp);");
    asm("loc_65FC1C4: mov %ecx,0x24(%esp);");
    asm("loc_65FC1C8: jl loc_65FC120;");
    asm("loc_65FC1CE: mov 0x13(%esp),%al;");
    asm("loc_65FC1D2: test %al,%al;");
    asm("loc_65FC1D4: mov 0x40(%ebx),%ebp;");
    asm("loc_65FC1D7: mov %ebp,0x64(%esp);");
    asm("loc_65FC1DB: je loc_65FC1F4;");
    asm("loc_65FC1DD: mov 0x20(%ebx),%ecx;");
    asm("loc_65FC1E0: mov (%ecx),%edx;");
    asm("loc_65FC1E2: mov %edx,0x68(%esp);");
    asm("loc_65FC1E6: mov 4(%ecx),%edx;");
    asm("loc_65FC1E9: mov 8(%ecx),%ecx;");
    asm("loc_65FC1EC: mov %edx,0x6C(%esp);");
    asm("loc_65FC1F0: mov %ecx,0x70(%esp);");
    asm("loc_65FC1F4: mov 0x11(%esp),%cl;");
    asm("loc_65FC1F8: test %cl,%cl;");
    asm("loc_65FC1FA: je loc_65FC20D;");
    asm("loc_65FC1FC: mov 0x24(%ebx),%esi;");
    asm("loc_65FC1FF: mov $9,%ecx;");
    asm("loc_65FC204: lea 0x2D0(%esp),%edi;");
    asm("loc_65FC20B: rep movsl (%esi),(%edi);");
    asm("loc_65FC20D: test %al,%al;");
    asm("loc_65FC20F: movb $0,0x12(%esp);");
    asm("loc_65FC214: je loc_65FC269;");
    asm("loc_65FC216: flds 0x68(%esp);");
    asm("loc_65FC21A: lea (%ebp,%ebp,2),%edx;");
    asm("loc_65FC21E: fsubs _data_6603264(,%edx,4);");
    asm("loc_65FC225: lea _data_6603264(,%edx,4),%eax;");
    asm("loc_65FC22C: flds 0x6C(%esp);");
    asm("loc_65FC230: movb $1,0x12(%esp);");
    asm("loc_65FC235: fsubs 4(%eax);");
    asm("loc_65FC238: flds 0x70(%esp);");
    asm("loc_65FC23C: fsubs 8(%eax);");
    asm("loc_65FC23F: fld %st(0);");
    asm("loc_65FC241: fmul %st(1),%st;");
    asm("loc_65FC243: fld %st(2);");
    asm("loc_65FC245: fmul %st(3),%st;");
    asm("loc_65FC247: faddp;");
    asm("loc_65FC249: fld %st(3);");
    asm("loc_65FC24B: fmul %st(4),%st;");
    asm("loc_65FC24D: faddp;");
    asm("loc_65FC24F: fsqrt;");
    asm("loc_65FC251: fstp %st(3);");
    asm("loc_65FC253: fstp %st(0);");
    asm("loc_65FC255: fstp %st(0);");
    asm("loc_65FC257: fcompl _data_66013D0;");
    asm("loc_65FC25D: fnstsw %ax;");
    asm("loc_65FC25F: test $0x41,%ah;");
    asm("loc_65FC262: je loc_65FC269;");
    asm("loc_65FC264: movb $0,0x12(%esp);");
    asm("loc_65FC269: mov _data_66033A8,%eax;");
    asm("loc_65FC26E: test %eax,%eax;");
    asm("loc_65FC270: jne loc_65FC27C;");
    asm("loc_65FC272: call _sub_6600DE0;");
    asm("loc_65FC277: mov %eax,_data_66033A8;");
    asm("loc_65FC27C: mov (%eax),%ecx;");
    asm("loc_65FC27E: lea 0x2D0(%esp),%edx;");
    asm("loc_65FC285: push %edx;");
    asm("loc_65FC286: lea 0x128(%esp),%edx;");
    asm("loc_65FC28D: push %edx;");
    asm("loc_65FC28E: push %eax;");
    asm("loc_65FC28F: calll *0x50(%ecx);");
    asm("loc_65FC292: mov 0x12(%esp),%al;");
    asm("loc_65FC296: test %al,%al;");
    asm("loc_65FC298: jne loc_65FC323;");
    asm("loc_65FC29E: mov 0x11(%esp),%al;");
    asm("loc_65FC2A2: test %al,%al;");
    asm("loc_65FC2A4: je loc_65FCE49;");
    asm("loc_65FC2AA: mov _data_66033A8,%eax;");
    asm("loc_65FC2AF: test %eax,%eax;");
    asm("loc_65FC2B1: jne loc_65FC2BD;");
    asm("loc_65FC2B3: call _sub_6600DE0;");
    asm("loc_65FC2B8: mov %eax,_data_66033A8;");
    asm("loc_65FC2BD: mov (%eax),%ecx;");
    asm("loc_65FC2BF: lea (%ebp,%ebp,8),%edx;");
    asm("loc_65FC2C3: lea _data_66031B0(,%edx,4),%edx;");
    asm("loc_65FC2CA: push %edx;");
    asm("loc_65FC2CB: lea 0x84(%esp),%edx;");
    asm("loc_65FC2D2: push %edx;");
    asm("loc_65FC2D3: push %eax;");
    asm("loc_65FC2D4: calll *0x50(%ecx);");
    asm("loc_65FC2D7: lea 0x124(%esp),%eax;");
    asm("loc_65FC2DE: push %eax;");
    asm("loc_65FC2DF: lea 0x84(%esp),%ecx;");
    asm("loc_65FC2E6: push %ecx;");
    asm("loc_65FC2E7: lea 0x44(%esp),%edx;");
    asm("loc_65FC2EB: push %edx;");
    asm("loc_65FC2EC: call _sub_65FBDF0;");
    asm("loc_65FC2F1: flds 0x4C(%esp);");
    asm("loc_65FC2F5: fmuls 0x4C(%esp);");
    asm("loc_65FC2F9: add $0xC,%esp;");
    asm("loc_65FC2FC: flds 0x44(%esp);");
    asm("loc_65FC300: fmuls 0x44(%esp);");
    asm("loc_65FC304: faddp;");
    asm("loc_65FC306: flds 0x3C(%esp);");
    asm("loc_65FC30A: fmuls 0x3C(%esp);");
    asm("loc_65FC30E: faddp;");
    asm("loc_65FC310: fsqrt;");
    asm("loc_65FC312: fcompl _data_66013C8;");
    asm("loc_65FC318: fnstsw %ax;");
    asm("loc_65FC31A: test $0x41,%ah;");
    asm("loc_65FC31D: jne loc_65FCE49;");
    asm("loc_65FC323: mov 0x38(%esp),%eax;");
    asm("loc_65FC327: mov 0x58(%esp),%ecx;");
    asm("loc_65FC32B: lea (%ecx,%eax),%esi;");
    asm("loc_65FC32E: mov %eax,0x55C(%esp);");
    asm("loc_65FC335: mov %eax,0x9E8(%esp);");
    asm("loc_65FC33C: mov %eax,0x7A4(%esp);");
    asm("loc_65FC343: mov %eax,0x298(%esp);");
    asm("loc_65FC34A: mov 0x11(%esp),%al;");
    asm("loc_65FC34E: test %al,%al;");
    asm("loc_65FC350: mov $1,%edx;");
    asm("loc_65FC355: mov %edx,0x24(%esp);");
    asm("loc_65FC359: movl $0x3F800000,0x20(%esp);");
    asm("loc_65FC361: movl $0,0x1C(%esp);");
    asm("loc_65FC369: mov %ecx,0x558(%esp);");
    asm("loc_65FC370: mov %ecx,0x9EC(%esp);");
    asm("loc_65FC377: mov %esi,0x7A0(%esp);");
    asm("loc_65FC37E: mov %ecx,0x198(%esp);");
    asm("loc_65FC385: je loc_65FC390;");
    asm("loc_65FC387: mov 0x40(%ebx),%eax;");
    asm("loc_65FC38A: mov %eax,0x30(%esp);");
    asm("loc_65FC38E: jmp loc_65FC398;");
    asm("loc_65FC390: mov 0x40(%ebx),%ebx;");
    asm("loc_65FC393: dec %ebx;");
    asm("loc_65FC394: mov %ebx,0x30(%esp);");
    asm("loc_65FC398: lea (%ebp,%ebp,2),%eax;");
    asm("loc_65FC39C: shl $2,%eax;");
    asm("loc_65FC39F: mov %edx,0xA8(%esp);");
    asm("loc_65FC3A6: mov %eax,0x60(%esp);");
    asm("loc_65FC3AA: lea (%ebx),%ebx;");
    asm("loc_65FC3B0: mov 0x11(%esp),%cl;");
    asm("loc_65FC3B4: mov 0x34(%esp),%ebx;");
    asm("loc_65FC3B8: mov 0x40(%ebx),%ebp;");
    asm("loc_65FC3BB: xor %eax,%eax;");
    asm("loc_65FC3BD: test %cl,%cl;");
    asm("loc_65FC3BF: movl $0x40000000,0x28(%esp);");
    asm("loc_65FC3C7: movl $0x7F7FFFFF,0x5C(%esp);");
    asm("loc_65FC3CF: mov %eax,0x18(%esp);");
    asm("loc_65FC3D3: je loc_65FC3D6;");
    asm("loc_65FC3D5: inc %ebp;");
    asm("loc_65FC3D6: mov $1,%edi;");
    asm("loc_65FC3DB: cmp %edi,%ebp;");
    asm("loc_65FC3DD: mov %ebp,0x14(%esp);");
    asm("loc_65FC3E1: jle loc_65FC5A0;");
    asm("loc_65FC3E7: mov 0x48(%esp),%ecx;");
    asm("loc_65FC3EB: lea 0x320(%esp),%esi;");
    asm("loc_65FC3F2: movl $_data_66031D4,0x2C(%esp);");
    asm("loc_65FC3FA: sub $0xC,%esi;");
    asm("loc_65FC3FD: lea (%ecx),%ecx;");
    asm("loc_65FC400: mov 0x13(%esp),%dl;");
    asm("loc_65FC404: test %dl,%dl;");
    asm("loc_65FC406: je loc_65FC50C;");
    asm("loc_65FC40C: cmp 0x40(%ebx),%edi;");
    asm("loc_65FC40F: jne loc_65FC429;");
    asm("loc_65FC411: flds _data_6601318;");
    asm("loc_65FC417: movl $0,0x54(%esp);");
    asm("loc_65FC41F: movl $0,0x4C(%esp);");
    asm("loc_65FC427: jmp loc_65FC499;");
    asm("loc_65FC429: mov 8(%ebx),%edx;");
    asm("loc_65FC42C: mov (%edx,%edi,4),%edx;");
    asm("loc_65FC42F: mov _data_6603134,%eax;");
    asm("loc_65FC434: mov (%eax),%ecx;");
    asm("loc_65FC436: push %edx;");
    asm("loc_65FC437: push %eax;");
    asm("loc_65FC438: calll *0xC4(%ecx);");
    asm("loc_65FC43E: mov %eax,%ebp;");
    asm("loc_65FC440: mov _data_66033A8,%eax;");
    asm("loc_65FC445: test %eax,%eax;");
    asm("loc_65FC447: jne loc_65FC453;");
    asm("loc_65FC449: call _sub_6600DE0;");
    asm("loc_65FC44E: mov %eax,_data_66033A8;");
    asm("loc_65FC453: mov 0x2C(%esp),%edx;");
    asm("loc_65FC457: mov (%eax),%ecx;");
    asm("loc_65FC459: add $4,%ebp;");
    asm("loc_65FC45C: push %ebp;");
    asm("loc_65FC45D: push %edx;");
    asm("loc_65FC45E: lea 0xC0(%esp),%edx;");
    asm("loc_65FC465: push %edx;");
    asm("loc_65FC466: push %eax;");
    asm("loc_65FC467: calll *0x2C(%ecx);");
    asm("loc_65FC46A: mov 0xB8(%esp),%eax;");
    asm("loc_65FC471: mov 0xBC(%esp),%ecx;");
    asm("loc_65FC478: mov 0xC0(%esp),%edx;");
    asm("loc_65FC47F: mov 0x14(%esp),%ebp;");
    asm("loc_65FC483: mov %ecx,0x50(%esp);");
    asm("loc_65FC487: flds 0x50(%esp);");
    asm("loc_65FC48B: mov 0x48(%esp),%ecx;");
    asm("loc_65FC48F: mov %eax,0x4C(%esp);");
    asm("loc_65FC493: mov %edx,0x54(%esp);");
    asm("loc_65FC497: xor %eax,%eax;");
    asm("loc_65FC499: mov 0x2C(%ebx),%edx;");
    asm("loc_65FC49C: cmpb $0,-1(%edx,%edi);");
    asm("loc_65FC4A1: je loc_65FC4D9;");
    asm("loc_65FC4A3: flds 0x54(%esp);");
    asm("loc_65FC4A7: fadds -4(%esi);");
    asm("loc_65FC4AA: fstps -4(%esi);");
    asm("loc_65FC4AD: flds (%esi);");
    asm("loc_65FC4AF: fsub %st(1),%st;");
    asm("loc_65FC4B1: fstps (%esi);");
    asm("loc_65FC4B3: flds 0x28(%esi);");
    asm("loc_65FC4B6: fsubs 0x54(%esp);");
    asm("loc_65FC4BA: fstps 0x28(%esi);");
    asm("loc_65FC4BD: flds 0x4C(%esp);");
    asm("loc_65FC4C1: fadds 0x30(%esi);");
    asm("loc_65FC4C4: fstps 0x30(%esi);");
    asm("loc_65FC4C7: fadds 0x58(%esi);");
    asm("loc_65FC4CA: fstps 0x58(%esi);");
    asm("loc_65FC4CD: flds 0x5C(%esi);");
    asm("loc_65FC4D0: fsubs 0x4C(%esp);");
    asm("loc_65FC4D4: fstps 0x5C(%esi);");
    asm("loc_65FC4D7: jmp loc_65FC50C;");
    asm("loc_65FC4D9: mov 0x54(%esp),%edx;");
    asm("loc_65FC4DD: fld %st(0);");
    asm("loc_65FC4DF: fchs;");
    asm("loc_65FC4E1: mov %edx,8(%esi);");
    asm("loc_65FC4E4: mov 0x4C(%esp),%edx;");
    asm("loc_65FC4E8: fstps 0xC(%esi);");
    asm("loc_65FC4EB: flds 0x54(%esp);");
    asm("loc_65FC4EF: mov %eax,0x6C(%esi);");
    asm("loc_65FC4F2: fchs;");
    asm("loc_65FC4F4: mov %eax,0x38(%esi);");
    asm("loc_65FC4F7: fstps 0x34(%esi);");
    asm("loc_65FC4FA: mov %eax,4(%esi);");
    asm("loc_65FC4FD: mov %edx,0x3C(%esi);");
    asm("loc_65FC500: fstps 0x64(%esi);");
    asm("loc_65FC503: flds 0x4C(%esp);");
    asm("loc_65FC507: fchs;");
    asm("loc_65FC509: fstps 0x68(%esi);");
    asm("loc_65FC50C: mov 0x11(%esp),%dl;");
    asm("loc_65FC510: test %dl,%dl;");
    asm("loc_65FC512: je loc_65FC57A;");
    asm("loc_65FC514: mov 0x2C(%ebx),%edx;");
    asm("loc_65FC517: cmpb $0,-1(%edx,%edi);");
    asm("loc_65FC51C: jne loc_65FC57A;");
    asm("loc_65FC51E: mov 0x18(%esp),%edx;");
    asm("loc_65FC522: lea (%ecx,%ecx,2),%eax;");
    asm("loc_65FC525: lea (%edx,%eax,4),%eax;");
    asm("loc_65FC528: shl $2,%eax;");
    asm("loc_65FC52B: xor %edx,%edx;");
    asm("loc_65FC52D: movl $0x3F800000,0x318(%esp,%eax);");
    asm("loc_65FC538: mov %edx,0x31C(%esp,%eax);");
    asm("loc_65FC53F: mov %edx,0x320(%esp,%eax);");
    asm("loc_65FC546: mov %edx,0x348(%esp,%eax);");
    asm("loc_65FC54D: movl $0x3F800000,0x34C(%esp,%eax);");
    asm("loc_65FC558: mov %edx,0x350(%esp,%eax);");
    asm("loc_65FC55F: mov %edx,0x378(%esp,%eax);");
    asm("loc_65FC566: mov %edx,0x37C(%esp,%eax);");
    asm("loc_65FC56D: movl $0x3F800000,0x380(%esp,%eax);");
    asm("loc_65FC578: xor %eax,%eax;");
    asm("loc_65FC57A: mov 0x2C(%ebx),%edx;");
    asm("loc_65FC57D: cmpb $0,-1(%edx,%edi);");
    asm("loc_65FC582: jne loc_65FC58C;");
    asm("loc_65FC584: addl $3,0x18(%esp);");
    asm("loc_65FC589: add $0xC,%esi;");
    asm("loc_65FC58C: mov 0x2C(%esp),%edx;");
    asm("loc_65FC590: inc %edi;");
    asm("loc_65FC591: add $0x24,%edx;");
    asm("loc_65FC594: cmp %ebp,%edi;");
    asm("loc_65FC596: mov %edx,0x2C(%esp);");
    asm("loc_65FC59A: jl loc_65FC400;");
    asm("loc_65FC5A0: lea 0x7A8(%esp),%eax;");
    asm("loc_65FC5A7: push %eax;");
    asm("loc_65FC5A8: lea 0x31C(%esp),%ecx;");
    asm("loc_65FC5AF: call _sub_65F9D70;");
    asm("loc_65FC5B4: lea 0x560(%esp),%ecx;");
    asm("loc_65FC5BB: push %ecx;");
    asm("loc_65FC5BC: lea 0x31C(%esp),%edx;");
    asm("loc_65FC5C3: push %edx;");
    asm("loc_65FC5C4: lea 0x7B0(%esp),%eax;");
    asm("loc_65FC5CB: push %eax;");
    asm("loc_65FC5CC: call _sub_65FAEF0;");
    asm("loc_65FC5D1: flds 0x38(%ebx);");
    asm("loc_65FC5D4: mov 0x7AC(%esp),%edi;");
    asm("loc_65FC5DB: fld %st(0);");
    asm("loc_65FC5DD: mov 0x7B0(%esp),%eax;");
    asm("loc_65FC5E4: fmul %st(1),%st;");
    asm("loc_65FC5E6: add $0xC,%esp;");
    asm("loc_65FC5E9: xor %esi,%esi;");
    asm("loc_65FC5EB: test %edi,%edi;");
    asm("loc_65FC5ED: fstps 0x14(%esp);");
    asm("loc_65FC5F1: fstp %st(0);");
    asm("loc_65FC5F3: jle loc_65FC636;");
    asm("loc_65FC5F5: xor %edx,%edx;");
    asm("loc_65FC5F7: xor %ecx,%ecx;");
    asm("loc_65FC5F9: test %eax,%eax;");
    asm("loc_65FC5FB: jle loc_65FC62E;");
    asm("loc_65FC5FD: lea (%ecx),%ecx;");
    asm("loc_65FC600: cmp %ecx,%esi;");
    asm("loc_65FC602: jne loc_65FC622;");
    asm("loc_65FC604: flds 0x14(%esp);");
    asm("loc_65FC608: lea (%edx,%ecx),%eax;");
    asm("loc_65FC60B: fadds 0x560(%esp,%eax,4);");
    asm("loc_65FC612: lea 0x560(%esp,%eax,4),%eax;");
    asm("loc_65FC619: fstps (%eax);");
    asm("loc_65FC61B: mov 0x7A4(%esp),%eax;");
    asm("loc_65FC622: inc %ecx;");
    asm("loc_65FC623: cmp %eax,%ecx;");
    asm("loc_65FC625: jl loc_65FC600;");
    asm("loc_65FC627: mov 0x7A0(%esp),%edi;");
    asm("loc_65FC62E: inc %esi;");
    asm("loc_65FC62F: add $0xC,%edx;");
    asm("loc_65FC632: cmp %edi,%esi;");
    asm("loc_65FC634: jl loc_65FC5F7;");
    asm("loc_65FC636: lea 0x9F0(%esp),%ecx;");
    asm("loc_65FC63D: push %ecx;");
    asm("loc_65FC63E: lea 0x564(%esp),%ecx;");
    asm("loc_65FC645: mov %eax,0xC34(%esp);");
    asm("loc_65FC64C: mov %edi,0xC38(%esp);");
    asm("loc_65FC653: call _sub_65FADB0;");
    asm("loc_65FC658: mov 0x28(%ebx),%eax;");
    asm("loc_65FC65B: mov 0x38(%esp),%edx;");
    asm("loc_65FC65F: shr $7,%eax;");
    asm("loc_65FC662: not %al;");
    asm("loc_65FC664: and $1,%al;");
    asm("loc_65FC666: mov %edx,0x2CC(%esp);");
    asm("loc_65FC66D: mov %al,0x12(%esp);");
    asm("loc_65FC671: je loc_65FC798;");
    asm("loc_65FC677: mov 0x30(%esp),%ecx;");
    asm("loc_65FC67B: xor %eax,%eax;");
    asm("loc_65FC67D: test %ecx,%ecx;");
    asm("loc_65FC67F: mov %eax,0x18(%esp);");
    asm("loc_65FC683: jle loc_65FC798;");
    asm("loc_65FC689: lea 0x2A0(%esp),%ecx;");
    asm("loc_65FC690: xor %ebp,%ebp;");
    asm("loc_65FC692: mov %ecx,0x14(%esp);");
    asm("loc_65FC696: mov 0x2C(%ebx),%edx;");
    asm("loc_65FC699: cmpb $0,(%eax,%edx);");
    asm("loc_65FC69D: jne loc_65FC784;");
    asm("loc_65FC6A3: mov 0xC(%ebx),%esi;");
    asm("loc_65FC6A6: mov _data_66033A8,%eax;");
    asm("loc_65FC6AB: add %ebp,%esi;");
    asm("loc_65FC6AD: test %eax,%eax;");
    asm("loc_65FC6AF: jne loc_65FC6BB;");
    asm("loc_65FC6B1: call _sub_6600DE0;");
    asm("loc_65FC6B6: mov %eax,_data_66033A8;");
    asm("loc_65FC6BB: mov (%eax),%ecx;");
    asm("loc_65FC6BD: push %esi;");
    asm("loc_65FC6BE: lea _data_66031D4(%ebp),%ebx;");
    asm("loc_65FC6C4: lea -0x24(%ebx),%edx;");
    asm("loc_65FC6C7: push %edx;");
    asm("loc_65FC6C8: lea 0x108(%esp),%edx;");
    asm("loc_65FC6CF: push %edx;");
    asm("loc_65FC6D0: push %eax;");
    asm("loc_65FC6D1: calll *0x20(%ecx);");
    asm("loc_65FC6D4: mov _data_66033A8,%eax;");
    asm("loc_65FC6D9: test %eax,%eax;");
    asm("loc_65FC6DB: mov $9,%ecx;");
    asm("loc_65FC6E0: lea 0x100(%esp),%esi;");
    asm("loc_65FC6E7: lea 0x2F4(%esp),%edi;");
    asm("loc_65FC6EE: rep movsl (%esi),(%edi);");
    asm("loc_65FC6F0: jne loc_65FC6FC;");
    asm("loc_65FC6F2: call _sub_6600DE0;");
    asm("loc_65FC6F7: mov %eax,_data_66033A8;");
    asm("loc_65FC6FC: mov (%eax),%ecx;");
    asm("loc_65FC6FE: push %ebx;");
    asm("loc_65FC6FF: lea 0x1E4(%esp),%edx;");
    asm("loc_65FC706: push %edx;");
    asm("loc_65FC707: push %eax;");
    asm("loc_65FC708: calll *0x50(%ecx);");
    asm("loc_65FC70B: mov _data_66033A8,%eax;");
    asm("loc_65FC710: test %eax,%eax;");
    asm("loc_65FC712: jne loc_65FC71E;");
    asm("loc_65FC714: call _sub_6600DE0;");
    asm("loc_65FC719: mov %eax,_data_66033A8;");
    asm("loc_65FC71E: mov (%eax),%ecx;");
    asm("loc_65FC720: lea 0x2F4(%esp),%edx;");
    asm("loc_65FC727: push %edx;");
    asm("loc_65FC728: lea 0x204(%esp),%edx;");
    asm("loc_65FC72F: push %edx;");
    asm("loc_65FC730: push %eax;");
    asm("loc_65FC731: calll *0x50(%ecx);");
    asm("loc_65FC734: lea 0x200(%esp),%eax;");
    asm("loc_65FC73B: push %eax;");
    asm("loc_65FC73C: lea 0x1E4(%esp),%ecx;");
    asm("loc_65FC743: push %ecx;");
    asm("loc_65FC744: lea 0xCC(%esp),%edx;");
    asm("loc_65FC74B: push %edx;");
    asm("loc_65FC74C: call _sub_65FBDF0;");
    asm("loc_65FC751: mov 0x20(%esp),%eax;");
    asm("loc_65FC755: mov 0xD0(%esp),%ecx;");
    asm("loc_65FC75C: mov 0xD4(%esp),%edx;");
    asm("loc_65FC763: mov 0x40(%esp),%ebx;");
    asm("loc_65FC767: mov %ecx,-4(%eax);");
    asm("loc_65FC76A: mov 0xD8(%esp),%ecx;");
    asm("loc_65FC771: mov %edx,(%eax);");
    asm("loc_65FC773: mov %ecx,4(%eax);");
    asm("loc_65FC776: add $0xC,%esp;");
    asm("loc_65FC779: add $0xC,%eax;");
    asm("loc_65FC77C: mov %eax,0x14(%esp);");
    asm("loc_65FC780: mov 0x18(%esp),%eax;");
    asm("loc_65FC784: mov 0x30(%esp),%ecx;");
    asm("loc_65FC788: inc %eax;");
    asm("loc_65FC789: add $0x24,%ebp;");
    asm("loc_65FC78C: cmp %ecx,%eax;");
    asm("loc_65FC78E: mov %eax,0x18(%esp);");
    asm("loc_65FC792: jl loc_65FC696;");
    asm("loc_65FC798: flds 0x28(%esp);");
    asm("loc_65FC79C: mov 0x60(%esp),%esi;");
    asm("loc_65FC7A0: fmull _data_6601338;");
    asm("loc_65FC7A6: fstps 0x28(%esp);");
    asm("loc_65FC7AA: flds 0x68(%esp);");
    asm("loc_65FC7AE: fsubs _data_6603264(%esi);");
    asm("loc_65FC7B4: fstps 0x74(%esp);");
    asm("loc_65FC7B8: flds 0x6C(%esp);");
    asm("loc_65FC7BC: mov 0x74(%esp),%edx;");
    asm("loc_65FC7C0: fsubs _data_6603268(%esi);");
    asm("loc_65FC7C6: mov %edx,0x3C(%esp);");
    asm("loc_65FC7CA: fstps 0x78(%esp);");
    asm("loc_65FC7CE: flds 0x70(%esp);");
    asm("loc_65FC7D2: mov 0x78(%esp),%eax;");
    asm("loc_65FC7D6: fsubs _data_660326C(%esi);");
    asm("loc_65FC7DC: mov %eax,0x40(%esp);");
    asm("loc_65FC7E0: cmpl $1,0x24(%esp);");
    asm("loc_65FC7E5: fstps 0x7C(%esp);");
    asm("loc_65FC7E9: mov 0x7C(%esp),%ecx;");
    asm("loc_65FC7ED: mov %ecx,0x44(%esp);");
    asm("loc_65FC7F1: lea 0xA8(%esp),%eax;");
    asm("loc_65FC7F8: jl loc_65FC7FE;");
    asm("loc_65FC7FA: lea 0x24(%esp),%eax;");
    asm("loc_65FC7FE: fildl (%eax);");
    asm("loc_65FC800: mov 0x24(%esp),%ecx;");
    asm("loc_65FC804: mov 0x13(%esp),%al;");
    asm("loc_65FC808: mov 0x58(%esp),%edx;");
    asm("loc_65FC80C: fdivrs _data_66011E0;");
    asm("loc_65FC812: dec %ecx;");
    asm("loc_65FC813: test %al,%al;");
    asm("loc_65FC815: mov %ecx,0x24(%esp);");
    asm("loc_65FC819: mov %edx,0x164(%esp);");
    asm("loc_65FC820: flds 0x74(%esp);");
    asm("loc_65FC824: fmul %st(1),%st;");
    asm("loc_65FC826: fstps 0x3C(%esp);");
    asm("loc_65FC82A: flds 0x40(%esp);");
    asm("loc_65FC82E: fmul %st(1),%st;");
    asm("loc_65FC830: fstps 0x40(%esp);");
    asm("loc_65FC834: fmuls 0x44(%esp);");
    asm("loc_65FC838: je loc_65FC859;");
    asm("loc_65FC83A: mov 0x3C(%esp),%eax;");
    asm("loc_65FC83E: fstps 0x13C(%esp);");
    asm("loc_65FC845: mov 0x40(%esp),%ecx;");
    asm("loc_65FC849: mov %eax,0x134(%esp);");
    asm("loc_65FC850: mov %ecx,0x138(%esp);");
    asm("loc_65FC857: jmp loc_65FC85B;");
    asm("loc_65FC859: fstp %st(0);");
    asm("loc_65FC85B: mov 0x11(%esp),%al;");
    asm("loc_65FC85F: test %al,%al;");
    asm("loc_65FC861: je loc_65FC8E5;");
    asm("loc_65FC867: mov _data_66033A8,%eax;");
    asm("loc_65FC86C: test %eax,%eax;");
    asm("loc_65FC86E: jne loc_65FC87A;");
    asm("loc_65FC870: call _sub_6600DE0;");
    asm("loc_65FC875: mov %eax,_data_66033A8;");
    asm("loc_65FC87A: mov 0x64(%esp),%ecx;");
    asm("loc_65FC87E: mov (%eax),%edx;");
    asm("loc_65FC880: lea (%ecx,%ecx,8),%ecx;");
    asm("loc_65FC883: lea _data_66031B0(,%ecx,4),%ecx;");
    asm("loc_65FC88A: push %ecx;");
    asm("loc_65FC88B: lea 0x1F4(%esp),%ecx;");
    asm("loc_65FC892: push %ecx;");
    asm("loc_65FC893: push %eax;");
    asm("loc_65FC894: calll *0x50(%edx);");
    asm("loc_65FC897: lea 0x124(%esp),%edx;");
    asm("loc_65FC89E: push %edx;");
    asm("loc_65FC89F: lea 0x1F4(%esp),%eax;");
    asm("loc_65FC8A6: push %eax;");
    asm("loc_65FC8A7: lea 0xE4(%esp),%ecx;");
    asm("loc_65FC8AE: push %ecx;");
    asm("loc_65FC8AF: call _sub_65FBDF0;");
    asm("loc_65FC8B4: flds 0xE8(%esp);");
    asm("loc_65FC8BB: mov 0x54(%esp),%eax;");
    asm("loc_65FC8BF: fstps 0x140(%esp,%eax,4);");
    asm("loc_65FC8C6: add $0xC,%esp;");
    asm("loc_65FC8C9: flds 0xE0(%esp);");
    asm("loc_65FC8D0: fstps 0x138(%esp,%eax,4);");
    asm("loc_65FC8D7: flds 0xE4(%esp);");
    asm("loc_65FC8DE: fstps 0x13C(%esp,%eax,4);");
    asm("loc_65FC8E5: mov 0x164(%esp),%edx;");
    asm("loc_65FC8EC: lea 0x19C(%esp),%eax;");
    asm("loc_65FC8F3: push %eax;");
    asm("loc_65FC8F4: lea 0x138(%esp),%ecx;");
    asm("loc_65FC8FB: push %ecx;");
    asm("loc_65FC8FC: lea 0x7B0(%esp),%ecx;");
    asm("loc_65FC903: mov %edx,0x1D4(%esp);");
    asm("loc_65FC90A: call _sub_65FAFC0;");
    asm("loc_65FC90F: mov 0x12(%esp),%al;");
    asm("loc_65FC913: test %al,%al;");
    asm("loc_65FC915: je loc_65FC95A;");
    asm("loc_65FC917: mov 0x34(%esp),%edx;");
    asm("loc_65FC91B: flds 0x38(%edx);");
    asm("loc_65FC91E: mov 0x1CC(%esp),%ecx;");
    asm("loc_65FC925: fmuls _data_66013C0;");
    asm("loc_65FC92B: xor %eax,%eax;");
    asm("loc_65FC92D: test %ecx,%ecx;");
    asm("loc_65FC92F: fstps 0x14(%esp);");
    asm("loc_65FC933: jle loc_65FC95A;");
    asm("loc_65FC935: flds 0x14(%esp);");
    asm("loc_65FC939: inc %eax;");
    asm("loc_65FC93A: fmuls 0x298(%esp,%eax,4);");
    asm("loc_65FC941: fadds 0x198(%esp,%eax,4);");
    asm("loc_65FC948: fstps 0x198(%esp,%eax,4);");
    asm("loc_65FC94F: mov 0x1CC(%esp),%ecx;");
    asm("loc_65FC956: cmp %ecx,%eax;");
    asm("loc_65FC958: jl loc_65FC935;");
    asm("loc_65FC95A: lea 0x268(%esp),%eax;");
    asm("loc_65FC961: push %eax;");
    asm("loc_65FC962: lea 0x1A0(%esp),%ecx;");
    asm("loc_65FC969: push %ecx;");
    asm("loc_65FC96A: lea 0x9F8(%esp),%ecx;");
    asm("loc_65FC971: call _sub_65FAFC0;");
    asm("loc_65FC976: lea _data_6603264(%esi),%eax;");
    asm("loc_65FC97C: mov (%eax),%edx;");
    asm("loc_65FC97E: mov 4(%eax),%ecx;");
    asm("loc_65FC981: mov %edx,0x9C(%esp);");
    asm("loc_65FC988: mov 8(%eax),%edx;");
    asm("loc_65FC98B: mov 0x30(%esp),%eax;");
    asm("loc_65FC98F: test %eax,%eax;");
    asm("loc_65FC991: mov %ecx,0xA0(%esp);");
    asm("loc_65FC998: mov %edx,0xA4(%esp);");
    asm("loc_65FC99F: movl $0,0x18(%esp);");
    asm("loc_65FC9A7: jle loc_65FCB6D;");
    asm("loc_65FC9AD: lea 0x270(%esp),%eax;");
    asm("loc_65FC9B4: mov $_data_66032B0,%ebp;");
    asm("loc_65FC9B9: mov %eax,0x14(%esp);");
    asm("loc_65FC9BD: xor %ebx,%ebx;");
    asm("loc_65FC9BF: nop;");
    asm("loc_65FC9C0: mov 0x34(%esp),%edi;");
    asm("loc_65FC9C4: mov 8(%edi),%edx;");
    asm("loc_65FC9C7: mov 0x18(%esp),%esi;");
    asm("loc_65FC9CB: mov (%edx,%esi,4),%edx;");
    asm("loc_65FC9CE: mov _data_6603134,%eax;");
    asm("loc_65FC9D3: mov (%eax),%ecx;");
    asm("loc_65FC9D5: push %edx;");
    asm("loc_65FC9D6: push %eax;");
    asm("loc_65FC9D7: calll *0xC4(%ecx);");
    asm("loc_65FC9DD: mov %eax,0x2C(%esp);");
    asm("loc_65FC9E1: mov 0x2C(%edi),%eax;");
    asm("loc_65FC9E4: cmpb $0,(%esi,%eax);");
    asm("loc_65FC9E8: jne loc_65FCA13;");
    asm("loc_65FC9EA: mov 0x14(%esp),%eax;");
    asm("loc_65FC9EE: flds -8(%eax);");
    asm("loc_65FC9F1: add $0xC,%eax;");
    asm("loc_65FC9F4: fstps 0xAC(%esp);");
    asm("loc_65FC9FB: flds -0x10(%eax);");
    asm("loc_65FC9FE: mov %eax,0x14(%esp);");
    asm("loc_65FCA02: fstps 0xB0(%esp);");
    asm("loc_65FCA09: flds -0xC(%eax);");
    asm("loc_65FCA0C: fstps 0xB4(%esp);");
    asm("loc_65FCA13: flds 0xAC(%esp);");
    asm("loc_65FCA1A: lea 0xE8(%esp),%ecx;");
    asm("loc_65FCA21: fmuls _data_6601328;");
    asm("loc_65FCA27: push %ecx;");
    asm("loc_65FCA28: lea 0x25C(%esp),%edx;");
    asm("loc_65FCA2F: push %edx;");
    asm("loc_65FCA30: fstps 0xF0(%esp);");
    asm("loc_65FCA37: flds 0xB8(%esp);");
    asm("loc_65FCA3E: fmuls _data_6601328;");
    asm("loc_65FCA44: fstps 0xF4(%esp);");
    asm("loc_65FCA4B: flds 0xBC(%esp);");
    asm("loc_65FCA52: fmuls _data_6601328;");
    asm("loc_65FCA58: fstps 0xF8(%esp);");
    asm("loc_65FCA5F: call _sub_65FBD30;");
    asm("loc_65FCA64: mov %eax,%esi;");
    asm("loc_65FCA66: mov _data_66033A8,%eax;");
    asm("loc_65FCA6B: add $8,%esp;");
    asm("loc_65FCA6E: test %eax,%eax;");
    asm("loc_65FCA70: jne loc_65FCA7C;");
    asm("loc_65FCA72: call _sub_6600DE0;");
    asm("loc_65FCA77: mov %eax,_data_66033A8;");
    asm("loc_65FCA7C: mov (%eax),%ecx;");
    asm("loc_65FCA7E: push %esi;");
    asm("loc_65FCA7F: lea 0x238(%esp),%edx;");
    asm("loc_65FCA86: push %edx;");
    asm("loc_65FCA87: push %eax;");
    asm("loc_65FCA88: calll *0x54(%ecx);");
    asm("loc_65FCA8B: mov _data_66033A8,%eax;");
    asm("loc_65FCA90: test %eax,%eax;");
    asm("loc_65FCA92: jne loc_65FCA9E;");
    asm("loc_65FCA94: call _sub_6600DE0;");
    asm("loc_65FCA99: mov %eax,_data_66033A8;");
    asm("loc_65FCA9E: mov (%eax),%ecx;");
    asm("loc_65FCAA0: lea _data_66031D4(%ebx),%edx;");
    asm("loc_65FCAA6: push %edx;");
    asm("loc_65FCAA7: lea 0x238(%esp),%edx;");
    asm("loc_65FCAAE: push %edx;");
    asm("loc_65FCAAF: lea 0x218(%esp),%edx;");
    asm("loc_65FCAB6: push %edx;");
    asm("loc_65FCAB7: push %eax;");
    asm("loc_65FCAB8: calll *0x20(%ecx);");
    asm("loc_65FCABB: mov _data_66033A8,%eax;");
    asm("loc_65FCAC0: test %eax,%eax;");
    asm("loc_65FCAC2: lea _data_660330C(%ebx),%edi;");
    asm("loc_65FCAC8: mov $9,%ecx;");
    asm("loc_65FCACD: lea 0x210(%esp),%esi;");
    asm("loc_65FCAD4: rep movsl (%esi),(%edi);");
    asm("loc_65FCAD6: jne loc_65FCAE2;");
    asm("loc_65FCAD8: call _sub_6600DE0;");
    asm("loc_65FCADD: mov %eax,_data_66033A8;");
    asm("loc_65FCAE2: mov 0x2C(%esp),%edx;");
    asm("loc_65FCAE6: mov (%eax),%ecx;");
    asm("loc_65FCAE8: add $4,%edx;");
    asm("loc_65FCAEB: push %edx;");
    asm("loc_65FCAEC: lea _data_66032E8(%ebx),%edx;");
    asm("loc_65FCAF2: push %edx;");
    asm("loc_65FCAF3: lea 0xFC(%esp),%edx;");
    asm("loc_65FCAFA: push %edx;");
    asm("loc_65FCAFB: push %eax;");
    asm("loc_65FCAFC: calll *0x2C(%ecx);");
    asm("loc_65FCAFF: flds 0xF4(%esp);");
    asm("loc_65FCB06: fadds -8(%ebp);");
    asm("loc_65FCB09: lea 4(%ebp),%eax;");
    asm("loc_65FCB0C: add $0x24,%ebx;");
    asm("loc_65FCB0F: add $0xC,%ebp;");
    asm("loc_65FCB12: fstps 0x90(%esp);");
    asm("loc_65FCB19: flds 0xF8(%esp);");
    asm("loc_65FCB20: mov 0x90(%esp),%ecx;");
    asm("loc_65FCB27: fadds -0x10(%ebp);");
    asm("loc_65FCB2A: fstps 0x94(%esp);");
    asm("loc_65FCB31: flds 0xFC(%esp);");
    asm("loc_65FCB38: mov 0x94(%esp),%edx;");
    asm("loc_65FCB3F: fadds -0xC(%ebp);");
    asm("loc_65FCB42: mov %ecx,(%eax);");
    asm("loc_65FCB44: mov %edx,4(%eax);");
    asm("loc_65FCB47: fstps 0x98(%esp);");
    asm("loc_65FCB4E: mov 0x98(%esp),%ecx;");
    asm("loc_65FCB55: mov %ecx,8(%eax);");
    asm("loc_65FCB58: mov 0x18(%esp),%eax;");
    asm("loc_65FCB5C: mov 0x30(%esp),%ecx;");
    asm("loc_65FCB60: inc %eax;");
    asm("loc_65FCB61: cmp %ecx,%eax;");
    asm("loc_65FCB63: mov %eax,0x18(%esp);");
    asm("loc_65FCB67: jl loc_65FC9C0;");
    asm("loc_65FCB6D: mov 0x13(%esp),%al;");
    asm("loc_65FCB71: test %al,%al;");
    asm("loc_65FCB73: je loc_65FCBC5;");
    asm("loc_65FCB75: mov 0x60(%esp),%eax;");
    asm("loc_65FCB79: flds _data_66032A8(%eax);");
    asm("loc_65FCB7F: fsubs 0x9C(%esp);");
    asm("loc_65FCB86: flds _data_66032AC(%eax);");
    asm("loc_65FCB8C: fsubs 0xA0(%esp);");
    asm("loc_65FCB93: flds _data_66032B0(%eax);");
    asm("loc_65FCB99: fsubs 0xA4(%esp);");
    asm("loc_65FCBA0: fstps 0x88(%esp);");
    asm("loc_65FCBA7: mov 0x88(%esp),%edx;");
    asm("loc_65FCBAE: fxch;");
    asm("loc_65FCBB0: fstps 0x168(%esp);");
    asm("loc_65FCBB7: mov %edx,0x170(%esp);");
    asm("loc_65FCBBE: fstps 0x16C(%esp);");
    asm("loc_65FCBC5: mov 0x11(%esp),%al;");
    asm("loc_65FCBC9: test %al,%al;");
    asm("loc_65FCBCB: je loc_65FCC4F;");
    asm("loc_65FCBD1: mov _data_66033A8,%eax;");
    asm("loc_65FCBD6: test %eax,%eax;");
    asm("loc_65FCBD8: jne loc_65FCBE4;");
    asm("loc_65FCBDA: call _sub_6600DE0;");
    asm("loc_65FCBDF: mov %eax,_data_66033A8;");
    asm("loc_65FCBE4: mov 0x64(%esp),%ecx;");
    asm("loc_65FCBE8: mov (%eax),%edx;");
    asm("loc_65FCBEA: lea (%ecx,%ecx,8),%ecx;");
    asm("loc_65FCBED: lea _data_66032E8(,%ecx,4),%ecx;");
    asm("loc_65FCBF4: push %ecx;");
    asm("loc_65FCBF5: lea 0x1D4(%esp),%ecx;");
    asm("loc_65FCBFC: push %ecx;");
    asm("loc_65FCBFD: push %eax;");
    asm("loc_65FCBFE: calll *0x50(%edx);");
    asm("loc_65FCC01: lea 0x124(%esp),%edx;");
    asm("loc_65FCC08: push %edx;");
    asm("loc_65FCC09: lea 0x1D4(%esp),%eax;");
    asm("loc_65FCC10: push %eax;");
    asm("loc_65FCC11: lea 0xD8(%esp),%ecx;");
    asm("loc_65FCC18: push %ecx;");
    asm("loc_65FCC19: call _sub_65FBDF0;");
    asm("loc_65FCC1E: flds 0xDC(%esp);");
    asm("loc_65FCC25: mov 0x54(%esp),%eax;");
    asm("loc_65FCC29: fstps 0x174(%esp,%eax,4);");
    asm("loc_65FCC30: add $0xC,%esp;");
    asm("loc_65FCC33: flds 0xD4(%esp);");
    asm("loc_65FCC3A: fstps 0x16C(%esp,%eax,4);");
    asm("loc_65FCC41: flds 0xD8(%esp);");
    asm("loc_65FCC48: fstps 0x170(%esp,%eax,4);");
    asm("loc_65FCC4F: mov 0x58(%esp),%ecx;");
    asm("loc_65FCC53: flds _data_6601318;");
    asm("loc_65FCC59: xor %eax,%eax;");
    asm("loc_65FCC5B: test %ecx,%ecx;");
    asm("loc_65FCC5D: jle loc_65FCC7B;");
    asm("loc_65FCC5F: nop;");
    asm("loc_65FCC60: flds 0x134(%esp,%eax,4);");
    asm("loc_65FCC67: inc %eax;");
    asm("loc_65FCC68: cmp %ecx,%eax;");
    asm("loc_65FCC6A: fsubs 0x164(%esp,%eax,4);");
    asm("loc_65FCC71: fld %st(0);");
    asm("loc_65FCC73: fmul %st(1),%st;");
    asm("loc_65FCC75: faddp %st,%st(2);");
    asm("loc_65FCC77: fstp %st(0);");
    asm("loc_65FCC79: jl loc_65FCC60;");
    asm("loc_65FCC7B: flds 0x5C(%esp);");
    asm("loc_65FCC7F: fsubr %st(1),%st;");
    asm("loc_65FCC81: fstps 0x14(%esp);");
    asm("loc_65FCC85: fsts 0x5C(%esp);");
    asm("loc_65FCC89: fcompl _data_66013C8;");
    asm("loc_65FCC8F: fnstsw %ax;");
    asm("loc_65FCC91: test $0x41,%ah;");
    asm("loc_65FCC94: jne loc_65FCCAB;");
    asm("loc_65FCC96: flds 0x14(%esp);");
    asm("loc_65FCC9A: fcompl _data_66013B8;");
    asm("loc_65FCCA0: fnstsw %ax;");
    asm("loc_65FCCA2: test $5,%ah;");
    asm("loc_65FCCA5: jnp loc_65FC798;");
    asm("loc_65FCCAB: flds 0x28(%esp);");
    asm("loc_65FCCAF: fmuls 0x20(%esp);");
    asm("loc_65FCCB3: fadds 0x1C(%esp);");
    asm("loc_65FCCB7: fstps 0x1C(%esp);");
    asm("loc_65FCCBB: flds _data_66011E0;");
    asm("loc_65FCCC1: fsubs 0x1C(%esp);");
    asm("loc_65FCCC5: fsts 0x2C(%esp);");
    asm("loc_65FCCC9: fcomps 0x20(%esp);");
    asm("loc_65FCCCD: fnstsw %ax;");
    asm("loc_65FCCCF: test $5,%ah;");
    asm("loc_65FCCD2: lea 0x2C(%esp),%eax;");
    asm("loc_65FCCD6: jnp loc_65FCCDC;");
    asm("loc_65FCCD8: lea 0x20(%esp),%eax;");
    asm("loc_65FCCDC: flds 0x1C(%esp);");
    asm("loc_65FCCE0: mov (%eax),%edx;");
    asm("loc_65FCCE2: fsubl _data_6601320;");
    asm("loc_65FCCE8: mov %edx,0x20(%esp);");
    asm("loc_65FCCEC: fabs;");
    asm("loc_65FCCEE: fcompl _data_66013C8;");
    asm("loc_65FCCF4: fnstsw %ax;");
    asm("loc_65FCCF6: test $0x41,%ah;");
    asm("loc_65FCCF9: jnp loc_65FCD10;");
    asm("loc_65FCCFB: flds 0x14(%esp);");
    asm("loc_65FCCFF: fcomps _data_6601318;");
    asm("loc_65FCD05: fnstsw %ax;");
    asm("loc_65FCD07: test $1,%ah;");
    asm("loc_65FCD0A: jne loc_65FC3B0;");
    asm("loc_65FCD10: mov 0x30(%esp),%eax;");
    asm("loc_65FCD14: xor %ebp,%ebp;");
    asm("loc_65FCD16: cmp %ebp,%eax;");
    asm("loc_65FCD18: jle loc_65FCE49;");
    asm("loc_65FCD1E: mov %ebp,0x28(%esp);");
    asm("loc_65FCD22: mov $_data_6603300,%ebx;");
    asm("loc_65FCD27: mov 0x34(%esp),%eax;");
    asm("loc_65FCD2B: mov 0x2C(%eax),%ecx;");
    asm("loc_65FCD2E: cmpb $0,(%ecx,%ebp);");
    asm("loc_65FCD32: jne loc_65FCE2E;");
    asm("loc_65FCD38: flds -0x18(%ebx);");
    asm("loc_65FCD3B: mov _data_66033A8,%eax;");
    asm("loc_65FCD40: test %eax,%eax;");
    asm("loc_65FCD42: fstps 0x100(%esp);");
    asm("loc_65FCD49: flds -0xC(%ebx);");
    asm("loc_65FCD4C: fstps 0x104(%esp);");
    asm("loc_65FCD53: flds (%ebx);");
    asm("loc_65FCD55: fstps 0x108(%esp);");
    asm("loc_65FCD5C: flds -0x14(%ebx);");
    asm("loc_65FCD5F: fstps 0x10C(%esp);");
    asm("loc_65FCD66: flds -8(%ebx);");
    asm("loc_65FCD69: fstps 0x110(%esp);");
    asm("loc_65FCD70: flds 4(%ebx);");
    asm("loc_65FCD73: fstps 0x114(%esp);");
    asm("loc_65FCD7A: flds -0x10(%ebx);");
    asm("loc_65FCD7D: fstps 0x118(%esp);");
    asm("loc_65FCD84: flds -4(%ebx);");
    asm("loc_65FCD87: fstps 0x11C(%esp);");
    asm("loc_65FCD8E: flds 8(%ebx);");
    asm("loc_65FCD91: fstps 0x120(%esp);");
    asm("loc_65FCD98: jne loc_65FCDA4;");
    asm("loc_65FCD9A: call _sub_6600DE0;");
    asm("loc_65FCD9F: mov %eax,_data_66033A8;");
    asm("loc_65FCDA4: mov (%eax),%edx;");
    asm("loc_65FCDA6: lea 0xC(%ebx),%ecx;");
    asm("loc_65FCDA9: push %ecx;");
    asm("loc_65FCDAA: lea 0x104(%esp),%ecx;");
    asm("loc_65FCDB1: push %ecx;");
    asm("loc_65FCDB2: lea 0x218(%esp),%ecx;");
    asm("loc_65FCDB9: push %ecx;");
    asm("loc_65FCDBA: push %eax;");
    asm("loc_65FCDBB: calll *0x20(%edx);");
    asm("loc_65FCDBE: mov _data_66033A8,%eax;");
    asm("loc_65FCDC3: test %eax,%eax;");
    asm("loc_65FCDC5: mov $9,%ecx;");
    asm("loc_65FCDCA: lea 0x210(%esp),%esi;");
    asm("loc_65FCDD1: lea 0x234(%esp),%edi;");
    asm("loc_65FCDD8: rep movsl (%esi),(%edi);");
    asm("loc_65FCDDA: jne loc_65FCDE6;");
    asm("loc_65FCDDC: call _sub_6600DE0;");
    asm("loc_65FCDE1: mov %eax,_data_66033A8;");
    asm("loc_65FCDE6: mov (%eax),%edx;");
    asm("loc_65FCDE8: lea 0x234(%esp),%ecx;");
    asm("loc_65FCDEF: push %ecx;");
    asm("loc_65FCDF0: lea 0x84(%esp),%ecx;");
    asm("loc_65FCDF7: push %ecx;");
    asm("loc_65FCDF8: push %eax;");
    asm("loc_65FCDF9: calll *0x50(%edx);");
    asm("loc_65FCDFC: mov 0x34(%esp),%edx;");
    asm("loc_65FCE00: mov 0x1C(%edx),%eax;");
    asm("loc_65FCE03: add 0x28(%esp),%eax;");
    asm("loc_65FCE07: mov 0x80(%esp),%ecx;");
    asm("loc_65FCE0E: mov %ecx,(%eax);");
    asm("loc_65FCE10: mov 0x84(%esp),%edx;");
    asm("loc_65FCE17: mov %edx,4(%eax);");
    asm("loc_65FCE1A: mov 0x88(%esp),%ecx;");
    asm("loc_65FCE21: mov %ecx,8(%eax);");
    asm("loc_65FCE24: mov 0x8C(%esp),%edx;");
    asm("loc_65FCE2B: mov %edx,0xC(%eax);");
    asm("loc_65FCE2E: mov 0x28(%esp),%ecx;");
    asm("loc_65FCE32: mov 0x30(%esp),%eax;");
    asm("loc_65FCE36: inc %ebp;");
    asm("loc_65FCE37: add $0x10,%ecx;");
    asm("loc_65FCE3A: add $0x24,%ebx;");
    asm("loc_65FCE3D: cmp %eax,%ebp;");
    asm("loc_65FCE3F: mov %ecx,0x28(%esp);");
    asm("loc_65FCE43: jl loc_65FCD27;");
    asm("loc_65FCE49: pop %edi;");
    asm("loc_65FCE4A: pop %esi;");
    asm("loc_65FCE4B: pop %ebp;");
    asm("loc_65FCE4C: pop %ebx;");
    asm("loc_65FCE4D: add $0xC28,%esp;");
    asm("loc_65FCE53: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FCE60() // _sub_65FCE60
{
    __DEBUG_ASM(65FCE60);
    // chunk 0x65FCE60 _sub_65FCE60
    asm("loc_65FCE60: sub $0xC1C,%esp;");
    asm("loc_65FCE66: push %ebx;");
    asm("loc_65FCE67: mov %ecx,%ebx;");
    asm("loc_65FCE69: mov 0x28(%ebx),%eax;");
    asm("loc_65FCE6C: mov 0x40(%ebx),%edx;");
    asm("loc_65FCE6F: lea (%edx,%edx,2),%edx;");
    asm("loc_65FCE72: mov %edx,0x34(%esp);");
    asm("loc_65FCE76: mov %eax,%ecx;");
    asm("loc_65FCE78: shr $5,%ecx;");
    asm("loc_65FCE7B: and $1,%cl;");
    asm("loc_65FCE7E: shr $6,%eax;");
    asm("loc_65FCE81: and $1,%al;");
    asm("loc_65FCE83: mov %cl,%dl;");
    asm("loc_65FCE85: neg %dl;");
    asm("loc_65FCE87: push %ebp;");
    asm("loc_65FCE88: push %esi;");
    asm("loc_65FCE89: push %edi;");
    asm("loc_65FCE8A: mov %ebx,0x30(%esp);");
    asm("loc_65FCE8E: mov %cl,0x13(%esp);");
    asm("loc_65FCE92: mov %al,0x12(%esp);");
    asm("loc_65FCE96: sbb %edx,%edx;");
    asm("loc_65FCE98: and $3,%edx;");
    asm("loc_65FCE9B: mov %edx,%esi;");
    asm("loc_65FCE9D: mov %al,%dl;");
    asm("loc_65FCE9F: neg %dl;");
    asm("loc_65FCEA1: mov %esi,0x54(%esp);");
    asm("loc_65FCEA5: sbb %edx,%edx;");
    asm("loc_65FCEA7: and $3,%edx;");
    asm("loc_65FCEAA: add %esi,%edx;");
    asm("loc_65FCEAC: test %al,%al;");
    asm("loc_65FCEAE: mov %edx,0x58(%esp);");
    asm("loc_65FCEB2: je loc_65FCEC6;");
    asm("loc_65FCEB4: mov 0x30(%ebx),%eax;");
    asm("loc_65FCEB7: mov 0x40(%esp),%ecx;");
    asm("loc_65FCEBB: imul $0xFFFFFFFD,%eax;");
    asm("loc_65FCEBE: add %eax,%ecx;");
    asm("loc_65FCEC0: mov %ecx,0x40(%esp);");
    asm("loc_65FCEC4: jmp loc_65FCEDA;");
    asm("loc_65FCEC6: test %cl,%cl;");
    asm("loc_65FCEC8: je loc_65FCEDA;");
    asm("loc_65FCECA: mov 0x30(%ebx),%ecx;");
    asm("loc_65FCECD: mov 0x40(%esp),%eax;");
    asm("loc_65FCED1: imul $0xFFFFFFFD,%ecx;");
    asm("loc_65FCED4: add %ecx,%eax;");
    asm("loc_65FCED6: mov %eax,0x40(%esp);");
    asm("loc_65FCEDA: mov 0x10(%ebx),%ecx;");
    asm("loc_65FCEDD: mov _data_6603134,%eax;");
    asm("loc_65FCEE2: mov (%eax),%edx;");
    asm("loc_65FCEE4: push %ecx;");
    asm("loc_65FCEE5: push %eax;");
    asm("loc_65FCEE6: calll *0x90(%edx);");
    asm("loc_65FCEEC: mov (%eax),%ecx;");
    asm("loc_65FCEEE: mov %ecx,_data_66032A8;");
    asm("loc_65FCEF4: mov 4(%eax),%edx;");
    asm("loc_65FCEF7: mov %edx,_data_66032AC;");
    asm("loc_65FCEFD: mov 8(%eax),%eax;");
    asm("loc_65FCF00: mov %eax,_data_66032B0;");
    asm("loc_65FCF05: mov %eax,_data_660326C;");
    asm("loc_65FCF0A: mov _data_6603134,%eax;");
    asm("loc_65FCF0F: mov %ecx,_data_6603264;");
    asm("loc_65FCF15: mov %edx,_data_6603268;");
    asm("loc_65FCF1B: mov 0x10(%ebx),%ecx;");
    asm("loc_65FCF1E: mov (%eax),%edx;");
    asm("loc_65FCF20: push %ecx;");
    asm("loc_65FCF21: push %eax;");
    asm("loc_65FCF22: calll *0x98(%edx);");
    asm("loc_65FCF28: mov %eax,%esi;");
    asm("loc_65FCF2A: mov $9,%ecx;");
    asm("loc_65FCF2F: mov $_data_66032E8,%edi;");
    asm("loc_65FCF34: rep movsl (%esi),(%edi);");
    asm("loc_65FCF36: mov $9,%ecx;");
    asm("loc_65FCF3B: mov $_data_66032E8,%esi;");
    asm("loc_65FCF40: mov $_data_66031B0,%edi;");
    asm("loc_65FCF45: rep movsl (%esi),(%edi);");
    asm("loc_65FCF47: mov 0x40(%ebx),%eax;");
    asm("loc_65FCF4A: xor %ebp,%ebp;");
    asm("loc_65FCF4C: test %eax,%eax;");
    asm("loc_65FCF4E: jle loc_65FD001;");
    asm("loc_65FCF54: mov %ebp,0x24(%esp);");
    asm("loc_65FCF58: movl $_data_66031D4,0x20(%esp);");
    asm("loc_65FCF60: movl $_data_6603270,0x28(%esp);");
    asm("loc_65FCF68: mov 0x1C(%ebx),%ecx;");
    asm("loc_65FCF6B: mov 0x24(%esp),%edi;");
    asm("loc_65FCF6F: mov _data_6603134,%eax;");
    asm("loc_65FCF74: mov (%eax),%edx;");
    asm("loc_65FCF76: add %edi,%ecx;");
    asm("loc_65FCF78: push %ecx;");
    asm("loc_65FCF79: mov 8(%ebx),%ecx;");
    asm("loc_65FCF7C: mov (%ecx,%ebp,4),%ecx;");
    asm("loc_65FCF7F: push $0;");
    asm("loc_65FCF81: push %ecx;");
    asm("loc_65FCF82: push %eax;");
    asm("loc_65FCF83: calll *0xCC(%edx);");
    asm("loc_65FCF89: mov 8(%ebx),%ecx;");
    asm("loc_65FCF8C: mov (%ecx,%ebp,4),%ecx;");
    asm("loc_65FCF8F: mov _data_6603134,%eax;");
    asm("loc_65FCF94: mov (%eax),%edx;");
    asm("loc_65FCF96: push %ecx;");
    asm("loc_65FCF97: push %eax;");
    asm("loc_65FCF98: calll *0x90(%edx);");
    asm("loc_65FCF9E: mov (%eax),%ecx;");
    asm("loc_65FCFA0: mov 0x28(%esp),%edx;");
    asm("loc_65FCFA4: mov %ecx,(%edx);");
    asm("loc_65FCFA6: mov 4(%eax),%ecx;");
    asm("loc_65FCFA9: mov %ecx,4(%edx);");
    asm("loc_65FCFAC: mov 8(%eax),%eax;");
    asm("loc_65FCFAF: mov %eax,8(%edx);");
    asm("loc_65FCFB2: mov 8(%ebx),%edx;");
    asm("loc_65FCFB5: mov (%edx,%ebp,4),%edx;");
    asm("loc_65FCFB8: mov _data_6603134,%eax;");
    asm("loc_65FCFBD: mov (%eax),%ecx;");
    asm("loc_65FCFBF: push %edx;");
    asm("loc_65FCFC0: push %eax;");
    asm("loc_65FCFC1: calll *0x98(%ecx);");
    asm("loc_65FCFC7: mov 0x20(%esp),%edi;");
    asm("loc_65FCFCB: mov 0x28(%esp),%edx;");
    asm("loc_65FCFCF: mov %eax,%esi;");
    asm("loc_65FCFD1: mov $9,%ecx;");
    asm("loc_65FCFD6: rep movsl (%esi),(%edi);");
    asm("loc_65FCFD8: mov 0x24(%esp),%esi;");
    asm("loc_65FCFDC: mov 0x20(%esp),%ecx;");
    asm("loc_65FCFE0: mov 0x40(%ebx),%eax;");
    asm("loc_65FCFE3: inc %ebp;");
    asm("loc_65FCFE4: add $0x10,%esi;");
    asm("loc_65FCFE7: add $0xC,%edx;");
    asm("loc_65FCFEA: add $0x24,%ecx;");
    asm("loc_65FCFED: cmp %eax,%ebp;");
    asm("loc_65FCFEF: mov %esi,0x24(%esp);");
    asm("loc_65FCFF3: mov %edx,0x28(%esp);");
    asm("loc_65FCFF7: mov %ecx,0x20(%esp);");
    asm("loc_65FCFFB: jl loc_65FCF68;");
    asm("loc_65FD001: mov 0x13(%esp),%al;");
    asm("loc_65FD005: test %al,%al;");
    asm("loc_65FD007: mov 0x40(%ebx),%ebp;");
    asm("loc_65FD00A: mov %ebp,0x70(%esp);");
    asm("loc_65FD00E: je loc_65FD027;");
    asm("loc_65FD010: mov 0x20(%ebx),%ecx;");
    asm("loc_65FD013: mov (%ecx),%edx;");
    asm("loc_65FD015: mov %edx,0x5C(%esp);");
    asm("loc_65FD019: mov 4(%ecx),%edx;");
    asm("loc_65FD01C: mov 8(%ecx),%ecx;");
    asm("loc_65FD01F: mov %edx,0x60(%esp);");
    asm("loc_65FD023: mov %ecx,0x64(%esp);");
    asm("loc_65FD027: mov 0x12(%esp),%cl;");
    asm("loc_65FD02B: test %cl,%cl;");
    asm("loc_65FD02D: je loc_65FD040;");
    asm("loc_65FD02F: mov 0x24(%ebx),%esi;");
    asm("loc_65FD032: mov $9,%ecx;");
    asm("loc_65FD037: lea 0x2C4(%esp),%edi;");
    asm("loc_65FD03E: rep movsl (%esi),(%edi);");
    asm("loc_65FD040: test %al,%al;");
    asm("loc_65FD042: movb $0,0x11(%esp);");
    asm("loc_65FD047: je loc_65FD0B8;");
    asm("loc_65FD049: flds 0x64(%esp);");
    asm("loc_65FD04D: lea (%ebp,%ebp,2),%edx;");
    asm("loc_65FD051: fsubs _data_660326C(,%edx,4);");
    asm("loc_65FD058: lea _data_6603264(,%edx,4),%eax;");
    asm("loc_65FD05F: sub $0xC,%esp;");
    asm("loc_65FD062: lea 0x40(%esp),%ecx;");
    asm("loc_65FD066: fstps 8(%esp);");
    asm("loc_65FD06A: flds 0x6C(%esp);");
    asm("loc_65FD06E: fsubs 4(%eax);");
    asm("loc_65FD071: fstps 4(%esp);");
    asm("loc_65FD075: flds 0x68(%esp);");
    asm("loc_65FD079: fsubs (%eax);");
    asm("loc_65FD07B: fstps (%esp);");
    asm("loc_65FD07E: call _sub_65F4580;");
    asm("loc_65FD083: flds 0x38(%esp);");
    asm("loc_65FD087: movb $1,0x11(%esp);");
    asm("loc_65FD08C: fmuls 0x38(%esp);");
    asm("loc_65FD090: flds 0x3C(%esp);");
    asm("loc_65FD094: fmuls 0x3C(%esp);");
    asm("loc_65FD098: faddp;");
    asm("loc_65FD09A: flds 0x34(%esp);");
    asm("loc_65FD09E: fmuls 0x34(%esp);");
    asm("loc_65FD0A2: faddp;");
    asm("loc_65FD0A4: fsqrt;");
    asm("loc_65FD0A6: fcompl _data_66013D0;");
    asm("loc_65FD0AC: fnstsw %ax;");
    asm("loc_65FD0AE: test $0x41,%ah;");
    asm("loc_65FD0B1: je loc_65FD0B8;");
    asm("loc_65FD0B3: movb $0,0x11(%esp);");
    asm("loc_65FD0B8: mov _data_66033A8,%eax;");
    asm("loc_65FD0BD: test %eax,%eax;");
    asm("loc_65FD0BF: jne loc_65FD0CB;");
    asm("loc_65FD0C1: call _sub_6600DE0;");
    asm("loc_65FD0C6: mov %eax,_data_66033A8;");
    asm("loc_65FD0CB: mov (%eax),%ecx;");
    asm("loc_65FD0CD: lea 0x2C4(%esp),%edx;");
    asm("loc_65FD0D4: push %edx;");
    asm("loc_65FD0D5: lea 0x11C(%esp),%edx;");
    asm("loc_65FD0DC: push %edx;");
    asm("loc_65FD0DD: push %eax;");
    asm("loc_65FD0DE: calll *0x50(%ecx);");
    asm("loc_65FD0E1: mov 0x11(%esp),%al;");
    asm("loc_65FD0E5: test %al,%al;");
    asm("loc_65FD0E7: jne loc_65FD172;");
    asm("loc_65FD0ED: mov 0x12(%esp),%al;");
    asm("loc_65FD0F1: test %al,%al;");
    asm("loc_65FD0F3: je loc_65FDC49;");
    asm("loc_65FD0F9: mov _data_66033A8,%eax;");
    asm("loc_65FD0FE: test %eax,%eax;");
    asm("loc_65FD100: jne loc_65FD10C;");
    asm("loc_65FD102: call _sub_6600DE0;");
    asm("loc_65FD107: mov %eax,_data_66033A8;");
    asm("loc_65FD10C: mov (%eax),%ecx;");
    asm("loc_65FD10E: lea (%ebp,%ebp,8),%edx;");
    asm("loc_65FD112: lea _data_66031B0(,%edx,4),%edx;");
    asm("loc_65FD119: push %edx;");
    asm("loc_65FD11A: lea 0x84(%esp),%edx;");
    asm("loc_65FD121: push %edx;");
    asm("loc_65FD122: push %eax;");
    asm("loc_65FD123: calll *0x50(%ecx);");
    asm("loc_65FD126: lea 0x118(%esp),%eax;");
    asm("loc_65FD12D: push %eax;");
    asm("loc_65FD12E: lea 0x84(%esp),%ecx;");
    asm("loc_65FD135: push %ecx;");
    asm("loc_65FD136: lea 0x3C(%esp),%edx;");
    asm("loc_65FD13A: push %edx;");
    asm("loc_65FD13B: call _sub_65FBDF0;");
    asm("loc_65FD140: flds 0x44(%esp);");
    asm("loc_65FD144: fmuls 0x44(%esp);");
    asm("loc_65FD148: add $0xC,%esp;");
    asm("loc_65FD14B: flds 0x3C(%esp);");
    asm("loc_65FD14F: fmuls 0x3C(%esp);");
    asm("loc_65FD153: faddp;");
    asm("loc_65FD155: flds 0x34(%esp);");
    asm("loc_65FD159: fmuls 0x34(%esp);");
    asm("loc_65FD15D: faddp;");
    asm("loc_65FD15F: fsqrt;");
    asm("loc_65FD161: fcompl _data_66013C8;");
    asm("loc_65FD167: fnstsw %ax;");
    asm("loc_65FD169: test $0x41,%ah;");
    asm("loc_65FD16C: jne loc_65FDC49;");
    asm("loc_65FD172: mov 0x40(%esp),%eax;");
    asm("loc_65FD176: mov 0x58(%esp),%ecx;");
    asm("loc_65FD17A: lea (%ecx,%eax),%esi;");
    asm("loc_65FD17D: mov %eax,0x550(%esp);");
    asm("loc_65FD184: mov %eax,0x9DC(%esp);");
    asm("loc_65FD18B: mov %eax,0x798(%esp);");
    asm("loc_65FD192: mov %eax,0x28C(%esp);");
    asm("loc_65FD199: mov 0x40(%ebx),%eax;");
    asm("loc_65FD19C: mov %eax,0x44(%esp);");
    asm("loc_65FD1A0: lea (%ebp,%ebp,2),%eax;");
    asm("loc_65FD1A4: mov $1,%edx;");
    asm("loc_65FD1A9: shl $2,%eax;");
    asm("loc_65FD1AC: mov %edx,0x20(%esp);");
    asm("loc_65FD1B0: movl $0x3F800000,0x28(%esp);");
    asm("loc_65FD1B8: movl $0,0x24(%esp);");
    asm("loc_65FD1C0: mov %ecx,0x54C(%esp);");
    asm("loc_65FD1C7: mov %ecx,0x9E0(%esp);");
    asm("loc_65FD1CE: mov %esi,0x794(%esp);");
    asm("loc_65FD1D5: mov %ecx,0x18C(%esp);");
    asm("loc_65FD1DC: mov %edx,0x9C(%esp);");
    asm("loc_65FD1E3: mov %eax,0x68(%esp);");
    asm("loc_65FD1E7: mov 0x30(%esp),%ebp;");
    asm("loc_65FD1EB: mov 0x40(%ebp),%eax;");
    asm("loc_65FD1EE: inc %eax;");
    asm("loc_65FD1EF: mov $1,%edi;");
    asm("loc_65FD1F4: cmp %edi,%eax;");
    asm("loc_65FD1F6: movl $0x40000000,0x2C(%esp);");
    asm("loc_65FD1FE: movl $0x7F7FFFFF,0x6C(%esp);");
    asm("loc_65FD206: movl $0,0x18(%esp);");
    asm("loc_65FD20E: mov %eax,0x1C(%esp);");
    asm("loc_65FD212: jle loc_65FD391;");
    asm("loc_65FD218: lea 0x314(%esp),%esi;");
    asm("loc_65FD21F: movl $_data_66031D4,0x14(%esp);");
    asm("loc_65FD227: sub $0xC,%esi;");
    asm("loc_65FD22A: lea (%ebx),%ebx;");
    asm("loc_65FD230: mov 0x13(%esp),%al;");
    asm("loc_65FD234: test %al,%al;");
    asm("loc_65FD236: je loc_65FD2FC;");
    asm("loc_65FD23C: mov 8(%ebp),%edx;");
    asm("loc_65FD23F: mov (%edx,%edi,4),%edx;");
    asm("loc_65FD242: mov _data_6603134,%eax;");
    asm("loc_65FD247: mov (%eax),%ecx;");
    asm("loc_65FD249: push %edx;");
    asm("loc_65FD24A: push %eax;");
    asm("loc_65FD24B: calll *0xC4(%ecx);");
    asm("loc_65FD251: mov %eax,%ebx;");
    asm("loc_65FD253: mov _data_66033A8,%eax;");
    asm("loc_65FD258: test %eax,%eax;");
    asm("loc_65FD25A: jne loc_65FD266;");
    asm("loc_65FD25C: call _sub_6600DE0;");
    asm("loc_65FD261: mov %eax,_data_66033A8;");
    asm("loc_65FD266: mov 0x14(%esp),%edx;");
    asm("loc_65FD26A: mov (%eax),%ecx;");
    asm("loc_65FD26C: add $4,%ebx;");
    asm("loc_65FD26F: push %ebx;");
    asm("loc_65FD270: push %edx;");
    asm("loc_65FD271: lea 0x50(%esp),%edx;");
    asm("loc_65FD275: push %edx;");
    asm("loc_65FD276: push %eax;");
    asm("loc_65FD277: calll *0x2C(%ecx);");
    asm("loc_65FD27A: mov 0x2C(%ebp),%eax;");
    asm("loc_65FD27D: mov -1(%eax,%edi),%cl;");
    asm("loc_65FD281: test %cl,%cl;");
    asm("loc_65FD283: je loc_65FD2C1;");
    asm("loc_65FD285: flds 0x50(%esp);");
    asm("loc_65FD289: fadds -4(%esi);");
    asm("loc_65FD28C: fstps -4(%esi);");
    asm("loc_65FD28F: flds (%esi);");
    asm("loc_65FD291: fsubs 0x4C(%esp);");
    asm("loc_65FD295: fstps (%esi);");
    asm("loc_65FD297: flds 0x28(%esi);");
    asm("loc_65FD29A: fsubs 0x50(%esp);");
    asm("loc_65FD29E: fstps 0x28(%esi);");
    asm("loc_65FD2A1: flds 0x48(%esp);");
    asm("loc_65FD2A5: fadds 0x30(%esi);");
    asm("loc_65FD2A8: fstps 0x30(%esi);");
    asm("loc_65FD2AB: flds 0x4C(%esp);");
    asm("loc_65FD2AF: fadds 0x58(%esi);");
    asm("loc_65FD2B2: fstps 0x58(%esi);");
    asm("loc_65FD2B5: flds 0x5C(%esi);");
    asm("loc_65FD2B8: fsubs 0x48(%esp);");
    asm("loc_65FD2BC: fstps 0x5C(%esi);");
    asm("loc_65FD2BF: jmp loc_65FD2FC;");
    asm("loc_65FD2C1: flds 0x4C(%esp);");
    asm("loc_65FD2C5: mov 0x50(%esp),%ecx;");
    asm("loc_65FD2C9: mov 0x48(%esp),%edx;");
    asm("loc_65FD2CD: fchs;");
    asm("loc_65FD2CF: fstps 0xC(%esi);");
    asm("loc_65FD2D2: xor %eax,%eax;");
    asm("loc_65FD2D4: flds 0x50(%esp);");
    asm("loc_65FD2D8: mov %eax,0x6C(%esi);");
    asm("loc_65FD2DB: fchs;");
    asm("loc_65FD2DD: mov %eax,0x38(%esi);");
    asm("loc_65FD2E0: fstps 0x34(%esi);");
    asm("loc_65FD2E3: mov %eax,4(%esi);");
    asm("loc_65FD2E6: flds 0x48(%esp);");
    asm("loc_65FD2EA: mov 0x4C(%esp),%eax;");
    asm("loc_65FD2EE: fchs;");
    asm("loc_65FD2F0: mov %ecx,8(%esi);");
    asm("loc_65FD2F3: fstps 0x68(%esi);");
    asm("loc_65FD2F6: mov %edx,0x3C(%esi);");
    asm("loc_65FD2F9: mov %eax,0x64(%esi);");
    asm("loc_65FD2FC: mov 0x12(%esp),%al;");
    asm("loc_65FD300: test %al,%al;");
    asm("loc_65FD302: je loc_65FD366;");
    asm("loc_65FD304: mov 0x2C(%ebp),%ecx;");
    asm("loc_65FD307: mov -1(%ecx,%edi),%al;");
    asm("loc_65FD30B: test %al,%al;");
    asm("loc_65FD30D: jne loc_65FD366;");
    asm("loc_65FD30F: mov 0x54(%esp),%eax;");
    asm("loc_65FD313: lea (%eax,%eax,2),%edx;");
    asm("loc_65FD316: mov 0x18(%esp),%eax;");
    asm("loc_65FD31A: lea (%eax,%edx,4),%eax;");
    asm("loc_65FD31D: shl $2,%eax;");
    asm("loc_65FD320: xor %ecx,%ecx;");
    asm("loc_65FD322: mov $0x3F800000,%edx;");
    asm("loc_65FD327: mov %edx,0x30C(%esp,%eax);");
    asm("loc_65FD32E: mov %ecx,0x310(%esp,%eax);");
    asm("loc_65FD335: mov %ecx,0x314(%esp,%eax);");
    asm("loc_65FD33C: mov %ecx,0x33C(%esp,%eax);");
    asm("loc_65FD343: mov %edx,0x340(%esp,%eax);");
    asm("loc_65FD34A: mov %ecx,0x344(%esp,%eax);");
    asm("loc_65FD351: mov %ecx,0x36C(%esp,%eax);");
    asm("loc_65FD358: mov %ecx,0x370(%esp,%eax);");
    asm("loc_65FD35F: mov %edx,0x374(%esp,%eax);");
    asm("loc_65FD366: mov 0x2C(%ebp),%ecx;");
    asm("loc_65FD369: mov -1(%ecx,%edi),%al;");
    asm("loc_65FD36D: test %al,%al;");
    asm("loc_65FD36F: jne loc_65FD379;");
    asm("loc_65FD371: addl $3,0x18(%esp);");
    asm("loc_65FD376: add $0xC,%esi;");
    asm("loc_65FD379: mov 0x14(%esp),%ecx;");
    asm("loc_65FD37D: mov 0x1C(%esp),%eax;");
    asm("loc_65FD381: inc %edi;");
    asm("loc_65FD382: add $0x24,%ecx;");
    asm("loc_65FD385: cmp %eax,%edi;");
    asm("loc_65FD387: mov %ecx,0x14(%esp);");
    asm("loc_65FD38B: jl loc_65FD230;");
    asm("loc_65FD391: lea 0x79C(%esp),%edx;");
    asm("loc_65FD398: push %edx;");
    asm("loc_65FD399: lea 0x310(%esp),%ecx;");
    asm("loc_65FD3A0: call _sub_65F9D70;");
    asm("loc_65FD3A5: lea 0x554(%esp),%eax;");
    asm("loc_65FD3AC: push %eax;");
    asm("loc_65FD3AD: lea 0x310(%esp),%ecx;");
    asm("loc_65FD3B4: push %ecx;");
    asm("loc_65FD3B5: lea 0x7A4(%esp),%edx;");
    asm("loc_65FD3BC: push %edx;");
    asm("loc_65FD3BD: call _sub_65FAEF0;");
    asm("loc_65FD3C2: flds 0x38(%ebp);");
    asm("loc_65FD3C5: mov 0x7A0(%esp),%edi;");
    asm("loc_65FD3CC: fld %st(0);");
    asm("loc_65FD3CE: mov 0x7A4(%esp),%eax;");
    asm("loc_65FD3D5: fmul %st(1),%st;");
    asm("loc_65FD3D7: add $0xC,%esp;");
    asm("loc_65FD3DA: xor %esi,%esi;");
    asm("loc_65FD3DC: test %edi,%edi;");
    asm("loc_65FD3DE: fstps 0x1C(%esp);");
    asm("loc_65FD3E2: fstp %st(0);");
    asm("loc_65FD3E4: jle loc_65FD426;");
    asm("loc_65FD3E6: xor %edx,%edx;");
    asm("loc_65FD3E8: xor %ecx,%ecx;");
    asm("loc_65FD3EA: test %eax,%eax;");
    asm("loc_65FD3EC: jle loc_65FD41E;");
    asm("loc_65FD3EE: mov %edi,%edi;");
    asm("loc_65FD3F0: cmp %ecx,%esi;");
    asm("loc_65FD3F2: jne loc_65FD412;");
    asm("loc_65FD3F4: flds 0x1C(%esp);");
    asm("loc_65FD3F8: lea (%edx,%ecx),%eax;");
    asm("loc_65FD3FB: fadds 0x554(%esp,%eax,4);");
    asm("loc_65FD402: lea 0x554(%esp,%eax,4),%eax;");
    asm("loc_65FD409: fstps (%eax);");
    asm("loc_65FD40B: mov 0x798(%esp),%eax;");
    asm("loc_65FD412: inc %ecx;");
    asm("loc_65FD413: cmp %eax,%ecx;");
    asm("loc_65FD415: jl loc_65FD3F0;");
    asm("loc_65FD417: mov 0x794(%esp),%edi;");
    asm("loc_65FD41E: inc %esi;");
    asm("loc_65FD41F: add $0xC,%edx;");
    asm("loc_65FD422: cmp %edi,%esi;");
    asm("loc_65FD424: jl loc_65FD3E8;");
    asm("loc_65FD426: lea 0x9E4(%esp),%ecx;");
    asm("loc_65FD42D: push %ecx;");
    asm("loc_65FD42E: lea 0x558(%esp),%ecx;");
    asm("loc_65FD435: mov %eax,0xC28(%esp);");
    asm("loc_65FD43C: mov %edi,0xC2C(%esp);");
    asm("loc_65FD443: call _sub_65FADB0;");
    asm("loc_65FD448: mov 0x28(%ebp),%eax;");
    asm("loc_65FD44B: mov 0x40(%esp),%edx;");
    asm("loc_65FD44F: shr $7,%eax;");
    asm("loc_65FD452: not %al;");
    asm("loc_65FD454: and $1,%al;");
    asm("loc_65FD456: mov %edx,0x2C0(%esp);");
    asm("loc_65FD45D: mov %al,0x11(%esp);");
    asm("loc_65FD461: je loc_65FD592;");
    asm("loc_65FD467: mov 0x44(%esp),%eax;");
    asm("loc_65FD46B: test %eax,%eax;");
    asm("loc_65FD46D: movl $0,0x18(%esp);");
    asm("loc_65FD475: jle loc_65FD592;");
    asm("loc_65FD47B: mov 0x30(%esp),%ecx;");
    asm("loc_65FD47F: lea 0x294(%esp),%eax;");
    asm("loc_65FD486: mov %eax,0x14(%esp);");
    asm("loc_65FD48A: mov 0x18(%esp),%eax;");
    asm("loc_65FD48E: xor %ebp,%ebp;");
    asm("loc_65FD490: mov 0x2C(%ecx),%edx;");
    asm("loc_65FD493: cmpb $0,(%eax,%edx);");
    asm("loc_65FD497: jne loc_65FD57E;");
    asm("loc_65FD49D: mov 0xC(%ecx),%esi;");
    asm("loc_65FD4A0: mov _data_66033A8,%eax;");
    asm("loc_65FD4A5: add %ebp,%esi;");
    asm("loc_65FD4A7: test %eax,%eax;");
    asm("loc_65FD4A9: jne loc_65FD4B5;");
    asm("loc_65FD4AB: call _sub_6600DE0;");
    asm("loc_65FD4B0: mov %eax,_data_66033A8;");
    asm("loc_65FD4B5: mov (%eax),%ecx;");
    asm("loc_65FD4B7: push %esi;");
    asm("loc_65FD4B8: lea _data_66031D4(%ebp),%ebx;");
    asm("loc_65FD4BE: lea -0x24(%ebx),%edx;");
    asm("loc_65FD4C1: push %edx;");
    asm("loc_65FD4C2: lea 0xD8(%esp),%edx;");
    asm("loc_65FD4C9: push %edx;");
    asm("loc_65FD4CA: push %eax;");
    asm("loc_65FD4CB: calll *0x20(%ecx);");
    asm("loc_65FD4CE: mov _data_66033A8,%eax;");
    asm("loc_65FD4D3: test %eax,%eax;");
    asm("loc_65FD4D5: mov $9,%ecx;");
    asm("loc_65FD4DA: lea 0xD0(%esp),%esi;");
    asm("loc_65FD4E1: lea 0x2E8(%esp),%edi;");
    asm("loc_65FD4E8: rep movsl (%esi),(%edi);");
    asm("loc_65FD4EA: jne loc_65FD4F6;");
    asm("loc_65FD4EC: call _sub_6600DE0;");
    asm("loc_65FD4F1: mov %eax,_data_66033A8;");
    asm("loc_65FD4F6: mov (%eax),%ecx;");
    asm("loc_65FD4F8: push %ebx;");
    asm("loc_65FD4F9: lea 0x1E8(%esp),%edx;");
    asm("loc_65FD500: push %edx;");
    asm("loc_65FD501: push %eax;");
    asm("loc_65FD502: calll *0x50(%ecx);");
    asm("loc_65FD505: mov _data_66033A8,%eax;");
    asm("loc_65FD50A: test %eax,%eax;");
    asm("loc_65FD50C: jne loc_65FD518;");
    asm("loc_65FD50E: call _sub_6600DE0;");
    asm("loc_65FD513: mov %eax,_data_66033A8;");
    asm("loc_65FD518: mov (%eax),%ecx;");
    asm("loc_65FD51A: lea 0x2E8(%esp),%edx;");
    asm("loc_65FD521: push %edx;");
    asm("loc_65FD522: lea 0x1C8(%esp),%edx;");
    asm("loc_65FD529: push %edx;");
    asm("loc_65FD52A: push %eax;");
    asm("loc_65FD52B: calll *0x50(%ecx);");
    asm("loc_65FD52E: lea 0x1C4(%esp),%eax;");
    asm("loc_65FD535: push %eax;");
    asm("loc_65FD536: lea 0x1E8(%esp),%ecx;");
    asm("loc_65FD53D: push %ecx;");
    asm("loc_65FD53E: lea 0xCC(%esp),%edx;");
    asm("loc_65FD545: push %edx;");
    asm("loc_65FD546: call _sub_65FBDF0;");
    asm("loc_65FD54B: mov 0x20(%esp),%eax;");
    asm("loc_65FD54F: mov 0xD0(%esp),%ecx;");
    asm("loc_65FD556: mov 0xD4(%esp),%edx;");
    asm("loc_65FD55D: mov %ecx,-4(%eax);");
    asm("loc_65FD560: mov 0xD8(%esp),%ecx;");
    asm("loc_65FD567: mov %ecx,4(%eax);");
    asm("loc_65FD56A: mov 0x3C(%esp),%ecx;");
    asm("loc_65FD56E: mov %edx,(%eax);");
    asm("loc_65FD570: add $0xC,%esp;");
    asm("loc_65FD573: add $0xC,%eax;");
    asm("loc_65FD576: mov %eax,0x14(%esp);");
    asm("loc_65FD57A: mov 0x18(%esp),%eax;");
    asm("loc_65FD57E: mov 0x44(%esp),%edx;");
    asm("loc_65FD582: inc %eax;");
    asm("loc_65FD583: add $0x24,%ebp;");
    asm("loc_65FD586: cmp %edx,%eax;");
    asm("loc_65FD588: mov %eax,0x18(%esp);");
    asm("loc_65FD58C: jl loc_65FD490;");
    asm("loc_65FD592: flds 0x2C(%esp);");
    asm("loc_65FD596: mov 0x68(%esp),%esi;");
    asm("loc_65FD59A: fmull _data_6601338;");
    asm("loc_65FD5A0: fstps 0x2C(%esp);");
    asm("loc_65FD5A4: flds 0x5C(%esp);");
    asm("loc_65FD5A8: fsubs _data_6603264(%esi);");
    asm("loc_65FD5AE: fstps 0x74(%esp);");
    asm("loc_65FD5B2: flds 0x60(%esp);");
    asm("loc_65FD5B6: mov 0x74(%esp),%edx;");
    asm("loc_65FD5BA: fsubs _data_6603268(%esi);");
    asm("loc_65FD5C0: mov %edx,0x34(%esp);");
    asm("loc_65FD5C4: fstps 0x78(%esp);");
    asm("loc_65FD5C8: flds 0x64(%esp);");
    asm("loc_65FD5CC: mov 0x78(%esp),%eax;");
    asm("loc_65FD5D0: fsubs _data_660326C(%esi);");
    asm("loc_65FD5D6: mov %eax,0x38(%esp);");
    asm("loc_65FD5DA: cmpl $1,0x20(%esp);");
    asm("loc_65FD5DF: fstps 0x7C(%esp);");
    asm("loc_65FD5E3: mov 0x7C(%esp),%ecx;");
    asm("loc_65FD5E7: mov %ecx,0x3C(%esp);");
    asm("loc_65FD5EB: lea 0x9C(%esp),%eax;");
    asm("loc_65FD5F2: jl loc_65FD5F8;");
    asm("loc_65FD5F4: lea 0x20(%esp),%eax;");
    asm("loc_65FD5F8: fildl (%eax);");
    asm("loc_65FD5FA: mov 0x20(%esp),%ecx;");
    asm("loc_65FD5FE: mov 0x13(%esp),%al;");
    asm("loc_65FD602: mov 0x58(%esp),%edx;");
    asm("loc_65FD606: fdivrs _data_66011E0;");
    asm("loc_65FD60C: dec %ecx;");
    asm("loc_65FD60D: test %al,%al;");
    asm("loc_65FD60F: mov %ecx,0x20(%esp);");
    asm("loc_65FD613: mov %edx,0x158(%esp);");
    asm("loc_65FD61A: flds 0x74(%esp);");
    asm("loc_65FD61E: fmul %st(1),%st;");
    asm("loc_65FD620: fstps 0x34(%esp);");
    asm("loc_65FD624: flds 0x38(%esp);");
    asm("loc_65FD628: fmul %st(1),%st;");
    asm("loc_65FD62A: fstps 0x38(%esp);");
    asm("loc_65FD62E: fmuls 0x3C(%esp);");
    asm("loc_65FD632: je loc_65FD653;");
    asm("loc_65FD634: mov 0x34(%esp),%eax;");
    asm("loc_65FD638: fstps 0x130(%esp);");
    asm("loc_65FD63F: mov 0x38(%esp),%ecx;");
    asm("loc_65FD643: mov %eax,0x128(%esp);");
    asm("loc_65FD64A: mov %ecx,0x12C(%esp);");
    asm("loc_65FD651: jmp loc_65FD655;");
    asm("loc_65FD653: fstp %st(0);");
    asm("loc_65FD655: mov 0x12(%esp),%al;");
    asm("loc_65FD659: test %al,%al;");
    asm("loc_65FD65B: je loc_65FD6DF;");
    asm("loc_65FD661: mov _data_66033A8,%eax;");
    asm("loc_65FD666: test %eax,%eax;");
    asm("loc_65FD668: jne loc_65FD674;");
    asm("loc_65FD66A: call _sub_6600DE0;");
    asm("loc_65FD66F: mov %eax,_data_66033A8;");
    asm("loc_65FD674: mov 0x70(%esp),%ecx;");
    asm("loc_65FD678: mov (%eax),%edx;");
    asm("loc_65FD67A: lea (%ecx,%ecx,8),%ecx;");
    asm("loc_65FD67D: lea _data_66031B0(,%ecx,4),%ecx;");
    asm("loc_65FD684: push %ecx;");
    asm("loc_65FD685: lea 0x1D8(%esp),%ecx;");
    asm("loc_65FD68C: push %ecx;");
    asm("loc_65FD68D: push %eax;");
    asm("loc_65FD68E: calll *0x50(%edx);");
    asm("loc_65FD691: lea 0x118(%esp),%edx;");
    asm("loc_65FD698: push %edx;");
    asm("loc_65FD699: lea 0x1D8(%esp),%eax;");
    asm("loc_65FD6A0: push %eax;");
    asm("loc_65FD6A1: lea 0x114(%esp),%ecx;");
    asm("loc_65FD6A8: push %ecx;");
    asm("loc_65FD6A9: call _sub_65FBDF0;");
    asm("loc_65FD6AE: flds 0x118(%esp);");
    asm("loc_65FD6B5: mov 0x60(%esp),%eax;");
    asm("loc_65FD6B9: fstps 0x134(%esp,%eax,4);");
    asm("loc_65FD6C0: add $0xC,%esp;");
    asm("loc_65FD6C3: flds 0x110(%esp);");
    asm("loc_65FD6CA: fstps 0x12C(%esp,%eax,4);");
    asm("loc_65FD6D1: flds 0x114(%esp);");
    asm("loc_65FD6D8: fstps 0x130(%esp,%eax,4);");
    asm("loc_65FD6DF: mov 0x158(%esp),%edx;");
    asm("loc_65FD6E6: lea 0x190(%esp),%eax;");
    asm("loc_65FD6ED: push %eax;");
    asm("loc_65FD6EE: lea 0x12C(%esp),%ecx;");
    asm("loc_65FD6F5: push %ecx;");
    asm("loc_65FD6F6: lea 0x7A4(%esp),%ecx;");
    asm("loc_65FD6FD: mov %edx,0x1C8(%esp);");
    asm("loc_65FD704: call _sub_65FAFC0;");
    asm("loc_65FD709: mov 0x11(%esp),%al;");
    asm("loc_65FD70D: test %al,%al;");
    asm("loc_65FD70F: je loc_65FD755;");
    asm("loc_65FD711: mov 0x30(%esp),%edx;");
    asm("loc_65FD715: flds 0x38(%edx);");
    asm("loc_65FD718: mov 0x1C0(%esp),%ecx;");
    asm("loc_65FD71F: fmuls _data_66013C0;");
    asm("loc_65FD725: xor %eax,%eax;");
    asm("loc_65FD727: test %ecx,%ecx;");
    asm("loc_65FD729: fstps 0x1C(%esp);");
    asm("loc_65FD72D: jle loc_65FD755;");
    asm("loc_65FD72F: nop;");
    asm("loc_65FD730: flds 0x1C(%esp);");
    asm("loc_65FD734: inc %eax;");
    asm("loc_65FD735: fmuls 0x28C(%esp,%eax,4);");
    asm("loc_65FD73C: fadds 0x18C(%esp,%eax,4);");
    asm("loc_65FD743: fstps 0x18C(%esp,%eax,4);");
    asm("loc_65FD74A: mov 0x1C0(%esp),%ecx;");
    asm("loc_65FD751: cmp %ecx,%eax;");
    asm("loc_65FD753: jl loc_65FD730;");
    asm("loc_65FD755: lea 0x25C(%esp),%eax;");
    asm("loc_65FD75C: push %eax;");
    asm("loc_65FD75D: lea 0x194(%esp),%ecx;");
    asm("loc_65FD764: push %ecx;");
    asm("loc_65FD765: lea 0x9EC(%esp),%ecx;");
    asm("loc_65FD76C: call _sub_65FAFC0;");
    asm("loc_65FD771: lea _data_6603264(%esi),%eax;");
    asm("loc_65FD777: mov (%eax),%edx;");
    asm("loc_65FD779: mov 4(%eax),%ecx;");
    asm("loc_65FD77C: mov %edx,0x90(%esp);");
    asm("loc_65FD783: mov 8(%eax),%edx;");
    asm("loc_65FD786: mov 0x44(%esp),%eax;");
    asm("loc_65FD78A: test %eax,%eax;");
    asm("loc_65FD78C: mov %ecx,0x94(%esp);");
    asm("loc_65FD793: mov %edx,0x98(%esp);");
    asm("loc_65FD79A: movl $0,0x18(%esp);");
    asm("loc_65FD7A2: jle loc_65FD96D;");
    asm("loc_65FD7A8: lea 0x264(%esp),%eax;");
    asm("loc_65FD7AF: mov $_data_66032B0,%ebp;");
    asm("loc_65FD7B4: mov %eax,0x14(%esp);");
    asm("loc_65FD7B8: xor %ebx,%ebx;");
    asm("loc_65FD7BA: lea (%ebx),%ebx;");
    asm("loc_65FD7C0: mov 0x30(%esp),%edi;");
    asm("loc_65FD7C4: mov 8(%edi),%edx;");
    asm("loc_65FD7C7: mov 0x18(%esp),%esi;");
    asm("loc_65FD7CB: mov (%edx,%esi,4),%edx;");
    asm("loc_65FD7CE: mov _data_6603134,%eax;");
    asm("loc_65FD7D3: mov (%eax),%ecx;");
    asm("loc_65FD7D5: push %edx;");
    asm("loc_65FD7D6: push %eax;");
    asm("loc_65FD7D7: calll *0xC4(%ecx);");
    asm("loc_65FD7DD: mov %eax,0x1C(%esp);");
    asm("loc_65FD7E1: mov 0x2C(%edi),%eax;");
    asm("loc_65FD7E4: cmpb $0,(%esi,%eax);");
    asm("loc_65FD7E8: jne loc_65FD813;");
    asm("loc_65FD7EA: mov 0x14(%esp),%eax;");
    asm("loc_65FD7EE: flds -8(%eax);");
    asm("loc_65FD7F1: add $0xC,%eax;");
    asm("loc_65FD7F4: fstps 0xAC(%esp);");
    asm("loc_65FD7FB: flds -0x10(%eax);");
    asm("loc_65FD7FE: mov %eax,0x14(%esp);");
    asm("loc_65FD802: fstps 0xB0(%esp);");
    asm("loc_65FD809: flds -0xC(%eax);");
    asm("loc_65FD80C: fstps 0xB4(%esp);");
    asm("loc_65FD813: flds 0xAC(%esp);");
    asm("loc_65FD81A: lea 0xF4(%esp),%ecx;");
    asm("loc_65FD821: fmuls _data_6601328;");
    asm("loc_65FD827: push %ecx;");
    asm("loc_65FD828: lea 0x250(%esp),%edx;");
    asm("loc_65FD82F: push %edx;");
    asm("loc_65FD830: fstps 0xFC(%esp);");
    asm("loc_65FD837: flds 0xB8(%esp);");
    asm("loc_65FD83E: fmuls _data_6601328;");
    asm("loc_65FD844: fstps 0x100(%esp);");
    asm("loc_65FD84B: flds 0xBC(%esp);");
    asm("loc_65FD852: fmuls _data_6601328;");
    asm("loc_65FD858: fstps 0x104(%esp);");
    asm("loc_65FD85F: call _sub_65FBD30;");
    asm("loc_65FD864: mov %eax,%esi;");
    asm("loc_65FD866: mov _data_66033A8,%eax;");
    asm("loc_65FD86B: add $8,%esp;");
    asm("loc_65FD86E: test %eax,%eax;");
    asm("loc_65FD870: jne loc_65FD87C;");
    asm("loc_65FD872: call _sub_6600DE0;");
    asm("loc_65FD877: mov %eax,_data_66033A8;");
    asm("loc_65FD87C: mov (%eax),%ecx;");
    asm("loc_65FD87E: push %esi;");
    asm("loc_65FD87F: lea 0x22C(%esp),%edx;");
    asm("loc_65FD886: push %edx;");
    asm("loc_65FD887: push %eax;");
    asm("loc_65FD888: calll *0x54(%ecx);");
    asm("loc_65FD88B: mov _data_66033A8,%eax;");
    asm("loc_65FD890: test %eax,%eax;");
    asm("loc_65FD892: jne loc_65FD89E;");
    asm("loc_65FD894: call _sub_6600DE0;");
    asm("loc_65FD899: mov %eax,_data_66033A8;");
    asm("loc_65FD89E: mov (%eax),%ecx;");
    asm("loc_65FD8A0: lea _data_66031D4(%ebx),%edx;");
    asm("loc_65FD8A6: push %edx;");
    asm("loc_65FD8A7: lea 0x22C(%esp),%edx;");
    asm("loc_65FD8AE: push %edx;");
    asm("loc_65FD8AF: lea 0x20C(%esp),%edx;");
    asm("loc_65FD8B6: push %edx;");
    asm("loc_65FD8B7: push %eax;");
    asm("loc_65FD8B8: calll *0x20(%ecx);");
    asm("loc_65FD8BB: mov _data_66033A8,%eax;");
    asm("loc_65FD8C0: test %eax,%eax;");
    asm("loc_65FD8C2: lea _data_660330C(%ebx),%edi;");
    asm("loc_65FD8C8: mov $9,%ecx;");
    asm("loc_65FD8CD: lea 0x204(%esp),%esi;");
    asm("loc_65FD8D4: rep movsl (%esi),(%edi);");
    asm("loc_65FD8D6: jne loc_65FD8E2;");
    asm("loc_65FD8D8: call _sub_6600DE0;");
    asm("loc_65FD8DD: mov %eax,_data_66033A8;");
    asm("loc_65FD8E2: mov 0x1C(%esp),%edx;");
    asm("loc_65FD8E6: mov (%eax),%ecx;");
    asm("loc_65FD8E8: add $4,%edx;");
    asm("loc_65FD8EB: push %edx;");
    asm("loc_65FD8EC: lea _data_66032E8(%ebx),%edx;");
    asm("loc_65FD8F2: push %edx;");
    asm("loc_65FD8F3: lea 0x108(%esp),%edx;");
    asm("loc_65FD8FA: push %edx;");
    asm("loc_65FD8FB: push %eax;");
    asm("loc_65FD8FC: calll *0x2C(%ecx);");
    asm("loc_65FD8FF: flds 0x100(%esp);");
    asm("loc_65FD906: fadds -8(%ebp);");
    asm("loc_65FD909: lea 4(%ebp),%eax;");
    asm("loc_65FD90C: add $0x24,%ebx;");
    asm("loc_65FD90F: add $0xC,%ebp;");
    asm("loc_65FD912: fstps 0xA0(%esp);");
    asm("loc_65FD919: flds 0x104(%esp);");
    asm("loc_65FD920: mov 0xA0(%esp),%ecx;");
    asm("loc_65FD927: fadds -0x10(%ebp);");
    asm("loc_65FD92A: fstps 0xA4(%esp);");
    asm("loc_65FD931: flds 0x108(%esp);");
    asm("loc_65FD938: mov 0xA4(%esp),%edx;");
    asm("loc_65FD93F: fadds -0xC(%ebp);");
    asm("loc_65FD942: mov %ecx,(%eax);");
    asm("loc_65FD944: mov %edx,4(%eax);");
    asm("loc_65FD947: fstps 0xA8(%esp);");
    asm("loc_65FD94E: mov 0xA8(%esp),%ecx;");
    asm("loc_65FD955: mov %ecx,8(%eax);");
    asm("loc_65FD958: mov 0x18(%esp),%eax;");
    asm("loc_65FD95C: mov 0x44(%esp),%ecx;");
    asm("loc_65FD960: inc %eax;");
    asm("loc_65FD961: cmp %ecx,%eax;");
    asm("loc_65FD963: mov %eax,0x18(%esp);");
    asm("loc_65FD967: jl loc_65FD7C0;");
    asm("loc_65FD96D: mov 0x13(%esp),%al;");
    asm("loc_65FD971: test %al,%al;");
    asm("loc_65FD973: je loc_65FD9C5;");
    asm("loc_65FD975: mov 0x68(%esp),%eax;");
    asm("loc_65FD979: flds _data_66032A8(%eax);");
    asm("loc_65FD97F: fsubs 0x90(%esp);");
    asm("loc_65FD986: flds _data_66032AC(%eax);");
    asm("loc_65FD98C: fsubs 0x94(%esp);");
    asm("loc_65FD993: flds _data_66032B0(%eax);");
    asm("loc_65FD999: fsubs 0x98(%esp);");
    asm("loc_65FD9A0: fstps 0x88(%esp);");
    asm("loc_65FD9A7: mov 0x88(%esp),%edx;");
    asm("loc_65FD9AE: fxch;");
    asm("loc_65FD9B0: fstps 0x15C(%esp);");
    asm("loc_65FD9B7: mov %edx,0x164(%esp);");
    asm("loc_65FD9BE: fstps 0x160(%esp);");
    asm("loc_65FD9C5: mov 0x12(%esp),%al;");
    asm("loc_65FD9C9: test %al,%al;");
    asm("loc_65FD9CB: je loc_65FDA4F;");
    asm("loc_65FD9D1: mov _data_66033A8,%eax;");
    asm("loc_65FD9D6: test %eax,%eax;");
    asm("loc_65FD9D8: jne loc_65FD9E4;");
    asm("loc_65FD9DA: call _sub_6600DE0;");
    asm("loc_65FD9DF: mov %eax,_data_66033A8;");
    asm("loc_65FD9E4: mov 0x70(%esp),%ecx;");
    asm("loc_65FD9E8: mov (%eax),%edx;");
    asm("loc_65FD9EA: lea (%ecx,%ecx,8),%ecx;");
    asm("loc_65FD9ED: lea _data_66032E8(,%ecx,4),%ecx;");
    asm("loc_65FD9F4: push %ecx;");
    asm("loc_65FD9F5: lea 0x1F8(%esp),%ecx;");
    asm("loc_65FD9FC: push %ecx;");
    asm("loc_65FD9FD: push %eax;");
    asm("loc_65FD9FE: calll *0x50(%edx);");
    asm("loc_65FDA01: lea 0x118(%esp),%edx;");
    asm("loc_65FDA08: push %edx;");
    asm("loc_65FDA09: lea 0x1F8(%esp),%eax;");
    asm("loc_65FDA10: push %eax;");
    asm("loc_65FDA11: lea 0xC0(%esp),%ecx;");
    asm("loc_65FDA18: push %ecx;");
    asm("loc_65FDA19: call _sub_65FBDF0;");
    asm("loc_65FDA1E: flds 0xC4(%esp);");
    asm("loc_65FDA25: mov 0x60(%esp),%eax;");
    asm("loc_65FDA29: fstps 0x168(%esp,%eax,4);");
    asm("loc_65FDA30: add $0xC,%esp;");
    asm("loc_65FDA33: flds 0xBC(%esp);");
    asm("loc_65FDA3A: fstps 0x160(%esp,%eax,4);");
    asm("loc_65FDA41: flds 0xC0(%esp);");
    asm("loc_65FDA48: fstps 0x164(%esp,%eax,4);");
    asm("loc_65FDA4F: mov 0x58(%esp),%ecx;");
    asm("loc_65FDA53: flds _data_6601318;");
    asm("loc_65FDA59: xor %eax,%eax;");
    asm("loc_65FDA5B: test %ecx,%ecx;");
    asm("loc_65FDA5D: jle loc_65FDA7B;");
    asm("loc_65FDA5F: nop;");
    asm("loc_65FDA60: flds 0x128(%esp,%eax,4);");
    asm("loc_65FDA67: inc %eax;");
    asm("loc_65FDA68: cmp %ecx,%eax;");
    asm("loc_65FDA6A: fsubs 0x158(%esp,%eax,4);");
    asm("loc_65FDA71: fld %st(0);");
    asm("loc_65FDA73: fmul %st(1),%st;");
    asm("loc_65FDA75: faddp %st,%st(2);");
    asm("loc_65FDA77: fstp %st(0);");
    asm("loc_65FDA79: jl loc_65FDA60;");
    asm("loc_65FDA7B: flds 0x6C(%esp);");
    asm("loc_65FDA7F: fsubr %st(1),%st;");
    asm("loc_65FDA81: fstps 0x14(%esp);");
    asm("loc_65FDA85: fsts 0x6C(%esp);");
    asm("loc_65FDA89: fcompl _data_66013C8;");
    asm("loc_65FDA8F: fnstsw %ax;");
    asm("loc_65FDA91: test $0x41,%ah;");
    asm("loc_65FDA94: jne loc_65FDAAB;");
    asm("loc_65FDA96: flds 0x14(%esp);");
    asm("loc_65FDA9A: fcompl _data_66013B8;");
    asm("loc_65FDAA0: fnstsw %ax;");
    asm("loc_65FDAA2: test $5,%ah;");
    asm("loc_65FDAA5: jnp loc_65FD592;");
    asm("loc_65FDAAB: flds 0x2C(%esp);");
    asm("loc_65FDAAF: fmuls 0x28(%esp);");
    asm("loc_65FDAB3: fadds 0x24(%esp);");
    asm("loc_65FDAB7: fstps 0x24(%esp);");
    asm("loc_65FDABB: flds _data_66011E0;");
    asm("loc_65FDAC1: fsubs 0x24(%esp);");
    asm("loc_65FDAC5: fsts 0x1C(%esp);");
    asm("loc_65FDAC9: fcomps 0x28(%esp);");
    asm("loc_65FDACD: fnstsw %ax;");
    asm("loc_65FDACF: test $5,%ah;");
    asm("loc_65FDAD2: lea 0x1C(%esp),%eax;");
    asm("loc_65FDAD6: jnp loc_65FDADC;");
    asm("loc_65FDAD8: lea 0x28(%esp),%eax;");
    asm("loc_65FDADC: flds 0x24(%esp);");
    asm("loc_65FDAE0: mov (%eax),%edx;");
    asm("loc_65FDAE2: fsubl _data_6601320;");
    asm("loc_65FDAE8: mov %edx,0x28(%esp);");
    asm("loc_65FDAEC: fabs;");
    asm("loc_65FDAEE: fcompl _data_66013C8;");
    asm("loc_65FDAF4: fnstsw %ax;");
    asm("loc_65FDAF6: test $0x41,%ah;");
    asm("loc_65FDAF9: jnp loc_65FDB10;");
    asm("loc_65FDAFB: flds 0x14(%esp);");
    asm("loc_65FDAFF: fcomps _data_6601318;");
    asm("loc_65FDB05: fnstsw %ax;");
    asm("loc_65FDB07: test $1,%ah;");
    asm("loc_65FDB0A: jne loc_65FD1E7;");
    asm("loc_65FDB10: mov 0x44(%esp),%eax;");
    asm("loc_65FDB14: xor %ebp,%ebp;");
    asm("loc_65FDB16: cmp %ebp,%eax;");
    asm("loc_65FDB18: jle loc_65FDC49;");
    asm("loc_65FDB1E: mov %ebp,0x2C(%esp);");
    asm("loc_65FDB22: mov $_data_6603300,%ebx;");
    asm("loc_65FDB27: mov 0x30(%esp),%eax;");
    asm("loc_65FDB2B: mov 0x2C(%eax),%ecx;");
    asm("loc_65FDB2E: cmpb $0,(%ecx,%ebp);");
    asm("loc_65FDB32: jne loc_65FDC2E;");
    asm("loc_65FDB38: flds -0x18(%ebx);");
    asm("loc_65FDB3B: mov _data_66033A8,%eax;");
    asm("loc_65FDB40: test %eax,%eax;");
    asm("loc_65FDB42: fstps 0xD0(%esp);");
    asm("loc_65FDB49: flds -0xC(%ebx);");
    asm("loc_65FDB4C: fstps 0xD4(%esp);");
    asm("loc_65FDB53: flds (%ebx);");
    asm("loc_65FDB55: fstps 0xD8(%esp);");
    asm("loc_65FDB5C: flds -0x14(%ebx);");
    asm("loc_65FDB5F: fstps 0xDC(%esp);");
    asm("loc_65FDB66: flds -8(%ebx);");
    asm("loc_65FDB69: fstps 0xE0(%esp);");
    asm("loc_65FDB70: flds 4(%ebx);");
    asm("loc_65FDB73: fstps 0xE4(%esp);");
    asm("loc_65FDB7A: flds -0x10(%ebx);");
    asm("loc_65FDB7D: fstps 0xE8(%esp);");
    asm("loc_65FDB84: flds -4(%ebx);");
    asm("loc_65FDB87: fstps 0xEC(%esp);");
    asm("loc_65FDB8E: flds 8(%ebx);");
    asm("loc_65FDB91: fstps 0xF0(%esp);");
    asm("loc_65FDB98: jne loc_65FDBA4;");
    asm("loc_65FDB9A: call _sub_6600DE0;");
    asm("loc_65FDB9F: mov %eax,_data_66033A8;");
    asm("loc_65FDBA4: mov (%eax),%edx;");
    asm("loc_65FDBA6: lea 0xC(%ebx),%ecx;");
    asm("loc_65FDBA9: push %ecx;");
    asm("loc_65FDBAA: lea 0xD4(%esp),%ecx;");
    asm("loc_65FDBB1: push %ecx;");
    asm("loc_65FDBB2: lea 0x20C(%esp),%ecx;");
    asm("loc_65FDBB9: push %ecx;");
    asm("loc_65FDBBA: push %eax;");
    asm("loc_65FDBBB: calll *0x20(%edx);");
    asm("loc_65FDBBE: mov _data_66033A8,%eax;");
    asm("loc_65FDBC3: test %eax,%eax;");
    asm("loc_65FDBC5: mov $9,%ecx;");
    asm("loc_65FDBCA: lea 0x204(%esp),%esi;");
    asm("loc_65FDBD1: lea 0x228(%esp),%edi;");
    asm("loc_65FDBD8: rep movsl (%esi),(%edi);");
    asm("loc_65FDBDA: jne loc_65FDBE6;");
    asm("loc_65FDBDC: call _sub_6600DE0;");
    asm("loc_65FDBE1: mov %eax,_data_66033A8;");
    asm("loc_65FDBE6: mov (%eax),%edx;");
    asm("loc_65FDBE8: lea 0x228(%esp),%ecx;");
    asm("loc_65FDBEF: push %ecx;");
    asm("loc_65FDBF0: lea 0x84(%esp),%ecx;");
    asm("loc_65FDBF7: push %ecx;");
    asm("loc_65FDBF8: push %eax;");
    asm("loc_65FDBF9: calll *0x50(%edx);");
    asm("loc_65FDBFC: mov 0x30(%esp),%edx;");
    asm("loc_65FDC00: mov 0x1C(%edx),%eax;");
    asm("loc_65FDC03: add 0x2C(%esp),%eax;");
    asm("loc_65FDC07: mov 0x80(%esp),%ecx;");
    asm("loc_65FDC0E: mov %ecx,(%eax);");
    asm("loc_65FDC10: mov 0x84(%esp),%edx;");
    asm("loc_65FDC17: mov %edx,4(%eax);");
    asm("loc_65FDC1A: mov 0x88(%esp),%ecx;");
    asm("loc_65FDC21: mov %ecx,8(%eax);");
    asm("loc_65FDC24: mov 0x8C(%esp),%edx;");
    asm("loc_65FDC2B: mov %edx,0xC(%eax);");
    asm("loc_65FDC2E: mov 0x2C(%esp),%ecx;");
    asm("loc_65FDC32: mov 0x44(%esp),%eax;");
    asm("loc_65FDC36: inc %ebp;");
    asm("loc_65FDC37: add $0x10,%ecx;");
    asm("loc_65FDC3A: add $0x24,%ebx;");
    asm("loc_65FDC3D: cmp %eax,%ebp;");
    asm("loc_65FDC3F: mov %ecx,0x2C(%esp);");
    asm("loc_65FDC43: jl loc_65FDB27;");
    asm("loc_65FDC49: pop %edi;");
    asm("loc_65FDC4A: pop %esi;");
    asm("loc_65FDC4B: pop %ebp;");
    asm("loc_65FDC4C: pop %ebx;");
    asm("loc_65FDC4D: add $0xC1C,%esp;");
    asm("loc_65FDC53: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FDC60() // _sub_65FDC60
{
    __DEBUG_ASM(65FDC60);
    // chunk 0x65FDC60 _sub_65FDC60
    asm("loc_65FDC60: push %esi;");
    asm("loc_65FDC61: mov %ecx,%esi;");
    asm("loc_65FDC63: mov 0xC(%esi),%eax;");
    asm("loc_65FDC66: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65FDC69: movl $_off_66013DC,(%esi);");
    asm("loc_65FDC6F: je loc_65FDC7E;");
    asm("loc_65FDC71: mov _data_6603134,%ecx;");
    asm("loc_65FDC77: mov (%ecx),%edx;");
    asm("loc_65FDC79: push %eax;");
    asm("loc_65FDC7A: push %ecx;");
    asm("loc_65FDC7B: calll *0x3C(%edx);");
    asm("loc_65FDC7E: mov 0x10(%esi),%eax;");
    asm("loc_65FDC81: test %eax,%eax;");
    asm("loc_65FDC83: je loc_65FDC92;");
    asm("loc_65FDC85: mov (%eax),%ecx;");
    asm("loc_65FDC87: push %eax;");
    asm("loc_65FDC88: calll *8(%ecx);");
    asm("loc_65FDC8B: movl $0,0x10(%esi);");
    asm("loc_65FDC92: movl $_off_6601378,(%esi);");
    asm("loc_65FDC98: pop %esi;");
    asm("loc_65FDC99: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FDCA0() // _sub_65FDCA0
{
    __DEBUG_ASM(65FDCA0);
    // chunk 0x65FDCA0 _sub_65FDCA0
    asm("loc_65FDCA0: push %esi;");
    asm("loc_65FDCA1: mov %ecx,%esi;");
    asm("loc_65FDCA3: call _sub_65FDC60;");
    asm("loc_65FDCA8: testb $1,8(%esp);");
    asm("loc_65FDCAD: je loc_65FDCB8;");
    asm("loc_65FDCAF: push %esi;");
    asm("loc_65FDCB0: call _sub_6600BB0;");
    asm("loc_65FDCB5: add $4,%esp;");
    asm("loc_65FDCB8: mov %esi,%eax;");
    asm("loc_65FDCBA: pop %esi;");
    asm("loc_65FDCBB: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FDCC0() // _sub_65FDCC0
{
    __DEBUG_ASM(65FDCC0);
    // chunk 0x65FDCC0 _sub_65FDCC0
    asm("loc_65FDCC0: mov 4(%esp),%eax;");
    asm("loc_65FDCC4: push %esi;");
    asm("loc_65FDCC5: mov %ecx,%esi;");
    asm("loc_65FDCC7: push %eax;");
    asm("loc_65FDCC8: movl $1,4(%esi);");
    asm("loc_65FDCCF: calll *_import_660100C;");
    asm("loc_65FDCD5: mov 0x10(%esp),%ecx;");
    asm("loc_65FDCD9: mov %eax,8(%esi);");
    asm("loc_65FDCDC: mov 0x14(%esp),%eax;");
    asm("loc_65FDCE0: add $4,%esp;");
    asm("loc_65FDCE3: test %eax,%eax;");
    asm("loc_65FDCE5: movl $_off_6601378,(%esi);");
    asm("loc_65FDCEB: mov %ecx,0xC(%esi);");
    asm("loc_65FDCEE: mov %eax,0x10(%esi);");
    asm("loc_65FDCF1: je loc_65FDCF9;");
    asm("loc_65FDCF3: mov (%eax),%edx;");
    asm("loc_65FDCF5: push %eax;");
    asm("loc_65FDCF6: calll *4(%edx);");
    asm("loc_65FDCF9: movl $_off_66013DC,(%esi);");
    asm("loc_65FDCFF: mov %esi,%eax;");
    asm("loc_65FDD01: pop %esi;");
    asm("loc_65FDD02: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FDD10() // _sub_65FDD10
{
    __DEBUG_ASM(65FDD10);
    // chunk 0x65FDD10 _sub_65FDD10
    asm("loc_65FDD10: sub $0x90,%esp;");
    asm("loc_65FDD16: mov 0x98(%esp),%eax;");
    asm("loc_65FDD1D: push %ebx;");
    asm("loc_65FDD1E: mov 0x98(%esp),%ebx;");
    asm("loc_65FDD25: push %ebp;");
    asm("loc_65FDD26: push %edi;");
    asm("loc_65FDD27: mov (%eax),%edi;");
    asm("loc_65FDD29: mov %ecx,%ebp;");
    asm("loc_65FDD2B: mov (%ebx),%ecx;");
    asm("loc_65FDD2D: push %ebx;");
    asm("loc_65FDD2E: calll *0x40(%ecx);");
    asm("loc_65FDD31: lea 0x10(%esp),%ecx;");
    asm("loc_65FDD35: push %ecx;");
    asm("loc_65FDD36: mov %eax,0x3C(%esp);");
    asm("loc_65FDD3A: mov _data_6603130,%eax;");
    asm("loc_65FDD3F: push $7;");
    asm("loc_65FDD41: movl $1,0x18(%esp);");
    asm("loc_65FDD49: mov (%eax),%edx;");
    asm("loc_65FDD4B: push %eax;");
    asm("loc_65FDD4C: calll *0x18(%edx);");
    asm("loc_65FDD4F: mov 0x10(%ebp),%eax;");
    asm("loc_65FDD52: test %eax,%eax;");
    asm("loc_65FDD54: je loc_65FDF6F;");
    asm("loc_65FDD5A: mov _data_6602A60,%eax;");
    asm("loc_65FDD5F: test %eax,%eax;");
    asm("loc_65FDD61: push %esi;");
    asm("loc_65FDD62: je loc_65FDE55;");
    asm("loc_65FDD68: mov 8(%edi),%eax;");
    asm("loc_65FDD6B: test %eax,%eax;");
    asm("loc_65FDD6D: jle loc_65FDE55;");
    asm("loc_65FDD73: mov $1,%ebx;");
    asm("loc_65FDD78: movl $0,0x10(%esp);");
    asm("loc_65FDD80: mov 4(%edi),%esi;");
    asm("loc_65FDD83: mov 0x10(%esp),%ecx;");
    asm("loc_65FDD87: mov _data_66033AC,%al;");
    asm("loc_65FDD8C: add %ecx,%esi;");
    asm("loc_65FDD8E: test $1,%al;");
    asm("loc_65FDD90: jne loc_65FDDD2;");
    asm("loc_65FDD92: mov %al,%dl;");
    asm("loc_65FDD94: or $1,%dl;");
    asm("loc_65FDD97: mov $_data_66033B0,%ecx;");
    asm("loc_65FDD9C: mov %dl,_data_66033AC;");
    asm("loc_65FDDA2: call _sub_65F1660;");
    asm("loc_65FDDA7: push $_sub_65FDFA0;");
    asm("loc_65FDDAC: movl $0,_data_66033DC;");
    asm("loc_65FDDB6: movl $0,_data_66033D8;");
    asm("loc_65FDDC0: movl $0,_data_66033D4;");
    asm("loc_65FDDCA: call _sub_6600BEE;");
    asm("loc_65FDDCF: add $4,%esp;");
    asm("loc_65FDDD2: mov 0x14(%esp),%eax;");
    asm("loc_65FDDD6: test %eax,%eax;");
    asm("loc_65FDDD8: je loc_65FDE21;");
    asm("loc_65FDDDA: push $0;");
    asm("loc_65FDDDC: lea 0x44(%esp),%ecx;");
    asm("loc_65FDDE0: call _sub_65F3E70;");
    asm("loc_65FDDE5: mov _data_66033E0,%eax;");
    asm("loc_65FDDEA: test %eax,%eax;");
    asm("loc_65FDDEC: jne loc_65FDDF8;");
    asm("loc_65FDDEE: call _sub_6600DE0;");
    asm("loc_65FDDF3: mov %eax,_data_66033E0;");
    asm("loc_65FDDF8: mov 0x3C(%esp),%ecx;");
    asm("loc_65FDDFC: mov (%eax),%edx;");
    asm("loc_65FDDFE: add $0x40,%esi;");
    asm("loc_65FDE01: push %esi;");
    asm("loc_65FDE02: push %ecx;");
    asm("loc_65FDE03: lea 0x48(%esp),%ecx;");
    asm("loc_65FDE07: push %ecx;");
    asm("loc_65FDE08: push %eax;");
    asm("loc_65FDE09: calll *0x1C(%edx);");
    asm("loc_65FDE0C: lea 0x40(%esp),%edx;");
    asm("loc_65FDE10: push %edx;");
    asm("loc_65FDE11: lea 0x74(%esp),%ecx;");
    asm("loc_65FDE15: call _sub_65FDF80;");
    asm("loc_65FDE1A: lea 0x70(%esp),%edx;");
    asm("loc_65FDE1E: push %edx;");
    asm("loc_65FDE1F: jmp loc_65FDE25;");
    asm("loc_65FDE21: add $0x40,%esi;");
    asm("loc_65FDE24: push %esi;");
    asm("loc_65FDE25: mov _data_6603130,%eax;");
    asm("loc_65FDE2A: mov (%eax),%ecx;");
    asm("loc_65FDE2C: push %ebx;");
    asm("loc_65FDE2D: push %eax;");
    asm("loc_65FDE2E: calll *0x130(%ecx);");
    asm("loc_65FDE34: mov 0x10(%esp),%edx;");
    asm("loc_65FDE38: mov 8(%edi),%eax;");
    asm("loc_65FDE3B: add $0x70,%edx;");
    asm("loc_65FDE3E: inc %ebx;");
    asm("loc_65FDE3F: mov %edx,0x10(%esp);");
    asm("loc_65FDE43: lea -1(%ebx),%edx;");
    asm("loc_65FDE46: cmp %eax,%edx;");
    asm("loc_65FDE48: jl loc_65FDD80;");
    asm("loc_65FDE4E: mov 0xA4(%esp),%ebx;");
    asm("loc_65FDE55: mov _data_6603130,%eax;");
    asm("loc_65FDE5A: mov _data_6602A60,%esi;");
    asm("loc_65FDE60: lea 0x2C(%esp),%edx;");
    asm("loc_65FDE64: push %edx;");
    asm("loc_65FDE65: push $0x99;");
    asm("loc_65FDE6A: mov %eax,0x2C(%esp);");
    asm("loc_65FDE6E: movl $0x99,0x30(%esp);");
    asm("loc_65FDE76: mov (%eax),%ecx;");
    asm("loc_65FDE78: push %eax;");
    asm("loc_65FDE79: calll *0xF4(%ecx);");
    asm("loc_65FDE7F: mov 0x28(%esp),%edx;");
    asm("loc_65FDE83: mov 0x24(%esp),%eax;");
    asm("loc_65FDE87: mov (%eax),%ecx;");
    asm("loc_65FDE89: push %esi;");
    asm("loc_65FDE8A: push %edx;");
    asm("loc_65FDE8B: push %eax;");
    asm("loc_65FDE8C: calll *0xF0(%ecx);");
    asm("loc_65FDE92: mov _data_6603130,%eax;");
    asm("loc_65FDE97: mov _data_6602A60,%esi;");
    asm("loc_65FDE9D: lea 0x38(%esp),%edx;");
    asm("loc_65FDEA1: push %edx;");
    asm("loc_65FDEA2: push $0xA7;");
    asm("loc_65FDEA7: mov %eax,0x38(%esp);");
    asm("loc_65FDEAB: movl $0xA7,0x3C(%esp);");
    asm("loc_65FDEB3: mov (%eax),%ecx;");
    asm("loc_65FDEB5: push %eax;");
    asm("loc_65FDEB6: calll *0xF4(%ecx);");
    asm("loc_65FDEBC: mov 0x34(%esp),%edx;");
    asm("loc_65FDEC0: mov 0x30(%esp),%eax;");
    asm("loc_65FDEC4: mov (%eax),%ecx;");
    asm("loc_65FDEC6: push %esi;");
    asm("loc_65FDEC7: push %edx;");
    asm("loc_65FDEC8: push %eax;");
    asm("loc_65FDEC9: calll *0xF0(%ecx);");
    asm("loc_65FDECF: mov _data_6602A60,%esi;");
    asm("loc_65FDED5: mov _data_6603130,%eax;");
    asm("loc_65FDEDA: lea 0x20(%esp),%edx;");
    asm("loc_65FDEDE: push %edx;");
    asm("loc_65FDEDF: neg %esi;");
    asm("loc_65FDEE1: push $0x97;");
    asm("loc_65FDEE6: sbb %esi,%esi;");
    asm("loc_65FDEE8: mov %eax,0x20(%esp);");
    asm("loc_65FDEEC: movl $0x97,0x24(%esp);");
    asm("loc_65FDEF4: mov (%eax),%ecx;");
    asm("loc_65FDEF6: push %eax;");
    asm("loc_65FDEF7: and $3,%esi;");
    asm("loc_65FDEFA: calll *0xF4(%ecx);");
    asm("loc_65FDF00: mov 0x1C(%esp),%edx;");
    asm("loc_65FDF04: mov 0x18(%esp),%eax;");
    asm("loc_65FDF08: mov (%eax),%ecx;");
    asm("loc_65FDF0A: push %esi;");
    asm("loc_65FDF0B: push %edx;");
    asm("loc_65FDF0C: push %eax;");
    asm("loc_65FDF0D: calll *0xF0(%ecx);");
    asm("loc_65FDF13: mov 4(%edi),%edx;");
    asm("loc_65FDF16: mov 4(%edx),%edx;");
    asm("loc_65FDF19: mov 0x10(%ebp),%ecx;");
    asm("loc_65FDF1C: mov (%ecx),%eax;");
    asm("loc_65FDF1E: push $0;");
    asm("loc_65FDF20: push $0;");
    asm("loc_65FDF22: push $0;");
    asm("loc_65FDF24: push %edx;");
    asm("loc_65FDF25: push %ebx;");
    asm("loc_65FDF26: calll *0xC(%eax);");
    asm("loc_65FDF29: mov 0x20(%esp),%edx;");
    asm("loc_65FDF2D: mov 0x18(%esp),%eax;");
    asm("loc_65FDF31: mov (%eax),%ecx;");
    asm("loc_65FDF33: push %edx;");
    asm("loc_65FDF34: mov 0x20(%esp),%edx;");
    asm("loc_65FDF38: push %edx;");
    asm("loc_65FDF39: push %eax;");
    asm("loc_65FDF3A: calll *0xF0(%ecx);");
    asm("loc_65FDF40: mov 0x38(%esp),%edx;");
    asm("loc_65FDF44: mov 0x30(%esp),%eax;");
    asm("loc_65FDF48: mov (%eax),%ecx;");
    asm("loc_65FDF4A: push %edx;");
    asm("loc_65FDF4B: mov 0x38(%esp),%edx;");
    asm("loc_65FDF4F: push %edx;");
    asm("loc_65FDF50: push %eax;");
    asm("loc_65FDF51: calll *0xF0(%ecx);");
    asm("loc_65FDF57: mov 0x24(%esp),%eax;");
    asm("loc_65FDF5B: mov 0x2C(%esp),%edx;");
    asm("loc_65FDF5F: mov (%eax),%ecx;");
    asm("loc_65FDF61: push %edx;");
    asm("loc_65FDF62: mov 0x2C(%esp),%edx;");
    asm("loc_65FDF66: push %edx;");
    asm("loc_65FDF67: push %eax;");
    asm("loc_65FDF68: calll *0xF0(%ecx);");
    asm("loc_65FDF6E: pop %esi;");
    asm("loc_65FDF6F: pop %edi;");
    asm("loc_65FDF70: pop %ebp;");
    asm("loc_65FDF71: mov $1,%al;");
    asm("loc_65FDF73: pop %ebx;");
    asm("loc_65FDF74: add $0x90,%esp;");
    asm("loc_65FDF7A: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FDF80() // _sub_65FDF80
{
    __DEBUG_ASM(65FDF80);
    // chunk 0x65FDF80 _sub_65FDF80
    asm("loc_65FDF80: push %esi;");
    asm("loc_65FDF81: mov 8(%esp),%esi;");
    asm("loc_65FDF85: push %edi;");
    asm("loc_65FDF86: mov %ecx,%eax;");
    asm("loc_65FDF88: mov $0xC,%ecx;");
    asm("loc_65FDF8D: mov %eax,%edi;");
    asm("loc_65FDF8F: rep movsl (%esi),(%edi);");
    asm("loc_65FDF91: pop %edi;");
    asm("loc_65FDF92: pop %esi;");
    asm("loc_65FDF93: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FDFA0() // _nullsub_2
{
    __DEBUG_ASM(65FDFA0);
    // chunk 0x65FDFA0 _sub_65FDFA0
    asm("loc_65FDFA0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FDFB0() // _sub_65FDFB0
{
    __DEBUG_ASM(65FDFB0);
    // chunk 0x65FDFB0 _sub_65FDFB0
    asm("loc_65FDFB0: call _sub_65FDFD0;");
    asm("loc_65FDFB5: mov 4(%esp),%eax;");
    asm("loc_65FDFB9: mov (%eax),%ecx;");
    asm("loc_65FDFBB: push $_data_66014DC;");
    asm("loc_65FDFC0: push $_data_6602A68;");
    asm("loc_65FDFC5: push $0;");
    asm("loc_65FDFC7: push %eax;");
    asm("loc_65FDFC8: calll *0xC(%ecx);");
    asm("loc_65FDFCB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FDFD0() // _sub_65FDFD0
{
    __DEBUG_ASM(65FDFD0);
    // chunk 0x65FDFD0 _sub_65FDFD0
    asm("loc_65FDFD0: push %esi;");
    asm("loc_65FDFD1: push $0xC;");
    asm("loc_65FDFD3: call _sub_6600BB6;");
    asm("loc_65FDFD8: mov %eax,%esi;");
    asm("loc_65FDFDA: add $4,%esp;");
    asm("loc_65FDFDD: test %esi,%esi;");
    asm("loc_65FDFDF: je loc_65FE016;");
    asm("loc_65FDFE1: movl $1,4(%esi);");
    asm("loc_65FDFE8: movl $_data_66014DC,8(%esi);");
    asm("loc_65FDFEF: movl $_off_66014E8,(%esi);");
    asm("loc_65FDFF5: calll *_import_6601000;");
    asm("loc_65FDFFB: mov (%eax),%ecx;");
    asm("loc_65FDFFD: push $0x80000000;");
    asm("loc_65FE002: push $_data_66014DC;");
    asm("loc_65FE007: push %esi;");
    asm("loc_65FE008: push %eax;");
    asm("loc_65FE009: calll *0x10(%ecx);");
    asm("loc_65FE00C: mov (%esi),%edx;");
    asm("loc_65FE00E: push %esi;");
    asm("loc_65FE00F: calll *8(%edx);");
    asm("loc_65FE012: mov $1,%al;");
    asm("loc_65FE014: pop %esi;");
    asm("loc_65FE015: ret;");
    asm("loc_65FE016: xor %al,%al;");
    asm("loc_65FE018: pop %esi;");
    asm("loc_65FE019: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE020() // _sub_65FE020
{
    __DEBUG_ASM(65FE020);
    // chunk 0x65FE020 _sub_65FE020
    asm("loc_65FE020: mov 0xC(%esp),%edx;");
    asm("loc_65FE024: push %esi;");
    asm("loc_65FE025: mov 0xC(%esp),%esi;");
    asm("loc_65FE029: push %edi;");
    asm("loc_65FE02A: mov $_data_6602448,%edi;");
    asm("loc_65FE02F: mov $0x17,%ecx;");
    asm("loc_65FE034: xor %eax,%eax;");
    asm("loc_65FE036: movl $0,(%edx);");
    asm("loc_65FE03C: repe cmpsb (%edi),(%esi);");
    asm("loc_65FE03E: pop %edi;");
    asm("loc_65FE03F: pop %esi;");
    asm("loc_65FE040: je loc_65FE04A;");
    asm("loc_65FE042: mov $0xFFFFFFFD,%eax;");
    asm("loc_65FE047: ret $0xC;");
    asm("loc_65FE04A: mov 4(%esp),%eax;");
    asm("loc_65FE04E: mov %eax,(%edx);");
    asm("loc_65FE050: mov (%eax),%ecx;");
    asm("loc_65FE052: push %eax;");
    asm("loc_65FE053: calll *4(%ecx);");
    asm("loc_65FE056: xor %eax,%eax;");
    asm("loc_65FE058: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE060() // _sub_65FE060
{
    __DEBUG_ASM(65FE060);
    // chunk 0x65FE060 _sub_65FE060
    asm("loc_65FE060: mov 4(%esp),%eax;");
    asm("loc_65FE064: mov 4(%eax),%ecx;");
    asm("loc_65FE067: inc %ecx;");
    asm("loc_65FE068: mov %ecx,4(%eax);");
    asm("loc_65FE06B: mov %ecx,%eax;");
    asm("loc_65FE06D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE070() // _sub_65FE070
{
    __DEBUG_ASM(65FE070);
    // chunk 0x65FE070 _sub_65FE070
    asm("loc_65FE070: push %ebx;");
    asm("loc_65FE071: push %ebp;");
    asm("loc_65FE072: mov 0x10(%esp),%ebp;");
    asm("loc_65FE076: mov (%ebp),%eax;");
    asm("loc_65FE079: push %esi;");
    asm("loc_65FE07A: xor %ebx,%ebx;");
    asm("loc_65FE07C: xor %ecx,%ecx;");
    asm("loc_65FE07E: cmp $0x14,%eax;");
    asm("loc_65FE081: push %edi;");
    asm("loc_65FE082: jne loc_65FE18A;");
    asm("loc_65FE088: mov 0x14(%esp),%eax;");
    asm("loc_65FE08C: mov 8(%eax),%edi;");
    asm("loc_65FE08F: mov 4(%ebp),%esi;");
    asm("loc_65FE092: mov (%esi),%dl;");
    asm("loc_65FE094: mov %dl,%al;");
    asm("loc_65FE096: cmp (%edi),%dl;");
    asm("loc_65FE098: jne loc_65FE0B6;");
    asm("loc_65FE09A: cmp %bl,%al;");
    asm("loc_65FE09C: je loc_65FE0B2;");
    asm("loc_65FE09E: mov 1(%esi),%dl;");
    asm("loc_65FE0A1: mov %dl,%al;");
    asm("loc_65FE0A3: cmp 1(%edi),%dl;");
    asm("loc_65FE0A6: jne loc_65FE0B6;");
    asm("loc_65FE0A8: add $2,%esi;");
    asm("loc_65FE0AB: add $2,%edi;");
    asm("loc_65FE0AE: cmp %bl,%al;");
    asm("loc_65FE0B0: jne loc_65FE092;");
    asm("loc_65FE0B2: xor %eax,%eax;");
    asm("loc_65FE0B4: jmp loc_65FE0BB;");
    asm("loc_65FE0B6: sbb %eax,%eax;");
    asm("loc_65FE0B8: sbb $0xFFFFFFFF,%eax;");
    asm("loc_65FE0BB: cmp %ebx,%eax;");
    asm("loc_65FE0BD: jne loc_65FE18A;");
    asm("loc_65FE0C3: push $0x78;");
    asm("loc_65FE0C5: call _sub_6600BB6;");
    asm("loc_65FE0CA: mov %eax,%esi;");
    asm("loc_65FE0CC: add $4,%esp;");
    asm("loc_65FE0CF: cmp %ebx,%esi;");
    asm("loc_65FE0D1: je loc_65FE178;");
    asm("loc_65FE0D7: mov %ebx,0x10(%esi);");
    asm("loc_65FE0DA: mov %ebx,4(%esi);");
    asm("loc_65FE0DD: mov %ebx,8(%esi);");
    asm("loc_65FE0E0: mov %ebx,0xC(%esi);");
    asm("loc_65FE0E3: mov %ebx,0x14(%esi);");
    asm("loc_65FE0E6: mov %ebx,0x18(%esi);");
    asm("loc_65FE0E9: mov %ebx,0x1C(%esi);");
    asm("loc_65FE0EC: mov %bl,0x64(%esi);");
    asm("loc_65FE0EF: mov %bl,0x65(%esi);");
    asm("loc_65FE0F2: lea 0x20(%esi),%edx;");
    asm("loc_65FE0F5: xor %eax,%eax;");
    asm("loc_65FE0F7: mov $0x11,%ecx;");
    asm("loc_65FE0FC: mov %edx,%edi;");
    asm("loc_65FE0FE: rep stos %eax,(%edi);");
    asm("loc_65FE100: mov $0x3F800000,%eax;");
    asm("loc_65FE105: mov %eax,0x30(%esi);");
    asm("loc_65FE108: mov %eax,0x34(%esi);");
    asm("loc_65FE10B: mov %eax,0x38(%esi);");
    asm("loc_65FE10E: mov %eax,0x3C(%esi);");
    asm("loc_65FE111: mov %eax,(%edx);");
    asm("loc_65FE113: mov %eax,0x24(%esi);");
    asm("loc_65FE116: mov %eax,0x28(%esi);");
    asm("loc_65FE119: mov %eax,0x2C(%esi);");
    asm("loc_65FE11C: lea 0x6C(%esi),%eax;");
    asm("loc_65FE11F: movl $_off_660156C,(%eax);");
    asm("loc_65FE125: movl $1,4(%eax);");
    asm("loc_65FE12C: mov %esi,8(%eax);");
    asm("loc_65FE12F: movl $_off_66014F8,(%esi);");
    asm("loc_65FE135: mov 8(%ebp),%ecx;");
    asm("loc_65FE138: cmp %ebx,%ecx;");
    asm("loc_65FE13A: mov %ecx,0x68(%esi);");
    asm("loc_65FE13D: jne loc_65FE171;");
    asm("loc_65FE13F: mov %eax,0x68(%esi);");
    asm("loc_65FE142: mov (%esi),%eax;");
    asm("loc_65FE144: push %ebp;");
    asm("loc_65FE145: mov %esi,%ecx;");
    asm("loc_65FE147: calll *0x58(%eax);");
    asm("loc_65FE14A: mov %eax,%edi;");
    asm("loc_65FE14C: cmp %ebx,%edi;");
    asm("loc_65FE14E: je loc_65FE19C;");
    asm("loc_65FE150: mov 0xC(%ebp),%eax;");
    asm("loc_65FE153: cmp %ebx,%eax;");
    asm("loc_65FE155: je loc_65FE159;");
    asm("loc_65FE157: mov %ebx,(%eax);");
    asm("loc_65FE159: mov (%esi),%edx;");
    asm("loc_65FE15B: push $1;");
    asm("loc_65FE15D: mov %esi,%ecx;");
    asm("loc_65FE15F: calll *0x54(%edx);");
    asm("loc_65FE162: mov 0x1C(%esp),%eax;");
    asm("loc_65FE166: mov %ebx,(%eax);");
    asm("loc_65FE168: mov %edi,%eax;");
    asm("loc_65FE16A: pop %edi;");
    asm("loc_65FE16B: pop %esi;");
    asm("loc_65FE16C: pop %ebp;");
    asm("loc_65FE16D: pop %ebx;");
    asm("loc_65FE16E: ret $0xC;");
    asm("loc_65FE171: mov 0xC(%ebp),%ecx;");
    asm("loc_65FE174: mov %eax,(%ecx);");
    asm("loc_65FE176: jmp loc_65FE142;");
    asm("loc_65FE178: mov 0x1C(%esp),%edx;");
    asm("loc_65FE17C: pop %edi;");
    asm("loc_65FE17D: pop %esi;");
    asm("loc_65FE17E: pop %ebp;");
    asm("loc_65FE17F: mov %ebx,(%edx);");
    asm("loc_65FE181: mov $0xFFFFFFFC,%eax;");
    asm("loc_65FE186: pop %ebx;");
    asm("loc_65FE187: ret $0xC;");
    asm("loc_65FE18A: mov 0x1C(%esp),%edx;");
    asm("loc_65FE18E: pop %edi;");
    asm("loc_65FE18F: pop %esi;");
    asm("loc_65FE190: pop %ebp;");
    asm("loc_65FE191: mov $0xFFFFFFFD,%eax;");
    asm("loc_65FE196: mov %ecx,(%edx);");
    asm("loc_65FE198: pop %ebx;");
    asm("loc_65FE199: ret $0xC;");
    asm("loc_65FE19C: mov 0x1C(%esp),%eax;");
    asm("loc_65FE1A0: mov %esi,(%eax);");
    asm("loc_65FE1A2: mov %edi,%eax;");
    asm("loc_65FE1A4: pop %edi;");
    asm("loc_65FE1A5: pop %esi;");
    asm("loc_65FE1A6: pop %ebp;");
    asm("loc_65FE1A7: pop %ebx;");
    asm("loc_65FE1A8: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE1B0() // _sub_65FE1B0
{
    __DEBUG_ASM(65FE1B0);
    // chunk 0x65FE1B0 _sub_65FE1B0
    asm("loc_65FE1B0: push %ebx;");
    asm("loc_65FE1B1: push %ebp;");
    asm("loc_65FE1B2: push %esi;");
    asm("loc_65FE1B3: push %edi;");
    asm("loc_65FE1B4: mov 0x18(%esp),%edi;");
    asm("loc_65FE1B8: xor %ebx,%ebx;");
    asm("loc_65FE1BA: cmp %ebx,%edi;");
    asm("loc_65FE1BC: jne loc_65FE1C8;");
    asm("loc_65FE1BE: pop %edi;");
    asm("loc_65FE1BF: pop %esi;");
    asm("loc_65FE1C0: pop %ebp;");
    asm("loc_65FE1C1: or $0xFFFFFFFF,%eax;");
    asm("loc_65FE1C4: pop %ebx;");
    asm("loc_65FE1C5: ret $8;");
    asm("loc_65FE1C8: mov 0x14(%esp),%esi;");
    asm("loc_65FE1CC: mov (%edi),%eax;");
    asm("loc_65FE1CE: lea 8(%esi),%ebp;");
    asm("loc_65FE1D1: push %ebp;");
    asm("loc_65FE1D2: push $_data_6602A9C;");
    asm("loc_65FE1D7: push %edi;");
    asm("loc_65FE1D8: calll *(%eax);");
    asm("loc_65FE1DA: test %eax,%eax;");
    asm("loc_65FE1DC: jge loc_65FE1E8;");
    asm("loc_65FE1DE: pop %edi;");
    asm("loc_65FE1DF: pop %esi;");
    asm("loc_65FE1E0: pop %ebp;");
    asm("loc_65FE1E1: or $0xFFFFFFFF,%eax;");
    asm("loc_65FE1E4: pop %ebx;");
    asm("loc_65FE1E5: ret $8;");
    asm("loc_65FE1E8: mov (%ebp),%eax;");
    asm("loc_65FE1EB: mov (%eax),%ecx;");
    asm("loc_65FE1ED: push %eax;");
    asm("loc_65FE1EE: calll *8(%ecx);");
    asm("loc_65FE1F1: mov (%edi),%edx;");
    asm("loc_65FE1F3: lea 4(%esi),%ebp;");
    asm("loc_65FE1F6: push %ebp;");
    asm("loc_65FE1F7: push $_data_6602430;");
    asm("loc_65FE1FC: push %edi;");
    asm("loc_65FE1FD: calll *(%edx);");
    asm("loc_65FE1FF: test %eax,%eax;");
    asm("loc_65FE201: jge loc_65FE20D;");
    asm("loc_65FE203: pop %edi;");
    asm("loc_65FE204: pop %esi;");
    asm("loc_65FE205: pop %ebp;");
    asm("loc_65FE206: or $0xFFFFFFFF,%eax;");
    asm("loc_65FE209: pop %ebx;");
    asm("loc_65FE20A: ret $8;");
    asm("loc_65FE20D: mov (%ebp),%eax;");
    asm("loc_65FE210: mov (%eax),%ecx;");
    asm("loc_65FE212: push %eax;");
    asm("loc_65FE213: calll *8(%ecx);");
    asm("loc_65FE216: mov (%edi),%edx;");
    asm("loc_65FE218: lea 0x10(%esi),%ebp;");
    asm("loc_65FE21B: push %ebp;");
    asm("loc_65FE21C: push $_data_6602A8C;");
    asm("loc_65FE221: push %edi;");
    asm("loc_65FE222: calll *(%edx);");
    asm("loc_65FE224: test %eax,%eax;");
    asm("loc_65FE226: jge loc_65FE232;");
    asm("loc_65FE228: pop %edi;");
    asm("loc_65FE229: pop %esi;");
    asm("loc_65FE22A: pop %ebp;");
    asm("loc_65FE22B: or $0xFFFFFFFF,%eax;");
    asm("loc_65FE22E: pop %ebx;");
    asm("loc_65FE22F: ret $8;");
    asm("loc_65FE232: mov (%ebp),%eax;");
    asm("loc_65FE235: mov (%eax),%ecx;");
    asm("loc_65FE237: push %eax;");
    asm("loc_65FE238: calll *8(%ecx);");
    asm("loc_65FE23B: mov (%edi),%edx;");
    asm("loc_65FE23D: lea 0xC(%esi),%ebp;");
    asm("loc_65FE240: push %ebp;");
    asm("loc_65FE241: push $_data_6602A70;");
    asm("loc_65FE246: push %edi;");
    asm("loc_65FE247: calll *(%edx);");
    asm("loc_65FE249: test %eax,%eax;");
    asm("loc_65FE24B: jge loc_65FE257;");
    asm("loc_65FE24D: pop %edi;");
    asm("loc_65FE24E: pop %esi;");
    asm("loc_65FE24F: pop %ebp;");
    asm("loc_65FE250: or $0xFFFFFFFF,%eax;");
    asm("loc_65FE253: pop %ebx;");
    asm("loc_65FE254: ret $8;");
    asm("loc_65FE257: mov (%ebp),%eax;");
    asm("loc_65FE25A: mov (%eax),%ecx;");
    asm("loc_65FE25C: push %eax;");
    asm("loc_65FE25D: calll *8(%ecx);");
    asm("loc_65FE260: mov (%esi),%edx;");
    asm("loc_65FE262: lea 0x18(%esp),%eax;");
    asm("loc_65FE266: push %eax;");
    asm("loc_65FE267: mov %esi,%ecx;");
    asm("loc_65FE269: calll *0x6C(%edx);");
    asm("loc_65FE26C: mov %eax,%ebp;");
    asm("loc_65FE26E: cmp %ebx,%ebp;");
    asm("loc_65FE270: mov %ebx,0x1C(%esi);");
    asm("loc_65FE273: jbe loc_65FE28E;");
    asm("loc_65FE275: mov 0x18(%esp),%ecx;");
    asm("loc_65FE279: lea 0x10(%ecx),%eax;");
    asm("loc_65FE27C: mov %ebp,%ecx;");
    asm("loc_65FE27E: mov %edi,%edi;");
    asm("loc_65FE280: cmpl $7,(%eax);");
    asm("loc_65FE283: jne loc_65FE288;");
    asm("loc_65FE285: incl 0x1C(%esi);");
    asm("loc_65FE288: add $0x4C,%eax;");
    asm("loc_65FE28B: dec %ecx;");
    asm("loc_65FE28C: jne loc_65FE280;");
    asm("loc_65FE28E: mov 0x1C(%esi),%edi;");
    asm("loc_65FE291: cmp %ebx,%edi;");
    asm("loc_65FE293: je loc_65FE2E7;");
    asm("loc_65FE295: mov %edi,%edx;");
    asm("loc_65FE297: imul $0x2C,%edx;");
    asm("loc_65FE29A: add $4,%edx;");
    asm("loc_65FE29D: push %edx;");
    asm("loc_65FE29E: call _sub_6600BB6;");
    asm("loc_65FE2A3: add $4,%esp;");
    asm("loc_65FE2A6: cmp %ebx,%eax;");
    asm("loc_65FE2A8: je loc_65FE2E2;");
    asm("loc_65FE2AA: lea -1(%edi),%ecx;");
    asm("loc_65FE2AD: cmp %ebx,%ecx;");
    asm("loc_65FE2AF: lea 4(%eax),%edx;");
    asm("loc_65FE2B2: mov %edi,(%eax);");
    asm("loc_65FE2B4: mov %edx,%eax;");
    asm("loc_65FE2B6: jl loc_65FE2DE;");
    asm("loc_65FE2B8: inc %ecx;");
    asm("loc_65FE2B9: or $0xFFFFFFFF,%edi;");
    asm("loc_65FE2BC: lea (%esp),%esp;");
    asm("loc_65FE2C0: mov %ebx,(%eax);");
    asm("loc_65FE2C2: mov %edi,4(%eax);");
    asm("loc_65FE2C5: mov %ebx,8(%eax);");
    asm("loc_65FE2C8: movl $4,0x1C(%eax);");
    asm("loc_65FE2CF: mov %ebx,0x20(%eax);");
    asm("loc_65FE2D2: mov %ebx,0x24(%eax);");
    asm("loc_65FE2D5: mov %bl,0x28(%eax);");
    asm("loc_65FE2D8: add $0x2C,%eax;");
    asm("loc_65FE2DB: dec %ecx;");
    asm("loc_65FE2DC: jne loc_65FE2C0;");
    asm("loc_65FE2DE: mov %edx,%eax;");
    asm("loc_65FE2E0: jmp loc_65FE2E4;");
    asm("loc_65FE2E2: xor %eax,%eax;");
    asm("loc_65FE2E4: mov %eax,0x18(%esi);");
    asm("loc_65FE2E7: xor %edi,%edi;");
    asm("loc_65FE2E9: cmp %ebx,%ebp;");
    asm("loc_65FE2EB: jbe loc_65FE30B;");
    asm("loc_65FE2ED: lea (%ecx),%ecx;");
    asm("loc_65FE2F0: mov 0x18(%esp),%eax;");
    asm("loc_65FE2F4: mov (%esi),%edx;");
    asm("loc_65FE2F6: add %ebx,%eax;");
    asm("loc_65FE2F8: lea 0x10(%eax),%ecx;");
    asm("loc_65FE2FB: push %ecx;");
    asm("loc_65FE2FC: push %eax;");
    asm("loc_65FE2FD: push %edi;");
    asm("loc_65FE2FE: mov %esi,%ecx;");
    asm("loc_65FE300: calll *0x68(%edx);");
    asm("loc_65FE303: inc %edi;");
    asm("loc_65FE304: add $0x4C,%ebx;");
    asm("loc_65FE307: cmp %ebp,%edi;");
    asm("loc_65FE309: jb loc_65FE2F0;");
    asm("loc_65FE30B: pop %edi;");
    asm("loc_65FE30C: pop %esi;");
    asm("loc_65FE30D: pop %ebp;");
    asm("loc_65FE30E: xor %eax,%eax;");
    asm("loc_65FE310: pop %ebx;");
    asm("loc_65FE311: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE320() // _sub_65FE320
{
    asm("jmp dgb_65FE320;"); // jumptable skip
    asm(".long _jmp_65FE560;"); // jumptable address
    __DEBUG_ASM(65FE320);
    // chunk 0x65FE320 _sub_65FE320
    asm("loc_65FE320: sub $0x68,%esp;");
    asm("loc_65FE323: push %ebp;");
    asm("loc_65FE324: mov 0x70(%esp),%ebp;");
    asm("loc_65FE328: mov (%ebp),%eax;");
    asm("loc_65FE32B: lea 0xC(%esp),%ecx;");
    asm("loc_65FE32F: push %ecx;");
    asm("loc_65FE330: mov %ebp,%ecx;");
    asm("loc_65FE332: calll *0x6C(%eax);");
    asm("loc_65FE335: xor %ecx,%ecx;");
    asm("loc_65FE337: cmp %ecx,%eax;");
    asm("loc_65FE339: mov %eax,0x20(%esp);");
    asm("loc_65FE33D: mov %ecx,4(%esp);");
    asm("loc_65FE341: jbe loc_65FE556;");
    asm("loc_65FE347: push %ebx;");
    asm("loc_65FE348: push %esi;");
    asm("loc_65FE349: xor %esi,%esi;");
    asm("loc_65FE34B: push %edi;");
    asm("loc_65FE34C: mov 0x80(%esp),%edi;");
    asm("loc_65FE353: mov %esi,0x14(%esp);");
    asm("loc_65FE357: jmp loc_65FE360;");
    asm("loc_65FE359: xor %ecx,%ecx;");
    asm("loc_65FE35B: nop;");
    asm("loc_65FE35C: lea (%esp),%esp;");
    asm("loc_65FE360: mov 0x18(%esp),%edx;");
    asm("loc_65FE364: mov (%esi,%edx),%al;");
    asm("loc_65FE367: add %edx,%esi;");
    asm("loc_65FE369: not %al;");
    asm("loc_65FE36B: test $1,%al;");
    asm("loc_65FE36D: je loc_65FE533;");
    asm("loc_65FE373: mov 0x10(%esi),%ebx;");
    asm("loc_65FE376: cmp %ecx,%ebx;");
    asm("loc_65FE378: mov %ecx,0x30(%esp);");
    asm("loc_65FE37C: mov %ecx,0x34(%esp);");
    asm("loc_65FE380: je loc_65FE38B;");
    asm("loc_65FE382: lea 0x30(%esp),%ecx;");
    asm("loc_65FE386: call _sub_65FE5C0;");
    asm("loc_65FE38B: lea -1(%ebx),%eax;");
    asm("loc_65FE38E: cmp $8,%eax;");
    asm("loc_65FE391: mov %ebx,0x30(%esp);");
    asm("loc_65FE395: ja loc_65FE517;");
    asm("loc_65FE39B: jmpl *_jmp_65FE560(,%eax,4);");
    asm("loc_65FE3A2: mov 4(%esi),%ecx;");
    asm("loc_65FE3A5: push $_data_6602040;");
    asm("loc_65FE3AA: push %ecx;");
    asm("loc_65FE3AB: lea 0x4C(%esp),%ecx;");
    asm("loc_65FE3AF: call _sub_65F3E80;");
    asm("loc_65FE3B4: mov (%edi),%edx;");
    asm("loc_65FE3B6: lea 0x44(%esp),%eax;");
    asm("loc_65FE3BA: push %eax;");
    asm("loc_65FE3BB: push %edi;");
    asm("loc_65FE3BC: xor %ebp,%ebp;");
    asm("loc_65FE3BE: calll *0x7C(%edx);");
    asm("loc_65FE3C1: mov %eax,%ebx;");
    asm("loc_65FE3C3: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_65FE3C6: je loc_65FE3FB;");
    asm("loc_65FE3C8: mov (%edi),%ecx;");
    asm("loc_65FE3CA: push %ebp;");
    asm("loc_65FE3CB: lea 0x20(%esp),%edx;");
    asm("loc_65FE3CF: push %edx;");
    asm("loc_65FE3D0: push $4;");
    asm("loc_65FE3D2: lea 0x2C(%esp),%eax;");
    asm("loc_65FE3D6: push %eax;");
    asm("loc_65FE3D7: push %ebx;");
    asm("loc_65FE3D8: push %edi;");
    asm("loc_65FE3D9: calll *0x14(%ecx);");
    asm("loc_65FE3DC: test %eax,%eax;");
    asm("loc_65FE3DE: je loc_65FE420;");
    asm("loc_65FE3E0: cmpl $4,0x1C(%esp);");
    asm("loc_65FE3E5: jne loc_65FE420;");
    asm("loc_65FE3E7: mov 0x20(%esp),%ecx;");
    asm("loc_65FE3EB: mov $1,%ebp;");
    asm("loc_65FE3F0: mov %ecx,0x34(%esp);");
    asm("loc_65FE3F4: mov (%edi),%edx;");
    asm("loc_65FE3F6: push %ebx;");
    asm("loc_65FE3F7: push %edi;");
    asm("loc_65FE3F8: calll *0x10(%edx);");
    asm("loc_65FE3FB: xor %eax,%eax;");
    asm("loc_65FE3FD: test %ebp,%ebp;");
    asm("loc_65FE3FF: setne %al;");
    asm("loc_65FE402: dec %eax;");
    asm("loc_65FE403: test $0x80004005,%eax;");
    asm("loc_65FE408: jge loc_65FE513;");
    asm("loc_65FE40E: lea 0x30(%esp),%ecx;");
    asm("loc_65FE412: call _sub_65FE5C0;");
    asm("loc_65FE417: mov 0x7C(%esp),%ebp;");
    asm("loc_65FE41B: jmp loc_65FE533;");
    asm("loc_65FE420: xor %ebp,%ebp;");
    asm("loc_65FE422: jmp loc_65FE3F4;");
    asm("loc_65FE424: mov 4(%esi),%edx;");
    asm("loc_65FE427: lea 0x34(%esp),%ecx;");
    asm("loc_65FE42B: push %ecx;");
    asm("loc_65FE42C: push %edx;");
    asm("loc_65FE42D: push %edi;");
    asm("loc_65FE42E: call _sub_6600460;");
    asm("loc_65FE433: add $0xC,%esp;");
    asm("loc_65FE436: jmp loc_65FE45D;");
    asm("loc_65FE438: mov 4(%esi),%ecx;");
    asm("loc_65FE43B: push $0;");
    asm("loc_65FE43D: lea 0x38(%esp),%eax;");
    asm("loc_65FE441: push %eax;");
    asm("loc_65FE442: push $3;");
    asm("loc_65FE444: push %ecx;");
    asm("loc_65FE445: jmp loc_65FE454;");
    asm("loc_65FE447: mov 4(%esi),%eax;");
    asm("loc_65FE44A: push $0;");
    asm("loc_65FE44C: lea 0x38(%esp),%edx;");
    asm("loc_65FE450: push %edx;");
    asm("loc_65FE451: push $4;");
    asm("loc_65FE453: push %eax;");
    asm("loc_65FE454: push %edi;");
    asm("loc_65FE455: call _sub_6600520;");
    asm("loc_65FE45A: add $0x14,%esp;");
    asm("loc_65FE45D: test %eax,%eax;");
    asm("loc_65FE45F: jge loc_65FE517;");
    asm("loc_65FE465: jmp loc_65FE52A;");
    asm("loc_65FE46A: mov 4(%esi),%edx;");
    asm("loc_65FE46D: lea 0x80(%esp),%ecx;");
    asm("loc_65FE474: push %ecx;");
    asm("loc_65FE475: push $0;");
    asm("loc_65FE477: push %edx;");
    asm("loc_65FE478: push %edi;");
    asm("loc_65FE479: call _sub_6600600;");
    asm("loc_65FE47E: add $0x10,%esp;");
    asm("loc_65FE481: test %eax,%eax;");
    asm("loc_65FE483: lea 0x30(%esp),%ecx;");
    asm("loc_65FE487: jl loc_65FE52E;");
    asm("loc_65FE48D: mov 0x80(%esp),%eax;");
    asm("loc_65FE494: push %eax;");
    asm("loc_65FE495: call _sub_65FE620;");
    asm("loc_65FE49A: mov 0x80(%esp),%ecx;");
    asm("loc_65FE4A1: push %ecx;");
    asm("loc_65FE4A2: call _sub_6600BB0;");
    asm("loc_65FE4A7: add $4,%esp;");
    asm("loc_65FE4AA: jmp loc_65FE517;");
    asm("loc_65FE4AC: mov 4(%esi),%eax;");
    asm("loc_65FE4AF: lea 0x24(%esp),%edx;");
    asm("loc_65FE4B3: push %edx;");
    asm("loc_65FE4B4: push %eax;");
    asm("loc_65FE4B5: push %edi;");
    asm("loc_65FE4B6: call _sub_66003A0;");
    asm("loc_65FE4BB: add $0xC,%esp;");
    asm("loc_65FE4BE: test %eax,%eax;");
    asm("loc_65FE4C0: jl loc_65FE52A;");
    asm("loc_65FE4C2: mov 0x24(%esp),%ecx;");
    asm("loc_65FE4C6: shr $4,%ecx;");
    asm("loc_65FE4C9: and $0xF,%ecx;");
    asm("loc_65FE4CC: mov %ecx,0x34(%esp);");
    asm("loc_65FE4D0: jmp loc_65FE517;");
    asm("loc_65FE4D2: mov 4(%esi),%eax;");
    asm("loc_65FE4D5: lea 0x28(%esp),%edx;");
    asm("loc_65FE4D9: push %edx;");
    asm("loc_65FE4DA: push %eax;");
    asm("loc_65FE4DB: push %edi;");
    asm("loc_65FE4DC: call _sub_66003A0;");
    asm("loc_65FE4E1: add $0xC,%esp;");
    asm("loc_65FE4E4: test %eax,%eax;");
    asm("loc_65FE4E6: jl loc_65FE52A;");
    asm("loc_65FE4E8: mov (%esi),%eax;");
    asm("loc_65FE4EA: xor %ecx,%ecx;");
    asm("loc_65FE4EC: test $0x20000,%eax;");
    asm("loc_65FE4F1: jne loc_65FE4FF;");
    asm("loc_65FE4F3: test $0x40000,%eax;");
    asm("loc_65FE4F8: je loc_65FE4FF;");
    asm("loc_65FE4FA: mov $1,%ecx;");
    asm("loc_65FE4FF: push %ecx;");
    asm("loc_65FE500: mov 0x2C(%esp),%ecx;");
    asm("loc_65FE504: push %ecx;");
    asm("loc_65FE505: call _sub_65FE590;");
    asm("loc_65FE50A: add $8,%esp;");
    asm("loc_65FE50D: mov %eax,0x34(%esp);");
    asm("loc_65FE511: jmp loc_65FE517;");
    asm("loc_65FE513: mov 0x7C(%esp),%ebp;");
    asm("loc_65FE517: mov 0x10(%esp),%ecx;");
    asm("loc_65FE51B: mov (%ebp),%edx;");
    asm("loc_65FE51E: lea 0x30(%esp),%eax;");
    asm("loc_65FE522: push %eax;");
    asm("loc_65FE523: push %esi;");
    asm("loc_65FE524: push %ecx;");
    asm("loc_65FE525: mov %ebp,%ecx;");
    asm("loc_65FE527: calll *0x68(%edx);");
    asm("loc_65FE52A: lea 0x30(%esp),%ecx;");
    asm("loc_65FE52E: call _sub_65FE5C0;");
    asm("loc_65FE533: mov 0x10(%esp),%eax;");
    asm("loc_65FE537: mov 0x14(%esp),%esi;");
    asm("loc_65FE53B: mov 0x2C(%esp),%ecx;");
    asm("loc_65FE53F: inc %eax;");
    asm("loc_65FE540: add $0x4C,%esi;");
    asm("loc_65FE543: cmp %ecx,%eax;");
    asm("loc_65FE545: mov %eax,0x10(%esp);");
    asm("loc_65FE549: mov %esi,0x14(%esp);");
    asm("loc_65FE54D: jb loc_65FE359;");
    asm("loc_65FE553: pop %edi;");
    asm("loc_65FE554: pop %esi;");
    asm("loc_65FE555: pop %ebx;");
    asm("loc_65FE556: xor %eax,%eax;");
    asm("loc_65FE558: pop %ebp;");
    asm("loc_65FE559: add $0x68,%esp;");
    asm("loc_65FE55C: ret $8;");
    asm("int3;"); // unreachable
    asm("_jmp_65FE560: .long loc_65FE3A2;");
    asm(".long loc_65FE424;");
    asm(".long loc_65FE438;");
    asm(".long loc_65FE447;");
    asm(".long loc_65FE46A;");
    asm(".long loc_65FE517;");
    asm(".long loc_65FE46A;");
    asm(".long loc_65FE4AC;");
    asm(".long loc_65FE4D2;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FE320);
_naked _weak void _sub_65FE590() // _sub_65FE590
{
    __DEBUG_ASM(65FE590);
    // chunk 0x65FE590 _sub_65FE590
    asm("loc_65FE590: mov 8(%esp),%eax;");
    asm("loc_65FE594: sub $0,%eax;");
    asm("loc_65FE597: je loc_65FE5AA;");
    asm("loc_65FE599: dec %eax;");
    asm("loc_65FE59A: je loc_65FE59F;");
    asm("loc_65FE59C: xor %eax,%eax;");
    asm("loc_65FE59E: ret;");
    asm("loc_65FE59F: mov 4(%esp),%eax;");
    asm("loc_65FE5A3: shr $2,%eax;");
    asm("loc_65FE5A6: and $3,%eax;");
    asm("loc_65FE5A9: ret;");
    asm("loc_65FE5AA: mov 4(%esp),%eax;");
    asm("loc_65FE5AE: and $3,%eax;");
    asm("loc_65FE5B1: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE5C0() // _sub_65FE5C0
{
    __DEBUG_ASM(65FE5C0);
    // chunk 0x65FE5C0 _sub_65FE5C0
    asm("loc_65FE5C0: push %esi;");
    asm("loc_65FE5C1: mov %ecx,%esi;");
    asm("loc_65FE5C3: mov (%esi),%eax;");
    asm("loc_65FE5C5: sub $5,%eax;");
    asm("loc_65FE5C8: push %edi;");
    asm("loc_65FE5C9: je loc_65FE5F3;");
    asm("loc_65FE5CB: dec %eax;");
    asm("loc_65FE5CC: je loc_65FE5DB;");
    asm("loc_65FE5CE: dec %eax;");
    asm("loc_65FE5CF: je loc_65FE5F3;");
    asm("loc_65FE5D1: pop %edi;");
    asm("loc_65FE5D2: movl $0,4(%esi);");
    asm("loc_65FE5D9: pop %esi;");
    asm("loc_65FE5DA: ret;");
    asm("loc_65FE5DB: mov 4(%esi),%eax;");
    asm("loc_65FE5DE: xor %edi,%edi;");
    asm("loc_65FE5E0: cmp %edi,%eax;");
    asm("loc_65FE5E2: mov %edi,4(%esi);");
    asm("loc_65FE5E5: je loc_65FE60E;");
    asm("loc_65FE5E7: mov (%eax),%ecx;");
    asm("loc_65FE5E9: push %eax;");
    asm("loc_65FE5EA: calll *8(%ecx);");
    asm("loc_65FE5ED: mov %edi,4(%esi);");
    asm("loc_65FE5F0: pop %edi;");
    asm("loc_65FE5F1: pop %esi;");
    asm("loc_65FE5F2: ret;");
    asm("loc_65FE5F3: mov 4(%esi),%eax;");
    asm("loc_65FE5F6: xor %edi,%edi;");
    asm("loc_65FE5F8: cmp %edi,%eax;");
    asm("loc_65FE5FA: je loc_65FE60E;");
    asm("loc_65FE5FC: push %eax;");
    asm("loc_65FE5FD: push %edi;");
    asm("loc_65FE5FE: calll *_import_6601020;");
    asm("loc_65FE604: push %eax;");
    asm("loc_65FE605: calll *_import_6601018;");
    asm("loc_65FE60B: mov %edi,4(%esi);");
    asm("loc_65FE60E: mov %edi,4(%esi);");
    asm("loc_65FE611: pop %edi;");
    asm("loc_65FE612: pop %esi;");
    asm("loc_65FE613: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE620() // _sub_65FE620
{
    __DEBUG_ASM(65FE620);
    // chunk 0x65FE620 _sub_65FE620
    asm("loc_65FE620: push %ebx;");
    asm("loc_65FE621: push %ebp;");
    asm("loc_65FE622: mov _import_6601020,%ebp;");
    asm("loc_65FE628: push %esi;");
    asm("loc_65FE629: mov %ecx,%esi;");
    asm("loc_65FE62B: mov 4(%esi),%eax;");
    asm("loc_65FE62E: test %eax,%eax;");
    asm("loc_65FE630: je loc_65FE645;");
    asm("loc_65FE632: push %eax;");
    asm("loc_65FE633: push $0;");
    asm("loc_65FE635: call *%ebp;");
    asm("loc_65FE637: push %eax;");
    asm("loc_65FE638: calll *_import_6601018;");
    asm("loc_65FE63E: movl $0,4(%esi);");
    asm("loc_65FE645: mov 0x10(%esp),%ebx;");
    asm("loc_65FE649: test %ebx,%ebx;");
    asm("loc_65FE64B: je loc_65FE67A;");
    asm("loc_65FE64D: push %edi;");
    asm("loc_65FE64E: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FE651: xor %eax,%eax;");
    asm("loc_65FE653: mov %ebx,%edi;");
    asm("loc_65FE655: repne scas (%edi),%al;");
    asm("loc_65FE657: not %ecx;");
    asm("loc_65FE659: push %ecx;");
    asm("loc_65FE65A: push %eax;");
    asm("loc_65FE65B: call *%ebp;");
    asm("loc_65FE65D: push %eax;");
    asm("loc_65FE65E: calll *_import_6601014;");
    asm("loc_65FE664: mov %eax,4(%esi);");
    asm("loc_65FE667: mov %ebx,%ecx;");
    asm("loc_65FE669: mov %eax,%edx;");
    asm("loc_65FE66B: pop %edi;");
    asm("loc_65FE66C: lea (%esp),%esp;");
    asm("loc_65FE670: mov (%ecx),%al;");
    asm("loc_65FE672: inc %ecx;");
    asm("loc_65FE673: mov %al,(%edx);");
    asm("loc_65FE675: inc %edx;");
    asm("loc_65FE676: test %al,%al;");
    asm("loc_65FE678: jne loc_65FE670;");
    asm("loc_65FE67A: pop %esi;");
    asm("loc_65FE67B: pop %ebp;");
    asm("loc_65FE67C: pop %ebx;");
    asm("loc_65FE67D: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE680() // _sub_65FE680
{
    asm("jmp dgb_65FE680;"); // jumptable skip
    asm(".long _jmp_65FE8E4;"); // jumptable address
    __DEBUG_ASM(65FE680);
    // chunk 0x65FE680 _sub_65FE680
    asm("loc_65FE680: sub $0x28,%esp;");
    asm("loc_65FE683: mov 0x2C(%esp),%ecx;");
    asm("loc_65FE687: mov (%ecx),%eax;");
    asm("loc_65FE689: push %ebp;");
    asm("loc_65FE68A: lea 0x10(%esp),%edx;");
    asm("loc_65FE68E: push %edx;");
    asm("loc_65FE68F: calll *0x6C(%eax);");
    asm("loc_65FE692: xor %ebp,%ebp;");
    asm("loc_65FE694: xor %ecx,%ecx;");
    asm("loc_65FE696: cmp %ebp,%eax;");
    asm("loc_65FE698: mov %eax,0x14(%esp);");
    asm("loc_65FE69C: mov %ecx,0xC(%esp);");
    asm("loc_65FE6A0: mov %ebp,4(%esp);");
    asm("loc_65FE6A4: jbe loc_65FE8DB;");
    asm("loc_65FE6AA: push %ebx;");
    asm("loc_65FE6AB: mov 0x38(%esp),%ebx;");
    asm("loc_65FE6AF: push %esi;");
    asm("loc_65FE6B0: xor %esi,%esi;");
    asm("loc_65FE6B2: push %edi;");
    asm("loc_65FE6B3: mov %esi,0x14(%esp);");
    asm("loc_65FE6B7: mov 0x1C(%esp),%eax;");
    asm("loc_65FE6BB: mov (%esi,%eax),%cl;");
    asm("loc_65FE6BE: add %eax,%esi;");
    asm("loc_65FE6C0: not %cl;");
    asm("loc_65FE6C2: test $1,%cl;");
    asm("loc_65FE6C5: je loc_65FE7CE;");
    asm("loc_65FE6CB: mov 0x10(%esi),%edi;");
    asm("loc_65FE6CE: cmp %ebp,%edi;");
    asm("loc_65FE6D0: mov %ebp,0x24(%esp);");
    asm("loc_65FE6D4: mov %ebp,0x28(%esp);");
    asm("loc_65FE6D8: je loc_65FE6E3;");
    asm("loc_65FE6DA: lea 0x24(%esp),%ecx;");
    asm("loc_65FE6DE: call _sub_65FE5C0;");
    asm("loc_65FE6E3: mov 0x3C(%esp),%ecx;");
    asm("loc_65FE6E7: mov 0x10(%esp),%eax;");
    asm("loc_65FE6EB: mov (%ecx),%edx;");
    asm("loc_65FE6ED: push %eax;");
    asm("loc_65FE6EE: mov %edi,0x28(%esp);");
    asm("loc_65FE6F2: calll *0x70(%edx);");
    asm("loc_65FE6F5: cmp %ebp,%eax;");
    asm("loc_65FE6F7: je loc_65FE7BD;");
    asm("loc_65FE6FD: mov 0x24(%esp),%ecx;");
    asm("loc_65FE701: dec %ecx;");
    asm("loc_65FE702: cmp $9,%ecx;");
    asm("loc_65FE705: ja loc_65FE755;");
    asm("loc_65FE707: jmpl *_jmp_65FE8E4(,%ecx,4);");
    asm("loc_65FE70E: mov (%eax),%eax;");
    asm("loc_65FE710: mov %eax,0x28(%esp);");
    asm("loc_65FE714: jmp loc_65FE755;");
    asm("loc_65FE716: mov 0xC(%eax),%ecx;");
    asm("loc_65FE719: mov %ecx,0x34(%esp);");
    asm("loc_65FE71D: mov 8(%eax),%edx;");
    asm("loc_65FE720: mov %edx,0x30(%esp);");
    asm("loc_65FE724: mov 4(%eax),%ecx;");
    asm("loc_65FE727: mov %ecx,0x2C(%esp);");
    asm("loc_65FE72B: mov (%eax),%edx;");
    asm("loc_65FE72D: mov %edx,0x28(%esp);");
    asm("loc_65FE731: jmp loc_65FE755;");
    asm("loc_65FE733: mov (%eax),%eax;");
    asm("loc_65FE735: push %eax;");
    asm("loc_65FE736: lea 0x28(%esp),%ecx;");
    asm("loc_65FE73A: call _sub_65FE620;");
    asm("loc_65FE73F: jmp loc_65FE755;");
    asm("loc_65FE741: mov (%eax),%ecx;");
    asm("loc_65FE743: push %ecx;");
    asm("loc_65FE744: lea 0x28(%esp),%ecx;");
    asm("loc_65FE748: call _sub_65FE930;");
    asm("loc_65FE74D: jmp loc_65FE755;");
    asm("loc_65FE74F: mov (%eax),%ecx;");
    asm("loc_65FE751: mov %ecx,0x28(%esp);");
    asm("loc_65FE755: mov 0x24(%esp),%edx;");
    asm("loc_65FE759: lea -1(%edx),%eax;");
    asm("loc_65FE75C: cmp $8,%eax;");
    asm("loc_65FE75F: ja loc_65FE8BE;");
    asm("loc_65FE765: jmpl *_jmp_65FE90C(,%eax,4);");
    asm("loc_65FE76C: mov 4(%esi),%ecx;");
    asm("loc_65FE76F: lea 0x28(%esp),%eax;");
    asm("loc_65FE773: push %eax;");
    asm("loc_65FE774: push %ecx;");
    asm("loc_65FE775: push %ebx;");
    asm("loc_65FE776: call _sub_66006D0;");
    asm("loc_65FE77B: add $0xC,%esp;");
    asm("loc_65FE77E: jmp loc_65FE7B5;");
    asm("loc_65FE780: mov 4(%esi),%eax;");
    asm("loc_65FE783: lea 0x28(%esp),%edx;");
    asm("loc_65FE787: push %edx;");
    asm("loc_65FE788: push %eax;");
    asm("loc_65FE789: push %ebx;");
    asm("loc_65FE78A: call _sub_66006D0;");
    asm("loc_65FE78F: add $0xC,%esp;");
    asm("loc_65FE792: jmp loc_65FE7B5;");
    asm("loc_65FE794: mov 4(%esi),%edx;");
    asm("loc_65FE797: lea 0x28(%esp),%ecx;");
    asm("loc_65FE79B: push %ecx;");
    asm("loc_65FE79C: push $3;");
    asm("loc_65FE79E: push %edx;");
    asm("loc_65FE79F: jmp loc_65FE7AC;");
    asm("loc_65FE7A1: mov 4(%esi),%ecx;");
    asm("loc_65FE7A4: lea 0x28(%esp),%eax;");
    asm("loc_65FE7A8: push %eax;");
    asm("loc_65FE7A9: push $4;");
    asm("loc_65FE7AB: push %ecx;");
    asm("loc_65FE7AC: push %ebx;");
    asm("loc_65FE7AD: call _sub_6600790;");
    asm("loc_65FE7B2: add $0x10,%esp;");
    asm("loc_65FE7B5: test %eax,%eax;");
    asm("loc_65FE7B7: jge loc_65FE8BE;");
    asm("loc_65FE7BD: lea 0x24(%esp),%ecx;");
    asm("loc_65FE7C1: call _sub_65FE5C0;");
    asm("loc_65FE7C6: movl $0xFFFFFFFF,0x18(%esp);");
    asm("loc_65FE7CE: mov 0x10(%esp),%eax;");
    asm("loc_65FE7D2: mov 0x14(%esp),%esi;");
    asm("loc_65FE7D6: mov 0x20(%esp),%ecx;");
    asm("loc_65FE7DA: inc %eax;");
    asm("loc_65FE7DB: add $0x4C,%esi;");
    asm("loc_65FE7DE: cmp %ecx,%eax;");
    asm("loc_65FE7E0: mov %eax,0x10(%esp);");
    asm("loc_65FE7E4: mov %esi,0x14(%esp);");
    asm("loc_65FE7E8: jb loc_65FE6B7;");
    asm("loc_65FE7EE: mov 0x18(%esp),%eax;");
    asm("loc_65FE7F2: pop %edi;");
    asm("loc_65FE7F3: pop %esi;");
    asm("loc_65FE7F4: pop %ebx;");
    asm("loc_65FE7F5: pop %ebp;");
    asm("loc_65FE7F6: add $0x28,%esp;");
    asm("loc_65FE7F9: ret $8;");
    asm("loc_65FE7FC: mov 0x28(%esp),%edi;");
    asm("loc_65FE800: mov 4(%esi),%edx;");
    asm("loc_65FE803: push %edi;");
    asm("loc_65FE804: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FE807: xor %eax,%eax;");
    asm("loc_65FE809: repne scas (%edi),%al;");
    asm("loc_65FE80B: not %ecx;");
    asm("loc_65FE80D: push %ecx;");
    asm("loc_65FE80E: push %edx;");
    asm("loc_65FE80F: push %ebx;");
    asm("loc_65FE810: call _sub_6600850;");
    asm("loc_65FE815: jmp loc_65FE7B2;");
    asm("loc_65FE817: mov 4(%esi),%ecx;");
    asm("loc_65FE81A: lea 0x40(%esp),%eax;");
    asm("loc_65FE81E: push %eax;");
    asm("loc_65FE81F: push %ecx;");
    asm("loc_65FE820: push %ebx;");
    asm("loc_65FE821: mov %ebp,0x4C(%esp);");
    asm("loc_65FE825: call _sub_66003A0;");
    asm("loc_65FE82A: mov 0x34(%esp),%edx;");
    asm("loc_65FE82E: mov 0x4C(%esp),%eax;");
    asm("loc_65FE832: mov 4(%esi),%ecx;");
    asm("loc_65FE835: shl $4,%edx;");
    asm("loc_65FE838: xor %eax,%edx;");
    asm("loc_65FE83A: and $0xF0,%edx;");
    asm("loc_65FE840: xor %edx,%eax;");
    asm("loc_65FE842: mov %eax,0x4C(%esp);");
    asm("loc_65FE846: lea 0x4C(%esp),%eax;");
    asm("loc_65FE84A: push %eax;");
    asm("loc_65FE84B: push %ecx;");
    asm("loc_65FE84C: push %ebx;");
    asm("loc_65FE84D: call _sub_66006D0;");
    asm("loc_65FE852: add $0x18,%esp;");
    asm("loc_65FE855: jmp loc_65FE7B5;");
    asm("loc_65FE85A: mov 4(%esi),%eax;");
    asm("loc_65FE85D: lea 0x40(%esp),%edx;");
    asm("loc_65FE861: push %edx;");
    asm("loc_65FE862: push %eax;");
    asm("loc_65FE863: push %ebx;");
    asm("loc_65FE864: mov %ebp,0x4C(%esp);");
    asm("loc_65FE868: xor %edi,%edi;");
    asm("loc_65FE86A: call _sub_66003A0;");
    asm("loc_65FE86F: mov (%esi),%eax;");
    asm("loc_65FE871: add $0xC,%esp;");
    asm("loc_65FE874: test $0x20000,%eax;");
    asm("loc_65FE879: jne loc_65FE887;");
    asm("loc_65FE87B: test $0x40000,%eax;");
    asm("loc_65FE880: je loc_65FE887;");
    asm("loc_65FE882: mov $1,%edi;");
    asm("loc_65FE887: sub %ebp,%edi;");
    asm("loc_65FE889: mov 0x28(%esp),%ecx;");
    asm("loc_65FE88D: je loc_65FE8CC;");
    asm("loc_65FE88F: dec %edi;");
    asm("loc_65FE890: jne loc_65FE8A4;");
    asm("loc_65FE892: mov 0x40(%esp),%eax;");
    asm("loc_65FE896: shl $2,%ecx;");
    asm("loc_65FE899: xor %eax,%ecx;");
    asm("loc_65FE89B: and $0xC,%ecx;");
    asm("loc_65FE89E: xor %ecx,%eax;");
    asm("loc_65FE8A0: mov %eax,0x40(%esp);");
    asm("loc_65FE8A4: mov 4(%esi),%eax;");
    asm("loc_65FE8A7: lea 0x40(%esp),%edx;");
    asm("loc_65FE8AB: push %edx;");
    asm("loc_65FE8AC: push %eax;");
    asm("loc_65FE8AD: push %ebx;");
    asm("loc_65FE8AE: call _sub_66006D0;");
    asm("loc_65FE8B3: add $0xC,%esp;");
    asm("loc_65FE8B6: test %eax,%eax;");
    asm("loc_65FE8B8: jl loc_65FE7BD;");
    asm("loc_65FE8BE: lea 0x24(%esp),%ecx;");
    asm("loc_65FE8C2: call _sub_65FE5C0;");
    asm("loc_65FE8C7: jmp loc_65FE7CE;");
    asm("loc_65FE8CC: mov 0x40(%esp),%eax;");
    asm("loc_65FE8D0: mov %eax,%edx;");
    asm("loc_65FE8D2: xor %ecx,%edx;");
    asm("loc_65FE8D4: and $3,%edx;");
    asm("loc_65FE8D7: xor %edx,%eax;");
    asm("loc_65FE8D9: jmp loc_65FE896;");
    asm("loc_65FE8DB: mov %ecx,%eax;");
    asm("loc_65FE8DD: pop %ebp;");
    asm("loc_65FE8DE: add $0x28,%esp;");
    asm("loc_65FE8E1: ret $8;");
    asm("int3;"); // unreachable
    asm("_jmp_65FE8E4: .long loc_65FE72B;");
    asm(".long loc_65FE70E;");
    asm(".long loc_65FE71D;");
    asm(".long loc_65FE716;");
    asm(".long loc_65FE733;");
    asm(".long loc_65FE741;");
    asm(".long loc_65FE733;");
    asm(".long loc_65FE72B;");
    asm(".long loc_65FE70E;");
    asm(".long loc_65FE74F;");
    asm("_jmp_65FE90C: .long loc_65FE76C;");
    asm(".long loc_65FE780;");
    asm(".long loc_65FE794;");
    asm(".long loc_65FE7A1;");
    asm(".long loc_65FE7FC;");
    asm(".long loc_65FE8BE;");
    asm(".long loc_65FE7FC;");
    asm(".long loc_65FE817;");
    asm(".long loc_65FE85A;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FE680);
_naked _weak void _sub_65FE930() // _sub_65FE930
{
    __DEBUG_ASM(65FE930);
    // chunk 0x65FE930 _sub_65FE930
    asm("loc_65FE930: mov 4(%esp),%eax;");
    asm("loc_65FE934: test %eax,%eax;");
    asm("loc_65FE936: push %esi;");
    asm("loc_65FE937: mov 4(%ecx),%esi;");
    asm("loc_65FE93A: mov %eax,4(%ecx);");
    asm("loc_65FE93D: je loc_65FE945;");
    asm("loc_65FE93F: mov (%eax),%ecx;");
    asm("loc_65FE941: push %eax;");
    asm("loc_65FE942: calll *4(%ecx);");
    asm("loc_65FE945: test %esi,%esi;");
    asm("loc_65FE947: je loc_65FE94F;");
    asm("loc_65FE949: mov (%esi),%edx;");
    asm("loc_65FE94B: push %esi;");
    asm("loc_65FE94C: calll *8(%edx);");
    asm("loc_65FE94F: pop %esi;");
    asm("loc_65FE950: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE960() // _sub_65FE960
{
    __DEBUG_ASM(65FE960);
    // chunk 0x65FE960 _sub_65FE960
    asm("loc_65FE960: push %esi;");
    asm("loc_65FE961: mov 8(%esp),%esi;");
    asm("loc_65FE965: mov (%esi),%eax;");
    asm("loc_65FE967: push %edi;");
    asm("loc_65FE968: mov %esi,%ecx;");
    asm("loc_65FE96A: calll *0x60(%eax);");
    asm("loc_65FE96D: mov (%esi),%ecx;");
    asm("loc_65FE96F: push $0;");
    asm("loc_65FE971: push %esi;");
    asm("loc_65FE972: calll *0x20(%ecx);");
    asm("loc_65FE975: mov 4(%esi),%eax;");
    asm("loc_65FE978: mov (%eax),%edx;");
    asm("loc_65FE97A: push %eax;");
    asm("loc_65FE97B: calll *0x110(%edx);");
    asm("loc_65FE981: push $0;");
    asm("loc_65FE983: mov %eax,%edi;");
    asm("loc_65FE985: mov (%esi),%eax;");
    asm("loc_65FE987: push %esi;");
    asm("loc_65FE988: calll *0x24(%eax);");
    asm("loc_65FE98B: mov %edi,%eax;");
    asm("loc_65FE98D: pop %edi;");
    asm("loc_65FE98E: pop %esi;");
    asm("loc_65FE98F: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FE9A0() // _sub_65FE9A0
{
    __DEBUG_ASM(65FE9A0);
    // chunk 0x65FE9A0 _sub_65FE9A0
    asm("loc_65FE9A0: push %ebp;");
    asm("loc_65FE9A1: push %esi;");
    asm("loc_65FE9A2: mov 0xC(%esp),%esi;");
    asm("loc_65FE9A6: mov 0x1C(%esi),%eax;");
    asm("loc_65FE9A9: xor %ebp,%ebp;");
    asm("loc_65FE9AB: test %eax,%eax;");
    asm("loc_65FE9AD: jbe loc_65FE9EE;");
    asm("loc_65FE9AF: push %ebx;");
    asm("loc_65FE9B0: push %edi;");
    asm("loc_65FE9B1: xor %edi,%edi;");
    asm("loc_65FE9B3: mov 0x18(%esi),%eax;");
    asm("loc_65FE9B6: mov 4(%eax,%edi),%ecx;");
    asm("loc_65FE9BA: mov 8(%esi),%edx;");
    asm("loc_65FE9BD: add %edi,%eax;");
    asm("loc_65FE9BF: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_65FE9C2: je loc_65FE9DA;");
    asm("loc_65FE9C4: mov 0x28(%eax),%bl;");
    asm("loc_65FE9C7: test %bl,%bl;");
    asm("loc_65FE9C9: jne loc_65FE9E1;");
    asm("loc_65FE9CB: mov (%edx),%ebx;");
    asm("loc_65FE9CD: add $8,%eax;");
    asm("loc_65FE9D0: push %eax;");
    asm("loc_65FE9D1: push $0xFFFFFFFF;");
    asm("loc_65FE9D3: push %ecx;");
    asm("loc_65FE9D4: push %edx;");
    asm("loc_65FE9D5: calll *0x70(%ebx);");
    asm("loc_65FE9D8: jmp loc_65FE9E1;");
    asm("loc_65FE9DA: movl $0,8(%eax);");
    asm("loc_65FE9E1: mov 0x1C(%esi),%eax;");
    asm("loc_65FE9E4: inc %ebp;");
    asm("loc_65FE9E5: add $0x2C,%edi;");
    asm("loc_65FE9E8: cmp %eax,%ebp;");
    asm("loc_65FE9EA: jb loc_65FE9B3;");
    asm("loc_65FE9EC: pop %edi;");
    asm("loc_65FE9ED: pop %ebx;");
    asm("loc_65FE9EE: pop %esi;");
    asm("loc_65FE9EF: xor %eax,%eax;");
    asm("loc_65FE9F1: pop %ebp;");
    asm("loc_65FE9F2: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FEA00() // _sub_65FEA00
{
    asm("jmp dgb_65FEA00;"); // jumptable skip
    asm(".long _jmp_65FEBFC;"); // jumptable address
    __DEBUG_ASM(65FEA00);
    // chunk 0x65FEA00 _sub_65FEA00
    asm("loc_65FEA00: mov 0x20(%esp),%eax;");
    asm("loc_65FEA04: sub $0x14,%esp;");
    asm("loc_65FEA07: test $1,%ah;");
    asm("loc_65FEA0A: push %ebx;");
    asm("loc_65FEA0B: mov 0x2C(%esp),%ebx;");
    asm("loc_65FEA0F: push %ebp;");
    asm("loc_65FEA10: push %esi;");
    asm("loc_65FEA11: mov 0x24(%esp),%esi;");
    asm("loc_65FEA15: push %edi;");
    asm("loc_65FEA16: mov 0x2C(%esp),%edi;");
    asm("loc_65FEA1A: je loc_65FEA4A;");
    asm("loc_65FEA1C: mov 0x40(%esp),%edx;");
    asm("loc_65FEA20: mov 0x3C(%esp),%ebp;");
    asm("loc_65FEA24: mov 0x10(%esi),%eax;");
    asm("loc_65FEA27: mov (%eax),%ecx;");
    asm("loc_65FEA29: push %edx;");
    asm("loc_65FEA2A: mov 0x18(%edi),%edx;");
    asm("loc_65FEA2D: mov 4(%edx),%edx;");
    asm("loc_65FEA30: add %ebp,%edx;");
    asm("loc_65FEA32: push %edx;");
    asm("loc_65FEA33: mov 0x3C(%esp),%edx;");
    asm("loc_65FEA37: push %ebx;");
    asm("loc_65FEA38: push %edx;");
    asm("loc_65FEA39: mov 0x40(%esp),%edx;");
    asm("loc_65FEA3D: push %edx;");
    asm("loc_65FEA3E: push %eax;");
    asm("loc_65FEA3F: calll *0xC(%ecx);");
    asm("loc_65FEA42: test %eax,%eax;");
    asm("loc_65FEA44: jge loc_65FEBF0;");
    asm("loc_65FEA4A: mov 0x14(%edi),%ecx;");
    asm("loc_65FEA4D: or $0xFFFFFFFF,%eax;");
    asm("loc_65FEA50: test %ecx,%ecx;");
    asm("loc_65FEA52: je loc_65FEA89;");
    asm("loc_65FEA54: mov 0x40(%esp),%ebp;");
    asm("loc_65FEA58: mov 0x10(%edi),%edi;");
    asm("loc_65FEA5B: mov 4(%esi),%eax;");
    asm("loc_65FEA5E: mov (%eax),%edx;");
    asm("loc_65FEA60: push $0;");
    asm("loc_65FEA62: push %ebp;");
    asm("loc_65FEA63: mov 0x44(%esp),%ebp;");
    asm("loc_65FEA67: lea (%edi,%ebp,2),%edi;");
    asm("loc_65FEA6A: mov 0x3C(%esp),%ebp;");
    asm("loc_65FEA6E: push %edi;");
    asm("loc_65FEA6F: mov 8(%ecx),%edi;");
    asm("loc_65FEA72: mov (%ecx),%ecx;");
    asm("loc_65FEA74: push %ebx;");
    asm("loc_65FEA75: add %ebp,%edi;");
    asm("loc_65FEA77: push %edi;");
    asm("loc_65FEA78: push %ecx;");
    asm("loc_65FEA79: mov 0x48(%esp),%ecx;");
    asm("loc_65FEA7D: push %ecx;");
    asm("loc_65FEA7E: push %eax;");
    asm("loc_65FEA7F: calll *0x120(%edx);");
    asm("loc_65FEA85: mov 0x2C(%esp),%edi;");
    asm("loc_65FEA89: xor %ebp,%ebp;");
    asm("loc_65FEA8B: cmp %ebp,%eax;");
    asm("loc_65FEA8D: jge loc_65FEBF0;");
    asm("loc_65FEA93: mov 0xC(%edi),%edi;");
    asm("loc_65FEA96: cmp %ebp,%edi;");
    asm("loc_65FEA98: je loc_65FEBF0;");
    asm("loc_65FEA9E: cmp %ebp,%ebx;");
    asm("loc_65FEAA0: jbe loc_65FEBF0;");
    asm("loc_65FEAA6: cmp %ebp,0x40(%esp);");
    asm("loc_65FEAAA: jbe loc_65FEBF0;");
    asm("loc_65FEAB0: mov 0xC(%esi),%eax;");
    asm("loc_65FEAB3: mov (%eax),%edx;");
    asm("loc_65FEAB5: lea 0x14(%esp),%ecx;");
    asm("loc_65FEAB9: push %ecx;");
    asm("loc_65FEABA: mov 0x68(%edi),%ecx;");
    asm("loc_65FEABD: push %ebx;");
    asm("loc_65FEABE: push %ecx;");
    asm("loc_65FEABF: push %eax;");
    asm("loc_65FEAC0: calll *0x14(%edx);");
    asm("loc_65FEAC3: cmp %ebp,%eax;");
    asm("loc_65FEAC5: jl loc_65FEBF0;");
    asm("loc_65FEACB: mov 0x18(%esp),%edx;");
    asm("loc_65FEACF: mov %edx,%eax;");
    asm("loc_65FEAD1: mov $0xC,%edi;");
    asm("loc_65FEAD6: and %edi,%eax;");
    asm("loc_65FEAD8: cmp $0xC,%al;");
    asm("loc_65FEADA: mov %ebp,0x28(%esp);");
    asm("loc_65FEADE: jne loc_65FEAEA;");
    asm("loc_65FEAE0: movl $0x1C,0x28(%esp);");
    asm("loc_65FEAE8: jmp loc_65FEB0B;");
    asm("loc_65FEAEA: mov %edx,%ecx;");
    asm("loc_65FEAEC: and $4,%ecx;");
    asm("loc_65FEAEF: cmp $4,%cl;");
    asm("loc_65FEAF2: jne loc_65FEAFE;");
    asm("loc_65FEAF4: movl $0x10,0x28(%esp);");
    asm("loc_65FEAFC: jmp loc_65FEB0B;");
    asm("loc_65FEAFE: mov %edx,%eax;");
    asm("loc_65FEB00: and $2,%eax;");
    asm("loc_65FEB03: cmp $2,%al;");
    asm("loc_65FEB05: jne loc_65FEB0B;");
    asm("loc_65FEB07: mov %edi,0x28(%esp);");
    asm("loc_65FEB0B: test $0x10,%dl;");
    asm("loc_65FEB0E: mov %ebp,0x10(%esp);");
    asm("loc_65FEB12: je loc_65FEB18;");
    asm("loc_65FEB14: mov %edi,0x10(%esp);");
    asm("loc_65FEB18: test $0x40,%dl;");
    asm("loc_65FEB1B: mov %ebp,0x44(%esp);");
    asm("loc_65FEB1F: je loc_65FEB29;");
    asm("loc_65FEB21: movl $4,0x44(%esp);");
    asm("loc_65FEB29: test %dl,%dl;");
    asm("loc_65FEB2B: jns loc_65FEB32;");
    asm("loc_65FEB2D: addl $4,0x44(%esp);");
    asm("loc_65FEB32: mov %edx,%eax;");
    asm("loc_65FEB34: shr $8,%eax;");
    asm("loc_65FEB37: xor %edi,%edi;");
    asm("loc_65FEB39: and $0xF,%eax;");
    asm("loc_65FEB3C: jle loc_65FEB7A;");
    asm("loc_65FEB3E: mov $0x10,%ecx;");
    asm("loc_65FEB43: mov %eax,0x38(%esp);");
    asm("loc_65FEB47: mov %edx,%eax;");
    asm("loc_65FEB49: shr %cl,%eax;");
    asm("loc_65FEB4B: and $3,%eax;");
    asm("loc_65FEB4E: cmp $3,%eax;");
    asm("loc_65FEB51: ja loc_65FEB6C;");
    asm("loc_65FEB53: jmpl *_jmp_65FEBFC(,%eax,4);");
    asm("loc_65FEB5A: add $4,%edi;");
    asm("loc_65FEB5D: jmp loc_65FEB6C;");
    asm("loc_65FEB5F: add $8,%edi;");
    asm("loc_65FEB62: jmp loc_65FEB6C;");
    asm("loc_65FEB64: add $0xC,%edi;");
    asm("loc_65FEB67: jmp loc_65FEB6C;");
    asm("loc_65FEB69: add $0x10,%edi;");
    asm("loc_65FEB6C: mov 0x38(%esp),%eax;");
    asm("loc_65FEB70: add $2,%ecx;");
    asm("loc_65FEB73: dec %eax;");
    asm("loc_65FEB74: mov %eax,0x38(%esp);");
    asm("loc_65FEB78: jne loc_65FEB47;");
    asm("loc_65FEB7A: mov 0x34(%esp),%ebp;");
    asm("loc_65FEB7E: push %ebx;");
    asm("loc_65FEB7F: push %ebp;");
    asm("loc_65FEB80: mov 0x34(%esp),%ebp;");
    asm("loc_65FEB84: mov 0xC(%ebp),%ebp;");
    asm("loc_65FEB87: mov 0xC(%esi),%eax;");
    asm("loc_65FEB8A: mov (%eax),%ecx;");
    asm("loc_65FEB8C: push %ebp;");
    asm("loc_65FEB8D: mov 0x1C(%esp),%ebp;");
    asm("loc_65FEB91: push %edx;");
    asm("loc_65FEB92: mov 0x54(%esp),%edx;");
    asm("loc_65FEB96: add %edx,%edi;");
    asm("loc_65FEB98: mov 0x38(%esp),%edx;");
    asm("loc_65FEB9C: add %ebp,%edi;");
    asm("loc_65FEB9E: add %edx,%edi;");
    asm("loc_65FEBA0: imul 0x44(%esp),%edi;");
    asm("loc_65FEBA5: mov 0x30(%esp),%edx;");
    asm("loc_65FEBA9: sub %edi,%edx;");
    asm("loc_65FEBAB: push %edx;");
    asm("loc_65FEBAC: push %eax;");
    asm("loc_65FEBAD: calll *0x20(%ecx);");
    asm("loc_65FEBB0: mov 0xC(%esi),%eax;");
    asm("loc_65FEBB3: mov (%eax),%ecx;");
    asm("loc_65FEBB5: lea 0x14(%esp),%edx;");
    asm("loc_65FEBB9: push %edx;");
    asm("loc_65FEBBA: push %eax;");
    asm("loc_65FEBBB: calll *0x18(%ecx);");
    asm("loc_65FEBBE: mov 0x40(%esp),%edx;");
    asm("loc_65FEBC2: mov 4(%esi),%eax;");
    asm("loc_65FEBC5: mov 0x3C(%esp),%esi;");
    asm("loc_65FEBC9: mov (%eax),%ecx;");
    asm("loc_65FEBCB: push $0;");
    asm("loc_65FEBCD: push %edx;");
    asm("loc_65FEBCE: mov 0x34(%esp),%edx;");
    asm("loc_65FEBD2: mov 0x10(%edx),%edx;");
    asm("loc_65FEBD5: lea (%edx,%esi,2),%edx;");
    asm("loc_65FEBD8: push %edx;");
    asm("loc_65FEBD9: mov 0x28(%esp),%edx;");
    asm("loc_65FEBDD: push %ebx;");
    asm("loc_65FEBDE: push %edx;");
    asm("loc_65FEBDF: mov 0x28(%esp),%edx;");
    asm("loc_65FEBE3: push %edx;");
    asm("loc_65FEBE4: mov 0x48(%esp),%edx;");
    asm("loc_65FEBE8: push %edx;");
    asm("loc_65FEBE9: push %eax;");
    asm("loc_65FEBEA: calll *0x120(%ecx);");
    asm("loc_65FEBF0: pop %edi;");
    asm("loc_65FEBF1: pop %esi;");
    asm("loc_65FEBF2: pop %ebp;");
    asm("loc_65FEBF3: pop %ebx;");
    asm("loc_65FEBF4: add $0x14,%esp;");
    asm("loc_65FEBF7: ret $0x20;");
    asm("int3;"); // unreachable
    asm("_jmp_65FEBFC: .long loc_65FEB5F;");
    asm(".long loc_65FEB64;");
    asm(".long loc_65FEB69;");
    asm(".long loc_65FEB5A;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FEA00);
_naked _weak void _sub_65FEC10() // _sub_65FEC10
{
    __DEBUG_ASM(65FEC10);
    // chunk 0x65FEC10 _sub_65FEC10
    asm("loc_65FEC10: push %ebx;");
    asm("loc_65FEC11: push %ebp;");
    asm("loc_65FEC12: mov 0xC(%esp),%ebp;");
    asm("loc_65FEC16: mov 0x14(%ebp),%eax;");
    asm("loc_65FEC19: push %eax;");
    asm("loc_65FEC1A: call _sub_6600BB0;");
    asm("loc_65FEC1F: mov 0x14(%esp),%ebx;");
    asm("loc_65FEC23: add $4,%esp;");
    asm("loc_65FEC26: xor %eax,%eax;");
    asm("loc_65FEC28: test %ebx,%ebx;");
    asm("loc_65FEC2A: movl $0,0x14(%ebp);");
    asm("loc_65FEC31: je loc_65FEC77;");
    asm("loc_65FEC33: push %esi;");
    asm("loc_65FEC34: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FEC37: push %edi;");
    asm("loc_65FEC38: mov %ebx,%edi;");
    asm("loc_65FEC3A: repne scas (%edi),%al;");
    asm("loc_65FEC3C: not %ecx;");
    asm("loc_65FEC3E: dec %ecx;");
    asm("loc_65FEC3F: mov %ecx,%esi;");
    asm("loc_65FEC41: inc %esi;");
    asm("loc_65FEC42: cmp $0x40,%esi;");
    asm("loc_65FEC45: jbe loc_65FEC4C;");
    asm("loc_65FEC47: mov $0x40,%esi;");
    asm("loc_65FEC4C: push %esi;");
    asm("loc_65FEC4D: call _sub_6600BB6;");
    asm("loc_65FEC52: push %esi;");
    asm("loc_65FEC53: push %ebx;");
    asm("loc_65FEC54: push %eax;");
    asm("loc_65FEC55: mov %eax,0x14(%ebp);");
    asm("loc_65FEC58: calll *_import_6601028;");
    asm("loc_65FEC5E: mov 0x14(%ebp),%ecx;");
    asm("loc_65FEC61: movb $0,-1(%esi,%ecx);");
    asm("loc_65FEC66: mov 0x14(%ebp),%edx;");
    asm("loc_65FEC69: push %edx;");
    asm("loc_65FEC6A: calll *_import_6601078;");
    asm("loc_65FEC70: add $0x14,%esp;");
    asm("loc_65FEC73: pop %edi;");
    asm("loc_65FEC74: xor %eax,%eax;");
    asm("loc_65FEC76: pop %esi;");
    asm("loc_65FEC77: pop %ebp;");
    asm("loc_65FEC78: pop %ebx;");
    asm("loc_65FEC79: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FEC80() // _sub_65FEC80
{
    __DEBUG_ASM(65FEC80);
    // chunk 0x65FEC80 _sub_65FEC80
    asm("loc_65FEC80: mov 4(%esp),%eax;");
    asm("loc_65FEC84: mov 0x14(%eax),%eax;");
    asm("loc_65FEC87: test %eax,%eax;");
    asm("loc_65FEC89: je _sub_65FECAD;");
    asm("loc_65FEC8B: push %esi;");
    asm("loc_65FEC8C: mov 0x10(%esp),%esi;");
    asm("loc_65FEC90: push %edi;");
    asm("loc_65FEC91: mov 0x10(%esp),%edi;");
    asm("loc_65FEC95: push %esi;");
    asm("loc_65FEC96: push %eax;");
    asm("loc_65FEC97: push %edi;");
    asm("loc_65FEC98: calll *_import_6601028;");
    asm("loc_65FEC9E: add $0xC,%esp;");
    asm("loc_65FECA1: movb $0,-1(%edi,%esi);");
    asm("loc_65FECA6: pop %edi;");
    asm("loc_65FECA7: xor %eax,%eax;");
    asm("loc_65FECA9: pop %esi;");
    asm("loc_65FECAA: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FECAD() // ?seekoff@streambuf@@UAEJJW4seek_dir@ios@@H@Z_2
{
    __DEBUG_ASM(65FECAD);
    // chunk 0x65FECAD _sub_65FECAD
    asm("loc_65FECAD: or $0xFFFFFFFF,%eax;");
    asm("loc_65FECB0: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FECC0() // _sub_65FECC0
{
    __DEBUG_ASM(65FECC0);
    // chunk 0x65FECC0 _sub_65FECC0
    asm("loc_65FECC0: push %esi;");
    asm("loc_65FECC1: mov 8(%esp),%esi;");
    asm("loc_65FECC5: mov (%esi),%eax;");
    asm("loc_65FECC7: mov %esi,%ecx;");
    asm("loc_65FECC9: calll *0x50(%eax);");
    asm("loc_65FECCC: test %eax,%eax;");
    asm("loc_65FECCE: je loc_65FECF8;");
    asm("loc_65FECD0: mov (%esi),%edx;");
    asm("loc_65FECD2: push %edi;");
    asm("loc_65FECD3: mov 0x14(%esp),%edi;");
    asm("loc_65FECD7: push %edi;");
    asm("loc_65FECD8: mov %esi,%ecx;");
    asm("loc_65FECDA: calll *0x50(%edx);");
    asm("loc_65FECDD: mov 0x14(%esp),%esi;");
    asm("loc_65FECE1: push %eax;");
    asm("loc_65FECE2: push %esi;");
    asm("loc_65FECE3: calll *_import_6601028;");
    asm("loc_65FECE9: add $0xC,%esp;");
    asm("loc_65FECEC: movb $0,-1(%esi,%edi);");
    asm("loc_65FECF1: pop %edi;");
    asm("loc_65FECF2: xor %eax,%eax;");
    asm("loc_65FECF4: pop %esi;");
    asm("loc_65FECF5: ret $0xC;");
    asm("loc_65FECF8: or $0xFFFFFFFF,%eax;");
    asm("loc_65FECFB: pop %esi;");
    asm("loc_65FECFC: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FED00() // _sub_65FED00
{
    __DEBUG_ASM(65FED00);
    // chunk 0x65FED00 _sub_65FED00
    asm("loc_65FED00: mov 8(%esp),%eax;");
    asm("loc_65FED04: movl $1,(%eax);");
    asm("loc_65FED0A: xor %eax,%eax;");
    asm("loc_65FED0C: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FED10() // _sub_65FED10
{
    __DEBUG_ASM(65FED10);
    // chunk 0x65FED10 _sub_65FED10
    asm("loc_65FED10: mov 4(%esp),%ecx;");
    asm("loc_65FED14: mov (%ecx),%eax;");
    asm("loc_65FED16: push $0;");
    asm("loc_65FED18: calll *0x6C(%eax);");
    asm("loc_65FED1B: mov 8(%esp),%ecx;");
    asm("loc_65FED1F: mov %eax,(%ecx);");
    asm("loc_65FED21: xor %eax,%eax;");
    asm("loc_65FED23: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FED30() // _sub_65FED30
{
    asm("jmp dgb_65FED30;"); // jumptable skip
    asm(".long _jmp_65FEEAC;"); // jumptable address
    __DEBUG_ASM(65FED30);
    // chunk 0x65FED30 _sub_65FED30
    asm("loc_65FED30: mov 4(%esp),%ecx;");
    asm("loc_65FED34: mov (%ecx),%eax;");
    asm("loc_65FED36: push %esi;");
    asm("loc_65FED37: lea 8(%esp),%edx;");
    asm("loc_65FED3B: push %edx;");
    asm("loc_65FED3C: calll *0x6C(%eax);");
    asm("loc_65FED3F: mov 0xC(%esp),%esi;");
    asm("loc_65FED43: cmp %esi,%eax;");
    asm("loc_65FED45: jbe loc_65FEEA3;");
    asm("loc_65FED4B: mov 8(%esp),%ecx;");
    asm("loc_65FED4F: imul $0x4C,%esi;");
    asm("loc_65FED52: mov (%esi,%ecx),%eax;");
    asm("loc_65FED55: add %ecx,%esi;");
    asm("loc_65FED57: push %ebx;");
    asm("loc_65FED58: push %ebp;");
    asm("loc_65FED59: mov 0x18(%esp),%ebp;");
    asm("loc_65FED5D: mov %eax,(%ebp);");
    asm("loc_65FED60: mov 4(%esi),%ecx;");
    asm("loc_65FED63: mov %ecx,4(%ebp);");
    asm("loc_65FED66: mov 8(%esi),%edx;");
    asm("loc_65FED69: mov %edx,8(%ebp);");
    asm("loc_65FED6C: mov 0xC(%esi),%eax;");
    asm("loc_65FED6F: mov %eax,0xC(%ebp);");
    asm("loc_65FED72: mov 0x10(%ebp),%eax;");
    asm("loc_65FED75: lea 0x10(%ebp),%ebx;");
    asm("loc_65FED78: push %edi;");
    asm("loc_65FED79: mov 0x10(%esi),%edi;");
    asm("loc_65FED7C: cmp %eax,%edi;");
    asm("loc_65FED7E: je loc_65FED87;");
    asm("loc_65FED80: mov %ebx,%ecx;");
    asm("loc_65FED82: call _sub_65FE5C0;");
    asm("loc_65FED87: lea -1(%edi),%eax;");
    asm("loc_65FED8A: cmp $9,%eax;");
    asm("loc_65FED8D: mov %edi,(%ebx);");
    asm("loc_65FED8F: ja loc_65FEE12;");
    asm("loc_65FED95: jmpl *_jmp_65FEEAC(,%eax,4);");
    asm("loc_65FED9C: mov 0x14(%esi),%ecx;");
    asm("loc_65FED9F: mov %ecx,4(%ebx);");
    asm("loc_65FEDA2: jmp loc_65FEE12;");
    asm("loc_65FEDA4: mov 0x20(%esi),%eax;");
    asm("loc_65FEDA7: mov %eax,0x10(%ebx);");
    asm("loc_65FEDAA: mov 0x1C(%esi),%ecx;");
    asm("loc_65FEDAD: mov %ecx,0xC(%ebx);");
    asm("loc_65FEDB0: mov 0x18(%esi),%edx;");
    asm("loc_65FEDB3: mov %edx,8(%ebx);");
    asm("loc_65FEDB6: mov 0x14(%esi),%eax;");
    asm("loc_65FEDB9: mov %eax,4(%ebx);");
    asm("loc_65FEDBC: jmp loc_65FEE12;");
    asm("loc_65FEDBE: mov 4(%ebx),%eax;");
    asm("loc_65FEDC1: test %eax,%eax;");
    asm("loc_65FEDC3: mov 0x14(%esi),%ebp;");
    asm("loc_65FEDC6: je loc_65FEDDF;");
    asm("loc_65FEDC8: push %eax;");
    asm("loc_65FEDC9: push $0;");
    asm("loc_65FEDCB: calll *_import_6601020;");
    asm("loc_65FEDD1: push %eax;");
    asm("loc_65FEDD2: calll *_import_6601018;");
    asm("loc_65FEDD8: movl $0,4(%ebx);");
    asm("loc_65FEDDF: test %ebp,%ebp;");
    asm("loc_65FEDE1: je loc_65FEE0E;");
    asm("loc_65FEDE3: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FEDE6: xor %eax,%eax;");
    asm("loc_65FEDE8: mov %ebp,%edi;");
    asm("loc_65FEDEA: repne scas (%edi),%al;");
    asm("loc_65FEDEC: not %ecx;");
    asm("loc_65FEDEE: push %ecx;");
    asm("loc_65FEDEF: push %eax;");
    asm("loc_65FEDF0: calll *_import_6601020;");
    asm("loc_65FEDF6: push %eax;");
    asm("loc_65FEDF7: calll *_import_6601014;");
    asm("loc_65FEDFD: mov %eax,4(%ebx);");
    asm("loc_65FEE00: mov %ebp,%ecx;");
    asm("loc_65FEE02: mov %eax,%edx;");
    asm("loc_65FEE04: mov (%ecx),%al;");
    asm("loc_65FEE06: inc %ecx;");
    asm("loc_65FEE07: mov %al,(%edx);");
    asm("loc_65FEE09: inc %edx;");
    asm("loc_65FEE0A: test %al,%al;");
    asm("loc_65FEE0C: jne loc_65FEE04;");
    asm("loc_65FEE0E: mov 0x1C(%esp),%ebp;");
    asm("loc_65FEE12: mov 0x24(%esi),%ebx;");
    asm("loc_65FEE15: mov 0x24(%ebp),%eax;");
    asm("loc_65FEE18: cmp %eax,%ebx;");
    asm("loc_65FEE1A: lea 0x24(%ebp),%edi;");
    asm("loc_65FEE1D: je loc_65FEE26;");
    asm("loc_65FEE1F: mov %edi,%ecx;");
    asm("loc_65FEE21: call _sub_65FE5C0;");
    asm("loc_65FEE26: lea -1(%ebx),%eax;");
    asm("loc_65FEE29: cmp $9,%eax;");
    asm("loc_65FEE2C: mov %ebx,(%edi);");
    asm("loc_65FEE2E: ja loc_65FEE8E;");
    asm("loc_65FEE30: jmpl *_jmp_65FEED4(,%eax,4);");
    asm("loc_65FEE37: mov 0x14(%esi),%ecx;");
    asm("loc_65FEE3A: push %ecx;");
    asm("loc_65FEE3B: mov %ebx,%ecx;");
    asm("loc_65FEE3D: call _sub_65FE930;");
    asm("loc_65FEE42: jmp loc_65FEE12;");
    asm("loc_65FEE44: mov 0x14(%esi),%edx;");
    asm("loc_65FEE47: mov %edx,4(%ebx);");
    asm("loc_65FEE4A: jmp loc_65FEE12;");
    asm("loc_65FEE4C: mov 0x34(%esi),%ecx;");
    asm("loc_65FEE4F: mov %ecx,0x10(%edi);");
    asm("loc_65FEE52: mov 0x30(%esi),%edx;");
    asm("loc_65FEE55: mov %edx,0xC(%edi);");
    asm("loc_65FEE58: mov 0x2C(%esi),%eax;");
    asm("loc_65FEE5B: mov %eax,8(%edi);");
    asm("loc_65FEE5E: mov 0x28(%esi),%ecx;");
    asm("loc_65FEE61: mov %ecx,4(%edi);");
    asm("loc_65FEE64: jmp loc_65FEE8E;");
    asm("loc_65FEE66: mov 0x28(%esi),%edx;");
    asm("loc_65FEE69: push %edx;");
    asm("loc_65FEE6A: mov %edi,%ecx;");
    asm("loc_65FEE6C: call _sub_65FE620;");
    asm("loc_65FEE71: jmp loc_65FEE8E;");
    asm("loc_65FEE73: mov 0x28(%esi),%eax;");
    asm("loc_65FEE76: push %eax;");
    asm("loc_65FEE77: mov %edi,%ecx;");
    asm("loc_65FEE79: call _sub_65FE930;");
    asm("loc_65FEE7E: jmp loc_65FEE8E;");
    asm("loc_65FEE80: mov 0x28(%esi),%edx;");
    asm("loc_65FEE83: mov %edx,4(%edi);");
    asm("loc_65FEE86: jmp loc_65FEE8E;");
    asm("loc_65FEE88: mov 0x28(%esi),%eax;");
    asm("loc_65FEE8B: mov %eax,4(%edi);");
    asm("loc_65FEE8E: add $0x38,%esi;");
    asm("loc_65FEE91: push %esi;");
    asm("loc_65FEE92: lea 0x38(%ebp),%ecx;");
    asm("loc_65FEE95: call _sub_65FEF00;");
    asm("loc_65FEE9A: pop %edi;");
    asm("loc_65FEE9B: pop %ebp;");
    asm("loc_65FEE9C: pop %ebx;");
    asm("loc_65FEE9D: xor %eax,%eax;");
    asm("loc_65FEE9F: pop %esi;");
    asm("loc_65FEEA0: ret $0xC;");
    asm("loc_65FEEA3: or $0xFFFFFFFF,%eax;");
    asm("loc_65FEEA6: pop %esi;");
    asm("loc_65FEEA7: ret $0xC;");
    asm("int3;"); // unreachable
    asm("_jmp_65FEEAC: .long loc_65FED9C;");
    asm(".long loc_65FEE44;");
    asm(".long loc_65FEDAA;");
    asm(".long loc_65FEDA4;");
    asm(".long loc_65FEDBE;");
    asm(".long loc_65FEE37;");
    asm(".long loc_65FEDBE;");
    asm(".long loc_65FEE44;");
    asm(".long loc_65FEDB6;");
    asm(".long loc_65FED9C;");
    asm("_jmp_65FEED4: .long loc_65FEE80;");
    asm(".long loc_65FEE88;");
    asm(".long loc_65FEE52;");
    asm(".long loc_65FEE4C;");
    asm(".long loc_65FEE66;");
    asm(".long loc_65FEE73;");
    asm(".long loc_65FEE66;");
    asm(".long loc_65FEE5E;");
    asm(".long loc_65FEE80;");
    asm(".long loc_65FEE88;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FED30);
_naked _weak void _sub_65FEF00() // _sub_65FEF00
{
    asm("jmp dgb_65FEF00;"); // jumptable skip
    asm(".long _jmp_65FF02C;"); // jumptable address
    __DEBUG_ASM(65FEF00);
    // chunk 0x65FEF00 _sub_65FEF00
    asm("loc_65FEF00: push %ebx;");
    asm("loc_65FEF01: mov _import_6601020,%ebx;");
    asm("loc_65FEF07: push %ebp;");
    asm("loc_65FEF08: push %esi;");
    asm("loc_65FEF09: push %edi;");
    asm("loc_65FEF0A: mov 0x14(%esp),%edi;");
    asm("loc_65FEF0E: mov (%edi),%ebp;");
    asm("loc_65FEF10: mov %ecx,%esi;");
    asm("loc_65FEF12: mov (%esi),%eax;");
    asm("loc_65FEF14: cmp %eax,%ebp;");
    asm("loc_65FEF16: je loc_65FEF47;");
    asm("loc_65FEF18: sub $5,%eax;");
    asm("loc_65FEF1B: je loc_65FEF23;");
    asm("loc_65FEF1D: dec %eax;");
    asm("loc_65FEF1E: je loc_65FEF5C;");
    asm("loc_65FEF20: dec %eax;");
    asm("loc_65FEF21: jne loc_65FEF40;");
    asm("loc_65FEF23: mov 4(%esi),%eax;");
    asm("loc_65FEF26: test %eax,%eax;");
    asm("loc_65FEF28: je loc_65FEF40;");
    asm("loc_65FEF2A: push %eax;");
    asm("loc_65FEF2B: push $0;");
    asm("loc_65FEF2D: call *%ebx;");
    asm("loc_65FEF2F: push %eax;");
    asm("loc_65FEF30: calll *_import_6601018;");
    asm("loc_65FEF36: movl $0,4(%esi);");
    asm("loc_65FEF3D: lea (%ecx),%ecx;");
    asm("loc_65FEF40: movl $0,4(%esi);");
    asm("loc_65FEF47: lea -1(%ebp),%eax;");
    asm("loc_65FEF4A: cmp $9,%eax;");
    asm("loc_65FEF4D: mov %ebp,(%esi);");
    asm("loc_65FEF4F: ja loc_65FF020;");
    asm("loc_65FEF55: jmpl *_jmp_65FF02C(,%eax,4);");
    asm("loc_65FEF5C: mov 4(%esi),%eax;");
    asm("loc_65FEF5F: test %eax,%eax;");
    asm("loc_65FEF61: movl $0,4(%esi);");
    asm("loc_65FEF68: je loc_65FEF40;");
    asm("loc_65FEF6A: mov (%eax),%ecx;");
    asm("loc_65FEF6C: push %eax;");
    asm("loc_65FEF6D: calll *8(%ecx);");
    asm("loc_65FEF70: jmp loc_65FEF40;");
    asm("loc_65FEF72: mov 0x10(%edi),%ecx;");
    asm("loc_65FEF75: mov %ecx,0x10(%esi);");
    asm("loc_65FEF78: mov 0xC(%edi),%edx;");
    asm("loc_65FEF7B: mov %edx,0xC(%esi);");
    asm("loc_65FEF7E: mov 8(%edi),%eax;");
    asm("loc_65FEF81: mov %eax,8(%esi);");
    asm("loc_65FEF84: mov 4(%edi),%ecx;");
    asm("loc_65FEF87: pop %edi;");
    asm("loc_65FEF88: mov %ecx,4(%esi);");
    asm("loc_65FEF8B: mov %esi,%eax;");
    asm("loc_65FEF8D: pop %esi;");
    asm("loc_65FEF8E: pop %ebp;");
    asm("loc_65FEF8F: pop %ebx;");
    asm("loc_65FEF90: ret $4;");
    asm("loc_65FEF93: mov 4(%esi),%eax;");
    asm("loc_65FEF96: test %eax,%eax;");
    asm("loc_65FEF98: mov 4(%edi),%ebp;");
    asm("loc_65FEF9B: je loc_65FEFB0;");
    asm("loc_65FEF9D: push %eax;");
    asm("loc_65FEF9E: push $0;");
    asm("loc_65FEFA0: call *%ebx;");
    asm("loc_65FEFA2: push %eax;");
    asm("loc_65FEFA3: calll *_import_6601018;");
    asm("loc_65FEFA9: movl $0,4(%esi);");
    asm("loc_65FEFB0: test %ebp,%ebp;");
    asm("loc_65FEFB2: je loc_65FF020;");
    asm("loc_65FEFB4: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FEFB7: xor %eax,%eax;");
    asm("loc_65FEFB9: mov %ebp,%edi;");
    asm("loc_65FEFBB: repne scas (%edi),%al;");
    asm("loc_65FEFBD: not %ecx;");
    asm("loc_65FEFBF: push %ecx;");
    asm("loc_65FEFC0: push %eax;");
    asm("loc_65FEFC1: call *%ebx;");
    asm("loc_65FEFC3: push %eax;");
    asm("loc_65FEFC4: calll *_import_6601014;");
    asm("loc_65FEFCA: mov %eax,4(%esi);");
    asm("loc_65FEFCD: mov %ebp,%ecx;");
    asm("loc_65FEFCF: mov %eax,%edx;");
    asm("loc_65FEFD1: mov (%ecx),%al;");
    asm("loc_65FEFD3: inc %ecx;");
    asm("loc_65FEFD4: mov %al,(%edx);");
    asm("loc_65FEFD6: inc %edx;");
    asm("loc_65FEFD7: test %al,%al;");
    asm("loc_65FEFD9: jne loc_65FEFD1;");
    asm("loc_65FEFDB: pop %edi;");
    asm("loc_65FEFDC: mov %esi,%eax;");
    asm("loc_65FEFDE: pop %esi;");
    asm("loc_65FEFDF: pop %ebp;");
    asm("loc_65FEFE0: pop %ebx;");
    asm("loc_65FEFE1: ret $4;");
    asm("loc_65FEFE4: mov 4(%edi),%edi;");
    asm("loc_65FEFE7: test %edi,%edi;");
    asm("loc_65FEFE9: mov 4(%esi),%ebp;");
    asm("loc_65FEFEC: mov %edi,4(%esi);");
    asm("loc_65FEFEF: je loc_65FEFF7;");
    asm("loc_65FEFF1: mov (%edi),%edx;");
    asm("loc_65FEFF3: push %edi;");
    asm("loc_65FEFF4: calll *4(%edx);");
    asm("loc_65FEFF7: test %ebp,%ebp;");
    asm("loc_65FEFF9: je loc_65FF020;");
    asm("loc_65FEFFB: mov (%ebp),%eax;");
    asm("loc_65FEFFE: push %ebp;");
    asm("loc_65FEFFF: calll *8(%eax);");
    asm("loc_65FF002: pop %edi;");
    asm("loc_65FF003: mov %esi,%eax;");
    asm("loc_65FF005: pop %esi;");
    asm("loc_65FF006: pop %ebp;");
    asm("loc_65FF007: pop %ebx;");
    asm("loc_65FF008: ret $4;");
    asm("loc_65FF00B: mov 4(%edi),%edx;");
    asm("loc_65FF00E: pop %edi;");
    asm("loc_65FF00F: mov %edx,4(%esi);");
    asm("loc_65FF012: mov %esi,%eax;");
    asm("loc_65FF014: pop %esi;");
    asm("loc_65FF015: pop %ebp;");
    asm("loc_65FF016: pop %ebx;");
    asm("loc_65FF017: ret $4;");
    asm("loc_65FF01A: mov 4(%edi),%eax;");
    asm("loc_65FF01D: mov %eax,4(%esi);");
    asm("loc_65FF020: pop %edi;");
    asm("loc_65FF021: mov %esi,%eax;");
    asm("loc_65FF023: pop %esi;");
    asm("loc_65FF024: pop %ebp;");
    asm("loc_65FF025: pop %ebx;");
    asm("loc_65FF026: ret $4;");
    asm("int3;"); // unreachable
    asm("_jmp_65FF02C: .long loc_65FF00B;");
    asm(".long loc_65FF01A;");
    asm(".long loc_65FEF78;");
    asm(".long loc_65FEF72;");
    asm(".long loc_65FEF93;");
    asm(".long loc_65FEFE4;");
    asm(".long loc_65FEF93;");
    asm(".long loc_65FEF84;");
    asm(".long loc_65FF00B;");
    asm(".long loc_65FF01A;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FEF00);
_naked _weak void _sub_65FF060() // _sub_65FF060
{
    asm("jmp dgb_65FF060;"); // jumptable skip
    asm(".long _jmp_65FF1C8;"); // jumptable address
    __DEBUG_ASM(65FF060);
    // chunk 0x65FF060 _sub_65FF060
    asm("loc_65FF060: push %ebx;");
    asm("loc_65FF061: mov 8(%esp),%ebx;");
    asm("loc_65FF065: mov (%ebx),%eax;");
    asm("loc_65FF067: push %ebp;");
    asm("loc_65FF068: push %esi;");
    asm("loc_65FF069: push %edi;");
    asm("loc_65FF06A: lea 0x14(%esp),%ecx;");
    asm("loc_65FF06E: push %ecx;");
    asm("loc_65FF06F: mov %ebx,%ecx;");
    asm("loc_65FF071: calll *0x6C(%eax);");
    asm("loc_65FF074: mov 0x18(%esp),%ebp;");
    asm("loc_65FF078: cmp %ebp,%eax;");
    asm("loc_65FF07A: jbe loc_65FF1BB;");
    asm("loc_65FF080: mov 0x14(%esp),%eax;");
    asm("loc_65FF084: mov 0x1C(%esp),%esi;");
    asm("loc_65FF088: mov %ebp,%edx;");
    asm("loc_65FF08A: imul $0x4C,%edx;");
    asm("loc_65FF08D: mov 0x10(%edx,%eax),%edi;");
    asm("loc_65FF091: mov (%esi),%eax;");
    asm("loc_65FF093: cmp %eax,%edi;");
    asm("loc_65FF095: je loc_65FF0C7;");
    asm("loc_65FF097: sub $5,%eax;");
    asm("loc_65FF09A: je loc_65FF0A2;");
    asm("loc_65FF09C: dec %eax;");
    asm("loc_65FF09D: je loc_65FF0EC;");
    asm("loc_65FF09F: dec %eax;");
    asm("loc_65FF0A0: jne loc_65FF0C0;");
    asm("loc_65FF0A2: mov 4(%esi),%eax;");
    asm("loc_65FF0A5: test %eax,%eax;");
    asm("loc_65FF0A7: je loc_65FF0C0;");
    asm("loc_65FF0A9: push %eax;");
    asm("loc_65FF0AA: push $0;");
    asm("loc_65FF0AC: calll *_import_6601020;");
    asm("loc_65FF0B2: push %eax;");
    asm("loc_65FF0B3: calll *_import_6601018;");
    asm("loc_65FF0B9: movl $0,4(%esi);");
    asm("loc_65FF0C0: movl $0,4(%esi);");
    asm("loc_65FF0C7: mov %edi,(%esi);");
    asm("loc_65FF0C9: mov (%ebx),%edx;");
    asm("loc_65FF0CB: push %ebp;");
    asm("loc_65FF0CC: mov %ebx,%ecx;");
    asm("loc_65FF0CE: calll *0x70(%edx);");
    asm("loc_65FF0D1: test %eax,%eax;");
    asm("loc_65FF0D3: je loc_65FF1BB;");
    asm("loc_65FF0D9: mov (%esi),%ecx;");
    asm("loc_65FF0DB: dec %ecx;");
    asm("loc_65FF0DC: cmp $9,%ecx;");
    asm("loc_65FF0DF: ja loc_65FF1B2;");
    asm("loc_65FF0E5: jmpl *_jmp_65FF1C8(,%ecx,4);");
    asm("loc_65FF0EC: mov 4(%esi),%eax;");
    asm("loc_65FF0EF: test %eax,%eax;");
    asm("loc_65FF0F1: movl $0,4(%esi);");
    asm("loc_65FF0F8: je loc_65FF0C0;");
    asm("loc_65FF0FA: mov (%eax),%ecx;");
    asm("loc_65FF0FC: push %eax;");
    asm("loc_65FF0FD: calll *8(%ecx);");
    asm("loc_65FF100: jmp loc_65FF0C0;");
    asm("loc_65FF102: mov (%eax),%ecx;");
    asm("loc_65FF104: pop %edi;");
    asm("loc_65FF105: mov %ecx,4(%esi);");
    asm("loc_65FF108: pop %esi;");
    asm("loc_65FF109: pop %ebp;");
    asm("loc_65FF10A: xor %eax,%eax;");
    asm("loc_65FF10C: pop %ebx;");
    asm("loc_65FF10D: ret $0xC;");
    asm("loc_65FF110: mov 0xC(%eax),%edx;");
    asm("loc_65FF113: mov %edx,0x10(%esi);");
    asm("loc_65FF116: mov 8(%eax),%ecx;");
    asm("loc_65FF119: mov %ecx,0xC(%esi);");
    asm("loc_65FF11C: mov 4(%eax),%edx;");
    asm("loc_65FF11F: mov %edx,8(%esi);");
    asm("loc_65FF122: mov (%eax),%eax;");
    asm("loc_65FF124: pop %edi;");
    asm("loc_65FF125: mov %eax,4(%esi);");
    asm("loc_65FF128: pop %esi;");
    asm("loc_65FF129: pop %ebp;");
    asm("loc_65FF12A: xor %eax,%eax;");
    asm("loc_65FF12C: pop %ebx;");
    asm("loc_65FF12D: ret $0xC;");
    asm("loc_65FF130: mov (%eax),%ebp;");
    asm("loc_65FF132: mov 4(%esi),%eax;");
    asm("loc_65FF135: test %eax,%eax;");
    asm("loc_65FF137: je loc_65FF150;");
    asm("loc_65FF139: push %eax;");
    asm("loc_65FF13A: push $0;");
    asm("loc_65FF13C: calll *_import_6601020;");
    asm("loc_65FF142: push %eax;");
    asm("loc_65FF143: calll *_import_6601018;");
    asm("loc_65FF149: movl $0,4(%esi);");
    asm("loc_65FF150: test %ebp,%ebp;");
    asm("loc_65FF152: je loc_65FF1B2;");
    asm("loc_65FF154: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FF157: xor %eax,%eax;");
    asm("loc_65FF159: mov %ebp,%edi;");
    asm("loc_65FF15B: repne scas (%edi),%al;");
    asm("loc_65FF15D: not %ecx;");
    asm("loc_65FF15F: push %ecx;");
    asm("loc_65FF160: push %eax;");
    asm("loc_65FF161: calll *_import_6601020;");
    asm("loc_65FF167: push %eax;");
    asm("loc_65FF168: calll *_import_6601014;");
    asm("loc_65FF16E: mov %eax,4(%esi);");
    asm("loc_65FF171: mov %ebp,%ecx;");
    asm("loc_65FF173: mov %eax,%edx;");
    asm("loc_65FF175: mov (%ecx),%al;");
    asm("loc_65FF177: inc %ecx;");
    asm("loc_65FF178: mov %al,(%edx);");
    asm("loc_65FF17A: inc %edx;");
    asm("loc_65FF17B: test %al,%al;");
    asm("loc_65FF17D: jne loc_65FF175;");
    asm("loc_65FF17F: pop %edi;");
    asm("loc_65FF180: pop %esi;");
    asm("loc_65FF181: pop %ebp;");
    asm("loc_65FF182: xor %eax,%eax;");
    asm("loc_65FF184: pop %ebx;");
    asm("loc_65FF185: ret $0xC;");
    asm("loc_65FF188: mov (%eax),%eax;");
    asm("loc_65FF18A: test %eax,%eax;");
    asm("loc_65FF18C: mov 4(%esi),%edi;");
    asm("loc_65FF18F: mov %eax,4(%esi);");
    asm("loc_65FF192: je loc_65FF19A;");
    asm("loc_65FF194: mov (%eax),%ecx;");
    asm("loc_65FF196: push %eax;");
    asm("loc_65FF197: calll *4(%ecx);");
    asm("loc_65FF19A: test %edi,%edi;");
    asm("loc_65FF19C: je loc_65FF1B2;");
    asm("loc_65FF19E: mov (%edi),%edx;");
    asm("loc_65FF1A0: push %edi;");
    asm("loc_65FF1A1: calll *8(%edx);");
    asm("loc_65FF1A4: pop %edi;");
    asm("loc_65FF1A5: pop %esi;");
    asm("loc_65FF1A6: pop %ebp;");
    asm("loc_65FF1A7: xor %eax,%eax;");
    asm("loc_65FF1A9: pop %ebx;");
    asm("loc_65FF1AA: ret $0xC;");
    asm("loc_65FF1AD: mov (%eax),%edx;");
    asm("loc_65FF1AF: mov %edx,4(%esi);");
    asm("loc_65FF1B2: pop %edi;");
    asm("loc_65FF1B3: pop %esi;");
    asm("loc_65FF1B4: pop %ebp;");
    asm("loc_65FF1B5: xor %eax,%eax;");
    asm("loc_65FF1B7: pop %ebx;");
    asm("loc_65FF1B8: ret $0xC;");
    asm("loc_65FF1BB: pop %edi;");
    asm("loc_65FF1BC: pop %esi;");
    asm("loc_65FF1BD: pop %ebp;");
    asm("loc_65FF1BE: or $0xFFFFFFFF,%eax;");
    asm("loc_65FF1C1: pop %ebx;");
    asm("loc_65FF1C2: ret $0xC;");
    asm("int3;"); // unreachable
    asm("_jmp_65FF1C8: .long loc_65FF122;");
    asm(".long loc_65FF102;");
    asm(".long loc_65FF116;");
    asm(".long loc_65FF110;");
    asm(".long loc_65FF130;");
    asm(".long loc_65FF188;");
    asm(".long loc_65FF130;");
    asm(".long loc_65FF122;");
    asm(".long loc_65FF102;");
    asm(".long loc_65FF1AD;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FF060);
_naked _weak void _sub_65FF1F0() // _sub_65FF1F0
{
    __DEBUG_ASM(65FF1F0);
    // chunk 0x65FF1F0 _sub_65FF1F0
    asm("loc_65FF1F0: push %ebx;");
    asm("loc_65FF1F1: push %esi;");
    asm("loc_65FF1F2: push %edi;");
    asm("loc_65FF1F3: mov 0x10(%esp),%edi;");
    asm("loc_65FF1F7: mov (%edi),%eax;");
    asm("loc_65FF1F9: lea 0x10(%esp),%ecx;");
    asm("loc_65FF1FD: push %ecx;");
    asm("loc_65FF1FE: mov %edi,%ecx;");
    asm("loc_65FF200: calll *0x6C(%eax);");
    asm("loc_65FF203: mov 0x14(%esp),%ebx;");
    asm("loc_65FF207: cmp %ebx,%eax;");
    asm("loc_65FF209: jbe loc_65FF245;");
    asm("loc_65FF20B: mov 0x18(%esp),%eax;");
    asm("loc_65FF20F: mov 0x10(%esp),%ecx;");
    asm("loc_65FF213: mov (%edi),%edx;");
    asm("loc_65FF215: mov %ebx,%esi;");
    asm("loc_65FF217: imul $0x4C,%esi;");
    asm("loc_65FF21A: push %eax;");
    asm("loc_65FF21B: lea (%esi,%ecx),%eax;");
    asm("loc_65FF21E: push %eax;");
    asm("loc_65FF21F: push %ebx;");
    asm("loc_65FF220: mov %edi,%ecx;");
    asm("loc_65FF222: calll *0x64(%edx);");
    asm("loc_65FF225: test %al,%al;");
    asm("loc_65FF227: je loc_65FF245;");
    asm("loc_65FF229: mov 0x10(%esp),%ecx;");
    asm("loc_65FF22D: mov 0x18(%esp),%eax;");
    asm("loc_65FF231: mov (%edi),%edx;");
    asm("loc_65FF233: push %eax;");
    asm("loc_65FF234: add %ecx,%esi;");
    asm("loc_65FF236: push %esi;");
    asm("loc_65FF237: push %ebx;");
    asm("loc_65FF238: mov %edi,%ecx;");
    asm("loc_65FF23A: calll *0x68(%edx);");
    asm("loc_65FF23D: pop %edi;");
    asm("loc_65FF23E: pop %esi;");
    asm("loc_65FF23F: xor %eax,%eax;");
    asm("loc_65FF241: pop %ebx;");
    asm("loc_65FF242: ret $0xC;");
    asm("loc_65FF245: pop %edi;");
    asm("loc_65FF246: pop %esi;");
    asm("loc_65FF247: or $0xFFFFFFFF,%eax;");
    asm("loc_65FF24A: pop %ebx;");
    asm("loc_65FF24B: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FF250() // _sub_65FF250
{
    __DEBUG_ASM(65FF250);
    // chunk 0x65FF250 _sub_65FF250
    asm("loc_65FF250: mov $0x2024,%eax;");
    asm("loc_65FF255: call _sub_6600C00;");
    asm("loc_65FF25A: push %ebx;");
    asm("loc_65FF25B: mov %ecx,%ebx;");
    asm("loc_65FF25D: mov 0x1C(%ebx),%ecx;");
    asm("loc_65FF260: xor %eax,%eax;");
    asm("loc_65FF262: cmp %eax,%ecx;");
    asm("loc_65FF264: push %esi;");
    asm("loc_65FF265: mov %eax,0x14(%esp);");
    asm("loc_65FF269: jbe loc_65FF3BB;");
    asm("loc_65FF26F: push %ebp;");
    asm("loc_65FF270: push %edi;");
    asm("loc_65FF271: mov %eax,0x18(%esp);");
    asm("loc_65FF275: mov 0x18(%ebx),%esi;");
    asm("loc_65FF278: mov 0x18(%esp),%edx;");
    asm("loc_65FF27C: mov 8(%ebx),%ebp;");
    asm("loc_65FF27F: add %edx,%esi;");
    asm("loc_65FF281: mov 4(%esi),%eax;");
    asm("loc_65FF284: lea 4(%esi),%edi;");
    asm("loc_65FF287: mov %eax,0x24(%esp);");
    asm("loc_65FF28B: lea 8(%esi),%eax;");
    asm("loc_65FF28E: mov %eax,0x28(%esp);");
    asm("loc_65FF292: movl $0,(%eax);");
    asm("loc_65FF298: mov (%esi),%eax;");
    asm("loc_65FF29A: test %eax,%eax;");
    asm("loc_65FF29C: movb $1,0x13(%esp);");
    asm("loc_65FF2A1: movl $0xFFFFFFFF,(%edi);");
    asm("loc_65FF2A7: movb $1,0x28(%esi);");
    asm("loc_65FF2AB: je loc_65FF342;");
    asm("loc_65FF2B1: push %eax;");
    asm("loc_65FF2B2: mov %eax,0x30(%esp);");
    asm("loc_65FF2B6: calll *_import_660100C;");
    asm("loc_65FF2BC: mov (%ebp),%ecx;");
    asm("loc_65FF2BF: add $4,%esp;");
    asm("loc_65FF2C2: lea 0x14(%esp),%edx;");
    asm("loc_65FF2C6: mov %eax,0x30(%esp);");
    asm("loc_65FF2CA: push %edx;");
    asm("loc_65FF2CB: lea 0x30(%esp),%eax;");
    asm("loc_65FF2CF: push %eax;");
    asm("loc_65FF2D0: push %ebp;");
    asm("loc_65FF2D1: calll *0x30(%ecx);");
    asm("loc_65FF2D4: test %eax,%eax;");
    asm("loc_65FF2D6: jl loc_65FF32D;");
    asm("loc_65FF2D8: mov 0x14(%esp),%eax;");
    asm("loc_65FF2DC: mov (%ebp),%ecx;");
    asm("loc_65FF2DF: lea 0x20(%esp),%edx;");
    asm("loc_65FF2E3: push %edx;");
    asm("loc_65FF2E4: push %eax;");
    asm("loc_65FF2E5: push %ebp;");
    asm("loc_65FF2E6: calll *0x68(%ecx);");
    asm("loc_65FF2E9: mov 0x20(%esp),%ecx;");
    asm("loc_65FF2ED: mov 0x14(%esp),%eax;");
    asm("loc_65FF2F1: cmp $1,%ecx;");
    asm("loc_65FF2F4: push %edi;");
    asm("loc_65FF2F5: sete %cl;");
    asm("loc_65FF2F8: push %eax;");
    asm("loc_65FF2F9: mov %cl,0x28(%esi);");
    asm("loc_65FF2FC: mov (%ebp),%edx;");
    asm("loc_65FF2FF: push %ebp;");
    asm("loc_65FF300: calll *0x34(%edx);");
    asm("loc_65FF303: test %eax,%eax;");
    asm("loc_65FF305: jl loc_65FF31F;");
    asm("loc_65FF307: mov 0x28(%esi),%al;");
    asm("loc_65FF30A: test %al,%al;");
    asm("loc_65FF30C: je loc_65FF31F;");
    asm("loc_65FF30E: mov 0x28(%esp),%edx;");
    asm("loc_65FF312: mov (%edi),%eax;");
    asm("loc_65FF314: mov (%ebp),%ecx;");
    asm("loc_65FF317: push %edx;");
    asm("loc_65FF318: push $0;");
    asm("loc_65FF31A: push %eax;");
    asm("loc_65FF31B: push %ebp;");
    asm("loc_65FF31C: calll *0x70(%ecx);");
    asm("loc_65FF31F: mov 0x14(%esp),%edx;");
    asm("loc_65FF323: mov (%ebp),%ecx;");
    asm("loc_65FF326: push %edx;");
    asm("loc_65FF327: push %ebp;");
    asm("loc_65FF328: calll *0x38(%ecx);");
    asm("loc_65FF32B: jmp loc_65FF342;");
    asm("loc_65FF32D: mov (%esi),%edi;");
    asm("loc_65FF32F: mov $_data_6602B30,%esi;");
    asm("loc_65FF334: mov $7,%ecx;");
    asm("loc_65FF339: xor %eax,%eax;");
    asm("loc_65FF33B: repe cmpsb (%edi),(%esi);");
    asm("loc_65FF33D: sete 0x13(%esp);");
    asm("loc_65FF342: mov 0x24(%esp),%eax;");
    asm("loc_65FF346: cmp $0xFFFFFFFF,%eax;");
    asm("loc_65FF349: je loc_65FF353;");
    asm("loc_65FF34B: mov (%ebp),%ecx;");
    asm("loc_65FF34E: push %eax;");
    asm("loc_65FF34F: push %ebp;");
    asm("loc_65FF350: calll *0x40(%ecx);");
    asm("loc_65FF353: mov 0x13(%esp),%al;");
    asm("loc_65FF357: test %al,%al;");
    asm("loc_65FF359: jne loc_65FF39A;");
    asm("loc_65FF35B: mov 0x18(%ebx),%edx;");
    asm("loc_65FF35E: mov 0x18(%esp),%eax;");
    asm("loc_65FF362: mov (%eax,%edx),%ecx;");
    asm("loc_65FF365: mov 0x14(%ebx),%edx;");
    asm("loc_65FF368: push %ecx;");
    asm("loc_65FF369: push %edx;");
    asm("loc_65FF36A: lea 0x3C(%esp),%eax;");
    asm("loc_65FF36E: push $_data_6602B10;");
    asm("loc_65FF373: push %eax;");
    asm("loc_65FF374: call _sub_65F28B0;");
    asm("loc_65FF379: push %eax;");
    asm("loc_65FF37A: push $0x23F;");
    asm("loc_65FF37F: push $_data_6602AD0;");
    asm("loc_65FF384: mov $0x100003,%ecx;");
    asm("loc_65FF389: push $_data_6602AB4;");
    asm("loc_65FF38E: push %ecx;");
    asm("loc_65FF38F: mov _import_6601008,%ecx;");
    asm("loc_65FF395: calll *(%ecx);");
    asm("loc_65FF397: add $0x24,%esp;");
    asm("loc_65FF39A: mov 0x1C(%esp),%eax;");
    asm("loc_65FF39E: mov 0x18(%esp),%edx;");
    asm("loc_65FF3A2: mov 0x1C(%ebx),%ecx;");
    asm("loc_65FF3A5: inc %eax;");
    asm("loc_65FF3A6: add $0x2C,%edx;");
    asm("loc_65FF3A9: cmp %ecx,%eax;");
    asm("loc_65FF3AB: mov %eax,0x1C(%esp);");
    asm("loc_65FF3AF: mov %edx,0x18(%esp);");
    asm("loc_65FF3B3: jb loc_65FF275;");
    asm("loc_65FF3B9: pop %edi;");
    asm("loc_65FF3BA: pop %ebp;");
    asm("loc_65FF3BB: flds 0x2C(%ebx);");
    asm("loc_65FF3BE: fcomps _data_66011E0;");
    asm("loc_65FF3C4: fnstsw %ax;");
    asm("loc_65FF3C6: test $5,%ah;");
    asm("loc_65FF3C9: jp loc_65FF3D2;");
    asm("loc_65FF3CB: mov $1,%eax;");
    asm("loc_65FF3D0: jmp loc_65FF3D4;");
    asm("loc_65FF3D2: xor %eax,%eax;");
    asm("loc_65FF3D4: test %al,%al;");
    asm("loc_65FF3D6: mov %al,0x64(%ebx);");
    asm("loc_65FF3D9: movb $0,0x65(%ebx);");
    asm("loc_65FF3DD: jne loc_65FF465;");
    asm("loc_65FF3E3: push $0;");
    asm("loc_65FF3E5: call _sub_6600DA0;");
    asm("loc_65FF3EA: mov 0x18(%ebx),%edx;");
    asm("loc_65FF3ED: mov %eax,0x10(%esp);");
    asm("loc_65FF3F1: mov 8(%edx),%ecx;");
    asm("loc_65FF3F4: add $4,%esp;");
    asm("loc_65FF3F7: test %ecx,%ecx;");
    asm("loc_65FF3F9: je loc_65FF465;");
    asm("loc_65FF3FB: mov 4(%ebx),%eax;");
    asm("loc_65FF3FE: mov (%eax),%edx;");
    asm("loc_65FF400: lea 0xC(%esp),%esi;");
    asm("loc_65FF404: push %esi;");
    asm("loc_65FF405: push %ecx;");
    asm("loc_65FF406: push %eax;");
    asm("loc_65FF407: calll *0xC8(%edx);");
    asm("loc_65FF40D: test %eax,%eax;");
    asm("loc_65FF40F: jl loc_65FF465;");
    asm("loc_65FF411: mov 0xC(%esp),%eax;");
    asm("loc_65FF415: push %eax;");
    asm("loc_65FF416: call _sub_6600DC0;");
    asm("loc_65FF41B: mov 0x38(%eax),%edx;");
    asm("loc_65FF41E: mov 0x10(%esp),%eax;");
    asm("loc_65FF422: add $4,%esp;");
    asm("loc_65FF425: cmp $1,%edx;");
    asm("loc_65FF428: sete %cl;");
    asm("loc_65FF42B: cmp $0xA,%eax;");
    asm("loc_65FF42E: mov %cl,0x65(%ebx);");
    asm("loc_65FF431: jl loc_65FF438;");
    asm("loc_65FF433: cmp $0xE,%eax;");
    asm("loc_65FF436: jle loc_65FF448;");
    asm("loc_65FF438: push %eax;");
    asm("loc_65FF439: call _sub_6600DC0;");
    asm("loc_65FF43E: mov 0x48(%eax),%cl;");
    asm("loc_65FF441: add $4,%esp;");
    asm("loc_65FF444: test %cl,%cl;");
    asm("loc_65FF446: je loc_65FF460;");
    asm("loc_65FF448: mov 0x65(%ebx),%al;");
    asm("loc_65FF44B: test %al,%al;");
    asm("loc_65FF44D: jne loc_65FF460;");
    asm("loc_65FF44F: mov $1,%eax;");
    asm("loc_65FF454: pop %esi;");
    asm("loc_65FF455: mov %al,0x64(%ebx);");
    asm("loc_65FF458: pop %ebx;");
    asm("loc_65FF459: add $0x2024,%esp;");
    asm("loc_65FF45F: ret;");
    asm("loc_65FF460: xor %eax,%eax;");
    asm("loc_65FF462: mov %al,0x64(%ebx);");
    asm("loc_65FF465: pop %esi;");
    asm("loc_65FF466: pop %ebx;");
    asm("loc_65FF467: add $0x2024,%esp;");
    asm("loc_65FF46D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FF470() // _sub_65FF470
{
    __DEBUG_ASM(65FF470);
    // chunk 0x65FF470 _sub_65FF470
    asm("loc_65FF470: mov 8(%esp),%ecx;");
    asm("loc_65FF474: mov 0x10(%ecx),%eax;");
    asm("loc_65FF477: push %esi;");
    asm("loc_65FF478: push %edi;");
    asm("loc_65FF479: mov 0x14(%esp),%edi;");
    asm("loc_65FF47D: cmp %eax,(%edi);");
    asm("loc_65FF47F: je loc_65FF488;");
    asm("loc_65FF481: pop %edi;");
    asm("loc_65FF482: xor %al,%al;");
    asm("loc_65FF484: pop %esi;");
    asm("loc_65FF485: ret $0xC;");
    asm("loc_65FF488: sub $2,%eax;");
    asm("loc_65FF48B: je loc_65FF51C;");
    asm("loc_65FF491: dec %eax;");
    asm("loc_65FF492: je loc_65FF4DE;");
    asm("loc_65FF494: dec %eax;");
    asm("loc_65FF495: jne loc_65FF4D7;");
    asm("loc_65FF497: lea 0x28(%ecx),%edx;");
    asm("loc_65FF49A: xor %esi,%esi;");
    asm("loc_65FF49C: lea 4(%edi),%ecx;");
    asm("loc_65FF49F: nop;");
    asm("loc_65FF4A0: flds 0x14(%edx);");
    asm("loc_65FF4A3: fadds _data_6601578;");
    asm("loc_65FF4A9: fcomps (%ecx);");
    asm("loc_65FF4AB: fnstsw %ax;");
    asm("loc_65FF4AD: test $0x41,%ah;");
    asm("loc_65FF4B0: jnp loc_65FF549;");
    asm("loc_65FF4B6: flds (%edx);");
    asm("loc_65FF4B8: fsubs _data_6601578;");
    asm("loc_65FF4BE: fcomps (%ecx);");
    asm("loc_65FF4C0: fnstsw %ax;");
    asm("loc_65FF4C2: test $1,%ah;");
    asm("loc_65FF4C5: je loc_65FF549;");
    asm("loc_65FF4CB: inc %esi;");
    asm("loc_65FF4CC: add $4,%ecx;");
    asm("loc_65FF4CF: add $4,%edx;");
    asm("loc_65FF4D2: cmp $4,%esi;");
    asm("loc_65FF4D5: jl loc_65FF4A0;");
    asm("loc_65FF4D7: pop %edi;");
    asm("loc_65FF4D8: mov $1,%al;");
    asm("loc_65FF4DA: pop %esi;");
    asm("loc_65FF4DB: ret $0xC;");
    asm("loc_65FF4DE: lea 0x28(%ecx),%edx;");
    asm("loc_65FF4E1: xor %esi,%esi;");
    asm("loc_65FF4E3: lea 4(%edi),%ecx;");
    asm("loc_65FF4E6: flds 0x14(%edx);");
    asm("loc_65FF4E9: fadds _data_6601578;");
    asm("loc_65FF4EF: fcomps (%ecx);");
    asm("loc_65FF4F1: fnstsw %ax;");
    asm("loc_65FF4F3: test $0x41,%ah;");
    asm("loc_65FF4F6: jnp loc_65FF549;");
    asm("loc_65FF4F8: flds (%edx);");
    asm("loc_65FF4FA: fsubs _data_6601578;");
    asm("loc_65FF500: fcomps (%ecx);");
    asm("loc_65FF502: fnstsw %ax;");
    asm("loc_65FF504: test $1,%ah;");
    asm("loc_65FF507: je loc_65FF549;");
    asm("loc_65FF509: inc %esi;");
    asm("loc_65FF50A: add $4,%ecx;");
    asm("loc_65FF50D: add $4,%edx;");
    asm("loc_65FF510: cmp $3,%esi;");
    asm("loc_65FF513: jl loc_65FF4E6;");
    asm("loc_65FF515: pop %edi;");
    asm("loc_65FF516: mov $1,%al;");
    asm("loc_65FF518: pop %esi;");
    asm("loc_65FF519: ret $0xC;");
    asm("loc_65FF51C: flds 0x3C(%ecx);");
    asm("loc_65FF51F: fadds _data_6601578;");
    asm("loc_65FF525: fcomps 4(%edi);");
    asm("loc_65FF528: fnstsw %ax;");
    asm("loc_65FF52A: test $0x41,%ah;");
    asm("loc_65FF52D: jp loc_65FF536;");
    asm("loc_65FF52F: pop %edi;");
    asm("loc_65FF530: xor %al,%al;");
    asm("loc_65FF532: pop %esi;");
    asm("loc_65FF533: ret $0xC;");
    asm("loc_65FF536: flds 0x28(%ecx);");
    asm("loc_65FF539: fsubs _data_6601578;");
    asm("loc_65FF53F: fcomps 4(%edi);");
    asm("loc_65FF542: fnstsw %ax;");
    asm("loc_65FF544: test $1,%ah;");
    asm("loc_65FF547: jne loc_65FF4D7;");
    asm("loc_65FF549: pop %edi;");
    asm("loc_65FF54A: xor %al,%al;");
    asm("loc_65FF54C: pop %esi;");
    asm("loc_65FF54D: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FF550() // _sub_65FF550
{
    asm("jmp dgb_65FF550;"); // jumptable skip
    asm(".long _jmp_65FF724;"); // jumptable address
    __DEBUG_ASM(65FF550);
    // chunk 0x65FF550 _sub_65FF550
    asm("loc_65FF550: push %ebx;");
    asm("loc_65FF551: push %ebp;");
    asm("loc_65FF552: push %esi;");
    asm("loc_65FF553: mov %ecx,%ebp;");
    asm("loc_65FF555: mov 0x10(%esp),%ecx;");
    asm("loc_65FF559: mov (%ebp),%eax;");
    asm("loc_65FF55C: push %edi;");
    asm("loc_65FF55D: push %ecx;");
    asm("loc_65FF55E: mov %ebp,%ecx;");
    asm("loc_65FF560: calll *0x70(%eax);");
    asm("loc_65FF563: mov %eax,%esi;");
    asm("loc_65FF565: test %esi,%esi;");
    asm("loc_65FF567: je loc_65FF5A1;");
    asm("loc_65FF569: mov 0x1C(%esp),%ebx;");
    asm("loc_65FF56D: mov (%ebx),%eax;");
    asm("loc_65FF56F: dec %eax;");
    asm("loc_65FF570: cmp $9,%eax;");
    asm("loc_65FF573: ja loc_65FF5A1;");
    asm("loc_65FF575: jmpl *_jmp_65FF724(,%eax,4);");
    asm("loc_65FF57C: mov 4(%ebx),%edx;");
    asm("loc_65FF57F: mov %edx,(%esi);");
    asm("loc_65FF581: jmp loc_65FF5A1;");
    asm("loc_65FF583: mov 4(%ebx),%eax;");
    asm("loc_65FF586: mov %eax,(%esi);");
    asm("loc_65FF588: jmp loc_65FF5A1;");
    asm("loc_65FF58A: mov 0x10(%ebx),%ecx;");
    asm("loc_65FF58D: mov %ecx,0xC(%esi);");
    asm("loc_65FF590: mov 0xC(%ebx),%edx;");
    asm("loc_65FF593: mov %edx,8(%esi);");
    asm("loc_65FF596: mov 8(%ebx),%eax;");
    asm("loc_65FF599: mov %eax,4(%esi);");
    asm("loc_65FF59C: mov 4(%ebx),%ecx;");
    asm("loc_65FF59F: mov %ecx,(%esi);");
    asm("loc_65FF5A1: mov 0x18(%esp),%edx;");
    asm("loc_65FF5A5: mov 4(%edx),%eax;");
    asm("loc_65FF5A8: mov (%eax),%cl;");
    asm("loc_65FF5AA: cmp $0x44,%cl;");
    asm("loc_65FF5AD: mov $0x63,%dl;");
    asm("loc_65FF5AF: jne loc_65FF658;");
    asm("loc_65FF5B5: cmp %dl,1(%eax);");
    asm("loc_65FF5B8: jne loc_65FF658;");
    asm("loc_65FF5BE: mov 2(%eax),%bl;");
    asm("loc_65FF5C1: test %bl,%bl;");
    asm("loc_65FF5C3: jne loc_65FF658;");
    asm("loc_65FF5C9: lea 0x20(%ebp),%eax;");
    asm("loc_65FF5CC: mov (%eax),%ecx;");
    asm("loc_65FF5CE: mov 4(%eax),%edx;");
    asm("loc_65FF5D1: add $0x30,%ebp;");
    asm("loc_65FF5D4: mov %ecx,(%ebp);");
    asm("loc_65FF5D7: mov 8(%eax),%ecx;");
    asm("loc_65FF5DA: mov %edx,4(%ebp);");
    asm("loc_65FF5DD: mov 0xC(%eax),%edx;");
    asm("loc_65FF5E0: pop %edi;");
    asm("loc_65FF5E1: mov %ecx,8(%ebp);");
    asm("loc_65FF5E4: pop %esi;");
    asm("loc_65FF5E5: mov %edx,0xC(%ebp);");
    asm("loc_65FF5E8: pop %ebp;");
    asm("loc_65FF5E9: pop %ebx;");
    asm("loc_65FF5EA: ret $0xC;");
    asm("loc_65FF5ED: mov (%esi),%eax;");
    asm("loc_65FF5EF: test %eax,%eax;");
    asm("loc_65FF5F1: je loc_65FF602;");
    asm("loc_65FF5F3: push %eax;");
    asm("loc_65FF5F4: call _sub_6600BB0;");
    asm("loc_65FF5F9: add $4,%esp;");
    asm("loc_65FF5FC: movl $0,(%esi);");
    asm("loc_65FF602: mov 4(%ebx),%edi;");
    asm("loc_65FF605: test %edi,%edi;");
    asm("loc_65FF607: je loc_65FF5A1;");
    asm("loc_65FF609: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FF60C: xor %eax,%eax;");
    asm("loc_65FF60E: repne scas (%edi),%al;");
    asm("loc_65FF610: not %ecx;");
    asm("loc_65FF612: push %ecx;");
    asm("loc_65FF613: call _sub_6600BB6;");
    asm("loc_65FF618: mov %eax,(%esi);");
    asm("loc_65FF61A: mov 4(%ebx),%ebx;");
    asm("loc_65FF61D: add $4,%esp;");
    asm("loc_65FF620: mov %eax,%ecx;");
    asm("loc_65FF622: mov (%ebx),%al;");
    asm("loc_65FF624: inc %ebx;");
    asm("loc_65FF625: mov %al,(%ecx);");
    asm("loc_65FF627: inc %ecx;");
    asm("loc_65FF628: test %al,%al;");
    asm("loc_65FF62A: jne loc_65FF622;");
    asm("loc_65FF62C: jmp loc_65FF5A1;");
    asm("loc_65FF631: mov 4(%ebx),%edx;");
    asm("loc_65FF634: mov (%esi),%edi;");
    asm("loc_65FF636: mov %edx,(%esi);");
    asm("loc_65FF638: mov 4(%ebx),%ebx;");
    asm("loc_65FF63B: test %ebx,%ebx;");
    asm("loc_65FF63D: je loc_65FF645;");
    asm("loc_65FF63F: mov (%ebx),%eax;");
    asm("loc_65FF641: push %ebx;");
    asm("loc_65FF642: calll *4(%eax);");
    asm("loc_65FF645: test %edi,%edi;");
    asm("loc_65FF647: je loc_65FF5A1;");
    asm("loc_65FF64D: mov (%edi),%ecx;");
    asm("loc_65FF64F: push %edi;");
    asm("loc_65FF650: calll *8(%ecx);");
    asm("loc_65FF653: jmp loc_65FF5A1;");
    asm("loc_65FF658: cmp $0x4F,%cl;");
    asm("loc_65FF65B: jne loc_65FF71D;");
    asm("loc_65FF661: cmp %dl,1(%eax);");
    asm("loc_65FF664: jne loc_65FF71D;");
    asm("loc_65FF66A: mov 2(%eax),%cl;");
    asm("loc_65FF66D: test %cl,%cl;");
    asm("loc_65FF66F: jne loc_65FF71D;");
    asm("loc_65FF675: flds 0x2C(%ebp);");
    asm("loc_65FF678: fcomps _data_66011E0;");
    asm("loc_65FF67E: fnstsw %ax;");
    asm("loc_65FF680: test $5,%ah;");
    asm("loc_65FF683: jp loc_65FF68C;");
    asm("loc_65FF685: mov $1,%eax;");
    asm("loc_65FF68A: jmp loc_65FF68E;");
    asm("loc_65FF68C: xor %eax,%eax;");
    asm("loc_65FF68E: test %al,%al;");
    asm("loc_65FF690: mov %al,0x64(%ebp);");
    asm("loc_65FF693: movb $0,0x65(%ebp);");
    asm("loc_65FF697: jne loc_65FF71D;");
    asm("loc_65FF69D: push $0;");
    asm("loc_65FF69F: call _sub_6600DA0;");
    asm("loc_65FF6A4: mov %eax,0x18(%esp);");
    asm("loc_65FF6A8: mov 0x18(%ebp),%eax;");
    asm("loc_65FF6AB: mov 8(%eax),%ecx;");
    asm("loc_65FF6AE: add $4,%esp;");
    asm("loc_65FF6B1: test %ecx,%ecx;");
    asm("loc_65FF6B3: je loc_65FF71D;");
    asm("loc_65FF6B5: mov 4(%ebp),%eax;");
    asm("loc_65FF6B8: mov (%eax),%edx;");
    asm("loc_65FF6BA: lea 0x14(%esp),%esi;");
    asm("loc_65FF6BE: push %esi;");
    asm("loc_65FF6BF: push %ecx;");
    asm("loc_65FF6C0: push %eax;");
    asm("loc_65FF6C1: calll *0xC8(%edx);");
    asm("loc_65FF6C7: test %eax,%eax;");
    asm("loc_65FF6C9: jl loc_65FF71D;");
    asm("loc_65FF6CB: mov 0x14(%esp),%eax;");
    asm("loc_65FF6CF: push %eax;");
    asm("loc_65FF6D0: call _sub_6600DC0;");
    asm("loc_65FF6D5: mov 0x38(%eax),%edx;");
    asm("loc_65FF6D8: mov 0x18(%esp),%eax;");
    asm("loc_65FF6DC: add $4,%esp;");
    asm("loc_65FF6DF: cmp $1,%edx;");
    asm("loc_65FF6E2: sete %cl;");
    asm("loc_65FF6E5: cmp $0xA,%eax;");
    asm("loc_65FF6E8: mov %cl,0x65(%ebp);");
    asm("loc_65FF6EB: jl loc_65FF6F2;");
    asm("loc_65FF6ED: cmp $0xE,%eax;");
    asm("loc_65FF6F0: jle loc_65FF702;");
    asm("loc_65FF6F2: push %eax;");
    asm("loc_65FF6F3: call _sub_6600DC0;");
    asm("loc_65FF6F8: mov 0x48(%eax),%cl;");
    asm("loc_65FF6FB: add $4,%esp;");
    asm("loc_65FF6FE: test %cl,%cl;");
    asm("loc_65FF700: je loc_65FF718;");
    asm("loc_65FF702: mov 0x65(%ebp),%al;");
    asm("loc_65FF705: test %al,%al;");
    asm("loc_65FF707: jne loc_65FF718;");
    asm("loc_65FF709: pop %edi;");
    asm("loc_65FF70A: mov $1,%eax;");
    asm("loc_65FF70F: pop %esi;");
    asm("loc_65FF710: mov %al,0x64(%ebp);");
    asm("loc_65FF713: pop %ebp;");
    asm("loc_65FF714: pop %ebx;");
    asm("loc_65FF715: ret $0xC;");
    asm("loc_65FF718: xor %eax,%eax;");
    asm("loc_65FF71A: mov %al,0x64(%ebp);");
    asm("loc_65FF71D: pop %edi;");
    asm("loc_65FF71E: pop %esi;");
    asm("loc_65FF71F: pop %ebp;");
    asm("loc_65FF720: pop %ebx;");
    asm("loc_65FF721: ret $0xC;");
    asm("int3;"); // unreachable
    asm("_jmp_65FF724: .long loc_65FF57C;");
    asm(".long loc_65FF583;");
    asm(".long loc_65FF590;");
    asm(".long loc_65FF58A;");
    asm(".long loc_65FF5ED;");
    asm(".long loc_65FF631;");
    asm(".long loc_65FF5ED;");
    asm(".long loc_65FF57C;");
    asm(".long loc_65FF583;");
    asm(".long loc_65FF59C;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FF550);
_naked _weak void _sub_65FF750() // _sub_65FF750
{
    __DEBUG_ASM(65FF750);
    // chunk 0x65FF750 _sub_65FF750
    asm("loc_65FF750: mov _data_66033F4,%cl;");
    asm("loc_65FF756: mov $1,%al;");
    asm("loc_65FF758: test %cl,%al;");
    asm("loc_65FF75A: push %esi;");
    asm("loc_65FF75B: push %edi;");
    asm("loc_65FF75C: jne loc_65FF78A;");
    asm("loc_65FF75E: or %al,%cl;");
    asm("loc_65FF760: mov %cl,_data_66033F4;");
    asm("loc_65FF766: mov $_data_6603400,%esi;");
    asm("loc_65FF76B: mov $0xA,%edi;");
    asm("loc_65FF770: mov %esi,%ecx;");
    asm("loc_65FF772: call _sub_65FFC20;");
    asm("loc_65FF777: add $0x4C,%esi;");
    asm("loc_65FF77A: dec %edi;");
    asm("loc_65FF77B: jne loc_65FF770;");
    asm("loc_65FF77D: push $_sub_66002C0;");
    asm("loc_65FF782: call _sub_6600BEE;");
    asm("loc_65FF787: add $4,%esp;");
    asm("loc_65FF78A: mov _data_6603410,%eax;");
    asm("loc_65FF78F: xor %edi,%edi;");
    asm("loc_65FF791: cmp %edi,%eax;");
    asm("loc_65FF793: jne loc_65FFA8F;");
    asm("loc_65FF799: push $_data_660140C;");
    asm("loc_65FF79E: mov $_data_66031AC,%esi;");
    asm("loc_65FF7A3: push $3;");
    asm("loc_65FF7A5: mov $_data_6603410,%ecx;");
    asm("loc_65FF7AA: mov %edi,_data_6603400;");
    asm("loc_65FF7B0: movl $_data_6602C10,_data_6603404;");
    asm("loc_65FF7BA: movl $_data_6602C00,_data_6603408;");
    asm("loc_65FF7C4: mov %esi,_data_660340C;");
    asm("loc_65FF7CA: call _sub_65FFAB0;");
    asm("loc_65FF7CF: push $_data_66013FC;");
    asm("loc_65FF7D4: push $3;");
    asm("loc_65FF7D6: mov $_data_6603424,%ecx;");
    asm("loc_65FF7DB: call _sub_65FFAB0;");
    asm("loc_65FF7E0: push $_data_660140C;");
    asm("loc_65FF7E5: push $3;");
    asm("loc_65FF7E7: mov $_data_6603438,%ecx;");
    asm("loc_65FF7EC: call _sub_65FFAB0;");
    asm("loc_65FF7F1: push $_data_660140C;");
    asm("loc_65FF7F6: push $3;");
    asm("loc_65FF7F8: mov $_data_660345C,%ecx;");
    asm("loc_65FF7FD: mov %edi,_data_660344C;");
    asm("loc_65FF803: movl $_data_6602BFC,_data_6603450;");
    asm("loc_65FF80D: movl $_data_6602BEC,_data_6603454;");
    asm("loc_65FF817: mov %esi,_data_6603458;");
    asm("loc_65FF81D: call _sub_65FFAB0;");
    asm("loc_65FF822: push $_data_66013FC;");
    asm("loc_65FF827: push $3;");
    asm("loc_65FF829: mov $_data_6603470,%ecx;");
    asm("loc_65FF82E: call _sub_65FFAB0;");
    asm("loc_65FF833: push $_data_660140C;");
    asm("loc_65FF838: push $3;");
    asm("loc_65FF83A: mov $_data_6603484,%ecx;");
    asm("loc_65FF83F: call _sub_65FFAB0;");
    asm("loc_65FF844: push $_data_66013FC;");
    asm("loc_65FF849: push $3;");
    asm("loc_65FF84B: mov $_data_66034A8,%ecx;");
    asm("loc_65FF850: mov %edi,_data_6603498;");
    asm("loc_65FF856: movl $_data_6602BE8,_data_660349C;");
    asm("loc_65FF860: movl $_data_6602BD8,_data_66034A0;");
    asm("loc_65FF86A: mov %esi,_data_66034A4;");
    asm("loc_65FF870: call _sub_65FFAB0;");
    asm("loc_65FF875: push $_data_66013FC;");
    asm("loc_65FF87A: push $3;");
    asm("loc_65FF87C: mov $_data_66034BC,%ecx;");
    asm("loc_65FF881: call _sub_65FFAB0;");
    asm("loc_65FF886: push $_data_660140C;");
    asm("loc_65FF88B: push $3;");
    asm("loc_65FF88D: mov $_data_66034D0,%ecx;");
    asm("loc_65FF892: call _sub_65FFAB0;");
    asm("loc_65FF897: push $_data_66013FC;");
    asm("loc_65FF89C: push $3;");
    asm("loc_65FF89E: mov $_data_66034F4,%ecx;");
    asm("loc_65FF8A3: mov %edi,_data_66034E4;");
    asm("loc_65FF8A9: movl $_data_6602BD4,_data_66034E8;");
    asm("loc_65FF8B3: movl $_data_6602BC4,_data_66034EC;");
    asm("loc_65FF8BD: mov %esi,_data_66034F0;");
    asm("loc_65FF8C3: call _sub_65FFAB0;");
    asm("loc_65FF8C8: push $_data_66013FC;");
    asm("loc_65FF8CD: push $3;");
    asm("loc_65FF8CF: mov $_data_6603508,%ecx;");
    asm("loc_65FF8D4: call _sub_65FFAB0;");
    asm("loc_65FF8D9: push $_data_660140C;");
    asm("loc_65FF8DE: push $3;");
    asm("loc_65FF8E0: mov $_data_660351C,%ecx;");
    asm("loc_65FF8E5: call _sub_65FFAB0;");
    asm("loc_65FF8EA: push $_data_66013FC;");
    asm("loc_65FF8EF: push $2;");
    asm("loc_65FF8F1: mov $_data_6603540,%ecx;");
    asm("loc_65FF8F6: mov %edi,_data_6603530;");
    asm("loc_65FF8FC: movl $_data_6602BC0,_data_6603534;");
    asm("loc_65FF906: movl $_data_6602BB0,_data_6603538;");
    asm("loc_65FF910: mov %esi,_data_660353C;");
    asm("loc_65FF916: call _sub_65FFAB0;");
    asm("loc_65FF91B: push $_data_66013FC;");
    asm("loc_65FF920: push $2;");
    asm("loc_65FF922: mov $_data_6603554,%ecx;");
    asm("loc_65FF927: call _sub_65FFAB0;");
    asm("loc_65FF92C: push $_data_660140C;");
    asm("loc_65FF931: push $2;");
    asm("loc_65FF933: mov $_data_6603568,%ecx;");
    asm("loc_65FF938: call _sub_65FFAB0;");
    asm("loc_65FF93D: push $_data_660140C;");
    asm("loc_65FF942: push $2;");
    asm("loc_65FF944: mov $_data_660358C,%ecx;");
    asm("loc_65FF949: mov %edi,_data_660357C;");
    asm("loc_65FF94F: movl $_data_6602BAC,_data_6603580;");
    asm("loc_65FF959: movl $_data_6602BA0,_data_6603584;");
    asm("loc_65FF963: mov %esi,_data_6603588;");
    asm("loc_65FF969: call _sub_65FFAB0;");
    asm("loc_65FF96E: push $_data_66013FC;");
    asm("loc_65FF973: push $2;");
    asm("loc_65FF975: mov $_data_66035A0,%ecx;");
    asm("loc_65FF97A: call _sub_65FFAB0;");
    asm("loc_65FF97F: push $_data_660140C;");
    asm("loc_65FF984: push $2;");
    asm("loc_65FF986: mov $_data_66035B4,%ecx;");
    asm("loc_65FF98B: call _sub_65FFAB0;");
    asm("loc_65FF990: push $_data_6602B30;");
    asm("loc_65FF995: push $7;");
    asm("loc_65FF997: mov $_data_66035D8,%ecx;");
    asm("loc_65FF99C: mov %edi,_data_66035C8;");
    asm("loc_65FF9A2: movl $_data_6602B98,_data_66035CC;");
    asm("loc_65FF9AC: movl $_data_6602B88,_data_66035D0;");
    asm("loc_65FF9B6: mov %esi,_data_66035D4;");
    asm("loc_65FF9BC: call _sub_65FFAB0;");
    asm("loc_65FF9C1: push %edi;");
    asm("loc_65FF9C2: push $7;");
    asm("loc_65FF9C4: mov $_data_66035EC,%ecx;");
    asm("loc_65FF9C9: call _sub_65FFAB0;");
    asm("loc_65FF9CE: push %edi;");
    asm("loc_65FF9CF: push $7;");
    asm("loc_65FF9D1: mov $_data_6603600,%ecx;");
    asm("loc_65FF9D6: call _sub_65FFAB0;");
    asm("loc_65FF9DB: push $4;");
    asm("loc_65FF9DD: push $8;");
    asm("loc_65FF9DF: mov $_data_6603624,%ecx;");
    asm("loc_65FF9E4: mov %edi,_data_6603614;");
    asm("loc_65FF9EA: movl $_data_6602B7C,_data_6603618;");
    asm("loc_65FF9F4: movl $_data_6602B68,_data_660361C;");
    asm("loc_65FF9FE: mov %esi,_data_6603620;");
    asm("loc_65FFA04: call _sub_65FFAB0;");
    asm("loc_65FFA09: push %edi;");
    asm("loc_65FFA0A: push $8;");
    asm("loc_65FFA0C: mov $_data_6603638,%ecx;");
    asm("loc_65FFA11: call _sub_65FFAB0;");
    asm("loc_65FFA16: push %edi;");
    asm("loc_65FFA17: push $8;");
    asm("loc_65FFA19: mov $_data_660364C,%ecx;");
    asm("loc_65FFA1E: call _sub_65FFAB0;");
    asm("loc_65FFA23: push $2;");
    asm("loc_65FFA25: push $9;");
    asm("loc_65FFA27: mov $_data_6603670,%ecx;");
    asm("loc_65FFA2C: movl $0x20000,_data_6603660;");
    asm("loc_65FFA36: movl $_data_6602B7C,_data_6603664;");
    asm("loc_65FFA40: movl $_data_6602B50,_data_6603668;");
    asm("loc_65FFA4A: mov %esi,_data_660366C;");
    asm("loc_65FFA50: call _sub_65FFAB0;");
    asm("loc_65FFA55: push %edi;");
    asm("loc_65FFA56: push $9;");
    asm("loc_65FFA58: mov $_data_6603684,%ecx;");
    asm("loc_65FFA5D: call _sub_65FFAB0;");
    asm("loc_65FFA62: push %edi;");
    asm("loc_65FFA63: push $9;");
    asm("loc_65FFA65: mov $_data_6603698,%ecx;");
    asm("loc_65FFA6A: call _sub_65FFAB0;");
    asm("loc_65FFA6F: push %edi;");
    asm("loc_65FFA70: push %edi;");
    asm("loc_65FFA71: push $2;");
    asm("loc_65FFA73: push %esi;");
    asm("loc_65FFA74: push $_data_6602B38;");
    asm("loc_65FFA79: push $_data_6602B7C;");
    asm("loc_65FFA7E: push $0x40000;");
    asm("loc_65FFA83: push $9;");
    asm("loc_65FFA85: mov $_data_66036AC,%ecx;");
    asm("loc_65FFA8A: call _sub_65FFC50;");
    asm("loc_65FFA8F: mov 0xC(%esp),%eax;");
    asm("loc_65FFA93: cmp %edi,%eax;");
    asm("loc_65FFA95: pop %edi;");
    asm("loc_65FFA96: pop %esi;");
    asm("loc_65FFA97: je loc_65FFA9F;");
    asm("loc_65FFA99: movl $_data_6603400,(%eax);");
    asm("loc_65FFA9F: mov $0xA,%eax;");
    asm("loc_65FFAA4: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FFAB0() // _sub_65FFAB0
{
    asm("jmp dgb_65FFAB0;"); // jumptable skip
    asm(".long _jmp_65FFBF0;"); // jumptable address
    __DEBUG_ASM(65FFAB0);
    // chunk 0x65FFAB0 _sub_65FFAB0
    asm("loc_65FFAB0: push %ebx;");
    asm("loc_65FFAB1: mov _import_6601020,%ebx;");
    asm("loc_65FFAB7: push %ebp;");
    asm("loc_65FFAB8: mov _import_6601018,%ebp;");
    asm("loc_65FFABE: push %esi;");
    asm("loc_65FFABF: mov %ecx,%esi;");
    asm("loc_65FFAC1: mov (%esi),%eax;");
    asm("loc_65FFAC3: push %edi;");
    asm("loc_65FFAC4: mov 0x14(%esp),%edi;");
    asm("loc_65FFAC8: cmp %eax,%edi;");
    asm("loc_65FFACA: je loc_65FFAF7;");
    asm("loc_65FFACC: sub $5,%eax;");
    asm("loc_65FFACF: je loc_65FFAD7;");
    asm("loc_65FFAD1: dec %eax;");
    asm("loc_65FFAD2: je loc_65FFB10;");
    asm("loc_65FFAD4: dec %eax;");
    asm("loc_65FFAD5: jne loc_65FFAF0;");
    asm("loc_65FFAD7: mov 4(%esi),%eax;");
    asm("loc_65FFADA: test %eax,%eax;");
    asm("loc_65FFADC: je loc_65FFAF0;");
    asm("loc_65FFADE: push %eax;");
    asm("loc_65FFADF: push $0;");
    asm("loc_65FFAE1: call *%ebx;");
    asm("loc_65FFAE3: push %eax;");
    asm("loc_65FFAE4: call *%ebp;");
    asm("loc_65FFAE6: movl $0,4(%esi);");
    asm("loc_65FFAED: lea (%ecx),%ecx;");
    asm("loc_65FFAF0: movl $0,4(%esi);");
    asm("loc_65FFAF7: lea -1(%edi),%ecx;");
    asm("loc_65FFAFA: cmp $9,%ecx;");
    asm("loc_65FFAFD: mov %edi,(%esi);");
    asm("loc_65FFAFF: ja loc_65FFBE9;");
    asm("loc_65FFB05: mov 0x18(%esp),%eax;");
    asm("loc_65FFB09: jmpl *_jmp_65FFBF0(,%ecx,4);");
    asm("loc_65FFB10: mov 4(%esi),%eax;");
    asm("loc_65FFB13: test %eax,%eax;");
    asm("loc_65FFB15: movl $0,4(%esi);");
    asm("loc_65FFB1C: je loc_65FFAF0;");
    asm("loc_65FFB1E: mov (%eax),%ecx;");
    asm("loc_65FFB20: push %eax;");
    asm("loc_65FFB21: calll *8(%ecx);");
    asm("loc_65FFB24: jmp loc_65FFAF0;");
    asm("loc_65FFB26: mov 0x18(%esp),%eax;");
    asm("loc_65FFB2A: mov (%eax),%ecx;");
    asm("loc_65FFB2C: pop %edi;");
    asm("loc_65FFB2D: mov %ecx,4(%esi);");
    asm("loc_65FFB30: pop %esi;");
    asm("loc_65FFB31: pop %ebp;");
    asm("loc_65FFB32: pop %ebx;");
    asm("loc_65FFB33: ret $8;");
    asm("loc_65FFB36: mov 0xC(%eax),%edx;");
    asm("loc_65FFB39: mov %edx,0x10(%esi);");
    asm("loc_65FFB3C: mov 8(%eax),%ecx;");
    asm("loc_65FFB3F: mov %ecx,0xC(%esi);");
    asm("loc_65FFB42: mov 4(%eax),%edx;");
    asm("loc_65FFB45: mov %edx,8(%esi);");
    asm("loc_65FFB48: mov (%eax),%eax;");
    asm("loc_65FFB4A: pop %edi;");
    asm("loc_65FFB4B: mov %eax,4(%esi);");
    asm("loc_65FFB4E: pop %esi;");
    asm("loc_65FFB4F: pop %ebp;");
    asm("loc_65FFB50: pop %ebx;");
    asm("loc_65FFB51: ret $8;");
    asm("loc_65FFB54: mov 4(%esi),%eax;");
    asm("loc_65FFB57: test %eax,%eax;");
    asm("loc_65FFB59: je loc_65FFB6A;");
    asm("loc_65FFB5B: push %eax;");
    asm("loc_65FFB5C: push $0;");
    asm("loc_65FFB5E: call *%ebx;");
    asm("loc_65FFB60: push %eax;");
    asm("loc_65FFB61: call *%ebp;");
    asm("loc_65FFB63: movl $0,4(%esi);");
    asm("loc_65FFB6A: mov 0x18(%esp),%ebp;");
    asm("loc_65FFB6E: test %ebp,%ebp;");
    asm("loc_65FFB70: je loc_65FFBE9;");
    asm("loc_65FFB72: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FFB75: xor %eax,%eax;");
    asm("loc_65FFB77: mov %ebp,%edi;");
    asm("loc_65FFB79: repne scas (%edi),%al;");
    asm("loc_65FFB7B: not %ecx;");
    asm("loc_65FFB7D: push %ecx;");
    asm("loc_65FFB7E: push %eax;");
    asm("loc_65FFB7F: call *%ebx;");
    asm("loc_65FFB81: push %eax;");
    asm("loc_65FFB82: calll *_import_6601014;");
    asm("loc_65FFB88: mov %eax,4(%esi);");
    asm("loc_65FFB8B: mov %ebp,%ecx;");
    asm("loc_65FFB8D: mov %eax,%edx;");
    asm("loc_65FFB8F: nop;");
    asm("loc_65FFB90: mov (%ecx),%al;");
    asm("loc_65FFB92: inc %ecx;");
    asm("loc_65FFB93: mov %al,(%edx);");
    asm("loc_65FFB95: inc %edx;");
    asm("loc_65FFB96: test %al,%al;");
    asm("loc_65FFB98: jne loc_65FFB90;");
    asm("loc_65FFB9A: pop %edi;");
    asm("loc_65FFB9B: pop %esi;");
    asm("loc_65FFB9C: pop %ebp;");
    asm("loc_65FFB9D: pop %ebx;");
    asm("loc_65FFB9E: ret $8;");
    asm("loc_65FFBA1: mov 0x18(%esp),%eax;");
    asm("loc_65FFBA5: test %eax,%eax;");
    asm("loc_65FFBA7: mov 4(%esi),%edi;");
    asm("loc_65FFBAA: mov %eax,4(%esi);");
    asm("loc_65FFBAD: je loc_65FFBB5;");
    asm("loc_65FFBAF: mov (%eax),%ecx;");
    asm("loc_65FFBB1: push %eax;");
    asm("loc_65FFBB2: calll *4(%ecx);");
    asm("loc_65FFBB5: test %edi,%edi;");
    asm("loc_65FFBB7: je loc_65FFBE9;");
    asm("loc_65FFBB9: mov (%edi),%edx;");
    asm("loc_65FFBBB: push %edi;");
    asm("loc_65FFBBC: calll *8(%edx);");
    asm("loc_65FFBBF: pop %edi;");
    asm("loc_65FFBC0: pop %esi;");
    asm("loc_65FFBC1: pop %ebp;");
    asm("loc_65FFBC2: pop %ebx;");
    asm("loc_65FFBC3: ret $8;");
    asm("loc_65FFBC6: mov 0x18(%esp),%eax;");
    asm("loc_65FFBCA: pop %edi;");
    asm("loc_65FFBCB: mov %eax,4(%esi);");
    asm("loc_65FFBCE: pop %esi;");
    asm("loc_65FFBCF: pop %ebp;");
    asm("loc_65FFBD0: pop %ebx;");
    asm("loc_65FFBD1: ret $8;");
    asm("loc_65FFBD4: mov 0x18(%esp),%ecx;");
    asm("loc_65FFBD8: pop %edi;");
    asm("loc_65FFBD9: mov %ecx,4(%esi);");
    asm("loc_65FFBDC: pop %esi;");
    asm("loc_65FFBDD: pop %ebp;");
    asm("loc_65FFBDE: pop %ebx;");
    asm("loc_65FFBDF: ret $8;");
    asm("loc_65FFBE2: mov 0x18(%esp),%edx;");
    asm("loc_65FFBE6: mov %edx,4(%esi);");
    asm("loc_65FFBE9: pop %edi;");
    asm("loc_65FFBEA: pop %esi;");
    asm("loc_65FFBEB: pop %ebp;");
    asm("loc_65FFBEC: pop %ebx;");
    asm("loc_65FFBED: ret $8;");
    asm("int3;"); // unreachable
    asm("_jmp_65FFBF0: .long loc_65FFBE2;");
    asm(".long loc_65FFB26;");
    asm(".long loc_65FFB3C;");
    asm(".long loc_65FFB36;");
    asm(".long loc_65FFB54;");
    asm(".long loc_65FFBA1;");
    asm(".long loc_65FFB54;");
    asm(".long loc_65FFBC6;");
    asm(".long loc_65FFBD4;");
    asm(".long loc_65FFBE2;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FFAB0);
_naked _weak void _sub_65FFC20() // _sub_65FFC20
{
    __DEBUG_ASM(65FFC20);
    // chunk 0x65FFC20 _sub_65FFC20
    asm("loc_65FFC20: mov %ecx,%eax;");
    asm("loc_65FFC22: xor %ecx,%ecx;");
    asm("loc_65FFC24: mov %ecx,0x10(%eax);");
    asm("loc_65FFC27: mov %ecx,0x14(%eax);");
    asm("loc_65FFC2A: mov %ecx,0x24(%eax);");
    asm("loc_65FFC2D: mov %ecx,0x28(%eax);");
    asm("loc_65FFC30: mov %ecx,0x38(%eax);");
    asm("loc_65FFC33: mov %ecx,0x3C(%eax);");
    asm("loc_65FFC36: mov %ecx,(%eax);");
    asm("loc_65FFC38: mov %ecx,4(%eax);");
    asm("loc_65FFC3B: mov %ecx,8(%eax);");
    asm("loc_65FFC3E: mov %ecx,0xC(%eax);");
    asm("loc_65FFC41: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FFC50() // _sub_65FFC50
{
    asm("jmp dgb_65FFC50;"); // jumptable skip
    asm(".long _jmp_65FFE08;"); // jumptable address
    __DEBUG_ASM(65FFC50);
    // chunk 0x65FFC50 _sub_65FFC50
    asm("loc_65FFC50: push %ecx;");
    asm("loc_65FFC51: mov 0xC(%esp),%eax;");
    asm("loc_65FFC55: mov 0x14(%esp),%edx;");
    asm("loc_65FFC59: push %ebx;");
    asm("loc_65FFC5A: mov %ecx,%ebx;");
    asm("loc_65FFC5C: mov 0x14(%esp),%ecx;");
    asm("loc_65FFC60: mov %eax,(%ebx);");
    asm("loc_65FFC62: mov 0x1C(%esp),%eax;");
    asm("loc_65FFC66: push %esi;");
    asm("loc_65FFC67: lea 0x10(%ebx),%esi;");
    asm("loc_65FFC6A: push %edi;");
    asm("loc_65FFC6B: mov 0x14(%esp),%edi;");
    asm("loc_65FFC6F: mov %ecx,4(%ebx);");
    asm("loc_65FFC72: mov %edx,8(%ebx);");
    asm("loc_65FFC75: mov %eax,0xC(%ebx);");
    asm("loc_65FFC78: cmp (%esi),%edi;");
    asm("loc_65FFC7A: mov %ebx,0xC(%esp);");
    asm("loc_65FFC7E: je loc_65FFC87;");
    asm("loc_65FFC80: mov %esi,%ecx;");
    asm("loc_65FFC82: call _sub_65FE5C0;");
    asm("loc_65FFC87: lea -1(%edi),%eax;");
    asm("loc_65FFC8A: cmp $9,%eax;");
    asm("loc_65FFC8D: push %ebp;");
    asm("loc_65FFC8E: mov %edi,(%esi);");
    asm("loc_65FFC90: ja loc_65FFD25;");
    asm("loc_65FFC96: mov 0x2C(%esp),%ecx;");
    asm("loc_65FFC9A: jmpl *_jmp_65FFE08(,%eax,4);");
    asm("loc_65FFCA1: mov 0x2C(%esp),%ecx;");
    asm("loc_65FFCA5: mov %ecx,4(%esi);");
    asm("loc_65FFCA8: jmp loc_65FFD25;");
    asm("loc_65FFCAA: mov 0x2C(%esp),%edx;");
    asm("loc_65FFCAE: mov (%edx),%eax;");
    asm("loc_65FFCB0: mov %eax,4(%esi);");
    asm("loc_65FFCB3: jmp loc_65FFD25;");
    asm("loc_65FFCB5: mov 0xC(%ecx),%edx;");
    asm("loc_65FFCB8: mov %edx,0x10(%esi);");
    asm("loc_65FFCBB: mov 8(%ecx),%eax;");
    asm("loc_65FFCBE: mov %eax,0xC(%esi);");
    asm("loc_65FFCC1: mov 4(%ecx),%edx;");
    asm("loc_65FFCC4: mov %edx,8(%esi);");
    asm("loc_65FFCC7: mov (%ecx),%eax;");
    asm("loc_65FFCC9: mov %eax,4(%esi);");
    asm("loc_65FFCCC: jmp loc_65FFD25;");
    asm("loc_65FFCCE: mov 4(%esi),%eax;");
    asm("loc_65FFCD1: test %eax,%eax;");
    asm("loc_65FFCD3: mov _import_6601020,%ebp;");
    asm("loc_65FFCD9: je loc_65FFCEE;");
    asm("loc_65FFCDB: push %eax;");
    asm("loc_65FFCDC: push $0;");
    asm("loc_65FFCDE: call *%ebp;");
    asm("loc_65FFCE0: push %eax;");
    asm("loc_65FFCE1: calll *_import_6601018;");
    asm("loc_65FFCE7: movl $0,4(%esi);");
    asm("loc_65FFCEE: mov 0x2C(%esp),%ebx;");
    asm("loc_65FFCF2: test %ebx,%ebx;");
    asm("loc_65FFCF4: je loc_65FFD21;");
    asm("loc_65FFCF6: or $0xFFFFFFFF,%ecx;");
    asm("loc_65FFCF9: xor %eax,%eax;");
    asm("loc_65FFCFB: mov %ebx,%edi;");
    asm("loc_65FFCFD: repne scas (%edi),%al;");
    asm("loc_65FFCFF: not %ecx;");
    asm("loc_65FFD01: push %ecx;");
    asm("loc_65FFD02: push %eax;");
    asm("loc_65FFD03: call *%ebp;");
    asm("loc_65FFD05: push %eax;");
    asm("loc_65FFD06: calll *_import_6601014;");
    asm("loc_65FFD0C: mov %eax,4(%esi);");
    asm("loc_65FFD0F: mov %ebx,%ecx;");
    asm("loc_65FFD11: mov %eax,%edx;");
    asm("loc_65FFD13: mov (%ecx),%al;");
    asm("loc_65FFD15: inc %ecx;");
    asm("loc_65FFD16: mov %al,(%edx);");
    asm("loc_65FFD18: inc %edx;");
    asm("loc_65FFD19: test %al,%al;");
    asm("loc_65FFD1B: jne loc_65FFD13;");
    asm("loc_65FFD1D: mov 0x18(%esp),%edi;");
    asm("loc_65FFD21: mov 0x10(%esp),%ebx;");
    asm("loc_65FFD25: mov 0x24(%ebx),%eax;");
    asm("loc_65FFD28: cmp %eax,%edi;");
    asm("loc_65FFD2A: lea 0x24(%ebx),%esi;");
    asm("loc_65FFD2D: pop %ebp;");
    asm("loc_65FFD2E: je loc_65FFD37;");
    asm("loc_65FFD30: mov %esi,%ecx;");
    asm("loc_65FFD32: call _sub_65FE5C0;");
    asm("loc_65FFD37: lea -1(%edi),%eax;");
    asm("loc_65FFD3A: cmp $9,%eax;");
    asm("loc_65FFD3D: mov %edi,(%esi);");
    asm("loc_65FFD3F: ja loc_65FFDDF;");
    asm("loc_65FFD45: mov 0x2C(%esp),%ecx;");
    asm("loc_65FFD49: jmpl *_jmp_65FFE30(,%eax,4);");
    asm("loc_65FFD50: mov 0x2C(%esp),%eax;");
    asm("loc_65FFD54: test %eax,%eax;");
    asm("loc_65FFD56: mov 4(%esi),%ebx;");
    asm("loc_65FFD59: mov %eax,4(%esi);");
    asm("loc_65FFD5C: je loc_65FFD64;");
    asm("loc_65FFD5E: mov (%eax),%ecx;");
    asm("loc_65FFD60: push %eax;");
    asm("loc_65FFD61: calll *4(%ecx);");
    asm("loc_65FFD64: test %ebx,%ebx;");
    asm("loc_65FFD66: je loc_65FFD21;");
    asm("loc_65FFD68: mov (%ebx),%edx;");
    asm("loc_65FFD6A: push %ebx;");
    asm("loc_65FFD6B: calll *8(%edx);");
    asm("loc_65FFD6E: jmp loc_65FFD21;");
    asm("loc_65FFD70: mov 0x2C(%esp),%eax;");
    asm("loc_65FFD74: mov %eax,4(%esi);");
    asm("loc_65FFD77: jmp loc_65FFD25;");
    asm("loc_65FFD79: mov 0x2C(%esp),%edx;");
    asm("loc_65FFD7D: mov %edx,4(%esi);");
    asm("loc_65FFD80: jmp loc_65FFD25;");
    asm("loc_65FFD82: mov 0x2C(%esp),%eax;");
    asm("loc_65FFD86: mov %eax,4(%esi);");
    asm("loc_65FFD89: jmp loc_65FFDDF;");
    asm("loc_65FFD8B: mov 0x2C(%esp),%ecx;");
    asm("loc_65FFD8F: mov (%ecx),%edx;");
    asm("loc_65FFD91: mov %edx,4(%esi);");
    asm("loc_65FFD94: jmp loc_65FFDDF;");
    asm("loc_65FFD96: mov 0xC(%ecx),%eax;");
    asm("loc_65FFD99: mov %eax,0x10(%esi);");
    asm("loc_65FFD9C: mov 8(%ecx),%edx;");
    asm("loc_65FFD9F: mov %edx,0xC(%esi);");
    asm("loc_65FFDA2: mov 4(%ecx),%eax;");
    asm("loc_65FFDA5: mov %eax,8(%esi);");
    asm("loc_65FFDA8: mov (%ecx),%ecx;");
    asm("loc_65FFDAA: mov %ecx,4(%esi);");
    asm("loc_65FFDAD: jmp loc_65FFDDF;");
    asm("loc_65FFDAF: mov 0x2C(%esp),%edx;");
    asm("loc_65FFDB3: push %edx;");
    asm("loc_65FFDB4: mov %esi,%ecx;");
    asm("loc_65FFDB6: call _sub_65FE620;");
    asm("loc_65FFDBB: jmp loc_65FFDDF;");
    asm("loc_65FFDBD: mov 0x2C(%esp),%eax;");
    asm("loc_65FFDC1: test %eax,%eax;");
    asm("loc_65FFDC3: mov 4(%esi),%ebx;");
    asm("loc_65FFDC6: mov %eax,4(%esi);");
    asm("loc_65FFDC9: je loc_65FFDD1;");
    asm("loc_65FFDCB: mov (%eax),%ecx;");
    asm("loc_65FFDCD: push %eax;");
    asm("loc_65FFDCE: calll *4(%ecx);");
    asm("loc_65FFDD1: test %ebx,%ebx;");
    asm("loc_65FFDD3: je loc_65FFDDB;");
    asm("loc_65FFDD5: mov (%ebx),%edx;");
    asm("loc_65FFDD7: push %ebx;");
    asm("loc_65FFDD8: calll *8(%edx);");
    asm("loc_65FFDDB: mov 0xC(%esp),%ebx;");
    asm("loc_65FFDDF: mov 0x30(%esp),%eax;");
    asm("loc_65FFDE3: push %eax;");
    asm("loc_65FFDE4: push %edi;");
    asm("loc_65FFDE5: lea 0x38(%ebx),%ecx;");
    asm("loc_65FFDE8: call _sub_65FFAB0;");
    asm("loc_65FFDED: pop %edi;");
    asm("loc_65FFDEE: pop %esi;");
    asm("loc_65FFDEF: pop %ebx;");
    asm("loc_65FFDF0: pop %ecx;");
    asm("loc_65FFDF1: ret $0x20;");
    asm("loc_65FFDF4: mov 0x2C(%esp),%ecx;");
    asm("loc_65FFDF8: mov %ecx,4(%esi);");
    asm("loc_65FFDFB: jmp loc_65FFDDF;");
    asm("loc_65FFDFD: mov 0x2C(%esp),%edx;");
    asm("loc_65FFE01: mov %edx,4(%esi);");
    asm("loc_65FFE04: jmp loc_65FFDDF;");
    asm("int3;"); // unreachable
    asm("_jmp_65FFE08: .long loc_65FFCA1;");
    asm(".long loc_65FFCAA;");
    asm(".long loc_65FFCBB;");
    asm(".long loc_65FFCB5;");
    asm(".long loc_65FFCCE;");
    asm(".long loc_65FFD50;");
    asm(".long loc_65FFCCE;");
    asm(".long loc_65FFD70;");
    asm(".long loc_65FFCA1;");
    asm(".long loc_65FFD79;");
    asm("_jmp_65FFE30: .long loc_65FFD82;");
    asm(".long loc_65FFD8B;");
    asm(".long loc_65FFD9C;");
    asm(".long loc_65FFD96;");
    asm(".long loc_65FFDAF;");
    asm(".long loc_65FFDBD;");
    asm(".long loc_65FFDAF;");
    asm(".long loc_65FFD82;");
    asm(".long loc_65FFDF4;");
    asm(".long loc_65FFDFD;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FFC50);
_naked _weak void _sub_65FFE60() // _sub_65FFE60
{
    asm("jmp dgb_65FFE60;"); // jumptable skip
    asm(".long _jmp_65FFEBC;"); // jumptable address
    __DEBUG_ASM(65FFE60);
    // chunk 0x65FFE60 _sub_65FFE60
    asm("loc_65FFE60: mov 4(%esp),%eax;");
    asm("loc_65FFE64: cmp $9,%eax;");
    asm("loc_65FFE67: ja loc_65FFEB5;");
    asm("loc_65FFE69: jmpl *_jmp_65FFEBC(,%eax,4);");
    asm("loc_65FFE70: lea 0x30(%ecx),%eax;");
    asm("loc_65FFE73: ret $4;");
    asm("loc_65FFE76: lea 0x20(%ecx),%eax;");
    asm("loc_65FFE79: ret $4;");
    asm("loc_65FFE7C: lea 0x50(%ecx),%eax;");
    asm("loc_65FFE7F: ret $4;");
    asm("loc_65FFE82: lea 0x40(%ecx),%eax;");
    asm("loc_65FFE85: ret $4;");
    asm("loc_65FFE88: lea 0x60(%ecx),%eax;");
    asm("loc_65FFE8B: ret $4;");
    asm("loc_65FFE8E: lea 0x2C(%ecx),%eax;");
    asm("loc_65FFE91: ret $4;");
    asm("loc_65FFE94: mov 0x18(%ecx),%eax;");
    asm("loc_65FFE97: ret $4;");
    asm("loc_65FFE9A: mov 0x18(%ecx),%eax;");
    asm("loc_65FFE9D: add $0x1C,%eax;");
    asm("loc_65FFEA0: ret $4;");
    asm("loc_65FFEA3: mov 0x18(%ecx),%eax;");
    asm("loc_65FFEA6: add $0x20,%eax;");
    asm("loc_65FFEA9: ret $4;");
    asm("loc_65FFEAC: mov 0x18(%ecx),%eax;");
    asm("loc_65FFEAF: add $0x24,%eax;");
    asm("loc_65FFEB2: ret $4;");
    asm("loc_65FFEB5: xor %eax,%eax;");
    asm("loc_65FFEB7: ret $4;");
    asm("int3;"); // unreachable
    asm("_jmp_65FFEBC: .long loc_65FFE70;");
    asm(".long loc_65FFE76;");
    asm(".long loc_65FFE7C;");
    asm(".long loc_65FFE82;");
    asm(".long loc_65FFE88;");
    asm(".long loc_65FFE8E;");
    asm(".long loc_65FFE94;");
    asm(".long loc_65FFE9A;");
    asm(".long loc_65FFEA3;");
    asm(".long loc_65FFEAC;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_65FFE60);
_naked _weak void _sub_65FFEF0() // _sub_65FFEF0
{
    __DEBUG_ASM(65FFEF0);
    // chunk 0x65FFEF0 _sub_65FFEF0
    asm("loc_65FFEF0: mov 4(%esp),%eax;");
    asm("loc_65FFEF4: mov 0x64(%eax),%cl;");
    asm("loc_65FFEF7: mov 8(%esp),%edx;");
    asm("loc_65FFEFB: neg %cl;");
    asm("loc_65FFEFD: sbb %ecx,%ecx;");
    asm("loc_65FFEFF: and $2,%ecx;");
    asm("loc_65FFF02: or $8,%ecx;");
    asm("loc_65FFF05: mov %ecx,(%edx);");
    asm("loc_65FFF07: xor %eax,%eax;");
    asm("loc_65FFF09: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FFF10() // _sub_65FFF10
{
    __DEBUG_ASM(65FFF10);
    // chunk 0x65FFF10 _sub_65FFF10
    asm("loc_65FFF10: mov $_data_66014DC,%eax;");
    asm("loc_65FFF15: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_65FFF20() // _sub_65FFF20
{
    __DEBUG_ASM(65FFF20);
    // chunk 0x65FFF20 _sub_65FFF20
    asm("loc_65FFF20: sub $0x58,%esp;");
    asm("loc_65FFF23: push %ebx;");
    asm("loc_65FFF24: mov 0x60(%esp),%ebx;");
    asm("loc_65FFF28: mov 4(%ebx),%eax;");
    asm("loc_65FFF2B: mov (%eax),%ecx;");
    asm("loc_65FFF2D: push %ebp;");
    asm("loc_65FFF2E: push %esi;");
    asm("loc_65FFF2F: lea 0x20(%ebx),%edx;");
    asm("loc_65FFF32: push %edx;");
    asm("loc_65FFF33: push %eax;");
    asm("loc_65FFF34: calll *0xAC(%ecx);");
    asm("loc_65FFF3A: mov 0x6C(%esp),%ebp;");
    asm("loc_65FFF3E: test %ebp,%ebp;");
    asm("loc_65FFF40: je loc_65FFF63;");
    asm("loc_65FFF42: mov 0xC(%ebp),%eax;");
    asm("loc_65FFF45: test %eax,%eax;");
    asm("loc_65FFF47: je loc_65FFF63;");
    asm("loc_65FFF49: mov 0x2C(%eax),%ecx;");
    asm("loc_65FFF4C: test %ecx,%ecx;");
    asm("loc_65FFF4E: je loc_65FFF63;");
    asm("loc_65FFF50: mov 4(%ebx),%eax;");
    asm("loc_65FFF53: mov (%eax),%ecx;");
    asm("loc_65FFF55: push $1;");
    asm("loc_65FFF57: push $0x8D;");
    asm("loc_65FFF5C: push %eax;");
    asm("loc_65FFF5D: calll *0xF0(%ecx);");
    asm("loc_65FFF63: mov 4(%ebx),%esi;");
    asm("loc_65FFF66: mov (%esi),%edx;");
    asm("loc_65FFF68: push %edi;");
    asm("loc_65FFF69: mov 0x18(%ebx),%edi;");
    asm("loc_65FFF6C: mov 8(%edi),%eax;");
    asm("loc_65FFF6F: push %eax;");
    asm("loc_65FFF70: push $0;");
    asm("loc_65FFF72: push %esi;");
    asm("loc_65FFF73: calll *0x108(%edx);");
    asm("loc_65FFF79: mov 0x1C(%edi),%eax;");
    asm("loc_65FFF7C: cmp $4,%eax;");
    asm("loc_65FFF7F: jb loc_65FFF86;");
    asm("loc_65FFF81: add $0xFFFFFFFC,%eax;");
    asm("loc_65FFF84: jmp loc_65FFF88;");
    asm("loc_65FFF86: xor %eax,%eax;");
    asm("loc_65FFF88: mov (%esi),%ecx;");
    asm("loc_65FFF8A: push %eax;");
    asm("loc_65FFF8B: push $0xB;");
    asm("loc_65FFF8D: push $0;");
    asm("loc_65FFF8F: push %esi;");
    asm("loc_65FFF90: calll *0xF8(%ecx);");
    asm("loc_65FFF96: mov 0x20(%edi),%eax;");
    asm("loc_65FFF99: mov (%esi),%edx;");
    asm("loc_65FFF9B: inc %eax;");
    asm("loc_65FFF9C: push %eax;");
    asm("loc_65FFF9D: push $0xD;");
    asm("loc_65FFF9F: push $0;");
    asm("loc_65FFFA1: push %esi;");
    asm("loc_65FFFA2: calll *0xF8(%edx);");
    asm("loc_65FFFA8: mov 0x24(%edi),%edx;");
    asm("loc_65FFFAB: mov (%esi),%ecx;");
    asm("loc_65FFFAD: inc %edx;");
    asm("loc_65FFFAE: push %edx;");
    asm("loc_65FFFAF: push $0xE;");
    asm("loc_65FFFB1: push $0;");
    asm("loc_65FFFB3: push %esi;");
    asm("loc_65FFFB4: calll *0xF8(%ecx);");
    asm("loc_65FFFBA: mov 4(%ebx),%edi;");
    asm("loc_65FFFBD: mov $_data_660146C,%esi;");
    asm("loc_65FFFC2: mov $1,%eax;");
    asm("loc_65FFFC7: mov 4(%esi),%edx;");
    asm("loc_65FFFCA: mov (%edi),%ecx;");
    asm("loc_65FFFCC: push %edx;");
    asm("loc_65FFFCD: push %eax;");
    asm("loc_65FFFCE: push $0;");
    asm("loc_65FFFD0: push %edi;");
    asm("loc_65FFFD1: calll *0xF8(%ecx);");
    asm("loc_65FFFD7: mov 8(%esi),%eax;");
    asm("loc_65FFFDA: add $8,%esi;");
    asm("loc_65FFFDD: test %eax,%eax;");
    asm("loc_65FFFDF: jne loc_65FFFC7;");
    asm("loc_65FFFE1: mov 4(%ebx),%edi;");
    asm("loc_65FFFE4: mov $_data_66014A4,%esi;");
    asm("loc_65FFFE9: mov $1,%eax;");
    asm("loc_65FFFEE: mov %edi,%edi;");
    asm("loc_65FFFF0: mov 4(%esi),%edx;");
    asm("loc_65FFFF3: mov (%edi),%ecx;");
    asm("loc_65FFFF5: push %edx;");
    asm("loc_65FFFF6: push %eax;");
    asm("loc_65FFFF7: push $1;");
    asm("loc_65FFFF9: push %edi;");
    asm("loc_65FFFFA: calll *0xF8(%ecx);");
    asm("loc_6600000: mov 8(%esi),%eax;");
    asm("loc_6600003: add $8,%esi;");
    asm("loc_6600006: test %eax,%eax;");
    asm("loc_6600008: jne loc_65FFFF0;");
    asm("loc_660000A: mov 0x64(%ebx),%al;");
    asm("loc_660000D: mov 4(%ebx),%edi;");
    asm("loc_6600010: test %al,%al;");
    asm("loc_6600012: mov $0x89,%eax;");
    asm("loc_6600017: je loc_660003A;");
    asm("loc_6600019: mov $_data_660143C,%esi;");
    asm("loc_660001E: mov %edi,%edi;");
    asm("loc_6600020: mov 4(%esi),%edx;");
    asm("loc_6600023: mov (%edi),%ecx;");
    asm("loc_6600025: push %edx;");
    asm("loc_6600026: push %eax;");
    asm("loc_6600027: push %edi;");
    asm("loc_6600028: calll *0xF0(%ecx);");
    asm("loc_660002E: mov 8(%esi),%eax;");
    asm("loc_6600031: add $8,%esi;");
    asm("loc_6600034: test %eax,%eax;");
    asm("loc_6600036: jne loc_6600020;");
    asm("loc_6600038: jmp loc_6600058;");
    asm("loc_660003A: mov $_data_660141C,%esi;");
    asm("loc_660003F: nop;");
    asm("loc_6600040: mov 4(%esi),%edx;");
    asm("loc_6600043: mov (%edi),%ecx;");
    asm("loc_6600045: push %edx;");
    asm("loc_6600046: push %eax;");
    asm("loc_6600047: push %edi;");
    asm("loc_6600048: calll *0xF0(%ecx);");
    asm("loc_660004E: mov 8(%esi),%eax;");
    asm("loc_6600051: add $8,%esi;");
    asm("loc_6600054: test %eax,%eax;");
    asm("loc_6600056: jne loc_6600040;");
    asm("loc_6600058: test %ebp,%ebp;");
    asm("loc_660005A: pop %edi;");
    asm("loc_660005B: je loc_66001A6;");
    asm("loc_6600061: mov 0x20(%ebp),%esi;");
    asm("loc_6600064: test %esi,%esi;");
    asm("loc_6600066: je loc_66001A6;");
    asm("loc_660006C: cmpl $0,(%esi);");
    asm("loc_660006F: je loc_66001A6;");
    asm("loc_6600075: mov 4(%esi),%eax;");
    asm("loc_6600078: flds 0x2C(%eax);");
    asm("loc_660007B: mov _data_6603134,%ecx;");
    asm("loc_6600081: flds 0x20(%eax);");
    asm("loc_6600084: flds 0x14(%eax);");
    asm("loc_6600087: fstps 0xC(%esp);");
    asm("loc_660008B: fstps 0x10(%esp);");
    asm("loc_660008F: fstps 0x14(%esp);");
    asm("loc_6600093: mov 4(%eax),%eax;");
    asm("loc_6600096: mov (%ecx),%edx;");
    asm("loc_6600098: push %eax;");
    asm("loc_6600099: push %ecx;");
    asm("loc_660009A: calll *0xD4(%edx);");
    asm("loc_66000A0: cmp $0xFFFFFFFF,%eax;");
    asm("loc_66000A3: je loc_66000E0;");
    asm("loc_66000A5: mov _data_6603134,%ecx;");
    asm("loc_66000AB: mov (%ecx),%edx;");
    asm("loc_66000AD: push %eax;");
    asm("loc_66000AE: push %ecx;");
    asm("loc_66000AF: calll *0x98(%edx);");
    asm("loc_66000B5: lea 0xC(%esp),%ecx;");
    asm("loc_66000B9: push %ecx;");
    asm("loc_66000BA: push %eax;");
    asm("loc_66000BB: lea 0x20(%esp),%edx;");
    asm("loc_66000BF: push %edx;");
    asm("loc_66000C0: call _sub_65F7120;");
    asm("loc_66000C5: mov 0x24(%esp),%eax;");
    asm("loc_66000C9: mov 0x28(%esp),%ecx;");
    asm("loc_66000CD: mov 0x2C(%esp),%edx;");
    asm("loc_66000D1: add $0xC,%esp;");
    asm("loc_66000D4: mov %eax,0xC(%esp);");
    asm("loc_66000D8: mov %ecx,0x10(%esp);");
    asm("loc_66000DC: mov %edx,0x14(%esp);");
    asm("loc_66000E0: lea 0x6C(%esp),%eax;");
    asm("loc_66000E4: push %eax;");
    asm("loc_66000E5: lea 0x6C(%esp),%ecx;");
    asm("loc_66000E9: push %ecx;");
    asm("loc_66000EA: mov (%esi),%ecx;");
    asm("loc_66000EC: lea 0x14(%esp),%edx;");
    asm("loc_66000F0: push %edx;");
    asm("loc_66000F1: call _sub_66001C0;");
    asm("loc_66000F6: test %al,%al;");
    asm("loc_66000F8: je loc_66001A6;");
    asm("loc_66000FE: mov 0x68(%esp),%eax;");
    asm("loc_6600102: mov 0x6C(%esp),%ecx;");
    asm("loc_6600106: push $2;");
    asm("loc_6600108: push $0x18;");
    asm("loc_660010A: mov %eax,0x34(%esp);");
    asm("loc_660010E: mov 4(%ebx),%eax;");
    asm("loc_6600111: push $0;");
    asm("loc_6600113: movl $0x3F800000,0x6C(%esp);");
    asm("loc_660011B: movl $0x3F800000,0x58(%esp);");
    asm("loc_6600123: movl $0x3F800000,0x44(%esp);");
    asm("loc_660012B: movl $0x3F800000,0x30(%esp);");
    asm("loc_6600133: movl $0,0x68(%esp);");
    asm("loc_660013B: movl $0,0x64(%esp);");
    asm("loc_6600143: movl $0,0x60(%esp);");
    asm("loc_660014B: movl $0,0x5C(%esp);");
    asm("loc_6600153: movl $0,0x54(%esp);");
    asm("loc_660015B: movl $0,0x50(%esp);");
    asm("loc_6600163: movl $0,0x4C(%esp);");
    asm("loc_660016B: movl $0,0x40(%esp);");
    asm("loc_6600173: movl $0,0x3C(%esp);");
    asm("loc_660017B: movl $0,0x34(%esp);");
    asm("loc_6600183: mov %ecx,0x48(%esp);");
    asm("loc_6600187: mov (%eax),%edx;");
    asm("loc_6600189: push %eax;");
    asm("loc_660018A: calll *0xF8(%edx);");
    asm("loc_6600190: mov 4(%ebx),%ebx;");
    asm("loc_6600193: mov (%ebx),%eax;");
    asm("loc_6600195: lea 0x24(%esp),%ecx;");
    asm("loc_6600199: push %ecx;");
    asm("loc_660019A: push $0;");
    asm("loc_660019C: push %ebx;");
    asm("loc_660019D: calll *0x100(%eax);");
    asm("loc_66001A3: incl 8(%esi);");
    asm("loc_66001A6: pop %esi;");
    asm("loc_66001A7: pop %ebp;");
    asm("loc_66001A8: xor %eax,%eax;");
    asm("loc_66001AA: pop %ebx;");
    asm("loc_66001AB: add $0x58,%esp;");
    asm("loc_66001AE: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_66001C0() // _sub_66001C0
{
    __DEBUG_ASM(66001C0);
    // chunk 0x66001C0 _sub_66001C0
    asm("loc_66001C0: mov 4(%esp),%eax;");
    asm("loc_66001C4: flds 0xC(%ecx);");
    asm("loc_66001C7: fmuls (%eax);");
    asm("loc_66001C9: fmuls 8(%ecx);");
    asm("loc_66001CC: fstps 4(%esp);");
    asm("loc_66001D0: flds 4(%eax);");
    asm("loc_66001D3: fmuls 0x10(%ecx);");
    asm("loc_66001D6: fmuls 8(%ecx);");
    asm("loc_66001D9: flds 4(%esp);");
    asm("loc_66001DD: fabs;");
    asm("loc_66001DF: fcompl _data_6601580;");
    asm("loc_66001E5: fnstsw %ax;");
    asm("loc_66001E7: test $0x41,%ah;");
    asm("loc_66001EA: je loc_6600204;");
    asm("loc_66001EC: fld %st(0);");
    asm("loc_66001EE: fabs;");
    asm("loc_66001F0: fcompl _data_6601580;");
    asm("loc_66001F6: fnstsw %ax;");
    asm("loc_66001F8: test $0x41,%ah;");
    asm("loc_66001FB: je loc_6600204;");
    asm("loc_66001FD: fstp %st(0);");
    asm("loc_66001FF: xor %al,%al;");
    asm("loc_6600201: ret $0xC;");
    asm("loc_6600204: flds 4(%esp);");
    asm("loc_6600208: mov $1,%dl;");
    asm("loc_660020A: fcomps 0x14(%ecx);");
    asm("loc_660020D: fnstsw %ax;");
    asm("loc_660020F: test $5,%ah;");
    asm("loc_6600212: jp loc_6600219;");
    asm("loc_6600214: mov 0x14(%ecx),%eax;");
    asm("loc_6600217: jmp loc_660022A;");
    asm("loc_6600219: flds 4(%esp);");
    asm("loc_660021D: fcomps 0x18(%ecx);");
    asm("loc_6600220: fnstsw %ax;");
    asm("loc_6600222: test $0x41,%ah;");
    asm("loc_6600225: jne loc_660022E;");
    asm("loc_6600227: mov 0x18(%ecx),%eax;");
    asm("loc_660022A: mov %eax,4(%esp);");
    asm("loc_660022E: fcoms 0x1C(%ecx);");
    asm("loc_6600231: fnstsw %ax;");
    asm("loc_6600233: test $5,%ah;");
    asm("loc_6600236: jp loc_660023F;");
    asm("loc_6600238: fstp %st(0);");
    asm("loc_660023A: flds 0x1C(%ecx);");
    asm("loc_660023D: jmp loc_660024E;");
    asm("loc_660023F: fcoms 0x20(%ecx);");
    asm("loc_6600242: fnstsw %ax;");
    asm("loc_6600244: test $0x41,%ah;");
    asm("loc_6600247: jne loc_660024E;");
    asm("loc_6600249: fstp %st(0);");
    asm("loc_660024B: flds 0x20(%ecx);");
    asm("loc_660024E: flds 4(%esp);");
    asm("loc_6600252: mov 8(%esp),%ecx;");
    asm("loc_6600256: mov 0xC(%esp),%eax;");
    asm("loc_660025A: fstps (%ecx);");
    asm("loc_660025C: fstps (%eax);");
    asm("loc_660025E: mov %dl,%al;");
    asm("loc_6600260: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600270() // _sub_6600270
{
    __DEBUG_ASM(6600270);
    // chunk 0x6600270 _sub_6600270
    asm("loc_6600270: push %esi;");
    asm("loc_6600271: push %edi;");
    asm("loc_6600272: mov 0x10(%esp),%edi;");
    asm("loc_6600276: test %edi,%edi;");
    asm("loc_6600278: je loc_66002B1;");
    asm("loc_660027A: mov 0xC(%esp),%esi;");
    asm("loc_660027E: mov 4(%esi),%eax;");
    asm("loc_6600281: mov (%eax),%ecx;");
    asm("loc_6600283: push $0;");
    asm("loc_6600285: push $0x18;");
    asm("loc_6600287: push $0;");
    asm("loc_6600289: push %eax;");
    asm("loc_660028A: calll *0xF8(%ecx);");
    asm("loc_6600290: mov 0xC(%edi),%eax;");
    asm("loc_6600293: test %eax,%eax;");
    asm("loc_6600295: je loc_66002B1;");
    asm("loc_6600297: mov 0x2C(%eax),%ecx;");
    asm("loc_660029A: test %ecx,%ecx;");
    asm("loc_660029C: je loc_66002B1;");
    asm("loc_660029E: mov 4(%esi),%eax;");
    asm("loc_66002A1: mov (%eax),%edx;");
    asm("loc_66002A3: push $0;");
    asm("loc_66002A5: push $0x8D;");
    asm("loc_66002AA: push %eax;");
    asm("loc_66002AB: calll *0xF0(%edx);");
    asm("loc_66002B1: pop %edi;");
    asm("loc_66002B2: xor %eax,%eax;");
    asm("loc_66002B4: pop %esi;");
    asm("loc_66002B5: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_66002C0() // _sub_66002C0
{
    __DEBUG_ASM(66002C0);
    // chunk 0x66002C0 _sub_66002C0
    asm("loc_66002C0: push %ecx;");
    asm("loc_66002C1: push %ebx;");
    asm("loc_66002C2: mov _import_6601018,%ebx;");
    asm("loc_66002C8: push %ebp;");
    asm("loc_66002C9: mov _import_6601020,%ebp;");
    asm("loc_66002CF: push %esi;");
    asm("loc_66002D0: push %edi;");
    asm("loc_66002D1: mov $_data_6603720,%esi;");
    asm("loc_66002D6: movl $0xA,0x10(%esp);");
    asm("loc_66002DE: xor %edi,%edi;");
    asm("loc_66002E0: sub $0x4C,%esi;");
    asm("loc_66002E3: mov %edi,-0x28(%esi);");
    asm("loc_66002E6: mov %edi,-0x24(%esi);");
    asm("loc_66002E9: mov %edi,-0x20(%esi);");
    asm("loc_66002EC: mov %edi,-0x1C(%esi);");
    asm("loc_66002EF: mov 0x10(%esi),%eax;");
    asm("loc_66002F2: sub $5,%eax;");
    asm("loc_66002F5: je loc_66002FD;");
    asm("loc_66002F7: dec %eax;");
    asm("loc_66002F8: je loc_6600323;");
    asm("loc_66002FA: dec %eax;");
    asm("loc_66002FB: jne loc_6600310;");
    asm("loc_66002FD: mov 0x14(%esi),%eax;");
    asm("loc_6600300: cmp %edi,%eax;");
    asm("loc_6600302: je loc_6600310;");
    asm("loc_6600304: push %eax;");
    asm("loc_6600305: push %edi;");
    asm("loc_6600306: call *%ebp;");
    asm("loc_6600308: push %eax;");
    asm("loc_6600309: call *%ebx;");
    asm("loc_660030B: mov %edi,0x14(%esi);");
    asm("loc_660030E: mov %edi,%edi;");
    asm("loc_6600310: mov %edi,0x14(%esi);");
    asm("loc_6600313: mov -4(%esi),%eax;");
    asm("loc_6600316: sub $5,%eax;");
    asm("loc_6600319: je loc_6600345;");
    asm("loc_660031B: dec %eax;");
    asm("loc_660031C: je loc_6600335;");
    asm("loc_660031E: dec %eax;");
    asm("loc_660031F: je loc_6600345;");
    asm("loc_6600321: jmp loc_6600354;");
    asm("loc_6600323: mov 0x14(%esi),%eax;");
    asm("loc_6600326: cmp %edi,%eax;");
    asm("loc_6600328: mov %edi,0x14(%esi);");
    asm("loc_660032B: je loc_6600310;");
    asm("loc_660032D: mov (%eax),%ecx;");
    asm("loc_660032F: push %eax;");
    asm("loc_6600330: calll *8(%ecx);");
    asm("loc_6600333: jmp loc_6600310;");
    asm("loc_6600335: mov (%esi),%eax;");
    asm("loc_6600337: cmp %edi,%eax;");
    asm("loc_6600339: mov %edi,(%esi);");
    asm("loc_660033B: je loc_6600354;");
    asm("loc_660033D: mov (%eax),%edx;");
    asm("loc_660033F: push %eax;");
    asm("loc_6600340: calll *8(%edx);");
    asm("loc_6600343: jmp loc_6600354;");
    asm("loc_6600345: mov (%esi),%eax;");
    asm("loc_6600347: cmp %edi,%eax;");
    asm("loc_6600349: je loc_6600354;");
    asm("loc_660034B: push %eax;");
    asm("loc_660034C: push %edi;");
    asm("loc_660034D: call *%ebp;");
    asm("loc_660034F: push %eax;");
    asm("loc_6600350: call *%ebx;");
    asm("loc_6600352: mov %edi,(%esi);");
    asm("loc_6600354: mov %edi,(%esi);");
    asm("loc_6600356: mov -0x18(%esi),%eax;");
    asm("loc_6600359: sub $5,%eax;");
    asm("loc_660035C: je loc_6600364;");
    asm("loc_660035E: dec %eax;");
    asm("loc_660035F: je loc_660038D;");
    asm("loc_6600361: dec %eax;");
    asm("loc_6600362: jne loc_6600375;");
    asm("loc_6600364: mov -0x14(%esi),%eax;");
    asm("loc_6600367: cmp %edi,%eax;");
    asm("loc_6600369: je loc_6600375;");
    asm("loc_660036B: push %eax;");
    asm("loc_660036C: push %edi;");
    asm("loc_660036D: call *%ebp;");
    asm("loc_660036F: push %eax;");
    asm("loc_6600370: call *%ebx;");
    asm("loc_6600372: mov %edi,-0x14(%esi);");
    asm("loc_6600375: mov 0x10(%esp),%eax;");
    asm("loc_6600379: dec %eax;");
    asm("loc_660037A: mov %edi,-0x14(%esi);");
    asm("loc_660037D: mov %eax,0x10(%esp);");
    asm("loc_6600381: jne loc_66002E0;");
    asm("loc_6600387: pop %edi;");
    asm("loc_6600388: pop %esi;");
    asm("loc_6600389: pop %ebp;");
    asm("loc_660038A: pop %ebx;");
    asm("loc_660038B: pop %ecx;");
    asm("loc_660038C: ret;");
    asm("loc_660038D: mov -0x14(%esi),%eax;");
    asm("loc_6600390: cmp %edi,%eax;");
    asm("loc_6600392: mov %edi,-0x14(%esi);");
    asm("loc_6600395: je loc_6600375;");
    asm("loc_6600397: mov (%eax),%ecx;");
    asm("loc_6600399: push %eax;");
    asm("loc_660039A: calll *8(%ecx);");
    asm("loc_660039D: jmp loc_6600375;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_66003A0() // _sub_66003A0
{
    __DEBUG_ASM(66003A0);
    // chunk 0x66003A0 _sub_66003A0
    asm("loc_66003A0: sub $0x34,%esp;");
    asm("loc_66003A3: push %ebx;");
    asm("loc_66003A4: push %esi;");
    asm("loc_66003A5: mov 0x40(%esp),%esi;");
    asm("loc_66003A9: push %edi;");
    asm("loc_66003AA: xor %eax,%eax;");
    asm("loc_66003AC: lea 0xC(%esp),%edx;");
    asm("loc_66003B0: movl $_data_6602040,0x10(%esp);");
    asm("loc_66003B8: mov $0xB,%ecx;");
    asm("loc_66003BD: lea 0x14(%esp),%edi;");
    asm("loc_66003C1: rep stos %eax,(%edi);");
    asm("loc_66003C3: mov 0x48(%esp),%eax;");
    asm("loc_66003C7: mov (%esi),%ecx;");
    asm("loc_66003C9: push %edx;");
    asm("loc_66003CA: push %esi;");
    asm("loc_66003CB: movl $0x80000000,0x24(%esp);");
    asm("loc_66003D3: movl $1,0x28(%esp);");
    asm("loc_66003DB: movl $3,0x30(%esp);");
    asm("loc_66003E3: movl $0x8000080,0x34(%esp);");
    asm("loc_66003EB: mov %eax,0x20(%esp);");
    asm("loc_66003EF: movl $0x34,0x14(%esp);");
    asm("loc_66003F7: movl $0xFFFFFFFF,0x44(%esp);");
    asm("loc_66003FF: xor %ebx,%ebx;");
    asm("loc_6600401: calll *0x7C(%ecx);");
    asm("loc_6600404: mov %eax,%edi;");
    asm("loc_6600406: cmp $0xFFFFFFFF,%edi;");
    asm("loc_6600409: je loc_6600440;");
    asm("loc_660040B: mov (%esi),%eax;");
    asm("loc_660040D: push %ebx;");
    asm("loc_660040E: lea 0x4C(%esp),%ecx;");
    asm("loc_6600412: push %ecx;");
    asm("loc_6600413: push $4;");
    asm("loc_6600415: lea 0x50(%esp),%edx;");
    asm("loc_6600419: push %edx;");
    asm("loc_660041A: push %edi;");
    asm("loc_660041B: push %esi;");
    asm("loc_660041C: calll *0x14(%eax);");
    asm("loc_660041F: test %eax,%eax;");
    asm("loc_6600421: je loc_6600454;");
    asm("loc_6600423: cmpl $4,0x48(%esp);");
    asm("loc_6600428: jne loc_6600454;");
    asm("loc_660042A: mov 0x4C(%esp),%eax;");
    asm("loc_660042E: mov 0x44(%esp),%ecx;");
    asm("loc_6600432: mov $1,%ebx;");
    asm("loc_6600437: mov %ecx,(%eax);");
    asm("loc_6600439: mov (%esi),%edx;");
    asm("loc_660043B: push %edi;");
    asm("loc_660043C: push %esi;");
    asm("loc_660043D: calll *0x10(%edx);");
    asm("loc_6600440: xor %eax,%eax;");
    asm("loc_6600442: test %ebx,%ebx;");
    asm("loc_6600444: setne %al;");
    asm("loc_6600447: pop %edi;");
    asm("loc_6600448: pop %esi;");
    asm("loc_6600449: pop %ebx;");
    asm("loc_660044A: dec %eax;");
    asm("loc_660044B: and $0x80004005,%eax;");
    asm("loc_6600450: add $0x34,%esp;");
    asm("loc_6600453: ret;");
    asm("loc_6600454: xor %ebx,%ebx;");
    asm("loc_6600456: jmp loc_6600439;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600460() // _sub_6600460
{
    __DEBUG_ASM(6600460);
    // chunk 0x6600460 _sub_6600460
    asm("loc_6600460: sub $0x34,%esp;");
    asm("loc_6600463: push %ebx;");
    asm("loc_6600464: push %esi;");
    asm("loc_6600465: mov 0x40(%esp),%esi;");
    asm("loc_6600469: push %edi;");
    asm("loc_660046A: xor %eax,%eax;");
    asm("loc_660046C: lea 0xC(%esp),%edx;");
    asm("loc_6600470: movl $_data_6602040,0x10(%esp);");
    asm("loc_6600478: mov $0xB,%ecx;");
    asm("loc_660047D: lea 0x14(%esp),%edi;");
    asm("loc_6600481: rep stos %eax,(%edi);");
    asm("loc_6600483: mov 0x48(%esp),%eax;");
    asm("loc_6600487: mov (%esi),%ecx;");
    asm("loc_6600489: push %edx;");
    asm("loc_660048A: push %esi;");
    asm("loc_660048B: movl $0x80000000,0x24(%esp);");
    asm("loc_6600493: movl $1,0x28(%esp);");
    asm("loc_660049B: movl $3,0x30(%esp);");
    asm("loc_66004A3: movl $0x8000080,0x34(%esp);");
    asm("loc_66004AB: mov %eax,0x20(%esp);");
    asm("loc_66004AF: movl $0x34,0x14(%esp);");
    asm("loc_66004B7: movl $0xFFFFFFFF,0x44(%esp);");
    asm("loc_66004BF: xor %ebx,%ebx;");
    asm("loc_66004C1: calll *0x7C(%ecx);");
    asm("loc_66004C4: mov %eax,%edi;");
    asm("loc_66004C6: cmp $0xFFFFFFFF,%edi;");
    asm("loc_66004C9: je loc_6600500;");
    asm("loc_66004CB: mov (%esi),%eax;");
    asm("loc_66004CD: push %ebx;");
    asm("loc_66004CE: lea 0x4C(%esp),%ecx;");
    asm("loc_66004D2: push %ecx;");
    asm("loc_66004D3: push $4;");
    asm("loc_66004D5: lea 0x50(%esp),%edx;");
    asm("loc_66004D9: push %edx;");
    asm("loc_66004DA: push %edi;");
    asm("loc_66004DB: push %esi;");
    asm("loc_66004DC: calll *0x14(%eax);");
    asm("loc_66004DF: test %eax,%eax;");
    asm("loc_66004E1: je loc_6600514;");
    asm("loc_66004E3: cmpl $4,0x48(%esp);");
    asm("loc_66004E8: jne loc_6600514;");
    asm("loc_66004EA: flds 0x44(%esp);");
    asm("loc_66004EE: mov 0x4C(%esp),%eax;");
    asm("loc_66004F2: fstps (%eax);");
    asm("loc_66004F4: mov $1,%ebx;");
    asm("loc_66004F9: mov (%esi),%ecx;");
    asm("loc_66004FB: push %edi;");
    asm("loc_66004FC: push %esi;");
    asm("loc_66004FD: calll *0x10(%ecx);");
    asm("loc_6600500: xor %eax,%eax;");
    asm("loc_6600502: test %ebx,%ebx;");
    asm("loc_6600504: setne %al;");
    asm("loc_6600507: pop %edi;");
    asm("loc_6600508: pop %esi;");
    asm("loc_6600509: pop %ebx;");
    asm("loc_660050A: dec %eax;");
    asm("loc_660050B: and $0x80004005,%eax;");
    asm("loc_6600510: add $0x34,%esp;");
    asm("loc_6600513: ret;");
    asm("loc_6600514: xor %ebx,%ebx;");
    asm("loc_6600516: jmp loc_66004F9;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600520() // _sub_6600520
{
    __DEBUG_ASM(6600520);
    // chunk 0x6600520 _sub_6600520
    asm("loc_6600520: sub $0x34,%esp;");
    asm("loc_6600523: push %ebx;");
    asm("loc_6600524: push %esi;");
    asm("loc_6600525: mov 0x40(%esp),%esi;");
    asm("loc_6600529: push %edi;");
    asm("loc_660052A: xor %eax,%eax;");
    asm("loc_660052C: lea 0xC(%esp),%edx;");
    asm("loc_6600530: movl $_data_6602040,0x10(%esp);");
    asm("loc_6600538: mov $0xB,%ecx;");
    asm("loc_660053D: lea 0x14(%esp),%edi;");
    asm("loc_6600541: rep stos %eax,(%edi);");
    asm("loc_6600543: mov 0x48(%esp),%eax;");
    asm("loc_6600547: mov (%esi),%ecx;");
    asm("loc_6600549: push %edx;");
    asm("loc_660054A: push %esi;");
    asm("loc_660054B: movl $0x80000000,0x24(%esp);");
    asm("loc_6600553: movl $1,0x28(%esp);");
    asm("loc_660055B: movl $3,0x30(%esp);");
    asm("loc_6600563: movl $0x8000080,0x34(%esp);");
    asm("loc_660056B: mov %eax,0x20(%esp);");
    asm("loc_660056F: movl $0x34,0x14(%esp);");
    asm("loc_6600577: movl $0xFFFFFFFF,0x44(%esp);");
    asm("loc_660057F: xor %ebx,%ebx;");
    asm("loc_6600581: calll *0x7C(%ecx);");
    asm("loc_6600584: mov %eax,%edi;");
    asm("loc_6600586: cmp $0xFFFFFFFF,%edi;");
    asm("loc_6600589: je loc_66005E6;");
    asm("loc_660058B: mov 0x54(%esp),%ebx;");
    asm("loc_660058F: test %ebx,%ebx;");
    asm("loc_6600591: je loc_66005AD;");
    asm("loc_6600593: mov (%esi),%eax;");
    asm("loc_6600595: push $0;");
    asm("loc_6600597: push %edi;");
    asm("loc_6600598: push %esi;");
    asm("loc_6600599: calll *0x28(%eax);");
    asm("loc_660059C: mov 0x4C(%esp),%ecx;");
    asm("loc_66005A0: shr $2,%eax;");
    asm("loc_66005A3: cmp %ecx,%eax;");
    asm("loc_66005A5: jae loc_66005A9;");
    asm("loc_66005A7: mov %eax,%ecx;");
    asm("loc_66005A9: mov %ecx,(%ebx);");
    asm("loc_66005AB: jmp loc_66005B1;");
    asm("loc_66005AD: mov 0x4C(%esp),%ecx;");
    asm("loc_66005B1: mov 0x50(%esp),%eax;");
    asm("loc_66005B5: push $0;");
    asm("loc_66005B7: lea 0x4C(%esp),%edx;");
    asm("loc_66005BB: push %edx;");
    asm("loc_66005BC: lea (,%ecx,4),%ebx;");
    asm("loc_66005C3: mov (%esi),%ecx;");
    asm("loc_66005C5: push %ebx;");
    asm("loc_66005C6: push %eax;");
    asm("loc_66005C7: push %edi;");
    asm("loc_66005C8: push %esi;");
    asm("loc_66005C9: calll *0x14(%ecx);");
    asm("loc_66005CC: test %eax,%eax;");
    asm("loc_66005CE: je loc_66005DD;");
    asm("loc_66005D0: cmp %ebx,0x48(%esp);");
    asm("loc_66005D4: jne loc_66005DD;");
    asm("loc_66005D6: mov $1,%ebx;");
    asm("loc_66005DB: jmp loc_66005DF;");
    asm("loc_66005DD: xor %ebx,%ebx;");
    asm("loc_66005DF: mov (%esi),%ecx;");
    asm("loc_66005E1: push %edi;");
    asm("loc_66005E2: push %esi;");
    asm("loc_66005E3: calll *0x10(%ecx);");
    asm("loc_66005E6: xor %eax,%eax;");
    asm("loc_66005E8: test %ebx,%ebx;");
    asm("loc_66005EA: setne %al;");
    asm("loc_66005ED: pop %edi;");
    asm("loc_66005EE: pop %esi;");
    asm("loc_66005EF: pop %ebx;");
    asm("loc_66005F0: dec %eax;");
    asm("loc_66005F1: and $0x80004005,%eax;");
    asm("loc_66005F6: add $0x34,%esp;");
    asm("loc_66005F9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600600() // _sub_6600600
{
    __DEBUG_ASM(6600600);
    // chunk 0x6600600 _sub_6600600
    asm("loc_6600600: sub $0x34,%esp;");
    asm("loc_6600603: push %ebp;");
    asm("loc_6600604: push %esi;");
    asm("loc_6600605: mov 0x40(%esp),%esi;");
    asm("loc_6600609: push %edi;");
    asm("loc_660060A: xor %eax,%eax;");
    asm("loc_660060C: lea 0xC(%esp),%edx;");
    asm("loc_6600610: movl $_data_6602040,0x10(%esp);");
    asm("loc_6600618: mov $0xB,%ecx;");
    asm("loc_660061D: lea 0x14(%esp),%edi;");
    asm("loc_6600621: rep stos %eax,(%edi);");
    asm("loc_6600623: mov 0x48(%esp),%eax;");
    asm("loc_6600627: mov (%esi),%ecx;");
    asm("loc_6600629: push %edx;");
    asm("loc_660062A: push %esi;");
    asm("loc_660062B: movl $0x80000000,0x24(%esp);");
    asm("loc_6600633: movl $1,0x28(%esp);");
    asm("loc_660063B: movl $3,0x30(%esp);");
    asm("loc_6600643: movl $0x8000080,0x34(%esp);");
    asm("loc_660064B: mov %eax,0x20(%esp);");
    asm("loc_660064F: movl $0x34,0x14(%esp);");
    asm("loc_6600657: movl $0xFFFFFFFF,0x44(%esp);");
    asm("loc_660065F: xor %ebp,%ebp;");
    asm("loc_6600661: calll *0x7C(%ecx);");
    asm("loc_6600664: mov %eax,%edi;");
    asm("loc_6600666: cmp $0xFFFFFFFF,%edi;");
    asm("loc_6600669: je loc_66006BC;");
    asm("loc_660066B: push %ebx;");
    asm("loc_660066C: mov 0x50(%esp),%ebx;");
    asm("loc_6600670: test %ebx,%ebx;");
    asm("loc_6600672: jne loc_660067E;");
    asm("loc_6600674: mov (%esi),%eax;");
    asm("loc_6600676: push %ebx;");
    asm("loc_6600677: push %edi;");
    asm("loc_6600678: push %esi;");
    asm("loc_6600679: calll *0x28(%eax);");
    asm("loc_660067C: mov %eax,%ebx;");
    asm("loc_660067E: push %ebx;");
    asm("loc_660067F: call _sub_6600BB6;");
    asm("loc_6600684: add $4,%esp;");
    asm("loc_6600687: test %eax,%eax;");
    asm("loc_6600689: je loc_66006B4;");
    asm("loc_660068B: mov 0x54(%esp),%ecx;");
    asm("loc_660068F: push $0;");
    asm("loc_6600691: mov %eax,(%ecx);");
    asm("loc_6600693: mov (%esi),%edx;");
    asm("loc_6600695: lea 0x50(%esp),%ecx;");
    asm("loc_6600699: push %ecx;");
    asm("loc_660069A: push %ebx;");
    asm("loc_660069B: push %eax;");
    asm("loc_660069C: push %edi;");
    asm("loc_660069D: push %esi;");
    asm("loc_660069E: calll *0x14(%edx);");
    asm("loc_66006A1: test %eax,%eax;");
    asm("loc_66006A3: je loc_66006B2;");
    asm("loc_66006A5: cmp %ebx,0x4C(%esp);");
    asm("loc_66006A9: jne loc_66006B2;");
    asm("loc_66006AB: mov $1,%ebp;");
    asm("loc_66006B0: jmp loc_66006B4;");
    asm("loc_66006B2: xor %ebp,%ebp;");
    asm("loc_66006B4: mov (%esi),%edx;");
    asm("loc_66006B6: push %edi;");
    asm("loc_66006B7: push %esi;");
    asm("loc_66006B8: calll *0x10(%edx);");
    asm("loc_66006BB: pop %ebx;");
    asm("loc_66006BC: xor %eax,%eax;");
    asm("loc_66006BE: test %ebp,%ebp;");
    asm("loc_66006C0: setne %al;");
    asm("loc_66006C3: pop %edi;");
    asm("loc_66006C4: pop %esi;");
    asm("loc_66006C5: pop %ebp;");
    asm("loc_66006C6: dec %eax;");
    asm("loc_66006C7: and $0x80004005,%eax;");
    asm("loc_66006CC: add $0x34,%esp;");
    asm("loc_66006CF: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_66006D0() // _sub_66006D0
{
    __DEBUG_ASM(66006D0);
    // chunk 0x66006D0 _sub_66006D0
    asm("loc_66006D0: sub $0x34,%esp;");
    asm("loc_66006D3: push %ebx;");
    asm("loc_66006D4: push %esi;");
    asm("loc_66006D5: mov 0x40(%esp),%esi;");
    asm("loc_66006D9: push %edi;");
    asm("loc_66006DA: xor %eax,%eax;");
    asm("loc_66006DC: lea 0xC(%esp),%edx;");
    asm("loc_66006E0: movl $_data_6602040,0x10(%esp);");
    asm("loc_66006E8: mov $0xB,%ecx;");
    asm("loc_66006ED: lea 0x14(%esp),%edi;");
    asm("loc_66006F1: rep stos %eax,(%edi);");
    asm("loc_66006F3: mov 0x48(%esp),%eax;");
    asm("loc_66006F7: mov (%esi),%ecx;");
    asm("loc_66006F9: push %edx;");
    asm("loc_66006FA: push %esi;");
    asm("loc_66006FB: movl $1,0x28(%esp);");
    asm("loc_6600703: movl $0x8000080,0x34(%esp);");
    asm("loc_660070B: movl $0x34,0x14(%esp);");
    asm("loc_6600713: movl $0xFFFFFFFF,0x44(%esp);");
    asm("loc_660071B: xor %ebx,%ebx;");
    asm("loc_660071D: mov %eax,0x20(%esp);");
    asm("loc_6600721: movl $_data_6602C14,0x1C(%esp);");
    asm("loc_6600729: movl $0xC0000000,0x24(%esp);");
    asm("loc_6600731: movl $2,0x30(%esp);");
    asm("loc_6600739: calll *0x7C(%ecx);");
    asm("loc_660073C: mov %eax,%edi;");
    asm("loc_660073E: cmp $0xFFFFFFFF,%edi;");
    asm("loc_6600741: je loc_6600772;");
    asm("loc_6600743: mov 0x4C(%esp),%edx;");
    asm("loc_6600747: mov (%esi),%eax;");
    asm("loc_6600749: push %ebx;");
    asm("loc_660074A: lea 0x4C(%esp),%ecx;");
    asm("loc_660074E: push %ecx;");
    asm("loc_660074F: push $4;");
    asm("loc_6600751: push %edx;");
    asm("loc_6600752: push %edi;");
    asm("loc_6600753: push %esi;");
    asm("loc_6600754: calll *0x18(%eax);");
    asm("loc_6600757: test %eax,%eax;");
    asm("loc_6600759: je loc_6600769;");
    asm("loc_660075B: cmpl $4,0x48(%esp);");
    asm("loc_6600760: jne loc_6600769;");
    asm("loc_6600762: mov $1,%ebx;");
    asm("loc_6600767: jmp loc_660076B;");
    asm("loc_6600769: xor %ebx,%ebx;");
    asm("loc_660076B: mov (%esi),%eax;");
    asm("loc_660076D: push %edi;");
    asm("loc_660076E: push %esi;");
    asm("loc_660076F: calll *0x10(%eax);");
    asm("loc_6600772: xor %eax,%eax;");
    asm("loc_6600774: test %ebx,%ebx;");
    asm("loc_6600776: setne %al;");
    asm("loc_6600779: pop %edi;");
    asm("loc_660077A: pop %esi;");
    asm("loc_660077B: pop %ebx;");
    asm("loc_660077C: dec %eax;");
    asm("loc_660077D: and $0x80004005,%eax;");
    asm("loc_6600782: add $0x34,%esp;");
    asm("loc_6600785: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600790() // _sub_6600790
{
    __DEBUG_ASM(6600790);
    // chunk 0x6600790 _sub_6600790
    asm("loc_6600790: sub $0x34,%esp;");
    asm("loc_6600793: push %ebx;");
    asm("loc_6600794: push %esi;");
    asm("loc_6600795: mov 0x40(%esp),%esi;");
    asm("loc_6600799: push %edi;");
    asm("loc_660079A: xor %eax,%eax;");
    asm("loc_660079C: lea 0xC(%esp),%edx;");
    asm("loc_66007A0: movl $_data_6602040,0x10(%esp);");
    asm("loc_66007A8: mov $0xB,%ecx;");
    asm("loc_66007AD: lea 0x14(%esp),%edi;");
    asm("loc_66007B1: rep stos %eax,(%edi);");
    asm("loc_66007B3: mov 0x48(%esp),%eax;");
    asm("loc_66007B7: mov (%esi),%ecx;");
    asm("loc_66007B9: push %edx;");
    asm("loc_66007BA: push %esi;");
    asm("loc_66007BB: movl $1,0x28(%esp);");
    asm("loc_66007C3: movl $0x8000080,0x34(%esp);");
    asm("loc_66007CB: movl $0x34,0x14(%esp);");
    asm("loc_66007D3: movl $0xFFFFFFFF,0x44(%esp);");
    asm("loc_66007DB: xor %ebx,%ebx;");
    asm("loc_66007DD: mov %eax,0x20(%esp);");
    asm("loc_66007E1: movl $_data_6602C14,0x1C(%esp);");
    asm("loc_66007E9: movl $0xC0000000,0x24(%esp);");
    asm("loc_66007F1: movl $2,0x30(%esp);");
    asm("loc_66007F9: calll *0x7C(%ecx);");
    asm("loc_66007FC: mov %eax,%edi;");
    asm("loc_66007FE: cmp $0xFFFFFFFF,%edi;");
    asm("loc_6600801: je loc_660083C;");
    asm("loc_6600803: mov 0x4C(%esp),%eax;");
    asm("loc_6600807: mov (%esi),%ecx;");
    asm("loc_6600809: push $0;");
    asm("loc_660080B: lea 0x4C(%esp),%edx;");
    asm("loc_660080F: push %edx;");
    asm("loc_6600810: lea (,%eax,4),%ebx;");
    asm("loc_6600817: mov 0x58(%esp),%eax;");
    asm("loc_660081B: push %ebx;");
    asm("loc_660081C: push %eax;");
    asm("loc_660081D: push %edi;");
    asm("loc_660081E: push %esi;");
    asm("loc_660081F: calll *0x18(%ecx);");
    asm("loc_6600822: test %eax,%eax;");
    asm("loc_6600824: je loc_6600833;");
    asm("loc_6600826: cmp %ebx,0x48(%esp);");
    asm("loc_660082A: jne loc_6600833;");
    asm("loc_660082C: mov $1,%ebx;");
    asm("loc_6600831: jmp loc_6600835;");
    asm("loc_6600833: xor %ebx,%ebx;");
    asm("loc_6600835: mov (%esi),%ecx;");
    asm("loc_6600837: push %edi;");
    asm("loc_6600838: push %esi;");
    asm("loc_6600839: calll *0x10(%ecx);");
    asm("loc_660083C: xor %eax,%eax;");
    asm("loc_660083E: test %ebx,%ebx;");
    asm("loc_6600840: setne %al;");
    asm("loc_6600843: pop %edi;");
    asm("loc_6600844: pop %esi;");
    asm("loc_6600845: pop %ebx;");
    asm("loc_6600846: dec %eax;");
    asm("loc_6600847: and $0x80004005,%eax;");
    asm("loc_660084C: add $0x34,%esp;");
    asm("loc_660084F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600850() // _sub_6600850
{
    __DEBUG_ASM(6600850);
    // chunk 0x6600850 _sub_6600850
    asm("loc_6600850: sub $0x34,%esp;");
    asm("loc_6600853: push %ebx;");
    asm("loc_6600854: push %esi;");
    asm("loc_6600855: mov 0x40(%esp),%esi;");
    asm("loc_6600859: push %edi;");
    asm("loc_660085A: xor %eax,%eax;");
    asm("loc_660085C: lea 0xC(%esp),%edx;");
    asm("loc_6600860: movl $_data_6602040,0x10(%esp);");
    asm("loc_6600868: mov $0xB,%ecx;");
    asm("loc_660086D: lea 0x14(%esp),%edi;");
    asm("loc_6600871: rep stos %eax,(%edi);");
    asm("loc_6600873: mov 0x48(%esp),%eax;");
    asm("loc_6600877: mov (%esi),%ecx;");
    asm("loc_6600879: push %edx;");
    asm("loc_660087A: push %esi;");
    asm("loc_660087B: movl $1,0x28(%esp);");
    asm("loc_6600883: movl $0x8000080,0x34(%esp);");
    asm("loc_660088B: movl $0x34,0x14(%esp);");
    asm("loc_6600893: movl $0xFFFFFFFF,0x44(%esp);");
    asm("loc_660089B: xor %ebx,%ebx;");
    asm("loc_660089D: mov %eax,0x20(%esp);");
    asm("loc_66008A1: movl $_data_6602C14,0x1C(%esp);");
    asm("loc_66008A9: movl $0xC0000000,0x24(%esp);");
    asm("loc_66008B1: movl $2,0x30(%esp);");
    asm("loc_66008B9: calll *0x7C(%ecx);");
    asm("loc_66008BC: mov %eax,%edi;");
    asm("loc_66008BE: cmp $0xFFFFFFFF,%edi;");
    asm("loc_66008C1: je loc_66008F4;");
    asm("loc_66008C3: mov 0x50(%esp),%edx;");
    asm("loc_66008C7: mov (%esi),%eax;");
    asm("loc_66008C9: push %ebx;");
    asm("loc_66008CA: mov 0x50(%esp),%ebx;");
    asm("loc_66008CE: lea 0x4C(%esp),%ecx;");
    asm("loc_66008D2: push %ecx;");
    asm("loc_66008D3: push %ebx;");
    asm("loc_66008D4: push %edx;");
    asm("loc_66008D5: push %edi;");
    asm("loc_66008D6: push %esi;");
    asm("loc_66008D7: calll *0x18(%eax);");
    asm("loc_66008DA: test %eax,%eax;");
    asm("loc_66008DC: je loc_66008EB;");
    asm("loc_66008DE: cmp %ebx,0x48(%esp);");
    asm("loc_66008E2: jne loc_66008EB;");
    asm("loc_66008E4: mov $1,%ebx;");
    asm("loc_66008E9: jmp loc_66008ED;");
    asm("loc_66008EB: xor %ebx,%ebx;");
    asm("loc_66008ED: mov (%esi),%eax;");
    asm("loc_66008EF: push %edi;");
    asm("loc_66008F0: push %esi;");
    asm("loc_66008F1: calll *0x10(%eax);");
    asm("loc_66008F4: xor %eax,%eax;");
    asm("loc_66008F6: test %ebx,%ebx;");
    asm("loc_66008F8: setne %al;");
    asm("loc_66008FB: pop %edi;");
    asm("loc_66008FC: pop %esi;");
    asm("loc_66008FD: pop %ebx;");
    asm("loc_66008FE: dec %eax;");
    asm("loc_66008FF: and $0x80004005,%eax;");
    asm("loc_6600904: add $0x34,%esp;");
    asm("loc_6600907: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600910() // _sub_6600910
{
    __DEBUG_ASM(6600910);
    // chunk 0x6600910 _sub_6600910
    asm("loc_6600910: mov _off_6601588,%eax;");
    asm("loc_6600915: push %ebx;");
    asm("loc_6600916: push %ebp;");
    asm("loc_6600917: push %esi;");
    asm("loc_6600918: push %edi;");
    asm("loc_6600919: xor %edi,%edi;");
    asm("loc_660091B: test %eax,%eax;");
    asm("loc_660091D: je loc_6600962;");
    asm("loc_660091F: mov 0x18(%esp),%ebp;");
    asm("loc_6600923: mov %ebp,%esi;");
    asm("loc_6600925: mov (%eax),%dl;");
    asm("loc_6600927: mov (%esi),%bl;");
    asm("loc_6600929: mov %dl,%cl;");
    asm("loc_660092B: cmp %bl,%dl;");
    asm("loc_660092D: jne loc_660094D;");
    asm("loc_660092F: test %cl,%cl;");
    asm("loc_6600931: je loc_6600949;");
    asm("loc_6600933: mov 1(%eax),%dl;");
    asm("loc_6600936: mov 1(%esi),%bl;");
    asm("loc_6600939: mov %dl,%cl;");
    asm("loc_660093B: cmp %bl,%dl;");
    asm("loc_660093D: jne loc_660094D;");
    asm("loc_660093F: add $2,%eax;");
    asm("loc_6600942: add $2,%esi;");
    asm("loc_6600945: test %cl,%cl;");
    asm("loc_6600947: jne loc_6600925;");
    asm("loc_6600949: xor %eax,%eax;");
    asm("loc_660094B: jmp loc_6600952;");
    asm("loc_660094D: sbb %eax,%eax;");
    asm("loc_660094F: sbb $0xFFFFFFFF,%eax;");
    asm("loc_6600952: test %eax,%eax;");
    asm("loc_6600954: je loc_6600978;");
    asm("loc_6600956: mov _data_6601590(,%edi,8),%eax;");
    asm("loc_660095D: inc %edi;");
    asm("loc_660095E: test %eax,%eax;");
    asm("loc_6600960: jne loc_6600923;");
    asm("loc_6600962: mov 0x1C(%esp),%ecx;");
    asm("loc_6600966: pop %edi;");
    asm("loc_6600967: pop %esi;");
    asm("loc_6600968: pop %ebp;");
    asm("loc_6600969: movl $0,(%ecx);");
    asm("loc_660096F: mov $0xFFFFFFFD,%eax;");
    asm("loc_6600974: pop %ebx;");
    asm("loc_6600975: ret $0xC;");
    asm("loc_6600978: mov _data_660158C(,%edi,8),%eax;");
    asm("loc_660097F: test %eax,%eax;");
    asm("loc_6600981: mov 0x14(%esp),%ecx;");
    asm("loc_6600985: jns loc_66009A7;");
    asm("loc_6600987: mov 8(%ecx),%edx;");
    asm("loc_660098A: and $0x7FFFFFFF,%eax;");
    asm("loc_660098F: mov (%eax,%edx),%esi;");
    asm("loc_6600992: mov (%esi),%edx;");
    asm("loc_6600994: push %esi;");
    asm("loc_6600995: calll *4(%edx);");
    asm("loc_6600998: mov 0x1C(%esp),%eax;");
    asm("loc_660099C: pop %edi;");
    asm("loc_660099D: mov %esi,(%eax);");
    asm("loc_660099F: pop %esi;");
    asm("loc_66009A0: pop %ebp;");
    asm("loc_66009A1: xor %eax,%eax;");
    asm("loc_66009A3: pop %ebx;");
    asm("loc_66009A4: ret $0xC;");
    asm("loc_66009A7: mov 8(%ecx),%esi;");
    asm("loc_66009AA: mov (%esi,%eax),%edx;");
    asm("loc_66009AD: add %eax,%esi;");
    asm("loc_66009AF: push %esi;");
    asm("loc_66009B0: calll *4(%edx);");
    asm("loc_66009B3: mov 0x1C(%esp),%eax;");
    asm("loc_66009B7: pop %edi;");
    asm("loc_66009B8: mov %esi,(%eax);");
    asm("loc_66009BA: pop %esi;");
    asm("loc_66009BB: pop %ebp;");
    asm("loc_66009BC: xor %eax,%eax;");
    asm("loc_66009BE: pop %ebx;");
    asm("loc_66009BF: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_66009D0() // _sub_66009D0
{
    __DEBUG_ASM(66009D0);
    // chunk 0x66009D0 _sub_66009D0
    asm("loc_66009D0: mov 4(%esp),%ecx;");
    asm("loc_66009D4: mov 4(%ecx),%eax;");
    asm("loc_66009D7: test %eax,%eax;");
    asm("loc_66009D9: jbe loc_66009DF;");
    asm("loc_66009DB: dec %eax;");
    asm("loc_66009DC: mov %eax,4(%ecx);");
    asm("loc_66009DF: mov 4(%ecx),%eax;");
    asm("loc_66009E2: test %eax,%eax;");
    asm("loc_66009E4: jne loc_66009FD;");
    asm("loc_66009E6: movl $1,4(%ecx);");
    asm("loc_66009ED: mov 8(%ecx),%ecx;");
    asm("loc_66009F0: test %ecx,%ecx;");
    asm("loc_66009F2: je loc_66009FB;");
    asm("loc_66009F4: mov (%ecx),%eax;");
    asm("loc_66009F6: push $1;");
    asm("loc_66009F8: calll *0x54(%eax);");
    asm("loc_66009FB: xor %eax,%eax;");
    asm("loc_66009FD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600A00() // _sub_6600A00
{
    __DEBUG_ASM(6600A00);
    // chunk 0x6600A00 _sub_6600A00
    asm("loc_6600A00: mov 4(%esp),%eax;");
    asm("loc_6600A04: mov 0x68(%eax),%eax;");
    asm("loc_6600A07: mov (%eax),%ecx;");
    asm("loc_6600A09: mov %eax,4(%esp);");
    asm("loc_6600A0D: jmpl *(%ecx);");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600A10() // _sub_6600A10
{
    __DEBUG_ASM(6600A10);
    // chunk 0x6600A10 _sub_6600A10
    asm("loc_6600A10: mov 4(%esp),%eax;");
    asm("loc_6600A14: mov 0x68(%eax),%eax;");
    asm("loc_6600A17: mov (%eax),%ecx;");
    asm("loc_6600A19: mov %eax,4(%esp);");
    asm("loc_6600A1D: jmpl *4(%ecx);");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600A20() // _sub_6600A20
{
    __DEBUG_ASM(6600A20);
    // chunk 0x6600A20 _sub_6600A20
    asm("loc_6600A20: mov 4(%esp),%eax;");
    asm("loc_6600A24: mov 0x68(%eax),%eax;");
    asm("loc_6600A27: mov (%eax),%ecx;");
    asm("loc_6600A29: mov %eax,4(%esp);");
    asm("loc_6600A2D: jmpl *8(%ecx);");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600A30() // _sub_6600A30
{
    __DEBUG_ASM(6600A30);
    // chunk 0x6600A30 _sub_6600A30
    asm("loc_6600A30: push %ebx;");
    asm("loc_6600A31: push %ebp;");
    asm("loc_6600A32: push %esi;");
    asm("loc_6600A33: push %edi;");
    asm("loc_6600A34: mov %ecx,%edi;");
    asm("loc_6600A36: mov 0x1C(%edi),%eax;");
    asm("loc_6600A39: xor %ebp,%ebp;");
    asm("loc_6600A3B: test %eax,%eax;");
    asm("loc_6600A3D: movl $_off_6601598,(%edi);");
    asm("loc_6600A43: jbe loc_6600A71;");
    asm("loc_6600A45: xor %ebx,%ebx;");
    asm("loc_6600A47: mov 0x18(%edi),%esi;");
    asm("loc_6600A4A: mov 4(%esi,%ebx),%eax;");
    asm("loc_6600A4E: mov 8(%edi),%ecx;");
    asm("loc_6600A51: add %ebx,%esi;");
    asm("loc_6600A53: cmp $0xFFFFFFFF,%eax;");
    asm("loc_6600A56: je loc_6600A66;");
    asm("loc_6600A58: mov (%ecx),%edx;");
    asm("loc_6600A5A: push %eax;");
    asm("loc_6600A5B: push %ecx;");
    asm("loc_6600A5C: calll *0x40(%edx);");
    asm("loc_6600A5F: movl $0xFFFFFFFF,4(%esi);");
    asm("loc_6600A66: mov 0x1C(%edi),%eax;");
    asm("loc_6600A69: inc %ebp;");
    asm("loc_6600A6A: add $0x2C,%ebx;");
    asm("loc_6600A6D: cmp %eax,%ebp;");
    asm("loc_6600A6F: jb loc_6600A47;");
    asm("loc_6600A71: mov 0x18(%edi),%ecx;");
    asm("loc_6600A74: test %ecx,%ecx;");
    asm("loc_6600A76: je loc_6600AB1;");
    asm("loc_6600A78: mov -4(%ecx),%eax;");
    asm("loc_6600A7B: lea -4(%ecx),%ebp;");
    asm("loc_6600A7E: mov %eax,%esi;");
    asm("loc_6600A80: imul $0x2C,%esi;");
    asm("loc_6600A83: add %ecx,%esi;");
    asm("loc_6600A85: dec %eax;");
    asm("loc_6600A86: js loc_6600AA8;");
    asm("loc_6600A88: lea 1(%eax),%ebx;");
    asm("loc_6600A8B: nop;");
    asm("loc_6600A8C: lea (%esp),%esp;");
    asm("loc_6600A90: mov -0x2C(%esi),%eax;");
    asm("loc_6600A93: sub $0x2C,%esi;");
    asm("loc_6600A96: push %eax;");
    asm("loc_6600A97: call _sub_6600BB0;");
    asm("loc_6600A9C: add $4,%esp;");
    asm("loc_6600A9F: dec %ebx;");
    asm("loc_6600AA0: movl $0,(%esi);");
    asm("loc_6600AA6: jne loc_6600A90;");
    asm("loc_6600AA8: push %ebp;");
    asm("loc_6600AA9: call _sub_6600BB0;");
    asm("loc_6600AAE: add $4,%esp;");
    asm("loc_6600AB1: mov 0x14(%edi),%ecx;");
    asm("loc_6600AB4: xor %eax,%eax;");
    asm("loc_6600AB6: push %ecx;");
    asm("loc_6600AB7: mov %eax,0x18(%edi);");
    asm("loc_6600ABA: mov %eax,8(%edi);");
    asm("loc_6600ABD: mov %eax,4(%edi);");
    asm("loc_6600AC0: mov %eax,0xC(%edi);");
    asm("loc_6600AC3: call _sub_6600BB0;");
    asm("loc_6600AC8: mov 0x18(%esp),%al;");
    asm("loc_6600ACC: add $4,%esp;");
    asm("loc_6600ACF: test $1,%al;");
    asm("loc_6600AD1: movl $0,0x14(%edi);");
    asm("loc_6600AD8: je loc_6600AE3;");
    asm("loc_6600ADA: push %edi;");
    asm("loc_6600ADB: call _sub_6600BB0;");
    asm("loc_6600AE0: add $4,%esp;");
    asm("loc_6600AE3: mov %edi,%eax;");
    asm("loc_6600AE5: pop %edi;");
    asm("loc_6600AE6: pop %esi;");
    asm("loc_6600AE7: pop %ebp;");
    asm("loc_6600AE8: pop %ebx;");
    asm("loc_6600AE9: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600AF0() // _sub_6600AF0
{
    __DEBUG_ASM(6600AF0);
    // chunk 0x6600AF0 _sub_6600AF0
    asm("loc_6600AF0: push %esi;");
    asm("loc_6600AF1: mov 8(%esp),%esi;");
    asm("loc_6600AF5: mov 4(%esi),%eax;");
    asm("loc_6600AF8: mov (%eax),%ecx;");
    asm("loc_6600AFA: lea 0x20(%esi),%edx;");
    asm("loc_6600AFD: push %edx;");
    asm("loc_6600AFE: push %eax;");
    asm("loc_6600AFF: calll *0xAC(%ecx);");
    asm("loc_6600B05: mov 0xC(%esp),%eax;");
    asm("loc_6600B09: test %eax,%eax;");
    asm("loc_6600B0B: je loc_6600B2E;");
    asm("loc_6600B0D: mov 0xC(%eax),%eax;");
    asm("loc_6600B10: test %eax,%eax;");
    asm("loc_6600B12: je loc_6600B2E;");
    asm("loc_6600B14: mov 0x2C(%eax),%ecx;");
    asm("loc_6600B17: test %ecx,%ecx;");
    asm("loc_6600B19: je loc_6600B2E;");
    asm("loc_6600B1B: mov 4(%esi),%esi;");
    asm("loc_6600B1E: mov (%esi),%eax;");
    asm("loc_6600B20: push $1;");
    asm("loc_6600B22: push $0x8D;");
    asm("loc_6600B27: push %esi;");
    asm("loc_6600B28: calll *0xF0(%eax);");
    asm("loc_6600B2E: xor %eax,%eax;");
    asm("loc_6600B30: pop %esi;");
    asm("loc_6600B31: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600B40() // _sub_6600B40
{
    __DEBUG_ASM(6600B40);
    // chunk 0x6600B40 _sub_6600B40
    asm("loc_6600B40: mov 8(%esp),%eax;");
    asm("loc_6600B44: test %eax,%eax;");
    asm("loc_6600B46: je loc_6600B6D;");
    asm("loc_6600B48: mov 0xC(%eax),%eax;");
    asm("loc_6600B4B: test %eax,%eax;");
    asm("loc_6600B4D: je loc_6600B6D;");
    asm("loc_6600B4F: mov 0x2C(%eax),%ecx;");
    asm("loc_6600B52: test %ecx,%ecx;");
    asm("loc_6600B54: je loc_6600B6D;");
    asm("loc_6600B56: mov 4(%esp),%eax;");
    asm("loc_6600B5A: mov 4(%eax),%eax;");
    asm("loc_6600B5D: mov (%eax),%ecx;");
    asm("loc_6600B5F: push $0;");
    asm("loc_6600B61: push $0x8D;");
    asm("loc_6600B66: push %eax;");
    asm("loc_6600B67: calll *0xF0(%ecx);");
    asm("loc_6600B6D: xor %eax,%eax;");
    asm("loc_6600B6F: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600B80() // _sub_6600B80
{
    __DEBUG_ASM(6600B80);
    // chunk 0x6600B80 _sub_6600B80
    asm("loc_6600B80: mov 4(%esp),%eax;");
    asm("loc_6600B84: test %eax,%eax;");
    asm("loc_6600B86: je loc_6600B8E;");
    asm("loc_6600B88: movl $0,(%eax);");
    asm("loc_6600B8E: xor %eax,%eax;");
    asm("loc_6600B90: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600BA0() // _sub_6600BA0
{
    __DEBUG_ASM(6600BA0);
    // chunk 0x6600BA0 _sub_6600BA0
    asm("loc_6600BA0: xor %eax,%eax;");
    asm("loc_6600BA2: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600BB0() // ??3@YAXPAX@Z
{
    __DEBUG_ASM(6600BB0);
    // chunk 0x6600BB0 _sub_6600BB0
    asm("loc_6600BB0: jmpl *_import_6601064;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600BB6() // ??2@YAPAXI@Z
{
    __DEBUG_ASM(6600BB6);
    // chunk 0x6600BB6 _sub_6600BB6
    asm("loc_6600BB6: jmpl *_import_6601060;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600BBC() // _purecall
{
    __DEBUG_ASM(6600BBC);
    // chunk 0x6600BBC _sub_6600BBC
    asm("loc_6600BBC: jmpl *_import_660105C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600BC2() // __onexit
{
    __DEBUG_ASM(6600BC2);
    // chunk 0x6600BC2 _sub_6600BC2
    asm("loc_6600BC2: cmpl $0xFFFFFFFF,_data_6603B10;");
    asm("loc_6600BC9: jne loc_6600BD7;");
    asm("loc_6600BCB: pushl 4(%esp);");
    asm("loc_6600BCF: calll *_import_6601070;");
    asm("loc_6600BD5: pop %ecx;");
    asm("loc_6600BD6: ret;");
    asm("loc_6600BD7: push $_data_6603B0C;");
    asm("loc_6600BDC: push $_data_6603B10;");
    asm("loc_6600BE1: pushl 0xC(%esp);");
    asm("loc_6600BE5: call _sub_6600D7E;");
    asm("loc_6600BEA: add $0xC,%esp;");
    asm("loc_6600BED: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600BEE() // _atexit
{
    __DEBUG_ASM(6600BEE);
    // chunk 0x6600BEE _sub_6600BEE
    asm("loc_6600BEE: pushl 4(%esp);");
    asm("loc_6600BF2: call _sub_6600BC2;");
    asm("loc_6600BF7: neg %eax;");
    asm("loc_6600BF9: sbb %eax,%eax;");
    asm("loc_6600BFB: pop %ecx;");
    asm("loc_6600BFC: neg %eax;");
    asm("loc_6600BFE: dec %eax;");
    asm("loc_6600BFF: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600C00() // __alloca_probe
{
    __DEBUG_ASM(6600C00);
    // chunk 0x6600C00 _sub_6600C00
    asm("loc_6600C00: push %ecx;");
    asm("loc_6600C01: cmp $0x1000,%eax;");
    asm("loc_6600C06: lea 8(%esp),%ecx;");
    asm("loc_6600C0A: jb loc_6600C20;");
    asm("loc_6600C0C: sub $0x1000,%ecx;");
    asm("loc_6600C12: sub $0x1000,%eax;");
    asm("loc_6600C17: test %eax,(%ecx);");
    asm("loc_6600C19: cmp $0x1000,%eax;");
    asm("loc_6600C1E: jae loc_6600C0C;");
    asm("loc_6600C20: sub %eax,%ecx;");
    asm("loc_6600C22: mov %esp,%eax;");
    asm("loc_6600C24: test %eax,(%ecx);");
    asm("loc_6600C26: mov %ecx,%esp;");
    asm("loc_6600C28: mov (%eax),%ecx;");
    asm("loc_6600C2A: mov 4(%eax),%eax;");
    asm("loc_6600C2D: push %eax;");
    asm("loc_6600C2E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600C30() // _CIacos
{
    __DEBUG_ASM(6600C30);
    // chunk 0x6600C30 _sub_6600C30
    asm("loc_6600C30: jmpl *_import_6601030;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600C36() // __CRT_INIT@12
{
    __DEBUG_ASM(6600C36);
    // chunk 0x6600C36 _sub_6600C36
    asm("loc_6600C36: mov 8(%esp),%eax;");
    asm("loc_6600C3A: test %eax,%eax;");
    asm("loc_6600C3C: jne loc_6600C4C;");
    asm("loc_6600C3E: cmp %eax,_data_66033EC;");
    asm("loc_6600C44: jle loc_6600C74;");
    asm("loc_6600C46: decl _data_66033EC;");
    asm("loc_6600C4C: mov _import_660104C,%ecx;");
    asm("loc_6600C52: cmp $1,%eax;");
    asm("loc_6600C55: mov (%ecx),%ecx;");
    asm("loc_6600C57: mov %ecx,_data_6603B04;");
    asm("loc_6600C5D: jne loc_6600C9E;");
    asm("loc_6600C5F: push $0x80;");
    asm("loc_6600C64: calll *_import_6601048;");
    asm("loc_6600C6A: test %eax,%eax;");
    asm("loc_6600C6C: pop %ecx;");
    asm("loc_6600C6D: mov %eax,_data_6603B10;");
    asm("loc_6600C72: jne loc_6600C78;");
    asm("loc_6600C74: xor %eax,%eax;");
    asm("loc_6600C76: jmp loc_6600CDE;");
    asm("loc_6600C78: andl $0,(%eax);");
    asm("loc_6600C7B: mov _data_6603B10,%eax;");
    asm("loc_6600C80: push $_data_6602014;");
    asm("loc_6600C85: push $_data_6602000;");
    asm("loc_6600C8A: mov %eax,_data_6603B0C;");
    asm("loc_6600C8F: call _sub_6600D84;");
    asm("loc_6600C94: incl _data_66033EC;");
    asm("loc_6600C9A: pop %ecx;");
    asm("loc_6600C9B: pop %ecx;");
    asm("loc_6600C9C: jmp loc_6600CDB;");
    asm("loc_6600C9E: test %eax,%eax;");
    asm("loc_6600CA0: jne loc_6600CDB;");
    asm("loc_6600CA2: mov _data_6603B10,%eax;");
    asm("loc_6600CA7: test %eax,%eax;");
    asm("loc_6600CA9: je loc_6600CDB;");
    asm("loc_6600CAB: mov _data_6603B0C,%ecx;");
    asm("loc_6600CB1: push %esi;");
    asm("loc_6600CB2: lea -4(%ecx),%esi;");
    asm("loc_6600CB5: cmp %eax,%esi;");
    asm("loc_6600CB7: jb loc_6600CCB;");
    asm("loc_6600CB9: mov (%esi),%ecx;");
    asm("loc_6600CBB: test %ecx,%ecx;");
    asm("loc_6600CBD: je loc_6600CC6;");
    asm("loc_6600CBF: call *%ecx;");
    asm("loc_6600CC1: mov _data_6603B10,%eax;");
    asm("loc_6600CC6: sub $4,%esi;");
    asm("loc_6600CC9: jmp loc_6600CB5;");
    asm("loc_6600CCB: push %eax;");
    asm("loc_6600CCC: calll *_import_6601074;");
    asm("loc_6600CD2: andl $0,_data_6603B10;");
    asm("loc_6600CD9: pop %ecx;");
    asm("loc_6600CDA: pop %esi;");
    asm("loc_6600CDB: push $1;");
    asm("loc_6600CDD: pop %eax;");
    asm("loc_6600CDE: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600CE1() // _DllEntryPoint
{
    __DEBUG_ASM(6600CE1);
    // chunk 0x6600CE1 _sub_6600CE1
    asm("loc_6600CE1: push %ebp;");
    asm("loc_6600CE2: mov %esp,%ebp;");
    asm("loc_6600CE4: push %ebx;");
    asm("loc_6600CE5: mov 8(%ebp),%ebx;");
    asm("loc_6600CE8: push %esi;");
    asm("loc_6600CE9: mov 0xC(%ebp),%esi;");
    asm("loc_6600CEC: push %edi;");
    asm("loc_6600CED: mov 0x10(%ebp),%edi;");
    asm("loc_6600CF0: test %esi,%esi;");
    asm("loc_6600CF2: jne loc_6600CFD;");
    asm("loc_6600CF4: cmpl $0,_data_66033EC;");
    asm("loc_6600CFB: jmp loc_6600D23;");
    asm("loc_6600CFD: cmp $1,%esi;");
    asm("loc_6600D00: je loc_6600D07;");
    asm("loc_6600D02: cmp $2,%esi;");
    asm("loc_6600D05: jne loc_6600D29;");
    asm("loc_6600D07: mov _data_6603B08,%eax;");
    asm("loc_6600D0C: test %eax,%eax;");
    asm("loc_6600D0E: je loc_6600D19;");
    asm("loc_6600D10: push %edi;");
    asm("loc_6600D11: push %esi;");
    asm("loc_6600D12: push %ebx;");
    asm("loc_6600D13: call *%eax;");
    asm("loc_6600D15: test %eax,%eax;");
    asm("loc_6600D17: je loc_6600D25;");
    asm("loc_6600D19: push %edi;");
    asm("loc_6600D1A: push %esi;");
    asm("loc_6600D1B: push %ebx;");
    asm("loc_6600D1C: call _sub_6600C36;");
    asm("loc_6600D21: test %eax,%eax;");
    asm("loc_6600D23: jne loc_6600D29;");
    asm("loc_6600D25: xor %eax,%eax;");
    asm("loc_6600D27: jmp loc_6600D77;");
    asm("loc_6600D29: push %edi;");
    asm("loc_6600D2A: push %esi;");
    asm("loc_6600D2B: push %ebx;");
    asm("loc_6600D2C: call _sub_65F2250;");
    asm("loc_6600D31: cmp $1,%esi;");
    asm("loc_6600D34: mov %eax,0xC(%ebp);");
    asm("loc_6600D37: jne loc_6600D45;");
    asm("loc_6600D39: test %eax,%eax;");
    asm("loc_6600D3B: jne loc_6600D74;");
    asm("loc_6600D3D: push %edi;");
    asm("loc_6600D3E: push %eax;");
    asm("loc_6600D3F: push %ebx;");
    asm("loc_6600D40: call _sub_6600C36;");
    asm("loc_6600D45: test %esi,%esi;");
    asm("loc_6600D47: je loc_6600D4E;");
    asm("loc_6600D49: cmp $3,%esi;");
    asm("loc_6600D4C: jne loc_6600D74;");
    asm("loc_6600D4E: push %edi;");
    asm("loc_6600D4F: push %esi;");
    asm("loc_6600D50: push %ebx;");
    asm("loc_6600D51: call _sub_6600C36;");
    asm("loc_6600D56: test %eax,%eax;");
    asm("loc_6600D58: jne loc_6600D5D;");
    asm("loc_6600D5A: and %eax,0xC(%ebp);");
    asm("loc_6600D5D: cmpl $0,0xC(%ebp);");
    asm("loc_6600D61: je loc_6600D74;");
    asm("loc_6600D63: mov _data_6603B08,%eax;");
    asm("loc_6600D68: test %eax,%eax;");
    asm("loc_6600D6A: je loc_6600D74;");
    asm("loc_6600D6C: push %edi;");
    asm("loc_6600D6D: push %esi;");
    asm("loc_6600D6E: push %ebx;");
    asm("loc_6600D6F: call *%eax;");
    asm("loc_6600D71: mov %eax,0xC(%ebp);");
    asm("loc_6600D74: mov 0xC(%ebp),%eax;");
    asm("loc_6600D77: pop %edi;");
    asm("loc_6600D78: pop %esi;");
    asm("loc_6600D79: pop %ebx;");
    asm("loc_6600D7A: pop %ebp;");
    asm("loc_6600D7B: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600D7E() // __dllonexit
{
    __DEBUG_ASM(6600D7E);
    // chunk 0x6600D7E _sub_6600D7E
    asm("loc_6600D7E: jmpl *_import_660106C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600D84() // _initterm
{
    __DEBUG_ASM(6600D84);
    // chunk 0x6600D84 _sub_6600D84
    asm("loc_6600D84: jmpl *_import_6601068;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600D90() // _sub_6600D90
{
    __DEBUG_ASM(6600D90);
    // chunk 0x6600D90 _sub_6600D90
    asm("loc_6600D90: mov $_data_6602C30,%eax;");
    asm("loc_6600D95: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600DA0() // _sub_6600DA0
{
    __DEBUG_ASM(6600DA0);
    // chunk 0x6600DA0 _sub_6600DA0
    asm("loc_6600DA0: call _sub_6600D90;");
    asm("loc_6600DA5: mov 4(%esp),%edx;");
    asm("loc_6600DA9: mov %eax,%ecx;");
    asm("loc_6600DAB: xor %eax,%eax;");
    asm("loc_6600DAD: cmp %edx,(%ecx,%eax,4);");
    asm("loc_6600DB0: je loc_6600DBA;");
    asm("loc_6600DB2: inc %eax;");
    asm("loc_6600DB3: cmp $0x16,%eax;");
    asm("loc_6600DB6: jl loc_6600DAD;");
    asm("loc_6600DB8: xor %eax,%eax;");
    asm("loc_6600DBA: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600DC0() // _sub_6600DC0
{
    __DEBUG_ASM(6600DC0);
    // chunk 0x6600DC0 _sub_6600DC0
    asm("loc_6600DC0: mov 4(%esp),%eax;");
    asm("loc_6600DC4: cmp $0xE,%eax;");
    asm("loc_6600DC7: jle loc_6600DCF;");
    asm("loc_6600DC9: mov $_data_6602C88,%eax;");
    asm("loc_6600DCE: ret;");
    asm("loc_6600DCF: lea (%eax,%eax,8),%ecx;");
    asm("loc_6600DD2: lea (%eax,%ecx,2),%edx;");
    asm("loc_6600DD5: lea _data_6602C88(,%edx,4),%eax;");
    asm("loc_6600DDC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_6600DE0() // _sub_6600DE0
{
    __DEBUG_ASM(6600DE0);
    // chunk 0x6600DE0 _sub_6600DE0
    asm("loc_6600DE0: sub $0x10,%esp;");
    asm("loc_6600DE3: movl $_data_66030FC,8(%esp);");
    asm("loc_6600DEB: movl $0,0xC(%esp);");
    asm("loc_6600DF3: movl $0xC,4(%esp);");
    asm("loc_6600DFB: calll *_import_6601000;");
    asm("loc_6600E01: mov (%eax),%ecx;");
    asm("loc_6600E03: lea (%esp),%edx;");
    asm("loc_6600E07: push %edx;");
    asm("loc_6600E08: lea 8(%esp),%edx;");
    asm("loc_6600E0C: push %edx;");
    asm("loc_6600E0D: push %eax;");
    asm("loc_6600E0E: calll *0xC(%ecx);");
    asm("loc_6600E11: mov (%esp),%eax;");
    asm("loc_6600E15: add $0x10,%esp;");
    asm("loc_6600E18: ret;");
    asm("int3;"); // unreachable
}
#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __INTELLISENSE__
