#ifndef __INTELLISENSE__
// clang-format off
#include "..\..\PCH.h"
#pragma init_seg(lib)
#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

_naked _weak void _sub_10001000() // _sub_10001000
{
    __DEBUG_ASM(10001000);
    // chunk 0x10001000 _sub_10001000
    asm("loc_10001000: mov 4(%esp),%edx;");
    asm("loc_10001004: push %ebp;");
    asm("loc_10001005: push %edi;");
    asm("loc_10001006: push %esi;");
    asm("loc_10001007: push %ebx;");
    asm("loc_10001008: sub $0x34,%esp;");
    asm("loc_1000100B: mov %edx,%ebp;");
    asm("loc_1000100D: mov 0x74(%ebp),%edx;");
    asm("loc_10001010: mov 0x70(%ebp),%ebx;");
    asm("loc_10001013: cmp %ebx,0x84(%ebp);");
    asm("loc_10001019: ja loc_1000101E;");
    asm("loc_1000101B: shr $2,%edx;");
    asm("loc_1000101E: inc %edx;");
    asm("loc_1000101F: mov 0x88(%ebp),%edi;");
    asm("loc_10001025: mov %edx,0x30(%esp);");
    asm("loc_10001029: mov 0x6C(%ebp),%eax;");
    asm("loc_1000102C: cmp %edi,%eax;");
    asm("loc_1000102E: jae loc_10001032;");
    asm("loc_10001030: mov %eax,%edi;");
    asm("loc_10001032: mov %ebx,0x28(%esp);");
    asm("loc_10001036: mov 0x30(%ebp),%esi;");
    asm("loc_10001039: mov 0x64(%ebp),%ecx;");
    asm("loc_1000103C: mov %esi,0x24(%esp);");
    asm("loc_10001040: mov %edi,0x10(%esp);");
    asm("loc_10001044: add %ecx,%esi;");
    asm("loc_10001046: mov %esi,0xC(%esp);");
    asm("loc_1000104A: mov (%esi),%dx;");
    asm("loc_1000104D: mov -1(%ebx,%esi),%bx;");
    asm("loc_10001052: add $0x101,%esi;");
    asm("loc_10001058: mov %dx,0x1C(%esp);");
    asm("loc_1000105D: mov %esi,(%esp);");
    asm("loc_10001060: mov 0x24(%ebp),%esi;");
    asm("loc_10001063: sub $0x106,%esi;");
    asm("loc_10001069: sub %esi,%ecx;");
    asm("loc_1000106B: ja loc_1000106F;");
    asm("loc_1000106D: xor %ecx,%ecx;");
    asm("loc_1000106F: mov %ecx,0x2C(%esp);");
    asm("loc_10001073: mov 0x38(%ebp),%edx;");
    asm("loc_10001076: mov %edx,0x20(%esp);");
    asm("loc_1000107A: mov 0x68(%ebp),%edx;");
    asm("loc_1000107D: mov 0x1C(%esp),%bp;");
    asm("loc_10001082: mov 0x4C(%esp),%eax;");
    asm("loc_10001086: mov %edx,4(%esp);");
    asm("loc_1000108A: mov 0x24(%esp),%edx;");
    asm("loc_1000108E: mov %edx,%edi;");
    asm("loc_10001090: add 0x28(%esp),%edi;");
    asm("loc_10001094: mov 0x20(%esp),%esi;");
    asm("loc_10001098: dec %edi;");
    asm("loc_10001099: mov %edi,8(%esp);");
    asm("loc_1000109D: jmp loc_100010ED;");
    asm("loc_1000109F: nop;");
    asm("loc_100010A0: addl $0x10,0x30(%esp);");
    asm("loc_100010A5: je loc_1000147C;");
    asm("loc_100010AB: cmp %bx,(%eax,%edi);");
    asm("loc_100010AF: je loc_100010CD;");
    asm("loc_100010B1: and $0x7FFF,%eax;");
    asm("loc_100010B6: mov (%esi,%eax,2),%ax;");
    asm("loc_100010BA: cmp %eax,%ecx;");
    asm("loc_100010BC: jae loc_1000147C;");
    asm("loc_100010C2: decl 0x30(%esp);");
    asm("loc_100010C6: jne loc_100010AB;");
    asm("loc_100010C8: jmp loc_1000147C;");
    asm("loc_100010CD: cmp (%eax,%edx),%bp;");
    asm("loc_100010D1: jne loc_100010B1;");
    asm("loc_100010D3: jmp loc_100013BB;");
    asm("loc_100010D8: mov 8(%esp),%edi;");
    asm("loc_100010DC: and $0x7FFF,%eax;");
    asm("loc_100010E1: mov (%esi,%eax,2),%ax;");
    asm("loc_100010E5: cmp %eax,%ecx;");
    asm("loc_100010E7: jae loc_1000147C;");
    asm("loc_100010ED: subl $0x11,0x30(%esp);");
    asm("loc_100010F2: jbe loc_100010A0;");
    asm("loc_100010F4: cmp %bx,(%eax,%edi);");
    asm("loc_100010F8: je loc_100013AA;");
    asm("loc_100010FE: and $0x7FFF,%eax;");
    asm("loc_10001103: mov (%esi,%eax,2),%ax;");
    asm("loc_10001107: cmp %eax,%ecx;");
    asm("loc_10001109: jae loc_1000147C;");
    asm("loc_1000110F: cmp %bx,(%eax,%edi);");
    asm("loc_10001113: je loc_10001399;");
    asm("loc_10001119: and $0x7FFF,%eax;");
    asm("loc_1000111E: mov (%esi,%eax,2),%ax;");
    asm("loc_10001122: cmp %eax,%ecx;");
    asm("loc_10001124: jae loc_1000147C;");
    asm("loc_1000112A: cmp %bx,(%eax,%edi);");
    asm("loc_1000112E: je loc_10001388;");
    asm("loc_10001134: and $0x7FFF,%eax;");
    asm("loc_10001139: mov (%esi,%eax,2),%ax;");
    asm("loc_1000113D: cmp %eax,%ecx;");
    asm("loc_1000113F: jae loc_1000147C;");
    asm("loc_10001145: cmp %bx,(%eax,%edi);");
    asm("loc_10001149: je loc_10001377;");
    asm("loc_1000114F: and $0x7FFF,%eax;");
    asm("loc_10001154: mov (%esi,%eax,2),%ax;");
    asm("loc_10001158: cmp %eax,%ecx;");
    asm("loc_1000115A: jae loc_1000147C;");
    asm("loc_10001160: cmp %bx,(%eax,%edi);");
    asm("loc_10001164: je loc_10001366;");
    asm("loc_1000116A: and $0x7FFF,%eax;");
    asm("loc_1000116F: mov (%esi,%eax,2),%ax;");
    asm("loc_10001173: cmp %eax,%ecx;");
    asm("loc_10001175: jae loc_1000147C;");
    asm("loc_1000117B: cmp %bx,(%eax,%edi);");
    asm("loc_1000117F: je loc_10001355;");
    asm("loc_10001185: and $0x7FFF,%eax;");
    asm("loc_1000118A: mov (%esi,%eax,2),%ax;");
    asm("loc_1000118E: cmp %eax,%ecx;");
    asm("loc_10001190: jae loc_1000147C;");
    asm("loc_10001196: cmp %bx,(%eax,%edi);");
    asm("loc_1000119A: je loc_10001344;");
    asm("loc_100011A0: and $0x7FFF,%eax;");
    asm("loc_100011A5: mov (%esi,%eax,2),%ax;");
    asm("loc_100011A9: cmp %eax,%ecx;");
    asm("loc_100011AB: jae loc_1000147C;");
    asm("loc_100011B1: cmp %bx,(%eax,%edi);");
    asm("loc_100011B5: je loc_10001330;");
    asm("loc_100011BB: and $0x7FFF,%eax;");
    asm("loc_100011C0: mov (%esi,%eax,2),%ax;");
    asm("loc_100011C4: cmp %eax,%ecx;");
    asm("loc_100011C6: jae loc_1000147C;");
    asm("loc_100011CC: cmp %bx,(%eax,%edi);");
    asm("loc_100011D0: je loc_1000131C;");
    asm("loc_100011D6: and $0x7FFF,%eax;");
    asm("loc_100011DB: mov (%esi,%eax,2),%ax;");
    asm("loc_100011DF: cmp %eax,%ecx;");
    asm("loc_100011E1: jae loc_1000147C;");
    asm("loc_100011E7: cmp %bx,(%eax,%edi);");
    asm("loc_100011EB: je loc_10001308;");
    asm("loc_100011F1: and $0x7FFF,%eax;");
    asm("loc_100011F6: mov (%esi,%eax,2),%ax;");
    asm("loc_100011FA: cmp %eax,%ecx;");
    asm("loc_100011FC: jae loc_1000147C;");
    asm("loc_10001202: cmp %bx,(%eax,%edi);");
    asm("loc_10001206: je loc_100012F4;");
    asm("loc_1000120C: and $0x7FFF,%eax;");
    asm("loc_10001211: mov (%esi,%eax,2),%ax;");
    asm("loc_10001215: cmp %eax,%ecx;");
    asm("loc_10001217: jae loc_1000147C;");
    asm("loc_1000121D: cmp %bx,(%eax,%edi);");
    asm("loc_10001221: je loc_100012A0;");
    asm("loc_10001223: and $0x7FFF,%eax;");
    asm("loc_10001228: mov (%esi,%eax,2),%ax;");
    asm("loc_1000122C: cmp %eax,%ecx;");
    asm("loc_1000122E: jae loc_1000147C;");
    asm("loc_10001234: cmp %bx,(%eax,%edi);");
    asm("loc_10001238: je loc_100012B4;");
    asm("loc_1000123A: and $0x7FFF,%eax;");
    asm("loc_1000123F: mov (%esi,%eax,2),%ax;");
    asm("loc_10001243: cmp %eax,%ecx;");
    asm("loc_10001245: jae loc_1000147C;");
    asm("loc_1000124B: cmp %bx,(%eax,%edi);");
    asm("loc_1000124F: je loc_100012C4;");
    asm("loc_10001251: and $0x7FFF,%eax;");
    asm("loc_10001256: mov (%esi,%eax,2),%ax;");
    asm("loc_1000125A: cmp %eax,%ecx;");
    asm("loc_1000125C: jae loc_1000147C;");
    asm("loc_10001262: cmp %bx,(%eax,%edi);");
    asm("loc_10001266: je loc_100012D4;");
    asm("loc_10001268: and $0x7FFF,%eax;");
    asm("loc_1000126D: mov (%esi,%eax,2),%ax;");
    asm("loc_10001271: cmp %eax,%ecx;");
    asm("loc_10001273: jae loc_1000147C;");
    asm("loc_10001279: cmp %bx,(%eax,%edi);");
    asm("loc_1000127D: je loc_100012E4;");
    asm("loc_1000127F: and $0x7FFF,%eax;");
    asm("loc_10001284: mov (%esi,%eax,2),%ax;");
    asm("loc_10001288: cmp %eax,%ecx;");
    asm("loc_1000128A: jae loc_1000147C;");
    asm("loc_10001290: subl $0x10,0x30(%esp);");
    asm("loc_10001295: ja loc_100010F4;");
    asm("loc_1000129B: jmp loc_100010A0;");
    asm("loc_100012A0: cmp (%eax,%edx),%bp;");
    asm("loc_100012A4: jne loc_10001223;");
    asm("loc_100012AA: addl $5,0x30(%esp);");
    asm("loc_100012AF: jmp loc_100013C9;");
    asm("loc_100012B4: cmp (%eax,%edx),%bp;");
    asm("loc_100012B8: jne loc_1000123A;");
    asm("loc_100012BA: addl $4,0x30(%esp);");
    asm("loc_100012BF: jmp loc_100013C9;");
    asm("loc_100012C4: cmp (%eax,%edx),%bp;");
    asm("loc_100012C8: jne loc_10001251;");
    asm("loc_100012CA: addl $3,0x30(%esp);");
    asm("loc_100012CF: jmp loc_100013C9;");
    asm("loc_100012D4: cmp (%eax,%edx),%bp;");
    asm("loc_100012D8: jne loc_10001268;");
    asm("loc_100012DA: addl $2,0x30(%esp);");
    asm("loc_100012DF: jmp loc_100013C9;");
    asm("loc_100012E4: cmp (%eax,%edx),%bp;");
    asm("loc_100012E8: jne loc_1000127F;");
    asm("loc_100012EA: addl $1,0x30(%esp);");
    asm("loc_100012EF: jmp loc_100013C9;");
    asm("loc_100012F4: cmp (%eax,%edx),%bp;");
    asm("loc_100012F8: jne loc_1000120C;");
    asm("loc_100012FE: addl $6,0x30(%esp);");
    asm("loc_10001303: jmp loc_100013C9;");
    asm("loc_10001308: cmp (%eax,%edx),%bp;");
    asm("loc_1000130C: jne loc_100011F1;");
    asm("loc_10001312: addl $7,0x30(%esp);");
    asm("loc_10001317: jmp loc_100013C9;");
    asm("loc_1000131C: cmp (%eax,%edx),%bp;");
    asm("loc_10001320: jne loc_100011D6;");
    asm("loc_10001326: addl $8,0x30(%esp);");
    asm("loc_1000132B: jmp loc_100013C9;");
    asm("loc_10001330: cmp (%eax,%edx),%bp;");
    asm("loc_10001334: jne loc_100011BB;");
    asm("loc_1000133A: addl $9,0x30(%esp);");
    asm("loc_1000133F: jmp loc_100013C9;");
    asm("loc_10001344: cmp (%eax,%edx),%bp;");
    asm("loc_10001348: jne loc_100011A0;");
    asm("loc_1000134E: addl $0xA,0x30(%esp);");
    asm("loc_10001353: jmp loc_100013C9;");
    asm("loc_10001355: cmp (%eax,%edx),%bp;");
    asm("loc_10001359: jne loc_10001185;");
    asm("loc_1000135F: addl $0xB,0x30(%esp);");
    asm("loc_10001364: jmp loc_100013C9;");
    asm("loc_10001366: cmp (%eax,%edx),%bp;");
    asm("loc_1000136A: jne loc_1000116A;");
    asm("loc_10001370: addl $0xC,0x30(%esp);");
    asm("loc_10001375: jmp loc_100013C9;");
    asm("loc_10001377: cmp (%eax,%edx),%bp;");
    asm("loc_1000137B: jne loc_1000114F;");
    asm("loc_10001381: addl $0xD,0x30(%esp);");
    asm("loc_10001386: jmp loc_100013C9;");
    asm("loc_10001388: cmp (%eax,%edx),%bp;");
    asm("loc_1000138C: jne loc_10001134;");
    asm("loc_10001392: addl $0xE,0x30(%esp);");
    asm("loc_10001397: jmp loc_100013C9;");
    asm("loc_10001399: cmp (%eax,%edx),%bp;");
    asm("loc_1000139D: jne loc_10001119;");
    asm("loc_100013A3: addl $0xF,0x30(%esp);");
    asm("loc_100013A8: jmp loc_100013C9;");
    asm("loc_100013AA: cmp (%eax,%edx),%bp;");
    asm("loc_100013AE: jne loc_100010FE;");
    asm("loc_100013B4: addl $0x10,0x30(%esp);");
    asm("loc_100013B9: jmp loc_100013C9;");
    asm("loc_100013BB: mov 0x24(%esp),%edi;");
    asm("loc_100013BF: cmp (%eax,%edi),%bp;");
    asm("loc_100013C3: jne loc_100010D8;");
    asm("loc_100013C9: mov %edx,%edi;");
    asm("loc_100013CB: mov 0xC(%esp),%esi;");
    asm("loc_100013CF: add %eax,%edi;");
    asm("loc_100013D1: mov 3(%esi),%edx;");
    asm("loc_100013D4: xor 3(%edi),%edx;");
    asm("loc_100013D7: je loc_10001406;");
    asm("loc_100013D9: or %dl,%dl;");
    asm("loc_100013DB: je loc_100013E4;");
    asm("loc_100013DD: mov $3,%esi;");
    asm("loc_100013E2: jmp loc_10001435;");
    asm("loc_100013E4: or %dx,%dx;");
    asm("loc_100013E7: je loc_100013F0;");
    asm("loc_100013E9: mov $4,%esi;");
    asm("loc_100013EE: jmp loc_10001435;");
    asm("loc_100013F0: and $0xFFFFFF,%edx;");
    asm("loc_100013F6: je loc_100013FF;");
    asm("loc_100013F8: mov $5,%esi;");
    asm("loc_100013FD: jmp loc_10001435;");
    asm("loc_100013FF: mov $6,%esi;");
    asm("loc_10001404: jmp loc_10001435;");
    asm("loc_10001406: add $6,%edi;");
    asm("loc_10001409: add $6,%esi;");
    asm("loc_1000140C: mov $0x3F,%ecx;");
    asm("loc_10001411: repe cmpsl (%edi),(%esi);");
    asm("loc_10001413: je loc_10001431;");
    asm("loc_10001415: sub $4,%esi;");
    asm("loc_10001418: mov -4(%edi),%edx;");
    asm("loc_1000141B: xor (%esi),%edx;");
    asm("loc_1000141D: or %dl,%dl;");
    asm("loc_1000141F: jne loc_10001431;");
    asm("loc_10001421: inc %esi;");
    asm("loc_10001422: or %dx,%dx;");
    asm("loc_10001425: jne loc_10001431;");
    asm("loc_10001427: inc %esi;");
    asm("loc_10001428: and $0xFFFFFF,%edx;");
    asm("loc_1000142E: jne loc_10001431;");
    asm("loc_10001430: inc %esi;");
    asm("loc_10001431: sub 0xC(%esp),%esi;");
    asm("loc_10001435: cmp 0x28(%esp),%esi;");
    asm("loc_10001439: ja loc_1000144C;");
    asm("loc_1000143B: mov 0x20(%esp),%esi;");
    asm("loc_1000143F: mov 0x2C(%esp),%ecx;");
    asm("loc_10001443: mov 0x24(%esp),%edx;");
    asm("loc_10001447: jmp loc_100010D8;");
    asm("loc_1000144C: mov %esi,0x28(%esp);");
    asm("loc_10001450: mov %eax,4(%esp);");
    asm("loc_10001454: cmp 0x10(%esp),%esi;");
    asm("loc_10001458: jae loc_1000147C;");
    asm("loc_1000145A: mov 0xC(%esp),%ecx;");
    asm("loc_1000145E: mov 0x24(%esp),%edx;");
    asm("loc_10001462: add %esi,%ecx;");
    asm("loc_10001464: add %edx,%esi;");
    asm("loc_10001466: dec %esi;");
    asm("loc_10001467: mov %esi,8(%esp);");
    asm("loc_1000146B: mov -1(%ecx),%bx;");
    asm("loc_1000146F: mov 0x20(%esp),%esi;");
    asm("loc_10001473: mov 0x2C(%esp),%ecx;");
    asm("loc_10001477: jmp loc_100010D8;");
    asm("loc_1000147C: mov 4(%esp),%ebx;");
    asm("loc_10001480: mov 0x48(%esp),%ebp;");
    asm("loc_10001484: mov 0x28(%esp),%ecx;");
    asm("loc_10001488: mov %ebx,0x68(%ebp);");
    asm("loc_1000148B: mov 0x6C(%ebp),%eax;");
    asm("loc_1000148E: cmp %eax,%ecx;");
    asm("loc_10001490: ja loc_10001494;");
    asm("loc_10001492: mov %ecx,%eax;");
    asm("loc_10001494: add $0x34,%esp;");
    asm("loc_10001497: pop %ebx;");
    asm("loc_10001498: pop %esi;");
    asm("loc_10001499: pop %edi;");
    asm("loc_1000149A: pop %ebp;");
    asm("loc_1000149B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100014E1() // _sub_100014E1
{
    __DEBUG_ASM(100014E1);
    // chunk 0x100014E1 _sub_100014E1
    asm("loc_100014E1: push %ebx;");
    asm("loc_100014E2: pushf;");
    asm("loc_100014E3: pop %eax;");
    asm("loc_100014E4: mov %eax,%ecx;");
    asm("loc_100014E6: xor $0x40000,%eax;");
    asm("loc_100014EB: push %eax;");
    asm("loc_100014EC: popf;");
    asm("loc_100014ED: pushf;");
    asm("loc_100014EE: pop %eax;");
    asm("loc_100014EF: xor %ecx,%eax;");
    asm("loc_100014F1: je loc_10001511;");
    asm("loc_100014F3: push %ecx;");
    asm("loc_100014F4: popf;");
    asm("loc_100014F5: pushf;");
    asm("loc_100014F6: pushf;");
    asm("loc_100014F7: pop %ecx;");
    asm("loc_100014F8: mov %ecx,%eax;");
    asm("loc_100014FA: xor $0x200000,%eax;");
    asm("loc_100014FF: push %eax;");
    asm("loc_10001500: popf;");
    asm("loc_10001501: pushf;");
    asm("loc_10001502: pop %eax;");
    asm("loc_10001503: popf;");
    asm("loc_10001504: xor %ecx,%eax;");
    asm("loc_10001506: je loc_10001518;");
    asm("loc_10001508: mov $1,%eax;");
    asm("loc_1000150D: cpuid;");
    asm("loc_1000150F: pop %ebx;");
    asm("loc_10001510: ret;");
    asm("loc_10001511: mov $0x300,%eax;");
    asm("loc_10001516: jmp loc_1000150F;");
    asm("loc_10001518: mov $0x400,%eax;");
    asm("loc_1000151D: jmp loc_1000150F;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000151F() // _sub_1000151F
{
    __DEBUG_ASM(1000151F);
    // chunk 0x1000151F _sub_1000151F
    asm("loc_1000151F: push %ebp;");
    asm("loc_10001520: push %edi;");
    asm("loc_10001521: push %esi;");
    asm("loc_10001522: push %ebx;");
    asm("loc_10001523: sub $0x24,%esp;");
    asm("loc_10001526: mov 0x38(%esp),%edx;");
    asm("loc_1000152A: mov 0x3C(%esp),%ecx;");
    asm("loc_1000152E: mov 0x70(%edx),%eax;");
    asm("loc_10001531: mov 0x84(%edx),%ebx;");
    asm("loc_10001537: cmp %ebx,%eax;");
    asm("loc_10001539: mov 0x2C(%edx),%eax;");
    asm("loc_1000153C: mov 0x74(%edx),%ebx;");
    asm("loc_1000153F: jl loc_10001544;");
    asm("loc_10001541: shr $2,%ebx;");
    asm("loc_10001544: dec %ebx;");
    asm("loc_10001545: shl $0x10,%ebx;");
    asm("loc_10001548: or %eax,%ebx;");
    asm("loc_1000154A: mov %ebx,(%esp);");
    asm("loc_1000154D: mov 0x88(%edx),%eax;");
    asm("loc_10001553: mov 0x6C(%edx),%ebx;");
    asm("loc_10001556: cmp %eax,%ebx;");
    asm("loc_10001558: jl loc_1000155C;");
    asm("loc_1000155A: mov %eax,%ebx;");
    asm("loc_1000155C: mov %ebx,0x18(%esp);");
    asm("loc_10001560: mov 0x30(%edx),%esi;");
    asm("loc_10001563: mov %esi,4(%esp);");
    asm("loc_10001567: mov 0x64(%edx),%ebp;");
    asm("loc_1000156A: lea (%ebp,%esi),%edi;");
    asm("loc_1000156E: mov %edi,0x20(%esp);");
    asm("loc_10001572: mov %edi,%eax;");
    asm("loc_10001574: neg %eax;");
    asm("loc_10001576: and $3,%eax;");
    asm("loc_10001579: mov %eax,0x14(%esp);");
    asm("loc_1000157D: mov 0x24(%edx),%eax;");
    asm("loc_10001580: sub $0x106,%eax;");
    asm("loc_10001585: sub %eax,%ebp;");
    asm("loc_10001587: jg loc_1000158B;");
    asm("loc_10001589: xor %ebp,%ebp;");
    asm("loc_1000158B: mov 0x70(%edx),%eax;");
    asm("loc_1000158E: mov %eax,0x1C(%esp);");
    asm("loc_10001592: add %eax,%esi;");
    asm("loc_10001594: mov %esi,8(%esp);");
    asm("loc_10001598: movzwl (%edi),%ebx;");
    asm("loc_1000159B: mov %ebx,0x10(%esp);");
    asm("loc_1000159F: movzwl -1(%eax,%edi),%ebx;");
    asm("loc_100015A4: mov %ebx,0xC(%esp);");
    asm("loc_100015A8: mov 0x38(%edx),%edi;");
    asm("loc_100015AB: mov (%esp),%edx;");
    asm("loc_100015AE: jmp loc_100015CA;");
    asm("loc_100015B0: and %edx,%ecx;");
    asm("loc_100015B2: movzwl (%edi,%ecx,2),%ecx;");
    asm("loc_100015B6: cmp %ebp,%ecx;");
    asm("loc_100015B8: jbe loc_1000169E;");
    asm("loc_100015BE: sub $0x10000,%edx;");
    asm("loc_100015C4: js loc_1000169E;");
    asm("loc_100015CA: movzwl -1(%ecx,%esi),%eax;");
    asm("loc_100015CF: cmp %ebx,%eax;");
    asm("loc_100015D1: jne loc_100015B0;");
    asm("loc_100015D3: mov 4(%esp),%eax;");
    asm("loc_100015D7: movzwl (%ecx,%eax),%eax;");
    asm("loc_100015DB: cmp 0x10(%esp),%eax;");
    asm("loc_100015DF: jne loc_100015B0;");
    asm("loc_100015E1: mov %edx,(%esp);");
    asm("loc_100015E4: mov 4(%esp),%esi;");
    asm("loc_100015E8: mov 0x20(%esp),%edi;");
    asm("loc_100015EC: add %ecx,%esi;");
    asm("loc_100015EE: mov 0x14(%esp),%eax;");
    asm("loc_100015F2: mov $0xFFFFFEF8,%edx;");
    asm("loc_100015F7: lea 0x108(%eax,%edi),%edi;");
    asm("loc_100015FE: lea 0x108(%eax,%esi),%esi;");
    asm("loc_10001605: mov (%edx,%esi),%eax;");
    asm("loc_10001608: xor (%edx,%edi),%eax;");
    asm("loc_1000160B: jne loc_10001621;");
    asm("loc_1000160D: mov 4(%edx,%esi),%eax;");
    asm("loc_10001611: xor 4(%edx,%edi),%eax;");
    asm("loc_10001615: jne loc_1000161E;");
    asm("loc_10001617: add $8,%edx;");
    asm("loc_1000161A: jne loc_10001605;");
    asm("loc_1000161C: jmp loc_1000168F;");
    asm("loc_1000161E: add $4,%edx;");
    asm("loc_10001621: test $0xFFFF,%eax;");
    asm("loc_10001626: jne loc_1000162E;");
    asm("loc_10001628: add $2,%edx;");
    asm("loc_1000162B: shr $0x10,%eax;");
    asm("loc_1000162E: sub $1,%al;");
    asm("loc_10001630: adc $0,%edx;");
    asm("loc_10001633: lea (%edx,%edi),%eax;");
    asm("loc_10001636: mov 0x20(%esp),%edi;");
    asm("loc_1000163A: sub %edi,%eax;");
    asm("loc_1000163C: cmp $0x102,%eax;");
    asm("loc_10001641: jge loc_1000168F;");
    asm("loc_10001643: mov 0x38(%esp),%edx;");
    asm("loc_10001647: mov 0x1C(%esp),%ebx;");
    asm("loc_1000164B: cmp %ebx,%eax;");
    asm("loc_1000164D: jg loc_10001662;");
    asm("loc_1000164F: mov 8(%esp),%esi;");
    asm("loc_10001653: mov 0x38(%edx),%edi;");
    asm("loc_10001656: mov 0xC(%esp),%ebx;");
    asm("loc_1000165A: mov (%esp),%edx;");
    asm("loc_1000165D: jmp loc_100015B0;");
    asm("loc_10001662: mov 0x18(%esp),%ebx;");
    asm("loc_10001666: mov %eax,0x1C(%esp);");
    asm("loc_1000166A: mov %ecx,0x68(%edx);");
    asm("loc_1000166D: cmp %ebx,%eax;");
    asm("loc_1000166F: jge loc_1000169E;");
    asm("loc_10001671: mov 4(%esp),%esi;");
    asm("loc_10001675: add %eax,%esi;");
    asm("loc_10001677: mov %esi,8(%esp);");
    asm("loc_1000167B: movzwl -1(%eax,%edi),%ebx;");
    asm("loc_10001680: mov 0x38(%edx),%edi;");
    asm("loc_10001683: mov %ebx,0xC(%esp);");
    asm("loc_10001687: mov (%esp),%edx;");
    asm("loc_1000168A: jmp loc_100015B0;");
    asm("loc_1000168F: mov 0x38(%esp),%edx;");
    asm("loc_10001693: movl $0x102,0x1C(%esp);");
    asm("loc_1000169B: mov %ecx,0x68(%edx);");
    asm("loc_1000169E: mov 0x38(%esp),%edx;");
    asm("loc_100016A2: mov 0x1C(%esp),%ebx;");
    asm("loc_100016A6: mov 0x6C(%edx),%eax;");
    asm("loc_100016A9: cmp %eax,%ebx;");
    asm("loc_100016AB: jg loc_100016AF;");
    asm("loc_100016AD: mov %ebx,%eax;");
    asm("loc_100016AF: add $0x24,%esp;");
    asm("loc_100016B2: pop %ebx;");
    asm("loc_100016B3: pop %esi;");
    asm("loc_100016B4: pop %edi;");
    asm("loc_100016B5: pop %ebp;");
    asm("loc_100016B6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001710() // _adler32
{
    __DEBUG_ASM(10001710);
    // chunk 0x10001710 _sub_10001710
    asm("loc_10001710: push %esi;");
    asm("loc_10001711: mov 0xC(%esp),%esi;");
    asm("loc_10001715: push %edi;");
    asm("loc_10001716: mov 0xC(%esp),%edi;");
    asm("loc_1000171A: mov %edi,%ecx;");
    asm("loc_1000171C: and $0xFFFF,%ecx;");
    asm("loc_10001722: shr $0x10,%edi;");
    asm("loc_10001725: test %esi,%esi;");
    asm("loc_10001727: jne loc_10001733;");
    asm("loc_10001729: pop %edi;");
    asm("loc_1000172A: mov $1,%eax;");
    asm("loc_1000172F: pop %esi;");
    asm("loc_10001730: ret $0xC;");
    asm("loc_10001733: push %ebx;");
    asm("loc_10001734: mov 0x18(%esp),%ebx;");
    asm("loc_10001738: test %ebx,%ebx;");
    asm("loc_1000173A: jbe loc_1000182E;");
    asm("loc_10001740: push %ebp;");
    asm("loc_10001741: cmp $0x15B0,%ebx;");
    asm("loc_10001747: mov %ebx,%eax;");
    asm("loc_10001749: jb loc_10001750;");
    asm("loc_1000174B: mov $0x15B0,%eax;");
    asm("loc_10001750: sub %eax,%ebx;");
    asm("loc_10001752: cmp $0x10,%eax;");
    asm("loc_10001755: jl loc_100017F9;");
    asm("loc_1000175B: mov %eax,%edx;");
    asm("loc_1000175D: shr $4,%edx;");
    asm("loc_10001760: mov %edx,%ebp;");
    asm("loc_10001762: neg %ebp;");
    asm("loc_10001764: shl $4,%ebp;");
    asm("loc_10001767: add %ebp,%eax;");
    asm("loc_10001769: lea (%esp),%esp;");
    asm("loc_10001770: movzbl (%esi),%ebp;");
    asm("loc_10001773: add %ebp,%ecx;");
    asm("loc_10001775: movzbl 1(%esi),%ebp;");
    asm("loc_10001779: add %ecx,%edi;");
    asm("loc_1000177B: add %ebp,%ecx;");
    asm("loc_1000177D: movzbl 2(%esi),%ebp;");
    asm("loc_10001781: add %ecx,%edi;");
    asm("loc_10001783: add %ebp,%ecx;");
    asm("loc_10001785: movzbl 3(%esi),%ebp;");
    asm("loc_10001789: add %ecx,%edi;");
    asm("loc_1000178B: add %ebp,%ecx;");
    asm("loc_1000178D: movzbl 4(%esi),%ebp;");
    asm("loc_10001791: add %ecx,%edi;");
    asm("loc_10001793: add %ebp,%ecx;");
    asm("loc_10001795: movzbl 5(%esi),%ebp;");
    asm("loc_10001799: add %ecx,%edi;");
    asm("loc_1000179B: add %ebp,%ecx;");
    asm("loc_1000179D: movzbl 6(%esi),%ebp;");
    asm("loc_100017A1: add %ecx,%edi;");
    asm("loc_100017A3: add %ebp,%ecx;");
    asm("loc_100017A5: movzbl 7(%esi),%ebp;");
    asm("loc_100017A9: add %ecx,%edi;");
    asm("loc_100017AB: add %ebp,%ecx;");
    asm("loc_100017AD: movzbl 8(%esi),%ebp;");
    asm("loc_100017B1: add %ecx,%edi;");
    asm("loc_100017B3: add %ebp,%ecx;");
    asm("loc_100017B5: movzbl 9(%esi),%ebp;");
    asm("loc_100017B9: add %ecx,%edi;");
    asm("loc_100017BB: add %ebp,%ecx;");
    asm("loc_100017BD: movzbl 0xA(%esi),%ebp;");
    asm("loc_100017C1: add %ecx,%edi;");
    asm("loc_100017C3: add %ebp,%ecx;");
    asm("loc_100017C5: movzbl 0xB(%esi),%ebp;");
    asm("loc_100017C9: add %ecx,%edi;");
    asm("loc_100017CB: add %ebp,%ecx;");
    asm("loc_100017CD: movzbl 0xC(%esi),%ebp;");
    asm("loc_100017D1: add %ecx,%edi;");
    asm("loc_100017D3: add %ebp,%ecx;");
    asm("loc_100017D5: movzbl 0xD(%esi),%ebp;");
    asm("loc_100017D9: add %ecx,%edi;");
    asm("loc_100017DB: add %ebp,%ecx;");
    asm("loc_100017DD: movzbl 0xE(%esi),%ebp;");
    asm("loc_100017E1: add %ecx,%edi;");
    asm("loc_100017E3: add %ebp,%ecx;");
    asm("loc_100017E5: movzbl 0xF(%esi),%ebp;");
    asm("loc_100017E9: add %ecx,%edi;");
    asm("loc_100017EB: add %ebp,%ecx;");
    asm("loc_100017ED: add %ecx,%edi;");
    asm("loc_100017EF: add $0x10,%esi;");
    asm("loc_100017F2: dec %edx;");
    asm("loc_100017F3: jne loc_10001770;");
    asm("loc_100017F9: test %eax,%eax;");
    asm("loc_100017FB: je loc_1000180B;");
    asm("loc_100017FD: lea (%ecx),%ecx;");
    asm("loc_10001800: movzbl (%esi),%edx;");
    asm("loc_10001803: add %edx,%ecx;");
    asm("loc_10001805: inc %esi;");
    asm("loc_10001806: add %ecx,%edi;");
    asm("loc_10001808: dec %eax;");
    asm("loc_10001809: jne loc_10001800;");
    asm("loc_1000180B: mov %ecx,%eax;");
    asm("loc_1000180D: xor %edx,%edx;");
    asm("loc_1000180F: mov $0xFFF1,%ecx;");
    asm("loc_10001814: div %ecx;");
    asm("loc_10001816: mov %edi,%eax;");
    asm("loc_10001818: mov $0xFFF1,%edi;");
    asm("loc_1000181D: mov %edx,%ecx;");
    asm("loc_1000181F: xor %edx,%edx;");
    asm("loc_10001821: div %edi;");
    asm("loc_10001823: test %ebx,%ebx;");
    asm("loc_10001825: mov %edx,%edi;");
    asm("loc_10001827: ja loc_10001741;");
    asm("loc_1000182D: pop %ebp;");
    asm("loc_1000182E: mov %edi,%eax;");
    asm("loc_10001830: pop %ebx;");
    asm("loc_10001831: shl $0x10,%eax;");
    asm("loc_10001834: pop %edi;");
    asm("loc_10001835: or %ecx,%eax;");
    asm("loc_10001837: pop %esi;");
    asm("loc_10001838: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001840() // _compress2
{
    __DEBUG_ASM(10001840);
    // chunk 0x10001840 _sub_10001840
    asm("loc_10001840: sub $0x38,%esp;");
    asm("loc_10001843: mov 0x48(%esp),%ecx;");
    asm("loc_10001847: mov 0x3C(%esp),%edx;");
    asm("loc_1000184B: mov 0x44(%esp),%eax;");
    asm("loc_1000184F: push %ebx;");
    asm("loc_10001850: mov 0x44(%esp),%ebx;");
    asm("loc_10001854: push $0x38;");
    asm("loc_10001856: mov %ecx,0xC(%esp);");
    asm("loc_1000185A: mov 0x54(%esp),%ecx;");
    asm("loc_1000185E: push $_data_1000B068;");
    asm("loc_10001863: mov %edx,0x18(%esp);");
    asm("loc_10001867: mov %eax,0xC(%esp);");
    asm("loc_1000186B: mov (%ebx),%eax;");
    asm("loc_1000186D: push %ecx;");
    asm("loc_1000186E: lea 0x10(%esp),%edx;");
    asm("loc_10001872: push %edx;");
    asm("loc_10001873: mov %eax,0x24(%esp);");
    asm("loc_10001877: movl $0,0x34(%esp);");
    asm("loc_1000187F: movl $0,0x38(%esp);");
    asm("loc_10001887: movl $0,0x3C(%esp);");
    asm("loc_1000188F: call _sub_10003000;");
    asm("loc_10001894: test %eax,%eax;");
    asm("loc_10001896: jne loc_100018DA;");
    asm("loc_10001898: push %esi;");
    asm("loc_10001899: push $4;");
    asm("loc_1000189B: lea 0xC(%esp),%eax;");
    asm("loc_1000189F: push %eax;");
    asm("loc_100018A0: call _sub_10001D60;");
    asm("loc_100018A5: mov %eax,%esi;");
    asm("loc_100018A7: cmp $1,%esi;");
    asm("loc_100018AA: je loc_100018C9;");
    asm("loc_100018AC: lea 8(%esp),%ecx;");
    asm("loc_100018B0: push %ecx;");
    asm("loc_100018B1: call _sub_10001FF0;");
    asm("loc_100018B6: test %esi,%esi;");
    asm("loc_100018B8: mov $0xFFFFFFFB,%eax;");
    asm("loc_100018BD: je loc_100018D9;");
    asm("loc_100018BF: mov %esi,%eax;");
    asm("loc_100018C1: pop %esi;");
    asm("loc_100018C2: pop %ebx;");
    asm("loc_100018C3: add $0x38,%esp;");
    asm("loc_100018C6: ret $0x14;");
    asm("loc_100018C9: mov 0x1C(%esp),%edx;");
    asm("loc_100018CD: lea 8(%esp),%eax;");
    asm("loc_100018D1: push %eax;");
    asm("loc_100018D2: mov %edx,(%ebx);");
    asm("loc_100018D4: call _sub_10001FF0;");
    asm("loc_100018D9: pop %esi;");
    asm("loc_100018DA: pop %ebx;");
    asm("loc_100018DB: add $0x38,%esp;");
    asm("loc_100018DE: ret $0x14;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100018F0() // _compress
{
    __DEBUG_ASM(100018F0);
    // chunk 0x100018F0 _sub_100018F0
    asm("loc_100018F0: mov 0x10(%esp),%eax;");
    asm("loc_100018F4: mov 0xC(%esp),%ecx;");
    asm("loc_100018F8: mov 8(%esp),%edx;");
    asm("loc_100018FC: push $0xFFFFFFFF;");
    asm("loc_100018FE: push %eax;");
    asm("loc_100018FF: mov 0xC(%esp),%eax;");
    asm("loc_10001903: push %ecx;");
    asm("loc_10001904: push %edx;");
    asm("loc_10001905: push %eax;");
    asm("loc_10001906: call _sub_10001840;");
    asm("loc_1000190B: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001910() // _sub_10001910
{
    __DEBUG_ASM(10001910);
    // chunk 0x10001910 _sub_10001910
    asm("loc_10001910: push %esi;");
    asm("loc_10001911: push %ebx;");
    asm("loc_10001912: xor %esi,%esi;");
    asm("loc_10001914: xor %eax,%eax;");
    asm("loc_10001916: push %edi;");
    asm("loc_10001917: jmp loc_10001920;");
    asm("loc_10001919: lea (%esp),%esp;");
    asm("loc_10001920: xor %edx,%edx;");
    asm("loc_10001922: mov _data_1000B070(%eax),%dl;");
    asm("loc_10001928: xor %ebx,%ebx;");
    asm("loc_1000192A: mov _data_1000B071(%eax),%bl;");
    asm("loc_10001930: mov $0x1F,%ecx;");
    asm("loc_10001935: mov $1,%edi;");
    asm("loc_1000193A: add $7,%eax;");
    asm("loc_1000193D: sub %edx,%ecx;");
    asm("loc_1000193F: mov $1,%edx;");
    asm("loc_10001944: shl %cl,%edx;");
    asm("loc_10001946: mov $0x1F,%ecx;");
    asm("loc_1000194B: sub %ebx,%ecx;");
    asm("loc_1000194D: shl %cl,%edi;");
    asm("loc_1000194F: xor %ebx,%ebx;");
    asm("loc_10001951: mov _data_1000B068+3(%eax),%bl;");
    asm("loc_10001957: mov $0x1F,%ecx;");
    asm("loc_1000195C: or %edi,%edx;");
    asm("loc_1000195E: mov $1,%edi;");
    asm("loc_10001963: sub %ebx,%ecx;");
    asm("loc_10001965: shl %cl,%edi;");
    asm("loc_10001967: xor %ebx,%ebx;");
    asm("loc_10001969: mov _data_1000B068+4(%eax),%bl;");
    asm("loc_1000196F: mov $0x1F,%ecx;");
    asm("loc_10001974: or %edi,%edx;");
    asm("loc_10001976: mov $1,%edi;");
    asm("loc_1000197B: sub %ebx,%ecx;");
    asm("loc_1000197D: shl %cl,%edi;");
    asm("loc_1000197F: xor %ebx,%ebx;");
    asm("loc_10001981: mov _data_1000B068+5(%eax),%bl;");
    asm("loc_10001987: mov $0x1F,%ecx;");
    asm("loc_1000198C: or %edi,%edx;");
    asm("loc_1000198E: mov $1,%edi;");
    asm("loc_10001993: sub %ebx,%ecx;");
    asm("loc_10001995: shl %cl,%edi;");
    asm("loc_10001997: xor %ebx,%ebx;");
    asm("loc_10001999: mov _data_1000B06F(%eax),%bl;");
    asm("loc_1000199F: mov $0x1F,%ecx;");
    asm("loc_100019A4: or %edi,%edx;");
    asm("loc_100019A6: mov $1,%edi;");
    asm("loc_100019AB: sub %ebx,%ecx;");
    asm("loc_100019AD: shl %cl,%edi;");
    asm("loc_100019AF: xor %ebx,%ebx;");
    asm("loc_100019B1: mov _data_1000B06E(%eax),%bl;");
    asm("loc_100019B7: mov $0x1F,%ecx;");
    asm("loc_100019BC: or %edi,%edx;");
    asm("loc_100019BE: mov $1,%edi;");
    asm("loc_100019C3: sub %ebx,%ecx;");
    asm("loc_100019C5: shl %cl,%edi;");
    asm("loc_100019C7: or %edi,%edx;");
    asm("loc_100019C9: or %edx,%esi;");
    asm("loc_100019CB: cmp $0xE,%eax;");
    asm("loc_100019CE: jb loc_10001920;");
    asm("loc_100019D4: pop %edi;");
    asm("loc_100019D5: xor %ecx,%ecx;");
    asm("loc_100019D7: pop %ebx;");
    asm("loc_100019D8: mov %ecx,%eax;");
    asm("loc_100019DA: shr $1,%eax;");
    asm("loc_100019DC: test $1,%cl;");
    asm("loc_100019DF: je loc_100019E3;");
    asm("loc_100019E1: xor %esi,%eax;");
    asm("loc_100019E3: test $1,%al;");
    asm("loc_100019E5: je loc_100019ED;");
    asm("loc_100019E7: shr $1,%eax;");
    asm("loc_100019E9: xor %esi,%eax;");
    asm("loc_100019EB: jmp loc_100019EF;");
    asm("loc_100019ED: shr $1,%eax;");
    asm("loc_100019EF: test $1,%al;");
    asm("loc_100019F1: je loc_100019F9;");
    asm("loc_100019F3: shr $1,%eax;");
    asm("loc_100019F5: xor %esi,%eax;");
    asm("loc_100019F7: jmp loc_100019FB;");
    asm("loc_100019F9: shr $1,%eax;");
    asm("loc_100019FB: test $1,%al;");
    asm("loc_100019FD: je loc_10001A05;");
    asm("loc_100019FF: shr $1,%eax;");
    asm("loc_10001A01: xor %esi,%eax;");
    asm("loc_10001A03: jmp loc_10001A07;");
    asm("loc_10001A05: shr $1,%eax;");
    asm("loc_10001A07: test $1,%al;");
    asm("loc_10001A09: je loc_10001A11;");
    asm("loc_10001A0B: shr $1,%eax;");
    asm("loc_10001A0D: xor %esi,%eax;");
    asm("loc_10001A0F: jmp loc_10001A13;");
    asm("loc_10001A11: shr $1,%eax;");
    asm("loc_10001A13: test $1,%al;");
    asm("loc_10001A15: je loc_10001A1D;");
    asm("loc_10001A17: shr $1,%eax;");
    asm("loc_10001A19: xor %esi,%eax;");
    asm("loc_10001A1B: jmp loc_10001A1F;");
    asm("loc_10001A1D: shr $1,%eax;");
    asm("loc_10001A1F: test $1,%al;");
    asm("loc_10001A21: je loc_10001A29;");
    asm("loc_10001A23: shr $1,%eax;");
    asm("loc_10001A25: xor %esi,%eax;");
    asm("loc_10001A27: jmp loc_10001A2B;");
    asm("loc_10001A29: shr $1,%eax;");
    asm("loc_10001A2B: test $1,%al;");
    asm("loc_10001A2D: je loc_10001A35;");
    asm("loc_10001A2F: shr $1,%eax;");
    asm("loc_10001A31: xor %esi,%eax;");
    asm("loc_10001A33: jmp loc_10001A37;");
    asm("loc_10001A35: shr $1,%eax;");
    asm("loc_10001A37: mov %eax,_data_1000E1D8(,%ecx,4);");
    asm("loc_10001A3E: inc %ecx;");
    asm("loc_10001A3F: cmp $0x100,%ecx;");
    asm("loc_10001A45: jl loc_100019D8;");
    asm("loc_10001A47: movl $0,_data_1000D000;");
    asm("loc_10001A51: pop %esi;");
    asm("loc_10001A52: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001A60() // _get_crc_table
{
    __DEBUG_ASM(10001A60);
    // chunk 0x10001A60 _sub_10001A60
    asm("loc_10001A60: mov _data_1000D000,%eax;");
    asm("loc_10001A65: test %eax,%eax;");
    asm("loc_10001A67: je loc_10001A6E;");
    asm("loc_10001A69: call _sub_10001910;");
    asm("loc_10001A6E: mov $_data_1000E1D8,%eax;");
    asm("loc_10001A73: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001A80() // _crc32
{
    __DEBUG_ASM(10001A80);
    // chunk 0x10001A80 _sub_10001A80
    asm("loc_10001A80: push %esi;");
    asm("loc_10001A81: mov 0xC(%esp),%esi;");
    asm("loc_10001A85: test %esi,%esi;");
    asm("loc_10001A87: jne loc_10001A8F;");
    asm("loc_10001A89: xor %eax,%eax;");
    asm("loc_10001A8B: pop %esi;");
    asm("loc_10001A8C: ret $0xC;");
    asm("loc_10001A8F: mov _data_1000D000,%eax;");
    asm("loc_10001A94: test %eax,%eax;");
    asm("loc_10001A96: je loc_10001A9D;");
    asm("loc_10001A98: call _sub_10001910;");
    asm("loc_10001A9D: mov 0x10(%esp),%edx;");
    asm("loc_10001AA1: cmp $8,%edx;");
    asm("loc_10001AA4: mov 8(%esp),%eax;");
    asm("loc_10001AA8: not %eax;");
    asm("loc_10001AAA: jb loc_10001B91;");
    asm("loc_10001AB0: push %ebx;");
    asm("loc_10001AB1: push %edi;");
    asm("loc_10001AB2: mov %edx,%edi;");
    asm("loc_10001AB4: shr $3,%edi;");
    asm("loc_10001AB7: xor %ecx,%ecx;");
    asm("loc_10001AB9: mov (%esi),%cl;");
    asm("loc_10001ABB: mov %eax,%ebx;");
    asm("loc_10001ABD: shr $8,%ebx;");
    asm("loc_10001AC0: sub $8,%edx;");
    asm("loc_10001AC3: xor %eax,%ecx;");
    asm("loc_10001AC5: and $0xFF,%ecx;");
    asm("loc_10001ACB: mov _data_1000E1D8(,%ecx,4),%eax;");
    asm("loc_10001AD2: xor %ebx,%eax;");
    asm("loc_10001AD4: xor %ecx,%ecx;");
    asm("loc_10001AD6: mov 1(%esi),%cl;");
    asm("loc_10001AD9: inc %esi;");
    asm("loc_10001ADA: xor %eax,%ecx;");
    asm("loc_10001ADC: and $0xFF,%ecx;");
    asm("loc_10001AE2: mov _data_1000E1D8(,%ecx,4),%ecx;");
    asm("loc_10001AE9: shr $8,%eax;");
    asm("loc_10001AEC: xor %eax,%ecx;");
    asm("loc_10001AEE: xor %eax,%eax;");
    asm("loc_10001AF0: mov 1(%esi),%al;");
    asm("loc_10001AF3: inc %esi;");
    asm("loc_10001AF4: xor %ecx,%eax;");
    asm("loc_10001AF6: and $0xFF,%eax;");
    asm("loc_10001AFB: mov _data_1000E1D8(,%eax,4),%eax;");
    asm("loc_10001B02: shr $8,%ecx;");
    asm("loc_10001B05: xor %ecx,%eax;");
    asm("loc_10001B07: xor %ecx,%ecx;");
    asm("loc_10001B09: mov 1(%esi),%cl;");
    asm("loc_10001B0C: inc %esi;");
    asm("loc_10001B0D: xor %eax,%ecx;");
    asm("loc_10001B0F: and $0xFF,%ecx;");
    asm("loc_10001B15: mov _data_1000E1D8(,%ecx,4),%ecx;");
    asm("loc_10001B1C: shr $8,%eax;");
    asm("loc_10001B1F: xor %eax,%ecx;");
    asm("loc_10001B21: xor %eax,%eax;");
    asm("loc_10001B23: mov 1(%esi),%al;");
    asm("loc_10001B26: inc %esi;");
    asm("loc_10001B27: xor %ecx,%eax;");
    asm("loc_10001B29: and $0xFF,%eax;");
    asm("loc_10001B2E: mov _data_1000E1D8(,%eax,4),%eax;");
    asm("loc_10001B35: shr $8,%ecx;");
    asm("loc_10001B38: xor %ecx,%eax;");
    asm("loc_10001B3A: xor %ecx,%ecx;");
    asm("loc_10001B3C: mov 1(%esi),%cl;");
    asm("loc_10001B3F: inc %esi;");
    asm("loc_10001B40: xor %eax,%ecx;");
    asm("loc_10001B42: and $0xFF,%ecx;");
    asm("loc_10001B48: mov _data_1000E1D8(,%ecx,4),%ecx;");
    asm("loc_10001B4F: shr $8,%eax;");
    asm("loc_10001B52: xor %eax,%ecx;");
    asm("loc_10001B54: xor %eax,%eax;");
    asm("loc_10001B56: mov 1(%esi),%al;");
    asm("loc_10001B59: inc %esi;");
    asm("loc_10001B5A: xor %ecx,%eax;");
    asm("loc_10001B5C: and $0xFF,%eax;");
    asm("loc_10001B61: mov _data_1000E1D8(,%eax,4),%eax;");
    asm("loc_10001B68: shr $8,%ecx;");
    asm("loc_10001B6B: xor %ecx,%eax;");
    asm("loc_10001B6D: xor %ecx,%ecx;");
    asm("loc_10001B6F: mov 1(%esi),%cl;");
    asm("loc_10001B72: inc %esi;");
    asm("loc_10001B73: xor %eax,%ecx;");
    asm("loc_10001B75: and $0xFF,%ecx;");
    asm("loc_10001B7B: mov _data_1000E1D8(,%ecx,4),%ecx;");
    asm("loc_10001B82: shr $8,%eax;");
    asm("loc_10001B85: xor %ecx,%eax;");
    asm("loc_10001B87: inc %esi;");
    asm("loc_10001B88: dec %edi;");
    asm("loc_10001B89: jne loc_10001AB7;");
    asm("loc_10001B8F: pop %edi;");
    asm("loc_10001B90: pop %ebx;");
    asm("loc_10001B91: test %edx,%edx;");
    asm("loc_10001B93: je loc_10001BB1;");
    asm("loc_10001B95: xor %ecx,%ecx;");
    asm("loc_10001B97: mov (%esi),%cl;");
    asm("loc_10001B99: xor %eax,%ecx;");
    asm("loc_10001B9B: and $0xFF,%ecx;");
    asm("loc_10001BA1: mov _data_1000E1D8(,%ecx,4),%ecx;");
    asm("loc_10001BA8: shr $8,%eax;");
    asm("loc_10001BAB: xor %ecx,%eax;");
    asm("loc_10001BAD: inc %esi;");
    asm("loc_10001BAE: dec %edx;");
    asm("loc_10001BAF: jne loc_10001B95;");
    asm("loc_10001BB1: not %eax;");
    asm("loc_10001BB3: pop %esi;");
    asm("loc_10001BB4: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001BC0() // _deflateSetDictionary
{
    __DEBUG_ASM(10001BC0);
    // chunk 0x10001BC0 _sub_10001BC0
    asm("loc_10001BC0: mov 4(%esp),%eax;");
    asm("loc_10001BC4: test %eax,%eax;");
    asm("loc_10001BC6: push %ebx;");
    asm("loc_10001BC7: push %ebp;");
    asm("loc_10001BC8: push %esi;");
    asm("loc_10001BC9: push %edi;");
    asm("loc_10001BCA: mov 0x1C(%esp),%edi;");
    asm("loc_10001BCE: mov %edi,%ebp;");
    asm("loc_10001BD0: je loc_10001CA6;");
    asm("loc_10001BD6: mov 0x1C(%eax),%ebx;");
    asm("loc_10001BD9: test %ebx,%ebx;");
    asm("loc_10001BDB: je loc_10001CA6;");
    asm("loc_10001BE1: mov 0x18(%esp),%esi;");
    asm("loc_10001BE5: test %esi,%esi;");
    asm("loc_10001BE7: je loc_10001CA6;");
    asm("loc_10001BED: cmpl $0x2A,4(%ebx);");
    asm("loc_10001BF1: jne loc_10001CA6;");
    asm("loc_10001BF7: mov 0x30(%eax),%eax;");
    asm("loc_10001BFA: push %edi;");
    asm("loc_10001BFB: push %esi;");
    asm("loc_10001BFC: push %eax;");
    asm("loc_10001BFD: call _sub_10001710;");
    asm("loc_10001C02: cmp $3,%edi;");
    asm("loc_10001C05: mov 0x14(%esp),%ecx;");
    asm("loc_10001C09: mov %eax,0x30(%ecx);");
    asm("loc_10001C0C: jb loc_10001C9D;");
    asm("loc_10001C12: mov 0x24(%ebx),%eax;");
    asm("loc_10001C15: add $0xFFFFFEFA,%eax;");
    asm("loc_10001C1A: cmp %eax,%edi;");
    asm("loc_10001C1C: jbe loc_10001C24;");
    asm("loc_10001C1E: mov %eax,%ebp;");
    asm("loc_10001C20: sub %ebp,%edi;");
    asm("loc_10001C22: add %edi,%esi;");
    asm("loc_10001C24: mov 0x30(%ebx),%edi;");
    asm("loc_10001C27: mov %ebp,%ecx;");
    asm("loc_10001C29: mov %ecx,%edx;");
    asm("loc_10001C2B: shr $2,%ecx;");
    asm("loc_10001C2E: rep movsl (%esi),(%edi);");
    asm("loc_10001C30: mov %edx,%ecx;");
    asm("loc_10001C32: and $3,%ecx;");
    asm("loc_10001C35: rep movsb (%esi),(%edi);");
    asm("loc_10001C37: mov 0x30(%ebx),%edx;");
    asm("loc_10001C3A: mov 0x50(%ebx),%ecx;");
    asm("loc_10001C3D: mov %ebp,0x64(%ebx);");
    asm("loc_10001C40: mov %ebp,0x54(%ebx);");
    asm("loc_10001C43: movzbl (%edx),%eax;");
    asm("loc_10001C46: mov %eax,0x40(%ebx);");
    asm("loc_10001C49: shl %cl,%eax;");
    asm("loc_10001C4B: movzbl 1(%edx),%ecx;");
    asm("loc_10001C4F: xor %ecx,%eax;");
    asm("loc_10001C51: and 0x4C(%ebx),%eax;");
    asm("loc_10001C54: mov %eax,0x40(%ebx);");
    asm("loc_10001C57: xor %edx,%edx;");
    asm("loc_10001C59: lea -3(%ebp),%esi;");
    asm("loc_10001C5C: lea (%esp),%esp;");
    asm("loc_10001C60: mov 0x40(%ebx),%edi;");
    asm("loc_10001C63: mov 0x50(%ebx),%ecx;");
    asm("loc_10001C66: mov 0x30(%ebx),%eax;");
    asm("loc_10001C69: movzbl 2(%eax,%edx),%eax;");
    asm("loc_10001C6E: mov 0x38(%ebx),%ebp;");
    asm("loc_10001C71: shl %cl,%edi;");
    asm("loc_10001C73: mov 0x4C(%ebx),%ecx;");
    asm("loc_10001C76: xor %edi,%eax;");
    asm("loc_10001C78: mov 0x2C(%ebx),%edi;");
    asm("loc_10001C7B: and %ecx,%eax;");
    asm("loc_10001C7D: mov 0x3C(%ebx),%ecx;");
    asm("loc_10001C80: mov %eax,0x40(%ebx);");
    asm("loc_10001C83: mov (%ecx,%eax,2),%ax;");
    asm("loc_10001C87: and %edx,%edi;");
    asm("loc_10001C89: mov %ax,(%ebp,%edi,2);");
    asm("loc_10001C8E: mov 0x40(%ebx),%ecx;");
    asm("loc_10001C91: mov 0x3C(%ebx),%eax;");
    asm("loc_10001C94: mov %dx,(%eax,%ecx,2);");
    asm("loc_10001C98: inc %edx;");
    asm("loc_10001C99: cmp %esi,%edx;");
    asm("loc_10001C9B: jbe loc_10001C60;");
    asm("loc_10001C9D: pop %edi;");
    asm("loc_10001C9E: pop %esi;");
    asm("loc_10001C9F: pop %ebp;");
    asm("loc_10001CA0: xor %eax,%eax;");
    asm("loc_10001CA2: pop %ebx;");
    asm("loc_10001CA3: ret $0xC;");
    asm("loc_10001CA6: pop %edi;");
    asm("loc_10001CA7: pop %esi;");
    asm("loc_10001CA8: pop %ebp;");
    asm("loc_10001CA9: mov $0xFFFFFFFE,%eax;");
    asm("loc_10001CAE: pop %ebx;");
    asm("loc_10001CAF: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001CC0() // _sub_10001CC0
{
    __DEBUG_ASM(10001CC0);
    // chunk 0x10001CC0 _sub_10001CC0
    asm("loc_10001CC0: push %esi;");
    asm("loc_10001CC1: mov 8(%eax),%esi;");
    asm("loc_10001CC4: mov %ecx,%edx;");
    asm("loc_10001CC6: push %edi;");
    asm("loc_10001CC7: mov 0x14(%eax),%edi;");
    asm("loc_10001CCA: shr $8,%edx;");
    asm("loc_10001CCD: mov %dl,(%esi,%edi);");
    asm("loc_10001CD0: mov 0x14(%eax),%edx;");
    asm("loc_10001CD3: mov 8(%eax),%esi;");
    asm("loc_10001CD6: inc %edx;");
    asm("loc_10001CD7: mov %edx,0x14(%eax);");
    asm("loc_10001CDA: mov %cl,(%edx,%esi);");
    asm("loc_10001CDD: mov 0x14(%eax),%ecx;");
    asm("loc_10001CE0: inc %ecx;");
    asm("loc_10001CE1: pop %edi;");
    asm("loc_10001CE2: mov %ecx,0x14(%eax);");
    asm("loc_10001CE5: pop %esi;");
    asm("loc_10001CE6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001CF0() // _sub_10001CF0
{
    __DEBUG_ASM(10001CF0);
    // chunk 0x10001CF0 _sub_10001CF0
    asm("loc_10001CF0: mov 0x10(%eax),%ecx;");
    asm("loc_10001CF3: push %esi;");
    asm("loc_10001CF4: mov 0x1C(%eax),%esi;");
    asm("loc_10001CF7: mov 0x14(%esi),%edx;");
    asm("loc_10001CFA: cmp %ecx,%edx;");
    asm("loc_10001CFC: jbe loc_10001D00;");
    asm("loc_10001CFE: mov %ecx,%edx;");
    asm("loc_10001D00: test %edx,%edx;");
    asm("loc_10001D02: je loc_10001D52;");
    asm("loc_10001D04: mov 0x10(%esi),%esi;");
    asm("loc_10001D07: push %ebx;");
    asm("loc_10001D08: push %edi;");
    asm("loc_10001D09: mov 0xC(%eax),%edi;");
    asm("loc_10001D0C: mov %edx,%ecx;");
    asm("loc_10001D0E: mov %ecx,%ebx;");
    asm("loc_10001D10: shr $2,%ecx;");
    asm("loc_10001D13: rep movsl (%esi),(%edi);");
    asm("loc_10001D15: mov %ebx,%ecx;");
    asm("loc_10001D17: and $3,%ecx;");
    asm("loc_10001D1A: rep movsb (%esi),(%edi);");
    asm("loc_10001D1C: mov 0xC(%eax),%edi;");
    asm("loc_10001D1F: mov 0x1C(%eax),%ecx;");
    asm("loc_10001D22: add %edx,%edi;");
    asm("loc_10001D24: mov %edi,0xC(%eax);");
    asm("loc_10001D27: add %edx,0x10(%ecx);");
    asm("loc_10001D2A: mov 0x14(%eax),%ebx;");
    asm("loc_10001D2D: mov 0x10(%eax),%edi;");
    asm("loc_10001D30: mov 0x1C(%eax),%ecx;");
    asm("loc_10001D33: add %edx,%ebx;");
    asm("loc_10001D35: mov %ebx,0x14(%eax);");
    asm("loc_10001D38: sub %edx,%edi;");
    asm("loc_10001D3A: mov %edi,0x10(%eax);");
    asm("loc_10001D3D: sub %edx,0x14(%ecx);");
    asm("loc_10001D40: mov 0x1C(%eax),%eax;");
    asm("loc_10001D43: mov 0x14(%eax),%ecx;");
    asm("loc_10001D46: test %ecx,%ecx;");
    asm("loc_10001D48: pop %edi;");
    asm("loc_10001D49: pop %ebx;");
    asm("loc_10001D4A: jne loc_10001D52;");
    asm("loc_10001D4C: mov 8(%eax),%ecx;");
    asm("loc_10001D4F: mov %ecx,0x10(%eax);");
    asm("loc_10001D52: pop %esi;");
    asm("loc_10001D53: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001D60() // _deflate
{
    __DEBUG_ASM(10001D60);
    // chunk 0x10001D60 _sub_10001D60
    asm("loc_10001D60: push %ebx;");
    asm("loc_10001D61: mov 8(%esp),%ebx;");
    asm("loc_10001D65: test %ebx,%ebx;");
    asm("loc_10001D67: push %ebp;");
    asm("loc_10001D68: push %esi;");
    asm("loc_10001D69: push %edi;");
    asm("loc_10001D6A: je loc_10001FDA;");
    asm("loc_10001D70: mov 0x1C(%ebx),%esi;");
    asm("loc_10001D73: test %esi,%esi;");
    asm("loc_10001D75: je loc_10001FDA;");
    asm("loc_10001D7B: mov 0x18(%esp),%ebp;");
    asm("loc_10001D7F: cmp $4,%ebp;");
    asm("loc_10001D82: jg loc_10001FDA;");
    asm("loc_10001D88: test %ebp,%ebp;");
    asm("loc_10001D8A: jl loc_10001FDA;");
    asm("loc_10001D90: mov 0xC(%ebx),%eax;");
    asm("loc_10001D93: test %eax,%eax;");
    asm("loc_10001D95: je loc_10001FD2;");
    asm("loc_10001D9B: cmpl $0,(%ebx);");
    asm("loc_10001D9E: jne loc_10001DAB;");
    asm("loc_10001DA0: mov 4(%ebx),%eax;");
    asm("loc_10001DA3: test %eax,%eax;");
    asm("loc_10001DA5: jne loc_10001FD2;");
    asm("loc_10001DAB: mov 4(%esi),%eax;");
    asm("loc_10001DAE: cmp $0x29A,%eax;");
    asm("loc_10001DB3: jne loc_10001DBE;");
    asm("loc_10001DB5: cmp $4,%ebp;");
    asm("loc_10001DB8: jne loc_10001FD2;");
    asm("loc_10001DBE: mov 0x10(%ebx),%ecx;");
    asm("loc_10001DC1: test %ecx,%ecx;");
    asm("loc_10001DC3: je loc_10001EA9;");
    asm("loc_10001DC9: cmp $0x2A,%eax;");
    asm("loc_10001DCC: mov 0x20(%esi),%ecx;");
    asm("loc_10001DCF: mov %ebx,(%esi);");
    asm("loc_10001DD1: mov %ecx,0x14(%esp);");
    asm("loc_10001DD5: mov %ebp,0x20(%esi);");
    asm("loc_10001DD8: jne loc_10001E4C;");
    asm("loc_10001DDA: mov 0x28(%esi),%ecx;");
    asm("loc_10001DDD: mov 0x7C(%esi),%eax;");
    asm("loc_10001DE0: sub $8,%ecx;");
    asm("loc_10001DE3: shl $0xC,%ecx;");
    asm("loc_10001DE6: add $0x800,%ecx;");
    asm("loc_10001DEC: dec %eax;");
    asm("loc_10001DED: sar $1,%eax;");
    asm("loc_10001DEF: cmp $3,%eax;");
    asm("loc_10001DF2: jbe loc_10001DF9;");
    asm("loc_10001DF4: mov $3,%eax;");
    asm("loc_10001DF9: shl $6,%eax;");
    asm("loc_10001DFC: or %eax,%ecx;");
    asm("loc_10001DFE: mov 0x64(%esi),%eax;");
    asm("loc_10001E01: test %eax,%eax;");
    asm("loc_10001E03: je loc_10001E08;");
    asm("loc_10001E05: or $0x20,%ecx;");
    asm("loc_10001E08: mov %ecx,%eax;");
    asm("loc_10001E0A: xor %edx,%edx;");
    asm("loc_10001E0C: mov $0x1F,%edi;");
    asm("loc_10001E11: div %edi;");
    asm("loc_10001E13: mov %esi,%eax;");
    asm("loc_10001E15: movl $0x71,4(%esi);");
    asm("loc_10001E1C: sub %edx,%ecx;");
    asm("loc_10001E1E: add %edi,%ecx;");
    asm("loc_10001E20: call _sub_10001CC0;");
    asm("loc_10001E25: mov 0x64(%esi),%eax;");
    asm("loc_10001E28: test %eax,%eax;");
    asm("loc_10001E2A: je loc_10001E45;");
    asm("loc_10001E2C: movzwl 0x32(%ebx),%ecx;");
    asm("loc_10001E30: mov %esi,%eax;");
    asm("loc_10001E32: call _sub_10001CC0;");
    asm("loc_10001E37: mov 0x30(%ebx),%ecx;");
    asm("loc_10001E3A: and $0xFFFF,%ecx;");
    asm("loc_10001E40: call _sub_10001CC0;");
    asm("loc_10001E45: movl $1,0x30(%ebx);");
    asm("loc_10001E4C: mov 0x14(%esi),%eax;");
    asm("loc_10001E4F: test %eax,%eax;");
    asm("loc_10001E51: je loc_10001E71;");
    asm("loc_10001E53: mov %ebx,%eax;");
    asm("loc_10001E55: call _sub_10001CF0;");
    asm("loc_10001E5A: mov 0x10(%ebx),%eax;");
    asm("loc_10001E5D: test %eax,%eax;");
    asm("loc_10001E5F: jne loc_10001E98;");
    asm("loc_10001E61: pop %edi;");
    asm("loc_10001E62: movl $0xFFFFFFFF,0x20(%esi);");
    asm("loc_10001E69: pop %esi;");
    asm("loc_10001E6A: pop %ebp;");
    asm("loc_10001E6B: xor %eax,%eax;");
    asm("loc_10001E6D: pop %ebx;");
    asm("loc_10001E6E: ret $8;");
    asm("loc_10001E71: mov 4(%ebx),%eax;");
    asm("loc_10001E74: test %eax,%eax;");
    asm("loc_10001E76: jne loc_10001E98;");
    asm("loc_10001E78: cmp 0x14(%esp),%ebp;");
    asm("loc_10001E7C: jg loc_10001E98;");
    asm("loc_10001E7E: cmp $4,%ebp;");
    asm("loc_10001E81: je loc_10001E98;");
    asm("loc_10001E83: mov _off_1000E1BC,%edx;");
    asm("loc_10001E89: pop %edi;");
    asm("loc_10001E8A: pop %esi;");
    asm("loc_10001E8B: pop %ebp;");
    asm("loc_10001E8C: mov %edx,0x18(%ebx);");
    asm("loc_10001E8F: mov $0xFFFFFFFB,%eax;");
    asm("loc_10001E94: pop %ebx;");
    asm("loc_10001E95: ret $8;");
    asm("loc_10001E98: mov 4(%esi),%eax;");
    asm("loc_10001E9B: cmp $0x29A,%eax;");
    asm("loc_10001EA0: mov 4(%ebx),%ecx;");
    asm("loc_10001EA3: jne loc_10001EBD;");
    asm("loc_10001EA5: test %ecx,%ecx;");
    asm("loc_10001EA7: je loc_10001EC1;");
    asm("loc_10001EA9: mov _off_1000E1BC,%eax;");
    asm("loc_10001EAE: pop %edi;");
    asm("loc_10001EAF: pop %esi;");
    asm("loc_10001EB0: mov %eax,0x18(%ebx);");
    asm("loc_10001EB3: pop %ebp;");
    asm("loc_10001EB4: mov $0xFFFFFFFB,%eax;");
    asm("loc_10001EB9: pop %ebx;");
    asm("loc_10001EBA: ret $8;");
    asm("loc_10001EBD: test %ecx,%ecx;");
    asm("loc_10001EBF: jne loc_10001EDB;");
    asm("loc_10001EC1: mov 0x6C(%esi),%ecx;");
    asm("loc_10001EC4: test %ecx,%ecx;");
    asm("loc_10001EC6: jne loc_10001EDB;");
    asm("loc_10001EC8: test %ebp,%ebp;");
    asm("loc_10001ECA: je loc_10001F6B;");
    asm("loc_10001ED0: cmp $0x29A,%eax;");
    asm("loc_10001ED5: je loc_10001F6B;");
    asm("loc_10001EDB: mov 0x7C(%esi),%eax;");
    asm("loc_10001EDE: push %ebp;");
    asm("loc_10001EDF: lea (%eax,%eax,2),%ecx;");
    asm("loc_10001EE2: push %esi;");
    asm("loc_10001EE3: calll *_off_1000B0C0(,%ecx,4);");
    asm("loc_10001EEA: add $8,%esp;");
    asm("loc_10001EED: cmp $2,%eax;");
    asm("loc_10001EF0: je loc_10001EF7;");
    asm("loc_10001EF2: cmp $3,%eax;");
    asm("loc_10001EF5: jne loc_10001EFE;");
    asm("loc_10001EF7: movl $0x29A,4(%esi);");
    asm("loc_10001EFE: test %eax,%eax;");
    asm("loc_10001F00: je loc_10001FBB;");
    asm("loc_10001F06: cmp $2,%eax;");
    asm("loc_10001F09: je loc_10001FBB;");
    asm("loc_10001F0F: cmp $1,%eax;");
    asm("loc_10001F12: jne loc_10001F6B;");
    asm("loc_10001F14: cmp %eax,%ebp;");
    asm("loc_10001F16: jne loc_10001F23;");
    asm("loc_10001F18: push %esi;");
    asm("loc_10001F19: call _sub_10007F40;");
    asm("loc_10001F1E: add $4,%esp;");
    asm("loc_10001F21: jmp loc_10001F5D;");
    asm("loc_10001F23: push $0;");
    asm("loc_10001F25: push $0;");
    asm("loc_10001F27: push $0;");
    asm("loc_10001F29: push %esi;");
    asm("loc_10001F2A: call _sub_10007EA0;");
    asm("loc_10001F2F: add $0x10,%esp;");
    asm("loc_10001F32: cmp $3,%ebp;");
    asm("loc_10001F35: jne loc_10001F5D;");
    asm("loc_10001F37: mov 0x44(%esi),%edx;");
    asm("loc_10001F3A: mov 0x3C(%esi),%eax;");
    asm("loc_10001F3D: movw $0,-2(%eax,%edx,2);");
    asm("loc_10001F44: mov 0x44(%esi),%ecx;");
    asm("loc_10001F47: mov 0x3C(%esi),%edi;");
    asm("loc_10001F4A: lea -2(%ecx,%ecx),%ecx;");
    asm("loc_10001F4E: mov %ecx,%edx;");
    asm("loc_10001F50: shr $2,%ecx;");
    asm("loc_10001F53: xor %eax,%eax;");
    asm("loc_10001F55: rep stos %eax,(%edi);");
    asm("loc_10001F57: mov %edx,%ecx;");
    asm("loc_10001F59: and %ebp,%ecx;");
    asm("loc_10001F5B: rep stos %al,(%edi);");
    asm("loc_10001F5D: mov %ebx,%eax;");
    asm("loc_10001F5F: call _sub_10001CF0;");
    asm("loc_10001F64: mov 0x10(%ebx),%eax;");
    asm("loc_10001F67: test %eax,%eax;");
    asm("loc_10001F69: je loc_10001FC2;");
    asm("loc_10001F6B: cmp $4,%ebp;");
    asm("loc_10001F6E: jne loc_10001FC9;");
    asm("loc_10001F70: mov 0x18(%esi),%eax;");
    asm("loc_10001F73: test %eax,%eax;");
    asm("loc_10001F75: je loc_10001F83;");
    asm("loc_10001F77: pop %edi;");
    asm("loc_10001F78: pop %esi;");
    asm("loc_10001F79: pop %ebp;");
    asm("loc_10001F7A: mov $1,%eax;");
    asm("loc_10001F7F: pop %ebx;");
    asm("loc_10001F80: ret $8;");
    asm("loc_10001F83: movzwl 0x32(%ebx),%ecx;");
    asm("loc_10001F87: mov %esi,%eax;");
    asm("loc_10001F89: call _sub_10001CC0;");
    asm("loc_10001F8E: mov 0x30(%ebx),%ecx;");
    asm("loc_10001F91: and $0xFFFF,%ecx;");
    asm("loc_10001F97: call _sub_10001CC0;");
    asm("loc_10001F9C: mov %ebx,%eax;");
    asm("loc_10001F9E: call _sub_10001CF0;");
    asm("loc_10001FA3: mov 0x14(%esi),%ecx;");
    asm("loc_10001FA6: pop %edi;");
    asm("loc_10001FA7: movl $0xFFFFFFFF,0x18(%esi);");
    asm("loc_10001FAE: pop %esi;");
    asm("loc_10001FAF: xor %eax,%eax;");
    asm("loc_10001FB1: test %ecx,%ecx;");
    asm("loc_10001FB3: pop %ebp;");
    asm("loc_10001FB4: sete %al;");
    asm("loc_10001FB7: pop %ebx;");
    asm("loc_10001FB8: ret $8;");
    asm("loc_10001FBB: mov 0x10(%ebx),%eax;");
    asm("loc_10001FBE: test %eax,%eax;");
    asm("loc_10001FC0: jne loc_10001FC9;");
    asm("loc_10001FC2: movl $0xFFFFFFFF,0x20(%esi);");
    asm("loc_10001FC9: pop %edi;");
    asm("loc_10001FCA: pop %esi;");
    asm("loc_10001FCB: pop %ebp;");
    asm("loc_10001FCC: xor %eax,%eax;");
    asm("loc_10001FCE: pop %ebx;");
    asm("loc_10001FCF: ret $8;");
    asm("loc_10001FD2: mov _off_1000E1B0,%eax;");
    asm("loc_10001FD7: mov %eax,0x18(%ebx);");
    asm("loc_10001FDA: pop %edi;");
    asm("loc_10001FDB: pop %esi;");
    asm("loc_10001FDC: pop %ebp;");
    asm("loc_10001FDD: mov $0xFFFFFFFE,%eax;");
    asm("loc_10001FE2: pop %ebx;");
    asm("loc_10001FE3: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10001FF0() // _deflateEnd
{
    __DEBUG_ASM(10001FF0);
    // chunk 0x10001FF0 _sub_10001FF0
    asm("loc_10001FF0: push %esi;");
    asm("loc_10001FF1: mov 8(%esp),%esi;");
    asm("loc_10001FF5: test %esi,%esi;");
    asm("loc_10001FF7: push %edi;");
    asm("loc_10001FF8: je loc_10002095;");
    asm("loc_10001FFE: mov 0x1C(%esi),%eax;");
    asm("loc_10002001: test %eax,%eax;");
    asm("loc_10002003: je loc_10002095;");
    asm("loc_10002009: mov 4(%eax),%edi;");
    asm("loc_1000200C: cmp $0x2A,%edi;");
    asm("loc_1000200F: je loc_1000201E;");
    asm("loc_10002011: cmp $0x71,%edi;");
    asm("loc_10002014: je loc_1000201E;");
    asm("loc_10002016: cmp $0x29A,%edi;");
    asm("loc_1000201C: jne loc_10002095;");
    asm("loc_1000201E: mov 8(%eax),%eax;");
    asm("loc_10002021: test %eax,%eax;");
    asm("loc_10002023: je loc_10002030;");
    asm("loc_10002025: push %eax;");
    asm("loc_10002026: mov 0x28(%esi),%eax;");
    asm("loc_10002029: push %eax;");
    asm("loc_1000202A: calll *0x24(%esi);");
    asm("loc_1000202D: add $8,%esp;");
    asm("loc_10002030: mov 0x1C(%esi),%ecx;");
    asm("loc_10002033: mov 0x3C(%ecx),%eax;");
    asm("loc_10002036: test %eax,%eax;");
    asm("loc_10002038: je loc_10002045;");
    asm("loc_1000203A: mov 0x28(%esi),%edx;");
    asm("loc_1000203D: push %eax;");
    asm("loc_1000203E: push %edx;");
    asm("loc_1000203F: calll *0x24(%esi);");
    asm("loc_10002042: add $8,%esp;");
    asm("loc_10002045: mov 0x1C(%esi),%eax;");
    asm("loc_10002048: mov 0x38(%eax),%eax;");
    asm("loc_1000204B: test %eax,%eax;");
    asm("loc_1000204D: je loc_1000205A;");
    asm("loc_1000204F: mov 0x28(%esi),%ecx;");
    asm("loc_10002052: push %eax;");
    asm("loc_10002053: push %ecx;");
    asm("loc_10002054: calll *0x24(%esi);");
    asm("loc_10002057: add $8,%esp;");
    asm("loc_1000205A: mov 0x1C(%esi),%edx;");
    asm("loc_1000205D: mov 0x30(%edx),%eax;");
    asm("loc_10002060: test %eax,%eax;");
    asm("loc_10002062: je loc_1000206F;");
    asm("loc_10002064: push %eax;");
    asm("loc_10002065: mov 0x28(%esi),%eax;");
    asm("loc_10002068: push %eax;");
    asm("loc_10002069: calll *0x24(%esi);");
    asm("loc_1000206C: add $8,%esp;");
    asm("loc_1000206F: mov 0x1C(%esi),%ecx;");
    asm("loc_10002072: mov 0x28(%esi),%edx;");
    asm("loc_10002075: push %ecx;");
    asm("loc_10002076: push %edx;");
    asm("loc_10002077: calll *0x24(%esi);");
    asm("loc_1000207A: add $8,%esp;");
    asm("loc_1000207D: xor %eax,%eax;");
    asm("loc_1000207F: cmp $0x71,%edi;");
    asm("loc_10002082: setne %al;");
    asm("loc_10002085: pop %edi;");
    asm("loc_10002086: movl $0,0x1C(%esi);");
    asm("loc_1000208D: pop %esi;");
    asm("loc_1000208E: dec %eax;");
    asm("loc_1000208F: and $0xFFFFFFFD,%eax;");
    asm("loc_10002092: ret $4;");
    asm("loc_10002095: pop %edi;");
    asm("loc_10002096: mov $0xFFFFFFFE,%eax;");
    asm("loc_1000209B: pop %esi;");
    asm("loc_1000209C: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100020A0() // _deflateCopy
{
    __DEBUG_ASM(100020A0);
    // chunk 0x100020A0 _sub_100020A0
    asm("loc_100020A0: push %ebx;");
    asm("loc_100020A1: push %ebp;");
    asm("loc_100020A2: push %esi;");
    asm("loc_100020A3: mov 0x14(%esp),%esi;");
    asm("loc_100020A7: test %esi,%esi;");
    asm("loc_100020A9: push %edi;");
    asm("loc_100020AA: je loc_10002240;");
    asm("loc_100020B0: mov 0x14(%esp),%ebp;");
    asm("loc_100020B4: test %ebp,%ebp;");
    asm("loc_100020B6: je loc_10002240;");
    asm("loc_100020BC: mov 0x1C(%esi),%eax;");
    asm("loc_100020BF: test %eax,%eax;");
    asm("loc_100020C1: mov %eax,0x18(%esp);");
    asm("loc_100020C5: je loc_10002240;");
    asm("loc_100020CB: mov $0xE,%ecx;");
    asm("loc_100020D0: mov %ebp,%edi;");
    asm("loc_100020D2: push $0x16B8;");
    asm("loc_100020D7: rep movsl (%esi),(%edi);");
    asm("loc_100020D9: mov 0x28(%ebp),%eax;");
    asm("loc_100020DC: push $1;");
    asm("loc_100020DE: push %eax;");
    asm("loc_100020DF: calll *0x20(%ebp);");
    asm("loc_100020E2: mov %eax,%ebx;");
    asm("loc_100020E4: add $0xC,%esp;");
    asm("loc_100020E7: test %ebx,%ebx;");
    asm("loc_100020E9: je loc_10002234;");
    asm("loc_100020EF: mov 0x18(%esp),%esi;");
    asm("loc_100020F3: mov %ebx,0x1C(%ebp);");
    asm("loc_100020F6: mov $0x5AE,%ecx;");
    asm("loc_100020FB: mov %ebx,%edi;");
    asm("loc_100020FD: rep movsl (%esi),(%edi);");
    asm("loc_100020FF: mov 0x24(%ebx),%ecx;");
    asm("loc_10002102: push $2;");
    asm("loc_10002104: mov %ebp,(%ebx);");
    asm("loc_10002106: mov 0x28(%ebp),%edx;");
    asm("loc_10002109: push %ecx;");
    asm("loc_1000210A: push %edx;");
    asm("loc_1000210B: calll *0x20(%ebp);");
    asm("loc_1000210E: mov %eax,0x30(%ebx);");
    asm("loc_10002111: mov 0x24(%ebx),%eax;");
    asm("loc_10002114: mov 0x28(%ebp),%ecx;");
    asm("loc_10002117: push $2;");
    asm("loc_10002119: push %eax;");
    asm("loc_1000211A: push %ecx;");
    asm("loc_1000211B: calll *0x20(%ebp);");
    asm("loc_1000211E: mov 0x44(%ebx),%edx;");
    asm("loc_10002121: push $2;");
    asm("loc_10002123: mov %eax,0x38(%ebx);");
    asm("loc_10002126: mov 0x28(%ebp),%eax;");
    asm("loc_10002129: push %edx;");
    asm("loc_1000212A: push %eax;");
    asm("loc_1000212B: calll *0x20(%ebp);");
    asm("loc_1000212E: mov 0x1694(%ebx),%ecx;");
    asm("loc_10002134: push $4;");
    asm("loc_10002136: mov %eax,0x3C(%ebx);");
    asm("loc_10002139: mov 0x28(%ebp),%edx;");
    asm("loc_1000213C: push %ecx;");
    asm("loc_1000213D: push %edx;");
    asm("loc_1000213E: calll *0x20(%ebp);");
    asm("loc_10002141: mov 0x30(%ebx),%edi;");
    asm("loc_10002144: add $0x30,%esp;");
    asm("loc_10002147: test %edi,%edi;");
    asm("loc_10002149: mov %eax,8(%ebx);");
    asm("loc_1000214C: je loc_1000222E;");
    asm("loc_10002152: mov 0x38(%ebx),%ecx;");
    asm("loc_10002155: test %ecx,%ecx;");
    asm("loc_10002157: je loc_1000222E;");
    asm("loc_1000215D: mov 0x3C(%ebx),%ecx;");
    asm("loc_10002160: test %ecx,%ecx;");
    asm("loc_10002162: je loc_1000222E;");
    asm("loc_10002168: test %eax,%eax;");
    asm("loc_1000216A: je loc_1000222E;");
    asm("loc_10002170: mov 0x24(%ebx),%ecx;");
    asm("loc_10002173: mov 0x18(%esp),%edx;");
    asm("loc_10002177: mov 0x30(%edx),%esi;");
    asm("loc_1000217A: shl $1,%ecx;");
    asm("loc_1000217C: mov %ecx,%ebp;");
    asm("loc_1000217E: shr $2,%ecx;");
    asm("loc_10002181: rep movsl (%esi),(%edi);");
    asm("loc_10002183: mov %ebp,%ecx;");
    asm("loc_10002185: and $3,%ecx;");
    asm("loc_10002188: rep movsb (%esi),(%edi);");
    asm("loc_1000218A: mov 0x38(%edx),%esi;");
    asm("loc_1000218D: mov 0x24(%ebx),%ecx;");
    asm("loc_10002190: mov 0x38(%ebx),%edi;");
    asm("loc_10002193: shl $1,%ecx;");
    asm("loc_10002195: mov %ecx,%ebp;");
    asm("loc_10002197: shr $2,%ecx;");
    asm("loc_1000219A: rep movsl (%esi),(%edi);");
    asm("loc_1000219C: mov %ebp,%ecx;");
    asm("loc_1000219E: and $3,%ecx;");
    asm("loc_100021A1: rep movsb (%esi),(%edi);");
    asm("loc_100021A3: mov 0x3C(%edx),%esi;");
    asm("loc_100021A6: mov 0x44(%ebx),%ecx;");
    asm("loc_100021A9: mov 0x3C(%ebx),%edi;");
    asm("loc_100021AC: shl $1,%ecx;");
    asm("loc_100021AE: mov %ecx,%ebp;");
    asm("loc_100021B0: shr $2,%ecx;");
    asm("loc_100021B3: rep movsl (%esi),(%edi);");
    asm("loc_100021B5: mov %ebp,%ecx;");
    asm("loc_100021B7: and $3,%ecx;");
    asm("loc_100021BA: rep movsb (%esi),(%edi);");
    asm("loc_100021BC: mov 8(%edx),%esi;");
    asm("loc_100021BF: mov 0xC(%ebx),%ecx;");
    asm("loc_100021C2: mov 8(%ebx),%edi;");
    asm("loc_100021C5: mov %ecx,%ebp;");
    asm("loc_100021C7: shr $2,%ecx;");
    asm("loc_100021CA: rep movsl (%esi),(%edi);");
    asm("loc_100021CC: mov %ebp,%ecx;");
    asm("loc_100021CE: and $3,%ecx;");
    asm("loc_100021D1: rep movsb (%esi),(%edi);");
    asm("loc_100021D3: mov 8(%edx),%edi;");
    asm("loc_100021D6: mov 0x10(%edx),%ecx;");
    asm("loc_100021D9: mov 8(%ebx),%esi;");
    asm("loc_100021DC: sub %edi,%ecx;");
    asm("loc_100021DE: add %esi,%ecx;");
    asm("loc_100021E0: mov %ecx,0x10(%ebx);");
    asm("loc_100021E3: mov 0x1694(%ebx),%ecx;");
    asm("loc_100021E9: mov %ecx,%edx;");
    asm("loc_100021EB: shr $1,%edx;");
    asm("loc_100021ED: lea (%eax,%edx,2),%eax;");
    asm("loc_100021F0: lea (%esi,%ecx,2),%edx;");
    asm("loc_100021F3: add %edx,%ecx;");
    asm("loc_100021F5: pop %edi;");
    asm("loc_100021F6: mov %eax,0x169C(%ebx);");
    asm("loc_100021FC: mov %ecx,0x1690(%ebx);");
    asm("loc_10002202: lea 0x8C(%ebx),%eax;");
    asm("loc_10002208: pop %esi;");
    asm("loc_10002209: lea 0x980(%ebx),%ecx;");
    asm("loc_1000220F: lea 0xA74(%ebx),%edx;");
    asm("loc_10002215: mov %eax,0xB10(%ebx);");
    asm("loc_1000221B: pop %ebp;");
    asm("loc_1000221C: mov %ecx,0xB1C(%ebx);");
    asm("loc_10002222: mov %edx,0xB28(%ebx);");
    asm("loc_10002228: xor %eax,%eax;");
    asm("loc_1000222A: pop %ebx;");
    asm("loc_1000222B: ret $8;");
    asm("loc_1000222E: push %ebp;");
    asm("loc_1000222F: call _sub_10001FF0;");
    asm("loc_10002234: pop %edi;");
    asm("loc_10002235: pop %esi;");
    asm("loc_10002236: pop %ebp;");
    asm("loc_10002237: mov $0xFFFFFFFC,%eax;");
    asm("loc_1000223C: pop %ebx;");
    asm("loc_1000223D: ret $8;");
    asm("loc_10002240: pop %edi;");
    asm("loc_10002241: pop %esi;");
    asm("loc_10002242: pop %ebp;");
    asm("loc_10002243: mov $0xFFFFFFFE,%eax;");
    asm("loc_10002248: pop %ebx;");
    asm("loc_10002249: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10002250() // _sub_10002250
{
    __DEBUG_ASM(10002250);
    // chunk 0x10002250 _sub_10002250
    asm("loc_10002250: push %ebx;");
    asm("loc_10002251: push %ebp;");
    asm("loc_10002252: mov 0xC(%esp),%ebp;");
    asm("loc_10002256: mov 4(%ebp),%eax;");
    asm("loc_10002259: mov %eax,%ebx;");
    asm("loc_1000225B: cmp %ecx,%ebx;");
    asm("loc_1000225D: jbe loc_10002261;");
    asm("loc_1000225F: mov %ecx,%ebx;");
    asm("loc_10002261: test %ebx,%ebx;");
    asm("loc_10002263: jne loc_1000226A;");
    asm("loc_10002265: pop %ebp;");
    asm("loc_10002266: xor %eax,%eax;");
    asm("loc_10002268: pop %ebx;");
    asm("loc_10002269: ret;");
    asm("loc_1000226A: sub %ebx,%eax;");
    asm("loc_1000226C: mov %eax,4(%ebp);");
    asm("loc_1000226F: mov 0x1C(%ebp),%eax;");
    asm("loc_10002272: mov 0x18(%eax),%ecx;");
    asm("loc_10002275: test %ecx,%ecx;");
    asm("loc_10002277: jne loc_1000228A;");
    asm("loc_10002279: mov (%ebp),%ecx;");
    asm("loc_1000227C: mov 0x30(%ebp),%edx;");
    asm("loc_1000227F: push %ebx;");
    asm("loc_10002280: push %ecx;");
    asm("loc_10002281: push %edx;");
    asm("loc_10002282: call _sub_10001710;");
    asm("loc_10002287: mov %eax,0x30(%ebp);");
    asm("loc_1000228A: push %esi;");
    asm("loc_1000228B: mov (%ebp),%esi;");
    asm("loc_1000228E: push %edi;");
    asm("loc_1000228F: mov 0x18(%esp),%edi;");
    asm("loc_10002293: mov %ebx,%ecx;");
    asm("loc_10002295: mov %ecx,%eax;");
    asm("loc_10002297: shr $2,%ecx;");
    asm("loc_1000229A: rep movsl (%esi),(%edi);");
    asm("loc_1000229C: mov %eax,%ecx;");
    asm("loc_1000229E: and $3,%ecx;");
    asm("loc_100022A1: rep movsb (%esi),(%edi);");
    asm("loc_100022A3: mov (%ebp),%ecx;");
    asm("loc_100022A6: mov 8(%ebp),%eax;");
    asm("loc_100022A9: pop %edi;");
    asm("loc_100022AA: add %ebx,%eax;");
    asm("loc_100022AC: add %ebx,%ecx;");
    asm("loc_100022AE: pop %esi;");
    asm("loc_100022AF: mov %eax,8(%ebp);");
    asm("loc_100022B2: mov %ecx,(%ebp);");
    asm("loc_100022B5: pop %ebp;");
    asm("loc_100022B6: mov %ebx,%eax;");
    asm("loc_100022B8: pop %ebx;");
    asm("loc_100022B9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100022C0() // _sub_100022C0
{
    __DEBUG_ASM(100022C0);
    // chunk 0x100022C0 _sub_100022C0
    asm("loc_100022C0: mov 0x24(%edx),%eax;");
    asm("loc_100022C3: mov 0x44(%edx),%ecx;");
    asm("loc_100022C6: shl $1,%eax;");
    asm("loc_100022C8: mov %eax,0x34(%edx);");
    asm("loc_100022CB: mov 0x3C(%edx),%eax;");
    asm("loc_100022CE: push %ebx;");
    asm("loc_100022CF: push %esi;");
    asm("loc_100022D0: xor %esi,%esi;");
    asm("loc_100022D2: mov %si,-2(%eax,%ecx,2);");
    asm("loc_100022D7: mov 0x44(%edx),%ecx;");
    asm("loc_100022DA: lea -2(%ecx,%ecx),%ecx;");
    asm("loc_100022DE: mov %ecx,%ebx;");
    asm("loc_100022E0: shr $2,%ecx;");
    asm("loc_100022E3: push %edi;");
    asm("loc_100022E4: mov 0x3C(%edx),%edi;");
    asm("loc_100022E7: xor %eax,%eax;");
    asm("loc_100022E9: rep stos %eax,(%edi);");
    asm("loc_100022EB: mov %ebx,%ecx;");
    asm("loc_100022ED: and $3,%ecx;");
    asm("loc_100022F0: rep stos %al,(%edi);");
    asm("loc_100022F2: mov 0x7C(%edx),%eax;");
    asm("loc_100022F5: lea (%eax,%eax,2),%eax;");
    asm("loc_100022F8: shl $2,%eax;");
    asm("loc_100022FB: movzwl _data_1000B0BA(%eax),%ecx;");
    asm("loc_10002302: mov %ecx,0x78(%edx);");
    asm("loc_10002305: movzwl _data_1000B0B8(%eax),%ecx;");
    asm("loc_1000230C: mov %ecx,0x84(%edx);");
    asm("loc_10002312: movzwl _data_1000B0BC(%eax),%ecx;");
    asm("loc_10002319: mov %ecx,0x88(%edx);");
    asm("loc_1000231F: movzwl _data_1000B0BE(%eax),%eax;");
    asm("loc_10002326: pop %edi;");
    asm("loc_10002327: mov %eax,0x74(%edx);");
    asm("loc_1000232A: mov %esi,0x64(%edx);");
    asm("loc_1000232D: mov %esi,0x54(%edx);");
    asm("loc_10002330: mov %esi,0x6C(%edx);");
    asm("loc_10002333: mov $2,%eax;");
    asm("loc_10002338: mov %esi,0x60(%edx);");
    asm("loc_1000233B: mov %esi,0x40(%edx);");
    asm("loc_1000233E: pop %esi;");
    asm("loc_1000233F: mov %eax,0x70(%edx);");
    asm("loc_10002342: mov %eax,0x58(%edx);");
    asm("loc_10002345: pop %ebx;");
    asm("loc_10002346: jmp _sub_10003030;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10002350() // _sub_10002350
{
    __DEBUG_ASM(10002350);
    // chunk 0x10002350 _sub_10002350
    asm("loc_10002350: push %ebp;");
    asm("loc_10002351: mov 0x24(%ebx),%ebp;");
    asm("loc_10002354: push %esi;");
    asm("loc_10002355: push %edi;");
    asm("loc_10002356: mov 0x64(%ebx),%eax;");
    asm("loc_10002359: mov 0x34(%ebx),%edx;");
    asm("loc_1000235C: mov 0x6C(%ebx),%ecx;");
    asm("loc_1000235F: sub %eax,%edx;");
    asm("loc_10002361: sub %ecx,%edx;");
    asm("loc_10002363: jne loc_10002374;");
    asm("loc_10002365: test %eax,%eax;");
    asm("loc_10002367: jne loc_10002380;");
    asm("loc_10002369: test %ecx,%ecx;");
    asm("loc_1000236B: jne loc_10002380;");
    asm("loc_1000236D: mov %ebp,%edx;");
    asm("loc_1000236F: jmp loc_100023FD;");
    asm("loc_10002374: cmp $0xFFFFFFFF,%edx;");
    asm("loc_10002377: jne loc_10002380;");
    asm("loc_10002379: mov $0xFFFFFFFE,%edx;");
    asm("loc_1000237E: jmp loc_100023FD;");
    asm("loc_10002380: mov 0x24(%ebx),%ecx;");
    asm("loc_10002383: lea -0x106(%ecx,%ebp),%ecx;");
    asm("loc_1000238A: cmp %ecx,%eax;");
    asm("loc_1000238C: jb loc_100023FD;");
    asm("loc_1000238E: mov 0x30(%ebx),%edi;");
    asm("loc_10002391: mov %ebp,%ecx;");
    asm("loc_10002393: mov %ecx,%eax;");
    asm("loc_10002395: shr $2,%ecx;");
    asm("loc_10002398: lea (%edi,%ebp),%esi;");
    asm("loc_1000239B: rep movsl (%esi),(%edi);");
    asm("loc_1000239D: mov %eax,%ecx;");
    asm("loc_1000239F: and $3,%ecx;");
    asm("loc_100023A2: rep movsb (%esi),(%edi);");
    asm("loc_100023A4: mov 0x68(%ebx),%esi;");
    asm("loc_100023A7: mov 0x64(%ebx),%ecx;");
    asm("loc_100023AA: mov 0x54(%ebx),%eax;");
    asm("loc_100023AD: sub %ebp,%ecx;");
    asm("loc_100023AF: sub %ebp,%esi;");
    asm("loc_100023B1: mov %ecx,0x64(%ebx);");
    asm("loc_100023B4: mov 0x3C(%ebx),%ecx;");
    asm("loc_100023B7: mov %esi,0x68(%ebx);");
    asm("loc_100023BA: mov 0x44(%ebx),%esi;");
    asm("loc_100023BD: sub %ebp,%eax;");
    asm("loc_100023BF: mov %eax,0x54(%ebx);");
    asm("loc_100023C2: lea (%ecx,%esi,2),%ecx;");
    asm("loc_100023C5: movzwl -2(%ecx),%eax;");
    asm("loc_100023C9: sub $2,%ecx;");
    asm("loc_100023CC: cmp %ebp,%eax;");
    asm("loc_100023CE: jb loc_100023D4;");
    asm("loc_100023D0: sub %ebp,%eax;");
    asm("loc_100023D2: jmp loc_100023D6;");
    asm("loc_100023D4: xor %eax,%eax;");
    asm("loc_100023D6: dec %esi;");
    asm("loc_100023D7: mov %ax,(%ecx);");
    asm("loc_100023DA: jne loc_100023C5;");
    asm("loc_100023DC: mov 0x38(%ebx),%eax;");
    asm("loc_100023DF: mov %ebp,%esi;");
    asm("loc_100023E1: lea (%eax,%ebp,2),%ecx;");
    asm("loc_100023E4: movzwl -2(%ecx),%eax;");
    asm("loc_100023E8: sub $2,%ecx;");
    asm("loc_100023EB: cmp %ebp,%eax;");
    asm("loc_100023ED: jb loc_100023F3;");
    asm("loc_100023EF: sub %ebp,%eax;");
    asm("loc_100023F1: jmp loc_100023F5;");
    asm("loc_100023F3: xor %eax,%eax;");
    asm("loc_100023F5: dec %esi;");
    asm("loc_100023F6: mov %ax,(%ecx);");
    asm("loc_100023F9: jne loc_100023E4;");
    asm("loc_100023FB: add %ebp,%edx;");
    asm("loc_100023FD: mov (%ebx),%eax;");
    asm("loc_100023FF: mov 4(%eax),%ecx;");
    asm("loc_10002402: test %ecx,%ecx;");
    asm("loc_10002404: je loc_10002463;");
    asm("loc_10002406: mov 0x6C(%ebx),%ecx;");
    asm("loc_10002409: mov 0x64(%ebx),%edi;");
    asm("loc_1000240C: mov 0x30(%ebx),%esi;");
    asm("loc_1000240F: add %edi,%ecx;");
    asm("loc_10002411: add %esi,%ecx;");
    asm("loc_10002413: push %ecx;");
    asm("loc_10002414: push %eax;");
    asm("loc_10002415: mov %edx,%ecx;");
    asm("loc_10002417: call _sub_10002250;");
    asm("loc_1000241C: mov 0x6C(%ebx),%ecx;");
    asm("loc_1000241F: add %eax,%ecx;");
    asm("loc_10002421: mov %ecx,%edx;");
    asm("loc_10002423: add $8,%esp;");
    asm("loc_10002426: cmp $3,%edx;");
    asm("loc_10002429: mov %ecx,0x6C(%ebx);");
    asm("loc_1000242C: jb loc_1000244E;");
    asm("loc_1000242E: mov 0x64(%ebx),%eax;");
    asm("loc_10002431: mov 0x30(%ebx),%ecx;");
    asm("loc_10002434: lea (%eax,%ecx),%esi;");
    asm("loc_10002437: movzbl (%esi),%eax;");
    asm("loc_1000243A: mov 0x50(%ebx),%ecx;");
    asm("loc_1000243D: mov %eax,0x40(%ebx);");
    asm("loc_10002440: shl %cl,%eax;");
    asm("loc_10002442: movzbl 1(%esi),%ecx;");
    asm("loc_10002446: xor %ecx,%eax;");
    asm("loc_10002448: and 0x4C(%ebx),%eax;");
    asm("loc_1000244B: mov %eax,0x40(%ebx);");
    asm("loc_1000244E: cmp $0x106,%edx;");
    asm("loc_10002454: jae loc_10002463;");
    asm("loc_10002456: mov (%ebx),%edx;");
    asm("loc_10002458: mov 4(%edx),%eax;");
    asm("loc_1000245B: test %eax,%eax;");
    asm("loc_1000245D: jne loc_10002356;");
    asm("loc_10002463: pop %edi;");
    asm("loc_10002464: pop %esi;");
    asm("loc_10002465: pop %ebp;");
    asm("loc_10002466: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10002470() // _sub_10002470
{
    __DEBUG_ASM(10002470);
    // chunk 0x10002470 _sub_10002470
    asm("loc_10002470: push %ebx;");
    asm("loc_10002471: mov 8(%esp),%ebx;");
    asm("loc_10002475: mov 0xC(%ebx),%eax;");
    asm("loc_10002478: push %esi;");
    asm("loc_10002479: mov $0xFFFF,%esi;");
    asm("loc_1000247E: add $0xFFFFFFFB,%eax;");
    asm("loc_10002481: cmp %esi,%eax;");
    asm("loc_10002483: push %edi;");
    asm("loc_10002484: jae loc_10002488;");
    asm("loc_10002486: mov %eax,%esi;");
    asm("loc_10002488: mov 0x6C(%ebx),%eax;");
    asm("loc_1000248B: cmp $1,%eax;");
    asm("loc_1000248E: ja loc_100024A0;");
    asm("loc_10002490: call _sub_10002350;");
    asm("loc_10002495: mov 0x6C(%ebx),%eax;");
    asm("loc_10002498: test %eax,%eax;");
    asm("loc_1000249A: je loc_10002541;");
    asm("loc_100024A0: add %eax,0x64(%ebx);");
    asm("loc_100024A3: mov 0x54(%ebx),%ecx;");
    asm("loc_100024A6: mov 0x64(%ebx),%edx;");
    asm("loc_100024A9: movl $0,0x6C(%ebx);");
    asm("loc_100024B0: lea (%ecx,%esi),%eax;");
    asm("loc_100024B3: je loc_100024B9;");
    asm("loc_100024B5: cmp %eax,%edx;");
    asm("loc_100024B7: jb loc_100024F3;");
    asm("loc_100024B9: sub %eax,%edx;");
    asm("loc_100024BB: test %ecx,%ecx;");
    asm("loc_100024BD: mov %edx,0x6C(%ebx);");
    asm("loc_100024C0: mov %eax,0x64(%ebx);");
    asm("loc_100024C3: jl loc_100024CC;");
    asm("loc_100024C5: mov 0x30(%ebx),%edx;");
    asm("loc_100024C8: add %ecx,%edx;");
    asm("loc_100024CA: jmp loc_100024CE;");
    asm("loc_100024CC: xor %edx,%edx;");
    asm("loc_100024CE: push $0;");
    asm("loc_100024D0: sub %ecx,%eax;");
    asm("loc_100024D2: push %eax;");
    asm("loc_100024D3: push %edx;");
    asm("loc_100024D4: push %ebx;");
    asm("loc_100024D5: call _sub_10008140;");
    asm("loc_100024DA: mov 0x64(%ebx),%eax;");
    asm("loc_100024DD: mov %eax,0x54(%ebx);");
    asm("loc_100024E0: mov (%ebx),%eax;");
    asm("loc_100024E2: add $0x10,%esp;");
    asm("loc_100024E5: call _sub_10001CF0;");
    asm("loc_100024EA: mov (%ebx),%ecx;");
    asm("loc_100024EC: mov 0x10(%ecx),%eax;");
    asm("loc_100024EF: test %eax,%eax;");
    asm("loc_100024F1: je loc_1000253B;");
    asm("loc_100024F3: mov 0x54(%ebx),%ecx;");
    asm("loc_100024F6: mov 0x64(%ebx),%edx;");
    asm("loc_100024F9: mov 0x24(%ebx),%eax;");
    asm("loc_100024FC: sub %ecx,%edx;");
    asm("loc_100024FE: sub $0x106,%eax;");
    asm("loc_10002503: cmp %eax,%edx;");
    asm("loc_10002505: jb loc_10002488;");
    asm("loc_10002507: test %ecx,%ecx;");
    asm("loc_10002509: jl loc_10002512;");
    asm("loc_1000250B: mov 0x30(%ebx),%eax;");
    asm("loc_1000250E: add %ecx,%eax;");
    asm("loc_10002510: jmp loc_10002514;");
    asm("loc_10002512: xor %eax,%eax;");
    asm("loc_10002514: push $0;");
    asm("loc_10002516: push %edx;");
    asm("loc_10002517: push %eax;");
    asm("loc_10002518: push %ebx;");
    asm("loc_10002519: call _sub_10008140;");
    asm("loc_1000251E: mov 0x64(%ebx),%ecx;");
    asm("loc_10002521: mov (%ebx),%eax;");
    asm("loc_10002523: add $0x10,%esp;");
    asm("loc_10002526: mov %ecx,0x54(%ebx);");
    asm("loc_10002529: call _sub_10001CF0;");
    asm("loc_1000252E: mov (%ebx),%edx;");
    asm("loc_10002530: mov 0x10(%edx),%eax;");
    asm("loc_10002533: test %eax,%eax;");
    asm("loc_10002535: jne loc_10002488;");
    asm("loc_1000253B: pop %edi;");
    asm("loc_1000253C: pop %esi;");
    asm("loc_1000253D: xor %eax,%eax;");
    asm("loc_1000253F: pop %ebx;");
    asm("loc_10002540: ret;");
    asm("loc_10002541: mov 0x14(%esp),%edi;");
    asm("loc_10002545: test %edi,%edi;");
    asm("loc_10002547: je loc_1000253B;");
    asm("loc_10002549: mov 0x54(%ebx),%esi;");
    asm("loc_1000254C: test %esi,%esi;");
    asm("loc_1000254E: jl loc_10002557;");
    asm("loc_10002550: mov 0x30(%ebx),%eax;");
    asm("loc_10002553: add %esi,%eax;");
    asm("loc_10002555: jmp loc_10002559;");
    asm("loc_10002557: xor %eax,%eax;");
    asm("loc_10002559: mov 0x64(%ebx),%edx;");
    asm("loc_1000255C: xor %ecx,%ecx;");
    asm("loc_1000255E: cmp $4,%edi;");
    asm("loc_10002561: sete %cl;");
    asm("loc_10002564: sub %esi,%edx;");
    asm("loc_10002566: push %ecx;");
    asm("loc_10002567: push %edx;");
    asm("loc_10002568: push %eax;");
    asm("loc_10002569: push %ebx;");
    asm("loc_1000256A: call _sub_10008140;");
    asm("loc_1000256F: mov 0x64(%ebx),%eax;");
    asm("loc_10002572: mov %eax,0x54(%ebx);");
    asm("loc_10002575: mov (%ebx),%eax;");
    asm("loc_10002577: add $0x10,%esp;");
    asm("loc_1000257A: call _sub_10001CF0;");
    asm("loc_1000257F: mov (%ebx),%ecx;");
    asm("loc_10002581: mov 0x10(%ecx),%eax;");
    asm("loc_10002584: test %eax,%eax;");
    asm("loc_10002586: jne loc_10002598;");
    asm("loc_10002588: xor %eax,%eax;");
    asm("loc_1000258A: cmp $4,%edi;");
    asm("loc_1000258D: setne %al;");
    asm("loc_10002590: pop %edi;");
    asm("loc_10002591: pop %esi;");
    asm("loc_10002592: pop %ebx;");
    asm("loc_10002593: dec %eax;");
    asm("loc_10002594: and $2,%eax;");
    asm("loc_10002597: ret;");
    asm("loc_10002598: xor %eax,%eax;");
    asm("loc_1000259A: cmp $4,%edi;");
    asm("loc_1000259D: sete %al;");
    asm("loc_100025A0: pop %edi;");
    asm("loc_100025A1: pop %esi;");
    asm("loc_100025A2: pop %ebx;");
    asm("loc_100025A3: lea 1(%eax,%eax),%eax;");
    asm("loc_100025A7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100025B0() // _sub_100025B0
{
    __DEBUG_ASM(100025B0);
    // chunk 0x100025B0 _sub_100025B0
    asm("loc_100025B0: push %ebx;");
    asm("loc_100025B1: mov 8(%esp),%ebx;");
    asm("loc_100025B5: push %esi;");
    asm("loc_100025B6: push %edi;");
    asm("loc_100025B7: xor %edi,%edi;");
    asm("loc_100025B9: lea (%esp),%esp;");
    asm("loc_100025C0: mov 0x6C(%ebx),%eax;");
    asm("loc_100025C3: cmp $0x106,%eax;");
    asm("loc_100025C8: jae loc_100025ED;");
    asm("loc_100025CA: call _sub_10002350;");
    asm("loc_100025CF: mov 0x6C(%ebx),%eax;");
    asm("loc_100025D2: cmp $0x106,%eax;");
    asm("loc_100025D7: jae loc_100025E5;");
    asm("loc_100025D9: mov 0x14(%esp),%ecx;");
    asm("loc_100025DD: test %ecx,%ecx;");
    asm("loc_100025DF: je loc_1000283A;");
    asm("loc_100025E5: test %eax,%eax;");
    asm("loc_100025E7: je loc_10002840;");
    asm("loc_100025ED: cmp $3,%eax;");
    asm("loc_100025F0: jb loc_10002630;");
    asm("loc_100025F2: mov 0x40(%ebx),%eax;");
    asm("loc_100025F5: mov 0x50(%ebx),%ecx;");
    asm("loc_100025F8: mov 0x64(%ebx),%edx;");
    asm("loc_100025FB: mov 0x4C(%ebx),%esi;");
    asm("loc_100025FE: shl %cl,%eax;");
    asm("loc_10002600: mov 0x30(%ebx),%ecx;");
    asm("loc_10002603: movzbl 2(%ecx,%edx),%ecx;");
    asm("loc_10002608: xor %ecx,%eax;");
    asm("loc_1000260A: mov 0x3C(%ebx),%ecx;");
    asm("loc_1000260D: and %esi,%eax;");
    asm("loc_1000260F: mov %eax,0x40(%ebx);");
    asm("loc_10002612: movzwl (%ecx,%eax,2),%edi;");
    asm("loc_10002616: mov 0x2C(%ebx),%eax;");
    asm("loc_10002619: mov 0x38(%ebx),%ecx;");
    asm("loc_1000261C: and %edx,%eax;");
    asm("loc_1000261E: mov %di,(%ecx,%eax,2);");
    asm("loc_10002622: mov 0x40(%ebx),%edx;");
    asm("loc_10002625: mov 0x3C(%ebx),%eax;");
    asm("loc_10002628: mov 0x64(%ebx),%cx;");
    asm("loc_1000262C: mov %cx,(%eax,%edx,2);");
    asm("loc_10002630: test %edi,%edi;");
    asm("loc_10002632: je loc_1000265B;");
    asm("loc_10002634: mov 0x64(%ebx),%edx;");
    asm("loc_10002637: mov 0x24(%ebx),%eax;");
    asm("loc_1000263A: sub %edi,%edx;");
    asm("loc_1000263C: sub $0x106,%eax;");
    asm("loc_10002641: cmp %eax,%edx;");
    asm("loc_10002643: ja loc_1000265B;");
    asm("loc_10002645: cmpl $2,0x80(%ebx);");
    asm("loc_1000264C: je loc_1000265B;");
    asm("loc_1000264E: push %edi;");
    asm("loc_1000264F: push %ebx;");
    asm("loc_10002650: call _sub_10003180;");
    asm("loc_10002655: add $8,%esp;");
    asm("loc_10002658: mov %eax,0x58(%ebx);");
    asm("loc_1000265B: mov 0x58(%ebx),%eax;");
    asm("loc_1000265E: cmp $3,%eax;");
    asm("loc_10002661: jb loc_1000278D;");
    asm("loc_10002667: mov 0x1698(%ebx),%edx;");
    asm("loc_1000266D: mov 0x169C(%ebx),%esi;");
    asm("loc_10002673: mov %al,%cl;");
    asm("loc_10002675: mov 0x64(%ebx),%ax;");
    asm("loc_10002679: sub 0x68(%ebx),%ax;");
    asm("loc_1000267D: sub $3,%cl;");
    asm("loc_10002680: mov %ax,(%esi,%edx,2);");
    asm("loc_10002684: mov 0x1690(%ebx),%edx;");
    asm("loc_1000268A: mov 0x1698(%ebx),%esi;");
    asm("loc_10002690: mov %cl,(%edx,%esi);");
    asm("loc_10002693: mov 0x1698(%ebx),%edx;");
    asm("loc_10002699: inc %edx;");
    asm("loc_1000269A: movzbl %cl,%ecx;");
    asm("loc_1000269D: mov %edx,0x1698(%ebx);");
    asm("loc_100026A3: movzbl _data_1000BE28(%ecx),%edx;");
    asm("loc_100026AA: add $0xFFFF,%eax;");
    asm("loc_100026AF: incw 0x490(%ebx,%edx,4);");
    asm("loc_100026B7: cmp $0x100,%ax;");
    asm("loc_100026BB: lea 0x490(%ebx,%edx,4),%ecx;");
    asm("loc_100026C2: jae loc_100026D0;");
    asm("loc_100026C4: movzwl %ax,%eax;");
    asm("loc_100026C7: movzbl _data_1000BC28(%eax),%eax;");
    asm("loc_100026CE: jmp loc_100026DD;");
    asm("loc_100026D0: movzwl %ax,%ecx;");
    asm("loc_100026D3: shr $7,%ecx;");
    asm("loc_100026D6: movzbl _data_1000BD28(%ecx),%eax;");
    asm("loc_100026DD: incw 0x980(%ebx,%eax,4);");
    asm("loc_100026E5: mov 0x1694(%ebx),%edx;");
    asm("loc_100026EB: mov 0x1698(%ebx),%esi;");
    asm("loc_100026F1: mov 0x6C(%ebx),%ecx;");
    asm("loc_100026F4: xor %eax,%eax;");
    asm("loc_100026F6: dec %edx;");
    asm("loc_100026F7: cmp %edx,%esi;");
    asm("loc_100026F9: mov 0x78(%ebx),%edx;");
    asm("loc_100026FC: sete %al;");
    asm("loc_100026FF: mov %eax,%esi;");
    asm("loc_10002701: mov 0x58(%ebx),%eax;");
    asm("loc_10002704: sub %eax,%ecx;");
    asm("loc_10002706: cmp %edx,%eax;");
    asm("loc_10002708: mov %ecx,0x6C(%ebx);");
    asm("loc_1000270B: ja loc_10002760;");
    asm("loc_1000270D: cmp $3,%ecx;");
    asm("loc_10002710: jb loc_10002760;");
    asm("loc_10002712: dec %eax;");
    asm("loc_10002713: mov %eax,0x58(%ebx);");
    asm("loc_10002716: mov 0x64(%ebx),%edx;");
    asm("loc_10002719: mov 0x30(%ebx),%ecx;");
    asm("loc_1000271C: mov 0x40(%ebx),%edi;");
    asm("loc_1000271F: inc %edx;");
    asm("loc_10002720: mov %edx,0x64(%ebx);");
    asm("loc_10002723: movzbl 2(%edx,%ecx),%eax;");
    asm("loc_10002728: mov 0x50(%ebx),%ecx;");
    asm("loc_1000272B: shl %cl,%edi;");
    asm("loc_1000272D: mov 0x3C(%ebx),%ecx;");
    asm("loc_10002730: xor %edi,%eax;");
    asm("loc_10002732: and 0x4C(%ebx),%eax;");
    asm("loc_10002735: mov %eax,0x40(%ebx);");
    asm("loc_10002738: movzwl (%ecx,%eax,2),%edi;");
    asm("loc_1000273C: mov 0x2C(%ebx),%ecx;");
    asm("loc_1000273F: mov 0x38(%ebx),%eax;");
    asm("loc_10002742: and %ecx,%edx;");
    asm("loc_10002744: mov %di,(%eax,%edx,2);");
    asm("loc_10002748: mov 0x64(%ebx),%ax;");
    asm("loc_1000274C: mov 0x40(%ebx),%ecx;");
    asm("loc_1000274F: mov 0x3C(%ebx),%edx;");
    asm("loc_10002752: mov %ax,(%edx,%ecx,2);");
    asm("loc_10002756: decl 0x58(%ebx);");
    asm("loc_10002759: jne loc_10002716;");
    asm("loc_1000275B: jmp loc_100027F3;");
    asm("loc_10002760: mov 0x64(%ebx),%ecx;");
    asm("loc_10002763: mov 0x30(%ebx),%edx;");
    asm("loc_10002766: add %eax,%ecx;");
    asm("loc_10002768: add %ecx,%edx;");
    asm("loc_1000276A: mov %ecx,0x64(%ebx);");
    asm("loc_1000276D: mov 0x50(%ebx),%ecx;");
    asm("loc_10002770: movl $0,0x58(%ebx);");
    asm("loc_10002777: movzbl (%edx),%eax;");
    asm("loc_1000277A: mov %eax,0x40(%ebx);");
    asm("loc_1000277D: shl %cl,%eax;");
    asm("loc_1000277F: movzbl 1(%edx),%ecx;");
    asm("loc_10002783: xor %ecx,%eax;");
    asm("loc_10002785: and 0x4C(%ebx),%eax;");
    asm("loc_10002788: mov %eax,0x40(%ebx);");
    asm("loc_1000278B: jmp loc_100027F6;");
    asm("loc_1000278D: mov 0x64(%ebx),%edx;");
    asm("loc_10002790: mov 0x30(%ebx),%eax;");
    asm("loc_10002793: mov (%edx,%eax),%al;");
    asm("loc_10002796: mov 0x1698(%ebx),%ecx;");
    asm("loc_1000279C: mov 0x169C(%ebx),%edx;");
    asm("loc_100027A2: movw $0,(%edx,%ecx,2);");
    asm("loc_100027A8: mov 0x1698(%ebx),%edx;");
    asm("loc_100027AE: mov 0x1690(%ebx),%ecx;");
    asm("loc_100027B4: mov %al,(%ecx,%edx);");
    asm("loc_100027B7: mov 0x1698(%ebx),%edx;");
    asm("loc_100027BD: inc %edx;");
    asm("loc_100027BE: movzbl %al,%eax;");
    asm("loc_100027C1: mov %edx,0x1698(%ebx);");
    asm("loc_100027C7: incw 0x8C(%ebx,%eax,4);");
    asm("loc_100027CF: mov 0x1694(%ebx),%ecx;");
    asm("loc_100027D5: mov 0x1698(%ebx),%esi;");
    asm("loc_100027DB: lea 0x8C(%ebx,%eax,4),%eax;");
    asm("loc_100027E2: dec %ecx;");
    asm("loc_100027E3: xor %edx,%edx;");
    asm("loc_100027E5: cmp %ecx,%esi;");
    asm("loc_100027E7: mov 0x6C(%ebx),%ecx;");
    asm("loc_100027EA: sete %dl;");
    asm("loc_100027ED: dec %ecx;");
    asm("loc_100027EE: mov %ecx,0x6C(%ebx);");
    asm("loc_100027F1: mov %edx,%esi;");
    asm("loc_100027F3: incl 0x64(%ebx);");
    asm("loc_100027F6: test %esi,%esi;");
    asm("loc_100027F8: je loc_100025C0;");
    asm("loc_100027FE: mov 0x54(%ebx),%ecx;");
    asm("loc_10002801: test %ecx,%ecx;");
    asm("loc_10002803: jl loc_1000280C;");
    asm("loc_10002805: mov 0x30(%ebx),%eax;");
    asm("loc_10002808: add %ecx,%eax;");
    asm("loc_1000280A: jmp loc_1000280E;");
    asm("loc_1000280C: xor %eax,%eax;");
    asm("loc_1000280E: mov 0x64(%ebx),%edx;");
    asm("loc_10002811: push $0;");
    asm("loc_10002813: sub %ecx,%edx;");
    asm("loc_10002815: push %edx;");
    asm("loc_10002816: push %eax;");
    asm("loc_10002817: push %ebx;");
    asm("loc_10002818: call _sub_10008140;");
    asm("loc_1000281D: mov 0x64(%ebx),%eax;");
    asm("loc_10002820: mov %eax,0x54(%ebx);");
    asm("loc_10002823: mov (%ebx),%eax;");
    asm("loc_10002825: add $0x10,%esp;");
    asm("loc_10002828: call _sub_10001CF0;");
    asm("loc_1000282D: mov (%ebx),%ecx;");
    asm("loc_1000282F: mov 0x10(%ecx),%eax;");
    asm("loc_10002832: test %eax,%eax;");
    asm("loc_10002834: jne loc_100025C0;");
    asm("loc_1000283A: pop %edi;");
    asm("loc_1000283B: pop %esi;");
    asm("loc_1000283C: xor %eax,%eax;");
    asm("loc_1000283E: pop %ebx;");
    asm("loc_1000283F: ret;");
    asm("loc_10002840: mov 0x54(%ebx),%esi;");
    asm("loc_10002843: test %esi,%esi;");
    asm("loc_10002845: jl loc_1000284E;");
    asm("loc_10002847: mov 0x30(%ebx),%eax;");
    asm("loc_1000284A: add %esi,%eax;");
    asm("loc_1000284C: jmp loc_10002850;");
    asm("loc_1000284E: xor %eax,%eax;");
    asm("loc_10002850: mov 0x14(%esp),%ecx;");
    asm("loc_10002854: xor %edx,%edx;");
    asm("loc_10002856: mov $4,%edi;");
    asm("loc_1000285B: cmp %edi,%ecx;");
    asm("loc_1000285D: mov 0x64(%ebx),%ecx;");
    asm("loc_10002860: sete %dl;");
    asm("loc_10002863: sub %esi,%ecx;");
    asm("loc_10002865: push %edx;");
    asm("loc_10002866: push %ecx;");
    asm("loc_10002867: push %eax;");
    asm("loc_10002868: push %ebx;");
    asm("loc_10002869: call _sub_10008140;");
    asm("loc_1000286E: mov 0x64(%ebx),%edx;");
    asm("loc_10002871: mov (%ebx),%eax;");
    asm("loc_10002873: add $0x10,%esp;");
    asm("loc_10002876: mov %edx,0x54(%ebx);");
    asm("loc_10002879: call _sub_10001CF0;");
    asm("loc_1000287E: mov (%ebx),%eax;");
    asm("loc_10002880: mov 0x10(%eax),%ecx;");
    asm("loc_10002883: xor %eax,%eax;");
    asm("loc_10002885: test %ecx,%ecx;");
    asm("loc_10002887: jne loc_10002898;");
    asm("loc_10002889: cmp %edi,0x14(%esp);");
    asm("loc_1000288D: setne %al;");
    asm("loc_10002890: pop %edi;");
    asm("loc_10002891: pop %esi;");
    asm("loc_10002892: pop %ebx;");
    asm("loc_10002893: dec %eax;");
    asm("loc_10002894: and $2,%eax;");
    asm("loc_10002897: ret;");
    asm("loc_10002898: cmp %edi,0x14(%esp);");
    asm("loc_1000289C: sete %al;");
    asm("loc_1000289F: pop %edi;");
    asm("loc_100028A0: pop %esi;");
    asm("loc_100028A1: pop %ebx;");
    asm("loc_100028A2: lea 1(%eax,%eax),%eax;");
    asm("loc_100028A6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100028B0() // _sub_100028B0
{
    __DEBUG_ASM(100028B0);
    // chunk 0x100028B0 _sub_100028B0
    asm("loc_100028B0: push %ebx;");
    asm("loc_100028B1: mov 8(%esp),%ebx;");
    asm("loc_100028B5: push %ebp;");
    asm("loc_100028B6: push %esi;");
    asm("loc_100028B7: push %edi;");
    asm("loc_100028B8: xor %ebp,%ebp;");
    asm("loc_100028BA: lea (%ebx),%ebx;");
    asm("loc_100028C0: mov 0x6C(%ebx),%eax;");
    asm("loc_100028C3: cmp $0x106,%eax;");
    asm("loc_100028C8: jae loc_100028ED;");
    asm("loc_100028CA: call _sub_10002350;");
    asm("loc_100028CF: mov 0x6C(%ebx),%eax;");
    asm("loc_100028D2: cmp $0x106,%eax;");
    asm("loc_100028D7: mov 0x18(%esp),%edi;");
    asm("loc_100028DB: jae loc_100028E5;");
    asm("loc_100028DD: test %edi,%edi;");
    asm("loc_100028DF: je loc_10002B13;");
    asm("loc_100028E5: test %eax,%eax;");
    asm("loc_100028E7: je loc_10002BDE;");
    asm("loc_100028ED: cmp $3,%eax;");
    asm("loc_100028F0: jb loc_10002930;");
    asm("loc_100028F2: mov 0x40(%ebx),%eax;");
    asm("loc_100028F5: mov 0x50(%ebx),%ecx;");
    asm("loc_100028F8: mov 0x64(%ebx),%edx;");
    asm("loc_100028FB: mov 0x4C(%ebx),%esi;");
    asm("loc_100028FE: shl %cl,%eax;");
    asm("loc_10002900: mov 0x30(%ebx),%ecx;");
    asm("loc_10002903: movzbl 2(%ecx,%edx),%ecx;");
    asm("loc_10002908: xor %ecx,%eax;");
    asm("loc_1000290A: mov 0x3C(%ebx),%ecx;");
    asm("loc_1000290D: and %esi,%eax;");
    asm("loc_1000290F: mov %eax,0x40(%ebx);");
    asm("loc_10002912: movzwl (%ecx,%eax,2),%ebp;");
    asm("loc_10002916: mov 0x2C(%ebx),%eax;");
    asm("loc_10002919: mov 0x38(%ebx),%ecx;");
    asm("loc_1000291C: and %edx,%eax;");
    asm("loc_1000291E: mov %bp,(%ecx,%eax,2);");
    asm("loc_10002922: mov 0x40(%ebx),%edx;");
    asm("loc_10002925: mov 0x3C(%ebx),%eax;");
    asm("loc_10002928: mov 0x64(%ebx),%cx;");
    asm("loc_1000292C: mov %cx,(%eax,%edx,2);");
    asm("loc_10002930: test %ebp,%ebp;");
    asm("loc_10002932: mov 0x58(%ebx),%edx;");
    asm("loc_10002935: mov 0x68(%ebx),%eax;");
    asm("loc_10002938: mov $2,%esi;");
    asm("loc_1000293D: mov %edx,0x70(%ebx);");
    asm("loc_10002940: mov %eax,0x5C(%ebx);");
    asm("loc_10002943: mov %esi,0x58(%ebx);");
    asm("loc_10002946: je loc_1000299E;");
    asm("loc_10002948: mov 0x78(%ebx),%eax;");
    asm("loc_1000294B: mov %edx,%ecx;");
    asm("loc_1000294D: cmp %eax,%ecx;");
    asm("loc_1000294F: jae loc_1000299E;");
    asm("loc_10002951: mov 0x64(%ebx),%edx;");
    asm("loc_10002954: mov 0x24(%ebx),%eax;");
    asm("loc_10002957: sub %ebp,%edx;");
    asm("loc_10002959: sub $0x106,%eax;");
    asm("loc_1000295E: cmp %eax,%edx;");
    asm("loc_10002960: ja loc_1000299E;");
    asm("loc_10002962: cmp %esi,0x80(%ebx);");
    asm("loc_10002968: je loc_10002977;");
    asm("loc_1000296A: push %ebp;");
    asm("loc_1000296B: push %ebx;");
    asm("loc_1000296C: call _sub_10003180;");
    asm("loc_10002971: add $8,%esp;");
    asm("loc_10002974: mov %eax,0x58(%ebx);");
    asm("loc_10002977: mov 0x58(%ebx),%eax;");
    asm("loc_1000297A: cmp $5,%eax;");
    asm("loc_1000297D: ja loc_1000299E;");
    asm("loc_1000297F: cmpl $1,0x80(%ebx);");
    asm("loc_10002986: je loc_1000299B;");
    asm("loc_10002988: cmp $3,%eax;");
    asm("loc_1000298B: jne loc_1000299E;");
    asm("loc_1000298D: mov 0x64(%ebx),%ecx;");
    asm("loc_10002990: sub 0x68(%ebx),%ecx;");
    asm("loc_10002993: cmp $0x1000,%ecx;");
    asm("loc_10002999: jbe loc_1000299E;");
    asm("loc_1000299B: mov %esi,0x58(%ebx);");
    asm("loc_1000299E: mov 0x70(%ebx),%eax;");
    asm("loc_100029A1: cmp $3,%eax;");
    asm("loc_100029A4: jb loc_10002B1A;");
    asm("loc_100029AA: cmp %eax,0x58(%ebx);");
    asm("loc_100029AD: ja loc_10002B1A;");
    asm("loc_100029B3: mov 0x64(%ebx),%edx;");
    asm("loc_100029B6: mov 0x6C(%ebx),%eax;");
    asm("loc_100029B9: mov 0x70(%ebx),%cl;");
    asm("loc_100029BC: mov 0x169C(%ebx),%edi;");
    asm("loc_100029C2: lea -3(%edx,%eax),%esi;");
    asm("loc_100029C6: xor %eax,%eax;");
    asm("loc_100029C8: mov %dx,%ax;");
    asm("loc_100029CB: sub 0x5C(%ebx),%ax;");
    asm("loc_100029CF: mov 0x1698(%ebx),%edx;");
    asm("loc_100029D5: sub $3,%cl;");
    asm("loc_100029D8: dec %eax;");
    asm("loc_100029D9: mov %ax,(%edi,%edx,2);");
    asm("loc_100029DD: mov 0x1690(%ebx),%edx;");
    asm("loc_100029E3: mov 0x1698(%ebx),%edi;");
    asm("loc_100029E9: mov %cl,(%edx,%edi);");
    asm("loc_100029EC: mov 0x1698(%ebx),%edx;");
    asm("loc_100029F2: inc %edx;");
    asm("loc_100029F3: movzbl %cl,%ecx;");
    asm("loc_100029F6: mov %edx,0x1698(%ebx);");
    asm("loc_100029FC: movzbl _data_1000BE28(%ecx),%edx;");
    asm("loc_10002A03: add $0xFFFF,%eax;");
    asm("loc_10002A08: incw 0x490(%ebx,%edx,4);");
    asm("loc_10002A10: cmp $0x100,%ax;");
    asm("loc_10002A14: lea 0x490(%ebx,%edx,4),%ecx;");
    asm("loc_10002A1B: jae loc_10002A29;");
    asm("loc_10002A1D: movzwl %ax,%eax;");
    asm("loc_10002A20: movzbl _data_1000BC28(%eax),%eax;");
    asm("loc_10002A27: jmp loc_10002A36;");
    asm("loc_10002A29: movzwl %ax,%ecx;");
    asm("loc_10002A2C: shr $7,%ecx;");
    asm("loc_10002A2F: movzbl _data_1000BD28(%ecx),%eax;");
    asm("loc_10002A36: incw 0x980(%ebx,%eax,4);");
    asm("loc_10002A3E: mov 0x1694(%ebx),%edx;");
    asm("loc_10002A44: mov 0x1698(%ebx),%edi;");
    asm("loc_10002A4A: dec %edx;");
    asm("loc_10002A4B: xor %eax,%eax;");
    asm("loc_10002A4D: cmp %edx,%edi;");
    asm("loc_10002A4F: mov 0x6C(%ebx),%edx;");
    asm("loc_10002A52: sete %al;");
    asm("loc_10002A55: mov $1,%ecx;");
    asm("loc_10002A5A: mov %eax,%edi;");
    asm("loc_10002A5C: mov 0x70(%ebx),%eax;");
    asm("loc_10002A5F: sub %eax,%ecx;");
    asm("loc_10002A61: add %ecx,%edx;");
    asm("loc_10002A63: add $0xFFFFFFFE,%eax;");
    asm("loc_10002A66: mov %edx,0x6C(%ebx);");
    asm("loc_10002A69: mov %eax,0x70(%ebx);");
    asm("loc_10002A6C: lea (%esp),%esp;");
    asm("loc_10002A70: mov 0x64(%ebx),%ecx;");
    asm("loc_10002A73: inc %ecx;");
    asm("loc_10002A74: mov %ecx,%edx;");
    asm("loc_10002A76: cmp %esi,%edx;");
    asm("loc_10002A78: mov %ecx,0x64(%ebx);");
    asm("loc_10002A7B: ja loc_10002AB8;");
    asm("loc_10002A7D: mov 0x40(%ebx),%eax;");
    asm("loc_10002A80: mov 0x50(%ebx),%ecx;");
    asm("loc_10002A83: mov 0x4C(%ebx),%ebp;");
    asm("loc_10002A86: shl %cl,%eax;");
    asm("loc_10002A88: mov 0x30(%ebx),%ecx;");
    asm("loc_10002A8B: movzbl 2(%ecx,%edx),%ecx;");
    asm("loc_10002A90: xor %ecx,%eax;");
    asm("loc_10002A92: mov 0x3C(%ebx),%ecx;");
    asm("loc_10002A95: and %ebp,%eax;");
    asm("loc_10002A97: mov %eax,0x40(%ebx);");
    asm("loc_10002A9A: movzwl (%ecx,%eax,2),%ebp;");
    asm("loc_10002A9E: mov 0x2C(%ebx),%eax;");
    asm("loc_10002AA1: mov 0x38(%ebx),%ecx;");
    asm("loc_10002AA4: and %edx,%eax;");
    asm("loc_10002AA6: mov %bp,(%ecx,%eax,2);");
    asm("loc_10002AAA: mov 0x40(%ebx),%edx;");
    asm("loc_10002AAD: mov 0x3C(%ebx),%eax;");
    asm("loc_10002AB0: mov 0x64(%ebx),%cx;");
    asm("loc_10002AB4: mov %cx,(%eax,%edx,2);");
    asm("loc_10002AB8: decl 0x70(%ebx);");
    asm("loc_10002ABB: jne loc_10002A70;");
    asm("loc_10002ABD: mov 0x64(%ebx),%ecx;");
    asm("loc_10002AC0: inc %ecx;");
    asm("loc_10002AC1: test %edi,%edi;");
    asm("loc_10002AC3: movl $0,0x60(%ebx);");
    asm("loc_10002ACA: movl $2,0x58(%ebx);");
    asm("loc_10002AD1: mov %ecx,0x64(%ebx);");
    asm("loc_10002AD4: je loc_100028C0;");
    asm("loc_10002ADA: mov 0x54(%ebx),%edx;");
    asm("loc_10002ADD: test %edx,%edx;");
    asm("loc_10002ADF: jl loc_10002AE8;");
    asm("loc_10002AE1: mov 0x30(%ebx),%eax;");
    asm("loc_10002AE4: add %edx,%eax;");
    asm("loc_10002AE6: jmp loc_10002AEA;");
    asm("loc_10002AE8: xor %eax,%eax;");
    asm("loc_10002AEA: push $0;");
    asm("loc_10002AEC: sub %edx,%ecx;");
    asm("loc_10002AEE: push %ecx;");
    asm("loc_10002AEF: push %eax;");
    asm("loc_10002AF0: push %ebx;");
    asm("loc_10002AF1: call _sub_10008140;");
    asm("loc_10002AF6: mov 0x64(%ebx),%edx;");
    asm("loc_10002AF9: mov (%ebx),%eax;");
    asm("loc_10002AFB: add $0x10,%esp;");
    asm("loc_10002AFE: mov %edx,0x54(%ebx);");
    asm("loc_10002B01: call _sub_10001CF0;");
    asm("loc_10002B06: mov (%ebx),%eax;");
    asm("loc_10002B08: mov 0x10(%eax),%ecx;");
    asm("loc_10002B0B: test %ecx,%ecx;");
    asm("loc_10002B0D: jne loc_100028C0;");
    asm("loc_10002B13: pop %edi;");
    asm("loc_10002B14: pop %esi;");
    asm("loc_10002B15: pop %ebp;");
    asm("loc_10002B16: xor %eax,%eax;");
    asm("loc_10002B18: pop %ebx;");
    asm("loc_10002B19: ret;");
    asm("loc_10002B1A: mov 0x60(%ebx),%eax;");
    asm("loc_10002B1D: test %eax,%eax;");
    asm("loc_10002B1F: je loc_10002BC4;");
    asm("loc_10002B25: mov 0x64(%ebx),%ecx;");
    asm("loc_10002B28: mov 0x30(%ebx),%edx;");
    asm("loc_10002B2B: mov -1(%ecx,%edx),%al;");
    asm("loc_10002B2F: mov 0x1698(%ebx),%ecx;");
    asm("loc_10002B35: mov 0x169C(%ebx),%edx;");
    asm("loc_10002B3B: movw $0,(%edx,%ecx,2);");
    asm("loc_10002B41: mov 0x1690(%ebx),%ecx;");
    asm("loc_10002B47: mov 0x1698(%ebx),%edx;");
    asm("loc_10002B4D: mov %al,(%ecx,%edx);");
    asm("loc_10002B50: mov 0x1698(%ebx),%edi;");
    asm("loc_10002B56: movzbl %al,%eax;");
    asm("loc_10002B59: inc %edi;");
    asm("loc_10002B5A: lea 0x8C(%ebx,%eax,4),%eax;");
    asm("loc_10002B61: mov %edi,0x1698(%ebx);");
    asm("loc_10002B67: incw (%eax);");
    asm("loc_10002B6A: mov 0x1694(%ebx),%ecx;");
    asm("loc_10002B70: mov 0x1698(%ebx),%eax;");
    asm("loc_10002B76: dec %ecx;");
    asm("loc_10002B77: cmp %ecx,%eax;");
    asm("loc_10002B79: jne loc_10002BAA;");
    asm("loc_10002B7B: mov 0x54(%ebx),%ecx;");
    asm("loc_10002B7E: test %ecx,%ecx;");
    asm("loc_10002B80: jl loc_10002B89;");
    asm("loc_10002B82: mov 0x30(%ebx),%eax;");
    asm("loc_10002B85: add %ecx,%eax;");
    asm("loc_10002B87: jmp loc_10002B8B;");
    asm("loc_10002B89: xor %eax,%eax;");
    asm("loc_10002B8B: mov 0x64(%ebx),%edx;");
    asm("loc_10002B8E: push $0;");
    asm("loc_10002B90: sub %ecx,%edx;");
    asm("loc_10002B92: push %edx;");
    asm("loc_10002B93: push %eax;");
    asm("loc_10002B94: push %ebx;");
    asm("loc_10002B95: call _sub_10008140;");
    asm("loc_10002B9A: mov 0x64(%ebx),%eax;");
    asm("loc_10002B9D: mov %eax,0x54(%ebx);");
    asm("loc_10002BA0: mov (%ebx),%eax;");
    asm("loc_10002BA2: add $0x10,%esp;");
    asm("loc_10002BA5: call _sub_10001CF0;");
    asm("loc_10002BAA: mov 0x64(%ebx),%edx;");
    asm("loc_10002BAD: mov 0x6C(%ebx),%ecx;");
    asm("loc_10002BB0: inc %edx;");
    asm("loc_10002BB1: dec %ecx;");
    asm("loc_10002BB2: mov %ecx,0x6C(%ebx);");
    asm("loc_10002BB5: mov (%ebx),%ecx;");
    asm("loc_10002BB7: mov %edx,0x64(%ebx);");
    asm("loc_10002BBA: mov 0x10(%ecx),%eax;");
    asm("loc_10002BBD: test %eax,%eax;");
    asm("loc_10002BBF: jmp loc_10002B0D;");
    asm("loc_10002BC4: mov 0x64(%ebx),%ecx;");
    asm("loc_10002BC7: mov 0x6C(%ebx),%eax;");
    asm("loc_10002BCA: inc %ecx;");
    asm("loc_10002BCB: dec %eax;");
    asm("loc_10002BCC: movl $1,0x60(%ebx);");
    asm("loc_10002BD3: mov %ecx,0x64(%ebx);");
    asm("loc_10002BD6: mov %eax,0x6C(%ebx);");
    asm("loc_10002BD9: jmp loc_100028C0;");
    asm("loc_10002BDE: mov 0x60(%ebx),%eax;");
    asm("loc_10002BE1: test %eax,%eax;");
    asm("loc_10002BE3: je loc_10002C31;");
    asm("loc_10002BE5: mov 0x64(%ebx),%edx;");
    asm("loc_10002BE8: mov 0x30(%ebx),%eax;");
    asm("loc_10002BEB: mov -1(%edx,%eax),%al;");
    asm("loc_10002BEF: mov 0x1698(%ebx),%ecx;");
    asm("loc_10002BF5: mov 0x169C(%ebx),%edx;");
    asm("loc_10002BFB: movw $0,(%edx,%ecx,2);");
    asm("loc_10002C01: mov 0x1698(%ebx),%edx;");
    asm("loc_10002C07: mov 0x1690(%ebx),%ecx;");
    asm("loc_10002C0D: mov %al,(%ecx,%edx);");
    asm("loc_10002C10: mov 0x1698(%ebx),%edx;");
    asm("loc_10002C16: movzbl %al,%eax;");
    asm("loc_10002C19: inc %edx;");
    asm("loc_10002C1A: lea 0x8C(%ebx,%eax,4),%eax;");
    asm("loc_10002C21: mov %edx,0x1698(%ebx);");
    asm("loc_10002C27: incw (%eax);");
    asm("loc_10002C2A: movl $0,0x60(%ebx);");
    asm("loc_10002C31: mov 0x54(%ebx),%esi;");
    asm("loc_10002C34: test %esi,%esi;");
    asm("loc_10002C36: jl loc_10002C3F;");
    asm("loc_10002C38: mov 0x30(%ebx),%eax;");
    asm("loc_10002C3B: add %esi,%eax;");
    asm("loc_10002C3D: jmp loc_10002C41;");
    asm("loc_10002C3F: xor %eax,%eax;");
    asm("loc_10002C41: mov 0x64(%ebx),%edx;");
    asm("loc_10002C44: xor %ecx,%ecx;");
    asm("loc_10002C46: cmp $4,%edi;");
    asm("loc_10002C49: sete %cl;");
    asm("loc_10002C4C: sub %esi,%edx;");
    asm("loc_10002C4E: push %ecx;");
    asm("loc_10002C4F: push %edx;");
    asm("loc_10002C50: push %eax;");
    asm("loc_10002C51: push %ebx;");
    asm("loc_10002C52: call _sub_10008140;");
    asm("loc_10002C57: mov 0x64(%ebx),%eax;");
    asm("loc_10002C5A: mov %eax,0x54(%ebx);");
    asm("loc_10002C5D: mov (%ebx),%eax;");
    asm("loc_10002C5F: add $0x10,%esp;");
    asm("loc_10002C62: call _sub_10001CF0;");
    asm("loc_10002C67: mov (%ebx),%ecx;");
    asm("loc_10002C69: mov 0x10(%ecx),%eax;");
    asm("loc_10002C6C: test %eax,%eax;");
    asm("loc_10002C6E: jne loc_10002C81;");
    asm("loc_10002C70: xor %eax,%eax;");
    asm("loc_10002C72: cmp $4,%edi;");
    asm("loc_10002C75: setne %al;");
    asm("loc_10002C78: pop %edi;");
    asm("loc_10002C79: pop %esi;");
    asm("loc_10002C7A: pop %ebp;");
    asm("loc_10002C7B: pop %ebx;");
    asm("loc_10002C7C: dec %eax;");
    asm("loc_10002C7D: and $2,%eax;");
    asm("loc_10002C80: ret;");
    asm("loc_10002C81: xor %eax,%eax;");
    asm("loc_10002C83: cmp $4,%edi;");
    asm("loc_10002C86: sete %al;");
    asm("loc_10002C89: pop %edi;");
    asm("loc_10002C8A: pop %esi;");
    asm("loc_10002C8B: pop %ebp;");
    asm("loc_10002C8C: pop %ebx;");
    asm("loc_10002C8D: lea 1(%eax,%eax),%eax;");
    asm("loc_10002C91: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10002CA0() // _deflateReset
{
    __DEBUG_ASM(10002CA0);
    // chunk 0x10002CA0 _sub_10002CA0
    asm("loc_10002CA0: mov 4(%esp),%eax;");
    asm("loc_10002CA4: xor %ecx,%ecx;");
    asm("loc_10002CA6: cmp %ecx,%eax;");
    asm("loc_10002CA8: push %esi;");
    asm("loc_10002CA9: je loc_10002D0D;");
    asm("loc_10002CAB: mov 0x1C(%eax),%esi;");
    asm("loc_10002CAE: cmp %ecx,%esi;");
    asm("loc_10002CB0: je loc_10002D0D;");
    asm("loc_10002CB2: cmp %ecx,0x20(%eax);");
    asm("loc_10002CB5: je loc_10002D0D;");
    asm("loc_10002CB7: cmp %ecx,0x24(%eax);");
    asm("loc_10002CBA: je loc_10002D0D;");
    asm("loc_10002CBC: mov %ecx,0x14(%eax);");
    asm("loc_10002CBF: mov %ecx,8(%eax);");
    asm("loc_10002CC2: mov %ecx,0x18(%eax);");
    asm("loc_10002CC5: movl $2,0x2C(%eax);");
    asm("loc_10002CCC: mov 8(%esi),%edx;");
    asm("loc_10002CCF: mov %edx,0x10(%esi);");
    asm("loc_10002CD2: cmp %ecx,0x18(%esi);");
    asm("loc_10002CD5: mov %ecx,0x14(%esi);");
    asm("loc_10002CD8: jge loc_10002CDD;");
    asm("loc_10002CDA: mov %ecx,0x18(%esi);");
    asm("loc_10002CDD: mov 0x18(%esi),%edx;");
    asm("loc_10002CE0: neg %edx;");
    asm("loc_10002CE2: sbb %edx,%edx;");
    asm("loc_10002CE4: and $0x47,%edx;");
    asm("loc_10002CE7: add $0x2A,%edx;");
    asm("loc_10002CEA: mov %edx,4(%esi);");
    asm("loc_10002CED: movl $1,0x30(%eax);");
    asm("loc_10002CF4: push %esi;");
    asm("loc_10002CF5: mov %ecx,0x20(%esi);");
    asm("loc_10002CF8: call _sub_10007B60;");
    asm("loc_10002CFD: add $4,%esp;");
    asm("loc_10002D00: mov %esi,%edx;");
    asm("loc_10002D02: call _sub_100022C0;");
    asm("loc_10002D07: xor %eax,%eax;");
    asm("loc_10002D09: pop %esi;");
    asm("loc_10002D0A: ret $4;");
    asm("loc_10002D0D: mov $0xFFFFFFFE,%eax;");
    asm("loc_10002D12: pop %esi;");
    asm("loc_10002D13: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10002D20() // _deflateParams
{
    __DEBUG_ASM(10002D20);
    // chunk 0x10002D20 _sub_10002D20
    asm("loc_10002D20: mov 4(%esp),%edx;");
    asm("loc_10002D24: push %ebx;");
    asm("loc_10002D25: push %ebp;");
    asm("loc_10002D26: xor %eax,%eax;");
    asm("loc_10002D28: test %edx,%edx;");
    asm("loc_10002D2A: push %edi;");
    asm("loc_10002D2B: je loc_10002DD4;");
    asm("loc_10002D31: mov 0x1C(%edx),%edi;");
    asm("loc_10002D34: test %edi,%edi;");
    asm("loc_10002D36: je loc_10002DD4;");
    asm("loc_10002D3C: mov 0x14(%esp),%ebx;");
    asm("loc_10002D40: cmp $0xFFFFFFFF,%ebx;");
    asm("loc_10002D43: jne loc_10002D4C;");
    asm("loc_10002D45: mov $6,%ebx;");
    asm("loc_10002D4A: jmp loc_10002D59;");
    asm("loc_10002D4C: test %ebx,%ebx;");
    asm("loc_10002D4E: jl loc_10002DD4;");
    asm("loc_10002D54: cmp $9,%ebx;");
    asm("loc_10002D57: jg loc_10002DD4;");
    asm("loc_10002D59: mov 0x18(%esp),%ebp;");
    asm("loc_10002D5D: test %ebp,%ebp;");
    asm("loc_10002D5F: jl loc_10002DD4;");
    asm("loc_10002D61: cmp $2,%ebp;");
    asm("loc_10002D64: jg loc_10002DD4;");
    asm("loc_10002D66: mov 0x7C(%edi),%ecx;");
    asm("loc_10002D69: push %esi;");
    asm("loc_10002D6A: lea (%ebx,%ebx,2),%esi;");
    asm("loc_10002D6D: lea (%ecx,%ecx,2),%ecx;");
    asm("loc_10002D70: mov _off_1000B0C0(,%ecx,4),%ecx;");
    asm("loc_10002D77: shl $2,%esi;");
    asm("loc_10002D7A: cmp _off_1000B0C0(%esi),%ecx;");
    asm("loc_10002D80: je loc_10002D91;");
    asm("loc_10002D82: mov 8(%edx),%ecx;");
    asm("loc_10002D85: test %ecx,%ecx;");
    asm("loc_10002D87: je loc_10002D91;");
    asm("loc_10002D89: push $1;");
    asm("loc_10002D8B: push %edx;");
    asm("loc_10002D8C: call _sub_10001D60;");
    asm("loc_10002D91: cmp %ebx,0x7C(%edi);");
    asm("loc_10002D94: je loc_10002DC7;");
    asm("loc_10002D96: mov %ebx,0x7C(%edi);");
    asm("loc_10002D99: movzwl _data_1000B0BA(%esi),%edx;");
    asm("loc_10002DA0: mov %edx,0x78(%edi);");
    asm("loc_10002DA3: movzwl _data_1000B0B8(%esi),%ecx;");
    asm("loc_10002DAA: mov %ecx,0x84(%edi);");
    asm("loc_10002DB0: movzwl _data_1000B0BC(%esi),%edx;");
    asm("loc_10002DB7: mov %edx,0x88(%edi);");
    asm("loc_10002DBD: movzwl _data_1000B0BE(%esi),%ecx;");
    asm("loc_10002DC4: mov %ecx,0x74(%edi);");
    asm("loc_10002DC7: pop %esi;");
    asm("loc_10002DC8: mov %ebp,0x80(%edi);");
    asm("loc_10002DCE: pop %edi;");
    asm("loc_10002DCF: pop %ebp;");
    asm("loc_10002DD0: pop %ebx;");
    asm("loc_10002DD1: ret $0xC;");
    asm("loc_10002DD4: pop %edi;");
    asm("loc_10002DD5: pop %ebp;");
    asm("loc_10002DD6: mov $0xFFFFFFFE,%eax;");
    asm("loc_10002DDB: pop %ebx;");
    asm("loc_10002DDC: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10002DE0() // _deflateInit2_
{
    __DEBUG_ASM(10002DE0);
    // chunk 0x10002DE0 _sub_10002DE0
    asm("loc_10002DE0: mov 0x1C(%esp),%eax;");
    asm("loc_10002DE4: push %ebx;");
    asm("loc_10002DE5: push %ebp;");
    asm("loc_10002DE6: xor %edx,%edx;");
    asm("loc_10002DE8: push %esi;");
    asm("loc_10002DE9: xor %ebp,%ebp;");
    asm("loc_10002DEB: cmp %edx,%eax;");
    asm("loc_10002DED: push %edi;");
    asm("loc_10002DEE: je loc_10002FEB;");
    asm("loc_10002DF4: mov _off_1000D004,%ecx;");
    asm("loc_10002DFA: mov (%eax),%al;");
    asm("loc_10002DFC: cmp (%ecx),%al;");
    asm("loc_10002DFE: jne loc_10002FEB;");
    asm("loc_10002E04: cmpl $0x38,0x30(%esp);");
    asm("loc_10002E09: jne loc_10002FEB;");
    asm("loc_10002E0F: mov 0x14(%esp),%edi;");
    asm("loc_10002E13: cmp %edx,%edi;");
    asm("loc_10002E15: je loc_10002FDF;");
    asm("loc_10002E1B: cmp %edx,0x20(%edi);");
    asm("loc_10002E1E: mov %edx,0x18(%edi);");
    asm("loc_10002E21: jne loc_10002E2D;");
    asm("loc_10002E23: movl $_sub_1000A3D0,0x20(%edi);");
    asm("loc_10002E2A: mov %edx,0x28(%edi);");
    asm("loc_10002E2D: cmp %edx,0x24(%edi);");
    asm("loc_10002E30: jne loc_10002E39;");
    asm("loc_10002E32: movl $_sub_1000A3F0,0x24(%edi);");
    asm("loc_10002E39: mov 0x18(%esp),%ecx;");
    asm("loc_10002E3D: cmp $0xFFFFFFFF,%ecx;");
    asm("loc_10002E40: jne loc_10002E4E;");
    asm("loc_10002E42: movl $6,0x18(%esp);");
    asm("loc_10002E4A: mov 0x18(%esp),%ecx;");
    asm("loc_10002E4E: mov 0x20(%esp),%ebx;");
    asm("loc_10002E52: cmp %edx,%ebx;");
    asm("loc_10002E54: jge loc_10002E5D;");
    asm("loc_10002E56: mov $1,%ebp;");
    asm("loc_10002E5B: neg %ebx;");
    asm("loc_10002E5D: mov 0x24(%esp),%eax;");
    asm("loc_10002E61: cmp $1,%eax;");
    asm("loc_10002E64: jl loc_10002FDF;");
    asm("loc_10002E6A: cmp $9,%eax;");
    asm("loc_10002E6D: jg loc_10002FDF;");
    asm("loc_10002E73: cmpl $8,0x1C(%esp);");
    asm("loc_10002E78: jne loc_10002FDF;");
    asm("loc_10002E7E: cmp $9,%ebx;");
    asm("loc_10002E81: jl loc_10002FDF;");
    asm("loc_10002E87: cmp $0xF,%ebx;");
    asm("loc_10002E8A: jg loc_10002FDF;");
    asm("loc_10002E90: cmp %edx,%ecx;");
    asm("loc_10002E92: jl loc_10002FDF;");
    asm("loc_10002E98: cmp $9,%ecx;");
    asm("loc_10002E9B: jg loc_10002FDF;");
    asm("loc_10002EA1: mov 0x28(%esp),%eax;");
    asm("loc_10002EA5: cmp %edx,%eax;");
    asm("loc_10002EA7: jl loc_10002FDF;");
    asm("loc_10002EAD: cmp $2,%eax;");
    asm("loc_10002EB0: jg loc_10002FDF;");
    asm("loc_10002EB6: mov 0x28(%edi),%edx;");
    asm("loc_10002EB9: push $0x16B8;");
    asm("loc_10002EBE: push $1;");
    asm("loc_10002EC0: push %edx;");
    asm("loc_10002EC1: calll *0x20(%edi);");
    asm("loc_10002EC4: mov %eax,%esi;");
    asm("loc_10002EC6: add $0xC,%esp;");
    asm("loc_10002EC9: test %esi,%esi;");
    asm("loc_10002ECB: je loc_10002FD3;");
    asm("loc_10002ED1: mov %esi,0x1C(%edi);");
    asm("loc_10002ED4: mov %ebp,0x18(%esi);");
    asm("loc_10002ED7: mov %ebx,%ecx;");
    asm("loc_10002ED9: mov $1,%ebp;");
    asm("loc_10002EDE: shl %cl,%ebp;");
    asm("loc_10002EE0: mov %ebx,0x28(%esi);");
    asm("loc_10002EE3: mov 0x24(%esp),%ebx;");
    asm("loc_10002EE7: lea 7(%ebx),%ecx;");
    asm("loc_10002EEA: lea -1(%ebp),%eax;");
    asm("loc_10002EED: mov %eax,0x2C(%esi);");
    asm("loc_10002EF0: mov $1,%eax;");
    asm("loc_10002EF5: shl %cl,%eax;");
    asm("loc_10002EF7: mov %ecx,0x48(%esi);");
    asm("loc_10002EFA: add $2,%ecx;");
    asm("loc_10002EFD: push $2;");
    asm("loc_10002EFF: mov %eax,0x44(%esi);");
    asm("loc_10002F02: dec %eax;");
    asm("loc_10002F03: mov %eax,0x4C(%esi);");
    asm("loc_10002F06: mov $0xAAAAAAAB,%eax;");
    asm("loc_10002F0B: mul %ecx;");
    asm("loc_10002F0D: shr $1,%edx;");
    asm("loc_10002F0F: mov %edi,(%esi);");
    asm("loc_10002F11: mov %ebp,0x24(%esi);");
    asm("loc_10002F14: mov %edx,0x50(%esi);");
    asm("loc_10002F17: mov 0x28(%edi),%ecx;");
    asm("loc_10002F1A: push %ebp;");
    asm("loc_10002F1B: push %ecx;");
    asm("loc_10002F1C: calll *0x20(%edi);");
    asm("loc_10002F1F: mov 0x24(%esi),%edx;");
    asm("loc_10002F22: push $2;");
    asm("loc_10002F24: mov %eax,0x30(%esi);");
    asm("loc_10002F27: mov 0x28(%edi),%eax;");
    asm("loc_10002F2A: push %edx;");
    asm("loc_10002F2B: push %eax;");
    asm("loc_10002F2C: calll *0x20(%edi);");
    asm("loc_10002F2F: mov 0x44(%esi),%ecx;");
    asm("loc_10002F32: push $2;");
    asm("loc_10002F34: mov %eax,0x38(%esi);");
    asm("loc_10002F37: mov 0x28(%edi),%edx;");
    asm("loc_10002F3A: push %ecx;");
    asm("loc_10002F3B: push %edx;");
    asm("loc_10002F3C: calll *0x20(%edi);");
    asm("loc_10002F3F: mov %eax,0x3C(%esi);");
    asm("loc_10002F42: lea 6(%ebx),%ecx;");
    asm("loc_10002F45: mov $1,%eax;");
    asm("loc_10002F4A: shl %cl,%eax;");
    asm("loc_10002F4C: push $4;");
    asm("loc_10002F4E: push %eax;");
    asm("loc_10002F4F: mov %eax,0x1694(%esi);");
    asm("loc_10002F55: mov 0x28(%edi),%eax;");
    asm("loc_10002F58: push %eax;");
    asm("loc_10002F59: calll *0x20(%edi);");
    asm("loc_10002F5C: mov 0x1694(%esi),%ecx;");
    asm("loc_10002F62: lea (,%ecx,4),%edx;");
    asm("loc_10002F69: mov %edx,0xC(%esi);");
    asm("loc_10002F6C: mov 0x30(%esi),%edx;");
    asm("loc_10002F6F: add $0x30,%esp;");
    asm("loc_10002F72: test %edx,%edx;");
    asm("loc_10002F74: mov %eax,8(%esi);");
    asm("loc_10002F77: je loc_10002FC5;");
    asm("loc_10002F79: mov 0x38(%esi),%edx;");
    asm("loc_10002F7C: test %edx,%edx;");
    asm("loc_10002F7E: je loc_10002FC5;");
    asm("loc_10002F80: mov 0x3C(%esi),%edx;");
    asm("loc_10002F83: test %edx,%edx;");
    asm("loc_10002F85: je loc_10002FC5;");
    asm("loc_10002F87: test %eax,%eax;");
    asm("loc_10002F89: je loc_10002FC5;");
    asm("loc_10002F8B: mov %ecx,%edx;");
    asm("loc_10002F8D: shr $1,%edx;");
    asm("loc_10002F8F: lea (%eax,%edx,2),%edx;");
    asm("loc_10002F92: lea (%eax,%ecx,2),%eax;");
    asm("loc_10002F95: add %eax,%ecx;");
    asm("loc_10002F97: mov %edx,0x169C(%esi);");
    asm("loc_10002F9D: mov 0x28(%esp),%edx;");
    asm("loc_10002FA1: mov %ecx,0x1690(%esi);");
    asm("loc_10002FA7: mov 0x18(%esp),%ecx;");
    asm("loc_10002FAB: push %edi;");
    asm("loc_10002FAC: mov %ecx,0x7C(%esi);");
    asm("loc_10002FAF: mov %edx,0x80(%esi);");
    asm("loc_10002FB5: movb $8,0x1D(%esi);");
    asm("loc_10002FB9: call _sub_10002CA0;");
    asm("loc_10002FBE: pop %edi;");
    asm("loc_10002FBF: pop %esi;");
    asm("loc_10002FC0: pop %ebp;");
    asm("loc_10002FC1: pop %ebx;");
    asm("loc_10002FC2: ret $0x20;");
    asm("loc_10002FC5: mov _off_1000E1B8,%eax;");
    asm("loc_10002FCA: push %edi;");
    asm("loc_10002FCB: mov %eax,0x18(%edi);");
    asm("loc_10002FCE: call _sub_10001FF0;");
    asm("loc_10002FD3: pop %edi;");
    asm("loc_10002FD4: pop %esi;");
    asm("loc_10002FD5: pop %ebp;");
    asm("loc_10002FD6: mov $0xFFFFFFFC,%eax;");
    asm("loc_10002FDB: pop %ebx;");
    asm("loc_10002FDC: ret $0x20;");
    asm("loc_10002FDF: pop %edi;");
    asm("loc_10002FE0: pop %esi;");
    asm("loc_10002FE1: pop %ebp;");
    asm("loc_10002FE2: mov $0xFFFFFFFE,%eax;");
    asm("loc_10002FE7: pop %ebx;");
    asm("loc_10002FE8: ret $0x20;");
    asm("loc_10002FEB: pop %edi;");
    asm("loc_10002FEC: pop %esi;");
    asm("loc_10002FED: pop %ebp;");
    asm("loc_10002FEE: mov $0xFFFFFFFA,%eax;");
    asm("loc_10002FF3: pop %ebx;");
    asm("loc_10002FF4: ret $0x20;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003000() // _deflateInit_
{
    __DEBUG_ASM(10003000);
    // chunk 0x10003000 _sub_10003000
    asm("loc_10003000: mov 0x10(%esp),%eax;");
    asm("loc_10003004: mov 0xC(%esp),%ecx;");
    asm("loc_10003008: mov 8(%esp),%edx;");
    asm("loc_1000300C: push %eax;");
    asm("loc_1000300D: mov 8(%esp),%eax;");
    asm("loc_10003011: push %ecx;");
    asm("loc_10003012: push $0;");
    asm("loc_10003014: push $8;");
    asm("loc_10003016: push $0xF;");
    asm("loc_10003018: push $8;");
    asm("loc_1000301A: push %edx;");
    asm("loc_1000301B: push %eax;");
    asm("loc_1000301C: call _sub_10002DE0;");
    asm("loc_10003021: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003030() // _nullsub_1
{
    __DEBUG_ASM(10003030);
    // chunk 0x10003030 _sub_10003030
    asm("loc_10003030: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003040() // _sub_10003040
{
    __DEBUG_ASM(10003040);
    // chunk 0x10003040 _sub_10003040
    asm("loc_10003040: sub $0x14,%esp;");
    asm("loc_10003043: push %ebx;");
    asm("loc_10003044: push %ebp;");
    asm("loc_10003045: push %esi;");
    asm("loc_10003046: mov 0x24(%esp),%esi;");
    asm("loc_1000304A: mov 0x74(%esi),%eax;");
    asm("loc_1000304D: mov 0x64(%esi),%edx;");
    asm("loc_10003050: mov 0x30(%esi),%ecx;");
    asm("loc_10003053: mov 0x70(%esi),%ebp;");
    asm("loc_10003056: push %edi;");
    asm("loc_10003057: mov 0x24(%esi),%edi;");
    asm("loc_1000305A: mov %eax,0x28(%esp);");
    asm("loc_1000305E: mov 0x88(%esi),%eax;");
    asm("loc_10003064: lea -0x106(%edi),%ebx;");
    asm("loc_1000306A: add %edx,%ecx;");
    asm("loc_1000306C: cmp %ebx,%edx;");
    asm("loc_1000306E: mov %eax,0x10(%esp);");
    asm("loc_10003072: jbe loc_10003082;");
    asm("loc_10003074: sub %edi,%edx;");
    asm("loc_10003076: add $0x106,%edx;");
    asm("loc_1000307C: mov %edx,0x18(%esp);");
    asm("loc_10003080: jmp loc_1000308A;");
    asm("loc_10003082: movl $0,0x18(%esp);");
    asm("loc_1000308A: mov (%ecx),%dx;");
    asm("loc_1000308D: mov %dx,0x1C(%esp);");
    asm("loc_10003092: mov -1(%ecx,%ebp),%dx;");
    asm("loc_10003097: mov %dx,0x14(%esp);");
    asm("loc_1000309C: cmp 0x84(%esi),%ebp;");
    asm("loc_100030A2: lea 0x101(%ecx),%ebx;");
    asm("loc_100030A8: jb loc_100030AF;");
    asm("loc_100030AA: shrl $2,0x28(%esp);");
    asm("loc_100030AF: mov 0x6C(%esi),%edx;");
    asm("loc_100030B2: cmp %edx,%eax;");
    asm("loc_100030B4: mov %edx,0x20(%esp);");
    asm("loc_100030B8: jbe loc_100030BE;");
    asm("loc_100030BA: mov %edx,0x10(%esp);");
    asm("loc_100030BE: mov 0x2C(%esp),%edi;");
    asm("loc_100030C2: mov 0x30(%esi),%edx;");
    asm("loc_100030C5: mov 0x14(%esp),%ax;");
    asm("loc_100030CA: add %edi,%edx;");
    asm("loc_100030CC: cmp %ax,-1(%edx,%ebp);");
    asm("loc_100030D1: jne loc_10003150;");
    asm("loc_100030D3: mov 0x1C(%esp),%ax;");
    asm("loc_100030D8: cmp %ax,(%edx);");
    asm("loc_100030DB: jne loc_10003150;");
    asm("loc_100030DD: inc %ecx;");
    asm("loc_100030DE: inc %edx;");
    asm("loc_100030DF: nop;");
    asm("loc_100030E0: mov 2(%ecx),%ax;");
    asm("loc_100030E4: add $2,%ecx;");
    asm("loc_100030E7: add $2,%edx;");
    asm("loc_100030EA: cmp (%edx),%ax;");
    asm("loc_100030ED: jne loc_10003120;");
    asm("loc_100030EF: mov 2(%ecx),%ax;");
    asm("loc_100030F3: add $2,%ecx;");
    asm("loc_100030F6: add $2,%edx;");
    asm("loc_100030F9: cmp (%edx),%ax;");
    asm("loc_100030FC: jne loc_10003120;");
    asm("loc_100030FE: mov 2(%ecx),%ax;");
    asm("loc_10003102: add $2,%ecx;");
    asm("loc_10003105: add $2,%edx;");
    asm("loc_10003108: cmp (%edx),%ax;");
    asm("loc_1000310B: jne loc_10003120;");
    asm("loc_1000310D: mov 2(%ecx),%ax;");
    asm("loc_10003111: add $2,%ecx;");
    asm("loc_10003114: add $2,%edx;");
    asm("loc_10003117: cmp (%edx),%ax;");
    asm("loc_1000311A: jne loc_10003120;");
    asm("loc_1000311C: cmp %ebx,%ecx;");
    asm("loc_1000311E: jb loc_100030E0;");
    asm("loc_10003120: mov (%ecx),%al;");
    asm("loc_10003122: cmp (%edx),%al;");
    asm("loc_10003124: jne loc_10003127;");
    asm("loc_10003126: inc %ecx;");
    asm("loc_10003127: mov %ecx,%edx;");
    asm("loc_10003129: sub %ebx,%edx;");
    asm("loc_1000312B: add $0x101,%edx;");
    asm("loc_10003131: cmp %ebp,%edx;");
    asm("loc_10003133: lea -0x101(%ebx),%ecx;");
    asm("loc_10003139: jle loc_10003150;");
    asm("loc_1000313B: cmp 0x10(%esp),%edx;");
    asm("loc_1000313F: mov %edi,0x68(%esi);");
    asm("loc_10003142: mov %edx,%ebp;");
    asm("loc_10003144: jge loc_1000316C;");
    asm("loc_10003146: mov -1(%edx,%ecx),%dx;");
    asm("loc_1000314B: mov %dx,0x14(%esp);");
    asm("loc_10003150: mov 0x2C(%esi),%edx;");
    asm("loc_10003153: mov 0x38(%esi),%eax;");
    asm("loc_10003156: and %edi,%edx;");
    asm("loc_10003158: movzwl (%eax,%edx,2),%edi;");
    asm("loc_1000315C: cmp 0x18(%esp),%edi;");
    asm("loc_10003160: jbe loc_1000316C;");
    asm("loc_10003162: decl 0x28(%esp);");
    asm("loc_10003166: jne loc_100030C2;");
    asm("loc_1000316C: mov 0x20(%esp),%eax;");
    asm("loc_10003170: cmp %eax,%ebp;");
    asm("loc_10003172: ja loc_10003176;");
    asm("loc_10003174: mov %ebp,%eax;");
    asm("loc_10003176: pop %edi;");
    asm("loc_10003177: pop %esi;");
    asm("loc_10003178: pop %ebp;");
    asm("loc_10003179: pop %ebx;");
    asm("loc_1000317A: add $0x14,%esp;");
    asm("loc_1000317D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003180() // _sub_10003180
{
    __DEBUG_ASM(10003180);
    // chunk 0x10003180 _sub_10003180
    asm("loc_10003180: push %esi;");
    asm("loc_10003181: mov 8(%esp),%esi;");
    asm("loc_10003185: cmpl $0x7FFF,0x2C(%esi);");
    asm("loc_1000318C: mov _data_1000D008,%eax;");
    asm("loc_10003191: jne loc_100031A7;");
    asm("loc_10003193: test %eax,%eax;");
    asm("loc_10003195: jne loc_100031A7;");
    asm("loc_10003197: mov 0xC(%esp),%eax;");
    asm("loc_1000319B: push %eax;");
    asm("loc_1000319C: push %esi;");
    asm("loc_1000319D: call _sub_10001000;");
    asm("loc_100031A2: add $8,%esp;");
    asm("loc_100031A5: pop %esi;");
    asm("loc_100031A6: ret;");
    asm("loc_100031A7: cmp $1,%eax;");
    asm("loc_100031AA: jne loc_100031BC;");
    asm("loc_100031AC: mov 0xC(%esp),%ecx;");
    asm("loc_100031B0: push %ecx;");
    asm("loc_100031B1: push %esi;");
    asm("loc_100031B2: call _sub_1000151F;");
    asm("loc_100031B7: add $8,%esp;");
    asm("loc_100031BA: pop %esi;");
    asm("loc_100031BB: ret;");
    asm("loc_100031BC: cmp $2,%eax;");
    asm("loc_100031BF: jne loc_100031D9;");
    asm("loc_100031C1: call _sub_100014E1;");
    asm("loc_100031C6: and $0xF00,%eax;");
    asm("loc_100031CB: cmp $0x600,%eax;");
    asm("loc_100031D0: sbb %edx,%edx;");
    asm("loc_100031D2: inc %edx;");
    asm("loc_100031D3: mov %edx,_data_1000D008;");
    asm("loc_100031D9: mov 0xC(%esp),%eax;");
    asm("loc_100031DD: push %eax;");
    asm("loc_100031DE: push %esi;");
    asm("loc_100031DF: call _sub_10003040;");
    asm("loc_100031E4: add $8,%esp;");
    asm("loc_100031E7: pop %esi;");
    asm("loc_100031E8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100031F0() // _gzsetparams
{
    __DEBUG_ASM(100031F0);
    // chunk 0x100031F0 _sub_100031F0
    asm("loc_100031F0: push %esi;");
    asm("loc_100031F1: mov 8(%esp),%esi;");
    asm("loc_100031F5: test %esi,%esi;");
    asm("loc_100031F7: je loc_10003249;");
    asm("loc_100031F9: cmpb $0x77,0x5C(%esi);");
    asm("loc_100031FD: jne loc_10003249;");
    asm("loc_100031FF: mov 0x10(%esi),%eax;");
    asm("loc_10003202: test %eax,%eax;");
    asm("loc_10003204: jne loc_10003235;");
    asm("loc_10003206: mov 0x40(%esi),%ecx;");
    asm("loc_10003209: mov 0x48(%esi),%eax;");
    asm("loc_1000320C: push %ecx;");
    asm("loc_1000320D: push $0x4000;");
    asm("loc_10003212: push $1;");
    asm("loc_10003214: push %eax;");
    asm("loc_10003215: mov %eax,0xC(%esi);");
    asm("loc_10003218: call _sub_1000A400;");
    asm("loc_1000321D: add $0x10,%esp;");
    asm("loc_10003220: cmp $0x4000,%eax;");
    asm("loc_10003225: je loc_1000322E;");
    asm("loc_10003227: movl $0xFFFFFFFF,0x38(%esi);");
    asm("loc_1000322E: movl $0x4000,0x10(%esi);");
    asm("loc_10003235: mov 0x10(%esp),%edx;");
    asm("loc_10003239: mov 0xC(%esp),%eax;");
    asm("loc_1000323D: push %edx;");
    asm("loc_1000323E: push %eax;");
    asm("loc_1000323F: push %esi;");
    asm("loc_10003240: call _sub_10002D20;");
    asm("loc_10003245: pop %esi;");
    asm("loc_10003246: ret $0xC;");
    asm("loc_10003249: mov $0xFFFFFFFE,%eax;");
    asm("loc_1000324E: pop %esi;");
    asm("loc_1000324F: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003260() // _sub_10003260
{
    __DEBUG_ASM(10003260);
    // chunk 0x10003260 _sub_10003260
    asm("loc_10003260: mov 0x3C(%esi),%eax;");
    asm("loc_10003263: test %eax,%eax;");
    asm("loc_10003265: je loc_1000326B;");
    asm("loc_10003267: or $0xFFFFFFFF,%eax;");
    asm("loc_1000326A: ret;");
    asm("loc_1000326B: mov 4(%esi),%eax;");
    asm("loc_1000326E: test %eax,%eax;");
    asm("loc_10003270: jne loc_100032B9;");
    asm("loc_10003272: call _sub_1000A40C;");
    asm("loc_10003277: movl $0,(%eax);");
    asm("loc_1000327D: mov 0x40(%esi),%eax;");
    asm("loc_10003280: mov 0x44(%esi),%ecx;");
    asm("loc_10003283: push %eax;");
    asm("loc_10003284: push $0x4000;");
    asm("loc_10003289: push $1;");
    asm("loc_1000328B: push %ecx;");
    asm("loc_1000328C: call _sub_1000A406;");
    asm("loc_10003291: add $0x10,%esp;");
    asm("loc_10003294: test %eax,%eax;");
    asm("loc_10003296: mov %eax,4(%esi);");
    asm("loc_10003299: jne loc_100032B4;");
    asm("loc_1000329B: mov 0x40(%esi),%edx;");
    asm("loc_1000329E: movl $1,0x3C(%esi);");
    asm("loc_100032A5: mov 0xC(%edx),%cl;");
    asm("loc_100032A8: or $0xFFFFFFFF,%eax;");
    asm("loc_100032AB: test $0x20,%cl;");
    asm("loc_100032AE: je loc_100032C6;");
    asm("loc_100032B0: mov %eax,0x38(%esi);");
    asm("loc_100032B3: ret;");
    asm("loc_100032B4: mov 0x44(%esi),%eax;");
    asm("loc_100032B7: mov %eax,(%esi);");
    asm("loc_100032B9: decl 4(%esi);");
    asm("loc_100032BC: mov (%esi),%eax;");
    asm("loc_100032BE: mov (%eax),%cl;");
    asm("loc_100032C0: inc %eax;");
    asm("loc_100032C1: mov %eax,(%esi);");
    asm("loc_100032C3: movzbl %cl,%eax;");
    asm("loc_100032C6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100032D0() // _sub_100032D0
{
    __DEBUG_ASM(100032D0);
    // chunk 0x100032D0 _sub_100032D0
    asm("loc_100032D0: push %esi;");
    asm("loc_100032D1: push %edi;");
    asm("loc_100032D2: mov %eax,%esi;");
    asm("loc_100032D4: xor %edi,%edi;");
    asm("loc_100032D6: call _sub_10003260;");
    asm("loc_100032DB: cmp _data_1000D00C(,%edi,4),%eax;");
    asm("loc_100032E2: jne loc_10003391;");
    asm("loc_100032E8: inc %edi;");
    asm("loc_100032E9: cmp $2,%edi;");
    asm("loc_100032EC: jb loc_100032D6;");
    asm("loc_100032EE: push %ebx;");
    asm("loc_100032EF: call _sub_10003260;");
    asm("loc_100032F4: mov %eax,%edi;");
    asm("loc_100032F6: call _sub_10003260;");
    asm("loc_100032FB: cmp $8,%edi;");
    asm("loc_100032FE: mov %eax,%ebx;");
    asm("loc_10003300: jne loc_100033C9;");
    asm("loc_10003306: test $0xE0,%bl;");
    asm("loc_10003309: jne loc_100033C9;");
    asm("loc_1000330F: mov $6,%edi;");
    asm("loc_10003314: call _sub_10003260;");
    asm("loc_10003319: dec %edi;");
    asm("loc_1000331A: jne loc_10003314;");
    asm("loc_1000331C: test $4,%bl;");
    asm("loc_1000331F: je loc_10003343;");
    asm("loc_10003321: call _sub_10003260;");
    asm("loc_10003326: mov %eax,%edi;");
    asm("loc_10003328: call _sub_10003260;");
    asm("loc_1000332D: shl $8,%eax;");
    asm("loc_10003330: add %eax,%edi;");
    asm("loc_10003332: mov %edi,%ecx;");
    asm("loc_10003334: dec %edi;");
    asm("loc_10003335: test %ecx,%ecx;");
    asm("loc_10003337: je loc_10003343;");
    asm("loc_10003339: call _sub_10003260;");
    asm("loc_1000333E: cmp $0xFFFFFFFF,%eax;");
    asm("loc_10003341: jne loc_10003332;");
    asm("loc_10003343: test $8,%bl;");
    asm("loc_10003346: je loc_10003356;");
    asm("loc_10003348: call _sub_10003260;");
    asm("loc_1000334D: test %eax,%eax;");
    asm("loc_1000334F: je loc_10003356;");
    asm("loc_10003351: cmp $0xFFFFFFFF,%eax;");
    asm("loc_10003354: jne loc_10003348;");
    asm("loc_10003356: test $0x10,%bl;");
    asm("loc_10003359: je loc_1000336E;");
    asm("loc_1000335B: jmp loc_10003360;");
    asm("loc_1000335D: lea (%ecx),%ecx;");
    asm("loc_10003360: call _sub_10003260;");
    asm("loc_10003365: test %eax,%eax;");
    asm("loc_10003367: je loc_1000336E;");
    asm("loc_10003369: cmp $0xFFFFFFFF,%eax;");
    asm("loc_1000336C: jne loc_10003360;");
    asm("loc_1000336E: test $2,%bl;");
    asm("loc_10003371: je loc_10003380;");
    asm("loc_10003373: mov $2,%edi;");
    asm("loc_10003378: call _sub_10003260;");
    asm("loc_1000337D: dec %edi;");
    asm("loc_1000337E: jne loc_10003378;");
    asm("loc_10003380: mov 0x3C(%esi),%edx;");
    asm("loc_10003383: neg %edx;");
    asm("loc_10003385: sbb %edx,%edx;");
    asm("loc_10003387: pop %ebx;");
    asm("loc_10003388: and $0xFFFFFFFD,%edx;");
    asm("loc_1000338B: pop %edi;");
    asm("loc_1000338C: mov %edx,0x38(%esi);");
    asm("loc_1000338F: pop %esi;");
    asm("loc_10003390: ret;");
    asm("loc_10003391: test %edi,%edi;");
    asm("loc_10003393: je loc_100033A1;");
    asm("loc_10003395: mov 4(%esi),%edx;");
    asm("loc_10003398: mov (%esi),%ecx;");
    asm("loc_1000339A: inc %edx;");
    asm("loc_1000339B: dec %ecx;");
    asm("loc_1000339C: mov %edx,4(%esi);");
    asm("loc_1000339F: mov %ecx,(%esi);");
    asm("loc_100033A1: cmp $0xFFFFFFFF,%eax;");
    asm("loc_100033A4: je loc_100033B9;");
    asm("loc_100033A6: mov 4(%esi),%ecx;");
    asm("loc_100033A9: mov (%esi),%eax;");
    asm("loc_100033AB: inc %ecx;");
    asm("loc_100033AC: dec %eax;");
    asm("loc_100033AD: mov %ecx,4(%esi);");
    asm("loc_100033B0: mov %eax,(%esi);");
    asm("loc_100033B2: movl $1,0x58(%esi);");
    asm("loc_100033B9: mov 4(%esi),%ecx;");
    asm("loc_100033BC: xor %eax,%eax;");
    asm("loc_100033BE: test %ecx,%ecx;");
    asm("loc_100033C0: sete %al;");
    asm("loc_100033C3: pop %edi;");
    asm("loc_100033C4: mov %eax,0x38(%esi);");
    asm("loc_100033C7: pop %esi;");
    asm("loc_100033C8: ret;");
    asm("loc_100033C9: pop %ebx;");
    asm("loc_100033CA: pop %edi;");
    asm("loc_100033CB: movl $0xFFFFFFFD,0x38(%esi);");
    asm("loc_100033D2: pop %esi;");
    asm("loc_100033D3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100033E0() // _sub_100033E0
{
    __DEBUG_ASM(100033E0);
    // chunk 0x100033E0 _sub_100033E0
    asm("loc_100033E0: push %edi;");
    asm("loc_100033E1: xor %edi,%edi;");
    asm("loc_100033E3: test %esi,%esi;");
    asm("loc_100033E5: jne loc_100033EE;");
    asm("loc_100033E7: mov $0xFFFFFFFE,%eax;");
    asm("loc_100033EC: pop %edi;");
    asm("loc_100033ED: ret;");
    asm("loc_100033EE: mov 0x50(%esi),%eax;");
    asm("loc_100033F1: test %eax,%eax;");
    asm("loc_100033F3: je loc_100033FE;");
    asm("loc_100033F5: push %eax;");
    asm("loc_100033F6: call _sub_1000A418;");
    asm("loc_100033FB: add $4,%esp;");
    asm("loc_100033FE: mov 0x1C(%esi),%eax;");
    asm("loc_10003401: test %eax,%eax;");
    asm("loc_10003403: je loc_10003420;");
    asm("loc_10003405: mov 0x5C(%esi),%al;");
    asm("loc_10003408: cmp $0x77,%al;");
    asm("loc_1000340A: jne loc_10003414;");
    asm("loc_1000340C: push %esi;");
    asm("loc_1000340D: call _sub_10001FF0;");
    asm("loc_10003412: jmp loc_1000341E;");
    asm("loc_10003414: cmp $0x72,%al;");
    asm("loc_10003416: jne loc_10003420;");
    asm("loc_10003418: push %esi;");
    asm("loc_10003419: call _sub_10005890;");
    asm("loc_1000341E: mov %eax,%edi;");
    asm("loc_10003420: mov 0x40(%esi),%eax;");
    asm("loc_10003423: test %eax,%eax;");
    asm("loc_10003425: je loc_10003441;");
    asm("loc_10003427: push %eax;");
    asm("loc_10003428: call _sub_1000A412;");
    asm("loc_1000342D: add $4,%esp;");
    asm("loc_10003430: test %eax,%eax;");
    asm("loc_10003432: je loc_10003441;");
    asm("loc_10003434: call _sub_1000A40C;");
    asm("loc_10003439: cmpl $0x1D,(%eax);");
    asm("loc_1000343C: je loc_10003441;");
    asm("loc_1000343E: or $0xFFFFFFFF,%edi;");
    asm("loc_10003441: mov 0x38(%esi),%eax;");
    asm("loc_10003444: test %eax,%eax;");
    asm("loc_10003446: jge loc_1000344A;");
    asm("loc_10003448: mov %eax,%edi;");
    asm("loc_1000344A: mov 0x44(%esi),%eax;");
    asm("loc_1000344D: test %eax,%eax;");
    asm("loc_1000344F: je loc_1000345A;");
    asm("loc_10003451: push %eax;");
    asm("loc_10003452: call _sub_1000A418;");
    asm("loc_10003457: add $4,%esp;");
    asm("loc_1000345A: mov 0x48(%esi),%eax;");
    asm("loc_1000345D: test %eax,%eax;");
    asm("loc_1000345F: je loc_1000346A;");
    asm("loc_10003461: push %eax;");
    asm("loc_10003462: call _sub_1000A418;");
    asm("loc_10003467: add $4,%esp;");
    asm("loc_1000346A: mov 0x54(%esi),%eax;");
    asm("loc_1000346D: test %eax,%eax;");
    asm("loc_1000346F: je loc_1000347A;");
    asm("loc_10003471: push %eax;");
    asm("loc_10003472: call _sub_1000A418;");
    asm("loc_10003477: add $4,%esp;");
    asm("loc_1000347A: push %esi;");
    asm("loc_1000347B: call _sub_1000A418;");
    asm("loc_10003480: add $4,%esp;");
    asm("loc_10003483: mov %edi,%eax;");
    asm("loc_10003485: pop %edi;");
    asm("loc_10003486: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003490() // _gzwrite
{
    __DEBUG_ASM(10003490);
    // chunk 0x10003490 _sub_10003490
    asm("loc_10003490: push %esi;");
    asm("loc_10003491: mov 8(%esp),%esi;");
    asm("loc_10003495: test %esi,%esi;");
    asm("loc_10003497: je loc_10003517;");
    asm("loc_10003499: cmpb $0x77,0x5C(%esi);");
    asm("loc_1000349D: jne loc_10003517;");
    asm("loc_1000349F: push %ebp;");
    asm("loc_100034A0: mov 0x10(%esp),%ebp;");
    asm("loc_100034A4: push %edi;");
    asm("loc_100034A5: mov 0x18(%esp),%edi;");
    asm("loc_100034A9: test %edi,%edi;");
    asm("loc_100034AB: mov %ebp,(%esi);");
    asm("loc_100034AD: mov %edi,4(%esi);");
    asm("loc_100034B0: je loc_100034FC;");
    asm("loc_100034B2: mov 0x10(%esi),%eax;");
    asm("loc_100034B5: test %eax,%eax;");
    asm("loc_100034B7: jne loc_100034DD;");
    asm("loc_100034B9: mov 0x40(%esi),%ecx;");
    asm("loc_100034BC: mov 0x48(%esi),%eax;");
    asm("loc_100034BF: push %ecx;");
    asm("loc_100034C0: push $0x4000;");
    asm("loc_100034C5: push $1;");
    asm("loc_100034C7: push %eax;");
    asm("loc_100034C8: mov %eax,0xC(%esi);");
    asm("loc_100034CB: call _sub_1000A400;");
    asm("loc_100034D0: add $0x10,%esp;");
    asm("loc_100034D3: cmp $0x4000,%eax;");
    asm("loc_100034D8: jne loc_100034F5;");
    asm("loc_100034DA: mov %eax,0x10(%esi);");
    asm("loc_100034DD: push $0;");
    asm("loc_100034DF: push %esi;");
    asm("loc_100034E0: call _sub_10001D60;");
    asm("loc_100034E5: test %eax,%eax;");
    asm("loc_100034E7: mov %eax,0x38(%esi);");
    asm("loc_100034EA: jne loc_100034FC;");
    asm("loc_100034EC: mov 4(%esi),%eax;");
    asm("loc_100034EF: test %eax,%eax;");
    asm("loc_100034F1: jne loc_100034B2;");
    asm("loc_100034F3: jmp loc_100034FC;");
    asm("loc_100034F5: movl $0xFFFFFFFF,0x38(%esi);");
    asm("loc_100034FC: mov 0x4C(%esi),%edx;");
    asm("loc_100034FF: push %edi;");
    asm("loc_10003500: push %ebp;");
    asm("loc_10003501: push %edx;");
    asm("loc_10003502: call _sub_10001A80;");
    asm("loc_10003507: mov 4(%esi),%ecx;");
    asm("loc_1000350A: mov %eax,0x4C(%esi);");
    asm("loc_1000350D: mov %edi,%eax;");
    asm("loc_1000350F: pop %edi;");
    asm("loc_10003510: pop %ebp;");
    asm("loc_10003511: sub %ecx,%eax;");
    asm("loc_10003513: pop %esi;");
    asm("loc_10003514: ret $0xC;");
    asm("loc_10003517: mov $0xFFFFFFFE,%eax;");
    asm("loc_1000351C: pop %esi;");
    asm("loc_1000351D: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003520() // _gzprintf
{
    __DEBUG_ASM(10003520);
    // chunk 0x10003520 _sub_10003520
    asm("loc_10003520: mov $0x1000,%eax;");
    asm("loc_10003525: call _sub_1000A424;");
    asm("loc_1000352A: mov 0x1008(%esp),%ecx;");
    asm("loc_10003531: lea 0x100C(%esp),%eax;");
    asm("loc_10003538: push %eax;");
    asm("loc_10003539: push %ecx;");
    asm("loc_1000353A: lea 8(%esp),%edx;");
    asm("loc_1000353E: push %edx;");
    asm("loc_1000353F: call _sub_1000A41E;");
    asm("loc_10003544: lea 0xC(%esp),%eax;");
    asm("loc_10003548: add $0xC,%esp;");
    asm("loc_1000354B: lea 1(%eax),%edx;");
    asm("loc_1000354E: mov %edi,%edi;");
    asm("loc_10003550: mov (%eax),%cl;");
    asm("loc_10003552: inc %eax;");
    asm("loc_10003553: test %cl,%cl;");
    asm("loc_10003555: jne loc_10003550;");
    asm("loc_10003557: sub %edx,%eax;");
    asm("loc_10003559: test %eax,%eax;");
    asm("loc_1000355B: jg loc_10003566;");
    asm("loc_1000355D: xor %eax,%eax;");
    asm("loc_1000355F: add $0x1000,%esp;");
    asm("loc_10003565: ret;");
    asm("loc_10003566: mov 0x1004(%esp),%ecx;");
    asm("loc_1000356D: push %eax;");
    asm("loc_1000356E: lea 4(%esp),%eax;");
    asm("loc_10003572: push %eax;");
    asm("loc_10003573: push %ecx;");
    asm("loc_10003574: call _sub_10003490;");
    asm("loc_10003579: add $0x1000,%esp;");
    asm("loc_1000357F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003580() // _gzputc
{
    __DEBUG_ASM(10003580);
    // chunk 0x10003580 _sub_10003580
    asm("loc_10003580: mov 4(%esp),%edx;");
    asm("loc_10003584: mov 8(%esp),%al;");
    asm("loc_10003588: push $1;");
    asm("loc_1000358A: lea 0xC(%esp),%ecx;");
    asm("loc_1000358E: push %ecx;");
    asm("loc_1000358F: push %edx;");
    asm("loc_10003590: mov %al,0x14(%esp);");
    asm("loc_10003594: call _sub_10003490;");
    asm("loc_10003599: cmp $1,%eax;");
    asm("loc_1000359C: jne loc_100035A6;");
    asm("loc_1000359E: movzbl 8(%esp),%eax;");
    asm("loc_100035A3: ret $8;");
    asm("loc_100035A6: or $0xFFFFFFFF,%eax;");
    asm("loc_100035A9: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100035B0() // _gzputs
{
    __DEBUG_ASM(100035B0);
    // chunk 0x100035B0 _sub_100035B0
    asm("loc_100035B0: mov 8(%esp),%edx;");
    asm("loc_100035B4: mov %edx,%eax;");
    asm("loc_100035B6: push %esi;");
    asm("loc_100035B7: lea 1(%eax),%esi;");
    asm("loc_100035BA: lea (%ebx),%ebx;");
    asm("loc_100035C0: mov (%eax),%cl;");
    asm("loc_100035C2: inc %eax;");
    asm("loc_100035C3: test %cl,%cl;");
    asm("loc_100035C5: jne loc_100035C0;");
    asm("loc_100035C7: sub %esi,%eax;");
    asm("loc_100035C9: push %eax;");
    asm("loc_100035CA: mov 0xC(%esp),%eax;");
    asm("loc_100035CE: push %edx;");
    asm("loc_100035CF: push %eax;");
    asm("loc_100035D0: call _sub_10003490;");
    asm("loc_100035D5: pop %esi;");
    asm("loc_100035D6: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100035E0() // _sub_100035E0
{
    __DEBUG_ASM(100035E0);
    // chunk 0x100035E0 _sub_100035E0
    asm("loc_100035E0: push %ebx;");
    asm("loc_100035E1: push %esi;");
    asm("loc_100035E2: mov %eax,%esi;");
    asm("loc_100035E4: xor %ebx,%ebx;");
    asm("loc_100035E6: test %esi,%esi;");
    asm("loc_100035E8: push %edi;");
    asm("loc_100035E9: je loc_1000368A;");
    asm("loc_100035EF: cmpb $0x77,0x5C(%esi);");
    asm("loc_100035F3: jne loc_1000368A;");
    asm("loc_100035F9: mov %ebx,4(%esi);");
    asm("loc_100035FC: lea (%esp),%esp;");
    asm("loc_10003600: mov 0x10(%esi),%eax;");
    asm("loc_10003603: mov $0x4000,%edi;");
    asm("loc_10003608: sub %eax,%edi;");
    asm("loc_1000360A: je loc_10003630;");
    asm("loc_1000360C: mov 0x40(%esi),%eax;");
    asm("loc_1000360F: mov 0x48(%esi),%ecx;");
    asm("loc_10003612: push %eax;");
    asm("loc_10003613: push %edi;");
    asm("loc_10003614: push $1;");
    asm("loc_10003616: push %ecx;");
    asm("loc_10003617: call _sub_1000A400;");
    asm("loc_1000361C: add $0x10,%esp;");
    asm("loc_1000361F: cmp %edi,%eax;");
    asm("loc_10003621: jne loc_10003680;");
    asm("loc_10003623: mov 0x48(%esi),%edx;");
    asm("loc_10003626: mov %edx,0xC(%esi);");
    asm("loc_10003629: movl $0x4000,0x10(%esi);");
    asm("loc_10003630: test %ebx,%ebx;");
    asm("loc_10003632: jne loc_10003670;");
    asm("loc_10003634: mov 0x10(%esp),%eax;");
    asm("loc_10003638: push %eax;");
    asm("loc_10003639: push %esi;");
    asm("loc_1000363A: call _sub_10001D60;");
    asm("loc_1000363F: test %edi,%edi;");
    asm("loc_10003641: mov %eax,0x38(%esi);");
    asm("loc_10003644: jne loc_1000364E;");
    asm("loc_10003646: cmp $0xFFFFFFFB,%eax;");
    asm("loc_10003649: jne loc_1000364E;");
    asm("loc_1000364B: mov %edi,0x38(%esi);");
    asm("loc_1000364E: mov 0x10(%esi),%eax;");
    asm("loc_10003651: test %eax,%eax;");
    asm("loc_10003653: jne loc_1000365F;");
    asm("loc_10003655: cmpl $1,0x38(%esi);");
    asm("loc_10003659: je loc_1000365F;");
    asm("loc_1000365B: xor %ebx,%ebx;");
    asm("loc_1000365D: jmp loc_10003664;");
    asm("loc_1000365F: mov $1,%ebx;");
    asm("loc_10003664: mov 0x38(%esi),%eax;");
    asm("loc_10003667: test %eax,%eax;");
    asm("loc_10003669: je loc_10003600;");
    asm("loc_1000366B: cmp $1,%eax;");
    asm("loc_1000366E: je loc_10003600;");
    asm("loc_10003670: mov 0x38(%esi),%esi;");
    asm("loc_10003673: mov %esi,%eax;");
    asm("loc_10003675: dec %eax;");
    asm("loc_10003676: neg %eax;");
    asm("loc_10003678: sbb %eax,%eax;");
    asm("loc_1000367A: pop %edi;");
    asm("loc_1000367B: and %esi,%eax;");
    asm("loc_1000367D: pop %esi;");
    asm("loc_1000367E: pop %ebx;");
    asm("loc_1000367F: ret;");
    asm("loc_10003680: or $0xFFFFFFFF,%eax;");
    asm("loc_10003683: pop %edi;");
    asm("loc_10003684: mov %eax,0x38(%esi);");
    asm("loc_10003687: pop %esi;");
    asm("loc_10003688: pop %ebx;");
    asm("loc_10003689: ret;");
    asm("loc_1000368A: pop %edi;");
    asm("loc_1000368B: pop %esi;");
    asm("loc_1000368C: mov $0xFFFFFFFE,%eax;");
    asm("loc_10003691: pop %ebx;");
    asm("loc_10003692: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100036A0() // _gzflush
{
    __DEBUG_ASM(100036A0);
    // chunk 0x100036A0 _sub_100036A0
    asm("loc_100036A0: mov 8(%esp),%eax;");
    asm("loc_100036A4: push %esi;");
    asm("loc_100036A5: mov 8(%esp),%esi;");
    asm("loc_100036A9: push %eax;");
    asm("loc_100036AA: mov %esi,%eax;");
    asm("loc_100036AC: call _sub_100035E0;");
    asm("loc_100036B1: add $4,%esp;");
    asm("loc_100036B4: test %eax,%eax;");
    asm("loc_100036B6: jne loc_100036D0;");
    asm("loc_100036B8: mov 0x40(%esi),%ecx;");
    asm("loc_100036BB: push %ecx;");
    asm("loc_100036BC: call _sub_1000A452;");
    asm("loc_100036C1: mov 0x38(%esi),%ecx;");
    asm("loc_100036C4: add $4,%esp;");
    asm("loc_100036C7: mov %ecx,%eax;");
    asm("loc_100036C9: dec %eax;");
    asm("loc_100036CA: neg %eax;");
    asm("loc_100036CC: sbb %eax,%eax;");
    asm("loc_100036CE: and %ecx,%eax;");
    asm("loc_100036D0: pop %esi;");
    asm("loc_100036D1: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100036E0() // _gzrewind
{
    __DEBUG_ASM(100036E0);
    // chunk 0x100036E0 _sub_100036E0
    asm("loc_100036E0: push %esi;");
    asm("loc_100036E1: mov 8(%esp),%esi;");
    asm("loc_100036E5: test %esi,%esi;");
    asm("loc_100036E7: je loc_1000374C;");
    asm("loc_100036E9: cmpb $0x72,0x5C(%esi);");
    asm("loc_100036ED: jne loc_1000374C;");
    asm("loc_100036EF: mov 0x44(%esi),%eax;");
    asm("loc_100036F2: push $0;");
    asm("loc_100036F4: push $0;");
    asm("loc_100036F6: push $0;");
    asm("loc_100036F8: movl $0,0x38(%esi);");
    asm("loc_100036FF: movl $0,0x3C(%esi);");
    asm("loc_10003706: movl $0,4(%esi);");
    asm("loc_1000370D: mov %eax,(%esi);");
    asm("loc_1000370F: call _sub_10001A80;");
    asm("loc_10003714: mov %eax,0x4C(%esi);");
    asm("loc_10003717: mov 0x60(%esi),%eax;");
    asm("loc_1000371A: test %eax,%eax;");
    asm("loc_1000371C: jne loc_10003730;");
    asm("loc_1000371E: mov 0x40(%esi),%ecx;");
    asm("loc_10003721: push %ecx;");
    asm("loc_10003722: call _sub_1000A45E;");
    asm("loc_10003727: add $4,%esp;");
    asm("loc_1000372A: xor %eax,%eax;");
    asm("loc_1000372C: pop %esi;");
    asm("loc_1000372D: ret $4;");
    asm("loc_10003730: push %esi;");
    asm("loc_10003731: call _sub_10005840;");
    asm("loc_10003736: mov 0x60(%esi),%edx;");
    asm("loc_10003739: mov 0x40(%esi),%eax;");
    asm("loc_1000373C: push $0;");
    asm("loc_1000373E: push %edx;");
    asm("loc_1000373F: push %eax;");
    asm("loc_10003740: call _sub_1000A458;");
    asm("loc_10003745: add $0xC,%esp;");
    asm("loc_10003748: pop %esi;");
    asm("loc_10003749: ret $4;");
    asm("loc_1000374C: or $0xFFFFFFFF,%eax;");
    asm("loc_1000374F: pop %esi;");
    asm("loc_10003750: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003760() // _gzeof
{
    __DEBUG_ASM(10003760);
    // chunk 0x10003760 _sub_10003760
    asm("loc_10003760: mov 4(%esp),%eax;");
    asm("loc_10003764: test %eax,%eax;");
    asm("loc_10003766: je loc_10003774;");
    asm("loc_10003768: cmpb $0x72,0x5C(%eax);");
    asm("loc_1000376C: jne loc_10003774;");
    asm("loc_1000376E: mov 0x3C(%eax),%eax;");
    asm("loc_10003771: ret $4;");
    asm("loc_10003774: xor %eax,%eax;");
    asm("loc_10003776: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003780() // _sub_10003780
{
    __DEBUG_ASM(10003780);
    // chunk 0x10003780 _sub_10003780
    asm("loc_10003780: push %esi;");
    asm("loc_10003781: push %edi;");
    asm("loc_10003782: mov %eax,%esi;");
    asm("loc_10003784: mov $4,%edi;");
    asm("loc_10003789: lea (%esp),%esp;");
    asm("loc_10003790: mov %esi,%eax;");
    asm("loc_10003792: and $0xFF,%eax;");
    asm("loc_10003797: push %ebx;");
    asm("loc_10003798: push %eax;");
    asm("loc_10003799: call _sub_1000A464;");
    asm("loc_1000379E: add $8,%esp;");
    asm("loc_100037A1: shr $8,%esi;");
    asm("loc_100037A4: dec %edi;");
    asm("loc_100037A5: jne loc_10003790;");
    asm("loc_100037A7: pop %edi;");
    asm("loc_100037A8: pop %esi;");
    asm("loc_100037A9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100037B0() // _sub_100037B0
{
    __DEBUG_ASM(100037B0);
    // chunk 0x100037B0 _sub_100037B0
    asm("loc_100037B0: push %esi;");
    asm("loc_100037B1: push %edi;");
    asm("loc_100037B2: mov %eax,%esi;");
    asm("loc_100037B4: call _sub_10003260;");
    asm("loc_100037B9: mov %eax,%edi;");
    asm("loc_100037BB: call _sub_10003260;");
    asm("loc_100037C0: shl $8,%eax;");
    asm("loc_100037C3: add %eax,%edi;");
    asm("loc_100037C5: call _sub_10003260;");
    asm("loc_100037CA: shl $0x10,%eax;");
    asm("loc_100037CD: add %eax,%edi;");
    asm("loc_100037CF: call _sub_10003260;");
    asm("loc_100037D4: cmp $0xFFFFFFFF,%eax;");
    asm("loc_100037D7: jne loc_100037E0;");
    asm("loc_100037D9: movl $0xFFFFFFFD,0x38(%esi);");
    asm("loc_100037E0: shl $0x18,%eax;");
    asm("loc_100037E3: add %edi,%eax;");
    asm("loc_100037E5: pop %edi;");
    asm("loc_100037E6: pop %esi;");
    asm("loc_100037E7: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100037F0() // _gzclose
{
    __DEBUG_ASM(100037F0);
    // chunk 0x100037F0 _sub_100037F0
    asm("loc_100037F0: push %esi;");
    asm("loc_100037F1: mov 8(%esp),%esi;");
    asm("loc_100037F5: test %esi,%esi;");
    asm("loc_100037F7: jne loc_10003802;");
    asm("loc_100037F9: mov $0xFFFFFFFE,%eax;");
    asm("loc_100037FE: pop %esi;");
    asm("loc_100037FF: ret $4;");
    asm("loc_10003802: cmpb $0x77,0x5C(%esi);");
    asm("loc_10003806: jne loc_10003830;");
    asm("loc_10003808: push $4;");
    asm("loc_1000380A: mov %esi,%eax;");
    asm("loc_1000380C: call _sub_100035E0;");
    asm("loc_10003811: add $4,%esp;");
    asm("loc_10003814: test %eax,%eax;");
    asm("loc_10003816: jne loc_10003830;");
    asm("loc_10003818: mov 0x4C(%esi),%eax;");
    asm("loc_1000381B: push %ebx;");
    asm("loc_1000381C: mov 0x40(%esi),%ebx;");
    asm("loc_1000381F: call _sub_10003780;");
    asm("loc_10003824: mov 8(%esi),%eax;");
    asm("loc_10003827: mov 0x40(%esi),%ebx;");
    asm("loc_1000382A: call _sub_10003780;");
    asm("loc_1000382F: pop %ebx;");
    asm("loc_10003830: call _sub_100033E0;");
    asm("loc_10003835: pop %esi;");
    asm("loc_10003836: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003840() // _gzerror
{
    __DEBUG_ASM(10003840);
    // chunk 0x10003840 _sub_10003840
    asm("loc_10003840: push %ebx;");
    asm("loc_10003841: mov 8(%esp),%ebx;");
    asm("loc_10003845: test %ebx,%ebx;");
    asm("loc_10003847: jne loc_1000385C;");
    asm("loc_10003849: mov 0xC(%esp),%eax;");
    asm("loc_1000384D: movl $0xFFFFFFFE,(%eax);");
    asm("loc_10003853: mov _off_1000E1B0,%eax;");
    asm("loc_10003858: pop %ebx;");
    asm("loc_10003859: ret $8;");
    asm("loc_1000385C: mov 0x38(%ebx),%eax;");
    asm("loc_1000385F: test %eax,%eax;");
    asm("loc_10003861: mov 0xC(%esp),%ecx;");
    asm("loc_10003865: mov %eax,(%ecx);");
    asm("loc_10003867: jne loc_10003872;");
    asm("loc_10003869: mov $_data_1000B133,%eax;");
    asm("loc_1000386E: pop %ebx;");
    asm("loc_1000386F: ret $8;");
    asm("loc_10003872: cmp $0xFFFFFFFF,%eax;");
    asm("loc_10003875: push %ebp;");
    asm("loc_10003876: push %esi;");
    asm("loc_10003877: push %edi;");
    asm("loc_10003878: je loc_10003887;");
    asm("loc_1000387A: mov 0x18(%ebx),%ebp;");
    asm("loc_1000387D: test %ebp,%ebp;");
    asm("loc_1000387F: je loc_10003887;");
    asm("loc_10003881: cmpb $0,(%ebp);");
    asm("loc_10003885: jne loc_10003896;");
    asm("loc_10003887: mov 0x38(%ebx),%edx;");
    asm("loc_1000388A: shl $2,%edx;");
    asm("loc_1000388D: mov $_off_1000E1A8,%eax;");
    asm("loc_10003892: sub %edx,%eax;");
    asm("loc_10003894: mov (%eax),%ebp;");
    asm("loc_10003896: mov 0x50(%ebx),%eax;");
    asm("loc_10003899: test %eax,%eax;");
    asm("loc_1000389B: je loc_100038A6;");
    asm("loc_1000389D: push %eax;");
    asm("loc_1000389E: call _sub_1000A418;");
    asm("loc_100038A3: add $4,%esp;");
    asm("loc_100038A6: mov 0x54(%ebx),%eax;");
    asm("loc_100038A9: lea 1(%eax),%edx;");
    asm("loc_100038AC: lea (%esp),%esp;");
    asm("loc_100038B0: mov (%eax),%cl;");
    asm("loc_100038B2: inc %eax;");
    asm("loc_100038B3: test %cl,%cl;");
    asm("loc_100038B5: jne loc_100038B0;");
    asm("loc_100038B7: sub %edx,%eax;");
    asm("loc_100038B9: mov %eax,%edx;");
    asm("loc_100038BB: mov %ebp,%eax;");
    asm("loc_100038BD: lea 1(%eax),%esi;");
    asm("loc_100038C0: mov (%eax),%cl;");
    asm("loc_100038C2: inc %eax;");
    asm("loc_100038C3: test %cl,%cl;");
    asm("loc_100038C5: jne loc_100038C0;");
    asm("loc_100038C7: sub %esi,%eax;");
    asm("loc_100038C9: lea 3(%eax,%edx),%ecx;");
    asm("loc_100038CD: push %ecx;");
    asm("loc_100038CE: call _sub_1000A46A;");
    asm("loc_100038D3: mov 0x54(%ebx),%ecx;");
    asm("loc_100038D6: add $4,%esp;");
    asm("loc_100038D9: mov %eax,0x50(%ebx);");
    asm("loc_100038DC: mov %eax,%edx;");
    asm("loc_100038DE: mov %edi,%edi;");
    asm("loc_100038E0: mov (%ecx),%al;");
    asm("loc_100038E2: inc %ecx;");
    asm("loc_100038E3: mov %al,(%edx);");
    asm("loc_100038E5: inc %edx;");
    asm("loc_100038E6: test %al,%al;");
    asm("loc_100038E8: jne loc_100038E0;");
    asm("loc_100038EA: mov 0x50(%ebx),%edi;");
    asm("loc_100038ED: dec %edi;");
    asm("loc_100038EE: mov %edi,%edi;");
    asm("loc_100038F0: mov 1(%edi),%al;");
    asm("loc_100038F3: inc %edi;");
    asm("loc_100038F4: test %al,%al;");
    asm("loc_100038F6: jne loc_100038F0;");
    asm("loc_100038F8: mov _data_1000B130,%dx;");
    asm("loc_100038FF: mov %dx,(%edi);");
    asm("loc_10003902: mov _data_1000B132,%al;");
    asm("loc_10003907: mov %al,2(%edi);");
    asm("loc_1000390A: mov %ebp,%eax;");
    asm("loc_1000390C: mov %ebp,%esi;");
    asm("loc_1000390E: mov %edi,%edi;");
    asm("loc_10003910: mov (%eax),%cl;");
    asm("loc_10003912: inc %eax;");
    asm("loc_10003913: test %cl,%cl;");
    asm("loc_10003915: jne loc_10003910;");
    asm("loc_10003917: mov 0x50(%ebx),%edi;");
    asm("loc_1000391A: sub %esi,%eax;");
    asm("loc_1000391C: dec %edi;");
    asm("loc_1000391D: lea (%ecx),%ecx;");
    asm("loc_10003920: mov 1(%edi),%cl;");
    asm("loc_10003923: inc %edi;");
    asm("loc_10003924: test %cl,%cl;");
    asm("loc_10003926: jne loc_10003920;");
    asm("loc_10003928: mov %eax,%ecx;");
    asm("loc_1000392A: shr $2,%ecx;");
    asm("loc_1000392D: rep movsl (%esi),(%edi);");
    asm("loc_1000392F: mov %eax,%ecx;");
    asm("loc_10003931: and $3,%ecx;");
    asm("loc_10003934: rep movsb (%esi),(%edi);");
    asm("loc_10003936: mov 0x50(%ebx),%eax;");
    asm("loc_10003939: pop %edi;");
    asm("loc_1000393A: pop %esi;");
    asm("loc_1000393B: pop %ebp;");
    asm("loc_1000393C: pop %ebx;");
    asm("loc_1000393D: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003940() // _sub_10003940
{
    __DEBUG_ASM(10003940);
    // chunk 0x10003940 _sub_10003940
    asm("loc_10003940: sub $0x58,%esp;");
    asm("loc_10003943: push %ebx;");
    asm("loc_10003944: push %ebp;");
    asm("loc_10003945: lea 0x10(%esp),%ecx;");
    asm("loc_10003949: xor %ebx,%ebx;");
    asm("loc_1000394B: mov %ecx,8(%esp);");
    asm("loc_1000394F: mov 0x64(%esp),%ecx;");
    asm("loc_10003953: push %esi;");
    asm("loc_10003954: or $0xFFFFFFFF,%ebp;");
    asm("loc_10003957: cmp %ebx,%ecx;");
    asm("loc_10003959: push %edi;");
    asm("loc_1000395A: mov %ebx,0x14(%esp);");
    asm("loc_1000395E: mov %eax,%edi;");
    asm("loc_10003960: je loc_10003A98;");
    asm("loc_10003966: cmp %ebx,%eax;");
    asm("loc_10003968: je loc_10003A98;");
    asm("loc_1000396E: push $0x64;");
    asm("loc_10003970: call _sub_1000A46A;");
    asm("loc_10003975: mov %eax,%esi;");
    asm("loc_10003977: add $4,%esp;");
    asm("loc_1000397A: cmp %ebx,%esi;");
    asm("loc_1000397C: je loc_10003A98;");
    asm("loc_10003982: push %ebx;");
    asm("loc_10003983: push %ebx;");
    asm("loc_10003984: push %ebx;");
    asm("loc_10003985: mov %ebx,0x20(%esi);");
    asm("loc_10003988: mov %ebx,0x24(%esi);");
    asm("loc_1000398B: mov %ebx,0x28(%esi);");
    asm("loc_1000398E: mov %ebx,0x44(%esi);");
    asm("loc_10003991: mov %ebx,(%esi);");
    asm("loc_10003993: mov %ebx,0x48(%esi);");
    asm("loc_10003996: mov %ebx,0xC(%esi);");
    asm("loc_10003999: mov %ebx,0x10(%esi);");
    asm("loc_1000399C: mov %ebx,4(%esi);");
    asm("loc_1000399F: mov %ebx,0x40(%esi);");
    asm("loc_100039A2: mov %ebx,0x38(%esi);");
    asm("loc_100039A5: mov %ebx,0x3C(%esi);");
    asm("loc_100039A8: call _sub_10001A80;");
    asm("loc_100039AD: mov %eax,0x4C(%esi);");
    asm("loc_100039B0: mov 0x6C(%esp),%eax;");
    asm("loc_100039B4: mov %ebx,0x50(%esi);");
    asm("loc_100039B7: mov %ebx,0x58(%esi);");
    asm("loc_100039BA: lea 1(%eax),%edx;");
    asm("loc_100039BD: lea (%ecx),%ecx;");
    asm("loc_100039C0: mov (%eax),%cl;");
    asm("loc_100039C2: inc %eax;");
    asm("loc_100039C3: cmp %bl,%cl;");
    asm("loc_100039C5: jne loc_100039C0;");
    asm("loc_100039C7: sub %edx,%eax;");
    asm("loc_100039C9: inc %eax;");
    asm("loc_100039CA: push %eax;");
    asm("loc_100039CB: call _sub_1000A46A;");
    asm("loc_100039D0: add $4,%esp;");
    asm("loc_100039D3: cmp %ebx,%eax;");
    asm("loc_100039D5: mov %eax,0x54(%esi);");
    asm("loc_100039D8: je loc_10003A93;");
    asm("loc_100039DE: mov 0x6C(%esp),%ecx;");
    asm("loc_100039E2: mov %eax,%edx;");
    asm("loc_100039E4: mov (%ecx),%al;");
    asm("loc_100039E6: inc %ecx;");
    asm("loc_100039E7: mov %al,(%edx);");
    asm("loc_100039E9: inc %edx;");
    asm("loc_100039EA: cmp %bl,%al;");
    asm("loc_100039EC: jne loc_100039E4;");
    asm("loc_100039EE: mov %bl,0x5C(%esi);");
    asm("loc_100039F1: mov $0x72,%cl;");
    asm("loc_100039F3: cmp %cl,(%edi);");
    asm("loc_100039F5: jne loc_100039FA;");
    asm("loc_100039F7: mov %cl,0x5C(%esi);");
    asm("loc_100039FA: mov (%edi),%al;");
    asm("loc_100039FC: cmp $0x77,%al;");
    asm("loc_100039FE: je loc_10003A04;");
    asm("loc_10003A00: cmp $0x61,%al;");
    asm("loc_10003A02: jne loc_10003A08;");
    asm("loc_10003A04: movb $0x77,0x5C(%esi);");
    asm("loc_10003A08: mov (%edi),%al;");
    asm("loc_10003A0A: cmp $0x30,%al;");
    asm("loc_10003A0C: jl loc_10003A1A;");
    asm("loc_10003A0E: cmp $0x39,%al;");
    asm("loc_10003A10: jg loc_10003A1A;");
    asm("loc_10003A12: movsbl %al,%ebp;");
    asm("loc_10003A15: sub $0x30,%ebp;");
    asm("loc_10003A18: jmp loc_10003A41;");
    asm("loc_10003A1A: cmp $0x66,%al;");
    asm("loc_10003A1C: jne loc_10003A28;");
    asm("loc_10003A1E: movl $1,0x14(%esp);");
    asm("loc_10003A26: jmp loc_10003A41;");
    asm("loc_10003A28: cmp $0x68,%al;");
    asm("loc_10003A2A: jne loc_10003A36;");
    asm("loc_10003A2C: movl $2,0x14(%esp);");
    asm("loc_10003A34: jmp loc_10003A41;");
    asm("loc_10003A36: mov 0x10(%esp),%edx;");
    asm("loc_10003A3A: mov %al,(%edx);");
    asm("loc_10003A3C: inc %edx;");
    asm("loc_10003A3D: mov %edx,0x10(%esp);");
    asm("loc_10003A41: inc %edi;");
    asm("loc_10003A42: cmp %bl,%al;");
    asm("loc_10003A44: je loc_10003A52;");
    asm("loc_10003A46: mov 0x10(%esp),%eax;");
    asm("loc_10003A4A: lea 0x68(%esp),%edx;");
    asm("loc_10003A4E: cmp %edx,%eax;");
    asm("loc_10003A50: jne loc_100039F3;");
    asm("loc_10003A52: mov 0x5C(%esi),%al;");
    asm("loc_10003A55: cmp %bl,%al;");
    asm("loc_10003A57: je loc_10003A93;");
    asm("loc_10003A59: cmp $0x77,%al;");
    asm("loc_10003A5B: jne loc_10003AA2;");
    asm("loc_10003A5D: mov 0x14(%esp),%eax;");
    asm("loc_10003A61: push $0x38;");
    asm("loc_10003A63: push $_data_1000B068;");
    asm("loc_10003A68: push %eax;");
    asm("loc_10003A69: push $8;");
    asm("loc_10003A6B: push $0xFFFFFFF1;");
    asm("loc_10003A6D: push $8;");
    asm("loc_10003A6F: push %ebp;");
    asm("loc_10003A70: push %esi;");
    asm("loc_10003A71: call _sub_10002DE0;");
    asm("loc_10003A76: push $0x4000;");
    asm("loc_10003A7B: mov %eax,%edi;");
    asm("loc_10003A7D: call _sub_1000A46A;");
    asm("loc_10003A82: add $4,%esp;");
    asm("loc_10003A85: cmp %ebx,%edi;");
    asm("loc_10003A87: mov %eax,0x48(%esi);");
    asm("loc_10003A8A: mov %eax,0xC(%esi);");
    asm("loc_10003A8D: jne loc_10003A93;");
    asm("loc_10003A8F: cmp %ebx,%eax;");
    asm("loc_10003A91: jne loc_10003ACC;");
    asm("loc_10003A93: call _sub_100033E0;");
    asm("loc_10003A98: pop %edi;");
    asm("loc_10003A99: pop %esi;");
    asm("loc_10003A9A: pop %ebp;");
    asm("loc_10003A9B: xor %eax,%eax;");
    asm("loc_10003A9D: pop %ebx;");
    asm("loc_10003A9E: add $0x58,%esp;");
    asm("loc_10003AA1: ret;");
    asm("loc_10003AA2: push $0x4000;");
    asm("loc_10003AA7: call _sub_1000A46A;");
    asm("loc_10003AAC: add $4,%esp;");
    asm("loc_10003AAF: push $0x38;");
    asm("loc_10003AB1: push $_data_1000B068;");
    asm("loc_10003AB6: push $0xFFFFFFF1;");
    asm("loc_10003AB8: push %esi;");
    asm("loc_10003AB9: mov %eax,0x44(%esi);");
    asm("loc_10003ABC: mov %eax,(%esi);");
    asm("loc_10003ABE: call _sub_100058E0;");
    asm("loc_10003AC3: test %eax,%eax;");
    asm("loc_10003AC5: jne loc_10003A93;");
    asm("loc_10003AC7: cmp %ebx,0x44(%esi);");
    asm("loc_10003ACA: je loc_10003A93;");
    asm("loc_10003ACC: movl $0x4000,0x10(%esi);");
    asm("loc_10003AD3: call _sub_1000A40C;");
    asm("loc_10003AD8: mov %ebx,(%eax);");
    asm("loc_10003ADA: mov 0x70(%esp),%eax;");
    asm("loc_10003ADE: cmp %ebx,%eax;");
    asm("loc_10003AE0: lea 0x18(%esp),%ecx;");
    asm("loc_10003AE4: push %ecx;");
    asm("loc_10003AE5: jge loc_10003AF3;");
    asm("loc_10003AE7: mov 0x70(%esp),%edx;");
    asm("loc_10003AEB: push %edx;");
    asm("loc_10003AEC: call _sub_1000A482;");
    asm("loc_10003AF1: jmp loc_10003AF9;");
    asm("loc_10003AF3: push %eax;");
    asm("loc_10003AF4: call _sub_1000A47C;");
    asm("loc_10003AF9: add $8,%esp;");
    asm("loc_10003AFC: cmp %ebx,%eax;");
    asm("loc_10003AFE: mov %eax,0x40(%esi);");
    asm("loc_10003B01: je loc_10003A93;");
    asm("loc_10003B03: cmpb $0x77,0x5C(%esi);");
    asm("loc_10003B07: jne loc_10003B40;");
    asm("loc_10003B09: mov _data_1000D010,%edx;");
    asm("loc_10003B0F: mov _data_1000D00C,%ecx;");
    asm("loc_10003B15: push $0xB;");
    asm("loc_10003B17: push %ebx;");
    asm("loc_10003B18: push %ebx;");
    asm("loc_10003B19: push %ebx;");
    asm("loc_10003B1A: push %ebx;");
    asm("loc_10003B1B: push %ebx;");
    asm("loc_10003B1C: push %ebx;");
    asm("loc_10003B1D: push $8;");
    asm("loc_10003B1F: push %edx;");
    asm("loc_10003B20: push %ecx;");
    asm("loc_10003B21: push $_data_1000B134;");
    asm("loc_10003B26: push %eax;");
    asm("loc_10003B27: call _sub_1000A476;");
    asm("loc_10003B2C: add $0x30,%esp;");
    asm("loc_10003B2F: pop %edi;");
    asm("loc_10003B30: movl $0xA,0x60(%esi);");
    asm("loc_10003B37: mov %esi,%eax;");
    asm("loc_10003B39: pop %esi;");
    asm("loc_10003B3A: pop %ebp;");
    asm("loc_10003B3B: pop %ebx;");
    asm("loc_10003B3C: add $0x58,%esp;");
    asm("loc_10003B3F: ret;");
    asm("loc_10003B40: mov %esi,%eax;");
    asm("loc_10003B42: call _sub_100032D0;");
    asm("loc_10003B47: mov 0x40(%esi),%edx;");
    asm("loc_10003B4A: push %edx;");
    asm("loc_10003B4B: call _sub_1000A470;");
    asm("loc_10003B50: mov 4(%esi),%ecx;");
    asm("loc_10003B53: add $4,%esp;");
    asm("loc_10003B56: sub %ecx,%eax;");
    asm("loc_10003B58: pop %edi;");
    asm("loc_10003B59: mov %eax,0x60(%esi);");
    asm("loc_10003B5C: mov %esi,%eax;");
    asm("loc_10003B5E: pop %esi;");
    asm("loc_10003B5F: pop %ebp;");
    asm("loc_10003B60: pop %ebx;");
    asm("loc_10003B61: add $0x58,%esp;");
    asm("loc_10003B64: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003B70() // _gzopen
{
    __DEBUG_ASM(10003B70);
    // chunk 0x10003B70 _sub_10003B70
    asm("loc_10003B70: mov 4(%esp),%eax;");
    asm("loc_10003B74: push $0xFFFFFFFF;");
    asm("loc_10003B76: push %eax;");
    asm("loc_10003B77: mov 0x10(%esp),%eax;");
    asm("loc_10003B7B: call _sub_10003940;");
    asm("loc_10003B80: add $8,%esp;");
    asm("loc_10003B83: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003B90() // _gzdopen
{
    __DEBUG_ASM(10003B90);
    // chunk 0x10003B90 _sub_10003B90
    asm("loc_10003B90: sub $0x14,%esp;");
    asm("loc_10003B93: push %esi;");
    asm("loc_10003B94: mov 0x1C(%esp),%esi;");
    asm("loc_10003B98: test %esi,%esi;");
    asm("loc_10003B9A: jge loc_10003BA5;");
    asm("loc_10003B9C: xor %eax,%eax;");
    asm("loc_10003B9E: pop %esi;");
    asm("loc_10003B9F: add $0x14,%esp;");
    asm("loc_10003BA2: ret $8;");
    asm("loc_10003BA5: push %esi;");
    asm("loc_10003BA6: lea 8(%esp),%eax;");
    asm("loc_10003BAA: push $_data_1000B14C;");
    asm("loc_10003BAF: push %eax;");
    asm("loc_10003BB0: call _sub_1000A488;");
    asm("loc_10003BB5: mov 0x2C(%esp),%eax;");
    asm("loc_10003BB9: lea 0x10(%esp),%ecx;");
    asm("loc_10003BBD: push %esi;");
    asm("loc_10003BBE: push %ecx;");
    asm("loc_10003BBF: call _sub_10003940;");
    asm("loc_10003BC4: add $0x14,%esp;");
    asm("loc_10003BC7: pop %esi;");
    asm("loc_10003BC8: add $0x14,%esp;");
    asm("loc_10003BCB: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003BD0() // _gzread
{
    __DEBUG_ASM(10003BD0);
    // chunk 0x10003BD0 _sub_10003BD0
    asm("loc_10003BD0: push %ecx;");
    asm("loc_10003BD1: mov 0xC(%esp),%ecx;");
    asm("loc_10003BD5: push %ebx;");
    asm("loc_10003BD6: push %ebp;");
    asm("loc_10003BD7: mov 0x10(%esp),%ebp;");
    asm("loc_10003BDB: test %ebp,%ebp;");
    asm("loc_10003BDD: push %esi;");
    asm("loc_10003BDE: push %edi;");
    asm("loc_10003BDF: mov %ecx,%esi;");
    asm("loc_10003BE1: je loc_10003DF2;");
    asm("loc_10003BE7: cmpb $0x72,0x5C(%ebp);");
    asm("loc_10003BEB: jne loc_10003DF2;");
    asm("loc_10003BF1: mov 0x38(%ebp),%eax;");
    asm("loc_10003BF4: cmp $0xFFFFFFFD,%eax;");
    asm("loc_10003BF7: je loc_10003DE7;");
    asm("loc_10003BFD: cmp $0xFFFFFFFF,%eax;");
    asm("loc_10003C00: je loc_10003DE7;");
    asm("loc_10003C06: cmp $1,%eax;");
    asm("loc_10003C09: jne loc_10003C15;");
    asm("loc_10003C0B: pop %edi;");
    asm("loc_10003C0C: pop %esi;");
    asm("loc_10003C0D: pop %ebp;");
    asm("loc_10003C0E: xor %eax,%eax;");
    asm("loc_10003C10: pop %ebx;");
    asm("loc_10003C11: pop %ecx;");
    asm("loc_10003C12: ret $0xC;");
    asm("loc_10003C15: mov 0x20(%esp),%ebx;");
    asm("loc_10003C19: test %ebx,%ebx;");
    asm("loc_10003C1B: mov %ecx,0x10(%esp);");
    asm("loc_10003C1F: mov %ecx,0xC(%ebp);");
    asm("loc_10003C22: mov %ebx,0x10(%ebp);");
    asm("loc_10003C25: je loc_10003D21;");
    asm("loc_10003C2B: jmp loc_10003C30;");
    asm("loc_10003C2D: lea (%ecx),%ecx;");
    asm("loc_10003C30: mov 0x58(%ebp),%eax;");
    asm("loc_10003C33: test %eax,%eax;");
    asm("loc_10003C35: jne loc_10003D43;");
    asm("loc_10003C3B: mov 4(%ebp),%eax;");
    asm("loc_10003C3E: test %eax,%eax;");
    asm("loc_10003C40: jne loc_10003C8C;");
    asm("loc_10003C42: mov 0x3C(%ebp),%eax;");
    asm("loc_10003C45: test %eax,%eax;");
    asm("loc_10003C47: jne loc_10003C8C;");
    asm("loc_10003C49: call _sub_1000A40C;");
    asm("loc_10003C4E: movl $0,(%eax);");
    asm("loc_10003C54: mov 0x40(%ebp),%eax;");
    asm("loc_10003C57: mov 0x44(%ebp),%ecx;");
    asm("loc_10003C5A: push %eax;");
    asm("loc_10003C5B: push $0x4000;");
    asm("loc_10003C60: push $1;");
    asm("loc_10003C62: push %ecx;");
    asm("loc_10003C63: call _sub_1000A406;");
    asm("loc_10003C68: add $0x10,%esp;");
    asm("loc_10003C6B: test %eax,%eax;");
    asm("loc_10003C6D: mov %eax,4(%ebp);");
    asm("loc_10003C70: jne loc_10003C86;");
    asm("loc_10003C72: mov 0x40(%ebp),%edx;");
    asm("loc_10003C75: movl $1,0x3C(%ebp);");
    asm("loc_10003C7C: testb $0x20,0xC(%edx);");
    asm("loc_10003C80: jne loc_10003DDB;");
    asm("loc_10003C86: mov 0x44(%ebp),%eax;");
    asm("loc_10003C89: mov %eax,(%ebp);");
    asm("loc_10003C8C: push $0;");
    asm("loc_10003C8E: push %ebp;");
    asm("loc_10003C8F: call _sub_10005A00;");
    asm("loc_10003C94: cmp $1,%eax;");
    asm("loc_10003C97: mov %eax,0x38(%ebp);");
    asm("loc_10003C9A: jne loc_10003CFB;");
    asm("loc_10003C9C: mov 0xC(%ebp),%ecx;");
    asm("loc_10003C9F: mov 0x4C(%ebp),%edx;");
    asm("loc_10003CA2: sub %esi,%ecx;");
    asm("loc_10003CA4: push %ecx;");
    asm("loc_10003CA5: push %esi;");
    asm("loc_10003CA6: push %edx;");
    asm("loc_10003CA7: call _sub_10001A80;");
    asm("loc_10003CAC: mov %eax,0x4C(%ebp);");
    asm("loc_10003CAF: mov 0xC(%ebp),%eax;");
    asm("loc_10003CB2: mov %eax,0x18(%esp);");
    asm("loc_10003CB6: mov %ebp,%eax;");
    asm("loc_10003CB8: call _sub_100037B0;");
    asm("loc_10003CBD: cmp 0x4C(%ebp),%eax;");
    asm("loc_10003CC0: jne loc_10003D16;");
    asm("loc_10003CC2: mov %ebp,%eax;");
    asm("loc_10003CC4: call _sub_100037B0;");
    asm("loc_10003CC9: mov %ebp,%eax;");
    asm("loc_10003CCB: call _sub_100032D0;");
    asm("loc_10003CD0: mov 0x38(%ebp),%eax;");
    asm("loc_10003CD3: test %eax,%eax;");
    asm("loc_10003CD5: jne loc_10003D1D;");
    asm("loc_10003CD7: mov 8(%ebp),%esi;");
    asm("loc_10003CDA: mov 0x14(%ebp),%edi;");
    asm("loc_10003CDD: push %ebp;");
    asm("loc_10003CDE: call _sub_10005840;");
    asm("loc_10003CE3: push $0;");
    asm("loc_10003CE5: push $0;");
    asm("loc_10003CE7: push $0;");
    asm("loc_10003CE9: mov %esi,8(%ebp);");
    asm("loc_10003CEC: mov %edi,0x14(%ebp);");
    asm("loc_10003CEF: call _sub_10001A80;");
    asm("loc_10003CF4: mov 0x18(%esp),%esi;");
    asm("loc_10003CF8: mov %eax,0x4C(%ebp);");
    asm("loc_10003CFB: mov 0x38(%ebp),%eax;");
    asm("loc_10003CFE: test %eax,%eax;");
    asm("loc_10003D00: jne loc_10003D21;");
    asm("loc_10003D02: mov 0x3C(%ebp),%eax;");
    asm("loc_10003D05: test %eax,%eax;");
    asm("loc_10003D07: jne loc_10003D21;");
    asm("loc_10003D09: mov 0x10(%ebp),%eax;");
    asm("loc_10003D0C: test %eax,%eax;");
    asm("loc_10003D0E: jne loc_10003C30;");
    asm("loc_10003D14: jmp loc_10003D21;");
    asm("loc_10003D16: movl $0xFFFFFFFD,0x38(%ebp);");
    asm("loc_10003D1D: mov 0x18(%esp),%esi;");
    asm("loc_10003D21: mov 0xC(%ebp),%ecx;");
    asm("loc_10003D24: mov 0x4C(%ebp),%edx;");
    asm("loc_10003D27: sub %esi,%ecx;");
    asm("loc_10003D29: push %ecx;");
    asm("loc_10003D2A: push %esi;");
    asm("loc_10003D2B: push %edx;");
    asm("loc_10003D2C: call _sub_10001A80;");
    asm("loc_10003D31: mov 0x10(%ebp),%ecx;");
    asm("loc_10003D34: pop %edi;");
    asm("loc_10003D35: mov %eax,0x4C(%ebp);");
    asm("loc_10003D38: pop %esi;");
    asm("loc_10003D39: mov %ebx,%eax;");
    asm("loc_10003D3B: pop %ebp;");
    asm("loc_10003D3C: sub %ecx,%eax;");
    asm("loc_10003D3E: pop %ebx;");
    asm("loc_10003D3F: pop %ecx;");
    asm("loc_10003D40: ret $0xC;");
    asm("loc_10003D43: mov 4(%ebp),%eax;");
    asm("loc_10003D46: mov 0x10(%ebp),%ecx;");
    asm("loc_10003D49: cmp %ecx,%eax;");
    asm("loc_10003D4B: jbe loc_10003D4F;");
    asm("loc_10003D4D: mov %ecx,%eax;");
    asm("loc_10003D4F: test %eax,%eax;");
    asm("loc_10003D51: jbe loc_10003D8E;");
    asm("loc_10003D53: mov (%ebp),%esi;");
    asm("loc_10003D56: mov 0xC(%ebp),%edi;");
    asm("loc_10003D59: mov %eax,%ecx;");
    asm("loc_10003D5B: mov %ecx,%edx;");
    asm("loc_10003D5D: shr $2,%ecx;");
    asm("loc_10003D60: rep movsl (%esi),(%edi);");
    asm("loc_10003D62: mov %edx,%ecx;");
    asm("loc_10003D64: and $3,%ecx;");
    asm("loc_10003D67: rep movsb (%esi),(%edi);");
    asm("loc_10003D69: mov 0x1C(%esp),%ecx;");
    asm("loc_10003D6D: mov (%ebp),%esi;");
    asm("loc_10003D70: mov 0x10(%ebp),%edx;");
    asm("loc_10003D73: add %eax,%ecx;");
    asm("loc_10003D75: mov %ecx,0x10(%esp);");
    asm("loc_10003D79: mov %ecx,0xC(%ebp);");
    asm("loc_10003D7C: mov 4(%ebp),%ecx;");
    asm("loc_10003D7F: add %eax,%esi;");
    asm("loc_10003D81: sub %eax,%edx;");
    asm("loc_10003D83: sub %eax,%ecx;");
    asm("loc_10003D85: mov %esi,(%ebp);");
    asm("loc_10003D88: mov %edx,0x10(%ebp);");
    asm("loc_10003D8B: mov %ecx,4(%ebp);");
    asm("loc_10003D8E: mov 0x10(%ebp),%eax;");
    asm("loc_10003D91: test %eax,%eax;");
    asm("loc_10003D93: jbe loc_10003DB1;");
    asm("loc_10003D95: mov 0x40(%ebp),%edx;");
    asm("loc_10003D98: push %edx;");
    asm("loc_10003D99: push %eax;");
    asm("loc_10003D9A: mov 0x18(%esp),%eax;");
    asm("loc_10003D9E: push $1;");
    asm("loc_10003DA0: push %eax;");
    asm("loc_10003DA1: call _sub_1000A406;");
    asm("loc_10003DA6: mov 0x10(%ebp),%ecx;");
    asm("loc_10003DA9: add $0x10,%esp;");
    asm("loc_10003DAC: sub %eax,%ecx;");
    asm("loc_10003DAE: mov %ecx,0x10(%ebp);");
    asm("loc_10003DB1: mov 0x10(%ebp),%esi;");
    asm("loc_10003DB4: mov 8(%ebp),%edx;");
    asm("loc_10003DB7: mov 0x14(%ebp),%ecx;");
    asm("loc_10003DBA: sub %esi,%ebx;");
    asm("loc_10003DBC: add %ebx,%edx;");
    asm("loc_10003DBE: add %ebx,%ecx;");
    asm("loc_10003DC0: test %ebx,%ebx;");
    asm("loc_10003DC2: mov %edx,8(%ebp);");
    asm("loc_10003DC5: mov %ecx,0x14(%ebp);");
    asm("loc_10003DC8: jne loc_10003DD1;");
    asm("loc_10003DCA: movl $1,0x3C(%ebp);");
    asm("loc_10003DD1: pop %edi;");
    asm("loc_10003DD2: pop %esi;");
    asm("loc_10003DD3: pop %ebp;");
    asm("loc_10003DD4: mov %ebx,%eax;");
    asm("loc_10003DD6: pop %ebx;");
    asm("loc_10003DD7: pop %ecx;");
    asm("loc_10003DD8: ret $0xC;");
    asm("loc_10003DDB: movl $0xFFFFFFFF,0x38(%ebp);");
    asm("loc_10003DE2: jmp loc_10003D21;");
    asm("loc_10003DE7: pop %edi;");
    asm("loc_10003DE8: pop %esi;");
    asm("loc_10003DE9: pop %ebp;");
    asm("loc_10003DEA: or $0xFFFFFFFF,%eax;");
    asm("loc_10003DED: pop %ebx;");
    asm("loc_10003DEE: pop %ecx;");
    asm("loc_10003DEF: ret $0xC;");
    asm("loc_10003DF2: pop %edi;");
    asm("loc_10003DF3: pop %esi;");
    asm("loc_10003DF4: pop %ebp;");
    asm("loc_10003DF5: mov $0xFFFFFFFE,%eax;");
    asm("loc_10003DFA: pop %ebx;");
    asm("loc_10003DFB: pop %ecx;");
    asm("loc_10003DFC: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003E00() // _gzgetc
{
    __DEBUG_ASM(10003E00);
    // chunk 0x10003E00 _sub_10003E00
    asm("loc_10003E00: mov 4(%esp),%ecx;");
    asm("loc_10003E04: push $1;");
    asm("loc_10003E06: lea 8(%esp),%eax;");
    asm("loc_10003E0A: push %eax;");
    asm("loc_10003E0B: push %ecx;");
    asm("loc_10003E0C: call _sub_10003BD0;");
    asm("loc_10003E11: cmp $1,%eax;");
    asm("loc_10003E14: jne loc_10003E1E;");
    asm("loc_10003E16: movzbl 4(%esp),%eax;");
    asm("loc_10003E1B: ret $4;");
    asm("loc_10003E1E: or $0xFFFFFFFF,%eax;");
    asm("loc_10003E21: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003E30() // _gzgets
{
    __DEBUG_ASM(10003E30);
    // chunk 0x10003E30 _sub_10003E30
    asm("loc_10003E30: push %ebp;");
    asm("loc_10003E31: push %esi;");
    asm("loc_10003E32: mov 0x10(%esp),%esi;");
    asm("loc_10003E36: test %esi,%esi;");
    asm("loc_10003E38: push %edi;");
    asm("loc_10003E39: mov %esi,%ebp;");
    asm("loc_10003E3B: je loc_10003E7E;");
    asm("loc_10003E3D: mov 0x18(%esp),%edi;");
    asm("loc_10003E41: test %edi,%edi;");
    asm("loc_10003E43: jle loc_10003E7E;");
    asm("loc_10003E45: push %ebx;");
    asm("loc_10003E46: mov 0x14(%esp),%ebx;");
    asm("loc_10003E4A: lea (%ebx),%ebx;");
    asm("loc_10003E50: dec %edi;");
    asm("loc_10003E51: test %edi,%edi;");
    asm("loc_10003E53: jle loc_10003E6A;");
    asm("loc_10003E55: push $1;");
    asm("loc_10003E57: push %esi;");
    asm("loc_10003E58: push %ebx;");
    asm("loc_10003E59: call _sub_10003BD0;");
    asm("loc_10003E5E: cmp $1,%eax;");
    asm("loc_10003E61: jne loc_10003E6A;");
    asm("loc_10003E63: mov (%esi),%al;");
    asm("loc_10003E65: inc %esi;");
    asm("loc_10003E66: cmp $0xA,%al;");
    asm("loc_10003E68: jne loc_10003E50;");
    asm("loc_10003E6A: cmp %esi,%ebp;");
    asm("loc_10003E6C: movb $0,(%esi);");
    asm("loc_10003E6F: pop %ebx;");
    asm("loc_10003E70: jne loc_10003E76;");
    asm("loc_10003E72: test %edi,%edi;");
    asm("loc_10003E74: jg loc_10003E7E;");
    asm("loc_10003E76: pop %edi;");
    asm("loc_10003E77: pop %esi;");
    asm("loc_10003E78: mov %ebp,%eax;");
    asm("loc_10003E7A: pop %ebp;");
    asm("loc_10003E7B: ret $0xC;");
    asm("loc_10003E7E: pop %edi;");
    asm("loc_10003E7F: pop %esi;");
    asm("loc_10003E80: xor %eax,%eax;");
    asm("loc_10003E82: pop %ebp;");
    asm("loc_10003E83: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003E90() // _gzseek
{
    __DEBUG_ASM(10003E90);
    // chunk 0x10003E90 _sub_10003E90
    asm("loc_10003E90: push %ebx;");
    asm("loc_10003E91: push %esi;");
    asm("loc_10003E92: mov 0xC(%esp),%esi;");
    asm("loc_10003E96: test %esi,%esi;");
    asm("loc_10003E98: push %edi;");
    asm("loc_10003E99: je loc_10003FD9;");
    asm("loc_10003E9F: mov 0x18(%esp),%ecx;");
    asm("loc_10003EA3: cmp $2,%ecx;");
    asm("loc_10003EA6: je loc_10003FD9;");
    asm("loc_10003EAC: mov 0x38(%esi),%eax;");
    asm("loc_10003EAF: cmp $0xFFFFFFFF,%eax;");
    asm("loc_10003EB2: je loc_10003FD9;");
    asm("loc_10003EB8: cmp $0xFFFFFFFD,%eax;");
    asm("loc_10003EBB: je loc_10003FD9;");
    asm("loc_10003EC1: cmpb $0x77,0x5C(%esi);");
    asm("loc_10003EC5: jne loc_10003F2D;");
    asm("loc_10003EC7: test %ecx,%ecx;");
    asm("loc_10003EC9: mov 0x14(%esp),%ebx;");
    asm("loc_10003ECD: jne loc_10003ED2;");
    asm("loc_10003ECF: sub 8(%esi),%ebx;");
    asm("loc_10003ED2: test %ebx,%ebx;");
    asm("loc_10003ED4: jl loc_10003FD9;");
    asm("loc_10003EDA: mov 0x44(%esi),%eax;");
    asm("loc_10003EDD: test %eax,%eax;");
    asm("loc_10003EDF: jne loc_10003EFC;");
    asm("loc_10003EE1: push $0x4000;");
    asm("loc_10003EE6: call _sub_1000A46A;");
    asm("loc_10003EEB: mov %eax,%edi;");
    asm("loc_10003EED: add $4,%esp;");
    asm("loc_10003EF0: mov $0x1000,%ecx;");
    asm("loc_10003EF5: xor %eax,%eax;");
    asm("loc_10003EF7: mov %edi,0x44(%esi);");
    asm("loc_10003EFA: rep stos %eax,(%edi);");
    asm("loc_10003EFC: test %ebx,%ebx;");
    asm("loc_10003EFE: jle loc_10003F24;");
    asm("loc_10003F00: mov $0x4000,%eax;");
    asm("loc_10003F05: cmp %eax,%ebx;");
    asm("loc_10003F07: jge loc_10003F0B;");
    asm("loc_10003F09: mov %ebx,%eax;");
    asm("loc_10003F0B: push %eax;");
    asm("loc_10003F0C: mov 0x44(%esi),%eax;");
    asm("loc_10003F0F: push %eax;");
    asm("loc_10003F10: push %esi;");
    asm("loc_10003F11: call _sub_10003490;");
    asm("loc_10003F16: test %eax,%eax;");
    asm("loc_10003F18: je loc_10003FD9;");
    asm("loc_10003F1E: sub %eax,%ebx;");
    asm("loc_10003F20: test %ebx,%ebx;");
    asm("loc_10003F22: jg loc_10003F00;");
    asm("loc_10003F24: mov 8(%esi),%eax;");
    asm("loc_10003F27: pop %edi;");
    asm("loc_10003F28: pop %esi;");
    asm("loc_10003F29: pop %ebx;");
    asm("loc_10003F2A: ret $0xC;");
    asm("loc_10003F2D: cmp $1,%ecx;");
    asm("loc_10003F30: mov 0x14(%esp),%edi;");
    asm("loc_10003F34: jne loc_10003F39;");
    asm("loc_10003F36: add 0x14(%esi),%edi;");
    asm("loc_10003F39: test %edi,%edi;");
    asm("loc_10003F3B: jl loc_10003FD9;");
    asm("loc_10003F41: mov 0x58(%esi),%eax;");
    asm("loc_10003F44: test %eax,%eax;");
    asm("loc_10003F46: je loc_10003F75;");
    asm("loc_10003F48: mov 0x40(%esi),%edx;");
    asm("loc_10003F4B: mov 0x44(%esi),%ecx;");
    asm("loc_10003F4E: push $0;");
    asm("loc_10003F50: push %edi;");
    asm("loc_10003F51: push %edx;");
    asm("loc_10003F52: movl $0,4(%esi);");
    asm("loc_10003F59: mov %ecx,(%esi);");
    asm("loc_10003F5B: call _sub_1000A458;");
    asm("loc_10003F60: add $0xC,%esp;");
    asm("loc_10003F63: test %eax,%eax;");
    asm("loc_10003F65: jl loc_10003FD9;");
    asm("loc_10003F67: mov %edi,0x14(%esi);");
    asm("loc_10003F6A: mov %edi,8(%esi);");
    asm("loc_10003F6D: mov %edi,%eax;");
    asm("loc_10003F6F: pop %edi;");
    asm("loc_10003F70: pop %esi;");
    asm("loc_10003F71: pop %ebx;");
    asm("loc_10003F72: ret $0xC;");
    asm("loc_10003F75: mov 0x14(%esi),%eax;");
    asm("loc_10003F78: cmp %eax,%edi;");
    asm("loc_10003F7A: jb loc_10003F80;");
    asm("loc_10003F7C: sub %eax,%edi;");
    asm("loc_10003F7E: jmp loc_10003F8A;");
    asm("loc_10003F80: push %esi;");
    asm("loc_10003F81: call _sub_100036E0;");
    asm("loc_10003F86: test %eax,%eax;");
    asm("loc_10003F88: jl loc_10003FD9;");
    asm("loc_10003F8A: test %edi,%edi;");
    asm("loc_10003F8C: je loc_10003FD0;");
    asm("loc_10003F8E: mov 0x48(%esi),%eax;");
    asm("loc_10003F91: test %eax,%eax;");
    asm("loc_10003F93: jne loc_10003FA5;");
    asm("loc_10003F95: push $0x4000;");
    asm("loc_10003F9A: call _sub_1000A46A;");
    asm("loc_10003F9F: add $4,%esp;");
    asm("loc_10003FA2: mov %eax,0x48(%esi);");
    asm("loc_10003FA5: test %edi,%edi;");
    asm("loc_10003FA7: jle loc_10003FD0;");
    asm("loc_10003FA9: lea (%esp),%esp;");
    asm("loc_10003FB0: mov $0x4000,%eax;");
    asm("loc_10003FB5: cmp %eax,%edi;");
    asm("loc_10003FB7: jge loc_10003FBB;");
    asm("loc_10003FB9: mov %edi,%eax;");
    asm("loc_10003FBB: push %eax;");
    asm("loc_10003FBC: mov 0x48(%esi),%eax;");
    asm("loc_10003FBF: push %eax;");
    asm("loc_10003FC0: push %esi;");
    asm("loc_10003FC1: call _sub_10003BD0;");
    asm("loc_10003FC6: test %eax,%eax;");
    asm("loc_10003FC8: jle loc_10003FD9;");
    asm("loc_10003FCA: sub %eax,%edi;");
    asm("loc_10003FCC: test %edi,%edi;");
    asm("loc_10003FCE: jg loc_10003FB0;");
    asm("loc_10003FD0: mov 0x14(%esi),%eax;");
    asm("loc_10003FD3: pop %edi;");
    asm("loc_10003FD4: pop %esi;");
    asm("loc_10003FD5: pop %ebx;");
    asm("loc_10003FD6: ret $0xC;");
    asm("loc_10003FD9: pop %edi;");
    asm("loc_10003FDA: pop %esi;");
    asm("loc_10003FDB: or $0xFFFFFFFF,%eax;");
    asm("loc_10003FDE: pop %ebx;");
    asm("loc_10003FDF: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10003FF0() // _gztell
{
    __DEBUG_ASM(10003FF0);
    // chunk 0x10003FF0 _sub_10003FF0
    asm("loc_10003FF0: mov 4(%esp),%eax;");
    asm("loc_10003FF4: push $1;");
    asm("loc_10003FF6: push $0;");
    asm("loc_10003FF8: push %eax;");
    asm("loc_10003FF9: call _sub_10003E90;");
    asm("loc_10003FFE: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10004010() // _sub_10004010
{
    __DEBUG_ASM(10004010);
    // chunk 0x10004010 _sub_10004010
    asm("loc_10004010: mov 0xC(%esp),%eax;");
    asm("loc_10004014: test %eax,%eax;");
    asm("loc_10004016: push %esi;");
    asm("loc_10004017: mov 8(%esp),%esi;");
    asm("loc_1000401B: push %edi;");
    asm("loc_1000401C: je loc_10004023;");
    asm("loc_1000401E: mov 0x3C(%esi),%ecx;");
    asm("loc_10004021: mov %ecx,(%eax);");
    asm("loc_10004023: mov (%esi),%eax;");
    asm("loc_10004025: cmp $4,%eax;");
    asm("loc_10004028: mov 0x10(%esp),%edi;");
    asm("loc_1000402C: je loc_10004033;");
    asm("loc_1000402E: cmp $5,%eax;");
    asm("loc_10004031: jne loc_10004041;");
    asm("loc_10004033: mov 0xC(%esi),%edx;");
    asm("loc_10004036: mov 0x28(%edi),%eax;");
    asm("loc_10004039: push %edx;");
    asm("loc_1000403A: push %eax;");
    asm("loc_1000403B: calll *0x24(%edi);");
    asm("loc_1000403E: add $8,%esp;");
    asm("loc_10004041: cmpl $6,(%esi);");
    asm("loc_10004044: jne loc_10004053;");
    asm("loc_10004046: mov 4(%esi),%ecx;");
    asm("loc_10004049: push %edi;");
    asm("loc_1000404A: push %ecx;");
    asm("loc_1000404B: call _sub_10005480;");
    asm("loc_10004050: add $8,%esp;");
    asm("loc_10004053: mov 0x28(%esi),%eax;");
    asm("loc_10004056: mov %eax,0x34(%esi);");
    asm("loc_10004059: mov %eax,0x30(%esi);");
    asm("loc_1000405C: mov 0x38(%esi),%eax;");
    asm("loc_1000405F: test %eax,%eax;");
    asm("loc_10004061: movl $0,(%esi);");
    asm("loc_10004067: movl $0,0x1C(%esi);");
    asm("loc_1000406E: movl $0,0x20(%esi);");
    asm("loc_10004075: je loc_10004085;");
    asm("loc_10004077: push $0;");
    asm("loc_10004079: push $0;");
    asm("loc_1000407B: push $0;");
    asm("loc_1000407D: call *%eax;");
    asm("loc_1000407F: mov %eax,0x3C(%esi);");
    asm("loc_10004082: mov %eax,0x30(%edi);");
    asm("loc_10004085: pop %edi;");
    asm("loc_10004086: pop %esi;");
    asm("loc_10004087: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10004090() // _sub_10004090
{
    __DEBUG_ASM(10004090);
    // chunk 0x10004090 _sub_10004090
    asm("loc_10004090: push %esi;");
    asm("loc_10004091: push %edi;");
    asm("loc_10004092: mov 0xC(%esp),%edi;");
    asm("loc_10004096: mov 0x28(%edi),%eax;");
    asm("loc_10004099: push $0x40;");
    asm("loc_1000409B: push $1;");
    asm("loc_1000409D: push %eax;");
    asm("loc_1000409E: calll *0x20(%edi);");
    asm("loc_100040A1: mov %eax,%esi;");
    asm("loc_100040A3: add $0xC,%esp;");
    asm("loc_100040A6: test %esi,%esi;");
    asm("loc_100040A8: je loc_100040CD;");
    asm("loc_100040AA: mov 0x28(%edi),%ecx;");
    asm("loc_100040AD: push $0x5A0;");
    asm("loc_100040B2: push $8;");
    asm("loc_100040B4: push %ecx;");
    asm("loc_100040B5: calll *0x20(%edi);");
    asm("loc_100040B8: add $0xC,%esp;");
    asm("loc_100040BB: test %eax,%eax;");
    asm("loc_100040BD: mov %eax,0x24(%esi);");
    asm("loc_100040C0: jne loc_100040D2;");
    asm("loc_100040C2: mov 0x28(%edi),%edx;");
    asm("loc_100040C5: push %esi;");
    asm("loc_100040C6: push %edx;");
    asm("loc_100040C7: calll *0x24(%edi);");
    asm("loc_100040CA: add $8,%esp;");
    asm("loc_100040CD: pop %edi;");
    asm("loc_100040CE: xor %eax,%eax;");
    asm("loc_100040D0: pop %esi;");
    asm("loc_100040D1: ret;");
    asm("loc_100040D2: mov 0x28(%edi),%eax;");
    asm("loc_100040D5: push %ebx;");
    asm("loc_100040D6: mov 0x18(%esp),%ebx;");
    asm("loc_100040DA: push %ebx;");
    asm("loc_100040DB: push $1;");
    asm("loc_100040DD: push %eax;");
    asm("loc_100040DE: calll *0x20(%edi);");
    asm("loc_100040E1: add $0xC,%esp;");
    asm("loc_100040E4: test %eax,%eax;");
    asm("loc_100040E6: mov %eax,0x28(%esi);");
    asm("loc_100040E9: jne loc_10004107;");
    asm("loc_100040EB: mov 0x24(%esi),%ecx;");
    asm("loc_100040EE: mov 0x28(%edi),%edx;");
    asm("loc_100040F1: push %ecx;");
    asm("loc_100040F2: push %edx;");
    asm("loc_100040F3: calll *0x24(%edi);");
    asm("loc_100040F6: mov 0x28(%edi),%eax;");
    asm("loc_100040F9: push %esi;");
    asm("loc_100040FA: push %eax;");
    asm("loc_100040FB: calll *0x24(%edi);");
    asm("loc_100040FE: add $0x10,%esp;");
    asm("loc_10004101: pop %ebx;");
    asm("loc_10004102: pop %edi;");
    asm("loc_10004103: xor %eax,%eax;");
    asm("loc_10004105: pop %esi;");
    asm("loc_10004106: ret;");
    asm("loc_10004107: mov 0x14(%esp),%ecx;");
    asm("loc_1000410B: push $0;");
    asm("loc_1000410D: add %ebx,%eax;");
    asm("loc_1000410F: push %edi;");
    asm("loc_10004110: push %esi;");
    asm("loc_10004111: mov %eax,0x2C(%esi);");
    asm("loc_10004114: mov %ecx,0x38(%esi);");
    asm("loc_10004117: movl $0,(%esi);");
    asm("loc_1000411D: call _sub_10004010;");
    asm("loc_10004122: add $0xC,%esp;");
    asm("loc_10004125: pop %ebx;");
    asm("loc_10004126: pop %edi;");
    asm("loc_10004127: mov %esi,%eax;");
    asm("loc_10004129: pop %esi;");
    asm("loc_1000412A: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10004130() // _sub_10004130
{
    asm("jmp dgb_10004130;"); // jumptable skip
    asm(".long _jmp_10004C54;"); // jumptable address
    __DEBUG_ASM(10004130);
    // chunk 0x10004130 _sub_10004130
    asm("loc_10004130: sub $0x34,%esp;");
    asm("loc_10004133: push %ebx;");
    asm("loc_10004134: mov 0x3C(%esp),%ebx;");
    asm("loc_10004138: mov 0x20(%ebx),%ecx;");
    asm("loc_1000413B: push %ebp;");
    asm("loc_1000413C: mov 0x1C(%ebx),%ebp;");
    asm("loc_1000413F: push %esi;");
    asm("loc_10004140: mov 0x48(%esp),%esi;");
    asm("loc_10004144: mov 4(%esi),%eax;");
    asm("loc_10004147: mov %eax,0xC(%esp);");
    asm("loc_1000414B: mov 0x34(%ebx),%eax;");
    asm("loc_1000414E: mov %ecx,0x44(%esp);");
    asm("loc_10004152: mov 0x30(%ebx),%ecx;");
    asm("loc_10004155: cmp %ecx,%eax;");
    asm("loc_10004157: push %edi;");
    asm("loc_10004158: mov (%esi),%edi;");
    asm("loc_1000415A: mov %edi,0x1C(%esp);");
    asm("loc_1000415E: mov %eax,0x14(%esp);");
    asm("loc_10004162: jae loc_10004169;");
    asm("loc_10004164: sub %eax,%ecx;");
    asm("loc_10004166: dec %ecx;");
    asm("loc_10004167: jmp loc_1000416E;");
    asm("loc_10004169: mov 0x2C(%ebx),%ecx;");
    asm("loc_1000416C: sub %eax,%ecx;");
    asm("loc_1000416E: mov (%ebx),%edx;");
    asm("loc_10004170: cmp $9,%edx;");
    asm("loc_10004173: mov %ecx,0x18(%esp);");
    asm("loc_10004177: jbe loc_100041B9;");
    asm("loc_10004179: push $0xFFFFFFFE;");
    asm("loc_1000417B: mov 0x4C(%esp),%ecx;");
    asm("loc_1000417F: mov 0x14(%esp),%edx;");
    asm("loc_10004183: mov %ecx,0x20(%ebx);");
    asm("loc_10004186: mov %ebp,0x1C(%ebx);");
    asm("loc_10004189: mov %edx,4(%esi);");
    asm("loc_1000418C: mov (%esi),%edx;");
    asm("loc_1000418E: mov %edi,%eax;");
    asm("loc_10004190: sub %edx,%eax;");
    asm("loc_10004192: mov 8(%esi),%ecx;");
    asm("loc_10004195: add %eax,%ecx;");
    asm("loc_10004197: mov %ecx,8(%esi);");
    asm("loc_1000419A: mov 0x18(%esp),%ecx;");
    asm("loc_1000419E: push %esi;");
    asm("loc_1000419F: mov %edi,(%esi);");
    asm("loc_100041A1: push %ebx;");
    asm("loc_100041A2: mov %ecx,0x34(%ebx);");
    asm("loc_100041A5: call _sub_100066F0;");
    asm("loc_100041AA: add $0xC,%esp;");
    asm("loc_100041AD: pop %edi;");
    asm("loc_100041AE: pop %esi;");
    asm("loc_100041AF: pop %ebp;");
    asm("loc_100041B0: pop %ebx;");
    asm("loc_100041B1: add $0x34,%esp;");
    asm("loc_100041B4: ret;");
    asm("loc_100041B5: mov 0x18(%esp),%ecx;");
    asm("loc_100041B9: mov 0x48(%esp),%eax;");
    asm("loc_100041BD: jmpl *_jmp_10004C54(,%edx,4);");
    asm("loc_100041C4: cmp $3,%ebp;");
    asm("loc_100041C7: jae loc_10004205;");
    asm("loc_100041C9: lea (%esp),%esp;");
    asm("loc_100041D0: mov 0x10(%esp),%ecx;");
    asm("loc_100041D4: test %ecx,%ecx;");
    asm("loc_100041D6: je loc_100048E6;");
    asm("loc_100041DC: mov %ecx,%edx;");
    asm("loc_100041DE: dec %edx;");
    asm("loc_100041DF: mov %edx,0x10(%esp);");
    asm("loc_100041E3: movzbl (%edi),%edx;");
    asm("loc_100041E6: mov %ebp,%ecx;");
    asm("loc_100041E8: shl %cl,%edx;");
    asm("loc_100041EA: add $8,%ebp;");
    asm("loc_100041ED: movl $0,0x50(%esp);");
    asm("loc_100041F5: or %edx,%eax;");
    asm("loc_100041F7: inc %edi;");
    asm("loc_100041F8: cmp $3,%ebp;");
    asm("loc_100041FB: mov %eax,0x48(%esp);");
    asm("loc_100041FF: mov %edi,0x1C(%esp);");
    asm("loc_10004203: jb loc_100041D0;");
    asm("loc_10004205: mov %eax,%ecx;");
    asm("loc_10004207: and $7,%ecx;");
    asm("loc_1000420A: mov %ecx,%edx;");
    asm("loc_1000420C: and $1,%edx;");
    asm("loc_1000420F: shr $1,%ecx;");
    asm("loc_10004211: cmp $3,%ecx;");
    asm("loc_10004214: mov %edx,0x18(%ebx);");
    asm("loc_10004217: ja loc_100048CE;");
    asm("loc_1000421D: jmpl *_jmp_10004C7C(,%ecx,4);");
    asm("loc_10004224: sub $3,%ebp;");
    asm("loc_10004227: mov %ebp,%ecx;");
    asm("loc_10004229: and $7,%ecx;");
    asm("loc_1000422C: shr $3,%eax;");
    asm("loc_1000422F: shr %cl,%eax;");
    asm("loc_10004231: sub %ecx,%ebp;");
    asm("loc_10004233: movl $1,(%ebx);");
    asm("loc_10004239: mov %eax,0x48(%esp);");
    asm("loc_1000423D: jmp loc_100048CE;");
    asm("loc_10004242: push %esi;");
    asm("loc_10004243: lea 0x28(%esp),%eax;");
    asm("loc_10004247: push %eax;");
    asm("loc_10004248: lea 0x30(%esp),%ecx;");
    asm("loc_1000424C: push %ecx;");
    asm("loc_1000424D: lea 0x38(%esp),%edx;");
    asm("loc_10004251: push %edx;");
    asm("loc_10004252: lea 0x40(%esp),%eax;");
    asm("loc_10004256: push %eax;");
    asm("loc_10004257: call _sub_100066C0;");
    asm("loc_1000425C: mov 0x38(%esp),%ecx;");
    asm("loc_10004260: mov 0x3C(%esp),%edx;");
    asm("loc_10004264: mov 0x40(%esp),%eax;");
    asm("loc_10004268: push %esi;");
    asm("loc_10004269: push %ecx;");
    asm("loc_1000426A: mov 0x4C(%esp),%ecx;");
    asm("loc_1000426E: push %edx;");
    asm("loc_1000426F: push %eax;");
    asm("loc_10004270: push %ecx;");
    asm("loc_10004271: call _sub_10004D20;");
    asm("loc_10004276: add $0x28,%esp;");
    asm("loc_10004279: test %eax,%eax;");
    asm("loc_1000427B: mov %eax,4(%ebx);");
    asm("loc_1000427E: je loc_10004B4C;");
    asm("loc_10004284: shrl $3,0x48(%esp);");
    asm("loc_10004289: sub $3,%ebp;");
    asm("loc_1000428C: movl $6,(%ebx);");
    asm("loc_10004292: jmp loc_100048CE;");
    asm("loc_10004297: shr $3,%eax;");
    asm("loc_1000429A: mov %eax,0x48(%esp);");
    asm("loc_1000429E: sub $3,%ebp;");
    asm("loc_100042A1: movl $3,(%ebx);");
    asm("loc_100042A7: jmp loc_100048CE;");
    asm("loc_100042AC: cmp $0x20,%ebp;");
    asm("loc_100042AF: jae loc_100042E6;");
    asm("loc_100042B1: mov 0x10(%esp),%ecx;");
    asm("loc_100042B5: test %ecx,%ecx;");
    asm("loc_100042B7: je loc_10004A5F;");
    asm("loc_100042BD: mov %ecx,%edx;");
    asm("loc_100042BF: dec %edx;");
    asm("loc_100042C0: mov %edx,0x10(%esp);");
    asm("loc_100042C4: movzbl (%edi),%edx;");
    asm("loc_100042C7: mov %ebp,%ecx;");
    asm("loc_100042C9: shl %cl,%edx;");
    asm("loc_100042CB: add $8,%ebp;");
    asm("loc_100042CE: movl $0,0x50(%esp);");
    asm("loc_100042D6: or %edx,%eax;");
    asm("loc_100042D8: inc %edi;");
    asm("loc_100042D9: cmp $0x20,%ebp;");
    asm("loc_100042DC: mov %eax,0x48(%esp);");
    asm("loc_100042E0: mov %edi,0x1C(%esp);");
    asm("loc_100042E4: jb loc_100042B1;");
    asm("loc_100042E6: mov %eax,%ecx;");
    asm("loc_100042E8: not %eax;");
    asm("loc_100042EA: and $0xFFFF,%ecx;");
    asm("loc_100042F0: shr $0x10,%eax;");
    asm("loc_100042F3: cmp %ecx,%eax;");
    asm("loc_100042F5: jne loc_10004941;");
    asm("loc_100042FB: xor %ebp,%ebp;");
    asm("loc_100042FD: mov %ecx,%eax;");
    asm("loc_100042FF: cmp %ebp,%eax;");
    asm("loc_10004301: mov %ecx,4(%ebx);");
    asm("loc_10004304: mov %ebp,0x48(%esp);");
    asm("loc_10004308: je loc_1000443C;");
    asm("loc_1000430E: mov $2,%eax;");
    asm("loc_10004313: mov %eax,(%ebx);");
    asm("loc_10004315: jmp loc_100048CE;");
    asm("loc_1000431A: mov 0x10(%esp),%eax;");
    asm("loc_1000431E: test %eax,%eax;");
    asm("loc_10004320: je loc_10004A3E;");
    asm("loc_10004326: test %ecx,%ecx;");
    asm("loc_10004328: jne loc_100043D3;");
    asm("loc_1000432E: mov 0x2C(%ebx),%edx;");
    asm("loc_10004331: cmp %edx,0x14(%esp);");
    asm("loc_10004335: jne loc_1000435A;");
    asm("loc_10004337: mov 0x30(%ebx),%eax;");
    asm("loc_1000433A: mov 0x28(%ebx),%ecx;");
    asm("loc_1000433D: cmp %eax,%ecx;");
    asm("loc_1000433F: je loc_1000435A;");
    asm("loc_10004341: mov %ecx,0x14(%esp);");
    asm("loc_10004345: jae loc_1000434E;");
    asm("loc_10004347: sub %ecx,%eax;");
    asm("loc_10004349: dec %eax;");
    asm("loc_1000434A: mov %eax,%ecx;");
    asm("loc_1000434C: jmp loc_10004352;");
    asm("loc_1000434E: sub %ecx,%edx;");
    asm("loc_10004350: mov %edx,%ecx;");
    asm("loc_10004352: test %ecx,%ecx;");
    asm("loc_10004354: mov %ecx,0x18(%esp);");
    asm("loc_10004358: jne loc_100043D3;");
    asm("loc_1000435A: mov 0x50(%esp),%ecx;");
    asm("loc_1000435E: mov 0x14(%esp),%eax;");
    asm("loc_10004362: push %ecx;");
    asm("loc_10004363: push %esi;");
    asm("loc_10004364: push %ebx;");
    asm("loc_10004365: mov %eax,0x34(%ebx);");
    asm("loc_10004368: call _sub_100066F0;");
    asm("loc_1000436D: mov 0x30(%ebx),%ecx;");
    asm("loc_10004370: mov %eax,0x5C(%esp);");
    asm("loc_10004374: mov 0x34(%ebx),%eax;");
    asm("loc_10004377: add $0xC,%esp;");
    asm("loc_1000437A: cmp %ecx,%eax;");
    asm("loc_1000437C: mov %eax,0x14(%esp);");
    asm("loc_10004380: mov %ecx,0x20(%esp);");
    asm("loc_10004384: jae loc_1000438B;");
    asm("loc_10004386: sub %eax,%ecx;");
    asm("loc_10004388: dec %ecx;");
    asm("loc_10004389: jmp loc_10004390;");
    asm("loc_1000438B: mov 0x2C(%ebx),%ecx;");
    asm("loc_1000438E: sub %eax,%ecx;");
    asm("loc_10004390: mov 0x2C(%ebx),%edx;");
    asm("loc_10004393: cmp %edx,%eax;");
    asm("loc_10004395: mov %ecx,0x18(%esp);");
    asm("loc_10004399: mov %edx,0x34(%esp);");
    asm("loc_1000439D: jne loc_100043CB;");
    asm("loc_1000439F: mov 0x28(%ebx),%eax;");
    asm("loc_100043A2: mov 0x20(%esp),%edx;");
    asm("loc_100043A6: cmp %edx,%eax;");
    asm("loc_100043A8: je loc_100043C7;");
    asm("loc_100043AA: mov %eax,0x14(%esp);");
    asm("loc_100043AE: jae loc_100043BB;");
    asm("loc_100043B0: sub %eax,%edx;");
    asm("loc_100043B2: dec %edx;");
    asm("loc_100043B3: mov %edx,%ecx;");
    asm("loc_100043B5: mov %ecx,0x18(%esp);");
    asm("loc_100043B9: jmp loc_100043CB;");
    asm("loc_100043BB: mov 0x34(%esp),%ecx;");
    asm("loc_100043BF: sub %eax,%ecx;");
    asm("loc_100043C1: mov %ecx,0x18(%esp);");
    asm("loc_100043C5: jmp loc_100043CB;");
    asm("loc_100043C7: mov 0x14(%esp),%eax;");
    asm("loc_100043CB: test %ecx,%ecx;");
    asm("loc_100043CD: je loc_10004955;");
    asm("loc_100043D3: mov 4(%ebx),%eax;");
    asm("loc_100043D6: mov 0x10(%esp),%edx;");
    asm("loc_100043DA: cmp %edx,%eax;");
    asm("loc_100043DC: movl $0,0x50(%esp);");
    asm("loc_100043E4: jbe loc_100043E8;");
    asm("loc_100043E6: mov %edx,%eax;");
    asm("loc_100043E8: cmp %ecx,%eax;");
    asm("loc_100043EA: jbe loc_100043EE;");
    asm("loc_100043EC: mov %ecx,%eax;");
    asm("loc_100043EE: mov 0x1C(%esp),%esi;");
    asm("loc_100043F2: mov 0x14(%esp),%edi;");
    asm("loc_100043F6: mov %eax,%ecx;");
    asm("loc_100043F8: mov %ecx,%edx;");
    asm("loc_100043FA: shr $2,%ecx;");
    asm("loc_100043FD: rep movsl (%esi),(%edi);");
    asm("loc_100043FF: mov %edx,%ecx;");
    asm("loc_10004401: mov 0x18(%esp),%edx;");
    asm("loc_10004405: and $3,%ecx;");
    asm("loc_10004408: rep movsb (%esi),(%edi);");
    asm("loc_1000440A: mov 0x1C(%esp),%ecx;");
    asm("loc_1000440E: mov 0x10(%esp),%edi;");
    asm("loc_10004412: mov 0x14(%esp),%esi;");
    asm("loc_10004416: add %eax,%ecx;");
    asm("loc_10004418: mov %ecx,0x1C(%esp);");
    asm("loc_1000441C: mov 4(%ebx),%ecx;");
    asm("loc_1000441F: sub %eax,%edi;");
    asm("loc_10004421: add %eax,%esi;");
    asm("loc_10004423: sub %eax,%edx;");
    asm("loc_10004425: sub %eax,%ecx;");
    asm("loc_10004427: mov %edi,0x10(%esp);");
    asm("loc_1000442B: mov %esi,0x14(%esp);");
    asm("loc_1000442F: mov %edx,0x18(%esp);");
    asm("loc_10004433: mov %ecx,4(%ebx);");
    asm("loc_10004436: jne loc_100048CE;");
    asm("loc_1000443C: mov 0x18(%ebx),%eax;");
    asm("loc_1000443F: neg %eax;");
    asm("loc_10004441: sbb %eax,%eax;");
    asm("loc_10004443: and $7,%eax;");
    asm("loc_10004446: mov %eax,(%ebx);");
    asm("loc_10004448: jmp loc_100048CE;");
    asm("loc_1000444D: cmp $0xE,%ebp;");
    asm("loc_10004450: jae loc_10004483;");
    asm("loc_10004452: mov 0x10(%esp),%ecx;");
    asm("loc_10004456: test %ecx,%ecx;");
    asm("loc_10004458: je loc_10004A5F;");
    asm("loc_1000445E: mov %ecx,%edx;");
    asm("loc_10004460: dec %edx;");
    asm("loc_10004461: mov %edx,0x10(%esp);");
    asm("loc_10004465: movzbl (%edi),%edx;");
    asm("loc_10004468: mov %ebp,%ecx;");
    asm("loc_1000446A: shl %cl,%edx;");
    asm("loc_1000446C: add $8,%ebp;");
    asm("loc_1000446F: movl $0,0x50(%esp);");
    asm("loc_10004477: or %edx,%eax;");
    asm("loc_10004479: inc %edi;");
    asm("loc_1000447A: cmp $0xE,%ebp;");
    asm("loc_1000447D: mov %eax,0x48(%esp);");
    asm("loc_10004481: jb loc_10004452;");
    asm("loc_10004483: and $0x3FFF,%eax;");
    asm("loc_10004488: mov %eax,%ecx;");
    asm("loc_1000448A: and $0x1F,%ecx;");
    asm("loc_1000448D: cmp $0x1D,%ecx;");
    asm("loc_10004490: mov %eax,4(%ebx);");
    asm("loc_10004493: ja loc_10004997;");
    asm("loc_10004499: shr $5,%eax;");
    asm("loc_1000449C: and $0x1F,%eax;");
    asm("loc_1000449F: cmp $0x1D,%eax;");
    asm("loc_100044A2: ja loc_10004997;");
    asm("loc_100044A8: lea 0x102(%eax,%ecx),%eax;");
    asm("loc_100044AF: mov 0x28(%esi),%ecx;");
    asm("loc_100044B2: push $4;");
    asm("loc_100044B4: push %eax;");
    asm("loc_100044B5: push %ecx;");
    asm("loc_100044B6: calll *0x20(%esi);");
    asm("loc_100044B9: add $0xC,%esp;");
    asm("loc_100044BC: test %eax,%eax;");
    asm("loc_100044BE: mov %eax,0xC(%ebx);");
    asm("loc_100044C1: je loc_10004990;");
    asm("loc_100044C7: mov 0x48(%esp),%ecx;");
    asm("loc_100044CB: shr $0xE,%ecx;");
    asm("loc_100044CE: mov %ecx,0x48(%esp);");
    asm("loc_100044D2: sub $0xE,%ebp;");
    asm("loc_100044D5: movl $0,8(%ebx);");
    asm("loc_100044DC: movl $4,(%ebx);");
    asm("loc_100044E2: mov %ecx,%eax;");
    asm("loc_100044E4: mov 4(%ebx),%edx;");
    asm("loc_100044E7: mov 8(%ebx),%ecx;");
    asm("loc_100044EA: shr $0xA,%edx;");
    asm("loc_100044ED: add $4,%edx;");
    asm("loc_100044F0: cmp %edx,%ecx;");
    asm("loc_100044F2: jae loc_10004569;");
    asm("loc_100044F4: cmp $3,%ebp;");
    asm("loc_100044F7: jae loc_10004531;");
    asm("loc_100044F9: lea (%esp),%esp;");
    asm("loc_10004500: mov 0x10(%esp),%ecx;");
    asm("loc_10004504: test %ecx,%ecx;");
    asm("loc_10004506: je loc_10004A5F;");
    asm("loc_1000450C: mov %ecx,%edx;");
    asm("loc_1000450E: dec %edx;");
    asm("loc_1000450F: mov %edx,0x10(%esp);");
    asm("loc_10004513: movzbl (%edi),%edx;");
    asm("loc_10004516: mov %ebp,%ecx;");
    asm("loc_10004518: shl %cl,%edx;");
    asm("loc_1000451A: add $8,%ebp;");
    asm("loc_1000451D: movl $0,0x50(%esp);");
    asm("loc_10004525: or %edx,%eax;");
    asm("loc_10004527: inc %edi;");
    asm("loc_10004528: cmp $3,%ebp;");
    asm("loc_1000452B: mov %eax,0x48(%esp);");
    asm("loc_1000452F: jb loc_10004500;");
    asm("loc_10004531: mov 8(%ebx),%ecx;");
    asm("loc_10004534: mov _data_1000B158(,%ecx,4),%edx;");
    asm("loc_1000453B: mov 0xC(%ebx),%ecx;");
    asm("loc_1000453E: and $7,%eax;");
    asm("loc_10004541: mov %eax,(%ecx,%edx,4);");
    asm("loc_10004544: mov 8(%ebx),%edx;");
    asm("loc_10004547: mov 0x48(%esp),%eax;");
    asm("loc_1000454B: inc %edx;");
    asm("loc_1000454C: mov %edx,8(%ebx);");
    asm("loc_1000454F: mov 4(%ebx),%edx;");
    asm("loc_10004552: mov 8(%ebx),%ecx;");
    asm("loc_10004555: shr $0xA,%edx;");
    asm("loc_10004558: shr $3,%eax;");
    asm("loc_1000455B: add $4,%edx;");
    asm("loc_1000455E: sub $3,%ebp;");
    asm("loc_10004561: cmp %edx,%ecx;");
    asm("loc_10004563: mov %eax,0x48(%esp);");
    asm("loc_10004567: jb loc_100044F4;");
    asm("loc_10004569: mov 8(%ebx),%ecx;");
    asm("loc_1000456C: mov $0x13,%eax;");
    asm("loc_10004571: cmp %eax,%ecx;");
    asm("loc_10004573: jae loc_100045A1;");
    asm("loc_10004575: jmp loc_10004580;");
    asm("loc_10004577: lea (%esp),%esp;");
    asm("loc_1000457E: mov %edi,%edi;");
    asm("loc_10004580: mov 8(%ebx),%ecx;");
    asm("loc_10004583: mov _data_1000B158(,%ecx,4),%edx;");
    asm("loc_1000458A: mov 0xC(%ebx),%ecx;");
    asm("loc_1000458D: movl $0,(%ecx,%edx,4);");
    asm("loc_10004594: mov 8(%ebx),%edx;");
    asm("loc_10004597: inc %edx;");
    asm("loc_10004598: mov %edx,%ecx;");
    asm("loc_1000459A: cmp %eax,%ecx;");
    asm("loc_1000459C: mov %edx,8(%ebx);");
    asm("loc_1000459F: jb loc_10004580;");
    asm("loc_100045A1: mov 0x24(%ebx),%edx;");
    asm("loc_100045A4: push %esi;");
    asm("loc_100045A5: push %edx;");
    asm("loc_100045A6: mov 0xC(%ebx),%edx;");
    asm("loc_100045A9: lea 0x14(%ebx),%ecx;");
    asm("loc_100045AC: lea 0x10(%ebx),%eax;");
    asm("loc_100045AF: push %ecx;");
    asm("loc_100045B0: push %eax;");
    asm("loc_100045B1: push %edx;");
    asm("loc_100045B2: movl $7,(%eax);");
    asm("loc_100045B8: call _sub_10006480;");
    asm("loc_100045BD: add $0x14,%esp;");
    asm("loc_100045C0: test %eax,%eax;");
    asm("loc_100045C2: mov %eax,0x18(%esp);");
    asm("loc_100045C6: jne loc_100049E0;");
    asm("loc_100045CC: mov %eax,8(%ebx);");
    asm("loc_100045CF: mov 0x48(%esp),%eax;");
    asm("loc_100045D3: movl $5,(%ebx);");
    asm("loc_100045D9: mov 4(%ebx),%ecx;");
    asm("loc_100045DC: mov %ecx,%edx;");
    asm("loc_100045DE: shr $5,%edx;");
    asm("loc_100045E1: and $0x1F,%edx;");
    asm("loc_100045E4: and $0x1F,%ecx;");
    asm("loc_100045E7: lea 0x102(%edx,%ecx),%ecx;");
    asm("loc_100045EE: cmp %ecx,8(%ebx);");
    asm("loc_100045F1: jae loc_10004797;");
    asm("loc_100045F7: jmp loc_10004600;");
    asm("loc_100045F9: mov 0x48(%esp),%eax;");
    asm("loc_100045FD: lea (%ecx),%ecx;");
    asm("loc_10004600: mov 0x10(%ebx),%ecx;");
    asm("loc_10004603: cmp %ecx,%ebp;");
    asm("loc_10004605: jae loc_10004643;");
    asm("loc_10004607: jmp loc_10004610;");
    asm("loc_10004609: lea (%esp),%esp;");
    asm("loc_10004610: mov 0x10(%esp),%ecx;");
    asm("loc_10004614: test %ecx,%ecx;");
    asm("loc_10004616: je loc_10004A3E;");
    asm("loc_1000461C: mov %ecx,%edx;");
    asm("loc_1000461E: dec %edx;");
    asm("loc_1000461F: mov %edx,0x10(%esp);");
    asm("loc_10004623: movzbl (%edi),%edx;");
    asm("loc_10004626: mov %ebp,%ecx;");
    asm("loc_10004628: shl %cl,%edx;");
    asm("loc_1000462A: mov 0x10(%ebx),%ecx;");
    asm("loc_1000462D: add $8,%ebp;");
    asm("loc_10004630: movl $0,0x50(%esp);");
    asm("loc_10004638: or %edx,%eax;");
    asm("loc_1000463A: inc %edi;");
    asm("loc_1000463B: cmp %ecx,%ebp;");
    asm("loc_1000463D: mov %eax,0x48(%esp);");
    asm("loc_10004641: jb loc_10004610;");
    asm("loc_10004643: mov _data_1000E120(,%ecx,4),%ecx;");
    asm("loc_1000464A: mov 0x14(%ebx),%edx;");
    asm("loc_1000464D: and %eax,%ecx;");
    asm("loc_1000464F: lea (%edx,%ecx,8),%edx;");
    asm("loc_10004652: movzbl 1(%edx),%ecx;");
    asm("loc_10004656: mov 4(%edx),%edx;");
    asm("loc_10004659: cmp $0x10,%edx;");
    asm("loc_1000465C: mov %ecx,0x18(%esp);");
    asm("loc_10004660: mov %edx,0x38(%esp);");
    asm("loc_10004664: jae loc_1000467F;");
    asm("loc_10004666: shr %cl,%eax;");
    asm("loc_10004668: sub %ecx,%ebp;");
    asm("loc_1000466A: mov 0xC(%ebx),%ecx;");
    asm("loc_1000466D: mov %eax,0x48(%esp);");
    asm("loc_10004671: mov 8(%ebx),%eax;");
    asm("loc_10004674: mov %edx,(%ecx,%eax,4);");
    asm("loc_10004677: incl 8(%ebx);");
    asm("loc_1000467A: jmp loc_10004779;");
    asm("loc_1000467F: cmp $0x12,%edx;");
    asm("loc_10004682: jne loc_1000468E;");
    asm("loc_10004684: movl $7,0x20(%esp);");
    asm("loc_1000468C: jmp loc_10004695;");
    asm("loc_1000468E: lea -0xE(%edx),%ecx;");
    asm("loc_10004691: mov %ecx,0x20(%esp);");
    asm("loc_10004695: xor %ecx,%ecx;");
    asm("loc_10004697: cmp $0x12,%edx;");
    asm("loc_1000469A: mov 0x20(%esp),%edx;");
    asm("loc_1000469E: sete %cl;");
    asm("loc_100046A1: lea 3(,%ecx,8),%ecx;");
    asm("loc_100046A8: mov %ecx,0x1C(%esp);");
    asm("loc_100046AC: mov 0x18(%esp),%ecx;");
    asm("loc_100046B0: add %edx,%ecx;");
    asm("loc_100046B2: cmp %ecx,%ebp;");
    asm("loc_100046B4: mov %ecx,0x34(%esp);");
    asm("loc_100046B8: jae loc_100046F4;");
    asm("loc_100046BA: lea (%ebx),%ebx;");
    asm("loc_100046C0: mov 0x10(%esp),%ecx;");
    asm("loc_100046C4: test %ecx,%ecx;");
    asm("loc_100046C6: je loc_10004A5F;");
    asm("loc_100046CC: mov %ecx,%edx;");
    asm("loc_100046CE: dec %edx;");
    asm("loc_100046CF: mov %edx,0x10(%esp);");
    asm("loc_100046D3: movzbl (%edi),%edx;");
    asm("loc_100046D6: mov %ebp,%ecx;");
    asm("loc_100046D8: shl %cl,%edx;");
    asm("loc_100046DA: mov 0x34(%esp),%ecx;");
    asm("loc_100046DE: add $8,%ebp;");
    asm("loc_100046E1: movl $0,0x50(%esp);");
    asm("loc_100046E9: or %edx,%eax;");
    asm("loc_100046EB: inc %edi;");
    asm("loc_100046EC: cmp %ecx,%ebp;");
    asm("loc_100046EE: mov %eax,0x48(%esp);");
    asm("loc_100046F2: jb loc_100046C0;");
    asm("loc_100046F4: mov 0x18(%esp),%ecx;");
    asm("loc_100046F8: shr %cl,%eax;");
    asm("loc_100046FA: mov 0x20(%esp),%ecx;");
    asm("loc_100046FE: mov _data_1000E120(,%ecx,4),%edx;");
    asm("loc_10004705: mov 0x1C(%esp),%ecx;");
    asm("loc_10004709: and %eax,%edx;");
    asm("loc_1000470B: add %edx,%ecx;");
    asm("loc_1000470D: mov %ecx,0x1C(%esp);");
    asm("loc_10004711: mov 0x20(%esp),%ecx;");
    asm("loc_10004715: shr %cl,%eax;");
    asm("loc_10004717: mov %eax,0x48(%esp);");
    asm("loc_1000471B: mov 0x18(%esp),%eax;");
    asm("loc_1000471F: add %eax,%ecx;");
    asm("loc_10004721: mov 4(%ebx),%eax;");
    asm("loc_10004724: mov %eax,%edx;");
    asm("loc_10004726: shr $5,%edx;");
    asm("loc_10004729: and $0x1F,%edx;");
    asm("loc_1000472C: and $0x1F,%eax;");
    asm("loc_1000472F: lea 0x102(%edx,%eax),%eax;");
    asm("loc_10004736: mov 0x1C(%esp),%edx;");
    asm("loc_1000473A: sub %ecx,%ebp;");
    asm("loc_1000473C: mov 8(%ebx),%ecx;");
    asm("loc_1000473F: add %ecx,%edx;");
    asm("loc_10004741: cmp %eax,%edx;");
    asm("loc_10004743: ja loc_10004A9E;");
    asm("loc_10004749: cmpl $0x10,0x38(%esp);");
    asm("loc_1000474E: jne loc_10004762;");
    asm("loc_10004750: cmp $1,%ecx;");
    asm("loc_10004753: jb loc_10004A9E;");
    asm("loc_10004759: mov 0xC(%ebx),%eax;");
    asm("loc_1000475C: mov -4(%eax,%ecx,4),%eax;");
    asm("loc_10004760: jmp loc_10004764;");
    asm("loc_10004762: xor %eax,%eax;");
    asm("loc_10004764: mov 0xC(%ebx),%edx;");
    asm("loc_10004767: mov %eax,(%edx,%ecx,4);");
    asm("loc_1000476A: mov 0x1C(%esp),%edx;");
    asm("loc_1000476E: inc %ecx;");
    asm("loc_1000476F: dec %edx;");
    asm("loc_10004770: mov %edx,0x1C(%esp);");
    asm("loc_10004774: jne loc_10004764;");
    asm("loc_10004776: mov %ecx,8(%ebx);");
    asm("loc_10004779: mov 4(%ebx),%eax;");
    asm("loc_1000477C: mov %eax,%ecx;");
    asm("loc_1000477E: shr $5,%ecx;");
    asm("loc_10004781: and $0x1F,%eax;");
    asm("loc_10004784: and $0x1F,%ecx;");
    asm("loc_10004787: lea 0x102(%ecx,%eax),%edx;");
    asm("loc_1000478E: cmp %edx,8(%ebx);");
    asm("loc_10004791: jb loc_100045F9;");
    asm("loc_10004797: mov 0x24(%ebx),%ecx;");
    asm("loc_1000479A: mov 4(%ebx),%eax;");
    asm("loc_1000479D: push %esi;");
    asm("loc_1000479E: push %ecx;");
    asm("loc_1000479F: lea 0x44(%esp),%edx;");
    asm("loc_100047A3: push %edx;");
    asm("loc_100047A4: lea 0x4C(%esp),%ecx;");
    asm("loc_100047A8: push %ecx;");
    asm("loc_100047A9: lea 0x30(%esp),%edx;");
    asm("loc_100047AD: push %edx;");
    asm("loc_100047AE: mov 0xC(%ebx),%edx;");
    asm("loc_100047B1: lea 0x30(%esp),%ecx;");
    asm("loc_100047B5: push %ecx;");
    asm("loc_100047B6: mov %eax,%ecx;");
    asm("loc_100047B8: shr $5,%ecx;");
    asm("loc_100047BB: and $0x1F,%ecx;");
    asm("loc_100047BE: push %edx;");
    asm("loc_100047BF: inc %ecx;");
    asm("loc_100047C0: and $0x1F,%eax;");
    asm("loc_100047C3: push %ecx;");
    asm("loc_100047C4: add $0x101,%eax;");
    asm("loc_100047C9: push %eax;");
    asm("loc_100047CA: movl $0,0x14(%ebx);");
    asm("loc_100047D1: movl $9,0x40(%esp);");
    asm("loc_100047D9: movl $6,0x44(%esp);");
    asm("loc_100047E1: call _sub_10006530;");
    asm("loc_100047E6: add $0x24,%esp;");
    asm("loc_100047E9: test %eax,%eax;");
    asm("loc_100047EB: mov %eax,0x18(%esp);");
    asm("loc_100047EF: jne loc_10004AF2;");
    asm("loc_100047F5: mov 0x3C(%esp),%edx;");
    asm("loc_100047F9: mov 0x40(%esp),%eax;");
    asm("loc_100047FD: mov 0x20(%esp),%ecx;");
    asm("loc_10004801: push %esi;");
    asm("loc_10004802: push %edx;");
    asm("loc_10004803: mov 0x24(%esp),%edx;");
    asm("loc_10004807: push %eax;");
    asm("loc_10004808: push %ecx;");
    asm("loc_10004809: push %edx;");
    asm("loc_1000480A: call _sub_10004D20;");
    asm("loc_1000480F: add $0x14,%esp;");
    asm("loc_10004812: test %eax,%eax;");
    asm("loc_10004814: je loc_10004B4C;");
    asm("loc_1000481A: mov %eax,4(%ebx);");
    asm("loc_1000481D: mov 0xC(%ebx),%eax;");
    asm("loc_10004820: mov 0x28(%esi),%ecx;");
    asm("loc_10004823: push %eax;");
    asm("loc_10004824: push %ecx;");
    asm("loc_10004825: calll *0x24(%esi);");
    asm("loc_10004828: add $8,%esp;");
    asm("loc_1000482B: movl $6,(%ebx);");
    asm("loc_10004831: mov 0x48(%esp),%edx;");
    asm("loc_10004835: mov 0x10(%esp),%eax;");
    asm("loc_10004839: mov %edx,0x20(%ebx);");
    asm("loc_1000483C: mov %ebp,0x1C(%ebx);");
    asm("loc_1000483F: mov (%esi),%ebp;");
    asm("loc_10004841: mov 8(%esi),%edx;");
    asm("loc_10004844: mov %eax,4(%esi);");
    asm("loc_10004847: mov 0x50(%esp),%eax;");
    asm("loc_1000484B: mov %edi,%ecx;");
    asm("loc_1000484D: sub %ebp,%ecx;");
    asm("loc_1000484F: add %ecx,%edx;");
    asm("loc_10004851: push %eax;");
    asm("loc_10004852: mov %edx,8(%esi);");
    asm("loc_10004855: mov 0x18(%esp),%edx;");
    asm("loc_10004859: push %esi;");
    asm("loc_1000485A: mov %edi,(%esi);");
    asm("loc_1000485C: push %ebx;");
    asm("loc_1000485D: mov %edx,0x34(%ebx);");
    asm("loc_10004860: call _sub_10004D60;");
    asm("loc_10004865: add $0xC,%esp;");
    asm("loc_10004868: cmp $1,%eax;");
    asm("loc_1000486B: jne loc_10004A8B;");
    asm("loc_10004871: mov 4(%ebx),%ecx;");
    asm("loc_10004874: push %esi;");
    asm("loc_10004875: push %ecx;");
    asm("loc_10004876: movl $0,0x58(%esp);");
    asm("loc_1000487E: call _sub_10005480;");
    asm("loc_10004883: mov 0x20(%ebx),%eax;");
    asm("loc_10004886: mov 0x34(%ebx),%ecx;");
    asm("loc_10004889: mov (%esi),%edi;");
    asm("loc_1000488B: mov 4(%esi),%edx;");
    asm("loc_1000488E: mov 0x1C(%ebx),%ebp;");
    asm("loc_10004891: mov %eax,0x50(%esp);");
    asm("loc_10004895: mov 0x30(%ebx),%eax;");
    asm("loc_10004898: add $8,%esp;");
    asm("loc_1000489B: cmp %eax,%ecx;");
    asm("loc_1000489D: mov %edi,0x1C(%esp);");
    asm("loc_100048A1: mov %edx,0x10(%esp);");
    asm("loc_100048A5: mov %ecx,0x14(%esp);");
    asm("loc_100048A9: jae loc_100048B2;");
    asm("loc_100048AB: mov %ecx,%edx;");
    asm("loc_100048AD: sub %edx,%eax;");
    asm("loc_100048AF: dec %eax;");
    asm("loc_100048B0: jmp loc_100048B9;");
    asm("loc_100048B2: mov 0x2C(%ebx),%eax;");
    asm("loc_100048B5: sub 0x14(%esp),%eax;");
    asm("loc_100048B9: mov %eax,0x18(%esp);");
    asm("loc_100048BD: mov 0x18(%ebx),%eax;");
    asm("loc_100048C0: test %eax,%eax;");
    asm("loc_100048C2: jne loc_10004B88;");
    asm("loc_100048C8: movl $0,(%ebx);");
    asm("loc_100048CE: mov (%ebx),%edx;");
    asm("loc_100048D0: cmp $9,%edx;");
    asm("loc_100048D3: mov 0x1C(%esp),%edi;");
    asm("loc_100048D7: mov 0x4C(%esp),%esi;");
    asm("loc_100048DB: jbe loc_100041B5;");
    asm("loc_100048E1: jmp loc_10004179;");
    asm("loc_100048E6: mov 0x48(%esp),%ecx;");
    asm("loc_100048EA: mov %ecx,0x20(%ebx);");
    asm("loc_100048ED: mov %ebp,0x1C(%ebx);");
    asm("loc_100048F0: mov (%esi),%ecx;");
    asm("loc_100048F2: mov 8(%esi),%eax;");
    asm("loc_100048F5: mov %edi,%edx;");
    asm("loc_100048F7: sub %ecx,%edx;");
    asm("loc_100048F9: mov 0x50(%esp),%ecx;");
    asm("loc_100048FD: add %edx,%eax;");
    asm("loc_100048FF: push %ecx;");
    asm("loc_10004900: mov %eax,8(%esi);");
    asm("loc_10004903: mov 0x18(%esp),%eax;");
    asm("loc_10004907: push %esi;");
    asm("loc_10004908: movl $0,4(%esi);");
    asm("loc_1000490F: mov %edi,(%esi);");
    asm("loc_10004911: push %ebx;");
    asm("loc_10004912: mov %eax,0x34(%ebx);");
    asm("loc_10004915: call _sub_100066F0;");
    asm("loc_1000491A: add $0xC,%esp;");
    asm("loc_1000491D: pop %edi;");
    asm("loc_1000491E: pop %esi;");
    asm("loc_1000491F: pop %ebp;");
    asm("loc_10004920: pop %ebx;");
    asm("loc_10004921: add $0x34,%esp;");
    asm("loc_10004924: ret;");
    asm("loc_10004925: mov 0x48(%esp),%eax;");
    asm("loc_10004929: shr $3,%eax;");
    asm("loc_1000492C: movl $9,(%ebx);");
    asm("loc_10004932: movl $_data_1000B204,0x18(%esi);");
    asm("loc_10004939: mov %eax,0x20(%ebx);");
    asm("loc_1000493C: add $0xFFFFFFFD,%ebp;");
    asm("loc_1000493F: jmp loc_100049AB;");
    asm("loc_10004941: movl $9,(%ebx);");
    asm("loc_10004947: movl $_data_1000B1E4,0x18(%esi);");
    asm("loc_1000494E: push $0xFFFFFFFD;");
    asm("loc_10004950: jmp loc_1000417B;");
    asm("loc_10004955: mov 0x48(%esp),%ecx;");
    asm("loc_10004959: mov 0x10(%esp),%edx;");
    asm("loc_1000495D: mov %ecx,0x20(%ebx);");
    asm("loc_10004960: mov %ebp,0x1C(%ebx);");
    asm("loc_10004963: mov (%esi),%ebp;");
    asm("loc_10004965: mov %edx,4(%esi);");
    asm("loc_10004968: mov 8(%esi),%edx;");
    asm("loc_1000496B: mov %edi,%ecx;");
    asm("loc_1000496D: sub %ebp,%ecx;");
    asm("loc_1000496F: add %ecx,%edx;");
    asm("loc_10004971: mov %edx,8(%esi);");
    asm("loc_10004974: mov 0x50(%esp),%edx;");
    asm("loc_10004978: push %edx;");
    asm("loc_10004979: push %esi;");
    asm("loc_1000497A: mov %edi,(%esi);");
    asm("loc_1000497C: push %ebx;");
    asm("loc_1000497D: mov %eax,0x34(%ebx);");
    asm("loc_10004980: call _sub_100066F0;");
    asm("loc_10004985: add $0xC,%esp;");
    asm("loc_10004988: pop %edi;");
    asm("loc_10004989: pop %esi;");
    asm("loc_1000498A: pop %ebp;");
    asm("loc_1000498B: pop %ebx;");
    asm("loc_1000498C: add $0x34,%esp;");
    asm("loc_1000498F: ret;");
    asm("loc_10004990: push $0xFFFFFFFC;");
    asm("loc_10004992: jmp loc_1000417B;");
    asm("loc_10004997: mov 0x48(%esp),%edx;");
    asm("loc_1000499B: movl $9,(%ebx);");
    asm("loc_100049A1: movl $_data_1000B1C0,0x18(%esi);");
    asm("loc_100049A8: mov %edx,0x20(%ebx);");
    asm("loc_100049AB: mov 0x10(%esp),%eax;");
    asm("loc_100049AF: mov %ebp,0x1C(%ebx);");
    asm("loc_100049B2: mov (%esi),%edx;");
    asm("loc_100049B4: mov %eax,4(%esi);");
    asm("loc_100049B7: mov 8(%esi),%eax;");
    asm("loc_100049BA: mov %edi,%ecx;");
    asm("loc_100049BC: sub %edx,%ecx;");
    asm("loc_100049BE: mov 0x14(%esp),%edx;");
    asm("loc_100049C2: push $0xFFFFFFFD;");
    asm("loc_100049C4: add %ecx,%eax;");
    asm("loc_100049C6: push %esi;");
    asm("loc_100049C7: mov %eax,8(%esi);");
    asm("loc_100049CA: mov %edi,(%esi);");
    asm("loc_100049CC: push %ebx;");
    asm("loc_100049CD: mov %edx,0x34(%ebx);");
    asm("loc_100049D0: call _sub_100066F0;");
    asm("loc_100049D5: add $0xC,%esp;");
    asm("loc_100049D8: pop %edi;");
    asm("loc_100049D9: pop %esi;");
    asm("loc_100049DA: pop %ebp;");
    asm("loc_100049DB: pop %ebx;");
    asm("loc_100049DC: add $0x34,%esp;");
    asm("loc_100049DF: ret;");
    asm("loc_100049E0: cmpl $0xFFFFFFFD,0x18(%esp);");
    asm("loc_100049E5: jne loc_10004B0D;");
    asm("loc_100049EB: mov 0xC(%ebx),%ecx;");
    asm("loc_100049EE: mov 0x28(%esi),%edx;");
    asm("loc_100049F1: push %ecx;");
    asm("loc_100049F2: push %edx;");
    asm("loc_100049F3: calll *0x24(%esi);");
    asm("loc_100049F6: mov 0x50(%esp),%eax;");
    asm("loc_100049FA: mov 0x18(%esp),%ecx;");
    asm("loc_100049FE: mov %eax,0x20(%ebx);");
    asm("loc_10004A01: movl $9,(%ebx);");
    asm("loc_10004A07: mov %ebp,0x1C(%ebx);");
    asm("loc_10004A0A: mov 8(%esi),%eax;");
    asm("loc_10004A0D: mov %ecx,4(%esi);");
    asm("loc_10004A10: mov (%esi),%ecx;");
    asm("loc_10004A12: mov %edi,%edx;");
    asm("loc_10004A14: sub %ecx,%edx;");
    asm("loc_10004A16: mov 0x20(%esp),%ecx;");
    asm("loc_10004A1A: add $8,%esp;");
    asm("loc_10004A1D: add %edx,%eax;");
    asm("loc_10004A1F: push %ecx;");
    asm("loc_10004A20: mov %eax,8(%esi);");
    asm("loc_10004A23: mov 0x18(%esp),%eax;");
    asm("loc_10004A27: push %esi;");
    asm("loc_10004A28: mov %edi,(%esi);");
    asm("loc_10004A2A: push %ebx;");
    asm("loc_10004A2B: mov %eax,0x34(%ebx);");
    asm("loc_10004A2E: call _sub_100066F0;");
    asm("loc_10004A33: add $0xC,%esp;");
    asm("loc_10004A36: pop %edi;");
    asm("loc_10004A37: pop %esi;");
    asm("loc_10004A38: pop %ebp;");
    asm("loc_10004A39: pop %ebx;");
    asm("loc_10004A3A: add $0x34,%esp;");
    asm("loc_10004A3D: ret;");
    asm("loc_10004A3E: mov 0x48(%esp),%edx;");
    asm("loc_10004A42: mov %edx,0x20(%ebx);");
    asm("loc_10004A45: mov %ebp,0x1C(%ebx);");
    asm("loc_10004A48: mov (%esi),%edx;");
    asm("loc_10004A4A: mov %edi,%eax;");
    asm("loc_10004A4C: sub %edx,%eax;");
    asm("loc_10004A4E: mov 0x50(%esp),%edx;");
    asm("loc_10004A52: movl $0,4(%esi);");
    asm("loc_10004A59: push %edx;");
    asm("loc_10004A5A: jmp loc_10004192;");
    asm("loc_10004A5F: mov 0x48(%esp),%eax;");
    asm("loc_10004A63: mov %eax,0x20(%ebx);");
    asm("loc_10004A66: mov %ebp,0x1C(%ebx);");
    asm("loc_10004A69: mov (%esi),%edx;");
    asm("loc_10004A6B: mov 8(%esi),%eax;");
    asm("loc_10004A6E: mov %edi,%ecx;");
    asm("loc_10004A70: sub %edx,%ecx;");
    asm("loc_10004A72: mov 0x14(%esp),%edx;");
    asm("loc_10004A76: add %ecx,%eax;");
    asm("loc_10004A78: mov %eax,8(%esi);");
    asm("loc_10004A7B: mov 0x50(%esp),%eax;");
    asm("loc_10004A7F: movl $0,4(%esi);");
    asm("loc_10004A86: mov %edi,(%esi);");
    asm("loc_10004A88: mov %edx,0x34(%ebx);");
    asm("loc_10004A8B: push %eax;");
    asm("loc_10004A8C: push %esi;");
    asm("loc_10004A8D: push %ebx;");
    asm("loc_10004A8E: call _sub_100066F0;");
    asm("loc_10004A93: add $0xC,%esp;");
    asm("loc_10004A96: pop %edi;");
    asm("loc_10004A97: pop %esi;");
    asm("loc_10004A98: pop %ebp;");
    asm("loc_10004A99: pop %ebx;");
    asm("loc_10004A9A: add $0x34,%esp;");
    asm("loc_10004A9D: ret;");
    asm("loc_10004A9E: mov 0xC(%ebx),%ecx;");
    asm("loc_10004AA1: mov 0x28(%esi),%edx;");
    asm("loc_10004AA4: push %ecx;");
    asm("loc_10004AA5: push %edx;");
    asm("loc_10004AA6: calll *0x24(%esi);");
    asm("loc_10004AA9: mov 0x50(%esp),%eax;");
    asm("loc_10004AAD: mov 0x18(%esp),%ecx;");
    asm("loc_10004AB1: movl $9,(%ebx);");
    asm("loc_10004AB7: movl $_data_1000B1A4,0x18(%esi);");
    asm("loc_10004ABE: mov %eax,0x20(%ebx);");
    asm("loc_10004AC1: mov %ebp,0x1C(%ebx);");
    asm("loc_10004AC4: mov 8(%esi),%eax;");
    asm("loc_10004AC7: mov %ecx,4(%esi);");
    asm("loc_10004ACA: mov (%esi),%ecx;");
    asm("loc_10004ACC: mov %edi,%edx;");
    asm("loc_10004ACE: sub %ecx,%edx;");
    asm("loc_10004AD0: add %edx,%eax;");
    asm("loc_10004AD2: push $0xFFFFFFFD;");
    asm("loc_10004AD4: mov %eax,8(%esi);");
    asm("loc_10004AD7: mov 0x20(%esp),%eax;");
    asm("loc_10004ADB: push %esi;");
    asm("loc_10004ADC: mov %edi,(%esi);");
    asm("loc_10004ADE: push %ebx;");
    asm("loc_10004ADF: mov %eax,0x34(%ebx);");
    asm("loc_10004AE2: call _sub_100066F0;");
    asm("loc_10004AE7: add $0x14,%esp;");
    asm("loc_10004AEA: pop %edi;");
    asm("loc_10004AEB: pop %esi;");
    asm("loc_10004AEC: pop %ebp;");
    asm("loc_10004AED: pop %ebx;");
    asm("loc_10004AEE: add $0x34,%esp;");
    asm("loc_10004AF1: ret;");
    asm("loc_10004AF2: cmpl $0xFFFFFFFD,0x18(%esp);");
    asm("loc_10004AF7: jne loc_10004B0D;");
    asm("loc_10004AF9: mov 0xC(%ebx),%ecx;");
    asm("loc_10004AFC: mov 0x28(%esi),%edx;");
    asm("loc_10004AFF: push %ecx;");
    asm("loc_10004B00: push %edx;");
    asm("loc_10004B01: calll *0x24(%esi);");
    asm("loc_10004B04: add $8,%esp;");
    asm("loc_10004B07: movl $9,(%ebx);");
    asm("loc_10004B0D: mov 0x48(%esp),%eax;");
    asm("loc_10004B11: mov 0x10(%esp),%ecx;");
    asm("loc_10004B15: mov %eax,0x20(%ebx);");
    asm("loc_10004B18: mov %ebp,0x1C(%ebx);");
    asm("loc_10004B1B: mov 8(%esi),%eax;");
    asm("loc_10004B1E: mov %ecx,4(%esi);");
    asm("loc_10004B21: mov (%esi),%ecx;");
    asm("loc_10004B23: mov %edi,%edx;");
    asm("loc_10004B25: sub %ecx,%edx;");
    asm("loc_10004B27: mov 0x18(%esp),%ecx;");
    asm("loc_10004B2B: add %edx,%eax;");
    asm("loc_10004B2D: push %ecx;");
    asm("loc_10004B2E: mov %eax,8(%esi);");
    asm("loc_10004B31: mov 0x18(%esp),%eax;");
    asm("loc_10004B35: push %esi;");
    asm("loc_10004B36: mov %edi,(%esi);");
    asm("loc_10004B38: push %ebx;");
    asm("loc_10004B39: mov %eax,0x34(%ebx);");
    asm("loc_10004B3C: call _sub_100066F0;");
    asm("loc_10004B41: add $0xC,%esp;");
    asm("loc_10004B44: pop %edi;");
    asm("loc_10004B45: pop %esi;");
    asm("loc_10004B46: pop %ebp;");
    asm("loc_10004B47: pop %ebx;");
    asm("loc_10004B48: add $0x34,%esp;");
    asm("loc_10004B4B: ret;");
    asm("loc_10004B4C: mov 0x48(%esp),%edx;");
    asm("loc_10004B50: mov 0x10(%esp),%eax;");
    asm("loc_10004B54: mov %edx,0x20(%ebx);");
    asm("loc_10004B57: mov %ebp,0x1C(%ebx);");
    asm("loc_10004B5A: mov (%esi),%edx;");
    asm("loc_10004B5C: mov %eax,4(%esi);");
    asm("loc_10004B5F: mov 8(%esi),%eax;");
    asm("loc_10004B62: mov %edi,%ecx;");
    asm("loc_10004B64: sub %edx,%ecx;");
    asm("loc_10004B66: mov 0x14(%esp),%edx;");
    asm("loc_10004B6A: push $0xFFFFFFFC;");
    asm("loc_10004B6C: add %ecx,%eax;");
    asm("loc_10004B6E: push %esi;");
    asm("loc_10004B6F: mov %eax,8(%esi);");
    asm("loc_10004B72: mov %edi,(%esi);");
    asm("loc_10004B74: push %ebx;");
    asm("loc_10004B75: mov %edx,0x34(%ebx);");
    asm("loc_10004B78: call _sub_100066F0;");
    asm("loc_10004B7D: add $0xC,%esp;");
    asm("loc_10004B80: pop %edi;");
    asm("loc_10004B81: pop %esi;");
    asm("loc_10004B82: pop %ebp;");
    asm("loc_10004B83: pop %ebx;");
    asm("loc_10004B84: add $0x34,%esp;");
    asm("loc_10004B87: ret;");
    asm("loc_10004B88: movl $7,(%ebx);");
    asm("loc_10004B8E: mov 0x50(%esp),%ecx;");
    asm("loc_10004B92: mov 0x14(%esp),%eax;");
    asm("loc_10004B96: push %ecx;");
    asm("loc_10004B97: push %esi;");
    asm("loc_10004B98: push %ebx;");
    asm("loc_10004B99: mov %eax,0x34(%ebx);");
    asm("loc_10004B9C: call _sub_100066F0;");
    asm("loc_10004BA1: mov 0x34(%ebx),%ecx;");
    asm("loc_10004BA4: mov 0x30(%ebx),%edx;");
    asm("loc_10004BA7: add $0xC,%esp;");
    asm("loc_10004BAA: cmp %ecx,%edx;");
    asm("loc_10004BAC: mov %ecx,0x14(%esp);");
    asm("loc_10004BB0: je loc_10004BD4;");
    asm("loc_10004BB2: mov 0x48(%esp),%edx;");
    asm("loc_10004BB6: mov 0x10(%esp),%ecx;");
    asm("loc_10004BBA: mov %edx,0x20(%ebx);");
    asm("loc_10004BBD: mov %ebp,0x1C(%ebx);");
    asm("loc_10004BC0: mov (%esi),%ebp;");
    asm("loc_10004BC2: mov %ecx,4(%esi);");
    asm("loc_10004BC5: mov 8(%esi),%ecx;");
    asm("loc_10004BC8: mov %edi,%edx;");
    asm("loc_10004BCA: sub %ebp,%edx;");
    asm("loc_10004BCC: add %edx,%ecx;");
    asm("loc_10004BCE: push %eax;");
    asm("loc_10004BCF: jmp loc_10004197;");
    asm("loc_10004BD4: movl $8,(%ebx);");
    asm("loc_10004BDA: mov 0x48(%esp),%edx;");
    asm("loc_10004BDE: mov 0x10(%esp),%eax;");
    asm("loc_10004BE2: mov %edx,0x20(%ebx);");
    asm("loc_10004BE5: mov %ebp,0x1C(%ebx);");
    asm("loc_10004BE8: mov (%esi),%edx;");
    asm("loc_10004BEA: mov %eax,4(%esi);");
    asm("loc_10004BED: mov 8(%esi),%eax;");
    asm("loc_10004BF0: mov %edi,%ecx;");
    asm("loc_10004BF2: sub %edx,%ecx;");
    asm("loc_10004BF4: mov 0x14(%esp),%edx;");
    asm("loc_10004BF8: push $1;");
    asm("loc_10004BFA: add %ecx,%eax;");
    asm("loc_10004BFC: push %esi;");
    asm("loc_10004BFD: mov %eax,8(%esi);");
    asm("loc_10004C00: mov %edi,(%esi);");
    asm("loc_10004C02: push %ebx;");
    asm("loc_10004C03: mov %edx,0x34(%ebx);");
    asm("loc_10004C06: call _sub_100066F0;");
    asm("loc_10004C0B: add $0xC,%esp;");
    asm("loc_10004C0E: pop %edi;");
    asm("loc_10004C0F: pop %esi;");
    asm("loc_10004C10: pop %ebp;");
    asm("loc_10004C11: pop %ebx;");
    asm("loc_10004C12: add $0x34,%esp;");
    asm("loc_10004C15: ret;");
    asm("loc_10004C16: mov 0x48(%esp),%eax;");
    asm("loc_10004C1A: mov 0x10(%esp),%ecx;");
    asm("loc_10004C1E: mov %eax,0x20(%ebx);");
    asm("loc_10004C21: mov %ebp,0x1C(%ebx);");
    asm("loc_10004C24: mov 8(%esi),%eax;");
    asm("loc_10004C27: mov %ecx,4(%esi);");
    asm("loc_10004C2A: mov (%esi),%ecx;");
    asm("loc_10004C2C: mov %edi,%edx;");
    asm("loc_10004C2E: sub %ecx,%edx;");
    asm("loc_10004C30: add %edx,%eax;");
    asm("loc_10004C32: push $0xFFFFFFFD;");
    asm("loc_10004C34: mov %eax,8(%esi);");
    asm("loc_10004C37: mov 0x18(%esp),%eax;");
    asm("loc_10004C3B: push %esi;");
    asm("loc_10004C3C: mov %edi,(%esi);");
    asm("loc_10004C3E: push %ebx;");
    asm("loc_10004C3F: mov %eax,0x34(%ebx);");
    asm("loc_10004C42: call _sub_100066F0;");
    asm("loc_10004C47: add $0xC,%esp;");
    asm("loc_10004C4A: pop %edi;");
    asm("loc_10004C4B: pop %esi;");
    asm("loc_10004C4C: pop %ebp;");
    asm("loc_10004C4D: pop %ebx;");
    asm("loc_10004C4E: add $0x34,%esp;");
    asm("loc_10004C51: ret;");
    asm("int3;"); // unreachable
    asm("_jmp_10004C54: .long loc_100041C4;");
    asm(".long loc_100042AC;");
    asm(".long loc_1000431A;");
    asm(".long loc_1000444D;");
    asm(".long loc_100044E4;");
    asm(".long loc_100045D9;");
    asm(".long loc_10004831;");
    asm(".long loc_10004B8E;");
    asm(".long loc_10004BDA;");
    asm(".long loc_10004C16;");
    asm("_jmp_10004C7C: .long loc_10004224;");
    asm(".long loc_10004242;");
    asm(".long loc_10004297;");
    asm(".long loc_10004925;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_10004130);
_naked _weak void _sub_10004C90() // _sub_10004C90
{
    __DEBUG_ASM(10004C90);
    // chunk 0x10004C90 _sub_10004C90
    asm("loc_10004C90: push %esi;");
    asm("loc_10004C91: mov 0xC(%esp),%esi;");
    asm("loc_10004C95: push %edi;");
    asm("loc_10004C96: mov 0xC(%esp),%edi;");
    asm("loc_10004C9A: push $0;");
    asm("loc_10004C9C: push %esi;");
    asm("loc_10004C9D: push %edi;");
    asm("loc_10004C9E: call _sub_10004010;");
    asm("loc_10004CA3: mov 0x28(%edi),%eax;");
    asm("loc_10004CA6: mov 0x28(%esi),%ecx;");
    asm("loc_10004CA9: push %eax;");
    asm("loc_10004CAA: push %ecx;");
    asm("loc_10004CAB: calll *0x24(%esi);");
    asm("loc_10004CAE: mov 0x24(%edi),%edx;");
    asm("loc_10004CB1: mov 0x28(%esi),%eax;");
    asm("loc_10004CB4: push %edx;");
    asm("loc_10004CB5: push %eax;");
    asm("loc_10004CB6: calll *0x24(%esi);");
    asm("loc_10004CB9: mov 0x28(%esi),%ecx;");
    asm("loc_10004CBC: push %edi;");
    asm("loc_10004CBD: push %ecx;");
    asm("loc_10004CBE: calll *0x24(%esi);");
    asm("loc_10004CC1: add $0x24,%esp;");
    asm("loc_10004CC4: pop %edi;");
    asm("loc_10004CC5: xor %eax,%eax;");
    asm("loc_10004CC7: pop %esi;");
    asm("loc_10004CC8: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10004CD0() // _sub_10004CD0
{
    __DEBUG_ASM(10004CD0);
    // chunk 0x10004CD0 _sub_10004CD0
    asm("loc_10004CD0: mov 0xC(%esp),%edx;");
    asm("loc_10004CD4: mov 4(%esp),%eax;");
    asm("loc_10004CD8: push %ebx;");
    asm("loc_10004CD9: push %esi;");
    asm("loc_10004CDA: mov 0x10(%esp),%esi;");
    asm("loc_10004CDE: push %edi;");
    asm("loc_10004CDF: mov 0x28(%eax),%edi;");
    asm("loc_10004CE2: mov %edx,%ecx;");
    asm("loc_10004CE4: mov %ecx,%ebx;");
    asm("loc_10004CE6: shr $2,%ecx;");
    asm("loc_10004CE9: rep movsl (%esi),(%edi);");
    asm("loc_10004CEB: mov %ebx,%ecx;");
    asm("loc_10004CED: and $3,%ecx;");
    asm("loc_10004CF0: rep movsb (%esi),(%edi);");
    asm("loc_10004CF2: mov 0x28(%eax),%ecx;");
    asm("loc_10004CF5: pop %edi;");
    asm("loc_10004CF6: add %edx,%ecx;");
    asm("loc_10004CF8: pop %esi;");
    asm("loc_10004CF9: mov %ecx,0x34(%eax);");
    asm("loc_10004CFC: mov %ecx,0x30(%eax);");
    asm("loc_10004CFF: pop %ebx;");
    asm("loc_10004D00: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10004D10() // _sub_10004D10
{
    __DEBUG_ASM(10004D10);
    // chunk 0x10004D10 _sub_10004D10
    asm("loc_10004D10: mov 4(%esp),%ecx;");
    asm("loc_10004D14: mov (%ecx),%edx;");
    asm("loc_10004D16: xor %eax,%eax;");
    asm("loc_10004D18: cmp $1,%edx;");
    asm("loc_10004D1B: sete %al;");
    asm("loc_10004D1E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10004D20() // _sub_10004D20
{
    __DEBUG_ASM(10004D20);
    // chunk 0x10004D20 _sub_10004D20
    asm("loc_10004D20: mov 0x14(%esp),%eax;");
    asm("loc_10004D24: mov 0x28(%eax),%ecx;");
    asm("loc_10004D27: push $0x1C;");
    asm("loc_10004D29: push $1;");
    asm("loc_10004D2B: push %ecx;");
    asm("loc_10004D2C: calll *0x20(%eax);");
    asm("loc_10004D2F: add $0xC,%esp;");
    asm("loc_10004D32: test %eax,%eax;");
    asm("loc_10004D34: je loc_10004D58;");
    asm("loc_10004D36: mov 4(%esp),%dl;");
    asm("loc_10004D3A: mov 8(%esp),%cl;");
    asm("loc_10004D3E: mov %dl,0x10(%eax);");
    asm("loc_10004D41: mov 0xC(%esp),%edx;");
    asm("loc_10004D45: mov %cl,0x11(%eax);");
    asm("loc_10004D48: mov 0x10(%esp),%ecx;");
    asm("loc_10004D4C: movl $0,(%eax);");
    asm("loc_10004D52: mov %edx,0x14(%eax);");
    asm("loc_10004D55: mov %ecx,0x18(%eax);");
    asm("loc_10004D58: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10004D60() // _sub_10004D60
{
    asm("jmp dgb_10004D60;"); // jumptable skip
    asm(".long _jmp_1000544C;"); // jumptable address
    __DEBUG_ASM(10004D60);
    // chunk 0x10004D60 _sub_10004D60
    asm("loc_10004D60: sub $0x14,%esp;");
    asm("loc_10004D63: push %ebx;");
    asm("loc_10004D64: push %ebp;");
    asm("loc_10004D65: push %esi;");
    asm("loc_10004D66: mov 0x24(%esp),%esi;");
    asm("loc_10004D6A: mov 0x20(%esi),%edx;");
    asm("loc_10004D6D: mov 4(%esi),%ecx;");
    asm("loc_10004D70: mov 0x1C(%esi),%ebx;");
    asm("loc_10004D73: push %edi;");
    asm("loc_10004D74: mov 0x2C(%esp),%edi;");
    asm("loc_10004D78: mov 4(%edi),%eax;");
    asm("loc_10004D7B: mov (%edi),%ebp;");
    asm("loc_10004D7D: mov %eax,0x2C(%esp);");
    asm("loc_10004D81: mov 0x30(%esi),%eax;");
    asm("loc_10004D84: mov %edx,0x28(%esp);");
    asm("loc_10004D88: mov 0x34(%esi),%edx;");
    asm("loc_10004D8B: cmp %eax,%edx;");
    asm("loc_10004D8D: mov %ecx,0x10(%esp);");
    asm("loc_10004D91: jae loc_10004D98;");
    asm("loc_10004D93: sub %edx,%eax;");
    asm("loc_10004D95: dec %eax;");
    asm("loc_10004D96: jmp loc_10004D9D;");
    asm("loc_10004D98: mov 0x2C(%esi),%eax;");
    asm("loc_10004D9B: sub %edx,%eax;");
    asm("loc_10004D9D: mov (%ecx),%ecx;");
    asm("loc_10004D9F: cmp $9,%ecx;");
    asm("loc_10004DA2: mov %eax,0x14(%esp);");
    asm("loc_10004DA6: ja loc_10005303;");
    asm("loc_10004DAC: lea (%esp),%esp;");
    asm("loc_10004DB0: jmpl *_jmp_1000544C(,%ecx,4);");
    asm("loc_10004DB7: cmp $0x102,%eax;");
    asm("loc_10004DBC: jb loc_10004E5F;");
    asm("loc_10004DC2: cmpl $0xA,0x2C(%esp);");
    asm("loc_10004DC7: jb loc_10004E5F;");
    asm("loc_10004DCD: mov 0x28(%esp),%eax;");
    asm("loc_10004DD1: mov 0x2C(%esp),%ecx;");
    asm("loc_10004DD5: mov %eax,0x20(%esi);");
    asm("loc_10004DD8: mov %ebx,0x1C(%esi);");
    asm("loc_10004DDB: mov (%edi),%ebx;");
    asm("loc_10004DDD: mov %ecx,4(%edi);");
    asm("loc_10004DE0: mov 8(%edi),%ecx;");
    asm("loc_10004DE3: mov %ebp,%eax;");
    asm("loc_10004DE5: sub %ebx,%eax;");
    asm("loc_10004DE7: add %eax,%ecx;");
    asm("loc_10004DE9: mov 0x10(%esp),%eax;");
    asm("loc_10004DED: mov %ecx,8(%edi);");
    asm("loc_10004DF0: mov %ebp,(%edi);");
    asm("loc_10004DF2: push %edi;");
    asm("loc_10004DF3: mov %edx,0x34(%esi);");
    asm("loc_10004DF6: mov 0x18(%eax),%ecx;");
    asm("loc_10004DF9: mov 0x14(%eax),%edx;");
    asm("loc_10004DFC: push %esi;");
    asm("loc_10004DFD: push %ecx;");
    asm("loc_10004DFE: movzbl 0x11(%eax),%ecx;");
    asm("loc_10004E02: push %edx;");
    asm("loc_10004E03: movzbl 0x10(%eax),%edx;");
    asm("loc_10004E07: push %ecx;");
    asm("loc_10004E08: push %edx;");
    asm("loc_10004E09: call _sub_100054A0;");
    asm("loc_10004E0E: mov 4(%edi),%ecx;");
    asm("loc_10004E11: mov 0x20(%esi),%edx;");
    asm("loc_10004E14: mov (%edi),%ebp;");
    asm("loc_10004E16: mov 0x1C(%esi),%ebx;");
    asm("loc_10004E19: mov %ecx,0x44(%esp);");
    asm("loc_10004E1D: mov 0x30(%esi),%ecx;");
    asm("loc_10004E20: mov %edx,0x40(%esp);");
    asm("loc_10004E24: mov 0x34(%esi),%edx;");
    asm("loc_10004E27: add $0x18,%esp;");
    asm("loc_10004E2A: cmp %ecx,%edx;");
    asm("loc_10004E2C: mov %eax,0x30(%esp);");
    asm("loc_10004E30: jae loc_10004E37;");
    asm("loc_10004E32: sub %edx,%ecx;");
    asm("loc_10004E34: dec %ecx;");
    asm("loc_10004E35: jmp loc_10004E3C;");
    asm("loc_10004E37: mov 0x2C(%esi),%ecx;");
    asm("loc_10004E3A: sub %edx,%ecx;");
    asm("loc_10004E3C: test %eax,%eax;");
    asm("loc_10004E3E: mov %ecx,0x14(%esp);");
    asm("loc_10004E42: je loc_10004E5F;");
    asm("loc_10004E44: xor %ecx,%ecx;");
    asm("loc_10004E46: cmp $1,%eax;");
    asm("loc_10004E49: mov 0x10(%esp),%eax;");
    asm("loc_10004E4D: setne %cl;");
    asm("loc_10004E50: lea 7(%ecx,%ecx),%ecx;");
    asm("loc_10004E54: mov %ecx,(%eax);");
    asm("loc_10004E56: mov 0x14(%esp),%eax;");
    asm("loc_10004E5A: jmp loc_100052F4;");
    asm("loc_10004E5F: mov 0x10(%esp),%eax;");
    asm("loc_10004E63: movzbl 0x10(%eax),%ecx;");
    asm("loc_10004E67: mov %ecx,0xC(%eax);");
    asm("loc_10004E6A: mov 0x14(%eax),%ecx;");
    asm("loc_10004E6D: mov %ecx,8(%eax);");
    asm("loc_10004E70: movl $1,(%eax);");
    asm("loc_10004E76: mov 0x10(%esp),%eax;");
    asm("loc_10004E7A: mov 0xC(%eax),%eax;");
    asm("loc_10004E7D: cmp %eax,%ebx;");
    asm("loc_10004E7F: mov %eax,0x18(%esp);");
    asm("loc_10004E83: jae loc_10004EC7;");
    asm("loc_10004E85: jmp loc_10004E90;");
    asm("loc_10004E87: lea (%esp),%esp;");
    asm("loc_10004E8E: mov %edi,%edi;");
    asm("loc_10004E90: mov 0x2C(%esp),%eax;");
    asm("loc_10004E94: test %eax,%eax;");
    asm("loc_10004E96: je loc_10005361;");
    asm("loc_10004E9C: dec %eax;");
    asm("loc_10004E9D: mov %eax,0x2C(%esp);");
    asm("loc_10004EA1: movzbl (%ebp),%eax;");
    asm("loc_10004EA5: mov %ebx,%ecx;");
    asm("loc_10004EA7: shl %cl,%eax;");
    asm("loc_10004EA9: mov 0x28(%esp),%ecx;");
    asm("loc_10004EAD: add $8,%ebx;");
    asm("loc_10004EB0: movl $0,0x30(%esp);");
    asm("loc_10004EB8: or %eax,%ecx;");
    asm("loc_10004EBA: mov 0x18(%esp),%eax;");
    asm("loc_10004EBE: inc %ebp;");
    asm("loc_10004EBF: cmp %eax,%ebx;");
    asm("loc_10004EC1: mov %ecx,0x28(%esp);");
    asm("loc_10004EC5: jb loc_10004E90;");
    asm("loc_10004EC7: mov _data_1000E120(,%eax,4),%ecx;");
    asm("loc_10004ECE: and 0x28(%esp),%ecx;");
    asm("loc_10004ED2: mov 0x10(%esp),%eax;");
    asm("loc_10004ED6: mov 8(%eax),%eax;");
    asm("loc_10004ED9: lea (%eax,%ecx,8),%eax;");
    asm("loc_10004EDC: movzbl 1(%eax),%ecx;");
    asm("loc_10004EE0: mov %eax,0x18(%esp);");
    asm("loc_10004EE4: mov 0x28(%esp),%eax;");
    asm("loc_10004EE8: shr %cl,%eax;");
    asm("loc_10004EEA: mov 0x18(%esp),%ecx;");
    asm("loc_10004EEE: mov %eax,0x28(%esp);");
    asm("loc_10004EF2: movzbl 1(%ecx),%eax;");
    asm("loc_10004EF6: sub %eax,%ebx;");
    asm("loc_10004EF8: movzbl (%ecx),%eax;");
    asm("loc_10004EFB: test %eax,%eax;");
    asm("loc_10004EFD: jne loc_10004F18;");
    asm("loc_10004EFF: mov 0x10(%esp),%eax;");
    asm("loc_10004F03: mov 4(%ecx),%ecx;");
    asm("loc_10004F06: mov %ecx,8(%eax);");
    asm("loc_10004F09: movl $6,(%eax);");
    asm("loc_10004F0F: mov 0x14(%esp),%eax;");
    asm("loc_10004F13: jmp loc_100052F4;");
    asm("loc_10004F18: test $0x10,%al;");
    asm("loc_10004F1A: je loc_10004F3F;");
    asm("loc_10004F1C: mov 0x10(%esp),%ecx;");
    asm("loc_10004F20: and $0xF,%eax;");
    asm("loc_10004F23: mov %eax,8(%ecx);");
    asm("loc_10004F26: mov 0x18(%esp),%eax;");
    asm("loc_10004F2A: mov 4(%eax),%eax;");
    asm("loc_10004F2D: mov %eax,4(%ecx);");
    asm("loc_10004F30: mov 0x14(%esp),%eax;");
    asm("loc_10004F34: movl $2,(%ecx);");
    asm("loc_10004F3A: jmp loc_100052F4;");
    asm("loc_10004F3F: test $0x40,%al;");
    asm("loc_10004F41: je loc_10005084;");
    asm("loc_10004F47: test $0x20,%al;");
    asm("loc_10004F49: mov 0x10(%esp),%eax;");
    asm("loc_10004F4D: je loc_1000533B;");
    asm("loc_10004F53: movl $7,(%eax);");
    asm("loc_10004F59: mov 0x14(%esp),%eax;");
    asm("loc_10004F5D: jmp loc_100052F4;");
    asm("loc_10004F62: mov 0x10(%esp),%ecx;");
    asm("loc_10004F66: mov 8(%ecx),%eax;");
    asm("loc_10004F69: cmp %eax,%ebx;");
    asm("loc_10004F6B: mov %eax,0x18(%esp);");
    asm("loc_10004F6F: jae loc_10004FA8;");
    asm("loc_10004F71: mov 0x2C(%esp),%eax;");
    asm("loc_10004F75: test %eax,%eax;");
    asm("loc_10004F77: je loc_10005361;");
    asm("loc_10004F7D: dec %eax;");
    asm("loc_10004F7E: mov %eax,0x2C(%esp);");
    asm("loc_10004F82: movzbl (%ebp),%eax;");
    asm("loc_10004F86: mov %ebx,%ecx;");
    asm("loc_10004F88: shl %cl,%eax;");
    asm("loc_10004F8A: mov 0x28(%esp),%ecx;");
    asm("loc_10004F8E: add $8,%ebx;");
    asm("loc_10004F91: movl $0,0x30(%esp);");
    asm("loc_10004F99: or %eax,%ecx;");
    asm("loc_10004F9B: mov 0x18(%esp),%eax;");
    asm("loc_10004F9F: inc %ebp;");
    asm("loc_10004FA0: cmp %eax,%ebx;");
    asm("loc_10004FA2: mov %ecx,0x28(%esp);");
    asm("loc_10004FA6: jb loc_10004F71;");
    asm("loc_10004FA8: mov _data_1000E120(,%eax,4),%ecx;");
    asm("loc_10004FAF: and 0x28(%esp),%ecx;");
    asm("loc_10004FB3: mov 0x10(%esp),%eax;");
    asm("loc_10004FB7: add %ecx,4(%eax);");
    asm("loc_10004FBA: mov 0x18(%esp),%ecx;");
    asm("loc_10004FBE: shrl %cl,0x28(%esp);");
    asm("loc_10004FC2: mov %ecx,%eax;");
    asm("loc_10004FC4: sub %eax,%ebx;");
    asm("loc_10004FC6: mov 0x10(%esp),%eax;");
    asm("loc_10004FCA: movzbl 0x11(%eax),%ecx;");
    asm("loc_10004FCE: mov %ecx,0xC(%eax);");
    asm("loc_10004FD1: mov 0x18(%eax),%ecx;");
    asm("loc_10004FD4: mov %ecx,8(%eax);");
    asm("loc_10004FD7: movl $3,(%eax);");
    asm("loc_10004FDD: jmp loc_10004FE3;");
    asm("loc_10004FDF: mov 0x10(%esp),%eax;");
    asm("loc_10004FE3: mov 0xC(%eax),%eax;");
    asm("loc_10004FE6: cmp %eax,%ebx;");
    asm("loc_10004FE8: mov %eax,0x18(%esp);");
    asm("loc_10004FEC: jae loc_10005027;");
    asm("loc_10004FEE: mov %edi,%edi;");
    asm("loc_10004FF0: mov 0x2C(%esp),%eax;");
    asm("loc_10004FF4: test %eax,%eax;");
    asm("loc_10004FF6: je loc_10005361;");
    asm("loc_10004FFC: dec %eax;");
    asm("loc_10004FFD: mov %eax,0x2C(%esp);");
    asm("loc_10005001: movzbl (%ebp),%eax;");
    asm("loc_10005005: mov %ebx,%ecx;");
    asm("loc_10005007: shl %cl,%eax;");
    asm("loc_10005009: mov 0x28(%esp),%ecx;");
    asm("loc_1000500D: add $8,%ebx;");
    asm("loc_10005010: movl $0,0x30(%esp);");
    asm("loc_10005018: or %eax,%ecx;");
    asm("loc_1000501A: mov 0x18(%esp),%eax;");
    asm("loc_1000501E: inc %ebp;");
    asm("loc_1000501F: cmp %eax,%ebx;");
    asm("loc_10005021: mov %ecx,0x28(%esp);");
    asm("loc_10005025: jb loc_10004FF0;");
    asm("loc_10005027: mov _data_1000E120(,%eax,4),%ecx;");
    asm("loc_1000502E: and 0x28(%esp),%ecx;");
    asm("loc_10005032: mov 0x10(%esp),%eax;");
    asm("loc_10005036: mov 8(%eax),%eax;");
    asm("loc_10005039: lea (%eax,%ecx,8),%eax;");
    asm("loc_1000503C: movzbl 1(%eax),%ecx;");
    asm("loc_10005040: mov %eax,0x18(%esp);");
    asm("loc_10005044: shrl %cl,0x28(%esp);");
    asm("loc_10005048: mov 0x18(%esp),%eax;");
    asm("loc_1000504C: movzbl 1(%eax),%ecx;");
    asm("loc_10005050: movzbl (%eax),%eax;");
    asm("loc_10005053: sub %ecx,%ebx;");
    asm("loc_10005055: test $0x10,%al;");
    asm("loc_10005057: je loc_1000507C;");
    asm("loc_10005059: mov 0x10(%esp),%ecx;");
    asm("loc_1000505D: and $0xF,%eax;");
    asm("loc_10005060: mov %eax,8(%ecx);");
    asm("loc_10005063: mov 0x18(%esp),%eax;");
    asm("loc_10005067: mov 4(%eax),%eax;");
    asm("loc_1000506A: mov %eax,0xC(%ecx);");
    asm("loc_1000506D: mov 0x14(%esp),%eax;");
    asm("loc_10005071: movl $4,(%ecx);");
    asm("loc_10005077: jmp loc_100052F4;");
    asm("loc_1000507C: test $0x40,%al;");
    asm("loc_1000507E: jne loc_1000534C;");
    asm("loc_10005084: mov 0x10(%esp),%ecx;");
    asm("loc_10005088: mov %eax,0xC(%ecx);");
    asm("loc_1000508B: mov 0x18(%esp),%eax;");
    asm("loc_1000508F: mov 4(%eax),%ecx;");
    asm("loc_10005092: lea (%eax,%ecx,8),%eax;");
    asm("loc_10005095: mov 0x10(%esp),%ecx;");
    asm("loc_10005099: mov %eax,8(%ecx);");
    asm("loc_1000509C: mov 0x14(%esp),%eax;");
    asm("loc_100050A0: jmp loc_100052F4;");
    asm("loc_100050A5: mov 0x10(%esp),%eax;");
    asm("loc_100050A9: mov 8(%eax),%eax;");
    asm("loc_100050AC: cmp %eax,%ebx;");
    asm("loc_100050AE: mov %eax,0x18(%esp);");
    asm("loc_100050B2: jae loc_100050EB;");
    asm("loc_100050B4: mov 0x2C(%esp),%eax;");
    asm("loc_100050B8: test %eax,%eax;");
    asm("loc_100050BA: je loc_10005361;");
    asm("loc_100050C0: dec %eax;");
    asm("loc_100050C1: mov %eax,0x2C(%esp);");
    asm("loc_100050C5: movzbl (%ebp),%eax;");
    asm("loc_100050C9: mov %ebx,%ecx;");
    asm("loc_100050CB: shl %cl,%eax;");
    asm("loc_100050CD: mov 0x28(%esp),%ecx;");
    asm("loc_100050D1: add $8,%ebx;");
    asm("loc_100050D4: movl $0,0x30(%esp);");
    asm("loc_100050DC: or %eax,%ecx;");
    asm("loc_100050DE: mov 0x18(%esp),%eax;");
    asm("loc_100050E2: inc %ebp;");
    asm("loc_100050E3: cmp %eax,%ebx;");
    asm("loc_100050E5: mov %ecx,0x28(%esp);");
    asm("loc_100050E9: jb loc_100050B4;");
    asm("loc_100050EB: mov _data_1000E120(,%eax,4),%ecx;");
    asm("loc_100050F2: and 0x28(%esp),%ecx;");
    asm("loc_100050F6: mov 0x10(%esp),%eax;");
    asm("loc_100050FA: add %ecx,0xC(%eax);");
    asm("loc_100050FD: mov 0x18(%esp),%ecx;");
    asm("loc_10005101: shrl %cl,0x28(%esp);");
    asm("loc_10005105: mov %ecx,%eax;");
    asm("loc_10005107: sub %eax,%ebx;");
    asm("loc_10005109: mov 0x10(%esp),%eax;");
    asm("loc_1000510D: movl $5,(%eax);");
    asm("loc_10005113: mov 0x10(%esp),%ecx;");
    asm("loc_10005117: mov %edx,%eax;");
    asm("loc_10005119: sub 0xC(%ecx),%eax;");
    asm("loc_1000511C: mov 0x28(%esi),%ecx;");
    asm("loc_1000511F: cmp %ecx,%eax;");
    asm("loc_10005121: mov %eax,0x1C(%esp);");
    asm("loc_10005125: jae loc_1000514B;");
    asm("loc_10005127: mov 0x2C(%esi),%eax;");
    asm("loc_1000512A: sub %ecx,%eax;");
    asm("loc_1000512C: mov 0x1C(%esp),%ecx;");
    asm("loc_10005130: mov %eax,0x20(%esp);");
    asm("loc_10005134: jmp loc_10005140;");
    asm("loc_10005136: mov 0x20(%esp),%eax;");
    asm("loc_1000513A: lea (%ebx),%ebx;");
    asm("loc_10005140: add %eax,%ecx;");
    asm("loc_10005142: cmp 0x28(%esi),%ecx;");
    asm("loc_10005145: jb loc_10005136;");
    asm("loc_10005147: mov %ecx,0x1C(%esp);");
    asm("loc_1000514B: mov 0x10(%esp),%ecx;");
    asm("loc_1000514F: mov 4(%ecx),%eax;");
    asm("loc_10005152: test %eax,%eax;");
    asm("loc_10005154: mov 0x14(%esp),%eax;");
    asm("loc_10005158: je loc_100052EE;");
    asm("loc_1000515E: mov %edi,%edi;");
    asm("loc_10005160: test %eax,%eax;");
    asm("loc_10005162: jne loc_100051F9;");
    asm("loc_10005168: mov 0x2C(%esi),%eax;");
    asm("loc_1000516B: cmp %eax,%edx;");
    asm("loc_1000516D: mov %eax,0x18(%esp);");
    asm("loc_10005171: jne loc_10005192;");
    asm("loc_10005173: mov 0x30(%esi),%eax;");
    asm("loc_10005176: mov 0x28(%esi),%ecx;");
    asm("loc_10005179: cmp %ecx,%eax;");
    asm("loc_1000517B: je loc_10005192;");
    asm("loc_1000517D: mov %ecx,%edx;");
    asm("loc_1000517F: cmp %eax,%edx;");
    asm("loc_10005181: jae loc_10005188;");
    asm("loc_10005183: sub %edx,%eax;");
    asm("loc_10005185: dec %eax;");
    asm("loc_10005186: jmp loc_1000518E;");
    asm("loc_10005188: mov 0x18(%esp),%eax;");
    asm("loc_1000518C: sub %edx,%eax;");
    asm("loc_1000518E: test %eax,%eax;");
    asm("loc_10005190: jne loc_100051F9;");
    asm("loc_10005192: mov %edx,0x34(%esi);");
    asm("loc_10005195: mov 0x30(%esp),%edx;");
    asm("loc_10005199: push %edx;");
    asm("loc_1000519A: push %edi;");
    asm("loc_1000519B: push %esi;");
    asm("loc_1000519C: call _sub_100066F0;");
    asm("loc_100051A1: mov 0x34(%esi),%edx;");
    asm("loc_100051A4: mov %eax,0x3C(%esp);");
    asm("loc_100051A8: mov 0x30(%esi),%eax;");
    asm("loc_100051AB: add $0xC,%esp;");
    asm("loc_100051AE: cmp %eax,%edx;");
    asm("loc_100051B0: mov %eax,0x20(%esp);");
    asm("loc_100051B4: jae loc_100051BB;");
    asm("loc_100051B6: sub %edx,%eax;");
    asm("loc_100051B8: dec %eax;");
    asm("loc_100051B9: jmp loc_100051C0;");
    asm("loc_100051BB: mov 0x2C(%esi),%eax;");
    asm("loc_100051BE: sub %edx,%eax;");
    asm("loc_100051C0: mov 0x2C(%esi),%ecx;");
    asm("loc_100051C3: cmp %ecx,%edx;");
    asm("loc_100051C5: mov %eax,0x14(%esp);");
    asm("loc_100051C9: mov %ecx,0x18(%esp);");
    asm("loc_100051CD: jne loc_100051F1;");
    asm("loc_100051CF: mov 0x28(%esi),%ecx;");
    asm("loc_100051D2: mov 0x20(%esp),%eax;");
    asm("loc_100051D6: cmp %ecx,%eax;");
    asm("loc_100051D8: je loc_100051ED;");
    asm("loc_100051DA: mov %ecx,%edx;");
    asm("loc_100051DC: cmp %eax,%edx;");
    asm("loc_100051DE: jae loc_100051E5;");
    asm("loc_100051E0: sub %edx,%eax;");
    asm("loc_100051E2: dec %eax;");
    asm("loc_100051E3: jmp loc_100051F1;");
    asm("loc_100051E5: mov 0x18(%esp),%eax;");
    asm("loc_100051E9: sub %edx,%eax;");
    asm("loc_100051EB: jmp loc_100051F1;");
    asm("loc_100051ED: mov 0x14(%esp),%eax;");
    asm("loc_100051F1: test %eax,%eax;");
    asm("loc_100051F3: je loc_1000539C;");
    asm("loc_100051F9: mov 0x1C(%esp),%ecx;");
    asm("loc_100051FD: mov (%ecx),%cl;");
    asm("loc_100051FF: mov %cl,(%edx);");
    asm("loc_10005201: mov 0x1C(%esp),%ecx;");
    asm("loc_10005205: inc %edx;");
    asm("loc_10005206: inc %ecx;");
    asm("loc_10005207: dec %eax;");
    asm("loc_10005208: cmp 0x2C(%esi),%ecx;");
    asm("loc_1000520B: movl $0,0x30(%esp);");
    asm("loc_10005213: mov %ecx,0x1C(%esp);");
    asm("loc_10005217: mov %eax,0x14(%esp);");
    asm("loc_1000521B: jne loc_10005224;");
    asm("loc_1000521D: mov 0x28(%esi),%ecx;");
    asm("loc_10005220: mov %ecx,0x1C(%esp);");
    asm("loc_10005224: mov 0x10(%esp),%ecx;");
    asm("loc_10005228: decl 4(%ecx);");
    asm("loc_1000522B: cmpl $0,4(%ecx);");
    asm("loc_1000522F: jne loc_10005160;");
    asm("loc_10005235: jmp loc_100052EE;");
    asm("loc_1000523A: test %eax,%eax;");
    asm("loc_1000523C: jne loc_100052D3;");
    asm("loc_10005242: mov 0x2C(%esi),%eax;");
    asm("loc_10005245: cmp %eax,%edx;");
    asm("loc_10005247: mov %eax,0x18(%esp);");
    asm("loc_1000524B: jne loc_1000526C;");
    asm("loc_1000524D: mov 0x30(%esi),%eax;");
    asm("loc_10005250: mov 0x28(%esi),%ecx;");
    asm("loc_10005253: cmp %ecx,%eax;");
    asm("loc_10005255: je loc_1000526C;");
    asm("loc_10005257: mov %ecx,%edx;");
    asm("loc_10005259: cmp %eax,%edx;");
    asm("loc_1000525B: jae loc_10005262;");
    asm("loc_1000525D: sub %edx,%eax;");
    asm("loc_1000525F: dec %eax;");
    asm("loc_10005260: jmp loc_10005268;");
    asm("loc_10005262: mov 0x18(%esp),%eax;");
    asm("loc_10005266: sub %edx,%eax;");
    asm("loc_10005268: test %eax,%eax;");
    asm("loc_1000526A: jne loc_100052D3;");
    asm("loc_1000526C: mov %edx,0x34(%esi);");
    asm("loc_1000526F: mov 0x30(%esp),%edx;");
    asm("loc_10005273: push %edx;");
    asm("loc_10005274: push %edi;");
    asm("loc_10005275: push %esi;");
    asm("loc_10005276: call _sub_100066F0;");
    asm("loc_1000527B: mov 0x34(%esi),%edx;");
    asm("loc_1000527E: mov %eax,0x3C(%esp);");
    asm("loc_10005282: mov 0x30(%esi),%eax;");
    asm("loc_10005285: add $0xC,%esp;");
    asm("loc_10005288: cmp %eax,%edx;");
    asm("loc_1000528A: mov %eax,0x20(%esp);");
    asm("loc_1000528E: jae loc_10005295;");
    asm("loc_10005290: sub %edx,%eax;");
    asm("loc_10005292: dec %eax;");
    asm("loc_10005293: jmp loc_1000529A;");
    asm("loc_10005295: mov 0x2C(%esi),%eax;");
    asm("loc_10005298: sub %edx,%eax;");
    asm("loc_1000529A: mov 0x2C(%esi),%ecx;");
    asm("loc_1000529D: cmp %ecx,%edx;");
    asm("loc_1000529F: mov %eax,0x14(%esp);");
    asm("loc_100052A3: mov %ecx,0x18(%esp);");
    asm("loc_100052A7: jne loc_100052CB;");
    asm("loc_100052A9: mov 0x28(%esi),%ecx;");
    asm("loc_100052AC: mov 0x20(%esp),%eax;");
    asm("loc_100052B0: cmp %ecx,%eax;");
    asm("loc_100052B2: je loc_100052C7;");
    asm("loc_100052B4: mov %ecx,%edx;");
    asm("loc_100052B6: cmp %eax,%edx;");
    asm("loc_100052B8: jae loc_100052BF;");
    asm("loc_100052BA: sub %edx,%eax;");
    asm("loc_100052BC: dec %eax;");
    asm("loc_100052BD: jmp loc_100052CB;");
    asm("loc_100052BF: mov 0x18(%esp),%eax;");
    asm("loc_100052C3: sub %edx,%eax;");
    asm("loc_100052C5: jmp loc_100052CB;");
    asm("loc_100052C7: mov 0x14(%esp),%eax;");
    asm("loc_100052CB: test %eax,%eax;");
    asm("loc_100052CD: je loc_1000539C;");
    asm("loc_100052D3: mov 0x10(%esp),%ecx;");
    asm("loc_100052D7: mov 8(%ecx),%cl;");
    asm("loc_100052DA: mov %cl,(%edx);");
    asm("loc_100052DC: mov 0x10(%esp),%ecx;");
    asm("loc_100052E0: inc %edx;");
    asm("loc_100052E1: dec %eax;");
    asm("loc_100052E2: movl $0,0x30(%esp);");
    asm("loc_100052EA: mov %eax,0x14(%esp);");
    asm("loc_100052EE: movl $0,(%ecx);");
    asm("loc_100052F4: mov 0x10(%esp),%ecx;");
    asm("loc_100052F8: mov (%ecx),%ecx;");
    asm("loc_100052FA: cmp $9,%ecx;");
    asm("loc_100052FD: jbe loc_10004DB0;");
    asm("loc_10005303: push $0xFFFFFFFE;");
    asm("loc_10005305: mov 0x2C(%esp),%ecx;");
    asm("loc_10005309: mov 0x30(%esp),%eax;");
    asm("loc_1000530D: mov %ecx,0x20(%esi);");
    asm("loc_10005310: mov %ebx,0x1C(%esi);");
    asm("loc_10005313: mov (%edi),%ebx;");
    asm("loc_10005315: mov %eax,4(%edi);");
    asm("loc_10005318: mov 8(%edi),%eax;");
    asm("loc_1000531B: mov %ebp,%ecx;");
    asm("loc_1000531D: sub %ebx,%ecx;");
    asm("loc_1000531F: add %ecx,%eax;");
    asm("loc_10005321: mov %eax,8(%edi);");
    asm("loc_10005324: push %edi;");
    asm("loc_10005325: mov %ebp,(%edi);");
    asm("loc_10005327: push %esi;");
    asm("loc_10005328: mov %edx,0x34(%esi);");
    asm("loc_1000532B: call _sub_100066F0;");
    asm("loc_10005330: add $0xC,%esp;");
    asm("loc_10005333: pop %edi;");
    asm("loc_10005334: pop %esi;");
    asm("loc_10005335: pop %ebp;");
    asm("loc_10005336: pop %ebx;");
    asm("loc_10005337: add $0x14,%esp;");
    asm("loc_1000533A: ret;");
    asm("loc_1000533B: movl $9,(%eax);");
    asm("loc_10005341: movl $_data_1000B230,0x18(%edi);");
    asm("loc_10005348: push $0xFFFFFFFD;");
    asm("loc_1000534A: jmp loc_10005305;");
    asm("loc_1000534C: mov 0x10(%esp),%eax;");
    asm("loc_10005350: movl $9,(%eax);");
    asm("loc_10005356: movl $_data_1000B218,0x18(%edi);");
    asm("loc_1000535D: push $0xFFFFFFFD;");
    asm("loc_1000535F: jmp loc_10005305;");
    asm("loc_10005361: mov 0x28(%esp),%eax;");
    asm("loc_10005365: mov %eax,0x20(%esi);");
    asm("loc_10005368: mov %ebx,0x1C(%esi);");
    asm("loc_1000536B: mov (%edi),%ebx;");
    asm("loc_1000536D: mov 8(%edi),%eax;");
    asm("loc_10005370: mov %ebp,%ecx;");
    asm("loc_10005372: sub %ebx,%ecx;");
    asm("loc_10005374: add %ecx,%eax;");
    asm("loc_10005376: movl $0,4(%edi);");
    asm("loc_1000537D: mov %eax,8(%edi);");
    asm("loc_10005380: mov %ebp,(%edi);");
    asm("loc_10005382: mov %edx,0x34(%esi);");
    asm("loc_10005385: mov 0x30(%esp),%edx;");
    asm("loc_10005389: push %edx;");
    asm("loc_1000538A: push %edi;");
    asm("loc_1000538B: push %esi;");
    asm("loc_1000538C: call _sub_100066F0;");
    asm("loc_10005391: add $0xC,%esp;");
    asm("loc_10005394: pop %edi;");
    asm("loc_10005395: pop %esi;");
    asm("loc_10005396: pop %ebp;");
    asm("loc_10005397: pop %ebx;");
    asm("loc_10005398: add $0x14,%esp;");
    asm("loc_1000539B: ret;");
    asm("loc_1000539C: mov 0x28(%esp),%eax;");
    asm("loc_100053A0: mov 0x2C(%esp),%ecx;");
    asm("loc_100053A4: mov %eax,0x20(%esi);");
    asm("loc_100053A7: mov %ebx,0x1C(%esi);");
    asm("loc_100053AA: mov (%edi),%ebx;");
    asm("loc_100053AC: mov %ecx,4(%edi);");
    asm("loc_100053AF: mov 8(%edi),%ecx;");
    asm("loc_100053B2: mov %ebp,%eax;");
    asm("loc_100053B4: sub %ebx,%eax;");
    asm("loc_100053B6: add %eax,%ecx;");
    asm("loc_100053B8: mov %ecx,8(%edi);");
    asm("loc_100053BB: mov 0x30(%esp),%ecx;");
    asm("loc_100053BF: push %ecx;");
    asm("loc_100053C0: jmp loc_10005324;");
    asm("loc_100053C5: cmp $7,%ebx;");
    asm("loc_100053C8: jbe loc_100053D7;");
    asm("loc_100053CA: mov 0x2C(%esp),%ecx;");
    asm("loc_100053CE: sub $8,%ebx;");
    asm("loc_100053D1: inc %ecx;");
    asm("loc_100053D2: mov %ecx,0x2C(%esp);");
    asm("loc_100053D6: dec %ebp;");
    asm("loc_100053D7: mov %edx,0x34(%esi);");
    asm("loc_100053DA: mov 0x30(%esp),%edx;");
    asm("loc_100053DE: push %edx;");
    asm("loc_100053DF: push %edi;");
    asm("loc_100053E0: push %esi;");
    asm("loc_100053E1: call _sub_100066F0;");
    asm("loc_100053E6: mov 0x34(%esi),%edx;");
    asm("loc_100053E9: mov 0x30(%esi),%ecx;");
    asm("loc_100053EC: add $0xC,%esp;");
    asm("loc_100053EF: cmp %edx,%ecx;");
    asm("loc_100053F1: je loc_10005413;");
    asm("loc_100053F3: mov 0x28(%esp),%ecx;");
    asm("loc_100053F7: mov %ecx,0x20(%esi);");
    asm("loc_100053FA: mov 0x2C(%esp),%ecx;");
    asm("loc_100053FE: mov %ebx,0x1C(%esi);");
    asm("loc_10005401: mov (%edi),%ebx;");
    asm("loc_10005403: mov %ecx,4(%edi);");
    asm("loc_10005406: mov %ebp,%ecx;");
    asm("loc_10005408: sub %ebx,%ecx;");
    asm("loc_1000540A: add %ecx,8(%edi);");
    asm("loc_1000540D: push %eax;");
    asm("loc_1000540E: jmp loc_10005324;");
    asm("loc_10005413: mov 0x10(%esp),%eax;");
    asm("loc_10005417: movl $8,(%eax);");
    asm("loc_1000541D: push $1;");
    asm("loc_1000541F: jmp loc_10005305;");
    asm("loc_10005424: mov 0x28(%esp),%eax;");
    asm("loc_10005428: mov 0x2C(%esp),%ecx;");
    asm("loc_1000542C: mov %eax,0x20(%esi);");
    asm("loc_1000542F: mov %ebx,0x1C(%esi);");
    asm("loc_10005432: mov (%edi),%ebx;");
    asm("loc_10005434: mov %ecx,4(%edi);");
    asm("loc_10005437: mov 8(%edi),%ecx;");
    asm("loc_1000543A: mov %ebp,%eax;");
    asm("loc_1000543C: sub %ebx,%eax;");
    asm("loc_1000543E: add %eax,%ecx;");
    asm("loc_10005440: mov %ecx,8(%edi);");
    asm("loc_10005443: push $0xFFFFFFFD;");
    asm("loc_10005445: jmp loc_10005324;");
    asm("int3;"); // unreachable
    asm("_jmp_1000544C: .long loc_10004DB7;");
    asm(".long loc_10004E76;");
    asm(".long loc_10004F62;");
    asm(".long loc_10004FDF;");
    asm(".long loc_100050A5;");
    asm(".long loc_10005113;");
    asm(".long loc_1000523A;");
    asm(".long loc_100053C5;");
    asm(".long loc_1000541D;");
    asm(".long loc_10005424;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_10004D60);
_naked _weak void _sub_10005480() // _sub_10005480
{
    __DEBUG_ASM(10005480);
    // chunk 0x10005480 _sub_10005480
    asm("loc_10005480: mov 4(%esp),%eax;");
    asm("loc_10005484: push %eax;");
    asm("loc_10005485: mov 0xC(%esp),%eax;");
    asm("loc_10005489: mov 0x28(%eax),%ecx;");
    asm("loc_1000548C: push %ecx;");
    asm("loc_1000548D: calll *0x24(%eax);");
    asm("loc_10005490: add $8,%esp;");
    asm("loc_10005493: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100054A0() // _sub_100054A0
{
    __DEBUG_ASM(100054A0);
    // chunk 0x100054A0 _sub_100054A0
    asm("loc_100054A0: sub $0x14,%esp;");
    asm("loc_100054A3: mov 0x28(%esp),%ecx;");
    asm("loc_100054A7: mov 0x2C(%esp),%eax;");
    asm("loc_100054AB: mov 0x20(%ecx),%edx;");
    asm("loc_100054AE: push %ebx;");
    asm("loc_100054AF: push %ebp;");
    asm("loc_100054B0: mov (%eax),%ebp;");
    asm("loc_100054B2: mov 4(%eax),%eax;");
    asm("loc_100054B5: push %esi;");
    asm("loc_100054B6: mov 0x30(%ecx),%esi;");
    asm("loc_100054B9: push %edi;");
    asm("loc_100054BA: mov 0x34(%ecx),%edi;");
    asm("loc_100054BD: cmp %esi,%edi;");
    asm("loc_100054BF: mov %eax,0x10(%esp);");
    asm("loc_100054C3: mov 0x1C(%ecx),%eax;");
    asm("loc_100054C6: mov %ebp,0x18(%esp);");
    asm("loc_100054CA: jae loc_100054D5;");
    asm("loc_100054CC: sub %edi,%esi;");
    asm("loc_100054CE: dec %esi;");
    asm("loc_100054CF: mov %esi,0x14(%esp);");
    asm("loc_100054D3: jmp loc_100054DE;");
    asm("loc_100054D5: mov 0x2C(%ecx),%ecx;");
    asm("loc_100054D8: sub %edi,%ecx;");
    asm("loc_100054DA: mov %ecx,0x14(%esp);");
    asm("loc_100054DE: mov 0x28(%esp),%ecx;");
    asm("loc_100054E2: mov _data_1000E120(,%ecx,4),%ecx;");
    asm("loc_100054E9: mov %ecx,0x1C(%esp);");
    asm("loc_100054ED: mov 0x2C(%esp),%ecx;");
    asm("loc_100054F1: mov _data_1000E120(,%ecx,4),%ecx;");
    asm("loc_100054F8: mov %ecx,0x2C(%esp);");
    asm("loc_100054FC: lea (%esp),%esp;");
    asm("loc_10005500: cmp $0x14,%eax;");
    asm("loc_10005503: jae loc_10005525;");
    asm("loc_10005505: mov 0x10(%esp),%ecx;");
    asm("loc_10005509: movzbl (%ebp),%esi;");
    asm("loc_1000550D: dec %ecx;");
    asm("loc_1000550E: mov %ecx,0x10(%esp);");
    asm("loc_10005512: mov %eax,%ecx;");
    asm("loc_10005514: shl %cl,%esi;");
    asm("loc_10005516: add $8,%eax;");
    asm("loc_10005519: or %esi,%edx;");
    asm("loc_1000551B: inc %ebp;");
    asm("loc_1000551C: cmp $0x14,%eax;");
    asm("loc_1000551F: jb loc_10005505;");
    asm("loc_10005521: mov %ebp,0x18(%esp);");
    asm("loc_10005525: mov 0x1C(%esp),%ecx;");
    asm("loc_10005529: mov 0x30(%esp),%esi;");
    asm("loc_1000552D: and %edx,%ecx;");
    asm("loc_1000552F: movzbl (%esi,%ecx,8),%ebx;");
    asm("loc_10005533: lea (%esi,%ecx,8),%esi;");
    asm("loc_10005536: movzbl 1(%esi),%ecx;");
    asm("loc_1000553A: shr %cl,%edx;");
    asm("loc_1000553C: test %ebx,%ebx;");
    asm("loc_1000553E: je loc_100056EF;");
    asm("loc_10005544: movzbl 1(%esi),%ecx;");
    asm("loc_10005548: sub %ecx,%eax;");
    asm("loc_1000554A: test $0x10,%bl;");
    asm("loc_1000554D: jne loc_10005587;");
    asm("loc_1000554F: nop;");
    asm("loc_10005550: test $0x40,%bl;");
    asm("loc_10005553: jne loc_10005779;");
    asm("loc_10005559: mov _data_1000E120(,%ebx,4),%ecx;");
    asm("loc_10005560: mov 4(%esi),%ebx;");
    asm("loc_10005563: and %edx,%ecx;");
    asm("loc_10005565: add %ebx,%ecx;");
    asm("loc_10005567: movzbl (%esi,%ecx,8),%ebx;");
    asm("loc_1000556B: lea (%esi,%ecx,8),%esi;");
    asm("loc_1000556E: movzbl 1(%esi),%ecx;");
    asm("loc_10005572: shr %cl,%edx;");
    asm("loc_10005574: test %ebx,%ebx;");
    asm("loc_10005576: je loc_100056EF;");
    asm("loc_1000557C: movzbl 1(%esi),%ecx;");
    asm("loc_10005580: sub %ecx,%eax;");
    asm("loc_10005582: test $0x10,%bl;");
    asm("loc_10005585: je loc_10005550;");
    asm("loc_10005587: and $0xF,%ebx;");
    asm("loc_1000558A: mov _data_1000E120(,%ebx,4),%ecx;");
    asm("loc_10005591: and %edx,%ecx;");
    asm("loc_10005593: add 4(%esi),%ecx;");
    asm("loc_10005596: sub %ebx,%eax;");
    asm("loc_10005598: mov %ecx,0x28(%esp);");
    asm("loc_1000559C: mov %ebx,%ecx;");
    asm("loc_1000559E: shr %cl,%edx;");
    asm("loc_100055A0: cmp $0xF,%eax;");
    asm("loc_100055A3: jae loc_100055C5;");
    asm("loc_100055A5: mov 0x10(%esp),%ecx;");
    asm("loc_100055A9: movzbl (%ebp),%esi;");
    asm("loc_100055AD: dec %ecx;");
    asm("loc_100055AE: mov %ecx,0x10(%esp);");
    asm("loc_100055B2: mov %eax,%ecx;");
    asm("loc_100055B4: shl %cl,%esi;");
    asm("loc_100055B6: add $8,%eax;");
    asm("loc_100055B9: or %esi,%edx;");
    asm("loc_100055BB: inc %ebp;");
    asm("loc_100055BC: cmp $0xF,%eax;");
    asm("loc_100055BF: jb loc_100055A5;");
    asm("loc_100055C1: mov %ebp,0x18(%esp);");
    asm("loc_100055C5: mov 0x2C(%esp),%ecx;");
    asm("loc_100055C9: mov 0x34(%esp),%esi;");
    asm("loc_100055CD: and %edx,%ecx;");
    asm("loc_100055CF: movzbl (%esi,%ecx,8),%ebx;");
    asm("loc_100055D3: lea (%esi,%ecx,8),%esi;");
    asm("loc_100055D6: movzbl 1(%esi),%ecx;");
    asm("loc_100055DA: shr %cl,%edx;");
    asm("loc_100055DC: movzbl 1(%esi),%ecx;");
    asm("loc_100055E0: sub %ecx,%eax;");
    asm("loc_100055E2: test $0x10,%bl;");
    asm("loc_100055E5: jne loc_10005616;");
    asm("loc_100055E7: test $0x40,%bl;");
    asm("loc_100055EA: jne loc_10005768;");
    asm("loc_100055F0: mov _data_1000E120(,%ebx,4),%ecx;");
    asm("loc_100055F7: mov 4(%esi),%ebx;");
    asm("loc_100055FA: and %edx,%ecx;");
    asm("loc_100055FC: add %ebx,%ecx;");
    asm("loc_100055FE: movzbl (%esi,%ecx,8),%ebx;");
    asm("loc_10005602: lea (%esi,%ecx,8),%esi;");
    asm("loc_10005605: movzbl 1(%esi),%ecx;");
    asm("loc_10005609: shr %cl,%edx;");
    asm("loc_1000560B: sub %ecx,%eax;");
    asm("loc_1000560D: test $0x10,%bl;");
    asm("loc_10005610: mov %ecx,0x20(%esp);");
    asm("loc_10005614: je loc_100055E7;");
    asm("loc_10005616: and $0xF,%ebx;");
    asm("loc_10005619: cmp %ebx,%eax;");
    asm("loc_1000561B: jae loc_10005643;");
    asm("loc_1000561D: lea (%ecx),%ecx;");
    asm("loc_10005620: mov 0x10(%esp),%ecx;");
    asm("loc_10005624: movzbl (%ebp),%ebp;");
    asm("loc_10005628: dec %ecx;");
    asm("loc_10005629: mov %ecx,0x10(%esp);");
    asm("loc_1000562D: mov %eax,%ecx;");
    asm("loc_1000562F: shl %cl,%ebp;");
    asm("loc_10005631: add $8,%eax;");
    asm("loc_10005634: or %ebp,%edx;");
    asm("loc_10005636: mov 0x18(%esp),%ebp;");
    asm("loc_1000563A: inc %ebp;");
    asm("loc_1000563B: cmp %ebx,%eax;");
    asm("loc_1000563D: mov %ebp,0x18(%esp);");
    asm("loc_10005641: jb loc_10005620;");
    asm("loc_10005643: mov 4(%esi),%ecx;");
    asm("loc_10005646: mov _data_1000E120(,%ebx,4),%ebp;");
    asm("loc_1000564D: mov 0x14(%esp),%esi;");
    asm("loc_10005651: and %edx,%ebp;");
    asm("loc_10005653: add %ecx,%ebp;");
    asm("loc_10005655: mov %ebx,%ecx;");
    asm("loc_10005657: shr %cl,%edx;");
    asm("loc_10005659: mov 0x28(%esp),%ecx;");
    asm("loc_1000565D: sub %ecx,%esi;");
    asm("loc_1000565F: mov %esi,0x14(%esp);");
    asm("loc_10005663: mov %edi,%esi;");
    asm("loc_10005665: sub %ebp,%esi;");
    asm("loc_10005667: mov 0x38(%esp),%ebp;");
    asm("loc_1000566B: sub %ebx,%eax;");
    asm("loc_1000566D: mov 0x28(%ebp),%ebx;");
    asm("loc_10005670: cmp %ebx,%esi;");
    asm("loc_10005672: jae loc_100056D0;");
    asm("loc_10005674: mov 0x2C(%ebp),%ebp;");
    asm("loc_10005677: mov %ebp,0x28(%esp);");
    asm("loc_1000567B: sub %ebx,%ebp;");
    asm("loc_1000567D: lea (%ecx),%ecx;");
    asm("loc_10005680: add %ebp,%esi;");
    asm("loc_10005682: cmp %ebx,%esi;");
    asm("loc_10005684: jb loc_10005680;");
    asm("loc_10005686: mov 0x28(%esp),%ebp;");
    asm("loc_1000568A: sub %esi,%ebp;");
    asm("loc_1000568C: cmp %ebp,%ecx;");
    asm("loc_1000568E: jbe loc_100056B1;");
    asm("loc_10005690: sub %ebp,%ecx;");
    asm("loc_10005692: mov (%esi),%bl;");
    asm("loc_10005694: mov %bl,(%edi);");
    asm("loc_10005696: inc %edi;");
    asm("loc_10005697: inc %esi;");
    asm("loc_10005698: dec %ebp;");
    asm("loc_10005699: jne loc_10005692;");
    asm("loc_1000569B: mov 0x38(%esp),%esi;");
    asm("loc_1000569F: mov 0x28(%esi),%esi;");
    asm("loc_100056A2: mov (%esi),%bl;");
    asm("loc_100056A4: mov %bl,(%edi);");
    asm("loc_100056A6: inc %edi;");
    asm("loc_100056A7: inc %esi;");
    asm("loc_100056A8: dec %ecx;");
    asm("loc_100056A9: jne loc_100056A2;");
    asm("loc_100056AB: mov 0x18(%esp),%ebp;");
    asm("loc_100056AF: jmp loc_10005700;");
    asm("loc_100056B1: mov (%esi),%bl;");
    asm("loc_100056B3: mov %bl,(%edi);");
    asm("loc_100056B5: mov 1(%esi),%bl;");
    asm("loc_100056B8: inc %edi;");
    asm("loc_100056B9: inc %esi;");
    asm("loc_100056BA: mov %bl,(%edi);");
    asm("loc_100056BC: inc %edi;");
    asm("loc_100056BD: inc %esi;");
    asm("loc_100056BE: sub $2,%ecx;");
    asm("loc_100056C1: mov (%esi),%bl;");
    asm("loc_100056C3: mov %bl,(%edi);");
    asm("loc_100056C5: inc %edi;");
    asm("loc_100056C6: inc %esi;");
    asm("loc_100056C7: dec %ecx;");
    asm("loc_100056C8: jne loc_100056C1;");
    asm("loc_100056CA: mov 0x18(%esp),%ebp;");
    asm("loc_100056CE: jmp loc_10005700;");
    asm("loc_100056D0: mov (%esi),%bl;");
    asm("loc_100056D2: mov %bl,(%edi);");
    asm("loc_100056D4: mov 1(%esi),%bl;");
    asm("loc_100056D7: inc %edi;");
    asm("loc_100056D8: inc %esi;");
    asm("loc_100056D9: mov %bl,(%edi);");
    asm("loc_100056DB: inc %edi;");
    asm("loc_100056DC: inc %esi;");
    asm("loc_100056DD: sub $2,%ecx;");
    asm("loc_100056E0: mov (%esi),%bl;");
    asm("loc_100056E2: mov %bl,(%edi);");
    asm("loc_100056E4: inc %edi;");
    asm("loc_100056E5: inc %esi;");
    asm("loc_100056E6: dec %ecx;");
    asm("loc_100056E7: jne loc_100056E0;");
    asm("loc_100056E9: mov 0x18(%esp),%ebp;");
    asm("loc_100056ED: jmp loc_10005700;");
    asm("loc_100056EF: sub %ecx,%eax;");
    asm("loc_100056F1: mov 4(%esi),%cl;");
    asm("loc_100056F4: mov %cl,(%edi);");
    asm("loc_100056F6: mov 0x14(%esp),%ecx;");
    asm("loc_100056FA: inc %edi;");
    asm("loc_100056FB: dec %ecx;");
    asm("loc_100056FC: mov %ecx,0x14(%esp);");
    asm("loc_10005700: cmpl $0x102,0x14(%esp);");
    asm("loc_10005708: jb loc_10005715;");
    asm("loc_1000570A: cmpl $0xA,0x10(%esp);");
    asm("loc_1000570F: jae loc_10005500;");
    asm("loc_10005715: mov 0x3C(%esp),%esi;");
    asm("loc_10005719: mov 0x10(%esp),%ebx;");
    asm("loc_1000571D: mov 4(%esi),%ecx;");
    asm("loc_10005720: sub %ebx,%ecx;");
    asm("loc_10005722: mov %eax,%ebx;");
    asm("loc_10005724: shr $3,%ebx;");
    asm("loc_10005727: cmp %ecx,%ebx;");
    asm("loc_10005729: jae loc_1000572D;");
    asm("loc_1000572B: mov %ebx,%ecx;");
    asm("loc_1000572D: mov 0x38(%esp),%ebx;");
    asm("loc_10005731: mov %edx,0x20(%ebx);");
    asm("loc_10005734: lea (,%ecx,8),%edx;");
    asm("loc_1000573B: sub %edx,%eax;");
    asm("loc_1000573D: mov %eax,0x1C(%ebx);");
    asm("loc_10005740: mov 0x10(%esp),%eax;");
    asm("loc_10005744: mov (%esi),%edx;");
    asm("loc_10005746: sub %ecx,%ebp;");
    asm("loc_10005748: add %eax,%ecx;");
    asm("loc_1000574A: mov 8(%esi),%eax;");
    asm("loc_1000574D: mov %ecx,4(%esi);");
    asm("loc_10005750: mov %ebp,%ecx;");
    asm("loc_10005752: sub %edx,%ecx;");
    asm("loc_10005754: add %ecx,%eax;");
    asm("loc_10005756: mov %eax,8(%esi);");
    asm("loc_10005759: mov %ebp,(%esi);");
    asm("loc_1000575B: mov %edi,0x34(%ebx);");
    asm("loc_1000575E: pop %edi;");
    asm("loc_1000575F: pop %esi;");
    asm("loc_10005760: pop %ebp;");
    asm("loc_10005761: xor %eax,%eax;");
    asm("loc_10005763: pop %ebx;");
    asm("loc_10005764: add $0x14,%esp;");
    asm("loc_10005767: ret;");
    asm("loc_10005768: mov 0x3C(%esp),%ecx;");
    asm("loc_1000576C: mov 0x10(%esp),%ebx;");
    asm("loc_10005770: movl $_data_1000B218,0x18(%ecx);");
    asm("loc_10005777: jmp loc_100057DF;");
    asm("loc_10005779: test $0x20,%bl;");
    asm("loc_1000577C: mov 0x10(%esp),%ebx;");
    asm("loc_10005780: je loc_100057D4;");
    asm("loc_10005782: mov 0x3C(%esp),%esi;");
    asm("loc_10005786: mov 4(%esi),%ecx;");
    asm("loc_10005789: sub %ebx,%ecx;");
    asm("loc_1000578B: mov %eax,%ebx;");
    asm("loc_1000578D: shr $3,%ebx;");
    asm("loc_10005790: cmp %ecx,%ebx;");
    asm("loc_10005792: jae loc_10005796;");
    asm("loc_10005794: mov %ebx,%ecx;");
    asm("loc_10005796: mov 0x38(%esp),%ebx;");
    asm("loc_1000579A: mov %edx,0x20(%ebx);");
    asm("loc_1000579D: lea (,%ecx,8),%edx;");
    asm("loc_100057A4: sub %edx,%eax;");
    asm("loc_100057A6: mov %eax,0x1C(%ebx);");
    asm("loc_100057A9: mov 0x10(%esp),%eax;");
    asm("loc_100057AD: mov (%esi),%edx;");
    asm("loc_100057AF: sub %ecx,%ebp;");
    asm("loc_100057B1: add %eax,%ecx;");
    asm("loc_100057B3: mov 8(%esi),%eax;");
    asm("loc_100057B6: mov %ecx,4(%esi);");
    asm("loc_100057B9: mov %ebp,%ecx;");
    asm("loc_100057BB: sub %edx,%ecx;");
    asm("loc_100057BD: add %ecx,%eax;");
    asm("loc_100057BF: mov %eax,8(%esi);");
    asm("loc_100057C2: mov %ebp,(%esi);");
    asm("loc_100057C4: mov %edi,0x34(%ebx);");
    asm("loc_100057C7: pop %edi;");
    asm("loc_100057C8: pop %esi;");
    asm("loc_100057C9: pop %ebp;");
    asm("loc_100057CA: mov $1,%eax;");
    asm("loc_100057CF: pop %ebx;");
    asm("loc_100057D0: add $0x14,%esp;");
    asm("loc_100057D3: ret;");
    asm("loc_100057D4: mov 0x3C(%esp),%ecx;");
    asm("loc_100057D8: movl $_data_1000B230,0x18(%ecx);");
    asm("loc_100057DF: mov 4(%ecx),%esi;");
    asm("loc_100057E2: sub %ebx,%esi;");
    asm("loc_100057E4: mov %esi,0x28(%esp);");
    asm("loc_100057E8: mov 0x28(%esp),%ebx;");
    asm("loc_100057EC: mov %eax,%esi;");
    asm("loc_100057EE: shr $3,%esi;");
    asm("loc_100057F1: cmp %ebx,%esi;");
    asm("loc_100057F3: jb loc_100057F7;");
    asm("loc_100057F5: mov %ebx,%esi;");
    asm("loc_100057F7: mov 0x38(%esp),%ebx;");
    asm("loc_100057FB: mov %edx,0x20(%ebx);");
    asm("loc_100057FE: lea (,%esi,8),%edx;");
    asm("loc_10005805: sub %edx,%eax;");
    asm("loc_10005807: mov %eax,0x1C(%ebx);");
    asm("loc_1000580A: mov 0x10(%esp),%eax;");
    asm("loc_1000580E: sub %esi,%ebp;");
    asm("loc_10005810: add %eax,%esi;");
    asm("loc_10005812: mov 8(%ecx),%eax;");
    asm("loc_10005815: mov %esi,4(%ecx);");
    asm("loc_10005818: mov (%ecx),%esi;");
    asm("loc_1000581A: mov %ebp,%edx;");
    asm("loc_1000581C: sub %esi,%edx;");
    asm("loc_1000581E: add %edx,%eax;");
    asm("loc_10005820: mov %ebp,(%ecx);");
    asm("loc_10005822: mov %eax,8(%ecx);");
    asm("loc_10005825: mov %edi,0x34(%ebx);");
    asm("loc_10005828: pop %edi;");
    asm("loc_10005829: pop %esi;");
    asm("loc_1000582A: pop %ebp;");
    asm("loc_1000582B: mov $0xFFFFFFFD,%eax;");
    asm("loc_10005830: pop %ebx;");
    asm("loc_10005831: add $0x14,%esp;");
    asm("loc_10005834: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10005840() // _inflateReset
{
    __DEBUG_ASM(10005840);
    // chunk 0x10005840 _sub_10005840
    asm("loc_10005840: mov 4(%esp),%eax;");
    asm("loc_10005844: xor %edx,%edx;");
    asm("loc_10005846: cmp %edx,%eax;");
    asm("loc_10005848: je loc_1000587E;");
    asm("loc_1000584A: mov 0x1C(%eax),%ecx;");
    asm("loc_1000584D: cmp %edx,%ecx;");
    asm("loc_1000584F: je loc_1000587E;");
    asm("loc_10005851: push %esi;");
    asm("loc_10005852: mov %edx,0x14(%eax);");
    asm("loc_10005855: mov %edx,8(%eax);");
    asm("loc_10005858: mov %edx,0x18(%eax);");
    asm("loc_1000585B: mov 0xC(%ecx),%esi;");
    asm("loc_1000585E: neg %esi;");
    asm("loc_10005860: sbb %esi,%esi;");
    asm("loc_10005862: push %edx;");
    asm("loc_10005863: and $7,%esi;");
    asm("loc_10005866: mov %esi,(%ecx);");
    asm("loc_10005868: push %eax;");
    asm("loc_10005869: mov 0x1C(%eax),%eax;");
    asm("loc_1000586C: mov 0x14(%eax),%ecx;");
    asm("loc_1000586F: push %ecx;");
    asm("loc_10005870: call _sub_10004010;");
    asm("loc_10005875: add $0xC,%esp;");
    asm("loc_10005878: xor %eax,%eax;");
    asm("loc_1000587A: pop %esi;");
    asm("loc_1000587B: ret $4;");
    asm("loc_1000587E: mov $0xFFFFFFFE,%eax;");
    asm("loc_10005883: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10005890() // _inflateEnd
{
    __DEBUG_ASM(10005890);
    // chunk 0x10005890 _sub_10005890
    asm("loc_10005890: push %esi;");
    asm("loc_10005891: mov 8(%esp),%esi;");
    asm("loc_10005895: test %esi,%esi;");
    asm("loc_10005897: je loc_100058D3;");
    asm("loc_10005899: mov 0x1C(%esi),%eax;");
    asm("loc_1000589C: test %eax,%eax;");
    asm("loc_1000589E: je loc_100058D3;");
    asm("loc_100058A0: mov 0x24(%esi),%ecx;");
    asm("loc_100058A3: test %ecx,%ecx;");
    asm("loc_100058A5: je loc_100058D3;");
    asm("loc_100058A7: mov 0x14(%eax),%eax;");
    asm("loc_100058AA: test %eax,%eax;");
    asm("loc_100058AC: je loc_100058B8;");
    asm("loc_100058AE: push %esi;");
    asm("loc_100058AF: push %eax;");
    asm("loc_100058B0: call _sub_10004C90;");
    asm("loc_100058B5: add $8,%esp;");
    asm("loc_100058B8: mov 0x1C(%esi),%eax;");
    asm("loc_100058BB: mov 0x28(%esi),%ecx;");
    asm("loc_100058BE: push %eax;");
    asm("loc_100058BF: push %ecx;");
    asm("loc_100058C0: calll *0x24(%esi);");
    asm("loc_100058C3: add $8,%esp;");
    asm("loc_100058C6: movl $0,0x1C(%esi);");
    asm("loc_100058CD: xor %eax,%eax;");
    asm("loc_100058CF: pop %esi;");
    asm("loc_100058D0: ret $4;");
    asm("loc_100058D3: mov $0xFFFFFFFE,%eax;");
    asm("loc_100058D8: pop %esi;");
    asm("loc_100058D9: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100058E0() // _inflateInit2_
{
    __DEBUG_ASM(100058E0);
    // chunk 0x100058E0 _sub_100058E0
    asm("loc_100058E0: mov 0xC(%esp),%eax;");
    asm("loc_100058E4: push %esi;");
    asm("loc_100058E5: push %edi;");
    asm("loc_100058E6: xor %edi,%edi;");
    asm("loc_100058E8: cmp %edi,%eax;");
    asm("loc_100058EA: je loc_100059D0;");
    asm("loc_100058F0: cmpb $0x31,(%eax);");
    asm("loc_100058F3: jne loc_100059D0;");
    asm("loc_100058F9: cmpl $0x38,0x18(%esp);");
    asm("loc_100058FE: jne loc_100059D0;");
    asm("loc_10005904: mov 0xC(%esp),%esi;");
    asm("loc_10005908: cmp %edi,%esi;");
    asm("loc_1000590A: je loc_100059C6;");
    asm("loc_10005910: cmp %edi,0x20(%esi);");
    asm("loc_10005913: mov %edi,0x18(%esi);");
    asm("loc_10005916: jne loc_10005922;");
    asm("loc_10005918: movl $_sub_1000A3D0,0x20(%esi);");
    asm("loc_1000591F: mov %edi,0x28(%esi);");
    asm("loc_10005922: cmp %edi,0x24(%esi);");
    asm("loc_10005925: jne loc_1000592E;");
    asm("loc_10005927: movl $_sub_1000A3F0,0x24(%esi);");
    asm("loc_1000592E: mov 0x28(%esi),%eax;");
    asm("loc_10005931: push $0x18;");
    asm("loc_10005933: push $1;");
    asm("loc_10005935: push %eax;");
    asm("loc_10005936: calll *0x20(%esi);");
    asm("loc_10005939: add $0xC,%esp;");
    asm("loc_1000593C: cmp %edi,%eax;");
    asm("loc_1000593E: mov %eax,0x1C(%esi);");
    asm("loc_10005941: je loc_100059AA;");
    asm("loc_10005943: mov %edi,0x14(%eax);");
    asm("loc_10005946: mov 0x1C(%esi),%ecx;");
    asm("loc_10005949: mov %edi,0xC(%ecx);");
    asm("loc_1000594C: mov 0x10(%esp),%ecx;");
    asm("loc_10005950: cmp %edi,%ecx;");
    asm("loc_10005952: jge loc_10005960;");
    asm("loc_10005954: mov 0x1C(%esi),%edx;");
    asm("loc_10005957: neg %ecx;");
    asm("loc_10005959: movl $1,0xC(%edx);");
    asm("loc_10005960: cmp $8,%ecx;");
    asm("loc_10005963: jl loc_100059C0;");
    asm("loc_10005965: cmp $0xF,%ecx;");
    asm("loc_10005968: jg loc_100059C0;");
    asm("loc_1000596A: mov 0x1C(%esi),%eax;");
    asm("loc_1000596D: mov %ecx,0x10(%eax);");
    asm("loc_10005970: mov 0x1C(%esi),%eax;");
    asm("loc_10005973: mov $1,%edx;");
    asm("loc_10005978: shl %cl,%edx;");
    asm("loc_1000597A: xor %ecx,%ecx;");
    asm("loc_1000597C: push %edx;");
    asm("loc_1000597D: cmp %edi,0xC(%eax);");
    asm("loc_10005980: setne %cl;");
    asm("loc_10005983: dec %ecx;");
    asm("loc_10005984: and $_sub_10001710,%ecx;");
    asm("loc_1000598A: push %ecx;");
    asm("loc_1000598B: push %esi;");
    asm("loc_1000598C: call _sub_10004090;");
    asm("loc_10005991: mov 0x1C(%esi),%edx;");
    asm("loc_10005994: mov %eax,0x14(%edx);");
    asm("loc_10005997: mov 0x1C(%esi),%eax;");
    asm("loc_1000599A: mov 0x14(%eax),%ecx;");
    asm("loc_1000599D: add $0xC,%esp;");
    asm("loc_100059A0: cmp %edi,%ecx;");
    asm("loc_100059A2: push %esi;");
    asm("loc_100059A3: jne loc_100059B4;");
    asm("loc_100059A5: call _sub_10005890;");
    asm("loc_100059AA: pop %edi;");
    asm("loc_100059AB: mov $0xFFFFFFFC,%eax;");
    asm("loc_100059B0: pop %esi;");
    asm("loc_100059B1: ret $0x10;");
    asm("loc_100059B4: call _sub_10005840;");
    asm("loc_100059B9: pop %edi;");
    asm("loc_100059BA: xor %eax,%eax;");
    asm("loc_100059BC: pop %esi;");
    asm("loc_100059BD: ret $0x10;");
    asm("loc_100059C0: push %esi;");
    asm("loc_100059C1: call _sub_10005890;");
    asm("loc_100059C6: pop %edi;");
    asm("loc_100059C7: mov $0xFFFFFFFE,%eax;");
    asm("loc_100059CC: pop %esi;");
    asm("loc_100059CD: ret $0x10;");
    asm("loc_100059D0: pop %edi;");
    asm("loc_100059D1: mov $0xFFFFFFFA,%eax;");
    asm("loc_100059D6: pop %esi;");
    asm("loc_100059D7: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100059E0() // _inflateInit_
{
    __DEBUG_ASM(100059E0);
    // chunk 0x100059E0 _sub_100059E0
    asm("loc_100059E0: mov 0xC(%esp),%eax;");
    asm("loc_100059E4: mov 8(%esp),%ecx;");
    asm("loc_100059E8: mov 4(%esp),%edx;");
    asm("loc_100059EC: push %eax;");
    asm("loc_100059ED: push %ecx;");
    asm("loc_100059EE: push $0xF;");
    asm("loc_100059F0: push %edx;");
    asm("loc_100059F1: call _sub_100058E0;");
    asm("loc_100059F6: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10005A00() // _inflate
{
    asm("jmp dgb_10005A00;"); // jumptable skip
    asm(".long _jmp_10005DC8;"); // jumptable address
    __DEBUG_ASM(10005A00);
    // chunk 0x10005A00 _sub_10005A00
    asm("loc_10005A00: push %ebx;");
    asm("loc_10005A01: push %ebp;");
    asm("loc_10005A02: push %esi;");
    asm("loc_10005A03: mov 0x10(%esp),%esi;");
    asm("loc_10005A07: test %esi,%esi;");
    asm("loc_10005A09: push %edi;");
    asm("loc_10005A0A: je loc_10005C98;");
    asm("loc_10005A10: mov 0x1C(%esi),%eax;");
    asm("loc_10005A13: test %eax,%eax;");
    asm("loc_10005A15: je loc_10005C98;");
    asm("loc_10005A1B: cmpl $0,(%esi);");
    asm("loc_10005A1E: je loc_10005C98;");
    asm("loc_10005A24: mov 0x18(%esp),%ebx;");
    asm("loc_10005A28: mov (%eax),%eax;");
    asm("loc_10005A2A: xor %ecx,%ecx;");
    asm("loc_10005A2C: cmp $4,%ebx;");
    asm("loc_10005A2F: setne %cl;");
    asm("loc_10005A32: mov $0xFFFFFFFB,%edi;");
    asm("loc_10005A37: dec %ecx;");
    asm("loc_10005A38: and $0xFFFFFFFB,%ecx;");
    asm("loc_10005A3B: cmp $0xD,%eax;");
    asm("loc_10005A3E: mov %ecx,%ebp;");
    asm("loc_10005A40: ja loc_10005C98;");
    asm("loc_10005A46: mov $5,%ebx;");
    asm("loc_10005A4B: jmp loc_10005A50;");
    asm("loc_10005A4D: lea (%ecx),%ecx;");
    asm("loc_10005A50: jmpl *_jmp_10005DC8(,%eax,4);");
    asm("loc_10005A57: mov 4(%esi),%eax;");
    asm("loc_10005A5A: test %eax,%eax;");
    asm("loc_10005A5C: je loc_10005CA4;");
    asm("loc_10005A62: mov 8(%esi),%edx;");
    asm("loc_10005A65: mov 0x1C(%esi),%ecx;");
    asm("loc_10005A68: dec %eax;");
    asm("loc_10005A69: inc %edx;");
    asm("loc_10005A6A: mov %edx,8(%esi);");
    asm("loc_10005A6D: mov (%esi),%edx;");
    asm("loc_10005A6F: mov %eax,4(%esi);");
    asm("loc_10005A72: movzbl (%edx),%eax;");
    asm("loc_10005A75: mov %eax,4(%ecx);");
    asm("loc_10005A78: mov 0x1C(%esi),%eax;");
    asm("loc_10005A7B: mov 4(%eax),%edx;");
    asm("loc_10005A7E: mov (%esi),%ecx;");
    asm("loc_10005A80: and $0xF,%dl;");
    asm("loc_10005A83: inc %ecx;");
    asm("loc_10005A84: cmp $8,%dl;");
    asm("loc_10005A87: mov %ebp,%edi;");
    asm("loc_10005A89: mov %ecx,(%esi);");
    asm("loc_10005A8B: je loc_10005AA5;");
    asm("loc_10005A8D: movl $0xD,(%eax);");
    asm("loc_10005A93: mov 0x1C(%esi),%eax;");
    asm("loc_10005A96: movl $_data_1000B2A4,0x18(%esi);");
    asm("loc_10005A9D: mov %ebx,4(%eax);");
    asm("loc_10005AA0: jmp loc_10005C8A;");
    asm("loc_10005AA5: mov 4(%eax),%ecx;");
    asm("loc_10005AA8: mov 0x10(%eax),%edx;");
    asm("loc_10005AAB: shr $4,%ecx;");
    asm("loc_10005AAE: add $8,%ecx;");
    asm("loc_10005AB1: cmp %edx,%ecx;");
    asm("loc_10005AB3: jbe loc_10005AC7;");
    asm("loc_10005AB5: movl $0xD,(%eax);");
    asm("loc_10005ABB: movl $_data_1000B290,0x18(%esi);");
    asm("loc_10005AC2: jmp loc_10005C84;");
    asm("loc_10005AC7: movl $1,(%eax);");
    asm("loc_10005ACD: mov 4(%esi),%eax;");
    asm("loc_10005AD0: test %eax,%eax;");
    asm("loc_10005AD2: je loc_10005CA4;");
    asm("loc_10005AD8: mov 0x1C(%esi),%ecx;");
    asm("loc_10005ADB: dec %eax;");
    asm("loc_10005ADC: mov %eax,4(%esi);");
    asm("loc_10005ADF: incl 8(%esi);");
    asm("loc_10005AE2: mov (%esi),%eax;");
    asm("loc_10005AE4: movzbl (%eax),%edx;");
    asm("loc_10005AE7: inc %eax;");
    asm("loc_10005AE8: mov %eax,(%esi);");
    asm("loc_10005AEA: mov 4(%ecx),%eax;");
    asm("loc_10005AED: shl $8,%eax;");
    asm("loc_10005AF0: add %edx,%eax;");
    asm("loc_10005AF2: mov %edx,0x14(%esp);");
    asm("loc_10005AF6: xor %edx,%edx;");
    asm("loc_10005AF8: mov $0x1F,%ebx;");
    asm("loc_10005AFD: div %ebx;");
    asm("loc_10005AFF: mov %ebp,%edi;");
    asm("loc_10005B01: mov $5,%ebx;");
    asm("loc_10005B06: test %edx,%edx;");
    asm("loc_10005B08: je loc_10005B22;");
    asm("loc_10005B0A: movl $0xD,(%ecx);");
    asm("loc_10005B10: mov 0x1C(%esi),%eax;");
    asm("loc_10005B13: movl $_data_1000B278,0x18(%esi);");
    asm("loc_10005B1A: mov %ebx,4(%eax);");
    asm("loc_10005B1D: jmp loc_10005C8A;");
    asm("loc_10005B22: testb $0x20,0x14(%esp);");
    asm("loc_10005B27: jne loc_10005CAD;");
    asm("loc_10005B2D: movl $7,(%ecx);");
    asm("loc_10005B33: jmp loc_10005C8A;");
    asm("loc_10005B38: mov 0x1C(%esi),%ecx;");
    asm("loc_10005B3B: mov 0x14(%ecx),%edx;");
    asm("loc_10005B3E: push %edi;");
    asm("loc_10005B3F: push %esi;");
    asm("loc_10005B40: push %edx;");
    asm("loc_10005B41: call _sub_10004130;");
    asm("loc_10005B46: mov %eax,%edi;");
    asm("loc_10005B48: add $0xC,%esp;");
    asm("loc_10005B4B: cmp $0xFFFFFFFD,%edi;");
    asm("loc_10005B4E: jne loc_10005B68;");
    asm("loc_10005B50: mov 0x1C(%esi),%eax;");
    asm("loc_10005B53: movl $0xD,(%eax);");
    asm("loc_10005B59: mov 0x1C(%esi),%ecx;");
    asm("loc_10005B5C: movl $0,4(%ecx);");
    asm("loc_10005B63: jmp loc_10005C8A;");
    asm("loc_10005B68: test %edi,%edi;");
    asm("loc_10005B6A: jne loc_10005B6E;");
    asm("loc_10005B6C: mov %ebp,%edi;");
    asm("loc_10005B6E: cmp $1,%edi;");
    asm("loc_10005B71: jne loc_10005CA4;");
    asm("loc_10005B77: mov 0x1C(%esi),%eax;");
    asm("loc_10005B7A: lea 4(%eax),%edx;");
    asm("loc_10005B7D: mov 0x14(%eax),%eax;");
    asm("loc_10005B80: push %edx;");
    asm("loc_10005B81: push %esi;");
    asm("loc_10005B82: push %eax;");
    asm("loc_10005B83: mov %ebp,%edi;");
    asm("loc_10005B85: call _sub_10004010;");
    asm("loc_10005B8A: mov 0x1C(%esi),%eax;");
    asm("loc_10005B8D: mov 0xC(%eax),%ecx;");
    asm("loc_10005B90: add $0xC,%esp;");
    asm("loc_10005B93: test %ecx,%ecx;");
    asm("loc_10005B95: je loc_10005BA2;");
    asm("loc_10005B97: movl $0xC,(%eax);");
    asm("loc_10005B9D: jmp loc_10005C8A;");
    asm("loc_10005BA2: movl $8,(%eax);");
    asm("loc_10005BA8: mov 4(%esi),%eax;");
    asm("loc_10005BAB: test %eax,%eax;");
    asm("loc_10005BAD: je loc_10005CA4;");
    asm("loc_10005BB3: mov 8(%esi),%edx;");
    asm("loc_10005BB6: mov (%esi),%ecx;");
    asm("loc_10005BB8: dec %eax;");
    asm("loc_10005BB9: mov %eax,4(%esi);");
    asm("loc_10005BBC: mov 0x1C(%esi),%eax;");
    asm("loc_10005BBF: inc %edx;");
    asm("loc_10005BC0: mov %edx,8(%esi);");
    asm("loc_10005BC3: movzbl (%ecx),%edx;");
    asm("loc_10005BC6: shl $0x18,%edx;");
    asm("loc_10005BC9: mov %edx,8(%eax);");
    asm("loc_10005BCC: mov (%esi),%eax;");
    asm("loc_10005BCE: mov 0x1C(%esi),%ecx;");
    asm("loc_10005BD1: inc %eax;");
    asm("loc_10005BD2: mov %eax,(%esi);");
    asm("loc_10005BD4: mov %ebp,%edi;");
    asm("loc_10005BD6: movl $9,(%ecx);");
    asm("loc_10005BDC: mov 4(%esi),%eax;");
    asm("loc_10005BDF: test %eax,%eax;");
    asm("loc_10005BE1: je loc_10005CA4;");
    asm("loc_10005BE7: mov (%esi),%edx;");
    asm("loc_10005BE9: dec %eax;");
    asm("loc_10005BEA: mov %eax,4(%esi);");
    asm("loc_10005BED: incl 8(%esi);");
    asm("loc_10005BF0: movzbl (%edx),%ecx;");
    asm("loc_10005BF3: mov 0x1C(%esi),%eax;");
    asm("loc_10005BF6: mov 8(%eax),%edx;");
    asm("loc_10005BF9: shl $0x10,%ecx;");
    asm("loc_10005BFC: add %ecx,%edx;");
    asm("loc_10005BFE: mov %edx,8(%eax);");
    asm("loc_10005C01: mov (%esi),%eax;");
    asm("loc_10005C03: mov 0x1C(%esi),%edx;");
    asm("loc_10005C06: inc %eax;");
    asm("loc_10005C07: mov %eax,(%esi);");
    asm("loc_10005C09: mov %ebp,%edi;");
    asm("loc_10005C0B: movl $0xA,(%edx);");
    asm("loc_10005C11: mov 4(%esi),%eax;");
    asm("loc_10005C14: test %eax,%eax;");
    asm("loc_10005C16: je loc_10005CA4;");
    asm("loc_10005C1C: mov 8(%esi),%edx;");
    asm("loc_10005C1F: mov (%esi),%ecx;");
    asm("loc_10005C21: dec %eax;");
    asm("loc_10005C22: mov %eax,4(%esi);");
    asm("loc_10005C25: mov 0x1C(%esi),%eax;");
    asm("loc_10005C28: inc %edx;");
    asm("loc_10005C29: mov %edx,8(%esi);");
    asm("loc_10005C2C: movzbl (%ecx),%edx;");
    asm("loc_10005C2F: mov 8(%eax),%ecx;");
    asm("loc_10005C32: shl $8,%edx;");
    asm("loc_10005C35: add %edx,%ecx;");
    asm("loc_10005C37: mov %ecx,8(%eax);");
    asm("loc_10005C3A: incl (%esi);");
    asm("loc_10005C3C: mov 0x1C(%esi),%eax;");
    asm("loc_10005C3F: mov %ebp,%edi;");
    asm("loc_10005C41: movl $0xB,(%eax);");
    asm("loc_10005C47: mov 4(%esi),%eax;");
    asm("loc_10005C4A: test %eax,%eax;");
    asm("loc_10005C4C: je loc_10005CA4;");
    asm("loc_10005C4E: mov 8(%esi),%edx;");
    asm("loc_10005C51: mov (%esi),%ecx;");
    asm("loc_10005C53: dec %eax;");
    asm("loc_10005C54: mov %eax,4(%esi);");
    asm("loc_10005C57: mov 0x1C(%esi),%eax;");
    asm("loc_10005C5A: inc %edx;");
    asm("loc_10005C5B: mov %edx,8(%esi);");
    asm("loc_10005C5E: movzbl (%ecx),%edx;");
    asm("loc_10005C61: add %edx,8(%eax);");
    asm("loc_10005C64: incl (%esi);");
    asm("loc_10005C66: mov 0x1C(%esi),%eax;");
    asm("loc_10005C69: mov 4(%eax),%ecx;");
    asm("loc_10005C6C: cmp 8(%eax),%ecx;");
    asm("loc_10005C6F: mov %ebp,%edi;");
    asm("loc_10005C71: je loc_10005DA6;");
    asm("loc_10005C77: movl $0xD,(%eax);");
    asm("loc_10005C7D: movl $_data_1000B260,0x18(%esi);");
    asm("loc_10005C84: mov 0x1C(%esi),%edx;");
    asm("loc_10005C87: mov %ebx,4(%edx);");
    asm("loc_10005C8A: mov 0x1C(%esi),%eax;");
    asm("loc_10005C8D: mov (%eax),%eax;");
    asm("loc_10005C8F: cmp $0xD,%eax;");
    asm("loc_10005C92: jbe loc_10005A50;");
    asm("loc_10005C98: pop %edi;");
    asm("loc_10005C99: pop %esi;");
    asm("loc_10005C9A: pop %ebp;");
    asm("loc_10005C9B: mov $0xFFFFFFFE,%eax;");
    asm("loc_10005CA0: pop %ebx;");
    asm("loc_10005CA1: ret $8;");
    asm("loc_10005CA4: mov %edi,%eax;");
    asm("loc_10005CA6: pop %edi;");
    asm("loc_10005CA7: pop %esi;");
    asm("loc_10005CA8: pop %ebp;");
    asm("loc_10005CA9: pop %ebx;");
    asm("loc_10005CAA: ret $8;");
    asm("loc_10005CAD: mov 0x1C(%esi),%ecx;");
    asm("loc_10005CB0: movl $2,(%ecx);");
    asm("loc_10005CB6: mov 4(%esi),%eax;");
    asm("loc_10005CB9: test %eax,%eax;");
    asm("loc_10005CBB: je loc_10005CA4;");
    asm("loc_10005CBD: mov 8(%esi),%edx;");
    asm("loc_10005CC0: mov 0x1C(%esi),%ecx;");
    asm("loc_10005CC3: dec %eax;");
    asm("loc_10005CC4: inc %edx;");
    asm("loc_10005CC5: mov %edx,8(%esi);");
    asm("loc_10005CC8: mov (%esi),%edx;");
    asm("loc_10005CCA: mov %eax,4(%esi);");
    asm("loc_10005CCD: movzbl (%edx),%eax;");
    asm("loc_10005CD0: shl $0x18,%eax;");
    asm("loc_10005CD3: mov %eax,8(%ecx);");
    asm("loc_10005CD6: mov (%esi),%eax;");
    asm("loc_10005CD8: mov 0x1C(%esi),%edx;");
    asm("loc_10005CDB: inc %eax;");
    asm("loc_10005CDC: mov %eax,(%esi);");
    asm("loc_10005CDE: mov %ebp,%edi;");
    asm("loc_10005CE0: movl $3,(%edx);");
    asm("loc_10005CE6: mov 4(%esi),%eax;");
    asm("loc_10005CE9: test %eax,%eax;");
    asm("loc_10005CEB: je loc_10005CA4;");
    asm("loc_10005CED: mov 8(%esi),%edx;");
    asm("loc_10005CF0: mov (%esi),%ecx;");
    asm("loc_10005CF2: dec %eax;");
    asm("loc_10005CF3: mov %eax,4(%esi);");
    asm("loc_10005CF6: mov 0x1C(%esi),%eax;");
    asm("loc_10005CF9: inc %edx;");
    asm("loc_10005CFA: mov %edx,8(%esi);");
    asm("loc_10005CFD: movzbl (%ecx),%edx;");
    asm("loc_10005D00: mov 8(%eax),%ecx;");
    asm("loc_10005D03: shl $0x10,%edx;");
    asm("loc_10005D06: add %edx,%ecx;");
    asm("loc_10005D08: mov %ecx,8(%eax);");
    asm("loc_10005D0B: incl (%esi);");
    asm("loc_10005D0D: mov 0x1C(%esi),%eax;");
    asm("loc_10005D10: mov %ebp,%edi;");
    asm("loc_10005D12: movl $4,(%eax);");
    asm("loc_10005D18: mov 4(%esi),%eax;");
    asm("loc_10005D1B: test %eax,%eax;");
    asm("loc_10005D1D: je loc_10005CA4;");
    asm("loc_10005D1F: mov (%esi),%ecx;");
    asm("loc_10005D21: dec %eax;");
    asm("loc_10005D22: mov %eax,4(%esi);");
    asm("loc_10005D25: incl 8(%esi);");
    asm("loc_10005D28: movzbl (%ecx),%edx;");
    asm("loc_10005D2B: mov 0x1C(%esi),%eax;");
    asm("loc_10005D2E: mov 8(%eax),%ecx;");
    asm("loc_10005D31: shl $8,%edx;");
    asm("loc_10005D34: add %edx,%ecx;");
    asm("loc_10005D36: mov %ecx,8(%eax);");
    asm("loc_10005D39: incl (%esi);");
    asm("loc_10005D3B: mov 0x1C(%esi),%eax;");
    asm("loc_10005D3E: mov %ebp,%edi;");
    asm("loc_10005D40: mov %ebx,(%eax);");
    asm("loc_10005D42: mov 4(%esi),%eax;");
    asm("loc_10005D45: test %eax,%eax;");
    asm("loc_10005D47: je loc_10005CA4;");
    asm("loc_10005D4D: mov 8(%esi),%edx;");
    asm("loc_10005D50: mov (%esi),%ecx;");
    asm("loc_10005D52: dec %eax;");
    asm("loc_10005D53: mov %eax,4(%esi);");
    asm("loc_10005D56: mov 0x1C(%esi),%eax;");
    asm("loc_10005D59: inc %edx;");
    asm("loc_10005D5A: mov %edx,8(%esi);");
    asm("loc_10005D5D: movzbl (%ecx),%edx;");
    asm("loc_10005D60: add %edx,8(%eax);");
    asm("loc_10005D63: incl (%esi);");
    asm("loc_10005D65: mov 0x1C(%esi),%eax;");
    asm("loc_10005D68: mov 8(%eax),%ecx;");
    asm("loc_10005D6B: pop %edi;");
    asm("loc_10005D6C: mov %ecx,0x30(%esi);");
    asm("loc_10005D6F: pop %esi;");
    asm("loc_10005D70: pop %ebp;");
    asm("loc_10005D71: movl $6,(%eax);");
    asm("loc_10005D77: mov $2,%eax;");
    asm("loc_10005D7C: pop %ebx;");
    asm("loc_10005D7D: ret $8;");
    asm("loc_10005D80: mov 0x1C(%esi),%edx;");
    asm("loc_10005D83: movl $0xD,(%edx);");
    asm("loc_10005D89: mov 0x1C(%esi),%eax;");
    asm("loc_10005D8C: pop %edi;");
    asm("loc_10005D8D: movl $_data_1000B250,0x18(%esi);");
    asm("loc_10005D94: pop %esi;");
    asm("loc_10005D95: pop %ebp;");
    asm("loc_10005D96: movl $0,4(%eax);");
    asm("loc_10005D9D: mov $0xFFFFFFFE,%eax;");
    asm("loc_10005DA2: pop %ebx;");
    asm("loc_10005DA3: ret $8;");
    asm("loc_10005DA6: mov 0x1C(%esi),%ecx;");
    asm("loc_10005DA9: movl $0xC,(%ecx);");
    asm("loc_10005DAF: pop %edi;");
    asm("loc_10005DB0: pop %esi;");
    asm("loc_10005DB1: pop %ebp;");
    asm("loc_10005DB2: mov $1,%eax;");
    asm("loc_10005DB7: pop %ebx;");
    asm("loc_10005DB8: ret $8;");
    asm("loc_10005DBB: pop %edi;");
    asm("loc_10005DBC: pop %esi;");
    asm("loc_10005DBD: pop %ebp;");
    asm("loc_10005DBE: mov $0xFFFFFFFD,%eax;");
    asm("loc_10005DC3: pop %ebx;");
    asm("loc_10005DC4: ret $8;");
    asm("int3;"); // unreachable
    asm("_jmp_10005DC8: .long loc_10005A57;");
    asm(".long loc_10005ACD;");
    asm(".long loc_10005CB6;");
    asm(".long loc_10005CE6;");
    asm(".long loc_10005D18;");
    asm(".long loc_10005D42;");
    asm(".long loc_10005D80;");
    asm(".long loc_10005B38;");
    asm(".long loc_10005BA8;");
    asm(".long loc_10005BDC;");
    asm(".long loc_10005C11;");
    asm(".long loc_10005C47;");
    asm(".long loc_10005DAF;");
    asm(".long loc_10005DBB;");
    asm(".long 0xCCCCCCCC;");
}
FIXUP_JUMP_TABLE(_sub_10005A00);
_naked _weak void _sub_10005E00() // _inflateSetDictionary
{
    __DEBUG_ASM(10005E00);
    // chunk 0x10005E00 _sub_10005E00
    asm("loc_10005E00: push %ebx;");
    asm("loc_10005E01: push %ebp;");
    asm("loc_10005E02: push %esi;");
    asm("loc_10005E03: mov 0x18(%esp),%esi;");
    asm("loc_10005E07: push %edi;");
    asm("loc_10005E08: mov 0x14(%esp),%edi;");
    asm("loc_10005E0C: test %edi,%edi;");
    asm("loc_10005E0E: mov %esi,%ebx;");
    asm("loc_10005E10: je loc_10005E77;");
    asm("loc_10005E12: mov 0x1C(%edi),%eax;");
    asm("loc_10005E15: test %eax,%eax;");
    asm("loc_10005E17: je loc_10005E77;");
    asm("loc_10005E19: cmpl $6,(%eax);");
    asm("loc_10005E1C: jne loc_10005E77;");
    asm("loc_10005E1E: mov 0x18(%esp),%ebp;");
    asm("loc_10005E22: push %esi;");
    asm("loc_10005E23: push %ebp;");
    asm("loc_10005E24: push $1;");
    asm("loc_10005E26: call _sub_10001710;");
    asm("loc_10005E2B: cmp 0x30(%edi),%eax;");
    asm("loc_10005E2E: je loc_10005E3C;");
    asm("loc_10005E30: pop %edi;");
    asm("loc_10005E31: pop %esi;");
    asm("loc_10005E32: pop %ebp;");
    asm("loc_10005E33: mov $0xFFFFFFFD,%eax;");
    asm("loc_10005E38: pop %ebx;");
    asm("loc_10005E39: ret $0xC;");
    asm("loc_10005E3C: mov 0x1C(%edi),%edx;");
    asm("loc_10005E3F: mov $1,%eax;");
    asm("loc_10005E44: mov %eax,0x30(%edi);");
    asm("loc_10005E47: mov 0x10(%edx),%ecx;");
    asm("loc_10005E4A: shl %cl,%eax;");
    asm("loc_10005E4C: cmp %eax,%esi;");
    asm("loc_10005E4E: jb loc_10005E57;");
    asm("loc_10005E50: lea -1(%eax),%ebx;");
    asm("loc_10005E53: sub %ebx,%esi;");
    asm("loc_10005E55: add %esi,%ebp;");
    asm("loc_10005E57: mov 0x14(%edx),%eax;");
    asm("loc_10005E5A: push %ebx;");
    asm("loc_10005E5B: push %ebp;");
    asm("loc_10005E5C: push %eax;");
    asm("loc_10005E5D: call _sub_10004CD0;");
    asm("loc_10005E62: mov 0x1C(%edi),%ecx;");
    asm("loc_10005E65: add $0xC,%esp;");
    asm("loc_10005E68: pop %edi;");
    asm("loc_10005E69: pop %esi;");
    asm("loc_10005E6A: pop %ebp;");
    asm("loc_10005E6B: movl $7,(%ecx);");
    asm("loc_10005E71: xor %eax,%eax;");
    asm("loc_10005E73: pop %ebx;");
    asm("loc_10005E74: ret $0xC;");
    asm("loc_10005E77: pop %edi;");
    asm("loc_10005E78: pop %esi;");
    asm("loc_10005E79: pop %ebp;");
    asm("loc_10005E7A: mov $0xFFFFFFFE,%eax;");
    asm("loc_10005E7F: pop %ebx;");
    asm("loc_10005E80: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10005E90() // _inflateSync
{
    __DEBUG_ASM(10005E90);
    // chunk 0x10005E90 _sub_10005E90
    asm("loc_10005E90: push %ebx;");
    asm("loc_10005E91: push %ebp;");
    asm("loc_10005E92: push %esi;");
    asm("loc_10005E93: mov 0x10(%esp),%esi;");
    asm("loc_10005E97: test %esi,%esi;");
    asm("loc_10005E99: push %edi;");
    asm("loc_10005E9A: je loc_10005F50;");
    asm("loc_10005EA0: mov 0x1C(%esi),%eax;");
    asm("loc_10005EA3: test %eax,%eax;");
    asm("loc_10005EA5: je loc_10005F50;");
    asm("loc_10005EAB: cmpl $0xD,(%eax);");
    asm("loc_10005EAE: je loc_10005EC0;");
    asm("loc_10005EB0: movl $0xD,(%eax);");
    asm("loc_10005EB6: mov 0x1C(%esi),%eax;");
    asm("loc_10005EB9: movl $0,4(%eax);");
    asm("loc_10005EC0: mov 4(%esi),%ebp;");
    asm("loc_10005EC3: test %ebp,%ebp;");
    asm("loc_10005EC5: jne loc_10005ED3;");
    asm("loc_10005EC7: pop %edi;");
    asm("loc_10005EC8: pop %esi;");
    asm("loc_10005EC9: pop %ebp;");
    asm("loc_10005ECA: mov $0xFFFFFFFB,%eax;");
    asm("loc_10005ECF: pop %ebx;");
    asm("loc_10005ED0: ret $4;");
    asm("loc_10005ED3: mov (%esi),%edi;");
    asm("loc_10005ED5: mov 0x1C(%esi),%ebx;");
    asm("loc_10005ED8: mov 4(%ebx),%eax;");
    asm("loc_10005EDB: mov %edi,%ecx;");
    asm("loc_10005EDD: lea (%ecx),%ecx;");
    asm("loc_10005EE0: cmp $4,%eax;");
    asm("loc_10005EE3: jae loc_10005F07;");
    asm("loc_10005EE5: mov (%ecx),%dl;");
    asm("loc_10005EE7: cmp _data_1000B24C(%eax),%dl;");
    asm("loc_10005EED: jne loc_10005EF2;");
    asm("loc_10005EEF: inc %eax;");
    asm("loc_10005EF0: jmp loc_10005F03;");
    asm("loc_10005EF2: test %dl,%dl;");
    asm("loc_10005EF4: je loc_10005EFA;");
    asm("loc_10005EF6: xor %eax,%eax;");
    asm("loc_10005EF8: jmp loc_10005F03;");
    asm("loc_10005EFA: mov $4,%edx;");
    asm("loc_10005EFF: sub %eax,%edx;");
    asm("loc_10005F01: mov %edx,%eax;");
    asm("loc_10005F03: inc %ecx;");
    asm("loc_10005F04: dec %ebp;");
    asm("loc_10005F05: jne loc_10005EE0;");
    asm("loc_10005F07: mov %ecx,%edx;");
    asm("loc_10005F09: sub %edi,%edx;");
    asm("loc_10005F0B: mov 8(%esi),%edi;");
    asm("loc_10005F0E: add %edx,%edi;");
    asm("loc_10005F10: cmp $4,%eax;");
    asm("loc_10005F13: mov %edi,8(%esi);");
    asm("loc_10005F16: mov %ecx,(%esi);");
    asm("loc_10005F18: mov %ebp,4(%esi);");
    asm("loc_10005F1B: mov %eax,4(%ebx);");
    asm("loc_10005F1E: je loc_10005F2C;");
    asm("loc_10005F20: pop %edi;");
    asm("loc_10005F21: pop %esi;");
    asm("loc_10005F22: pop %ebp;");
    asm("loc_10005F23: mov $0xFFFFFFFD,%eax;");
    asm("loc_10005F28: pop %ebx;");
    asm("loc_10005F29: ret $4;");
    asm("loc_10005F2C: mov 8(%esi),%edi;");
    asm("loc_10005F2F: mov 0x14(%esi),%ebx;");
    asm("loc_10005F32: push %esi;");
    asm("loc_10005F33: call _sub_10005840;");
    asm("loc_10005F38: mov 0x1C(%esi),%eax;");
    asm("loc_10005F3B: mov %edi,8(%esi);");
    asm("loc_10005F3E: pop %edi;");
    asm("loc_10005F3F: mov %ebx,0x14(%esi);");
    asm("loc_10005F42: pop %esi;");
    asm("loc_10005F43: pop %ebp;");
    asm("loc_10005F44: movl $7,(%eax);");
    asm("loc_10005F4A: xor %eax,%eax;");
    asm("loc_10005F4C: pop %ebx;");
    asm("loc_10005F4D: ret $4;");
    asm("loc_10005F50: pop %edi;");
    asm("loc_10005F51: pop %esi;");
    asm("loc_10005F52: pop %ebp;");
    asm("loc_10005F53: mov $0xFFFFFFFE,%eax;");
    asm("loc_10005F58: pop %ebx;");
    asm("loc_10005F59: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10005F60() // _inflateSyncPoint
{
    __DEBUG_ASM(10005F60);
    // chunk 0x10005F60 _sub_10005F60
    asm("loc_10005F60: mov 4(%esp),%eax;");
    asm("loc_10005F64: test %eax,%eax;");
    asm("loc_10005F66: je loc_10005F82;");
    asm("loc_10005F68: mov 0x1C(%eax),%eax;");
    asm("loc_10005F6B: test %eax,%eax;");
    asm("loc_10005F6D: je loc_10005F82;");
    asm("loc_10005F6F: mov 0x14(%eax),%eax;");
    asm("loc_10005F72: test %eax,%eax;");
    asm("loc_10005F74: je loc_10005F82;");
    asm("loc_10005F76: push %eax;");
    asm("loc_10005F77: call _sub_10004D10;");
    asm("loc_10005F7C: add $4,%esp;");
    asm("loc_10005F7F: ret $4;");
    asm("loc_10005F82: mov $0xFFFFFFFE,%eax;");
    asm("loc_10005F87: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10005F90() // _sub_10005F90
{
    __DEBUG_ASM(10005F90);
    // chunk 0x10005F90 _sub_10005F90
    asm("loc_10005F90: sub $0xFC,%esp;");
    asm("loc_10005F96: push %ebx;");
    asm("loc_10005F97: push %ebp;");
    asm("loc_10005F98: xor %ebp,%ebp;");
    asm("loc_10005F9A: push %esi;");
    asm("loc_10005F9B: mov 0x10C(%esp),%esi;");
    asm("loc_10005FA2: push %edi;");
    asm("loc_10005FA3: mov %ecx,%ebx;");
    asm("loc_10005FA5: mov %eax,%edi;");
    asm("loc_10005FA7: mov %ebp,0x50(%esp);");
    asm("loc_10005FAB: mov %ebp,0x54(%esp);");
    asm("loc_10005FAF: mov %ebp,0x58(%esp);");
    asm("loc_10005FB3: mov %ebp,0x5C(%esp);");
    asm("loc_10005FB7: mov %ebp,0x60(%esp);");
    asm("loc_10005FBB: mov %ebp,0x64(%esp);");
    asm("loc_10005FBF: mov %ebp,0x68(%esp);");
    asm("loc_10005FC3: mov %ebp,0x6C(%esp);");
    asm("loc_10005FC7: mov %ebp,0x70(%esp);");
    asm("loc_10005FCB: mov %ebp,0x74(%esp);");
    asm("loc_10005FCF: mov %ebp,0x78(%esp);");
    asm("loc_10005FD3: mov %ebp,0x7C(%esp);");
    asm("loc_10005FD7: mov %ebp,0x80(%esp);");
    asm("loc_10005FDE: mov %ebp,0x84(%esp);");
    asm("loc_10005FE5: mov %ebp,0x88(%esp);");
    asm("loc_10005FEC: mov %ebp,0x8C(%esp);");
    asm("loc_10005FF3: mov %ebx,%eax;");
    asm("loc_10005FF5: mov %esi,%edx;");
    asm("loc_10005FF7: jmp loc_10006000;");
    asm("loc_10005FF9: lea (%esp),%esp;");
    asm("loc_10006000: mov (%eax),%ecx;");
    asm("loc_10006002: incl 0x50(%esp,%ecx,4);");
    asm("loc_10006006: lea 0x50(%esp,%ecx,4),%ecx;");
    asm("loc_1000600A: add $4,%eax;");
    asm("loc_1000600D: dec %edx;");
    asm("loc_1000600E: jne loc_10006000;");
    asm("loc_10006010: cmp %esi,0x50(%esp);");
    asm("loc_10006014: jne loc_1000602E;");
    asm("loc_10006016: mov 0x120(%esp),%eax;");
    asm("loc_1000601D: mov %ebp,(%eax);");
    asm("loc_1000601F: mov %ebp,(%edi);");
    asm("loc_10006021: pop %edi;");
    asm("loc_10006022: pop %esi;");
    asm("loc_10006023: pop %ebp;");
    asm("loc_10006024: xor %eax,%eax;");
    asm("loc_10006026: pop %ebx;");
    asm("loc_10006027: add $0xFC,%esp;");
    asm("loc_1000602D: ret;");
    asm("loc_1000602E: mov (%edi),%eax;");
    asm("loc_10006030: mov %eax,0x10(%esp);");
    asm("loc_10006034: mov $1,%ecx;");
    asm("loc_10006039: lea (%esp),%esp;");
    asm("loc_10006040: cmp %ebp,0x50(%esp,%ecx,4);");
    asm("loc_10006044: jne loc_10006078;");
    asm("loc_10006046: cmp %ebp,0x54(%esp,%ecx,4);");
    asm("loc_1000604A: jne loc_10006068;");
    asm("loc_1000604C: cmp %ebp,0x58(%esp,%ecx,4);");
    asm("loc_10006050: jne loc_1000606B;");
    asm("loc_10006052: cmp %ebp,0x5C(%esp,%ecx,4);");
    asm("loc_10006056: jne loc_10006070;");
    asm("loc_10006058: cmp %ebp,0x60(%esp,%ecx,4);");
    asm("loc_1000605C: jne loc_10006075;");
    asm("loc_1000605E: add $5,%ecx;");
    asm("loc_10006061: cmp $0xF,%ecx;");
    asm("loc_10006064: jbe loc_10006040;");
    asm("loc_10006066: jmp loc_10006078;");
    asm("loc_10006068: inc %ecx;");
    asm("loc_10006069: jmp loc_10006078;");
    asm("loc_1000606B: add $2,%ecx;");
    asm("loc_1000606E: jmp loc_10006078;");
    asm("loc_10006070: add $3,%ecx;");
    asm("loc_10006073: jmp loc_10006078;");
    asm("loc_10006075: add $4,%ecx;");
    asm("loc_10006078: cmp %ecx,%eax;");
    asm("loc_1000607A: mov %ecx,0x14(%esp);");
    asm("loc_1000607E: jae loc_10006086;");
    asm("loc_10006080: mov %ecx,0x10(%esp);");
    asm("loc_10006084: mov %ecx,%eax;");
    asm("loc_10006086: mov $0xF,%esi;");
    asm("loc_1000608B: jmp loc_10006090;");
    asm("loc_1000608D: lea (%ecx),%ecx;");
    asm("loc_10006090: cmp %ebp,0x50(%esp,%esi,4);");
    asm("loc_10006094: jne loc_10006099;");
    asm("loc_10006096: dec %esi;");
    asm("loc_10006097: jne loc_10006090;");
    asm("loc_10006099: cmp %esi,%eax;");
    asm("loc_1000609B: mov %esi,0x28(%esp);");
    asm("loc_1000609F: jbe loc_100060A7;");
    asm("loc_100060A1: mov %esi,0x10(%esp);");
    asm("loc_100060A5: mov %esi,%eax;");
    asm("loc_100060A7: mov $1,%edx;");
    asm("loc_100060AC: shl %cl,%edx;");
    asm("loc_100060AE: cmp %esi,%ecx;");
    asm("loc_100060B0: mov %eax,(%edi);");
    asm("loc_100060B2: jae loc_100060C5;");
    asm("loc_100060B4: sub 0x50(%esp,%ecx,4),%edx;");
    asm("loc_100060B8: js loc_10006468;");
    asm("loc_100060BE: inc %ecx;");
    asm("loc_100060BF: shl $1,%edx;");
    asm("loc_100060C1: cmp %esi,%ecx;");
    asm("loc_100060C3: jb loc_100060B4;");
    asm("loc_100060C5: lea (,%esi,4),%ecx;");
    asm("loc_100060CC: lea 0x50(%esp,%ecx),%edi;");
    asm("loc_100060D0: mov %ecx,0x30(%esp);");
    asm("loc_100060D4: mov (%edi),%ecx;");
    asm("loc_100060D6: sub %ecx,%edx;");
    asm("loc_100060D8: mov %edx,0x4C(%esp);");
    asm("loc_100060DC: js loc_10006468;");
    asm("loc_100060E2: add %edx,%ecx;");
    asm("loc_100060E4: mov %ecx,(%edi);");
    asm("loc_100060E6: xor %ecx,%ecx;");
    asm("loc_100060E8: dec %esi;");
    asm("loc_100060E9: mov %ebp,0x94(%esp);");
    asm("loc_100060F0: je loc_10006105;");
    asm("loc_100060F2: xor %edi,%edi;");
    asm("loc_100060F4: add 0x54(%esp,%edi),%ecx;");
    asm("loc_100060F8: add $4,%edi;");
    asm("loc_100060FB: dec %esi;");
    asm("loc_100060FC: mov %ecx,0x94(%esp,%edi);");
    asm("loc_10006103: jne loc_100060F4;");
    asm("loc_10006105: mov %ebx,%esi;");
    asm("loc_10006107: xor %edi,%edi;");
    asm("loc_10006109: lea (%esp),%esp;");
    asm("loc_10006110: mov (%esi),%ecx;");
    asm("loc_10006112: add $4,%esi;");
    asm("loc_10006115: cmp %ebp,%ecx;");
    asm("loc_10006117: mov %esi,0x20(%esp);");
    asm("loc_1000611B: je loc_1000613C;");
    asm("loc_1000611D: mov 0x90(%esp,%ecx,4),%esi;");
    asm("loc_10006124: mov 0x12C(%esp),%ebx;");
    asm("loc_1000612B: lea 0x90(%esp,%ecx,4),%ecx;");
    asm("loc_10006132: mov %edi,(%ebx,%esi,4);");
    asm("loc_10006135: inc %esi;");
    asm("loc_10006136: mov %esi,(%ecx);");
    asm("loc_10006138: mov 0x20(%esp),%esi;");
    asm("loc_1000613C: mov 0x110(%esp),%ecx;");
    asm("loc_10006143: inc %edi;");
    asm("loc_10006144: cmp %ecx,%edi;");
    asm("loc_10006146: jb loc_10006110;");
    asm("loc_10006148: mov 0x30(%esp),%ecx;");
    asm("loc_1000614C: mov 0x90(%esp,%ecx),%ecx;");
    asm("loc_10006153: mov 0x28(%esp),%esi;");
    asm("loc_10006157: mov %ecx,0x110(%esp);");
    asm("loc_1000615E: mov 0x12C(%esp),%ecx;");
    asm("loc_10006165: mov %ecx,0x20(%esp);");
    asm("loc_10006169: mov 0x14(%esp),%ecx;");
    asm("loc_1000616D: mov %eax,%ebx;");
    asm("loc_1000616F: xor %edi,%edi;");
    asm("loc_10006171: neg %ebx;");
    asm("loc_10006173: cmp %esi,%ecx;");
    asm("loc_10006175: mov %ebp,0x2C(%esp);");
    asm("loc_10006179: mov %ebp,0x90(%esp);");
    asm("loc_10006180: movl $0xFFFFFFFF,0x18(%esp);");
    asm("loc_10006188: mov %edi,0xD0(%esp);");
    asm("loc_1000618F: mov %edi,0x30(%esp);");
    asm("loc_10006193: jg loc_10006445;");
    asm("loc_10006199: mov 0x38(%esp),%esi;");
    asm("loc_1000619D: lea -1(%ecx),%edx;");
    asm("loc_100061A0: mov %edx,0x40(%esp);");
    asm("loc_100061A4: lea 0x50(%esp,%ecx,4),%edx;");
    asm("loc_100061A8: mov %edx,0x24(%esp);");
    asm("loc_100061AC: lea (%esp),%esp;");
    asm("loc_100061B0: mov 0x24(%esp),%edx;");
    asm("loc_100061B4: mov (%edx),%edx;");
    asm("loc_100061B6: test %edx,%edx;");
    asm("loc_100061B8: mov %edx,0x1C(%esp);");
    asm("loc_100061BC: je loc_10006424;");
    asm("loc_100061C2: mov 0x1C(%esp),%ecx;");
    asm("loc_100061C6: mov 0x14(%esp),%edx;");
    asm("loc_100061CA: dec %ecx;");
    asm("loc_100061CB: mov %ecx,0x1C(%esp);");
    asm("loc_100061CF: lea (%ebx,%eax),%ecx;");
    asm("loc_100061D2: cmp %ecx,%edx;");
    asm("loc_100061D4: jle loc_100062FD;");
    asm("loc_100061DA: mov %ecx,0x3C(%esp);");
    asm("loc_100061DE: mov %ebx,%ecx;");
    asm("loc_100061E0: sub %eax,%ecx;");
    asm("loc_100061E2: jmp loc_100061F0;");
    asm("loc_100061E4: mov 0x10(%esp),%eax;");
    asm("loc_100061E8: mov 0x44(%esp),%ecx;");
    asm("loc_100061EC: lea (%esp),%esp;");
    asm("loc_100061F0: mov 0x18(%esp),%ebp;");
    asm("loc_100061F4: mov 0x28(%esp),%edx;");
    asm("loc_100061F8: inc %ebp;");
    asm("loc_100061F9: mov %ebp,0x18(%esp);");
    asm("loc_100061FD: mov 0x3C(%esp),%ebp;");
    asm("loc_10006201: add %eax,%ebx;");
    asm("loc_10006203: add %eax,%ecx;");
    asm("loc_10006205: add %eax,%ebp;");
    asm("loc_10006207: sub %ebx,%edx;");
    asm("loc_10006209: cmp %eax,%edx;");
    asm("loc_1000620B: mov %ecx,0x44(%esp);");
    asm("loc_1000620F: mov %ebp,0x3C(%esp);");
    asm("loc_10006213: jbe loc_10006217;");
    asm("loc_10006215: mov %eax,%edx;");
    asm("loc_10006217: mov 0x14(%esp),%ecx;");
    asm("loc_1000621B: mov 0x1C(%esp),%ebp;");
    asm("loc_1000621F: sub %ebx,%ecx;");
    asm("loc_10006221: mov $1,%eax;");
    asm("loc_10006226: shl %cl,%eax;");
    asm("loc_10006228: lea 1(%ebp),%edi;");
    asm("loc_1000622B: cmp %edi,%eax;");
    asm("loc_1000622D: jbe loc_10006256;");
    asm("loc_1000622F: or $0xFFFFFFFF,%edi;");
    asm("loc_10006232: sub %ebp,%edi;");
    asm("loc_10006234: mov 0x24(%esp),%ebp;");
    asm("loc_10006238: add %edi,%eax;");
    asm("loc_1000623A: cmp %edx,%ecx;");
    asm("loc_1000623C: jae loc_10006256;");
    asm("loc_1000623E: inc %ecx;");
    asm("loc_1000623F: cmp %edx,%ecx;");
    asm("loc_10006241: jae loc_10006256;");
    asm("loc_10006243: mov 4(%ebp),%edi;");
    asm("loc_10006246: add $4,%ebp;");
    asm("loc_10006249: shl $1,%eax;");
    asm("loc_1000624B: cmp %edi,%eax;");
    asm("loc_1000624D: jbe loc_10006256;");
    asm("loc_1000624F: sub %edi,%eax;");
    asm("loc_10006251: inc %ecx;");
    asm("loc_10006252: cmp %edx,%ecx;");
    asm("loc_10006254: jb loc_10006243;");
    asm("loc_10006256: mov 0x128(%esp),%eax;");
    asm("loc_1000625D: mov (%eax),%eax;");
    asm("loc_1000625F: mov $1,%edi;");
    asm("loc_10006264: shl %cl,%edi;");
    asm("loc_10006266: lea (%eax,%edi),%edx;");
    asm("loc_10006269: cmp $0x5A0,%edx;");
    asm("loc_1000626F: ja loc_10006468;");
    asm("loc_10006275: mov 0x124(%esp),%ebp;");
    asm("loc_1000627C: lea (%ebp,%eax,8),%ebp;");
    asm("loc_10006280: mov 0x18(%esp),%eax;");
    asm("loc_10006284: lea 0xD0(%esp,%eax,4),%eax;");
    asm("loc_1000628B: mov %eax,0x48(%esp);");
    asm("loc_1000628F: mov %ebp,(%eax);");
    asm("loc_10006291: mov 0x128(%esp),%eax;");
    asm("loc_10006298: mov %edx,(%eax);");
    asm("loc_1000629A: mov 0x18(%esp),%eax;");
    asm("loc_1000629E: test %eax,%eax;");
    asm("loc_100062A0: mov %ebp,0x30(%esp);");
    asm("loc_100062A4: je loc_100062E2;");
    asm("loc_100062A6: mov 0x2C(%esp),%esi;");
    asm("loc_100062AA: mov 0x10(%esp),%dl;");
    asm("loc_100062AE: mov %esi,0x90(%esp,%eax,4);");
    asm("loc_100062B5: mov %cl,0x34(%esp);");
    asm("loc_100062B9: mov 0x44(%esp),%ecx;");
    asm("loc_100062BD: mov %esi,%eax;");
    asm("loc_100062BF: shr %cl,%eax;");
    asm("loc_100062C1: mov 0x48(%esp),%ecx;");
    asm("loc_100062C5: mov -4(%ecx),%ecx;");
    asm("loc_100062C8: mov %ebp,%esi;");
    asm("loc_100062CA: sub %ecx,%esi;");
    asm("loc_100062CC: mov %dl,0x35(%esp);");
    asm("loc_100062D0: mov 0x34(%esp),%edx;");
    asm("loc_100062D4: sar $3,%esi;");
    asm("loc_100062D7: sub %eax,%esi;");
    asm("loc_100062D9: mov %edx,(%ecx,%eax,8);");
    asm("loc_100062DC: mov %esi,4(%ecx,%eax,8);");
    asm("loc_100062E0: jmp loc_100062EB;");
    asm("loc_100062E2: mov 0x120(%esp),%eax;");
    asm("loc_100062E9: mov %ebp,(%eax);");
    asm("loc_100062EB: mov 0x3C(%esp),%ecx;");
    asm("loc_100062EF: cmp %ecx,0x14(%esp);");
    asm("loc_100062F3: jg loc_100061E4;");
    asm("loc_100062F9: mov 0x2C(%esp),%ebp;");
    asm("loc_100062FD: mov 0x14(%esp),%edx;");
    asm("loc_10006301: mov 0x12C(%esp),%ecx;");
    asm("loc_10006308: mov %dl,%al;");
    asm("loc_1000630A: sub %bl,%al;");
    asm("loc_1000630C: mov %al,0x35(%esp);");
    asm("loc_10006310: mov 0x110(%esp),%eax;");
    asm("loc_10006317: lea (%ecx,%eax,4),%ecx;");
    asm("loc_1000631A: mov 0x20(%esp),%eax;");
    asm("loc_1000631E: cmp %ecx,%eax;");
    asm("loc_10006320: jb loc_10006329;");
    asm("loc_10006322: movb $0xC0,0x34(%esp);");
    asm("loc_10006327: jmp loc_10006371;");
    asm("loc_10006329: mov (%eax),%esi;");
    asm("loc_1000632B: mov 0x114(%esp),%ecx;");
    asm("loc_10006332: cmp %ecx,%esi;");
    asm("loc_10006334: jae loc_1000634A;");
    asm("loc_10006336: cmp $0x100,%esi;");
    asm("loc_1000633C: setb %cl;");
    asm("loc_1000633F: dec %cl;");
    asm("loc_10006341: and $0x60,%ecx;");
    asm("loc_10006344: mov %cl,0x34(%esp);");
    asm("loc_10006348: jmp loc_1000636A;");
    asm("loc_1000634A: sub %ecx,%esi;");
    asm("loc_1000634C: mov 0x11C(%esp),%ecx;");
    asm("loc_10006353: shl $2,%esi;");
    asm("loc_10006356: mov (%esi,%ecx),%cl;");
    asm("loc_10006359: add $0x50,%cl;");
    asm("loc_1000635C: mov %cl,0x34(%esp);");
    asm("loc_10006360: mov 0x118(%esp),%ecx;");
    asm("loc_10006367: mov (%esi,%ecx),%esi;");
    asm("loc_1000636A: add $4,%eax;");
    asm("loc_1000636D: mov %eax,0x20(%esp);");
    asm("loc_10006371: mov %edx,%ecx;");
    asm("loc_10006373: sub %ebx,%ecx;");
    asm("loc_10006375: mov $1,%edx;");
    asm("loc_1000637A: shl %cl,%edx;");
    asm("loc_1000637C: mov %ebp,%eax;");
    asm("loc_1000637E: mov %ebx,%ecx;");
    asm("loc_10006380: shr %cl,%eax;");
    asm("loc_10006382: cmp %edi,%eax;");
    asm("loc_10006384: jae loc_100063AC;");
    asm("loc_10006386: mov 0x30(%esp),%ecx;");
    asm("loc_1000638A: lea (%ecx,%eax,8),%ecx;");
    asm("loc_1000638D: lea (%ecx),%ecx;");
    asm("loc_10006390: mov 0x34(%esp),%ebp;");
    asm("loc_10006394: mov %ebp,(%ecx);");
    asm("loc_10006396: lea (,%edx,8),%ebp;");
    asm("loc_1000639D: mov %esi,4(%ecx);");
    asm("loc_100063A0: add %edx,%eax;");
    asm("loc_100063A2: add %ebp,%ecx;");
    asm("loc_100063A4: cmp %edi,%eax;");
    asm("loc_100063A6: jb loc_10006390;");
    asm("loc_100063A8: mov 0x2C(%esp),%ebp;");
    asm("loc_100063AC: mov 0x40(%esp),%ecx;");
    asm("loc_100063B0: mov $1,%eax;");
    asm("loc_100063B5: shl %cl,%eax;");
    asm("loc_100063B7: test %eax,%ebp;");
    asm("loc_100063B9: je loc_100063C8;");
    asm("loc_100063BB: jmp loc_100063C0;");
    asm("loc_100063BD: lea (%ecx),%ecx;");
    asm("loc_100063C0: xor %eax,%ebp;");
    asm("loc_100063C2: shr $1,%eax;");
    asm("loc_100063C4: test %eax,%ebp;");
    asm("loc_100063C6: jne loc_100063C0;");
    asm("loc_100063C8: mov %ebx,%ecx;");
    asm("loc_100063CA: mov $1,%edx;");
    asm("loc_100063CF: shl %cl,%edx;");
    asm("loc_100063D1: xor %eax,%ebp;");
    asm("loc_100063D3: mov 0x18(%esp),%eax;");
    asm("loc_100063D7: mov 0x90(%esp,%eax,4),%ecx;");
    asm("loc_100063DE: dec %edx;");
    asm("loc_100063DF: and %ebp,%edx;");
    asm("loc_100063E1: cmp %ecx,%edx;");
    asm("loc_100063E3: mov %ebp,0x2C(%esp);");
    asm("loc_100063E7: je loc_10006410;");
    asm("loc_100063E9: lea (%esp),%esp;");
    asm("loc_100063F0: sub 0x10(%esp),%ebx;");
    asm("loc_100063F4: mov %ebx,%ecx;");
    asm("loc_100063F6: mov $1,%edx;");
    asm("loc_100063FB: shl %cl,%edx;");
    asm("loc_100063FD: mov 0x8C(%esp,%eax,4),%ecx;");
    asm("loc_10006404: dec %eax;");
    asm("loc_10006405: dec %edx;");
    asm("loc_10006406: and %ebp,%edx;");
    asm("loc_10006408: cmp %ecx,%edx;");
    asm("loc_1000640A: jne loc_100063F0;");
    asm("loc_1000640C: mov %eax,0x18(%esp);");
    asm("loc_10006410: mov 0x1C(%esp),%eax;");
    asm("loc_10006414: test %eax,%eax;");
    asm("loc_10006416: mov 0x10(%esp),%eax;");
    asm("loc_1000641A: jne loc_100061C2;");
    asm("loc_10006420: mov 0x14(%esp),%ecx;");
    asm("loc_10006424: addl $4,0x24(%esp);");
    asm("loc_10006429: mov 0x40(%esp),%edx;");
    asm("loc_1000642D: inc %ecx;");
    asm("loc_1000642E: inc %edx;");
    asm("loc_1000642F: mov %edx,0x40(%esp);");
    asm("loc_10006433: cmp 0x28(%esp),%ecx;");
    asm("loc_10006437: mov %ecx,0x14(%esp);");
    asm("loc_1000643B: jle loc_100061B0;");
    asm("loc_10006441: mov 0x4C(%esp),%edx;");
    asm("loc_10006445: test %edx,%edx;");
    asm("loc_10006447: je loc_10006021;");
    asm("loc_1000644D: cmpl $1,0x28(%esp);");
    asm("loc_10006452: je loc_10006021;");
    asm("loc_10006458: pop %edi;");
    asm("loc_10006459: pop %esi;");
    asm("loc_1000645A: pop %ebp;");
    asm("loc_1000645B: mov $0xFFFFFFFB,%eax;");
    asm("loc_10006460: pop %ebx;");
    asm("loc_10006461: add $0xFC,%esp;");
    asm("loc_10006467: ret;");
    asm("loc_10006468: pop %edi;");
    asm("loc_10006469: pop %esi;");
    asm("loc_1000646A: pop %ebp;");
    asm("loc_1000646B: mov $0xFFFFFFFD,%eax;");
    asm("loc_10006470: pop %ebx;");
    asm("loc_10006471: add $0xFC,%esp;");
    asm("loc_10006477: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006480() // _sub_10006480
{
    __DEBUG_ASM(10006480);
    // chunk 0x10006480 _sub_10006480
    asm("loc_10006480: push %ecx;");
    asm("loc_10006481: push %ebx;");
    asm("loc_10006482: push %edi;");
    asm("loc_10006483: mov 0x20(%esp),%edi;");
    asm("loc_10006487: mov 0x28(%edi),%eax;");
    asm("loc_1000648A: push $4;");
    asm("loc_1000648C: push $0x13;");
    asm("loc_1000648E: push %eax;");
    asm("loc_1000648F: movl $0,0x14(%esp);");
    asm("loc_10006497: calll *0x20(%edi);");
    asm("loc_1000649A: mov %eax,%ebx;");
    asm("loc_1000649C: add $0xC,%esp;");
    asm("loc_1000649F: test %ebx,%ebx;");
    asm("loc_100064A1: jne loc_100064AC;");
    asm("loc_100064A3: pop %edi;");
    asm("loc_100064A4: mov $0xFFFFFFFC,%eax;");
    asm("loc_100064A9: pop %ebx;");
    asm("loc_100064AA: pop %ecx;");
    asm("loc_100064AB: ret;");
    asm("loc_100064AC: mov 0x1C(%esp),%edx;");
    asm("loc_100064B0: mov 0x18(%esp),%eax;");
    asm("loc_100064B4: push %ebp;");
    asm("loc_100064B5: mov 0x18(%esp),%ebp;");
    asm("loc_100064B9: push %esi;");
    asm("loc_100064BA: push %ebx;");
    asm("loc_100064BB: lea 0x14(%esp),%ecx;");
    asm("loc_100064BF: push %ecx;");
    asm("loc_100064C0: mov 0x20(%esp),%ecx;");
    asm("loc_100064C4: push %edx;");
    asm("loc_100064C5: push %eax;");
    asm("loc_100064C6: push $0;");
    asm("loc_100064C8: push $0;");
    asm("loc_100064CA: push $0x13;");
    asm("loc_100064CC: push $0x13;");
    asm("loc_100064CE: mov %ebp,%eax;");
    asm("loc_100064D0: call _sub_10005F90;");
    asm("loc_100064D5: mov %eax,%esi;");
    asm("loc_100064D7: add $0x20,%esp;");
    asm("loc_100064DA: cmp $0xFFFFFFFD,%esi;");
    asm("loc_100064DD: jne loc_100064F9;");
    asm("loc_100064DF: mov 0x28(%edi),%ecx;");
    asm("loc_100064E2: push %ebx;");
    asm("loc_100064E3: push %ecx;");
    asm("loc_100064E4: movl $_data_1000B504,0x18(%edi);");
    asm("loc_100064EB: calll *0x24(%edi);");
    asm("loc_100064EE: add $8,%esp;");
    asm("loc_100064F1: mov %esi,%eax;");
    asm("loc_100064F3: pop %esi;");
    asm("loc_100064F4: pop %ebp;");
    asm("loc_100064F5: pop %edi;");
    asm("loc_100064F6: pop %ebx;");
    asm("loc_100064F7: pop %ecx;");
    asm("loc_100064F8: ret;");
    asm("loc_100064F9: cmp $0xFFFFFFFB,%esi;");
    asm("loc_100064FC: je loc_10006504;");
    asm("loc_100064FE: cmpl $0,(%ebp);");
    asm("loc_10006502: jne loc_10006510;");
    asm("loc_10006504: movl $_data_1000B4E0,0x18(%edi);");
    asm("loc_1000650B: mov $0xFFFFFFFD,%esi;");
    asm("loc_10006510: mov 0x28(%edi),%ecx;");
    asm("loc_10006513: push %ebx;");
    asm("loc_10006514: push %ecx;");
    asm("loc_10006515: calll *0x24(%edi);");
    asm("loc_10006518: add $8,%esp;");
    asm("loc_1000651B: mov %esi,%eax;");
    asm("loc_1000651D: pop %esi;");
    asm("loc_1000651E: pop %ebp;");
    asm("loc_1000651F: pop %edi;");
    asm("loc_10006520: pop %ebx;");
    asm("loc_10006521: pop %ecx;");
    asm("loc_10006522: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006530() // _sub_10006530
{
    __DEBUG_ASM(10006530);
    // chunk 0x10006530 _sub_10006530
    asm("loc_10006530: push %ecx;");
    asm("loc_10006531: push %ebx;");
    asm("loc_10006532: mov 0x2C(%esp),%ebx;");
    asm("loc_10006536: mov 0x28(%ebx),%eax;");
    asm("loc_10006539: push %edi;");
    asm("loc_1000653A: push $4;");
    asm("loc_1000653C: push $0x120;");
    asm("loc_10006541: push %eax;");
    asm("loc_10006542: movl $0,0x14(%esp);");
    asm("loc_1000654A: calll *0x20(%ebx);");
    asm("loc_1000654D: mov %eax,%edi;");
    asm("loc_1000654F: add $0xC,%esp;");
    asm("loc_10006552: test %edi,%edi;");
    asm("loc_10006554: jne loc_1000655F;");
    asm("loc_10006556: pop %edi;");
    asm("loc_10006557: mov $0xFFFFFFFC,%eax;");
    asm("loc_1000655C: pop %ebx;");
    asm("loc_1000655D: pop %ecx;");
    asm("loc_1000655E: ret;");
    asm("loc_1000655F: mov 0x2C(%esp),%edx;");
    asm("loc_10006563: mov 0x24(%esp),%eax;");
    asm("loc_10006567: push %ebp;");
    asm("loc_10006568: mov 0x14(%esp),%ebp;");
    asm("loc_1000656C: push %esi;");
    asm("loc_1000656D: push %edi;");
    asm("loc_1000656E: lea 0x14(%esp),%ecx;");
    asm("loc_10006572: push %ecx;");
    asm("loc_10006573: mov 0x28(%esp),%ecx;");
    asm("loc_10006577: push %edx;");
    asm("loc_10006578: push %eax;");
    asm("loc_10006579: mov 0x34(%esp),%eax;");
    asm("loc_1000657D: push $_data_1000B370;");
    asm("loc_10006582: push $_data_1000B2F0;");
    asm("loc_10006587: push $0x101;");
    asm("loc_1000658C: push %ebp;");
    asm("loc_1000658D: call _sub_10005F90;");
    asm("loc_10006592: mov %eax,%esi;");
    asm("loc_10006594: add $0x20,%esp;");
    asm("loc_10006597: test %esi,%esi;");
    asm("loc_10006599: jne loc_10006670;");
    asm("loc_1000659F: mov 0x24(%esp),%ecx;");
    asm("loc_100065A3: cmpl $0,(%ecx);");
    asm("loc_100065A6: je loc_10006694;");
    asm("loc_100065AC: mov 0x34(%esp),%eax;");
    asm("loc_100065B0: mov 0x30(%esp),%ecx;");
    asm("loc_100065B4: push %edi;");
    asm("loc_100065B5: lea 0x14(%esp),%edx;");
    asm("loc_100065B9: push %edx;");
    asm("loc_100065BA: mov 0x24(%esp),%edx;");
    asm("loc_100065BE: push %eax;");
    asm("loc_100065BF: mov 0x2C(%esp),%eax;");
    asm("loc_100065C3: push %ecx;");
    asm("loc_100065C4: push $_data_1000B468;");
    asm("loc_100065C9: push $_data_1000B3F0;");
    asm("loc_100065CE: push %esi;");
    asm("loc_100065CF: lea (%eax,%ebp,4),%ecx;");
    asm("loc_100065D2: mov 0x44(%esp),%eax;");
    asm("loc_100065D6: push %edx;");
    asm("loc_100065D7: call _sub_10005F90;");
    asm("loc_100065DC: mov %eax,%esi;");
    asm("loc_100065DE: add $0x20,%esp;");
    asm("loc_100065E1: test %esi,%esi;");
    asm("loc_100065E3: jne loc_10006609;");
    asm("loc_100065E5: mov 0x28(%esp),%ecx;");
    asm("loc_100065E9: cmpl $0,(%ecx);");
    asm("loc_100065EC: jne loc_100065F6;");
    asm("loc_100065EE: cmp $0x101,%ebp;");
    asm("loc_100065F4: ja loc_10006651;");
    asm("loc_100065F6: mov 0x28(%ebx),%edx;");
    asm("loc_100065F9: push %edi;");
    asm("loc_100065FA: push %edx;");
    asm("loc_100065FB: calll *0x24(%ebx);");
    asm("loc_100065FE: add $8,%esp;");
    asm("loc_10006601: pop %esi;");
    asm("loc_10006602: pop %ebp;");
    asm("loc_10006603: pop %edi;");
    asm("loc_10006604: xor %eax,%eax;");
    asm("loc_10006606: pop %ebx;");
    asm("loc_10006607: pop %ecx;");
    asm("loc_10006608: ret;");
    asm("loc_10006609: cmp $0xFFFFFFFD,%esi;");
    asm("loc_1000660C: jne loc_10006628;");
    asm("loc_1000660E: mov 0x28(%ebx),%eax;");
    asm("loc_10006611: push %edi;");
    asm("loc_10006612: push %eax;");
    asm("loc_10006613: movl $_data_1000B5B0,0x18(%ebx);");
    asm("loc_1000661A: calll *0x24(%ebx);");
    asm("loc_1000661D: add $8,%esp;");
    asm("loc_10006620: mov %esi,%eax;");
    asm("loc_10006622: pop %esi;");
    asm("loc_10006623: pop %ebp;");
    asm("loc_10006624: pop %edi;");
    asm("loc_10006625: pop %ebx;");
    asm("loc_10006626: pop %ecx;");
    asm("loc_10006627: ret;");
    asm("loc_10006628: cmp $0xFFFFFFFB,%esi;");
    asm("loc_1000662B: jne loc_1000664C;");
    asm("loc_1000662D: mov 0x28(%ebx),%eax;");
    asm("loc_10006630: push %edi;");
    asm("loc_10006631: push %eax;");
    asm("loc_10006632: movl $_data_1000B594,0x18(%ebx);");
    asm("loc_10006639: mov $0xFFFFFFFD,%esi;");
    asm("loc_1000663E: calll *0x24(%ebx);");
    asm("loc_10006641: add $8,%esp;");
    asm("loc_10006644: mov %esi,%eax;");
    asm("loc_10006646: pop %esi;");
    asm("loc_10006647: pop %ebp;");
    asm("loc_10006648: pop %edi;");
    asm("loc_10006649: pop %ebx;");
    asm("loc_1000664A: pop %ecx;");
    asm("loc_1000664B: ret;");
    asm("loc_1000664C: cmp $0xFFFFFFFC,%esi;");
    asm("loc_1000664F: je loc_1000665D;");
    asm("loc_10006651: movl $_data_1000B570,0x18(%ebx);");
    asm("loc_10006658: mov $0xFFFFFFFD,%esi;");
    asm("loc_1000665D: mov 0x28(%ebx),%eax;");
    asm("loc_10006660: push %edi;");
    asm("loc_10006661: push %eax;");
    asm("loc_10006662: calll *0x24(%ebx);");
    asm("loc_10006665: add $8,%esp;");
    asm("loc_10006668: mov %esi,%eax;");
    asm("loc_1000666A: pop %esi;");
    asm("loc_1000666B: pop %ebp;");
    asm("loc_1000666C: pop %edi;");
    asm("loc_1000666D: pop %ebx;");
    asm("loc_1000666E: pop %ecx;");
    asm("loc_1000666F: ret;");
    asm("loc_10006670: cmp $0xFFFFFFFD,%esi;");
    asm("loc_10006673: jne loc_1000668F;");
    asm("loc_10006675: mov 0x28(%ebx),%ecx;");
    asm("loc_10006678: push %edi;");
    asm("loc_10006679: push %ecx;");
    asm("loc_1000667A: movl $_data_1000B54C,0x18(%ebx);");
    asm("loc_10006681: calll *0x24(%ebx);");
    asm("loc_10006684: add $8,%esp;");
    asm("loc_10006687: mov %esi,%eax;");
    asm("loc_10006689: pop %esi;");
    asm("loc_1000668A: pop %ebp;");
    asm("loc_1000668B: pop %edi;");
    asm("loc_1000668C: pop %ebx;");
    asm("loc_1000668D: pop %ecx;");
    asm("loc_1000668E: ret;");
    asm("loc_1000668F: cmp $0xFFFFFFFC,%esi;");
    asm("loc_10006692: je loc_100066A0;");
    asm("loc_10006694: movl $_data_1000B52C,0x18(%ebx);");
    asm("loc_1000669B: mov $0xFFFFFFFD,%esi;");
    asm("loc_100066A0: mov 0x28(%ebx),%ecx;");
    asm("loc_100066A3: push %edi;");
    asm("loc_100066A4: push %ecx;");
    asm("loc_100066A5: calll *0x24(%ebx);");
    asm("loc_100066A8: add $8,%esp;");
    asm("loc_100066AB: mov %esi,%eax;");
    asm("loc_100066AD: pop %esi;");
    asm("loc_100066AE: pop %ebp;");
    asm("loc_100066AF: pop %edi;");
    asm("loc_100066B0: pop %ebx;");
    asm("loc_100066B1: pop %ecx;");
    asm("loc_100066B2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100066C0() // _sub_100066C0
{
    __DEBUG_ASM(100066C0);
    // chunk 0x100066C0 _sub_100066C0
    asm("loc_100066C0: mov 4(%esp),%eax;");
    asm("loc_100066C4: mov _data_1000D018,%ecx;");
    asm("loc_100066CA: mov 8(%esp),%edx;");
    asm("loc_100066CE: mov %ecx,(%eax);");
    asm("loc_100066D0: mov _data_1000D01C,%eax;");
    asm("loc_100066D5: mov 0xC(%esp),%ecx;");
    asm("loc_100066D9: mov %eax,(%edx);");
    asm("loc_100066DB: mov 0x10(%esp),%edx;");
    asm("loc_100066DF: movl $_data_1000D020,(%ecx);");
    asm("loc_100066E5: movl $_data_1000E020,(%edx);");
    asm("loc_100066EB: xor %eax,%eax;");
    asm("loc_100066ED: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100066F0() // _sub_100066F0
{
    __DEBUG_ASM(100066F0);
    // chunk 0x100066F0 _sub_100066F0
    asm("loc_100066F0: push %ecx;");
    asm("loc_100066F1: push %ebx;");
    asm("loc_100066F2: mov 0xC(%esp),%ebx;");
    asm("loc_100066F6: push %ebp;");
    asm("loc_100066F7: mov 0x34(%ebx),%ebp;");
    asm("loc_100066FA: push %esi;");
    asm("loc_100066FB: mov 0x18(%esp),%esi;");
    asm("loc_100066FF: mov 0xC(%esi),%eax;");
    asm("loc_10006702: push %edi;");
    asm("loc_10006703: mov 0x30(%ebx),%edi;");
    asm("loc_10006706: cmp %ebp,%edi;");
    asm("loc_10006708: mov %eax,0x10(%esp);");
    asm("loc_1000670C: mov %edi,0x18(%esp);");
    asm("loc_10006710: jbe loc_10006715;");
    asm("loc_10006712: mov 0x2C(%ebx),%ebp;");
    asm("loc_10006715: mov 0x10(%esi),%eax;");
    asm("loc_10006718: sub %edi,%ebp;");
    asm("loc_1000671A: cmp %eax,%ebp;");
    asm("loc_1000671C: jbe loc_10006720;");
    asm("loc_1000671E: mov %eax,%ebp;");
    asm("loc_10006720: test %ebp,%ebp;");
    asm("loc_10006722: je loc_10006733;");
    asm("loc_10006724: cmpl $0xFFFFFFFB,0x20(%esp);");
    asm("loc_10006729: jne loc_10006733;");
    asm("loc_1000672B: movl $0,0x20(%esp);");
    asm("loc_10006733: mov 0x14(%esi),%edx;");
    asm("loc_10006736: sub %ebp,%eax;");
    asm("loc_10006738: add %ebp,%edx;");
    asm("loc_1000673A: mov %eax,0x10(%esi);");
    asm("loc_1000673D: mov %edx,0x14(%esi);");
    asm("loc_10006740: mov 0x38(%ebx),%eax;");
    asm("loc_10006743: test %eax,%eax;");
    asm("loc_10006745: je loc_10006755;");
    asm("loc_10006747: mov 0x3C(%ebx),%ecx;");
    asm("loc_1000674A: push %ebp;");
    asm("loc_1000674B: push %edi;");
    asm("loc_1000674C: push %ecx;");
    asm("loc_1000674D: call *%eax;");
    asm("loc_1000674F: mov %eax,0x3C(%ebx);");
    asm("loc_10006752: mov %eax,0x30(%esi);");
    asm("loc_10006755: mov 0x18(%esp),%eax;");
    asm("loc_10006759: mov %edi,%esi;");
    asm("loc_1000675B: mov 0x10(%esp),%edi;");
    asm("loc_1000675F: mov %ebp,%ecx;");
    asm("loc_10006761: mov %ecx,%edx;");
    asm("loc_10006763: shr $2,%ecx;");
    asm("loc_10006766: rep movsl (%esi),(%edi);");
    asm("loc_10006768: mov %edx,%ecx;");
    asm("loc_1000676A: and $3,%ecx;");
    asm("loc_1000676D: rep movsb (%esi),(%edi);");
    asm("loc_1000676F: mov 0x10(%esp),%edi;");
    asm("loc_10006773: mov 0x2C(%ebx),%ecx;");
    asm("loc_10006776: add %ebp,%edi;");
    asm("loc_10006778: add %ebp,%eax;");
    asm("loc_1000677A: cmp %ecx,%eax;");
    asm("loc_1000677C: mov %edi,0x10(%esp);");
    asm("loc_10006780: jne loc_100067FE;");
    asm("loc_10006782: cmp %ecx,0x34(%ebx);");
    asm("loc_10006785: mov 0x28(%ebx),%esi;");
    asm("loc_10006788: mov %esi,0x18(%esp);");
    asm("loc_1000678C: jne loc_10006791;");
    asm("loc_1000678E: mov %esi,0x34(%ebx);");
    asm("loc_10006791: mov 0x34(%ebx),%ebp;");
    asm("loc_10006794: mov 0x1C(%esp),%edi;");
    asm("loc_10006798: mov 0x10(%edi),%eax;");
    asm("loc_1000679B: sub %esi,%ebp;");
    asm("loc_1000679D: cmp %eax,%ebp;");
    asm("loc_1000679F: jbe loc_100067A3;");
    asm("loc_100067A1: mov %eax,%ebp;");
    asm("loc_100067A3: test %ebp,%ebp;");
    asm("loc_100067A5: je loc_100067B6;");
    asm("loc_100067A7: cmpl $0xFFFFFFFB,0x20(%esp);");
    asm("loc_100067AC: jne loc_100067B6;");
    asm("loc_100067AE: movl $0,0x20(%esp);");
    asm("loc_100067B6: mov 0x14(%edi),%edx;");
    asm("loc_100067B9: sub %ebp,%eax;");
    asm("loc_100067BB: add %ebp,%edx;");
    asm("loc_100067BD: mov %eax,0x10(%edi);");
    asm("loc_100067C0: mov %edx,0x14(%edi);");
    asm("loc_100067C3: mov 0x38(%ebx),%eax;");
    asm("loc_100067C6: test %eax,%eax;");
    asm("loc_100067C8: je loc_100067D8;");
    asm("loc_100067CA: mov 0x3C(%ebx),%ecx;");
    asm("loc_100067CD: push %ebp;");
    asm("loc_100067CE: push %esi;");
    asm("loc_100067CF: push %ecx;");
    asm("loc_100067D0: call *%eax;");
    asm("loc_100067D2: mov %eax,0x3C(%ebx);");
    asm("loc_100067D5: mov %eax,0x30(%edi);");
    asm("loc_100067D8: mov 0x10(%esp),%eax;");
    asm("loc_100067DC: mov %ebp,%ecx;");
    asm("loc_100067DE: mov %ecx,%edx;");
    asm("loc_100067E0: shr $2,%ecx;");
    asm("loc_100067E3: mov %eax,%edi;");
    asm("loc_100067E5: rep movsl (%esi),(%edi);");
    asm("loc_100067E7: add %ebp,%eax;");
    asm("loc_100067E9: mov %eax,0x10(%esp);");
    asm("loc_100067ED: mov 0x18(%esp),%eax;");
    asm("loc_100067F1: mov %edx,%ecx;");
    asm("loc_100067F3: and $3,%ecx;");
    asm("loc_100067F6: add %ebp,%eax;");
    asm("loc_100067F8: rep movsb (%esi),(%edi);");
    asm("loc_100067FA: mov %eax,0x18(%esp);");
    asm("loc_100067FE: mov 0x1C(%esp),%ecx;");
    asm("loc_10006802: mov 0x10(%esp),%edx;");
    asm("loc_10006806: pop %edi;");
    asm("loc_10006807: pop %esi;");
    asm("loc_10006808: mov %edx,0xC(%ecx);");
    asm("loc_1000680B: mov %eax,0x30(%ebx);");
    asm("loc_1000680E: mov 0x18(%esp),%eax;");
    asm("loc_10006812: pop %ebp;");
    asm("loc_10006813: pop %ebx;");
    asm("loc_10006814: pop %ecx;");
    asm("loc_10006815: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006820() // _sub_10006820
{
    __DEBUG_ASM(10006820);
    // chunk 0x10006820 _sub_10006820
    asm("loc_10006820: mov 0xC(%esp),%edx;");
    asm("loc_10006824: mov %edx,%eax;");
    asm("loc_10006826: push %esi;");
    asm("loc_10006827: and $3,%al;");
    asm("loc_10006829: xor %esi,%esi;");
    asm("loc_1000682B: xor %ecx,%ecx;");
    asm("loc_1000682D: cmp $1,%al;");
    asm("loc_1000682F: jne loc_10006838;");
    asm("loc_10006831: mov $_data_1000B5D8,%ecx;");
    asm("loc_10006836: jmp loc_1000684E;");
    asm("loc_10006838: test $4,%dl;");
    asm("loc_1000683B: je loc_10006844;");
    asm("loc_1000683D: mov $_data_1000B5D4,%ecx;");
    asm("loc_10006842: jmp loc_1000684E;");
    asm("loc_10006844: test $8,%dl;");
    asm("loc_10006847: je loc_1000684E;");
    asm("loc_10006849: mov $_data_1000B5D0,%ecx;");
    asm("loc_1000684E: mov 0xC(%esp),%edx;");
    asm("loc_10006852: test %edx,%edx;");
    asm("loc_10006854: je loc_10006868;");
    asm("loc_10006856: test %ecx,%ecx;");
    asm("loc_10006858: je loc_10006868;");
    asm("loc_1000685A: push %ecx;");
    asm("loc_1000685B: push %edx;");
    asm("loc_1000685C: call _sub_1000A482;");
    asm("loc_10006861: add $8,%esp;");
    asm("loc_10006864: pop %esi;");
    asm("loc_10006865: ret $0xC;");
    asm("loc_10006868: mov %esi,%eax;");
    asm("loc_1000686A: pop %esi;");
    asm("loc_1000686B: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006870() // _sub_10006870
{
    __DEBUG_ASM(10006870);
    // chunk 0x10006870 _sub_10006870
    asm("loc_10006870: mov 8(%esp),%eax;");
    asm("loc_10006874: mov 0x10(%esp),%ecx;");
    asm("loc_10006878: mov 0xC(%esp),%edx;");
    asm("loc_1000687C: push %eax;");
    asm("loc_1000687D: push %ecx;");
    asm("loc_1000687E: push $1;");
    asm("loc_10006880: push %edx;");
    asm("loc_10006881: call _sub_1000A406;");
    asm("loc_10006886: add $0x10,%esp;");
    asm("loc_10006889: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006890() // _sub_10006890
{
    __DEBUG_ASM(10006890);
    // chunk 0x10006890 _sub_10006890
    asm("loc_10006890: mov 8(%esp),%eax;");
    asm("loc_10006894: mov 0x10(%esp),%ecx;");
    asm("loc_10006898: mov 0xC(%esp),%edx;");
    asm("loc_1000689C: push %eax;");
    asm("loc_1000689D: push %ecx;");
    asm("loc_1000689E: push $1;");
    asm("loc_100068A0: push %edx;");
    asm("loc_100068A1: call _sub_1000A400;");
    asm("loc_100068A6: add $0x10,%esp;");
    asm("loc_100068A9: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100068B0() // _sub_100068B0
{
    __DEBUG_ASM(100068B0);
    // chunk 0x100068B0 _sub_100068B0
    asm("loc_100068B0: mov 8(%esp),%eax;");
    asm("loc_100068B4: push %eax;");
    asm("loc_100068B5: call _sub_1000A470;");
    asm("loc_100068BA: add $4,%esp;");
    asm("loc_100068BD: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100068C0() // _sub_100068C0
{
    __DEBUG_ASM(100068C0);
    // chunk 0x100068C0 _sub_100068C0
    asm("loc_100068C0: mov 0x10(%esp),%eax;");
    asm("loc_100068C4: sub $0,%eax;");
    asm("loc_100068C7: je loc_100068E3;");
    asm("loc_100068C9: dec %eax;");
    asm("loc_100068CA: je loc_100068DC;");
    asm("loc_100068CC: dec %eax;");
    asm("loc_100068CD: je loc_100068D5;");
    asm("loc_100068CF: or $0xFFFFFFFF,%eax;");
    asm("loc_100068D2: ret $0x10;");
    asm("loc_100068D5: mov $2,%eax;");
    asm("loc_100068DA: jmp loc_100068E5;");
    asm("loc_100068DC: mov $1,%eax;");
    asm("loc_100068E1: jmp loc_100068E5;");
    asm("loc_100068E3: xor %eax,%eax;");
    asm("loc_100068E5: mov 8(%esp),%ecx;");
    asm("loc_100068E9: push %eax;");
    asm("loc_100068EA: mov 0x10(%esp),%eax;");
    asm("loc_100068EE: push %eax;");
    asm("loc_100068EF: push %ecx;");
    asm("loc_100068F0: call _sub_1000A458;");
    asm("loc_100068F5: add $0xC,%esp;");
    asm("loc_100068F8: xor %eax,%eax;");
    asm("loc_100068FA: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006900() // _sub_10006900
{
    __DEBUG_ASM(10006900);
    // chunk 0x10006900 _sub_10006900
    asm("loc_10006900: mov 8(%esp),%eax;");
    asm("loc_10006904: push %eax;");
    asm("loc_10006905: call _sub_1000A412;");
    asm("loc_1000690A: add $4,%esp;");
    asm("loc_1000690D: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006910() // _sub_10006910
{
    __DEBUG_ASM(10006910);
    // chunk 0x10006910 _sub_10006910
    asm("loc_10006910: mov 8(%esp),%eax;");
    asm("loc_10006914: mov 0xC(%eax),%eax;");
    asm("loc_10006917: and $0x20,%eax;");
    asm("loc_1000691A: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006920() // _sub_10006920
{
    __DEBUG_ASM(10006920);
    // chunk 0x10006920 _sub_10006920
    asm("loc_10006920: mov 4(%esp),%eax;");
    asm("loc_10006924: movl $_sub_10006820,(%eax);");
    asm("loc_1000692A: movl $_sub_10006870,4(%eax);");
    asm("loc_10006931: movl $_sub_10006890,8(%eax);");
    asm("loc_10006938: movl $_sub_100068B0,0xC(%eax);");
    asm("loc_1000693F: movl $_sub_100068C0,0x10(%eax);");
    asm("loc_10006946: movl $_sub_10006900,0x14(%eax);");
    asm("loc_1000694D: movl $_sub_10006910,0x18(%eax);");
    asm("loc_10006954: movl $0,0x1C(%eax);");
    asm("loc_1000695B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006960() // _sub_10006960
{
    __DEBUG_ASM(10006960);
    // chunk 0x10006960 _sub_10006960
    asm("loc_10006960: push %esi;");
    asm("loc_10006961: lea 0x8C(%edx),%eax;");
    asm("loc_10006967: mov $0x11E,%ecx;");
    asm("loc_1000696C: xor %esi,%esi;");
    asm("loc_1000696E: mov %edi,%edi;");
    asm("loc_10006970: mov %si,(%eax);");
    asm("loc_10006973: add $4,%eax;");
    asm("loc_10006976: dec %ecx;");
    asm("loc_10006977: jne loc_10006970;");
    asm("loc_10006979: lea 0x980(%edx),%eax;");
    asm("loc_1000697F: mov $0x1E,%ecx;");
    asm("loc_10006984: mov %si,(%eax);");
    asm("loc_10006987: add $4,%eax;");
    asm("loc_1000698A: dec %ecx;");
    asm("loc_1000698B: jne loc_10006984;");
    asm("loc_1000698D: lea 0xA74(%edx),%eax;");
    asm("loc_10006993: mov $0x13,%ecx;");
    asm("loc_10006998: mov %si,(%eax);");
    asm("loc_1000699B: add $4,%eax;");
    asm("loc_1000699E: dec %ecx;");
    asm("loc_1000699F: jne loc_10006998;");
    asm("loc_100069A1: mov %esi,0x16A4(%edx);");
    asm("loc_100069A7: mov %esi,0x16A0(%edx);");
    asm("loc_100069AD: mov %esi,0x16A8(%edx);");
    asm("loc_100069B3: mov %esi,0x1698(%edx);");
    asm("loc_100069B9: movw $1,0x48C(%edx);");
    asm("loc_100069C2: pop %esi;");
    asm("loc_100069C3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100069D0() // _sub_100069D0
{
    __DEBUG_ASM(100069D0);
    // chunk 0x100069D0 _sub_100069D0
    asm("loc_100069D0: push %ecx;");
    asm("loc_100069D1: mov 0x1448(%eax),%edx;");
    asm("loc_100069D7: push %ebx;");
    asm("loc_100069D8: push %ebp;");
    asm("loc_100069D9: push %esi;");
    asm("loc_100069DA: mov 0x14(%esp),%esi;");
    asm("loc_100069DE: mov 0xB54(%eax,%esi,4),%ebp;");
    asm("loc_100069E5: lea (%esi,%esi),%ecx;");
    asm("loc_100069E8: cmp %edx,%ecx;");
    asm("loc_100069EA: mov %ebp,0xC(%esp);");
    asm("loc_100069EE: jg loc_10006A89;");
    asm("loc_100069F4: jge loc_10006A28;");
    asm("loc_100069F6: mov 0xB58(%eax,%ecx,4),%esi;");
    asm("loc_100069FD: mov 0xB54(%eax,%ecx,4),%ebp;");
    asm("loc_10006A04: mov (%edi,%esi,4),%dx;");
    asm("loc_10006A08: mov (%edi,%ebp,4),%bx;");
    asm("loc_10006A0C: cmp %bx,%dx;");
    asm("loc_10006A0F: jb loc_10006A23;");
    asm("loc_10006A11: jne loc_10006A24;");
    asm("loc_10006A13: mov 0x1450(%esi,%eax),%dl;");
    asm("loc_10006A1A: cmp 0x1450(%eax,%ebp),%dl;");
    asm("loc_10006A21: ja loc_10006A24;");
    asm("loc_10006A23: inc %ecx;");
    asm("loc_10006A24: mov 0xC(%esp),%ebp;");
    asm("loc_10006A28: mov 0xB54(%eax,%ecx,4),%esi;");
    asm("loc_10006A2F: mov (%edi,%ebp,4),%dx;");
    asm("loc_10006A33: mov (%edi,%esi,4),%bx;");
    asm("loc_10006A37: cmp %bx,%dx;");
    asm("loc_10006A3A: jb loc_10006A69;");
    asm("loc_10006A3C: jne loc_10006A4E;");
    asm("loc_10006A3E: mov 0x1450(%eax,%ebp),%dl;");
    asm("loc_10006A45: cmp 0x1450(%esi,%eax),%dl;");
    asm("loc_10006A4C: jbe loc_10006A79;");
    asm("loc_10006A4E: mov 0x14(%esp),%edx;");
    asm("loc_10006A52: mov %esi,0xB54(%eax,%edx,4);");
    asm("loc_10006A59: mov 0x1448(%eax),%edx;");
    asm("loc_10006A5F: mov %ecx,0x14(%esp);");
    asm("loc_10006A63: shl $1,%ecx;");
    asm("loc_10006A65: cmp %edx,%ecx;");
    asm("loc_10006A67: jle loc_100069F4;");
    asm("loc_10006A69: mov 0x14(%esp),%ecx;");
    asm("loc_10006A6D: pop %esi;");
    asm("loc_10006A6E: mov %ebp,0xB54(%eax,%ecx,4);");
    asm("loc_10006A75: pop %ebp;");
    asm("loc_10006A76: pop %ebx;");
    asm("loc_10006A77: pop %ecx;");
    asm("loc_10006A78: ret;");
    asm("loc_10006A79: mov 0x14(%esp),%edx;");
    asm("loc_10006A7D: pop %esi;");
    asm("loc_10006A7E: mov %ebp,0xB54(%eax,%edx,4);");
    asm("loc_10006A85: pop %ebp;");
    asm("loc_10006A86: pop %ebx;");
    asm("loc_10006A87: pop %ecx;");
    asm("loc_10006A88: ret;");
    asm("loc_10006A89: mov %ebp,0xB54(%eax,%esi,4);");
    asm("loc_10006A90: pop %esi;");
    asm("loc_10006A91: pop %ebp;");
    asm("loc_10006A92: pop %ebx;");
    asm("loc_10006A93: pop %ecx;");
    asm("loc_10006A94: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006AA0() // _sub_10006AA0
{
    __DEBUG_ASM(10006AA0);
    // chunk 0x10006AA0 _sub_10006AA0
    asm("loc_10006AA0: sub $0x20,%esp;");
    asm("loc_10006AA3: mov 4(%eax),%ecx;");
    asm("loc_10006AA6: push %ebx;");
    asm("loc_10006AA7: mov (%eax),%ebx;");
    asm("loc_10006AA9: mov 8(%eax),%eax;");
    asm("loc_10006AAC: mov %ecx,0x18(%esp);");
    asm("loc_10006AB0: mov 4(%eax),%ecx;");
    asm("loc_10006AB3: mov %ecx,0x20(%esp);");
    asm("loc_10006AB7: mov 8(%eax),%ecx;");
    asm("loc_10006ABA: push %ebp;");
    asm("loc_10006ABB: mov (%eax),%ebp;");
    asm("loc_10006ABD: mov %ecx,0x20(%esp);");
    asm("loc_10006AC1: push %esi;");
    asm("loc_10006AC2: mov 0x10(%eax),%esi;");
    asm("loc_10006AC5: xor %eax,%eax;");
    asm("loc_10006AC7: push %edi;");
    asm("loc_10006AC8: lea 0xB34(%edx),%edi;");
    asm("loc_10006ACE: mov $8,%ecx;");
    asm("loc_10006AD3: rep stos %eax,(%edi);");
    asm("loc_10006AD5: mov 0x144C(%edx),%eax;");
    asm("loc_10006ADB: mov 0xB54(%edx,%eax,4),%ecx;");
    asm("loc_10006AE2: movw $0,2(%ebx,%ecx,4);");
    asm("loc_10006AE9: mov 0x144C(%edx),%ecx;");
    asm("loc_10006AEF: inc %ecx;");
    asm("loc_10006AF0: cmp $0x23D,%ecx;");
    asm("loc_10006AF6: mov %esi,0x18(%esp);");
    asm("loc_10006AFA: movl $0,0x10(%esp);");
    asm("loc_10006B02: jge loc_10006C9C;");
    asm("loc_10006B08: lea 0xB54(%edx,%ecx,4),%eax;");
    asm("loc_10006B0F: mov %eax,0x14(%esp);");
    asm("loc_10006B13: mov $0x23D,%eax;");
    asm("loc_10006B18: sub %ecx,%eax;");
    asm("loc_10006B1A: add %eax,%ecx;");
    asm("loc_10006B1C: mov %eax,0x20(%esp);");
    asm("loc_10006B20: mov %ecx,0x1C(%esp);");
    asm("loc_10006B24: mov 0x14(%esp),%ecx;");
    asm("loc_10006B28: mov (%ecx),%ecx;");
    asm("loc_10006B2A: movzwl 2(%ebx,%ecx,4),%eax;");
    asm("loc_10006B2F: movzwl 2(%ebx,%eax,4),%eax;");
    asm("loc_10006B34: inc %eax;");
    asm("loc_10006B35: cmp %esi,%eax;");
    asm("loc_10006B37: jle loc_10006B44;");
    asm("loc_10006B39: mov 0x10(%esp),%edi;");
    asm("loc_10006B3D: inc %edi;");
    asm("loc_10006B3E: mov %esi,%eax;");
    asm("loc_10006B40: mov %edi,0x10(%esp);");
    asm("loc_10006B44: cmp 0x24(%esp),%ecx;");
    asm("loc_10006B48: mov %ax,2(%ebx,%ecx,4);");
    asm("loc_10006B4D: jg loc_10006B9B;");
    asm("loc_10006B4F: mov 0x28(%esp),%edi;");
    asm("loc_10006B53: incw 0xB34(%edx,%eax,2);");
    asm("loc_10006B5B: xor %esi,%esi;");
    asm("loc_10006B5D: cmp %edi,%ecx;");
    asm("loc_10006B5F: jl loc_10006B6C;");
    asm("loc_10006B61: mov %ecx,%esi;");
    asm("loc_10006B63: sub %edi,%esi;");
    asm("loc_10006B65: mov 0x2C(%esp),%edi;");
    asm("loc_10006B69: mov (%edi,%esi,4),%esi;");
    asm("loc_10006B6C: movzwl (%ebx,%ecx,4),%edi;");
    asm("loc_10006B70: add %esi,%eax;");
    asm("loc_10006B72: imul %edi,%eax;");
    asm("loc_10006B75: add %eax,0x16A0(%edx);");
    asm("loc_10006B7B: test %ebp,%ebp;");
    asm("loc_10006B7D: je loc_10006B97;");
    asm("loc_10006B7F: movzwl 2(%ebp,%ecx,4),%ecx;");
    asm("loc_10006B84: mov 0x16A4(%edx),%eax;");
    asm("loc_10006B8A: add %esi,%ecx;");
    asm("loc_10006B8C: imul %edi,%ecx;");
    asm("loc_10006B8F: add %ecx,%eax;");
    asm("loc_10006B91: mov %eax,0x16A4(%edx);");
    asm("loc_10006B97: mov 0x18(%esp),%esi;");
    asm("loc_10006B9B: mov 0x14(%esp),%ecx;");
    asm("loc_10006B9F: mov 0x20(%esp),%eax;");
    asm("loc_10006BA3: add $4,%ecx;");
    asm("loc_10006BA6: dec %eax;");
    asm("loc_10006BA7: mov %ecx,0x14(%esp);");
    asm("loc_10006BAB: mov %eax,0x20(%esp);");
    asm("loc_10006BAF: jne loc_10006B24;");
    asm("loc_10006BB5: mov 0x10(%esp),%eax;");
    asm("loc_10006BB9: test %eax,%eax;");
    asm("loc_10006BBB: je loc_10006C9C;");
    asm("loc_10006BC1: lea -1(%esi),%edi;");
    asm("loc_10006BC4: lea 0xB34(%edx,%esi,2),%esi;");
    asm("loc_10006BCB: jmp loc_10006BD0;");
    asm("loc_10006BCD: lea (%ecx),%ecx;");
    asm("loc_10006BD0: mov %edi,%eax;");
    asm("loc_10006BD2: cmpw $0,0xB34(%edx,%eax,2);");
    asm("loc_10006BDB: lea 0xB34(%edx,%eax,2),%ecx;");
    asm("loc_10006BE2: jne loc_10006BEE;");
    asm("loc_10006BE4: sub $2,%ecx;");
    asm("loc_10006BE7: dec %eax;");
    asm("loc_10006BE8: cmpw $0,(%ecx);");
    asm("loc_10006BEC: je loc_10006BE4;");
    asm("loc_10006BEE: decw 0xB34(%edx,%eax,2);");
    asm("loc_10006BF6: addw $2,0xB36(%edx,%eax,2);");
    asm("loc_10006BFF: mov 0x10(%esp),%eax;");
    asm("loc_10006C03: decw (%esi);");
    asm("loc_10006C06: sub $2,%eax;");
    asm("loc_10006C09: test %eax,%eax;");
    asm("loc_10006C0B: mov %eax,0x10(%esp);");
    asm("loc_10006C0F: jg loc_10006BD0;");
    asm("loc_10006C11: mov 0x18(%esp),%ecx;");
    asm("loc_10006C15: test %ecx,%ecx;");
    asm("loc_10006C17: je loc_10006C9C;");
    asm("loc_10006C1D: mov %esi,0x20(%esp);");
    asm("loc_10006C21: movzwl (%esi),%esi;");
    asm("loc_10006C24: test %esi,%esi;");
    asm("loc_10006C26: mov %esi,0x18(%esp);");
    asm("loc_10006C2A: je loc_10006C8C;");
    asm("loc_10006C2C: mov 0x1C(%esp),%eax;");
    asm("loc_10006C30: lea 0xB54(%edx,%eax,4),%ebp;");
    asm("loc_10006C37: mov 0x1C(%esp),%edi;");
    asm("loc_10006C3B: mov -4(%ebp),%eax;");
    asm("loc_10006C3E: dec %edi;");
    asm("loc_10006C3F: sub $4,%ebp;");
    asm("loc_10006C42: mov %edi,0x1C(%esp);");
    asm("loc_10006C46: cmp 0x24(%esp),%eax;");
    asm("loc_10006C4A: mov %ebp,0x2C(%esp);");
    asm("loc_10006C4E: jg loc_10006C88;");
    asm("loc_10006C50: movzwl 2(%ebx,%eax,4),%edi;");
    asm("loc_10006C55: cmp %ecx,%edi;");
    asm("loc_10006C57: lea 2(%ebx,%eax,4),%esi;");
    asm("loc_10006C5B: je loc_10006C7D;");
    asm("loc_10006C5D: movzwl (%ebx,%eax,4),%eax;");
    asm("loc_10006C61: mov %ecx,%ebp;");
    asm("loc_10006C63: sub %edi,%ebp;");
    asm("loc_10006C65: imul %eax,%ebp;");
    asm("loc_10006C68: mov 0x16A0(%edx),%eax;");
    asm("loc_10006C6E: add %ebp,%eax;");
    asm("loc_10006C70: mov 0x2C(%esp),%ebp;");
    asm("loc_10006C74: mov %eax,0x16A0(%edx);");
    asm("loc_10006C7A: mov %cx,(%esi);");
    asm("loc_10006C7D: mov 0x18(%esp),%eax;");
    asm("loc_10006C81: dec %eax;");
    asm("loc_10006C82: mov %eax,0x18(%esp);");
    asm("loc_10006C86: mov %eax,%esi;");
    asm("loc_10006C88: test %esi,%esi;");
    asm("loc_10006C8A: jne loc_10006C37;");
    asm("loc_10006C8C: mov 0x20(%esp),%esi;");
    asm("loc_10006C90: dec %ecx;");
    asm("loc_10006C91: sub $2,%esi;");
    asm("loc_10006C94: test %ecx,%ecx;");
    asm("loc_10006C96: mov %esi,0x20(%esp);");
    asm("loc_10006C9A: jne loc_10006C21;");
    asm("loc_10006C9C: pop %edi;");
    asm("loc_10006C9D: pop %esi;");
    asm("loc_10006C9E: pop %ebp;");
    asm("loc_10006C9F: pop %ebx;");
    asm("loc_10006CA0: add $0x20,%esp;");
    asm("loc_10006CA3: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006CB0() // _sub_10006CB0
{
    __DEBUG_ASM(10006CB0);
    // chunk 0x10006CB0 _sub_10006CB0
    asm("loc_10006CB0: push %ecx;");
    asm("loc_10006CB1: push %ebx;");
    asm("loc_10006CB2: push %ebp;");
    asm("loc_10006CB3: push %esi;");
    asm("loc_10006CB4: push %edi;");
    asm("loc_10006CB5: movzwl 2(%eax),%edi;");
    asm("loc_10006CB9: or $0xFFFFFFFF,%ebp;");
    asm("loc_10006CBC: xor %esi,%esi;");
    asm("loc_10006CBE: test %edi,%edi;");
    asm("loc_10006CC0: mov %ecx,%ebx;");
    asm("loc_10006CC2: mov $7,%ecx;");
    asm("loc_10006CC7: mov $4,%edx;");
    asm("loc_10006CCC: jne loc_10006CD8;");
    asm("loc_10006CCE: mov $0x8A,%ecx;");
    asm("loc_10006CD3: mov $3,%edx;");
    asm("loc_10006CD8: test %ebx,%ebx;");
    asm("loc_10006CDA: movw $0xFFFF,6(%eax,%ebx,4);");
    asm("loc_10006CE1: jl loc_10006D82;");
    asm("loc_10006CE7: add $6,%eax;");
    asm("loc_10006CEA: mov %eax,0x10(%esp);");
    asm("loc_10006CEE: inc %ebx;");
    asm("loc_10006CEF: nop;");
    asm("loc_10006CF0: mov %edi,%eax;");
    asm("loc_10006CF2: mov 0x10(%esp),%edi;");
    asm("loc_10006CF6: movzwl (%edi),%edi;");
    asm("loc_10006CF9: inc %esi;");
    asm("loc_10006CFA: cmp %ecx,%esi;");
    asm("loc_10006CFC: jge loc_10006D02;");
    asm("loc_10006CFE: cmp %edi,%eax;");
    asm("loc_10006D00: je loc_10006D70;");
    asm("loc_10006D02: cmp %edx,%esi;");
    asm("loc_10006D04: mov 0x18(%esp),%ecx;");
    asm("loc_10006D08: jge loc_10006D14;");
    asm("loc_10006D0A: add %si,0xA74(%ecx,%eax,4);");
    asm("loc_10006D12: jmp loc_10006D42;");
    asm("loc_10006D14: test %eax,%eax;");
    asm("loc_10006D16: je loc_10006D2D;");
    asm("loc_10006D18: cmp %ebp,%eax;");
    asm("loc_10006D1A: je loc_10006D24;");
    asm("loc_10006D1C: incw 0xA74(%ecx,%eax,4);");
    asm("loc_10006D24: incw 0xAB4(%ecx);");
    asm("loc_10006D2B: jmp loc_10006D42;");
    asm("loc_10006D2D: cmp $0xA,%esi;");
    asm("loc_10006D30: jg loc_10006D3B;");
    asm("loc_10006D32: incw 0xAB8(%ecx);");
    asm("loc_10006D39: jmp loc_10006D42;");
    asm("loc_10006D3B: incw 0xABC(%ecx);");
    asm("loc_10006D42: xor %esi,%esi;");
    asm("loc_10006D44: test %edi,%edi;");
    asm("loc_10006D46: mov %eax,%ebp;");
    asm("loc_10006D48: jne loc_10006D56;");
    asm("loc_10006D4A: mov $0x8A,%ecx;");
    asm("loc_10006D4F: mov $3,%edx;");
    asm("loc_10006D54: jmp loc_10006D70;");
    asm("loc_10006D56: cmp %edi,%eax;");
    asm("loc_10006D58: jne loc_10006D66;");
    asm("loc_10006D5A: mov $6,%ecx;");
    asm("loc_10006D5F: mov $3,%edx;");
    asm("loc_10006D64: jmp loc_10006D70;");
    asm("loc_10006D66: mov $7,%ecx;");
    asm("loc_10006D6B: mov $4,%edx;");
    asm("loc_10006D70: mov 0x10(%esp),%eax;");
    asm("loc_10006D74: add $4,%eax;");
    asm("loc_10006D77: dec %ebx;");
    asm("loc_10006D78: mov %eax,0x10(%esp);");
    asm("loc_10006D7C: jne loc_10006CF0;");
    asm("loc_10006D82: pop %edi;");
    asm("loc_10006D83: pop %esi;");
    asm("loc_10006D84: pop %ebp;");
    asm("loc_10006D85: pop %ebx;");
    asm("loc_10006D86: pop %ecx;");
    asm("loc_10006D87: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10006D90() // _sub_10006D90
{
    __DEBUG_ASM(10006D90);
    // chunk 0x10006D90 _sub_10006D90
    asm("loc_10006D90: sub $0xC,%esp;");
    asm("loc_10006D93: push %ebx;");
    asm("loc_10006D94: push %ebp;");
    asm("loc_10006D95: mov 0x18(%esp),%ebp;");
    asm("loc_10006D99: push %esi;");
    asm("loc_10006D9A: push %edi;");
    asm("loc_10006D9B: mov %ecx,%edi;");
    asm("loc_10006D9D: movzwl 2(%edi),%ecx;");
    asm("loc_10006DA1: mov %ecx,0x10(%esp);");
    asm("loc_10006DA5: xor %esi,%esi;");
    asm("loc_10006DA7: or $0xFFFFFFFF,%ebx;");
    asm("loc_10006DAA: cmp %esi,0x10(%esp);");
    asm("loc_10006DAE: mov $7,%ecx;");
    asm("loc_10006DB3: mov $4,%edx;");
    asm("loc_10006DB8: jne loc_10006DC4;");
    asm("loc_10006DBA: mov $0x8A,%ecx;");
    asm("loc_10006DBF: mov $3,%edx;");
    asm("loc_10006DC4: test %ebp,%ebp;");
    asm("loc_10006DC6: jl loc_10007292;");
    asm("loc_10006DCC: add $6,%edi;");
    asm("loc_10006DCF: inc %ebp;");
    asm("loc_10006DD0: mov %edi,0x14(%esp);");
    asm("loc_10006DD4: mov %ebp,0x18(%esp);");
    asm("loc_10006DD8: jmp loc_10006DE0;");
    asm("loc_10006DDA: lea (%ebx),%ebx;");
    asm("loc_10006DE0: mov 0x14(%esp),%edi;");
    asm("loc_10006DE4: movzwl (%edi),%edi;");
    asm("loc_10006DE7: mov 0x10(%esp),%ebp;");
    asm("loc_10006DEB: inc %esi;");
    asm("loc_10006DEC: cmp %ecx,%esi;");
    asm("loc_10006DEE: mov %edi,0x10(%esp);");
    asm("loc_10006DF2: mov %esi,0x20(%esp);");
    asm("loc_10006DF6: jge loc_10006E00;");
    asm("loc_10006DF8: cmp %edi,%ebp;");
    asm("loc_10006DFA: je loc_10007278;");
    asm("loc_10006E00: cmp %edx,%esi;");
    asm("loc_10006E02: jge loc_10006EAF;");
    asm("loc_10006E08: jmp loc_10006E10;");
    asm("loc_10006E0A: lea (%ebx),%ebx;");
    asm("loc_10006E10: movzwl 0xA76(%eax,%ebp,4),%edi;");
    asm("loc_10006E18: mov 0x16B4(%eax),%ecx;");
    asm("loc_10006E1E: mov $0x10,%edx;");
    asm("loc_10006E23: sub %edi,%edx;");
    asm("loc_10006E25: cmp %edx,%ecx;");
    asm("loc_10006E27: jle loc_10006E85;");
    asm("loc_10006E29: movzwl 0xA74(%eax,%ebp,4),%esi;");
    asm("loc_10006E31: mov %esi,%edx;");
    asm("loc_10006E33: shl %cl,%edx;");
    asm("loc_10006E35: mov 8(%eax),%ecx;");
    asm("loc_10006E38: or %dx,0x16B0(%eax);");
    asm("loc_10006E3F: mov 0x14(%eax),%edx;");
    asm("loc_10006E42: mov 0x16B0(%eax),%bl;");
    asm("loc_10006E48: mov %bl,(%ecx,%edx);");
    asm("loc_10006E4B: mov 0x14(%eax),%edx;");
    asm("loc_10006E4E: mov 0x16B1(%eax),%bl;");
    asm("loc_10006E54: inc %edx;");
    asm("loc_10006E55: mov %edx,0x14(%eax);");
    asm("loc_10006E58: mov %edx,%ecx;");
    asm("loc_10006E5A: mov 8(%eax),%edx;");
    asm("loc_10006E5D: mov %bl,(%ecx,%edx);");
    asm("loc_10006E60: mov 0x14(%eax),%ecx;");
    asm("loc_10006E63: mov 0x16B4(%eax),%edx;");
    asm("loc_10006E69: inc %ecx;");
    asm("loc_10006E6A: mov %ecx,0x14(%eax);");
    asm("loc_10006E6D: mov $0x10,%cl;");
    asm("loc_10006E6F: sub %dl,%cl;");
    asm("loc_10006E71: shr %cl,%si;");
    asm("loc_10006E74: lea -0x10(%edx,%edi),%ecx;");
    asm("loc_10006E78: mov %si,0x16B0(%eax);");
    asm("loc_10006E7F: mov 0x20(%esp),%esi;");
    asm("loc_10006E83: jmp loc_10006E99;");
    asm("loc_10006E85: mov 0xA74(%eax,%ebp,4),%dx;");
    asm("loc_10006E8D: shl %cl,%dx;");
    asm("loc_10006E90: or %dx,0x16B0(%eax);");
    asm("loc_10006E97: add %edi,%ecx;");
    asm("loc_10006E99: dec %esi;");
    asm("loc_10006E9A: mov %ecx,0x16B4(%eax);");
    asm("loc_10006EA0: mov %esi,0x20(%esp);");
    asm("loc_10006EA4: jne loc_10006E10;");
    asm("loc_10006EAA: jmp loc_10007246;");
    asm("loc_10006EAF: test %ebp,%ebp;");
    asm("loc_10006EB1: je loc_10007050;");
    asm("loc_10006EB7: cmp %ebx,%ebp;");
    asm("loc_10006EB9: je loc_10006F53;");
    asm("loc_10006EBF: movzwl 0xA76(%eax,%ebp,4),%edi;");
    asm("loc_10006EC7: mov 0x16B4(%eax),%ecx;");
    asm("loc_10006ECD: mov $0x10,%edx;");
    asm("loc_10006ED2: sub %edi,%edx;");
    asm("loc_10006ED4: cmp %edx,%ecx;");
    asm("loc_10006ED6: jle loc_10006F34;");
    asm("loc_10006ED8: movzwl 0xA74(%eax,%ebp,4),%esi;");
    asm("loc_10006EE0: mov %esi,%edx;");
    asm("loc_10006EE2: shl %cl,%edx;");
    asm("loc_10006EE4: mov 8(%eax),%ecx;");
    asm("loc_10006EE7: or %dx,0x16B0(%eax);");
    asm("loc_10006EEE: mov 0x14(%eax),%edx;");
    asm("loc_10006EF1: mov 0x16B0(%eax),%bl;");
    asm("loc_10006EF7: mov %bl,(%ecx,%edx);");
    asm("loc_10006EFA: mov 0x14(%eax),%edx;");
    asm("loc_10006EFD: mov 0x16B1(%eax),%bl;");
    asm("loc_10006F03: inc %edx;");
    asm("loc_10006F04: mov %edx,0x14(%eax);");
    asm("loc_10006F07: mov %edx,%ecx;");
    asm("loc_10006F09: mov 8(%eax),%edx;");
    asm("loc_10006F0C: mov %bl,(%ecx,%edx);");
    asm("loc_10006F0F: mov 0x14(%eax),%ecx;");
    asm("loc_10006F12: mov 0x16B4(%eax),%edx;");
    asm("loc_10006F18: inc %ecx;");
    asm("loc_10006F19: mov %ecx,0x14(%eax);");
    asm("loc_10006F1C: mov $0x10,%cl;");
    asm("loc_10006F1E: sub %dl,%cl;");
    asm("loc_10006F20: shr %cl,%si;");
    asm("loc_10006F23: lea -0x10(%edx,%edi),%ecx;");
    asm("loc_10006F27: mov %si,0x16B0(%eax);");
    asm("loc_10006F2E: mov 0x20(%esp),%esi;");
    asm("loc_10006F32: jmp loc_10006F48;");
    asm("loc_10006F34: mov 0xA74(%eax,%ebp,4),%dx;");
    asm("loc_10006F3C: shl %cl,%dx;");
    asm("loc_10006F3F: or %dx,0x16B0(%eax);");
    asm("loc_10006F46: add %edi,%ecx;");
    asm("loc_10006F48: dec %esi;");
    asm("loc_10006F49: mov %ecx,0x16B4(%eax);");
    asm("loc_10006F4F: mov %esi,0x20(%esp);");
    asm("loc_10006F53: movzwl 0xAB6(%eax),%edi;");
    asm("loc_10006F5A: mov 0x16B4(%eax),%ecx;");
    asm("loc_10006F60: mov $0x10,%edx;");
    asm("loc_10006F65: sub %edi,%edx;");
    asm("loc_10006F67: cmp %edx,%ecx;");
    asm("loc_10006F69: jle loc_10006FC6;");
    asm("loc_10006F6B: movzwl 0xAB4(%eax),%esi;");
    asm("loc_10006F72: mov %esi,%edx;");
    asm("loc_10006F74: shl %cl,%edx;");
    asm("loc_10006F76: mov 8(%eax),%ecx;");
    asm("loc_10006F79: or %dx,0x16B0(%eax);");
    asm("loc_10006F80: mov 0x14(%eax),%edx;");
    asm("loc_10006F83: mov 0x16B0(%eax),%bl;");
    asm("loc_10006F89: mov %bl,(%ecx,%edx);");
    asm("loc_10006F8C: mov 0x14(%eax),%edx;");
    asm("loc_10006F8F: mov 0x16B1(%eax),%bl;");
    asm("loc_10006F95: inc %edx;");
    asm("loc_10006F96: mov %edx,0x14(%eax);");
    asm("loc_10006F99: mov %edx,%ecx;");
    asm("loc_10006F9B: mov 8(%eax),%edx;");
    asm("loc_10006F9E: mov %bl,(%ecx,%edx);");
    asm("loc_10006FA1: mov 0x14(%eax),%ecx;");
    asm("loc_10006FA4: mov 0x16B4(%eax),%edx;");
    asm("loc_10006FAA: inc %ecx;");
    asm("loc_10006FAB: mov %ecx,0x14(%eax);");
    asm("loc_10006FAE: mov $0x10,%cl;");
    asm("loc_10006FB0: sub %dl,%cl;");
    asm("loc_10006FB2: shr %cl,%si;");
    asm("loc_10006FB5: lea -0x10(%edx,%edi),%ecx;");
    asm("loc_10006FB9: mov %si,0x16B0(%eax);");
    asm("loc_10006FC0: mov 0x20(%esp),%esi;");
    asm("loc_10006FC4: jmp loc_10006FD9;");
    asm("loc_10006FC6: mov 0xAB4(%eax),%dx;");
    asm("loc_10006FCD: shl %cl,%dx;");
    asm("loc_10006FD0: or %dx,0x16B0(%eax);");
    asm("loc_10006FD7: add %edi,%ecx;");
    asm("loc_10006FD9: add $0xFFFFFFFD,%esi;");
    asm("loc_10006FDC: cmp $0xE,%ecx;");
    asm("loc_10006FDF: mov %ecx,0x16B4(%eax);");
    asm("loc_10006FE5: jle loc_1000703F;");
    asm("loc_10006FE7: mov %esi,%edx;");
    asm("loc_10006FE9: shl %cl,%edx;");
    asm("loc_10006FEB: mov 8(%eax),%ecx;");
    asm("loc_10006FEE: or %dx,0x16B0(%eax);");
    asm("loc_10006FF5: mov 0x14(%eax),%edx;");
    asm("loc_10006FF8: mov 0x16B0(%eax),%bl;");
    asm("loc_10006FFE: mov %bl,(%ecx,%edx);");
    asm("loc_10007001: mov 0x14(%eax),%edx;");
    asm("loc_10007004: mov 0x16B1(%eax),%bl;");
    asm("loc_1000700A: inc %edx;");
    asm("loc_1000700B: mov %edx,0x14(%eax);");
    asm("loc_1000700E: mov %edx,%ecx;");
    asm("loc_10007010: mov 8(%eax),%edx;");
    asm("loc_10007013: mov %bl,(%ecx,%edx);");
    asm("loc_10007016: mov 0x14(%eax),%ecx;");
    asm("loc_10007019: mov 0x16B4(%eax),%edx;");
    asm("loc_1000701F: inc %ecx;");
    asm("loc_10007020: mov %ecx,0x14(%eax);");
    asm("loc_10007023: mov $0x10,%cl;");
    asm("loc_10007025: sub %dl,%cl;");
    asm("loc_10007027: shr %cl,%si;");
    asm("loc_1000702A: add $0xFFFFFFF2,%edx;");
    asm("loc_1000702D: mov %edx,0x16B4(%eax);");
    asm("loc_10007033: mov %si,0x16B0(%eax);");
    asm("loc_1000703A: jmp loc_10007246;");
    asm("loc_1000703F: shl %cl,%esi;");
    asm("loc_10007041: or %si,0x16B0(%eax);");
    asm("loc_10007048: add $2,%ecx;");
    asm("loc_1000704B: jmp loc_10007240;");
    asm("loc_10007050: cmp $0xA,%esi;");
    asm("loc_10007053: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007059: mov $0x10,%edx;");
    asm("loc_1000705E: jg loc_10007156;");
    asm("loc_10007064: movzwl 0xABA(%eax),%edi;");
    asm("loc_1000706B: sub %edi,%edx;");
    asm("loc_1000706D: cmp %edx,%ecx;");
    asm("loc_1000706F: jle loc_100070CC;");
    asm("loc_10007071: movzwl 0xAB8(%eax),%esi;");
    asm("loc_10007078: mov %esi,%edx;");
    asm("loc_1000707A: shl %cl,%edx;");
    asm("loc_1000707C: mov 8(%eax),%ecx;");
    asm("loc_1000707F: or %dx,0x16B0(%eax);");
    asm("loc_10007086: mov 0x14(%eax),%edx;");
    asm("loc_10007089: mov 0x16B0(%eax),%bl;");
    asm("loc_1000708F: mov %bl,(%ecx,%edx);");
    asm("loc_10007092: mov 0x14(%eax),%edx;");
    asm("loc_10007095: mov 0x16B1(%eax),%bl;");
    asm("loc_1000709B: inc %edx;");
    asm("loc_1000709C: mov %edx,0x14(%eax);");
    asm("loc_1000709F: mov %edx,%ecx;");
    asm("loc_100070A1: mov 8(%eax),%edx;");
    asm("loc_100070A4: mov %bl,(%ecx,%edx);");
    asm("loc_100070A7: mov 0x14(%eax),%ecx;");
    asm("loc_100070AA: mov 0x16B4(%eax),%edx;");
    asm("loc_100070B0: inc %ecx;");
    asm("loc_100070B1: mov %ecx,0x14(%eax);");
    asm("loc_100070B4: mov $0x10,%cl;");
    asm("loc_100070B6: sub %dl,%cl;");
    asm("loc_100070B8: shr %cl,%si;");
    asm("loc_100070BB: lea -0x10(%edx,%edi),%ecx;");
    asm("loc_100070BF: mov %si,0x16B0(%eax);");
    asm("loc_100070C6: mov 0x20(%esp),%esi;");
    asm("loc_100070CA: jmp loc_100070DF;");
    asm("loc_100070CC: mov 0xAB8(%eax),%dx;");
    asm("loc_100070D3: shl %cl,%dx;");
    asm("loc_100070D6: or %dx,0x16B0(%eax);");
    asm("loc_100070DD: add %edi,%ecx;");
    asm("loc_100070DF: add $0xFFFFFFFD,%esi;");
    asm("loc_100070E2: cmp $0xD,%ecx;");
    asm("loc_100070E5: mov %ecx,0x16B4(%eax);");
    asm("loc_100070EB: jle loc_10007145;");
    asm("loc_100070ED: mov %esi,%edx;");
    asm("loc_100070EF: shl %cl,%edx;");
    asm("loc_100070F1: mov 8(%eax),%ecx;");
    asm("loc_100070F4: or %dx,0x16B0(%eax);");
    asm("loc_100070FB: mov 0x14(%eax),%edx;");
    asm("loc_100070FE: mov 0x16B0(%eax),%bl;");
    asm("loc_10007104: mov %bl,(%ecx,%edx);");
    asm("loc_10007107: mov 0x14(%eax),%edx;");
    asm("loc_1000710A: mov 0x16B1(%eax),%bl;");
    asm("loc_10007110: inc %edx;");
    asm("loc_10007111: mov %edx,0x14(%eax);");
    asm("loc_10007114: mov %edx,%ecx;");
    asm("loc_10007116: mov 8(%eax),%edx;");
    asm("loc_10007119: mov %bl,(%ecx,%edx);");
    asm("loc_1000711C: mov 0x14(%eax),%ecx;");
    asm("loc_1000711F: mov 0x16B4(%eax),%edx;");
    asm("loc_10007125: inc %ecx;");
    asm("loc_10007126: mov %ecx,0x14(%eax);");
    asm("loc_10007129: mov $0x10,%cl;");
    asm("loc_1000712B: sub %dl,%cl;");
    asm("loc_1000712D: shr %cl,%si;");
    asm("loc_10007130: add $0xFFFFFFF3,%edx;");
    asm("loc_10007133: mov %edx,0x16B4(%eax);");
    asm("loc_10007139: mov %si,0x16B0(%eax);");
    asm("loc_10007140: jmp loc_10007246;");
    asm("loc_10007145: shl %cl,%esi;");
    asm("loc_10007147: or %si,0x16B0(%eax);");
    asm("loc_1000714E: add $3,%ecx;");
    asm("loc_10007151: jmp loc_10007240;");
    asm("loc_10007156: movzwl 0xABE(%eax),%edi;");
    asm("loc_1000715D: sub %edi,%edx;");
    asm("loc_1000715F: cmp %edx,%ecx;");
    asm("loc_10007161: jle loc_100071BE;");
    asm("loc_10007163: movzwl 0xABC(%eax),%esi;");
    asm("loc_1000716A: mov %esi,%edx;");
    asm("loc_1000716C: shl %cl,%edx;");
    asm("loc_1000716E: mov 8(%eax),%ecx;");
    asm("loc_10007171: or %dx,0x16B0(%eax);");
    asm("loc_10007178: mov 0x14(%eax),%edx;");
    asm("loc_1000717B: mov 0x16B0(%eax),%bl;");
    asm("loc_10007181: mov %bl,(%ecx,%edx);");
    asm("loc_10007184: mov 0x14(%eax),%edx;");
    asm("loc_10007187: mov 0x16B1(%eax),%bl;");
    asm("loc_1000718D: inc %edx;");
    asm("loc_1000718E: mov %edx,0x14(%eax);");
    asm("loc_10007191: mov %edx,%ecx;");
    asm("loc_10007193: mov 8(%eax),%edx;");
    asm("loc_10007196: mov %bl,(%ecx,%edx);");
    asm("loc_10007199: mov 0x14(%eax),%ecx;");
    asm("loc_1000719C: mov 0x16B4(%eax),%edx;");
    asm("loc_100071A2: inc %ecx;");
    asm("loc_100071A3: mov %ecx,0x14(%eax);");
    asm("loc_100071A6: mov $0x10,%cl;");
    asm("loc_100071A8: sub %dl,%cl;");
    asm("loc_100071AA: shr %cl,%si;");
    asm("loc_100071AD: lea -0x10(%edx,%edi),%ecx;");
    asm("loc_100071B1: mov %si,0x16B0(%eax);");
    asm("loc_100071B8: mov 0x20(%esp),%esi;");
    asm("loc_100071BC: jmp loc_100071D1;");
    asm("loc_100071BE: mov 0xABC(%eax),%dx;");
    asm("loc_100071C5: shl %cl,%dx;");
    asm("loc_100071C8: or %dx,0x16B0(%eax);");
    asm("loc_100071CF: add %edi,%ecx;");
    asm("loc_100071D1: add $0xFFFFFFF5,%esi;");
    asm("loc_100071D4: cmp $9,%ecx;");
    asm("loc_100071D7: mov %ecx,0x16B4(%eax);");
    asm("loc_100071DD: jle loc_10007234;");
    asm("loc_100071DF: mov %esi,%edx;");
    asm("loc_100071E1: shl %cl,%edx;");
    asm("loc_100071E3: mov 8(%eax),%ecx;");
    asm("loc_100071E6: or %dx,0x16B0(%eax);");
    asm("loc_100071ED: mov 0x14(%eax),%edx;");
    asm("loc_100071F0: mov 0x16B0(%eax),%bl;");
    asm("loc_100071F6: mov %bl,(%ecx,%edx);");
    asm("loc_100071F9: mov 0x14(%eax),%edx;");
    asm("loc_100071FC: mov 0x16B1(%eax),%bl;");
    asm("loc_10007202: inc %edx;");
    asm("loc_10007203: mov %edx,0x14(%eax);");
    asm("loc_10007206: mov %edx,%ecx;");
    asm("loc_10007208: mov 8(%eax),%edx;");
    asm("loc_1000720B: mov %bl,(%ecx,%edx);");
    asm("loc_1000720E: mov 0x14(%eax),%ecx;");
    asm("loc_10007211: mov 0x16B4(%eax),%edx;");
    asm("loc_10007217: inc %ecx;");
    asm("loc_10007218: mov %ecx,0x14(%eax);");
    asm("loc_1000721B: mov $0x10,%cl;");
    asm("loc_1000721D: sub %dl,%cl;");
    asm("loc_1000721F: shr %cl,%si;");
    asm("loc_10007222: add $0xFFFFFFF7,%edx;");
    asm("loc_10007225: mov %edx,0x16B4(%eax);");
    asm("loc_1000722B: mov %si,0x16B0(%eax);");
    asm("loc_10007232: jmp loc_10007246;");
    asm("loc_10007234: shl %cl,%esi;");
    asm("loc_10007236: or %si,0x16B0(%eax);");
    asm("loc_1000723D: add $7,%ecx;");
    asm("loc_10007240: mov %ecx,0x16B4(%eax);");
    asm("loc_10007246: mov 0x10(%esp),%ecx;");
    asm("loc_1000724A: xor %esi,%esi;");
    asm("loc_1000724C: test %ecx,%ecx;");
    asm("loc_1000724E: mov %ebp,%ebx;");
    asm("loc_10007250: jne loc_1000725E;");
    asm("loc_10007252: mov $0x8A,%ecx;");
    asm("loc_10007257: mov $3,%edx;");
    asm("loc_1000725C: jmp loc_10007278;");
    asm("loc_1000725E: cmp %ecx,%ebp;");
    asm("loc_10007260: jne loc_1000726E;");
    asm("loc_10007262: mov $6,%ecx;");
    asm("loc_10007267: mov $3,%edx;");
    asm("loc_1000726C: jmp loc_10007278;");
    asm("loc_1000726E: mov $7,%ecx;");
    asm("loc_10007273: mov $4,%edx;");
    asm("loc_10007278: mov 0x14(%esp),%ebp;");
    asm("loc_1000727C: mov 0x18(%esp),%edi;");
    asm("loc_10007280: add $4,%ebp;");
    asm("loc_10007283: dec %edi;");
    asm("loc_10007284: mov %ebp,0x14(%esp);");
    asm("loc_10007288: mov %edi,0x18(%esp);");
    asm("loc_1000728C: jne loc_10006DE0;");
    asm("loc_10007292: pop %edi;");
    asm("loc_10007293: pop %esi;");
    asm("loc_10007294: pop %ebp;");
    asm("loc_10007295: pop %ebx;");
    asm("loc_10007296: add $0xC,%esp;");
    asm("loc_10007299: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100072A0() // _sub_100072A0
{
    __DEBUG_ASM(100072A0);
    // chunk 0x100072A0 _sub_100072A0
    asm("loc_100072A0: mov 0x16B4(%eax),%ecx;");
    asm("loc_100072A6: cmp $0xB,%ecx;");
    asm("loc_100072A9: push %ebx;");
    asm("loc_100072AA: mov 0xC(%esp),%ebx;");
    asm("loc_100072AE: push %ebp;");
    asm("loc_100072AF: mov 0x14(%esp),%ebp;");
    asm("loc_100072B3: push %esi;");
    asm("loc_100072B4: push %edi;");
    asm("loc_100072B5: jle loc_1000731E;");
    asm("loc_100072B7: mov 0x14(%esp),%esi;");
    asm("loc_100072BB: add $0xFFFFFEFF,%esi;");
    asm("loc_100072C1: mov %esi,%edx;");
    asm("loc_100072C3: shl %cl,%edx;");
    asm("loc_100072C5: mov 0x14(%eax),%ecx;");
    asm("loc_100072C8: mov %ebx,0x1C(%esp);");
    asm("loc_100072CC: or %dx,0x16B0(%eax);");
    asm("loc_100072D3: mov 0x16B0(%eax),%bl;");
    asm("loc_100072D9: mov 8(%eax),%edx;");
    asm("loc_100072DC: mov %bl,(%ecx,%edx);");
    asm("loc_100072DF: mov 0x14(%eax),%edx;");
    asm("loc_100072E2: mov 0x16B1(%eax),%bl;");
    asm("loc_100072E8: inc %edx;");
    asm("loc_100072E9: mov %edx,0x14(%eax);");
    asm("loc_100072EC: mov %edx,%ecx;");
    asm("loc_100072EE: mov 8(%eax),%edx;");
    asm("loc_100072F1: mov %bl,(%ecx,%edx);");
    asm("loc_100072F4: mov 0x14(%eax),%ecx;");
    asm("loc_100072F7: mov 0x16B4(%eax),%edx;");
    asm("loc_100072FD: mov 0x1C(%esp),%ebx;");
    asm("loc_10007301: inc %ecx;");
    asm("loc_10007302: mov %ecx,0x14(%eax);");
    asm("loc_10007305: mov $0x10,%cl;");
    asm("loc_10007307: sub %dl,%cl;");
    asm("loc_10007309: shr %cl,%si;");
    asm("loc_1000730C: add $0xFFFFFFF5,%edx;");
    asm("loc_1000730F: mov %edx,0x16B4(%eax);");
    asm("loc_10007315: mov %si,0x16B0(%eax);");
    asm("loc_1000731C: jmp loc_1000733A;");
    asm("loc_1000731E: mov 0x14(%esp),%edx;");
    asm("loc_10007322: add $0xFFFFFEFF,%edx;");
    asm("loc_10007328: shl %cl,%edx;");
    asm("loc_1000732A: or %dx,0x16B0(%eax);");
    asm("loc_10007331: add $5,%ecx;");
    asm("loc_10007334: mov %ecx,0x16B4(%eax);");
    asm("loc_1000733A: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007340: cmp $0xB,%ecx;");
    asm("loc_10007343: jle loc_100073A5;");
    asm("loc_10007345: lea -1(%ebx),%esi;");
    asm("loc_10007348: mov %esi,%edx;");
    asm("loc_1000734A: shl %cl,%edx;");
    asm("loc_1000734C: mov 0x14(%eax),%ecx;");
    asm("loc_1000734F: mov %ebx,0x1C(%esp);");
    asm("loc_10007353: or %dx,0x16B0(%eax);");
    asm("loc_1000735A: mov 0x16B0(%eax),%bl;");
    asm("loc_10007360: mov 8(%eax),%edx;");
    asm("loc_10007363: mov %bl,(%ecx,%edx);");
    asm("loc_10007366: mov 0x14(%eax),%edx;");
    asm("loc_10007369: mov 0x16B1(%eax),%bl;");
    asm("loc_1000736F: inc %edx;");
    asm("loc_10007370: mov %edx,0x14(%eax);");
    asm("loc_10007373: mov %edx,%ecx;");
    asm("loc_10007375: mov 8(%eax),%edx;");
    asm("loc_10007378: mov %bl,(%ecx,%edx);");
    asm("loc_1000737B: mov 0x14(%eax),%ecx;");
    asm("loc_1000737E: mov 0x16B4(%eax),%edx;");
    asm("loc_10007384: mov 0x1C(%esp),%ebx;");
    asm("loc_10007388: inc %ecx;");
    asm("loc_10007389: mov %ecx,0x14(%eax);");
    asm("loc_1000738C: mov $0x10,%cl;");
    asm("loc_1000738E: sub %dl,%cl;");
    asm("loc_10007390: shr %cl,%si;");
    asm("loc_10007393: add $0xFFFFFFF5,%edx;");
    asm("loc_10007396: mov %edx,0x16B4(%eax);");
    asm("loc_1000739C: mov %si,0x16B0(%eax);");
    asm("loc_100073A3: jmp loc_100073BA;");
    asm("loc_100073A5: lea -1(%ebx),%edx;");
    asm("loc_100073A8: shl %cl,%edx;");
    asm("loc_100073AA: or %dx,0x16B0(%eax);");
    asm("loc_100073B1: add $5,%ecx;");
    asm("loc_100073B4: mov %ecx,0x16B4(%eax);");
    asm("loc_100073BA: mov 0x16B4(%eax),%ecx;");
    asm("loc_100073C0: cmp $0xC,%ecx;");
    asm("loc_100073C3: jle loc_10007425;");
    asm("loc_100073C5: lea -4(%ebp),%esi;");
    asm("loc_100073C8: mov %esi,%edx;");
    asm("loc_100073CA: shl %cl,%edx;");
    asm("loc_100073CC: mov 0x14(%eax),%ecx;");
    asm("loc_100073CF: mov %ebx,0x1C(%esp);");
    asm("loc_100073D3: or %dx,0x16B0(%eax);");
    asm("loc_100073DA: mov 0x16B0(%eax),%bl;");
    asm("loc_100073E0: mov 8(%eax),%edx;");
    asm("loc_100073E3: mov %bl,(%ecx,%edx);");
    asm("loc_100073E6: mov 0x14(%eax),%edx;");
    asm("loc_100073E9: mov 0x16B1(%eax),%bl;");
    asm("loc_100073EF: inc %edx;");
    asm("loc_100073F0: mov %edx,0x14(%eax);");
    asm("loc_100073F3: mov %edx,%ecx;");
    asm("loc_100073F5: mov 8(%eax),%edx;");
    asm("loc_100073F8: mov %bl,(%ecx,%edx);");
    asm("loc_100073FB: mov 0x14(%eax),%ecx;");
    asm("loc_100073FE: mov 0x16B4(%eax),%edx;");
    asm("loc_10007404: mov 0x1C(%esp),%ebx;");
    asm("loc_10007408: inc %ecx;");
    asm("loc_10007409: mov %ecx,0x14(%eax);");
    asm("loc_1000740C: mov $0x10,%cl;");
    asm("loc_1000740E: sub %dl,%cl;");
    asm("loc_10007410: shr %cl,%si;");
    asm("loc_10007413: add $0xFFFFFFF4,%edx;");
    asm("loc_10007416: mov %edx,0x16B4(%eax);");
    asm("loc_1000741C: mov %si,0x16B0(%eax);");
    asm("loc_10007423: jmp loc_1000743A;");
    asm("loc_10007425: lea -4(%ebp),%edx;");
    asm("loc_10007428: shl %cl,%edx;");
    asm("loc_1000742A: or %dx,0x16B0(%eax);");
    asm("loc_10007431: add $4,%ecx;");
    asm("loc_10007434: mov %ecx,0x16B4(%eax);");
    asm("loc_1000743A: xor %edi,%edi;");
    asm("loc_1000743C: test %ebp,%ebp;");
    asm("loc_1000743E: jle loc_100074E7;");
    asm("loc_10007444: jmp loc_10007450;");
    asm("loc_10007446: lea (%esp),%esp;");
    asm("loc_1000744D: lea (%ecx),%ecx;");
    asm("loc_10007450: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007456: cmp $0xD,%ecx;");
    asm("loc_10007459: movzbl _data_1000B71C(%edi),%edx;");
    asm("loc_10007460: jle loc_100074BF;");
    asm("loc_10007462: movzwl 0xA76(%eax,%edx,4),%esi;");
    asm("loc_1000746A: mov %esi,%edx;");
    asm("loc_1000746C: shl %cl,%edx;");
    asm("loc_1000746E: mov 0x14(%eax),%ecx;");
    asm("loc_10007471: or %dx,0x16B0(%eax);");
    asm("loc_10007478: mov 0x16B0(%eax),%bl;");
    asm("loc_1000747E: mov 8(%eax),%edx;");
    asm("loc_10007481: mov %bl,(%ecx,%edx);");
    asm("loc_10007484: mov 0x14(%eax),%edx;");
    asm("loc_10007487: mov 0x16B1(%eax),%bl;");
    asm("loc_1000748D: inc %edx;");
    asm("loc_1000748E: mov %edx,0x14(%eax);");
    asm("loc_10007491: mov %edx,%ecx;");
    asm("loc_10007493: mov 8(%eax),%edx;");
    asm("loc_10007496: mov %bl,(%ecx,%edx);");
    asm("loc_10007499: mov 0x14(%eax),%ecx;");
    asm("loc_1000749C: mov 0x16B4(%eax),%edx;");
    asm("loc_100074A2: inc %ecx;");
    asm("loc_100074A3: mov %ecx,0x14(%eax);");
    asm("loc_100074A6: mov $0x10,%cl;");
    asm("loc_100074A8: sub %dl,%cl;");
    asm("loc_100074AA: shr %cl,%si;");
    asm("loc_100074AD: add $0xFFFFFFF3,%edx;");
    asm("loc_100074B0: mov %edx,0x16B4(%eax);");
    asm("loc_100074B6: mov %si,0x16B0(%eax);");
    asm("loc_100074BD: jmp loc_100074DA;");
    asm("loc_100074BF: mov 0xA76(%eax,%edx,4),%dx;");
    asm("loc_100074C7: shl %cl,%dx;");
    asm("loc_100074CA: or %dx,0x16B0(%eax);");
    asm("loc_100074D1: add $3,%ecx;");
    asm("loc_100074D4: mov %ecx,0x16B4(%eax);");
    asm("loc_100074DA: inc %edi;");
    asm("loc_100074DB: cmp %ebp,%edi;");
    asm("loc_100074DD: jl loc_10007450;");
    asm("loc_100074E3: mov 0x18(%esp),%ebx;");
    asm("loc_100074E7: mov 0x14(%esp),%ecx;");
    asm("loc_100074EB: dec %ecx;");
    asm("loc_100074EC: push %ecx;");
    asm("loc_100074ED: lea 0x8C(%eax),%ecx;");
    asm("loc_100074F3: call _sub_10006D90;");
    asm("loc_100074F8: dec %ebx;");
    asm("loc_100074F9: push %ebx;");
    asm("loc_100074FA: lea 0x980(%eax),%ecx;");
    asm("loc_10007500: call _sub_10006D90;");
    asm("loc_10007505: add $8,%esp;");
    asm("loc_10007508: pop %edi;");
    asm("loc_10007509: pop %esi;");
    asm("loc_1000750A: pop %ebp;");
    asm("loc_1000750B: pop %ebx;");
    asm("loc_1000750C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007510() // _sub_10007510
{
    __DEBUG_ASM(10007510);
    // chunk 0x10007510 _sub_10007510
    asm("loc_10007510: mov 0x1698(%eax),%edx;");
    asm("loc_10007516: sub $0xC,%esp;");
    asm("loc_10007519: push %ebx;");
    asm("loc_1000751A: mov 0x14(%esp),%ebx;");
    asm("loc_1000751E: push %ebp;");
    asm("loc_1000751F: push %esi;");
    asm("loc_10007520: xor %ecx,%ecx;");
    asm("loc_10007522: test %edx,%edx;");
    asm("loc_10007524: push %edi;");
    asm("loc_10007525: je loc_10007871;");
    asm("loc_1000752B: jmp loc_10007530;");
    asm("loc_1000752D: lea (%ecx),%ecx;");
    asm("loc_10007530: mov 0x169C(%eax),%edx;");
    asm("loc_10007536: movzwl (%edx,%ecx,2),%ebp;");
    asm("loc_1000753A: mov 0x1690(%eax),%edx;");
    asm("loc_10007540: movzbl (%ecx,%edx),%esi;");
    asm("loc_10007544: inc %ecx;");
    asm("loc_10007545: test %ebp,%ebp;");
    asm("loc_10007547: mov %ecx,0x18(%esp);");
    asm("loc_1000754B: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007551: jne loc_100075DB;");
    asm("loc_10007557: movzwl 2(%ebx,%esi,4),%edi;");
    asm("loc_1000755C: mov $0x10,%edx;");
    asm("loc_10007561: sub %edi,%edx;");
    asm("loc_10007563: cmp %edx,%ecx;");
    asm("loc_10007565: jle loc_100075C6;");
    asm("loc_10007567: movzwl (%ebx,%esi,4),%esi;");
    asm("loc_1000756B: mov %esi,%edx;");
    asm("loc_1000756D: shl %cl,%edx;");
    asm("loc_1000756F: mov 8(%eax),%ecx;");
    asm("loc_10007572: mov %ebx,0x10(%esp);");
    asm("loc_10007576: or %dx,0x16B0(%eax);");
    asm("loc_1000757D: mov 0x14(%eax),%edx;");
    asm("loc_10007580: mov 0x16B0(%eax),%bl;");
    asm("loc_10007586: mov %bl,(%ecx,%edx);");
    asm("loc_10007589: mov 0x14(%eax),%edx;");
    asm("loc_1000758C: mov 0x16B1(%eax),%bl;");
    asm("loc_10007592: inc %edx;");
    asm("loc_10007593: mov %edx,0x14(%eax);");
    asm("loc_10007596: mov %edx,%ecx;");
    asm("loc_10007598: mov 8(%eax),%edx;");
    asm("loc_1000759B: mov %bl,(%ecx,%edx);");
    asm("loc_1000759E: mov 0x14(%eax),%ecx;");
    asm("loc_100075A1: mov 0x16B4(%eax),%edx;");
    asm("loc_100075A7: mov 0x10(%esp),%ebx;");
    asm("loc_100075AB: inc %ecx;");
    asm("loc_100075AC: mov %ecx,0x14(%eax);");
    asm("loc_100075AF: mov $0x10,%cl;");
    asm("loc_100075B1: sub %dl,%cl;");
    asm("loc_100075B3: shr %cl,%si;");
    asm("loc_100075B6: lea -0x10(%edx,%edi),%ecx;");
    asm("loc_100075BA: mov %si,0x16B0(%eax);");
    asm("loc_100075C1: jmp loc_1000785B;");
    asm("loc_100075C6: mov (%ebx,%esi,4),%dx;");
    asm("loc_100075CA: shl %cl,%dx;");
    asm("loc_100075CD: or %dx,0x16B0(%eax);");
    asm("loc_100075D4: add %edi,%ecx;");
    asm("loc_100075D6: jmp loc_1000785B;");
    asm("loc_100075DB: movzbl _data_1000BE28(%esi),%edx;");
    asm("loc_100075E2: movzwl 0x406(%ebx,%edx,4),%edi;");
    asm("loc_100075EA: mov $0x10,%ebx;");
    asm("loc_100075EF: sub %edi,%ebx;");
    asm("loc_100075F1: cmp %ebx,%ecx;");
    asm("loc_100075F3: mov %edi,0x10(%esp);");
    asm("loc_100075F7: mov 0x20(%esp),%edi;");
    asm("loc_100075FB: mov %edx,0x14(%esp);");
    asm("loc_100075FF: jle loc_10007667;");
    asm("loc_10007601: movzwl 0x404(%edi,%edx,4),%edi;");
    asm("loc_10007609: mov %edi,%edx;");
    asm("loc_1000760B: shl %cl,%edx;");
    asm("loc_1000760D: mov 8(%eax),%ecx;");
    asm("loc_10007610: or %dx,0x16B0(%eax);");
    asm("loc_10007617: mov 0x14(%eax),%edx;");
    asm("loc_1000761A: mov 0x16B0(%eax),%bl;");
    asm("loc_10007620: mov %bl,(%ecx,%edx);");
    asm("loc_10007623: mov 0x14(%eax),%edx;");
    asm("loc_10007626: mov 0x16B1(%eax),%bl;");
    asm("loc_1000762C: inc %edx;");
    asm("loc_1000762D: mov %edx,0x14(%eax);");
    asm("loc_10007630: mov %edx,%ecx;");
    asm("loc_10007632: mov 8(%eax),%edx;");
    asm("loc_10007635: mov %bl,(%ecx,%edx);");
    asm("loc_10007638: mov 0x14(%eax),%ecx;");
    asm("loc_1000763B: mov 0x16B4(%eax),%edx;");
    asm("loc_10007641: inc %ecx;");
    asm("loc_10007642: mov %ecx,0x14(%eax);");
    asm("loc_10007645: mov $0x10,%cl;");
    asm("loc_10007647: sub %dl,%cl;");
    asm("loc_10007649: shr %cl,%di;");
    asm("loc_1000764C: mov 0x10(%esp),%ecx;");
    asm("loc_10007650: lea -0x10(%edx,%ecx),%edx;");
    asm("loc_10007654: mov %edx,0x16B4(%eax);");
    asm("loc_1000765A: mov 0x14(%esp),%edx;");
    asm("loc_1000765E: mov %di,0x16B0(%eax);");
    asm("loc_10007665: jmp loc_10007685;");
    asm("loc_10007667: mov 0x404(%edi,%edx,4),%di;");
    asm("loc_1000766F: shl %cl,%di;");
    asm("loc_10007672: or %di,0x16B0(%eax);");
    asm("loc_10007679: mov 0x10(%esp),%edi;");
    asm("loc_1000767D: add %edi,%ecx;");
    asm("loc_1000767F: mov %ecx,0x16B4(%eax);");
    asm("loc_10007685: mov _data_1000B5E0(,%edx,4),%edi;");
    asm("loc_1000768C: test %edi,%edi;");
    asm("loc_1000768E: mov 0x20(%esp),%ebx;");
    asm("loc_10007692: je loc_10007715;");
    asm("loc_10007698: sub _data_1000BF28(,%edx,4),%esi;");
    asm("loc_1000769F: mov 0x16B4(%eax),%ecx;");
    asm("loc_100076A5: mov $0x10,%edx;");
    asm("loc_100076AA: sub %edi,%edx;");
    asm("loc_100076AC: cmp %edx,%ecx;");
    asm("loc_100076AE: jle loc_10007704;");
    asm("loc_100076B0: mov %esi,%edx;");
    asm("loc_100076B2: shl %cl,%edx;");
    asm("loc_100076B4: mov 8(%eax),%ecx;");
    asm("loc_100076B7: or %dx,0x16B0(%eax);");
    asm("loc_100076BE: mov 0x14(%eax),%edx;");
    asm("loc_100076C1: mov 0x16B0(%eax),%bl;");
    asm("loc_100076C7: mov %bl,(%ecx,%edx);");
    asm("loc_100076CA: mov 0x14(%eax),%edx;");
    asm("loc_100076CD: mov 0x16B1(%eax),%bl;");
    asm("loc_100076D3: inc %edx;");
    asm("loc_100076D4: mov %edx,0x14(%eax);");
    asm("loc_100076D7: mov %edx,%ecx;");
    asm("loc_100076D9: mov 8(%eax),%edx;");
    asm("loc_100076DC: mov %bl,(%ecx,%edx);");
    asm("loc_100076DF: mov 0x14(%eax),%ecx;");
    asm("loc_100076E2: mov 0x16B4(%eax),%edx;");
    asm("loc_100076E8: mov 0x20(%esp),%ebx;");
    asm("loc_100076EC: inc %ecx;");
    asm("loc_100076ED: mov %ecx,0x14(%eax);");
    asm("loc_100076F0: mov $0x10,%cl;");
    asm("loc_100076F2: sub %dl,%cl;");
    asm("loc_100076F4: shr %cl,%si;");
    asm("loc_100076F7: lea -0x10(%edx,%edi),%ecx;");
    asm("loc_100076FB: mov %si,0x16B0(%eax);");
    asm("loc_10007702: jmp loc_1000770F;");
    asm("loc_10007704: shl %cl,%esi;");
    asm("loc_10007706: or %si,0x16B0(%eax);");
    asm("loc_1000770D: add %edi,%ecx;");
    asm("loc_1000770F: mov %ecx,0x16B4(%eax);");
    asm("loc_10007715: dec %ebp;");
    asm("loc_10007716: cmp $0x100,%ebp;");
    asm("loc_1000771C: jae loc_10007727;");
    asm("loc_1000771E: movzbl _data_1000BC28(%ebp),%edi;");
    asm("loc_10007725: jmp loc_10007733;");
    asm("loc_10007727: mov %ebp,%edx;");
    asm("loc_10007729: shr $7,%edx;");
    asm("loc_1000772C: movzbl _data_1000BD28(%edx),%edi;");
    asm("loc_10007733: mov 0x24(%esp),%ecx;");
    asm("loc_10007737: movzwl 2(%ecx,%edi,4),%edx;");
    asm("loc_1000773C: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007742: mov $0x10,%esi;");
    asm("loc_10007747: sub %edx,%esi;");
    asm("loc_10007749: cmp %esi,%ecx;");
    asm("loc_1000774B: mov %edx,0x14(%esp);");
    asm("loc_1000774F: jle loc_100077B7;");
    asm("loc_10007751: mov 0x24(%esp),%edx;");
    asm("loc_10007755: movzwl (%edx,%edi,4),%esi;");
    asm("loc_10007759: mov %esi,%edx;");
    asm("loc_1000775B: shl %cl,%edx;");
    asm("loc_1000775D: mov 8(%eax),%ecx;");
    asm("loc_10007760: or %dx,0x16B0(%eax);");
    asm("loc_10007767: mov 0x14(%eax),%edx;");
    asm("loc_1000776A: mov 0x16B0(%eax),%bl;");
    asm("loc_10007770: mov %bl,(%ecx,%edx);");
    asm("loc_10007773: mov 0x14(%eax),%edx;");
    asm("loc_10007776: mov 0x16B1(%eax),%bl;");
    asm("loc_1000777C: inc %edx;");
    asm("loc_1000777D: mov %edx,0x14(%eax);");
    asm("loc_10007780: mov %edx,%ecx;");
    asm("loc_10007782: mov 8(%eax),%edx;");
    asm("loc_10007785: mov %bl,(%ecx,%edx);");
    asm("loc_10007788: mov 0x14(%eax),%ecx;");
    asm("loc_1000778B: mov 0x16B4(%eax),%edx;");
    asm("loc_10007791: mov 0x20(%esp),%ebx;");
    asm("loc_10007795: inc %ecx;");
    asm("loc_10007796: mov %ecx,0x14(%eax);");
    asm("loc_10007799: mov $0x10,%cl;");
    asm("loc_1000779B: sub %dl,%cl;");
    asm("loc_1000779D: shr %cl,%si;");
    asm("loc_100077A0: mov 0x14(%esp),%ecx;");
    asm("loc_100077A4: lea -0x10(%edx,%ecx),%edx;");
    asm("loc_100077A8: mov %edx,0x16B4(%eax);");
    asm("loc_100077AE: mov %si,0x16B0(%eax);");
    asm("loc_100077B5: jmp loc_100077D1;");
    asm("loc_100077B7: mov 0x24(%esp),%esi;");
    asm("loc_100077BB: mov (%esi,%edi,4),%si;");
    asm("loc_100077BF: shl %cl,%si;");
    asm("loc_100077C2: or %si,0x16B0(%eax);");
    asm("loc_100077C9: add %edx,%ecx;");
    asm("loc_100077CB: mov %ecx,0x16B4(%eax);");
    asm("loc_100077D1: mov _data_1000B658(,%edi,4),%esi;");
    asm("loc_100077D8: test %esi,%esi;");
    asm("loc_100077DA: je loc_10007861;");
    asm("loc_100077E0: sub _data_1000BFA0(,%edi,4),%ebp;");
    asm("loc_100077E7: mov 0x16B4(%eax),%ecx;");
    asm("loc_100077ED: mov $0x10,%edx;");
    asm("loc_100077F2: sub %esi,%edx;");
    asm("loc_100077F4: cmp %edx,%ecx;");
    asm("loc_100077F6: jle loc_10007850;");
    asm("loc_100077F8: mov %ebp,%edx;");
    asm("loc_100077FA: shl %cl,%edx;");
    asm("loc_100077FC: mov 8(%eax),%ecx;");
    asm("loc_100077FF: mov %ebx,0x14(%esp);");
    asm("loc_10007803: or %dx,0x16B0(%eax);");
    asm("loc_1000780A: mov 0x14(%eax),%edx;");
    asm("loc_1000780D: mov 0x16B0(%eax),%bl;");
    asm("loc_10007813: mov %bl,(%ecx,%edx);");
    asm("loc_10007816: mov 0x14(%eax),%edx;");
    asm("loc_10007819: mov 0x16B1(%eax),%bl;");
    asm("loc_1000781F: inc %edx;");
    asm("loc_10007820: mov %edx,0x14(%eax);");
    asm("loc_10007823: mov %edx,%ecx;");
    asm("loc_10007825: mov 8(%eax),%edx;");
    asm("loc_10007828: mov %bl,(%ecx,%edx);");
    asm("loc_1000782B: mov 0x14(%eax),%ecx;");
    asm("loc_1000782E: mov 0x16B4(%eax),%edx;");
    asm("loc_10007834: mov 0x14(%esp),%ebx;");
    asm("loc_10007838: inc %ecx;");
    asm("loc_10007839: mov %ecx,0x14(%eax);");
    asm("loc_1000783C: mov $0x10,%cl;");
    asm("loc_1000783E: sub %dl,%cl;");
    asm("loc_10007840: shr %cl,%bp;");
    asm("loc_10007843: lea -0x10(%edx,%esi),%ecx;");
    asm("loc_10007847: mov %bp,0x16B0(%eax);");
    asm("loc_1000784E: jmp loc_1000785B;");
    asm("loc_10007850: shl %cl,%ebp;");
    asm("loc_10007852: or %bp,0x16B0(%eax);");
    asm("loc_10007859: add %esi,%ecx;");
    asm("loc_1000785B: mov %ecx,0x16B4(%eax);");
    asm("loc_10007861: mov 0x18(%esp),%ecx;");
    asm("loc_10007865: cmp 0x1698(%eax),%ecx;");
    asm("loc_1000786B: jb loc_10007530;");
    asm("loc_10007871: movzwl 0x402(%ebx),%edi;");
    asm("loc_10007878: mov 0x16B4(%eax),%ecx;");
    asm("loc_1000787E: mov $0x10,%edx;");
    asm("loc_10007883: sub %edi,%edx;");
    asm("loc_10007885: cmp %edx,%ecx;");
    asm("loc_10007887: jle loc_10007901;");
    asm("loc_10007889: movzwl 0x400(%ebx),%esi;");
    asm("loc_10007890: mov %esi,%edx;");
    asm("loc_10007892: shl %cl,%edx;");
    asm("loc_10007894: mov 8(%eax),%ecx;");
    asm("loc_10007897: mov %ebx,0x20(%esp);");
    asm("loc_1000789B: or %dx,0x16B0(%eax);");
    asm("loc_100078A2: mov 0x14(%eax),%edx;");
    asm("loc_100078A5: mov 0x16B0(%eax),%bl;");
    asm("loc_100078AB: mov %bl,(%ecx,%edx);");
    asm("loc_100078AE: mov 0x14(%eax),%edx;");
    asm("loc_100078B1: mov 8(%eax),%ecx;");
    asm("loc_100078B4: mov 0x20(%esp),%ebx;");
    asm("loc_100078B8: inc %edx;");
    asm("loc_100078B9: mov %edx,0x14(%eax);");
    asm("loc_100078BC: mov %edx,%ebp;");
    asm("loc_100078BE: mov 0x16B1(%eax),%dl;");
    asm("loc_100078C4: mov %dl,(%ecx,%ebp);");
    asm("loc_100078C7: mov 0x14(%eax),%ecx;");
    asm("loc_100078CA: mov 0x16B4(%eax),%edx;");
    asm("loc_100078D0: inc %ecx;");
    asm("loc_100078D1: mov %ecx,0x14(%eax);");
    asm("loc_100078D4: mov $0x10,%cl;");
    asm("loc_100078D6: sub %dl,%cl;");
    asm("loc_100078D8: shr %cl,%si;");
    asm("loc_100078DB: lea -0x10(%edx,%edi),%ecx;");
    asm("loc_100078DF: pop %edi;");
    asm("loc_100078E0: mov %ecx,0x16B4(%eax);");
    asm("loc_100078E6: mov %si,0x16B0(%eax);");
    asm("loc_100078ED: movzwl 0x402(%ebx),%edx;");
    asm("loc_100078F4: pop %esi;");
    asm("loc_100078F5: pop %ebp;");
    asm("loc_100078F6: mov %edx,0x16AC(%eax);");
    asm("loc_100078FC: pop %ebx;");
    asm("loc_100078FD: add $0xC,%esp;");
    asm("loc_10007900: ret;");
    asm("loc_10007901: mov 0x400(%ebx),%dx;");
    asm("loc_10007908: shl %cl,%dx;");
    asm("loc_1000790B: or %dx,0x16B0(%eax);");
    asm("loc_10007912: add %edi,%ecx;");
    asm("loc_10007914: pop %edi;");
    asm("loc_10007915: mov %ecx,0x16B4(%eax);");
    asm("loc_1000791B: movzwl 0x402(%ebx),%ecx;");
    asm("loc_10007922: pop %esi;");
    asm("loc_10007923: pop %ebp;");
    asm("loc_10007924: mov %ecx,0x16AC(%eax);");
    asm("loc_1000792A: pop %ebx;");
    asm("loc_1000792B: add $0xC,%esp;");
    asm("loc_1000792E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007930() // _sub_10007930
{
    __DEBUG_ASM(10007930);
    // chunk 0x10007930 _sub_10007930
    asm("loc_10007930: movzwl 0xA0(%ecx),%edx;");
    asm("loc_10007937: movzwl 0xA4(%ecx),%eax;");
    asm("loc_1000793E: add %edx,%eax;");
    asm("loc_10007940: movzwl 0x9C(%ecx),%edx;");
    asm("loc_10007947: add %edx,%eax;");
    asm("loc_10007949: movzwl 0x98(%ecx),%edx;");
    asm("loc_10007950: add %edx,%eax;");
    asm("loc_10007952: movzwl 0x94(%ecx),%edx;");
    asm("loc_10007959: add %edx,%eax;");
    asm("loc_1000795B: movzwl 0x90(%ecx),%edx;");
    asm("loc_10007962: add %edx,%eax;");
    asm("loc_10007964: movzwl 0x8C(%ecx),%edx;");
    asm("loc_1000796B: push %ebx;");
    asm("loc_1000796C: push %esi;");
    asm("loc_1000796D: xor %esi,%esi;");
    asm("loc_1000796F: push %edi;");
    asm("loc_10007970: add %edx,%eax;");
    asm("loc_10007972: lea 0xA8(%ecx),%edx;");
    asm("loc_10007978: mov $0x79,%edi;");
    asm("loc_1000797D: lea (%ecx),%ecx;");
    asm("loc_10007980: movzwl (%edx),%ebx;");
    asm("loc_10007983: add %ebx,%esi;");
    asm("loc_10007985: add $4,%edx;");
    asm("loc_10007988: dec %edi;");
    asm("loc_10007989: jne loc_10007980;");
    asm("loc_1000798B: lea 0x28C(%ecx),%edx;");
    asm("loc_10007991: mov $0x80,%edi;");
    asm("loc_10007996: movzwl (%edx),%ebx;");
    asm("loc_10007999: add %ebx,%eax;");
    asm("loc_1000799B: add $4,%edx;");
    asm("loc_1000799E: dec %edi;");
    asm("loc_1000799F: jne loc_10007996;");
    asm("loc_100079A1: shr $2,%esi;");
    asm("loc_100079A4: cmp %eax,%esi;");
    asm("loc_100079A6: pop %edi;");
    asm("loc_100079A7: sbb %al,%al;");
    asm("loc_100079A9: inc %al;");
    asm("loc_100079AB: pop %esi;");
    asm("loc_100079AC: mov %al,0x1C(%ecx);");
    asm("loc_100079AF: pop %ebx;");
    asm("loc_100079B0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100079C0() // _sub_100079C0
{
    __DEBUG_ASM(100079C0);
    // chunk 0x100079C0 _sub_100079C0
    asm("loc_100079C0: xor %eax,%eax;");
    asm("loc_100079C2: push %esi;");
    asm("loc_100079C3: mov %ecx,%esi;");
    asm("loc_100079C5: and $1,%esi;");
    asm("loc_100079C8: or %esi,%eax;");
    asm("loc_100079CA: shr $1,%ecx;");
    asm("loc_100079CC: shl $1,%eax;");
    asm("loc_100079CE: dec %edx;");
    asm("loc_100079CF: test %edx,%edx;");
    asm("loc_100079D1: jg loc_100079C3;");
    asm("loc_100079D3: shr $1,%eax;");
    asm("loc_100079D5: pop %esi;");
    asm("loc_100079D6: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100079E0() // _sub_100079E0
{
    __DEBUG_ASM(100079E0);
    // chunk 0x100079E0 _sub_100079E0
    asm("loc_100079E0: mov 0x16B4(%eax),%ecx;");
    asm("loc_100079E6: cmp $0x10,%ecx;");
    asm("loc_100079E9: push %ebx;");
    asm("loc_100079EA: jne loc_10007A24;");
    asm("loc_100079EC: mov 0x14(%eax),%edx;");
    asm("loc_100079EF: mov 0x16B0(%eax),%bl;");
    asm("loc_100079F5: mov 8(%eax),%ecx;");
    asm("loc_100079F8: mov %bl,(%ecx,%edx);");
    asm("loc_100079FB: mov 0x14(%eax),%edx;");
    asm("loc_100079FE: mov 0x16B1(%eax),%bl;");
    asm("loc_10007A04: inc %edx;");
    asm("loc_10007A05: mov %edx,0x14(%eax);");
    asm("loc_10007A08: mov %edx,%ecx;");
    asm("loc_10007A0A: mov 8(%eax),%edx;");
    asm("loc_10007A0D: mov %bl,(%ecx,%edx);");
    asm("loc_10007A10: incl 0x14(%eax);");
    asm("loc_10007A13: xor %ecx,%ecx;");
    asm("loc_10007A15: mov %cx,0x16B0(%eax);");
    asm("loc_10007A1C: mov %ecx,0x16B4(%eax);");
    asm("loc_10007A22: pop %ebx;");
    asm("loc_10007A23: ret;");
    asm("loc_10007A24: cmp $8,%ecx;");
    asm("loc_10007A27: jl loc_10007A5D;");
    asm("loc_10007A29: mov 8(%eax),%ecx;");
    asm("loc_10007A2C: mov 0x14(%eax),%edx;");
    asm("loc_10007A2F: mov 0x16B0(%eax),%bl;");
    asm("loc_10007A35: mov %bl,(%ecx,%edx);");
    asm("loc_10007A38: movzbw 0x16B1(%eax),%cx;");
    asm("loc_10007A40: mov 0x14(%eax),%edx;");
    asm("loc_10007A43: mov %cx,0x16B0(%eax);");
    asm("loc_10007A4A: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007A50: inc %edx;");
    asm("loc_10007A51: add $0xFFFFFFF8,%ecx;");
    asm("loc_10007A54: mov %edx,0x14(%eax);");
    asm("loc_10007A57: mov %ecx,0x16B4(%eax);");
    asm("loc_10007A5D: pop %ebx;");
    asm("loc_10007A5E: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007A60() // _sub_10007A60
{
    __DEBUG_ASM(10007A60);
    // chunk 0x10007A60 _sub_10007A60
    asm("loc_10007A60: mov 0x16B4(%eax),%edx;");
    asm("loc_10007A66: cmp $8,%edx;");
    asm("loc_10007A69: push %ebx;");
    asm("loc_10007A6A: jle loc_10007AA4;");
    asm("loc_10007A6C: mov 0x14(%eax),%edx;");
    asm("loc_10007A6F: mov 0x16B0(%eax),%bl;");
    asm("loc_10007A75: mov 8(%eax),%ecx;");
    asm("loc_10007A78: mov %bl,(%ecx,%edx);");
    asm("loc_10007A7B: mov 0x14(%eax),%edx;");
    asm("loc_10007A7E: mov 0x16B1(%eax),%bl;");
    asm("loc_10007A84: inc %edx;");
    asm("loc_10007A85: mov %edx,0x14(%eax);");
    asm("loc_10007A88: mov %edx,%ecx;");
    asm("loc_10007A8A: mov 8(%eax),%edx;");
    asm("loc_10007A8D: mov %bl,(%ecx,%edx);");
    asm("loc_10007A90: incl 0x14(%eax);");
    asm("loc_10007A93: xor %ecx,%ecx;");
    asm("loc_10007A95: mov %cx,0x16B0(%eax);");
    asm("loc_10007A9C: mov %ecx,0x16B4(%eax);");
    asm("loc_10007AA2: pop %ebx;");
    asm("loc_10007AA3: ret;");
    asm("loc_10007AA4: xor %ecx,%ecx;");
    asm("loc_10007AA6: cmp %ecx,%edx;");
    asm("loc_10007AA8: jle loc_10007ABE;");
    asm("loc_10007AAA: mov 8(%eax),%edx;");
    asm("loc_10007AAD: mov 0x16B0(%eax),%bl;");
    asm("loc_10007AB3: push %esi;");
    asm("loc_10007AB4: mov 0x14(%eax),%esi;");
    asm("loc_10007AB7: mov %bl,(%edx,%esi);");
    asm("loc_10007ABA: incl 0x14(%eax);");
    asm("loc_10007ABD: pop %esi;");
    asm("loc_10007ABE: mov %cx,0x16B0(%eax);");
    asm("loc_10007AC5: mov %ecx,0x16B4(%eax);");
    asm("loc_10007ACB: pop %ebx;");
    asm("loc_10007ACC: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007AD0() // _sub_10007AD0
{
    __DEBUG_ASM(10007AD0);
    // chunk 0x10007AD0 _sub_10007AD0
    asm("loc_10007AD0: push %ebx;");
    asm("loc_10007AD1: push %esi;");
    asm("loc_10007AD2: push %edi;");
    asm("loc_10007AD3: mov %ecx,%ebx;");
    asm("loc_10007AD5: mov %edx,%edi;");
    asm("loc_10007AD7: call _sub_10007A60;");
    asm("loc_10007ADC: mov 0x10(%esp),%ecx;");
    asm("loc_10007AE0: test %ecx,%ecx;");
    asm("loc_10007AE2: movl $8,0x16AC(%eax);");
    asm("loc_10007AEC: je loc_10007B29;");
    asm("loc_10007AEE: mov 0x14(%eax),%ecx;");
    asm("loc_10007AF1: mov 8(%eax),%edx;");
    asm("loc_10007AF4: mov %bl,(%ecx,%edx);");
    asm("loc_10007AF7: mov 0x14(%eax),%ecx;");
    asm("loc_10007AFA: mov 8(%eax),%edx;");
    asm("loc_10007AFD: inc %ecx;");
    asm("loc_10007AFE: mov %ecx,0x14(%eax);");
    asm("loc_10007B01: mov %bh,(%ecx,%edx);");
    asm("loc_10007B04: mov 0x14(%eax),%esi;");
    asm("loc_10007B07: mov 8(%eax),%edx;");
    asm("loc_10007B0A: inc %esi;");
    asm("loc_10007B0B: mov %esi,0x14(%eax);");
    asm("loc_10007B0E: mov %bl,%cl;");
    asm("loc_10007B10: not %cl;");
    asm("loc_10007B12: mov %cl,(%esi,%edx);");
    asm("loc_10007B15: mov 0x14(%eax),%esi;");
    asm("loc_10007B18: mov 8(%eax),%edx;");
    asm("loc_10007B1B: inc %esi;");
    asm("loc_10007B1C: mov %ebx,%ecx;");
    asm("loc_10007B1E: not %ecx;");
    asm("loc_10007B20: mov %esi,0x14(%eax);");
    asm("loc_10007B23: mov %ch,(%esi,%edx);");
    asm("loc_10007B26: incl 0x14(%eax);");
    asm("loc_10007B29: test %ebx,%ebx;");
    asm("loc_10007B2B: je loc_10007B4E;");
    asm("loc_10007B2D: lea (%ecx),%ecx;");
    asm("loc_10007B30: mov 0x14(%eax),%ecx;");
    asm("loc_10007B33: mov 8(%eax),%edx;");
    asm("loc_10007B36: mov %ebx,0x10(%esp);");
    asm("loc_10007B3A: mov (%edi),%bl;");
    asm("loc_10007B3C: mov %bl,(%ecx,%edx);");
    asm("loc_10007B3F: mov 0x14(%eax),%esi;");
    asm("loc_10007B42: mov 0x10(%esp),%ebx;");
    asm("loc_10007B46: inc %esi;");
    asm("loc_10007B47: inc %edi;");
    asm("loc_10007B48: dec %ebx;");
    asm("loc_10007B49: mov %esi,0x14(%eax);");
    asm("loc_10007B4C: jne loc_10007B30;");
    asm("loc_10007B4E: pop %edi;");
    asm("loc_10007B4F: pop %esi;");
    asm("loc_10007B50: pop %ebx;");
    asm("loc_10007B51: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007B60() // _sub_10007B60
{
    __DEBUG_ASM(10007B60);
    // chunk 0x10007B60 _sub_10007B60
    asm("loc_10007B60: mov 4(%esp),%edx;");
    asm("loc_10007B64: lea 0x8C(%edx),%eax;");
    asm("loc_10007B6A: mov %eax,0xB10(%edx);");
    asm("loc_10007B70: lea 0xA74(%edx),%eax;");
    asm("loc_10007B76: mov %eax,0xB28(%edx);");
    asm("loc_10007B7C: xor %eax,%eax;");
    asm("loc_10007B7E: lea 0x980(%edx),%ecx;");
    asm("loc_10007B84: movl $_off_1000E164,0xB18(%edx);");
    asm("loc_10007B8E: mov %ecx,0xB1C(%edx);");
    asm("loc_10007B94: movl $_off_1000E178,0xB24(%edx);");
    asm("loc_10007B9E: movl $_data_1000E18C,0xB30(%edx);");
    asm("loc_10007BA8: mov %ax,0x16B0(%edx);");
    asm("loc_10007BAF: mov %eax,0x16B4(%edx);");
    asm("loc_10007BB5: movl $8,0x16AC(%edx);");
    asm("loc_10007BBF: jmp _sub_10006960;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007BD0() // _sub_10007BD0
{
    __DEBUG_ASM(10007BD0);
    // chunk 0x10007BD0 _sub_10007BD0
    asm("loc_10007BD0: sub $0x20,%esp;");
    asm("loc_10007BD3: push %esi;");
    asm("loc_10007BD4: lea 6(%esp),%esi;");
    asm("loc_10007BD8: xor %ecx,%ecx;");
    asm("loc_10007BDA: mov $1,%eax;");
    asm("loc_10007BDF: sub %esi,%edx;");
    asm("loc_10007BE1: lea (%edx,%eax,2),%esi;");
    asm("loc_10007BE4: movzwl 4(%esp,%esi),%esi;");
    asm("loc_10007BE9: add %cx,%si;");
    asm("loc_10007BEC: shl $1,%esi;");
    asm("loc_10007BEE: mov %esi,%ecx;");
    asm("loc_10007BF0: mov %cx,4(%esp,%eax,2);");
    asm("loc_10007BF5: inc %eax;");
    asm("loc_10007BF6: cmp $0xF,%eax;");
    asm("loc_10007BF9: jle loc_10007BE1;");
    asm("loc_10007BFB: xor %esi,%esi;");
    asm("loc_10007BFD: test %ebx,%ebx;");
    asm("loc_10007BFF: jl loc_10007C28;");
    asm("loc_10007C01: movzwl 2(%edi,%esi,4),%edx;");
    asm("loc_10007C06: test %edx,%edx;");
    asm("loc_10007C08: je loc_10007C23;");
    asm("loc_10007C0A: xor %eax,%eax;");
    asm("loc_10007C0C: mov 4(%esp,%edx,2),%ax;");
    asm("loc_10007C11: movzwl %ax,%ecx;");
    asm("loc_10007C14: inc %eax;");
    asm("loc_10007C15: mov %ax,4(%esp,%edx,2);");
    asm("loc_10007C1A: call _sub_100079C0;");
    asm("loc_10007C1F: mov %ax,(%edi,%esi,4);");
    asm("loc_10007C23: inc %esi;");
    asm("loc_10007C24: cmp %ebx,%esi;");
    asm("loc_10007C26: jle loc_10007C01;");
    asm("loc_10007C28: pop %esi;");
    asm("loc_10007C29: add $0x20,%esp;");
    asm("loc_10007C2C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007C30() // _sub_10007C30
{
    __DEBUG_ASM(10007C30);
    // chunk 0x10007C30 _sub_10007C30
    asm("loc_10007C30: sub $8,%esp;");
    asm("loc_10007C33: mov 0xC(%esp),%eax;");
    asm("loc_10007C37: push %ebx;");
    asm("loc_10007C38: push %ebp;");
    asm("loc_10007C39: push %edi;");
    asm("loc_10007C3A: mov (%eax),%edi;");
    asm("loc_10007C3C: mov 8(%eax),%eax;");
    asm("loc_10007C3F: mov 0xC(%eax),%ecx;");
    asm("loc_10007C42: mov (%eax),%ebx;");
    asm("loc_10007C44: xor %edx,%edx;");
    asm("loc_10007C46: or $0xFFFFFFFF,%ebp;");
    asm("loc_10007C49: xor %eax,%eax;");
    asm("loc_10007C4B: cmp %edx,%ecx;");
    asm("loc_10007C4D: mov %ecx,0x10(%esp);");
    asm("loc_10007C51: mov %ebp,0xC(%esp);");
    asm("loc_10007C55: mov %edx,0x1448(%esi);");
    asm("loc_10007C5B: movl $0x23D,0x144C(%esi);");
    asm("loc_10007C65: jle loc_10007C9E;");
    asm("loc_10007C67: cmp %dx,(%edi,%eax,4);");
    asm("loc_10007C6B: je loc_10007C90;");
    asm("loc_10007C6D: mov 0x1448(%esi),%ecx;");
    asm("loc_10007C73: inc %ecx;");
    asm("loc_10007C74: mov %ecx,0x1448(%esi);");
    asm("loc_10007C7A: mov %eax,0xB54(%esi,%ecx,4);");
    asm("loc_10007C81: mov %eax,0xC(%esp);");
    asm("loc_10007C85: mov %dl,0x1450(%eax,%esi);");
    asm("loc_10007C8C: mov %eax,%ebp;");
    asm("loc_10007C8E: jmp loc_10007C95;");
    asm("loc_10007C90: mov %dx,2(%edi,%eax,4);");
    asm("loc_10007C95: mov 0x10(%esp),%ecx;");
    asm("loc_10007C99: inc %eax;");
    asm("loc_10007C9A: cmp %ecx,%eax;");
    asm("loc_10007C9C: jl loc_10007C67;");
    asm("loc_10007C9E: cmpl $2,0x1448(%esi);");
    asm("loc_10007CA5: jge loc_10007CFD;");
    asm("loc_10007CA7: cmp $2,%ebp;");
    asm("loc_10007CAA: jge loc_10007CB1;");
    asm("loc_10007CAC: inc %ebp;");
    asm("loc_10007CAD: mov %ebp,%eax;");
    asm("loc_10007CAF: jmp loc_10007CB3;");
    asm("loc_10007CB1: xor %eax,%eax;");
    asm("loc_10007CB3: mov 0x1448(%esi),%ecx;");
    asm("loc_10007CB9: inc %ecx;");
    asm("loc_10007CBA: mov %ecx,0x1448(%esi);");
    asm("loc_10007CC0: mov %eax,0xB54(%esi,%ecx,4);");
    asm("loc_10007CC7: movw $1,(%edi,%eax,4);");
    asm("loc_10007CCD: mov %dl,0x1450(%esi,%eax);");
    asm("loc_10007CD4: mov 0x16A0(%esi),%ecx;");
    asm("loc_10007CDA: dec %ecx;");
    asm("loc_10007CDB: cmp %edx,%ebx;");
    asm("loc_10007CDD: mov %ecx,0x16A0(%esi);");
    asm("loc_10007CE3: je loc_10007CF0;");
    asm("loc_10007CE5: movzwl 2(%ebx,%eax,4),%eax;");
    asm("loc_10007CEA: sub %eax,0x16A4(%esi);");
    asm("loc_10007CF0: cmpl $2,0x1448(%esi);");
    asm("loc_10007CF7: jl loc_10007CA7;");
    asm("loc_10007CF9: mov %ebp,0xC(%esp);");
    asm("loc_10007CFD: mov 0x18(%esp),%ecx;");
    asm("loc_10007D01: mov %ebp,4(%ecx);");
    asm("loc_10007D04: mov 0x1448(%esi),%eax;");
    asm("loc_10007D0A: cltd;");
    asm("loc_10007D0B: sub %edx,%eax;");
    asm("loc_10007D0D: mov %eax,%ebx;");
    asm("loc_10007D0F: sar $1,%ebx;");
    asm("loc_10007D11: cmp $1,%ebx;");
    asm("loc_10007D14: jl loc_10007D27;");
    asm("loc_10007D16: push %ebx;");
    asm("loc_10007D17: mov %esi,%eax;");
    asm("loc_10007D19: call _sub_100069D0;");
    asm("loc_10007D1E: add $4,%esp;");
    asm("loc_10007D21: dec %ebx;");
    asm("loc_10007D22: cmp $1,%ebx;");
    asm("loc_10007D25: jge loc_10007D16;");
    asm("loc_10007D27: mov 0x10(%esp),%ebp;");
    asm("loc_10007D2B: jmp loc_10007D30;");
    asm("loc_10007D2D: lea (%ecx),%ecx;");
    asm("loc_10007D30: mov 0x1448(%esi),%eax;");
    asm("loc_10007D36: mov 0xB54(%esi,%eax,4),%edx;");
    asm("loc_10007D3D: mov 0xB58(%esi),%ebx;");
    asm("loc_10007D43: dec %eax;");
    asm("loc_10007D44: mov %eax,0x1448(%esi);");
    asm("loc_10007D4A: push $1;");
    asm("loc_10007D4C: mov %esi,%eax;");
    asm("loc_10007D4E: mov %edx,0xB58(%esi);");
    asm("loc_10007D54: call _sub_100069D0;");
    asm("loc_10007D59: mov 0x144C(%esi),%edx;");
    asm("loc_10007D5F: mov 0xB58(%esi),%eax;");
    asm("loc_10007D65: add $4,%esp;");
    asm("loc_10007D68: dec %edx;");
    asm("loc_10007D69: mov %edx,0x144C(%esi);");
    asm("loc_10007D6F: mov %edx,%ecx;");
    asm("loc_10007D71: mov %ebx,0xB54(%esi,%ecx,4);");
    asm("loc_10007D78: mov 0x144C(%esi),%ecx;");
    asm("loc_10007D7E: dec %ecx;");
    asm("loc_10007D7F: mov %ecx,0x144C(%esi);");
    asm("loc_10007D85: mov %eax,0xB54(%esi,%ecx,4);");
    asm("loc_10007D8C: mov (%edi,%eax,4),%cx;");
    asm("loc_10007D90: add (%edi,%ebx,4),%cx;");
    asm("loc_10007D94: mov %cx,(%edi,%ebp,4);");
    asm("loc_10007D98: mov 0x1450(%esi,%eax),%cl;");
    asm("loc_10007D9F: mov 0x1450(%esi,%ebx),%dl;");
    asm("loc_10007DA6: cmp %cl,%dl;");
    asm("loc_10007DA8: jb loc_10007DAF;");
    asm("loc_10007DAA: movzbl %dl,%ecx;");
    asm("loc_10007DAD: jmp loc_10007DB2;");
    asm("loc_10007DAF: movzbl %cl,%ecx;");
    asm("loc_10007DB2: inc %cl;");
    asm("loc_10007DB4: mov %cl,0x1450(%esi,%ebp);");
    asm("loc_10007DBB: mov %bp,2(%edi,%eax,4);");
    asm("loc_10007DC0: mov %bp,2(%edi,%ebx,4);");
    asm("loc_10007DC5: mov %ebp,0xB58(%esi);");
    asm("loc_10007DCB: push $1;");
    asm("loc_10007DCD: mov %esi,%eax;");
    asm("loc_10007DCF: inc %ebp;");
    asm("loc_10007DD0: call _sub_100069D0;");
    asm("loc_10007DD5: mov 0x1448(%esi),%eax;");
    asm("loc_10007DDB: add $4,%esp;");
    asm("loc_10007DDE: cmp $2,%eax;");
    asm("loc_10007DE1: jge loc_10007D30;");
    asm("loc_10007DE7: mov 0x144C(%esi),%eax;");
    asm("loc_10007DED: mov 0xB58(%esi),%edx;");
    asm("loc_10007DF3: dec %eax;");
    asm("loc_10007DF4: mov %eax,0x144C(%esi);");
    asm("loc_10007DFA: mov %edx,0xB54(%esi,%eax,4);");
    asm("loc_10007E01: mov 0x18(%esp),%eax;");
    asm("loc_10007E05: mov %esi,%edx;");
    asm("loc_10007E07: call _sub_10006AA0;");
    asm("loc_10007E0C: mov 0xC(%esp),%ebx;");
    asm("loc_10007E10: lea 0xB34(%esi),%edx;");
    asm("loc_10007E16: call _sub_10007BD0;");
    asm("loc_10007E1B: pop %edi;");
    asm("loc_10007E1C: pop %ebp;");
    asm("loc_10007E1D: pop %ebx;");
    asm("loc_10007E1E: add $8,%esp;");
    asm("loc_10007E21: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007E30() // _sub_10007E30
{
    __DEBUG_ASM(10007E30);
    // chunk 0x10007E30 _sub_10007E30
    asm("loc_10007E30: push %esi;");
    asm("loc_10007E31: mov %eax,%esi;");
    asm("loc_10007E33: mov 0xB14(%esi),%ecx;");
    asm("loc_10007E39: lea 0x8C(%esi),%eax;");
    asm("loc_10007E3F: push %esi;");
    asm("loc_10007E40: call _sub_10006CB0;");
    asm("loc_10007E45: mov 0xB20(%esi),%ecx;");
    asm("loc_10007E4B: lea 0x980(%esi),%eax;");
    asm("loc_10007E51: push %esi;");
    asm("loc_10007E52: call _sub_10006CB0;");
    asm("loc_10007E57: lea 0xB28(%esi),%eax;");
    asm("loc_10007E5D: push %eax;");
    asm("loc_10007E5E: call _sub_10007C30;");
    asm("loc_10007E63: add $0xC,%esp;");
    asm("loc_10007E66: mov $0x12,%eax;");
    asm("loc_10007E6B: jmp loc_10007E70;");
    asm("loc_10007E6D: lea (%ecx),%ecx;");
    asm("loc_10007E70: movzbl _data_1000B71C(%eax),%ecx;");
    asm("loc_10007E77: cmpw $0,0xA76(%esi,%ecx,4);");
    asm("loc_10007E80: jne loc_10007E88;");
    asm("loc_10007E82: dec %eax;");
    asm("loc_10007E83: cmp $3,%eax;");
    asm("loc_10007E86: jge loc_10007E70;");
    asm("loc_10007E88: mov 0x16A0(%esi),%ecx;");
    asm("loc_10007E8E: lea 0x11(%eax,%eax,2),%edx;");
    asm("loc_10007E92: add %edx,%ecx;");
    asm("loc_10007E94: mov %ecx,0x16A0(%esi);");
    asm("loc_10007E9A: pop %esi;");
    asm("loc_10007E9B: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007EA0() // _sub_10007EA0
{
    __DEBUG_ASM(10007EA0);
    // chunk 0x10007EA0 _sub_10007EA0
    asm("loc_10007EA0: mov 4(%esp),%eax;");
    asm("loc_10007EA4: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007EAA: cmp $0xD,%ecx;");
    asm("loc_10007EAD: jle loc_10007F19;");
    asm("loc_10007EAF: push %ebx;");
    asm("loc_10007EB0: push %esi;");
    asm("loc_10007EB1: mov 0x18(%esp),%esi;");
    asm("loc_10007EB5: mov %esi,%edx;");
    asm("loc_10007EB7: shl %cl,%edx;");
    asm("loc_10007EB9: mov 8(%eax),%ecx;");
    asm("loc_10007EBC: or %dx,0x16B0(%eax);");
    asm("loc_10007EC3: mov 0x14(%eax),%edx;");
    asm("loc_10007EC6: mov 0x16B0(%eax),%bl;");
    asm("loc_10007ECC: mov %bl,(%ecx,%edx);");
    asm("loc_10007ECF: mov 0x14(%eax),%ecx;");
    asm("loc_10007ED2: mov 0x16B1(%eax),%bl;");
    asm("loc_10007ED8: mov 8(%eax),%edx;");
    asm("loc_10007EDB: inc %ecx;");
    asm("loc_10007EDC: mov %ecx,0x14(%eax);");
    asm("loc_10007EDF: mov %bl,(%ecx,%edx);");
    asm("loc_10007EE2: mov 0x16B4(%eax),%edx;");
    asm("loc_10007EE8: mov 0x14(%eax),%ebx;");
    asm("loc_10007EEB: mov $0x10,%cl;");
    asm("loc_10007EED: sub %dl,%cl;");
    asm("loc_10007EEF: shr %cl,%si;");
    asm("loc_10007EF2: mov 0x14(%esp),%ecx;");
    asm("loc_10007EF6: inc %ebx;");
    asm("loc_10007EF7: add $0xFFFFFFF3,%edx;");
    asm("loc_10007EFA: mov %si,0x16B0(%eax);");
    asm("loc_10007F01: pop %esi;");
    asm("loc_10007F02: mov %ebx,0x14(%eax);");
    asm("loc_10007F05: mov %edx,0x16B4(%eax);");
    asm("loc_10007F0B: mov 0xC(%esp),%edx;");
    asm("loc_10007F0F: pop %ebx;");
    asm("loc_10007F10: push $1;");
    asm("loc_10007F12: call _sub_10007AD0;");
    asm("loc_10007F17: pop %ecx;");
    asm("loc_10007F18: ret;");
    asm("loc_10007F19: mov 0x10(%esp),%edx;");
    asm("loc_10007F1D: shl %cl,%edx;");
    asm("loc_10007F1F: add $3,%ecx;");
    asm("loc_10007F22: mov %ecx,0x16B4(%eax);");
    asm("loc_10007F28: mov 0xC(%esp),%ecx;");
    asm("loc_10007F2C: or %dx,0x16B0(%eax);");
    asm("loc_10007F33: mov 8(%esp),%edx;");
    asm("loc_10007F37: push $1;");
    asm("loc_10007F39: call _sub_10007AD0;");
    asm("loc_10007F3E: pop %ecx;");
    asm("loc_10007F3F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10007F40() // _sub_10007F40
{
    __DEBUG_ASM(10007F40);
    // chunk 0x10007F40 _sub_10007F40
    asm("loc_10007F40: mov 4(%esp),%eax;");
    asm("loc_10007F44: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007F4A: mov $2,%edx;");
    asm("loc_10007F4F: shl %cl,%edx;");
    asm("loc_10007F51: push %ebx;");
    asm("loc_10007F52: push %esi;");
    asm("loc_10007F53: or %dx,0x16B0(%eax);");
    asm("loc_10007F5A: cmp $0xD,%ecx;");
    asm("loc_10007F5D: jle loc_10007FAC;");
    asm("loc_10007F5F: mov 0x14(%eax),%edx;");
    asm("loc_10007F62: mov 0x16B0(%eax),%bl;");
    asm("loc_10007F68: mov 8(%eax),%ecx;");
    asm("loc_10007F6B: mov %bl,(%ecx,%edx);");
    asm("loc_10007F6E: mov 0x14(%eax),%ecx;");
    asm("loc_10007F71: mov 0x16B1(%eax),%bl;");
    asm("loc_10007F77: mov 8(%eax),%edx;");
    asm("loc_10007F7A: inc %ecx;");
    asm("loc_10007F7B: mov %ecx,0x14(%eax);");
    asm("loc_10007F7E: mov %bl,(%ecx,%edx);");
    asm("loc_10007F81: mov 0x16B4(%eax),%edx;");
    asm("loc_10007F87: mov 0x14(%eax),%ebx;");
    asm("loc_10007F8A: mov $0x10,%cl;");
    asm("loc_10007F8C: sub %dl,%cl;");
    asm("loc_10007F8E: mov $2,%esi;");
    asm("loc_10007F93: shr %cl,%si;");
    asm("loc_10007F96: inc %ebx;");
    asm("loc_10007F97: add $0xFFFFFFF3,%edx;");
    asm("loc_10007F9A: mov %ebx,0x14(%eax);");
    asm("loc_10007F9D: mov %si,0x16B0(%eax);");
    asm("loc_10007FA4: mov %edx,0x16B4(%eax);");
    asm("loc_10007FAA: jmp loc_10007FB5;");
    asm("loc_10007FAC: add $3,%ecx;");
    asm("loc_10007FAF: mov %ecx,0x16B4(%eax);");
    asm("loc_10007FB5: mov 0x16B4(%eax),%ecx;");
    asm("loc_10007FBB: xor %edx,%edx;");
    asm("loc_10007FBD: shl %cl,%edx;");
    asm("loc_10007FBF: or %dx,0x16B0(%eax);");
    asm("loc_10007FC6: cmp $9,%ecx;");
    asm("loc_10007FC9: jle loc_10008015;");
    asm("loc_10007FCB: mov 0x14(%eax),%edx;");
    asm("loc_10007FCE: mov 0x16B0(%eax),%bl;");
    asm("loc_10007FD4: mov 8(%eax),%ecx;");
    asm("loc_10007FD7: mov %bl,(%ecx,%edx);");
    asm("loc_10007FDA: mov 0x14(%eax),%ecx;");
    asm("loc_10007FDD: mov 0x16B1(%eax),%bl;");
    asm("loc_10007FE3: mov 8(%eax),%edx;");
    asm("loc_10007FE6: inc %ecx;");
    asm("loc_10007FE7: mov %ecx,0x14(%eax);");
    asm("loc_10007FEA: mov %bl,(%ecx,%edx);");
    asm("loc_10007FED: mov 0x16B4(%eax),%edx;");
    asm("loc_10007FF3: mov 0x14(%eax),%ebx;");
    asm("loc_10007FF6: mov $0x10,%cl;");
    asm("loc_10007FF8: sub %dl,%cl;");
    asm("loc_10007FFA: xor %esi,%esi;");
    asm("loc_10007FFC: shr %cl,%si;");
    asm("loc_10007FFF: inc %ebx;");
    asm("loc_10008000: add $0xFFFFFFF7,%edx;");
    asm("loc_10008003: mov %ebx,0x14(%eax);");
    asm("loc_10008006: mov %si,0x16B0(%eax);");
    asm("loc_1000800D: mov %edx,0x16B4(%eax);");
    asm("loc_10008013: jmp loc_1000801E;");
    asm("loc_10008015: add $7,%ecx;");
    asm("loc_10008018: mov %ecx,0x16B4(%eax);");
    asm("loc_1000801E: call _sub_100079E0;");
    asm("loc_10008023: mov 0x16B4(%eax),%ecx;");
    asm("loc_10008029: mov 0x16AC(%eax),%edx;");
    asm("loc_1000802F: sub %ecx,%edx;");
    asm("loc_10008031: add $0xB,%edx;");
    asm("loc_10008034: cmp $9,%edx;");
    asm("loc_10008037: jge loc_10008124;");
    asm("loc_1000803D: mov $2,%edx;");
    asm("loc_10008042: shl %cl,%edx;");
    asm("loc_10008044: or %dx,0x16B0(%eax);");
    asm("loc_1000804B: cmp $0xD,%ecx;");
    asm("loc_1000804E: jle loc_1000809D;");
    asm("loc_10008050: mov 0x14(%eax),%edx;");
    asm("loc_10008053: mov 0x16B0(%eax),%bl;");
    asm("loc_10008059: mov 8(%eax),%ecx;");
    asm("loc_1000805C: mov %bl,(%ecx,%edx);");
    asm("loc_1000805F: mov 0x14(%eax),%ecx;");
    asm("loc_10008062: mov 0x16B1(%eax),%bl;");
    asm("loc_10008068: mov 8(%eax),%edx;");
    asm("loc_1000806B: inc %ecx;");
    asm("loc_1000806C: mov %ecx,0x14(%eax);");
    asm("loc_1000806F: mov %bl,(%ecx,%edx);");
    asm("loc_10008072: mov 0x16B4(%eax),%edx;");
    asm("loc_10008078: mov 0x14(%eax),%ebx;");
    asm("loc_1000807B: mov $0x10,%cl;");
    asm("loc_1000807D: sub %dl,%cl;");
    asm("loc_1000807F: mov $2,%esi;");
    asm("loc_10008084: shr %cl,%si;");
    asm("loc_10008087: inc %ebx;");
    asm("loc_10008088: add $0xFFFFFFF3,%edx;");
    asm("loc_1000808B: mov %ebx,0x14(%eax);");
    asm("loc_1000808E: mov %si,0x16B0(%eax);");
    asm("loc_10008095: mov %edx,0x16B4(%eax);");
    asm("loc_1000809B: jmp loc_100080A6;");
    asm("loc_1000809D: add $3,%ecx;");
    asm("loc_100080A0: mov %ecx,0x16B4(%eax);");
    asm("loc_100080A6: mov 0x16B4(%eax),%ecx;");
    asm("loc_100080AC: xor %edx,%edx;");
    asm("loc_100080AE: shl %cl,%edx;");
    asm("loc_100080B0: or %dx,0x16B0(%eax);");
    asm("loc_100080B7: cmp $9,%ecx;");
    asm("loc_100080BA: jle loc_10008116;");
    asm("loc_100080BC: mov 0x14(%eax),%edx;");
    asm("loc_100080BF: mov 0x16B0(%eax),%bl;");
    asm("loc_100080C5: mov 8(%eax),%ecx;");
    asm("loc_100080C8: mov %bl,(%ecx,%edx);");
    asm("loc_100080CB: mov 0x14(%eax),%ecx;");
    asm("loc_100080CE: mov 0x16B1(%eax),%bl;");
    asm("loc_100080D4: mov 8(%eax),%edx;");
    asm("loc_100080D7: inc %ecx;");
    asm("loc_100080D8: mov %ecx,0x14(%eax);");
    asm("loc_100080DB: mov %bl,(%ecx,%edx);");
    asm("loc_100080DE: mov 0x16B4(%eax),%edx;");
    asm("loc_100080E4: mov 0x14(%eax),%ebx;");
    asm("loc_100080E7: mov $0x10,%cl;");
    asm("loc_100080E9: sub %dl,%cl;");
    asm("loc_100080EB: xor %esi,%esi;");
    asm("loc_100080ED: shr %cl,%si;");
    asm("loc_100080F0: inc %ebx;");
    asm("loc_100080F1: add $0xFFFFFFF7,%edx;");
    asm("loc_100080F4: mov %ebx,0x14(%eax);");
    asm("loc_100080F7: mov %si,0x16B0(%eax);");
    asm("loc_100080FE: mov %edx,0x16B4(%eax);");
    asm("loc_10008104: call _sub_100079E0;");
    asm("loc_10008109: pop %esi;");
    asm("loc_1000810A: movl $7,0x16AC(%eax);");
    asm("loc_10008114: pop %ebx;");
    asm("loc_10008115: ret;");
    asm("loc_10008116: add $7,%ecx;");
    asm("loc_10008119: mov %ecx,0x16B4(%eax);");
    asm("loc_1000811F: call _sub_100079E0;");
    asm("loc_10008124: pop %esi;");
    asm("loc_10008125: movl $7,0x16AC(%eax);");
    asm("loc_1000812F: pop %ebx;");
    asm("loc_10008130: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008140() // _sub_10008140
{
    __DEBUG_ASM(10008140);
    // chunk 0x10008140 _sub_10008140
    asm("loc_10008140: push %ebx;");
    asm("loc_10008141: push %ebp;");
    asm("loc_10008142: mov 0x14(%esp),%ebp;");
    asm("loc_10008146: push %esi;");
    asm("loc_10008147: mov 0x10(%esp),%esi;");
    asm("loc_1000814B: mov 0x7C(%esi),%ecx;");
    asm("loc_1000814E: xor %eax,%eax;");
    asm("loc_10008150: test %ecx,%ecx;");
    asm("loc_10008152: push %edi;");
    asm("loc_10008153: jle loc_100081A2;");
    asm("loc_10008155: cmpb $2,0x1C(%esi);");
    asm("loc_10008159: jne loc_10008162;");
    asm("loc_1000815B: mov %esi,%ecx;");
    asm("loc_1000815D: call _sub_10007930;");
    asm("loc_10008162: lea 0xB10(%esi),%eax;");
    asm("loc_10008168: push %eax;");
    asm("loc_10008169: call _sub_10007C30;");
    asm("loc_1000816E: lea 0xB1C(%esi),%ecx;");
    asm("loc_10008174: push %ecx;");
    asm("loc_10008175: call _sub_10007C30;");
    asm("loc_1000817A: add $8,%esp;");
    asm("loc_1000817D: mov %esi,%eax;");
    asm("loc_1000817F: call _sub_10007E30;");
    asm("loc_10008184: mov 0x16A0(%esi),%edx;");
    asm("loc_1000818A: mov 0x16A4(%esi),%ecx;");
    asm("loc_10008190: add $0xA,%edx;");
    asm("loc_10008193: add $0xA,%ecx;");
    asm("loc_10008196: shr $3,%edx;");
    asm("loc_10008199: shr $3,%ecx;");
    asm("loc_1000819C: cmp %edx,%ecx;");
    asm("loc_1000819E: ja loc_100081A7;");
    asm("loc_100081A0: jmp loc_100081A5;");
    asm("loc_100081A2: lea 5(%ebp),%ecx;");
    asm("loc_100081A5: mov %ecx,%edx;");
    asm("loc_100081A7: lea 4(%ebp),%edi;");
    asm("loc_100081AA: cmp %edx,%edi;");
    asm("loc_100081AC: ja loc_100081CB;");
    asm("loc_100081AE: mov 0x18(%esp),%ebx;");
    asm("loc_100081B2: test %ebx,%ebx;");
    asm("loc_100081B4: je loc_100081CB;");
    asm("loc_100081B6: mov 0x20(%esp),%edi;");
    asm("loc_100081BA: push %edi;");
    asm("loc_100081BB: push %ebp;");
    asm("loc_100081BC: push %ebx;");
    asm("loc_100081BD: push %esi;");
    asm("loc_100081BE: call _sub_10007EA0;");
    asm("loc_100081C3: add $0x10,%esp;");
    asm("loc_100081C6: jmp loc_1000830B;");
    asm("loc_100081CB: mov 0x20(%esp),%edi;");
    asm("loc_100081CF: cmp %edx,%ecx;");
    asm("loc_100081D1: mov 0x16B4(%esi),%ecx;");
    asm("loc_100081D7: jne loc_10008265;");
    asm("loc_100081DD: cmp $0xD,%ecx;");
    asm("loc_100081E0: lea 2(%edi),%eax;");
    asm("loc_100081E3: jle loc_1000823A;");
    asm("loc_100081E5: mov %eax,%edx;");
    asm("loc_100081E7: shl %cl,%edx;");
    asm("loc_100081E9: mov 8(%esi),%ecx;");
    asm("loc_100081EC: or %dx,0x16B0(%esi);");
    asm("loc_100081F3: mov 0x14(%esi),%edx;");
    asm("loc_100081F6: mov 0x16B0(%esi),%bl;");
    asm("loc_100081FC: mov %bl,(%ecx,%edx);");
    asm("loc_100081FF: mov 0x14(%esi),%edx;");
    asm("loc_10008202: mov 0x16B1(%esi),%bl;");
    asm("loc_10008208: inc %edx;");
    asm("loc_10008209: mov %edx,0x14(%esi);");
    asm("loc_1000820C: mov %edx,%ecx;");
    asm("loc_1000820E: mov 8(%esi),%edx;");
    asm("loc_10008211: mov %bl,(%ecx,%edx);");
    asm("loc_10008214: mov 0x14(%esi),%ecx;");
    asm("loc_10008217: mov 0x16B4(%esi),%edx;");
    asm("loc_1000821D: inc %ecx;");
    asm("loc_1000821E: mov %ecx,0x14(%esi);");
    asm("loc_10008221: mov $0x10,%cl;");
    asm("loc_10008223: sub %dl,%cl;");
    asm("loc_10008225: shr %cl,%ax;");
    asm("loc_10008228: add $0xFFFFFFF3,%edx;");
    asm("loc_1000822B: mov %edx,0x16B4(%esi);");
    asm("loc_10008231: mov %ax,0x16B0(%esi);");
    asm("loc_10008238: jmp loc_1000824C;");
    asm("loc_1000823A: shl %cl,%eax;");
    asm("loc_1000823C: or %ax,0x16B0(%esi);");
    asm("loc_10008243: add $3,%ecx;");
    asm("loc_10008246: mov %ecx,0x16B4(%esi);");
    asm("loc_1000824C: push $_data_1000BBB0;");
    asm("loc_10008251: push $_data_1000B730;");
    asm("loc_10008256: mov %esi,%eax;");
    asm("loc_10008258: call _sub_10007510;");
    asm("loc_1000825D: add $8,%esp;");
    asm("loc_10008260: jmp loc_1000830B;");
    asm("loc_10008265: cmp $0xD,%ecx;");
    asm("loc_10008268: lea 4(%edi),%edx;");
    asm("loc_1000826B: jle loc_100082C8;");
    asm("loc_1000826D: mov %edx,%ebx;");
    asm("loc_1000826F: shl %cl,%ebx;");
    asm("loc_10008271: mov 8(%esi),%ecx;");
    asm("loc_10008274: mov %eax,0x20(%esp);");
    asm("loc_10008278: or %bx,0x16B0(%esi);");
    asm("loc_1000827F: mov 0x14(%esi),%ebx;");
    asm("loc_10008282: mov 0x16B0(%esi),%al;");
    asm("loc_10008288: mov %al,(%ecx,%ebx);");
    asm("loc_1000828B: mov 0x14(%esi),%ecx;");
    asm("loc_1000828E: mov 0x16B1(%esi),%al;");
    asm("loc_10008294: mov 8(%esi),%ebx;");
    asm("loc_10008297: inc %ecx;");
    asm("loc_10008298: mov %ecx,0x14(%esi);");
    asm("loc_1000829B: mov %al,(%ecx,%ebx);");
    asm("loc_1000829E: mov 0x16B4(%esi),%ebx;");
    asm("loc_100082A4: mov 0x14(%esi),%eax;");
    asm("loc_100082A7: mov $0x10,%cl;");
    asm("loc_100082A9: sub %bl,%cl;");
    asm("loc_100082AB: shr %cl,%dx;");
    asm("loc_100082AE: inc %eax;");
    asm("loc_100082AF: add $0xFFFFFFF3,%ebx;");
    asm("loc_100082B2: mov %eax,0x14(%esi);");
    asm("loc_100082B5: mov 0x20(%esp),%eax;");
    asm("loc_100082B9: mov %dx,0x16B0(%esi);");
    asm("loc_100082C0: mov %ebx,0x16B4(%esi);");
    asm("loc_100082C6: jmp loc_100082DA;");
    asm("loc_100082C8: shl %cl,%edx;");
    asm("loc_100082CA: or %dx,0x16B0(%esi);");
    asm("loc_100082D1: add $3,%ecx;");
    asm("loc_100082D4: mov %ecx,0x16B4(%esi);");
    asm("loc_100082DA: mov 0xB14(%esi),%ecx;");
    asm("loc_100082E0: inc %eax;");
    asm("loc_100082E1: push %eax;");
    asm("loc_100082E2: mov 0xB20(%esi),%eax;");
    asm("loc_100082E8: inc %eax;");
    asm("loc_100082E9: push %eax;");
    asm("loc_100082EA: inc %ecx;");
    asm("loc_100082EB: push %ecx;");
    asm("loc_100082EC: mov %esi,%eax;");
    asm("loc_100082EE: call _sub_100072A0;");
    asm("loc_100082F3: lea 0x980(%esi),%edx;");
    asm("loc_100082F9: push %edx;");
    asm("loc_100082FA: lea 0x8C(%esi),%eax;");
    asm("loc_10008300: push %eax;");
    asm("loc_10008301: mov %esi,%eax;");
    asm("loc_10008303: call _sub_10007510;");
    asm("loc_10008308: add $0x14,%esp;");
    asm("loc_1000830B: mov %esi,%edx;");
    asm("loc_1000830D: call _sub_10006960;");
    asm("loc_10008312: test %edi,%edi;");
    asm("loc_10008314: pop %edi;");
    asm("loc_10008315: je loc_10008321;");
    asm("loc_10008317: mov %esi,%eax;");
    asm("loc_10008319: pop %esi;");
    asm("loc_1000831A: pop %ebp;");
    asm("loc_1000831B: pop %ebx;");
    asm("loc_1000831C: jmp _sub_10007A60;");
    asm("loc_10008321: pop %esi;");
    asm("loc_10008322: pop %ebp;");
    asm("loc_10008323: pop %ebx;");
    asm("loc_10008324: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008330() // _uncompress
{
    __DEBUG_ASM(10008330);
    // chunk 0x10008330 _sub_10008330
    asm("loc_10008330: sub $0x38,%esp;");
    asm("loc_10008333: mov 0x48(%esp),%ecx;");
    asm("loc_10008337: mov 0x44(%esp),%eax;");
    asm("loc_1000833B: mov 0x3C(%esp),%edx;");
    asm("loc_1000833F: push %edi;");
    asm("loc_10008340: mov 0x44(%esp),%edi;");
    asm("loc_10008344: push $0x38;");
    asm("loc_10008346: mov %ecx,0xC(%esp);");
    asm("loc_1000834A: mov %eax,8(%esp);");
    asm("loc_1000834E: mov (%edi),%eax;");
    asm("loc_10008350: push $_data_1000B068;");
    asm("loc_10008355: lea 0xC(%esp),%ecx;");
    asm("loc_10008359: push %ecx;");
    asm("loc_1000835A: mov %edx,0x1C(%esp);");
    asm("loc_1000835E: mov %eax,0x20(%esp);");
    asm("loc_10008362: movl $0,0x30(%esp);");
    asm("loc_1000836A: movl $0,0x34(%esp);");
    asm("loc_10008372: call _sub_100059E0;");
    asm("loc_10008377: test %eax,%eax;");
    asm("loc_10008379: jne loc_100083BD;");
    asm("loc_1000837B: push %esi;");
    asm("loc_1000837C: push $4;");
    asm("loc_1000837E: lea 0xC(%esp),%edx;");
    asm("loc_10008382: push %edx;");
    asm("loc_10008383: call _sub_10005A00;");
    asm("loc_10008388: mov %eax,%esi;");
    asm("loc_1000838A: cmp $1,%esi;");
    asm("loc_1000838D: je loc_100083AC;");
    asm("loc_1000838F: lea 8(%esp),%eax;");
    asm("loc_10008393: push %eax;");
    asm("loc_10008394: call _sub_10005890;");
    asm("loc_10008399: test %esi,%esi;");
    asm("loc_1000839B: mov $0xFFFFFFFB,%eax;");
    asm("loc_100083A0: je loc_100083BC;");
    asm("loc_100083A2: mov %esi,%eax;");
    asm("loc_100083A4: pop %esi;");
    asm("loc_100083A5: pop %edi;");
    asm("loc_100083A6: add $0x38,%esp;");
    asm("loc_100083A9: ret $0x10;");
    asm("loc_100083AC: mov 0x1C(%esp),%ecx;");
    asm("loc_100083B0: lea 8(%esp),%edx;");
    asm("loc_100083B4: push %edx;");
    asm("loc_100083B5: mov %ecx,(%edi);");
    asm("loc_100083B7: call _sub_10005890;");
    asm("loc_100083BC: pop %esi;");
    asm("loc_100083BD: pop %edi;");
    asm("loc_100083BE: add $0x38,%esp;");
    asm("loc_100083C1: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100083D0() // _sub_100083D0
{
    __DEBUG_ASM(100083D0);
    // chunk 0x100083D0 _sub_100083D0
    asm("loc_100083D0: push %ecx;");
    asm("loc_100083D1: mov 0x1C(%esi),%ecx;");
    asm("loc_100083D4: push $1;");
    asm("loc_100083D6: lea 7(%esp),%eax;");
    asm("loc_100083DA: push %eax;");
    asm("loc_100083DB: push %edi;");
    asm("loc_100083DC: push %ecx;");
    asm("loc_100083DD: calll *4(%esi);");
    asm("loc_100083E0: cmp $1,%eax;");
    asm("loc_100083E3: jne loc_100083F4;");
    asm("loc_100083E5: movzbl 3(%esp),%edx;");
    asm("loc_100083EA: mov 8(%esp),%eax;");
    asm("loc_100083EE: mov %edx,(%eax);");
    asm("loc_100083F0: xor %eax,%eax;");
    asm("loc_100083F2: pop %ecx;");
    asm("loc_100083F3: ret;");
    asm("loc_100083F4: mov 0x1C(%esi),%ecx;");
    asm("loc_100083F7: push %edi;");
    asm("loc_100083F8: push %ecx;");
    asm("loc_100083F9: calll *0x18(%esi);");
    asm("loc_100083FC: neg %eax;");
    asm("loc_100083FE: sbb %eax,%eax;");
    asm("loc_10008400: pop %ecx;");
    asm("loc_10008401: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008410() // _sub_10008410
{
    __DEBUG_ASM(10008410);
    // chunk 0x10008410 _sub_10008410
    asm("loc_10008410: push %ecx;");
    asm("loc_10008411: push %ebx;");
    asm("loc_10008412: push %ebp;");
    asm("loc_10008413: mov 0x10(%esp),%ebp;");
    asm("loc_10008417: push %esi;");
    asm("loc_10008418: push %edi;");
    asm("loc_10008419: mov %eax,%edi;");
    asm("loc_1000841B: lea 0x10(%esp),%eax;");
    asm("loc_1000841F: mov %ecx,%esi;");
    asm("loc_10008421: push %eax;");
    asm("loc_10008422: call _sub_100083D0;");
    asm("loc_10008427: mov 0x14(%esp),%ebx;");
    asm("loc_1000842B: add $4,%esp;");
    asm("loc_1000842E: test %eax,%eax;");
    asm("loc_10008430: jne loc_10008455;");
    asm("loc_10008432: lea 0x10(%esp),%ecx;");
    asm("loc_10008436: push %ecx;");
    asm("loc_10008437: call _sub_100083D0;");
    asm("loc_1000843C: add $4,%esp;");
    asm("loc_1000843F: test %eax,%eax;");
    asm("loc_10008441: jne loc_10008455;");
    asm("loc_10008443: mov 0x10(%esp),%edx;");
    asm("loc_10008447: pop %edi;");
    asm("loc_10008448: shl $8,%edx;");
    asm("loc_1000844B: add %ebx,%edx;");
    asm("loc_1000844D: pop %esi;");
    asm("loc_1000844E: mov %edx,(%ebp);");
    asm("loc_10008451: pop %ebp;");
    asm("loc_10008452: pop %ebx;");
    asm("loc_10008453: pop %ecx;");
    asm("loc_10008454: ret;");
    asm("loc_10008455: pop %edi;");
    asm("loc_10008456: pop %esi;");
    asm("loc_10008457: movl $0,(%ebp);");
    asm("loc_1000845E: pop %ebp;");
    asm("loc_1000845F: pop %ebx;");
    asm("loc_10008460: pop %ecx;");
    asm("loc_10008461: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008470() // _sub_10008470
{
    __DEBUG_ASM(10008470);
    // chunk 0x10008470 _sub_10008470
    asm("loc_10008470: push %ecx;");
    asm("loc_10008471: push %ebx;");
    asm("loc_10008472: push %ebp;");
    asm("loc_10008473: mov 0x10(%esp),%ebp;");
    asm("loc_10008477: push %esi;");
    asm("loc_10008478: push %edi;");
    asm("loc_10008479: mov %eax,%edi;");
    asm("loc_1000847B: lea 0x10(%esp),%eax;");
    asm("loc_1000847F: mov %ecx,%esi;");
    asm("loc_10008481: push %eax;");
    asm("loc_10008482: call _sub_100083D0;");
    asm("loc_10008487: mov 0x14(%esp),%ecx;");
    asm("loc_1000848B: add $4,%esp;");
    asm("loc_1000848E: test %eax,%eax;");
    asm("loc_10008490: mov %ecx,%ebx;");
    asm("loc_10008492: jne loc_100084A5;");
    asm("loc_10008494: lea 0x10(%esp),%ecx;");
    asm("loc_10008498: push %ecx;");
    asm("loc_10008499: call _sub_100083D0;");
    asm("loc_1000849E: mov 0x14(%esp),%ecx;");
    asm("loc_100084A2: add $4,%esp;");
    asm("loc_100084A5: mov %ecx,%edx;");
    asm("loc_100084A7: shl $8,%edx;");
    asm("loc_100084AA: add %edx,%ebx;");
    asm("loc_100084AC: test %eax,%eax;");
    asm("loc_100084AE: jne loc_100084C1;");
    asm("loc_100084B0: lea 0x10(%esp),%eax;");
    asm("loc_100084B4: push %eax;");
    asm("loc_100084B5: call _sub_100083D0;");
    asm("loc_100084BA: mov 0x14(%esp),%ecx;");
    asm("loc_100084BE: add $4,%esp;");
    asm("loc_100084C1: shl $0x10,%ecx;");
    asm("loc_100084C4: add %ecx,%ebx;");
    asm("loc_100084C6: test %eax,%eax;");
    asm("loc_100084C8: jne loc_100084ED;");
    asm("loc_100084CA: lea 0x10(%esp),%ecx;");
    asm("loc_100084CE: push %ecx;");
    asm("loc_100084CF: call _sub_100083D0;");
    asm("loc_100084D4: add $4,%esp;");
    asm("loc_100084D7: test %eax,%eax;");
    asm("loc_100084D9: jne loc_100084ED;");
    asm("loc_100084DB: mov 0x10(%esp),%edx;");
    asm("loc_100084DF: pop %edi;");
    asm("loc_100084E0: shl $0x18,%edx;");
    asm("loc_100084E3: add %ebx,%edx;");
    asm("loc_100084E5: pop %esi;");
    asm("loc_100084E6: mov %edx,(%ebp);");
    asm("loc_100084E9: pop %ebp;");
    asm("loc_100084EA: pop %ebx;");
    asm("loc_100084EB: pop %ecx;");
    asm("loc_100084EC: ret;");
    asm("loc_100084ED: pop %edi;");
    asm("loc_100084EE: pop %esi;");
    asm("loc_100084EF: movl $0,(%ebp);");
    asm("loc_100084F6: pop %ebp;");
    asm("loc_100084F7: pop %ebx;");
    asm("loc_100084F8: pop %ecx;");
    asm("loc_100084F9: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008500() // _sub_10008500
{
    __DEBUG_ASM(10008500);
    // chunk 0x10008500 _sub_10008500
    asm("loc_10008500: push %esi;");
    asm("loc_10008501: mov %eax,%esi;");
    asm("loc_10008503: mov (%edx),%cl;");
    asm("loc_10008505: mov (%esi),%al;");
    asm("loc_10008507: inc %edx;");
    asm("loc_10008508: inc %esi;");
    asm("loc_10008509: cmp $0x61,%cl;");
    asm("loc_1000850C: jl loc_10008516;");
    asm("loc_1000850E: cmp $0x7A,%cl;");
    asm("loc_10008511: jg loc_10008516;");
    asm("loc_10008513: add $0xE0,%cl;");
    asm("loc_10008516: cmp $0x61,%al;");
    asm("loc_10008518: jl loc_10008520;");
    asm("loc_1000851A: cmp $0x7A,%al;");
    asm("loc_1000851C: jg loc_10008520;");
    asm("loc_1000851E: add $0xE0,%al;");
    asm("loc_10008520: test %cl,%cl;");
    asm("loc_10008522: je loc_10008535;");
    asm("loc_10008524: test %al,%al;");
    asm("loc_10008526: je loc_1000852E;");
    asm("loc_10008528: cmp %al,%cl;");
    asm("loc_1000852A: jl loc_1000853B;");
    asm("loc_1000852C: jle loc_10008503;");
    asm("loc_1000852E: mov $1,%eax;");
    asm("loc_10008533: pop %esi;");
    asm("loc_10008534: ret;");
    asm("loc_10008535: neg %al;");
    asm("loc_10008537: pop %esi;");
    asm("loc_10008538: sbb %eax,%eax;");
    asm("loc_1000853A: ret;");
    asm("loc_1000853B: or $0xFFFFFFFF,%eax;");
    asm("loc_1000853E: pop %esi;");
    asm("loc_1000853F: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008540() // _unzStringFileNameCompare
{
    __DEBUG_ASM(10008540);
    // chunk 0x10008540 _sub_10008540
    asm("loc_10008540: mov 0xC(%esp),%eax;");
    asm("loc_10008544: test %eax,%eax;");
    asm("loc_10008546: je loc_1000858C;");
    asm("loc_10008548: cmp $1,%eax;");
    asm("loc_1000854B: jne loc_1000858C;");
    asm("loc_1000854D: mov 4(%esp),%eax;");
    asm("loc_10008551: push %ebx;");
    asm("loc_10008552: push %esi;");
    asm("loc_10008553: mov 0x10(%esp),%esi;");
    asm("loc_10008557: mov (%eax),%dl;");
    asm("loc_10008559: mov (%esi),%bl;");
    asm("loc_1000855B: mov %dl,%cl;");
    asm("loc_1000855D: cmp %bl,%dl;");
    asm("loc_1000855F: jne loc_10008582;");
    asm("loc_10008561: test %cl,%cl;");
    asm("loc_10008563: je loc_1000857B;");
    asm("loc_10008565: mov 1(%eax),%dl;");
    asm("loc_10008568: mov 1(%esi),%bl;");
    asm("loc_1000856B: mov %dl,%cl;");
    asm("loc_1000856D: cmp %bl,%dl;");
    asm("loc_1000856F: jne loc_10008582;");
    asm("loc_10008571: add $2,%eax;");
    asm("loc_10008574: add $2,%esi;");
    asm("loc_10008577: test %cl,%cl;");
    asm("loc_10008579: jne loc_10008557;");
    asm("loc_1000857B: pop %esi;");
    asm("loc_1000857C: xor %eax,%eax;");
    asm("loc_1000857E: pop %ebx;");
    asm("loc_1000857F: ret $0xC;");
    asm("loc_10008582: sbb %eax,%eax;");
    asm("loc_10008584: pop %esi;");
    asm("loc_10008585: sbb $0xFFFFFFFF,%eax;");
    asm("loc_10008588: pop %ebx;");
    asm("loc_10008589: ret $0xC;");
    asm("loc_1000858C: mov 8(%esp),%eax;");
    asm("loc_10008590: mov 4(%esp),%edx;");
    asm("loc_10008594: call _sub_10008500;");
    asm("loc_10008599: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100085A0() // _sub_100085A0
{
    __DEBUG_ASM(100085A0);
    // chunk 0x100085A0 _sub_100085A0
    asm("loc_100085A0: sub $0x10,%esp;");
    asm("loc_100085A3: mov 0x1C(%ebx),%eax;");
    asm("loc_100085A6: push %ebp;");
    asm("loc_100085A7: push %esi;");
    asm("loc_100085A8: mov 0x1C(%esp),%esi;");
    asm("loc_100085AC: push $2;");
    asm("loc_100085AE: push $0;");
    asm("loc_100085B0: push %esi;");
    asm("loc_100085B1: mov $0xFFFF,%ebp;");
    asm("loc_100085B6: push %eax;");
    asm("loc_100085B7: mov %ebp,0x18(%esp);");
    asm("loc_100085BB: movl $0,0x20(%esp);");
    asm("loc_100085C3: calll *0x10(%ebx);");
    asm("loc_100085C6: test %eax,%eax;");
    asm("loc_100085C8: je loc_100085D2;");
    asm("loc_100085CA: pop %esi;");
    asm("loc_100085CB: xor %eax,%eax;");
    asm("loc_100085CD: pop %ebp;");
    asm("loc_100085CE: add $0x10,%esp;");
    asm("loc_100085D1: ret;");
    asm("loc_100085D2: mov 0x1C(%ebx),%ecx;");
    asm("loc_100085D5: push %edi;");
    asm("loc_100085D6: push %esi;");
    asm("loc_100085D7: push %ecx;");
    asm("loc_100085D8: calll *0xC(%ebx);");
    asm("loc_100085DB: mov %eax,%edi;");
    asm("loc_100085DD: cmp $0xFFFF,%edi;");
    asm("loc_100085E3: mov %edi,0x18(%esp);");
    asm("loc_100085E7: jae loc_100085EF;");
    asm("loc_100085E9: mov %edi,0xC(%esp);");
    asm("loc_100085ED: mov %eax,%ebp;");
    asm("loc_100085EF: push $0x404;");
    asm("loc_100085F4: call _sub_1000A46A;");
    asm("loc_100085F9: mov %eax,%esi;");
    asm("loc_100085FB: add $4,%esp;");
    asm("loc_100085FE: test %esi,%esi;");
    asm("loc_10008600: jne loc_10008609;");
    asm("loc_10008602: pop %edi;");
    asm("loc_10008603: pop %esi;");
    asm("loc_10008604: pop %ebp;");
    asm("loc_10008605: add $0x10,%esp;");
    asm("loc_10008608: ret;");
    asm("loc_10008609: mov $4,%eax;");
    asm("loc_1000860E: cmp %eax,%ebp;");
    asm("loc_10008610: jbe loc_100086BD;");
    asm("loc_10008616: jmp loc_10008624;");
    asm("loc_10008618: mov 0xC(%esp),%ebp;");
    asm("loc_1000861C: mov 0x18(%esp),%edi;");
    asm("loc_10008620: mov 0x10(%esp),%eax;");
    asm("loc_10008624: add $0x400,%eax;");
    asm("loc_10008629: cmp %ebp,%eax;");
    asm("loc_1000862B: mov %ebp,0x10(%esp);");
    asm("loc_1000862F: ja loc_10008635;");
    asm("loc_10008631: mov %eax,0x10(%esp);");
    asm("loc_10008635: mov 0x10(%esp),%eax;");
    asm("loc_10008639: mov %edi,%ebp;");
    asm("loc_1000863B: sub %eax,%ebp;");
    asm("loc_1000863D: mov %edi,%eax;");
    asm("loc_1000863F: sub %ebp,%eax;");
    asm("loc_10008641: cmp $0x404,%eax;");
    asm("loc_10008646: mov $0x404,%edi;");
    asm("loc_1000864B: ja loc_1000864F;");
    asm("loc_1000864D: mov %eax,%edi;");
    asm("loc_1000864F: mov 0x20(%esp),%edx;");
    asm("loc_10008653: mov 0x1C(%ebx),%eax;");
    asm("loc_10008656: push $0;");
    asm("loc_10008658: push %ebp;");
    asm("loc_10008659: push %edx;");
    asm("loc_1000865A: push %eax;");
    asm("loc_1000865B: calll *0x10(%ebx);");
    asm("loc_1000865E: test %eax,%eax;");
    asm("loc_10008660: jne loc_100086BD;");
    asm("loc_10008662: mov 0x20(%esp),%ecx;");
    asm("loc_10008666: mov 0x1C(%ebx),%edx;");
    asm("loc_10008669: push %edi;");
    asm("loc_1000866A: push %esi;");
    asm("loc_1000866B: push %ecx;");
    asm("loc_1000866C: push %edx;");
    asm("loc_1000866D: calll *4(%ebx);");
    asm("loc_10008670: cmp %edi,%eax;");
    asm("loc_10008672: jne loc_100086BD;");
    asm("loc_10008674: lea -3(%edi),%eax;");
    asm("loc_10008677: test %eax,%eax;");
    asm("loc_10008679: jle loc_100086AF;");
    asm("loc_1000867B: jmp loc_10008680;");
    asm("loc_1000867D: lea (%ecx),%ecx;");
    asm("loc_10008680: mov -1(%eax,%esi),%cl;");
    asm("loc_10008684: dec %eax;");
    asm("loc_10008685: cmp $0x50,%cl;");
    asm("loc_10008688: jne loc_1000869F;");
    asm("loc_1000868A: cmpb $0x4B,1(%eax,%esi);");
    asm("loc_1000868F: jne loc_1000869F;");
    asm("loc_10008691: cmpb $5,2(%eax,%esi);");
    asm("loc_10008696: jne loc_1000869F;");
    asm("loc_10008698: cmpb $6,3(%eax,%esi);");
    asm("loc_1000869D: je loc_100086A5;");
    asm("loc_1000869F: test %eax,%eax;");
    asm("loc_100086A1: jg loc_10008680;");
    asm("loc_100086A3: jmp loc_100086AF;");
    asm("loc_100086A5: add %ebp,%eax;");
    asm("loc_100086A7: test %eax,%eax;");
    asm("loc_100086A9: mov %eax,0x14(%esp);");
    asm("loc_100086AD: jne loc_100086BD;");
    asm("loc_100086AF: mov 0xC(%esp),%eax;");
    asm("loc_100086B3: cmp %eax,0x10(%esp);");
    asm("loc_100086B7: jb loc_10008618;");
    asm("loc_100086BD: push %esi;");
    asm("loc_100086BE: call _sub_1000A418;");
    asm("loc_100086C3: mov 0x18(%esp),%eax;");
    asm("loc_100086C7: add $4,%esp;");
    asm("loc_100086CA: pop %edi;");
    asm("loc_100086CB: pop %esi;");
    asm("loc_100086CC: pop %ebp;");
    asm("loc_100086CD: add $0x10,%esp;");
    asm("loc_100086D0: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100086E0() // _unzGetGlobalInfo
{
    __DEBUG_ASM(100086E0);
    // chunk 0x100086E0 _sub_100086E0
    asm("loc_100086E0: mov 4(%esp),%eax;");
    asm("loc_100086E4: test %eax,%eax;");
    asm("loc_100086E6: jne loc_100086F0;");
    asm("loc_100086E8: mov $0xFFFFFF9A,%eax;");
    asm("loc_100086ED: ret $8;");
    asm("loc_100086F0: mov 0x24(%eax),%edx;");
    asm("loc_100086F3: mov 8(%esp),%ecx;");
    asm("loc_100086F7: mov %edx,(%ecx);");
    asm("loc_100086F9: mov 0x28(%eax),%eax;");
    asm("loc_100086FC: mov %eax,4(%ecx);");
    asm("loc_100086FF: xor %eax,%eax;");
    asm("loc_10008701: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008710() // _sub_10008710
{
    __DEBUG_ASM(10008710);
    // chunk 0x10008710 _sub_10008710
    asm("loc_10008710: push %esi;");
    asm("loc_10008711: mov %ecx,%eax;");
    asm("loc_10008713: shr $0x10,%eax;");
    asm("loc_10008716: mov %eax,%esi;");
    asm("loc_10008718: and $0x1F,%esi;");
    asm("loc_1000871B: mov %esi,0xC(%edx);");
    asm("loc_1000871E: mov %eax,%esi;");
    asm("loc_10008720: shr $9,%eax;");
    asm("loc_10008723: and $0x7F,%eax;");
    asm("loc_10008726: add $0x7BC,%eax;");
    asm("loc_1000872B: mov %eax,0x14(%edx);");
    asm("loc_1000872E: mov %ecx,%eax;");
    asm("loc_10008730: shr $0xB,%eax;");
    asm("loc_10008733: and $0x1F,%eax;");
    asm("loc_10008736: shr $5,%esi;");
    asm("loc_10008739: mov %eax,8(%edx);");
    asm("loc_1000873C: mov %ecx,%eax;");
    asm("loc_1000873E: and $0xF,%esi;");
    asm("loc_10008741: dec %esi;");
    asm("loc_10008742: shr $5,%eax;");
    asm("loc_10008745: and $0x1F,%ecx;");
    asm("loc_10008748: and $0x3F,%eax;");
    asm("loc_1000874B: shl $1,%ecx;");
    asm("loc_1000874D: mov %esi,0x10(%edx);");
    asm("loc_10008750: mov %eax,4(%edx);");
    asm("loc_10008753: mov %ecx,(%edx);");
    asm("loc_10008755: pop %esi;");
    asm("loc_10008756: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008760() // _sub_10008760
{
    __DEBUG_ASM(10008760);
    // chunk 0x10008760 _sub_10008760
    asm("loc_10008760: sub $0x58,%esp;");
    asm("loc_10008763: push %ebp;");
    asm("loc_10008764: push %esi;");
    asm("loc_10008765: mov %eax,%esi;");
    asm("loc_10008767: xor %ebp,%ebp;");
    asm("loc_10008769: test %esi,%esi;");
    asm("loc_1000876B: jne loc_10008778;");
    asm("loc_1000876D: pop %esi;");
    asm("loc_1000876E: mov $0xFFFFFF9A,%eax;");
    asm("loc_10008773: pop %ebp;");
    asm("loc_10008774: add $0x58,%esp;");
    asm("loc_10008777: ret;");
    asm("loc_10008778: mov 0x2C(%esi),%edx;");
    asm("loc_1000877B: mov 0x34(%esi),%eax;");
    asm("loc_1000877E: mov 0x20(%esi),%ecx;");
    asm("loc_10008781: push $0;");
    asm("loc_10008783: add %edx,%eax;");
    asm("loc_10008785: mov 0x1C(%esi),%edx;");
    asm("loc_10008788: push %eax;");
    asm("loc_10008789: push %ecx;");
    asm("loc_1000878A: push %edx;");
    asm("loc_1000878B: calll *0x10(%esi);");
    asm("loc_1000878E: test %eax,%eax;");
    asm("loc_10008790: je loc_10008797;");
    asm("loc_10008792: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008795: jmp loc_100087C1;");
    asm("loc_10008797: lea 8(%esp),%eax;");
    asm("loc_1000879B: push %eax;");
    asm("loc_1000879C: mov 0x20(%esi),%eax;");
    asm("loc_1000879F: mov %esi,%ecx;");
    asm("loc_100087A1: call _sub_10008470;");
    asm("loc_100087A6: add $4,%esp;");
    asm("loc_100087A9: test %eax,%eax;");
    asm("loc_100087AB: je loc_100087B2;");
    asm("loc_100087AD: or $0xFFFFFFFF,%ebp;");
    asm("loc_100087B0: jmp loc_100087C1;");
    asm("loc_100087B2: cmpl $0x2014B50,8(%esp);");
    asm("loc_100087BA: je loc_100087C1;");
    asm("loc_100087BC: mov $0xFFFFFF99,%ebp;");
    asm("loc_100087C1: mov 0x20(%esi),%eax;");
    asm("loc_100087C4: lea 0x10(%esp),%ecx;");
    asm("loc_100087C8: push %ecx;");
    asm("loc_100087C9: mov %esi,%ecx;");
    asm("loc_100087CB: call _sub_10008410;");
    asm("loc_100087D0: add $4,%esp;");
    asm("loc_100087D3: test %eax,%eax;");
    asm("loc_100087D5: je loc_100087DA;");
    asm("loc_100087D7: or $0xFFFFFFFF,%ebp;");
    asm("loc_100087DA: mov 0x20(%esi),%eax;");
    asm("loc_100087DD: lea 0x14(%esp),%edx;");
    asm("loc_100087E1: push %edx;");
    asm("loc_100087E2: mov %esi,%ecx;");
    asm("loc_100087E4: call _sub_10008410;");
    asm("loc_100087E9: add $4,%esp;");
    asm("loc_100087EC: test %eax,%eax;");
    asm("loc_100087EE: je loc_100087F3;");
    asm("loc_100087F0: or $0xFFFFFFFF,%ebp;");
    asm("loc_100087F3: lea 0x18(%esp),%eax;");
    asm("loc_100087F7: push %eax;");
    asm("loc_100087F8: mov 0x20(%esi),%eax;");
    asm("loc_100087FB: mov %esi,%ecx;");
    asm("loc_100087FD: call _sub_10008410;");
    asm("loc_10008802: add $4,%esp;");
    asm("loc_10008805: test %eax,%eax;");
    asm("loc_10008807: je loc_1000880C;");
    asm("loc_10008809: or $0xFFFFFFFF,%ebp;");
    asm("loc_1000880C: mov 0x20(%esi),%eax;");
    asm("loc_1000880F: lea 0x1C(%esp),%ecx;");
    asm("loc_10008813: push %ecx;");
    asm("loc_10008814: mov %esi,%ecx;");
    asm("loc_10008816: call _sub_10008410;");
    asm("loc_1000881B: add $4,%esp;");
    asm("loc_1000881E: test %eax,%eax;");
    asm("loc_10008820: je loc_10008825;");
    asm("loc_10008822: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008825: mov 0x20(%esi),%eax;");
    asm("loc_10008828: lea 0x20(%esp),%edx;");
    asm("loc_1000882C: push %edx;");
    asm("loc_1000882D: mov %esi,%ecx;");
    asm("loc_1000882F: call _sub_10008470;");
    asm("loc_10008834: add $4,%esp;");
    asm("loc_10008837: test %eax,%eax;");
    asm("loc_10008839: je loc_1000883E;");
    asm("loc_1000883B: or $0xFFFFFFFF,%ebp;");
    asm("loc_1000883E: mov 0x20(%esp),%ecx;");
    asm("loc_10008842: lea 0x48(%esp),%edx;");
    asm("loc_10008846: call _sub_10008710;");
    asm("loc_1000884B: lea 0x24(%esp),%eax;");
    asm("loc_1000884F: push %eax;");
    asm("loc_10008850: mov 0x20(%esi),%eax;");
    asm("loc_10008853: mov %esi,%ecx;");
    asm("loc_10008855: call _sub_10008470;");
    asm("loc_1000885A: add $4,%esp;");
    asm("loc_1000885D: test %eax,%eax;");
    asm("loc_1000885F: je loc_10008864;");
    asm("loc_10008861: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008864: mov 0x20(%esi),%eax;");
    asm("loc_10008867: lea 0x28(%esp),%ecx;");
    asm("loc_1000886B: push %ecx;");
    asm("loc_1000886C: mov %esi,%ecx;");
    asm("loc_1000886E: call _sub_10008470;");
    asm("loc_10008873: add $4,%esp;");
    asm("loc_10008876: test %eax,%eax;");
    asm("loc_10008878: je loc_1000887D;");
    asm("loc_1000887A: or $0xFFFFFFFF,%ebp;");
    asm("loc_1000887D: mov 0x20(%esi),%eax;");
    asm("loc_10008880: lea 0x2C(%esp),%edx;");
    asm("loc_10008884: push %edx;");
    asm("loc_10008885: mov %esi,%ecx;");
    asm("loc_10008887: call _sub_10008470;");
    asm("loc_1000888C: add $4,%esp;");
    asm("loc_1000888F: test %eax,%eax;");
    asm("loc_10008891: je loc_10008896;");
    asm("loc_10008893: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008896: lea 0x30(%esp),%eax;");
    asm("loc_1000889A: push %eax;");
    asm("loc_1000889B: mov 0x20(%esi),%eax;");
    asm("loc_1000889E: mov %esi,%ecx;");
    asm("loc_100088A0: call _sub_10008410;");
    asm("loc_100088A5: add $4,%esp;");
    asm("loc_100088A8: test %eax,%eax;");
    asm("loc_100088AA: je loc_100088AF;");
    asm("loc_100088AC: or $0xFFFFFFFF,%ebp;");
    asm("loc_100088AF: mov 0x20(%esi),%eax;");
    asm("loc_100088B2: lea 0x34(%esp),%ecx;");
    asm("loc_100088B6: push %ecx;");
    asm("loc_100088B7: mov %esi,%ecx;");
    asm("loc_100088B9: call _sub_10008410;");
    asm("loc_100088BE: add $4,%esp;");
    asm("loc_100088C1: test %eax,%eax;");
    asm("loc_100088C3: je loc_100088C8;");
    asm("loc_100088C5: or $0xFFFFFFFF,%ebp;");
    asm("loc_100088C8: mov 0x20(%esi),%eax;");
    asm("loc_100088CB: lea 0x38(%esp),%edx;");
    asm("loc_100088CF: push %edx;");
    asm("loc_100088D0: mov %esi,%ecx;");
    asm("loc_100088D2: call _sub_10008410;");
    asm("loc_100088D7: add $4,%esp;");
    asm("loc_100088DA: test %eax,%eax;");
    asm("loc_100088DC: je loc_100088E1;");
    asm("loc_100088DE: or $0xFFFFFFFF,%ebp;");
    asm("loc_100088E1: lea 0x3C(%esp),%eax;");
    asm("loc_100088E5: push %eax;");
    asm("loc_100088E6: mov 0x20(%esi),%eax;");
    asm("loc_100088E9: mov %esi,%ecx;");
    asm("loc_100088EB: call _sub_10008410;");
    asm("loc_100088F0: add $4,%esp;");
    asm("loc_100088F3: test %eax,%eax;");
    asm("loc_100088F5: je loc_100088FA;");
    asm("loc_100088F7: or $0xFFFFFFFF,%ebp;");
    asm("loc_100088FA: mov 0x20(%esi),%eax;");
    asm("loc_100088FD: lea 0x40(%esp),%ecx;");
    asm("loc_10008901: push %ecx;");
    asm("loc_10008902: mov %esi,%ecx;");
    asm("loc_10008904: call _sub_10008410;");
    asm("loc_10008909: add $4,%esp;");
    asm("loc_1000890C: test %eax,%eax;");
    asm("loc_1000890E: je loc_10008913;");
    asm("loc_10008910: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008913: mov 0x20(%esi),%eax;");
    asm("loc_10008916: lea 0x44(%esp),%edx;");
    asm("loc_1000891A: push %edx;");
    asm("loc_1000891B: mov %esi,%ecx;");
    asm("loc_1000891D: call _sub_10008470;");
    asm("loc_10008922: add $4,%esp;");
    asm("loc_10008925: test %eax,%eax;");
    asm("loc_10008927: je loc_1000892C;");
    asm("loc_10008929: or $0xFFFFFFFF,%ebp;");
    asm("loc_1000892C: lea 0xC(%esp),%eax;");
    asm("loc_10008930: push %eax;");
    asm("loc_10008931: mov 0x20(%esi),%eax;");
    asm("loc_10008934: mov %esi,%ecx;");
    asm("loc_10008936: call _sub_10008470;");
    asm("loc_1000893B: add $4,%esp;");
    asm("loc_1000893E: test %eax,%eax;");
    asm("loc_10008940: je loc_10008945;");
    asm("loc_10008942: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008945: test %ebp,%ebp;");
    asm("loc_10008947: push %ebx;");
    asm("loc_10008948: mov 0x34(%esp),%ebx;");
    asm("loc_1000894C: push %edi;");
    asm("loc_1000894D: jne loc_10008A00;");
    asm("loc_10008953: mov 0x74(%esp),%eax;");
    asm("loc_10008957: test %eax,%eax;");
    asm("loc_10008959: je loc_1000898F;");
    asm("loc_1000895B: mov 0x78(%esp),%ecx;");
    asm("loc_1000895F: cmp %ecx,%ebx;");
    asm("loc_10008961: jae loc_1000896B;");
    asm("loc_10008963: movb $0,(%ebx,%eax);");
    asm("loc_10008967: mov %ebx,%edi;");
    asm("loc_10008969: jmp loc_1000896D;");
    asm("loc_1000896B: mov %ecx,%edi;");
    asm("loc_1000896D: test %ebx,%ebx;");
    asm("loc_1000896F: jbe loc_10008989;");
    asm("loc_10008971: test %ecx,%ecx;");
    asm("loc_10008973: jbe loc_10008989;");
    asm("loc_10008975: mov 0x20(%esi),%ecx;");
    asm("loc_10008978: mov 0x1C(%esi),%edx;");
    asm("loc_1000897B: push %edi;");
    asm("loc_1000897C: push %eax;");
    asm("loc_1000897D: push %ecx;");
    asm("loc_1000897E: push %edx;");
    asm("loc_1000897F: calll *4(%esi);");
    asm("loc_10008982: cmp %edi,%eax;");
    asm("loc_10008984: je loc_10008989;");
    asm("loc_10008986: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008989: sub %edi,%ebx;");
    asm("loc_1000898B: test %ebp,%ebp;");
    asm("loc_1000898D: jne loc_10008A00;");
    asm("loc_1000898F: mov 0x7C(%esp),%eax;");
    asm("loc_10008993: test %eax,%eax;");
    asm("loc_10008995: je loc_10008A00;");
    asm("loc_10008997: mov 0x3C(%esp),%edi;");
    asm("loc_1000899B: mov 0x80(%esp),%eax;");
    asm("loc_100089A2: cmp %eax,%edi;");
    asm("loc_100089A4: mov %edi,0x10(%esp);");
    asm("loc_100089A8: jb loc_100089AE;");
    asm("loc_100089AA: mov %eax,0x10(%esp);");
    asm("loc_100089AE: test %ebx,%ebx;");
    asm("loc_100089B0: je loc_100089CB;");
    asm("loc_100089B2: mov 0x20(%esi),%eax;");
    asm("loc_100089B5: mov 0x1C(%esi),%ecx;");
    asm("loc_100089B8: push $1;");
    asm("loc_100089BA: push %ebx;");
    asm("loc_100089BB: push %eax;");
    asm("loc_100089BC: push %ecx;");
    asm("loc_100089BD: calll *0x10(%esi);");
    asm("loc_100089C0: test %eax,%eax;");
    asm("loc_100089C2: jne loc_100089C8;");
    asm("loc_100089C4: xor %ebx,%ebx;");
    asm("loc_100089C6: jmp loc_100089CB;");
    asm("loc_100089C8: or $0xFFFFFFFF,%ebp;");
    asm("loc_100089CB: test %edi,%edi;");
    asm("loc_100089CD: jbe loc_100089F8;");
    asm("loc_100089CF: mov 0x80(%esp),%eax;");
    asm("loc_100089D6: test %eax,%eax;");
    asm("loc_100089D8: jbe loc_100089F8;");
    asm("loc_100089DA: mov 0x10(%esp),%edx;");
    asm("loc_100089DE: mov 0x7C(%esp),%eax;");
    asm("loc_100089E2: mov 0x20(%esi),%ecx;");
    asm("loc_100089E5: push %edx;");
    asm("loc_100089E6: mov 0x1C(%esi),%edx;");
    asm("loc_100089E9: push %eax;");
    asm("loc_100089EA: push %ecx;");
    asm("loc_100089EB: push %edx;");
    asm("loc_100089EC: calll *4(%esi);");
    asm("loc_100089EF: cmp 0x10(%esp),%eax;");
    asm("loc_100089F3: je loc_100089F8;");
    asm("loc_100089F5: or $0xFFFFFFFF,%ebp;");
    asm("loc_100089F8: sub 0x10(%esp),%edi;");
    asm("loc_100089FC: add %edi,%ebx;");
    asm("loc_100089FE: jmp loc_10008A04;");
    asm("loc_10008A00: add 0x3C(%esp),%ebx;");
    asm("loc_10008A04: test %ebp,%ebp;");
    asm("loc_10008A06: jne loc_10008AAC;");
    asm("loc_10008A0C: mov 0x84(%esp),%eax;");
    asm("loc_10008A13: test %eax,%eax;");
    asm("loc_10008A15: je loc_10008A8B;");
    asm("loc_10008A17: mov 0x40(%esp),%edi;");
    asm("loc_10008A1B: mov 0x88(%esp),%ecx;");
    asm("loc_10008A22: cmp %ecx,%edi;");
    asm("loc_10008A24: jae loc_10008A30;");
    asm("loc_10008A26: movb $0,(%edi,%eax);");
    asm("loc_10008A2A: mov %edi,0x10(%esp);");
    asm("loc_10008A2E: jmp loc_10008A34;");
    asm("loc_10008A30: mov %ecx,0x10(%esp);");
    asm("loc_10008A34: test %ebx,%ebx;");
    asm("loc_10008A36: je loc_10008A4D;");
    asm("loc_10008A38: mov 0x20(%esi),%eax;");
    asm("loc_10008A3B: mov 0x1C(%esi),%ecx;");
    asm("loc_10008A3E: push $1;");
    asm("loc_10008A40: push %ebx;");
    asm("loc_10008A41: push %eax;");
    asm("loc_10008A42: push %ecx;");
    asm("loc_10008A43: calll *0x10(%esi);");
    asm("loc_10008A46: test %eax,%eax;");
    asm("loc_10008A48: je loc_10008A4D;");
    asm("loc_10008A4A: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008A4D: test %edi,%edi;");
    asm("loc_10008A4F: jbe loc_10008A87;");
    asm("loc_10008A51: mov 0x88(%esp),%eax;");
    asm("loc_10008A58: test %eax,%eax;");
    asm("loc_10008A5A: jbe loc_10008A87;");
    asm("loc_10008A5C: mov 0x10(%esp),%edx;");
    asm("loc_10008A60: mov 0x84(%esp),%eax;");
    asm("loc_10008A67: mov 0x20(%esi),%ecx;");
    asm("loc_10008A6A: push %edx;");
    asm("loc_10008A6B: mov 0x1C(%esi),%edx;");
    asm("loc_10008A6E: push %eax;");
    asm("loc_10008A6F: push %ecx;");
    asm("loc_10008A70: push %edx;");
    asm("loc_10008A71: calll *4(%esi);");
    asm("loc_10008A74: cmp 0x10(%esp),%eax;");
    asm("loc_10008A78: je loc_10008A87;");
    asm("loc_10008A7A: pop %edi;");
    asm("loc_10008A7B: pop %ebx;");
    asm("loc_10008A7C: or $0xFFFFFFFF,%ebp;");
    asm("loc_10008A7F: pop %esi;");
    asm("loc_10008A80: mov %ebp,%eax;");
    asm("loc_10008A82: pop %ebp;");
    asm("loc_10008A83: add $0x58,%esp;");
    asm("loc_10008A86: ret;");
    asm("loc_10008A87: test %ebp,%ebp;");
    asm("loc_10008A89: jne loc_10008AAC;");
    asm("loc_10008A8B: mov 0x6C(%esp),%edi;");
    asm("loc_10008A8F: test %edi,%edi;");
    asm("loc_10008A91: je loc_10008A9E;");
    asm("loc_10008A93: mov $0x14,%ecx;");
    asm("loc_10008A98: lea 0x18(%esp),%esi;");
    asm("loc_10008A9C: rep movsl (%esi),(%edi);");
    asm("loc_10008A9E: mov 0x70(%esp),%eax;");
    asm("loc_10008AA2: test %eax,%eax;");
    asm("loc_10008AA4: je loc_10008AAC;");
    asm("loc_10008AA6: mov 0x14(%esp),%ecx;");
    asm("loc_10008AAA: mov %ecx,(%eax);");
    asm("loc_10008AAC: pop %edi;");
    asm("loc_10008AAD: pop %ebx;");
    asm("loc_10008AAE: pop %esi;");
    asm("loc_10008AAF: mov %ebp,%eax;");
    asm("loc_10008AB1: pop %ebp;");
    asm("loc_10008AB2: add $0x58,%esp;");
    asm("loc_10008AB5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008AC0() // _unzGetCurrentFileInfo
{
    __DEBUG_ASM(10008AC0);
    // chunk 0x10008AC0 _sub_10008AC0
    asm("loc_10008AC0: mov 0x20(%esp),%eax;");
    asm("loc_10008AC4: mov 0x1C(%esp),%ecx;");
    asm("loc_10008AC8: mov 0x18(%esp),%edx;");
    asm("loc_10008ACC: push %eax;");
    asm("loc_10008ACD: mov 0x18(%esp),%eax;");
    asm("loc_10008AD1: push %ecx;");
    asm("loc_10008AD2: mov 0x18(%esp),%ecx;");
    asm("loc_10008AD6: push %edx;");
    asm("loc_10008AD7: mov 0x18(%esp),%edx;");
    asm("loc_10008ADB: push %eax;");
    asm("loc_10008ADC: mov 0x18(%esp),%eax;");
    asm("loc_10008AE0: push %ecx;");
    asm("loc_10008AE1: push %edx;");
    asm("loc_10008AE2: push $0;");
    asm("loc_10008AE4: push %eax;");
    asm("loc_10008AE5: mov 0x24(%esp),%eax;");
    asm("loc_10008AE9: call _sub_10008760;");
    asm("loc_10008AEE: add $0x20,%esp;");
    asm("loc_10008AF1: ret $0x20;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008B00() // _unzGoToFirstFile
{
    __DEBUG_ASM(10008B00);
    // chunk 0x10008B00 _sub_10008B00
    asm("loc_10008B00: push %esi;");
    asm("loc_10008B01: mov 8(%esp),%esi;");
    asm("loc_10008B05: test %esi,%esi;");
    asm("loc_10008B07: jne loc_10008B12;");
    asm("loc_10008B09: mov $0xFFFFFF9A,%eax;");
    asm("loc_10008B0E: pop %esi;");
    asm("loc_10008B0F: ret $4;");
    asm("loc_10008B12: mov 0x44(%esi),%eax;");
    asm("loc_10008B15: push $0;");
    asm("loc_10008B17: push $0;");
    asm("loc_10008B19: push $0;");
    asm("loc_10008B1B: push $0;");
    asm("loc_10008B1D: push $0;");
    asm("loc_10008B1F: push $0;");
    asm("loc_10008B21: lea 0x98(%esi),%ecx;");
    asm("loc_10008B27: push %ecx;");
    asm("loc_10008B28: lea 0x48(%esi),%edx;");
    asm("loc_10008B2B: mov %eax,0x34(%esi);");
    asm("loc_10008B2E: push %edx;");
    asm("loc_10008B2F: mov %esi,%eax;");
    asm("loc_10008B31: movl $0,0x30(%esi);");
    asm("loc_10008B38: call _sub_10008760;");
    asm("loc_10008B3D: xor %ecx,%ecx;");
    asm("loc_10008B3F: add $0x20,%esp;");
    asm("loc_10008B42: test %eax,%eax;");
    asm("loc_10008B44: sete %cl;");
    asm("loc_10008B47: mov %ecx,0x38(%esi);");
    asm("loc_10008B4A: pop %esi;");
    asm("loc_10008B4B: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008B50() // _unzGoToNextFile
{
    __DEBUG_ASM(10008B50);
    // chunk 0x10008B50 _sub_10008B50
    asm("loc_10008B50: push %esi;");
    asm("loc_10008B51: mov 8(%esp),%esi;");
    asm("loc_10008B55: test %esi,%esi;");
    asm("loc_10008B57: jne loc_10008B62;");
    asm("loc_10008B59: mov $0xFFFFFF9A,%eax;");
    asm("loc_10008B5E: pop %esi;");
    asm("loc_10008B5F: ret $4;");
    asm("loc_10008B62: mov 0x38(%esi),%eax;");
    asm("loc_10008B65: test %eax,%eax;");
    asm("loc_10008B67: je loc_10008B74;");
    asm("loc_10008B69: mov 0x30(%esi),%eax;");
    asm("loc_10008B6C: mov 0x24(%esi),%ecx;");
    asm("loc_10008B6F: inc %eax;");
    asm("loc_10008B70: cmp %ecx,%eax;");
    asm("loc_10008B72: jne loc_10008B7D;");
    asm("loc_10008B74: mov $0xFFFFFF9C,%eax;");
    asm("loc_10008B79: pop %esi;");
    asm("loc_10008B7A: ret $4;");
    asm("loc_10008B7D: mov 0x6C(%esi),%edx;");
    asm("loc_10008B80: mov 0x70(%esi),%ecx;");
    asm("loc_10008B83: push $0;");
    asm("loc_10008B85: add %edx,%ecx;");
    asm("loc_10008B87: mov 0x68(%esi),%edx;");
    asm("loc_10008B8A: push $0;");
    asm("loc_10008B8C: push $0;");
    asm("loc_10008B8E: lea 0x2E(%ecx,%edx),%ecx;");
    asm("loc_10008B92: mov 0x34(%esi),%edx;");
    asm("loc_10008B95: push $0;");
    asm("loc_10008B97: add %ecx,%edx;");
    asm("loc_10008B99: push $0;");
    asm("loc_10008B9B: mov %edx,0x34(%esi);");
    asm("loc_10008B9E: mov %eax,0x30(%esi);");
    asm("loc_10008BA1: push $0;");
    asm("loc_10008BA3: lea 0x98(%esi),%edx;");
    asm("loc_10008BA9: push %edx;");
    asm("loc_10008BAA: lea 0x48(%esi),%eax;");
    asm("loc_10008BAD: push %eax;");
    asm("loc_10008BAE: mov %esi,%eax;");
    asm("loc_10008BB0: call _sub_10008760;");
    asm("loc_10008BB5: xor %ecx,%ecx;");
    asm("loc_10008BB7: add $0x20,%esp;");
    asm("loc_10008BBA: test %eax,%eax;");
    asm("loc_10008BBC: sete %cl;");
    asm("loc_10008BBF: mov %ecx,0x38(%esi);");
    asm("loc_10008BC2: pop %esi;");
    asm("loc_10008BC3: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008BD0() // _unzLocateFile
{
    __DEBUG_ASM(10008BD0);
    // chunk 0x10008BD0 _sub_10008BD0
    asm("loc_10008BD0: sub $0x108,%esp;");
    asm("loc_10008BD6: push %esi;");
    asm("loc_10008BD7: mov 0x110(%esp),%esi;");
    asm("loc_10008BDE: test %esi,%esi;");
    asm("loc_10008BE0: jne loc_10008BF1;");
    asm("loc_10008BE2: mov $0xFFFFFF9A,%eax;");
    asm("loc_10008BE7: pop %esi;");
    asm("loc_10008BE8: add $0x108,%esp;");
    asm("loc_10008BEE: ret $0xC;");
    asm("loc_10008BF1: push %ebx;");
    asm("loc_10008BF2: mov 0x118(%esp),%ebx;");
    asm("loc_10008BF9: push %ebp;");
    asm("loc_10008BFA: mov %ebx,%eax;");
    asm("loc_10008BFC: push %edi;");
    asm("loc_10008BFD: lea 1(%eax),%edx;");
    asm("loc_10008C00: mov (%eax),%cl;");
    asm("loc_10008C02: inc %eax;");
    asm("loc_10008C03: test %cl,%cl;");
    asm("loc_10008C05: jne loc_10008C00;");
    asm("loc_10008C07: sub %edx,%eax;");
    asm("loc_10008C09: cmp $0x100,%eax;");
    asm("loc_10008C0E: jb loc_10008C22;");
    asm("loc_10008C10: pop %edi;");
    asm("loc_10008C11: pop %ebp;");
    asm("loc_10008C12: pop %ebx;");
    asm("loc_10008C13: mov $0xFFFFFF9A,%eax;");
    asm("loc_10008C18: pop %esi;");
    asm("loc_10008C19: add $0x108,%esp;");
    asm("loc_10008C1F: ret $0xC;");
    asm("loc_10008C22: mov 0x38(%esi),%eax;");
    asm("loc_10008C25: test %eax,%eax;");
    asm("loc_10008C27: jne loc_10008C3B;");
    asm("loc_10008C29: pop %edi;");
    asm("loc_10008C2A: pop %ebp;");
    asm("loc_10008C2B: pop %ebx;");
    asm("loc_10008C2C: mov $0xFFFFFF9C,%eax;");
    asm("loc_10008C31: pop %esi;");
    asm("loc_10008C32: add $0x108,%esp;");
    asm("loc_10008C38: ret $0xC;");
    asm("loc_10008C3B: mov 0x34(%esi),%eax;");
    asm("loc_10008C3E: mov 0x30(%esi),%ebp;");
    asm("loc_10008C41: push %esi;");
    asm("loc_10008C42: mov %eax,0x14(%esp);");
    asm("loc_10008C46: call _sub_10008B00;");
    asm("loc_10008C4B: test %eax,%eax;");
    asm("loc_10008C4D: jne loc_10008C8A;");
    asm("loc_10008C4F: mov 0x124(%esp),%edi;");
    asm("loc_10008C56: push $0;");
    asm("loc_10008C58: push $0;");
    asm("loc_10008C5A: push $0;");
    asm("loc_10008C5C: push $0;");
    asm("loc_10008C5E: push $0x100;");
    asm("loc_10008C63: lea 0x28(%esp),%ecx;");
    asm("loc_10008C67: push %ecx;");
    asm("loc_10008C68: push $0;");
    asm("loc_10008C6A: push %esi;");
    asm("loc_10008C6B: call _sub_10008AC0;");
    asm("loc_10008C70: push %edi;");
    asm("loc_10008C71: push %ebx;");
    asm("loc_10008C72: lea 0x1C(%esp),%edx;");
    asm("loc_10008C76: push %edx;");
    asm("loc_10008C77: call _sub_10008540;");
    asm("loc_10008C7C: test %eax,%eax;");
    asm("loc_10008C7E: je loc_10008CA1;");
    asm("loc_10008C80: push %esi;");
    asm("loc_10008C81: call _sub_10008B50;");
    asm("loc_10008C86: test %eax,%eax;");
    asm("loc_10008C88: je loc_10008C56;");
    asm("loc_10008C8A: mov 0x10(%esp),%ecx;");
    asm("loc_10008C8E: pop %edi;");
    asm("loc_10008C8F: mov %ebp,0x30(%esi);");
    asm("loc_10008C92: pop %ebp;");
    asm("loc_10008C93: pop %ebx;");
    asm("loc_10008C94: mov %ecx,0x34(%esi);");
    asm("loc_10008C97: pop %esi;");
    asm("loc_10008C98: add $0x108,%esp;");
    asm("loc_10008C9E: ret $0xC;");
    asm("loc_10008CA1: pop %edi;");
    asm("loc_10008CA2: pop %ebp;");
    asm("loc_10008CA3: pop %ebx;");
    asm("loc_10008CA4: xor %eax,%eax;");
    asm("loc_10008CA6: pop %esi;");
    asm("loc_10008CA7: add $0x108,%esp;");
    asm("loc_10008CAD: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008CB0() // _sub_10008CB0
{
    __DEBUG_ASM(10008CB0);
    // chunk 0x10008CB0 _sub_10008CB0
    asm("loc_10008CB0: push %ecx;");
    asm("loc_10008CB1: mov 0xC(%esp),%eax;");
    asm("loc_10008CB5: mov 0x10(%esp),%ecx;");
    asm("loc_10008CB9: push %ebp;");
    asm("loc_10008CBA: mov 0xC(%esp),%ebp;");
    asm("loc_10008CBE: push %edi;");
    asm("loc_10008CBF: xor %edi,%edi;");
    asm("loc_10008CC1: mov %edi,(%ebp);");
    asm("loc_10008CC4: mov %edi,(%eax);");
    asm("loc_10008CC6: mov %edi,(%ecx);");
    asm("loc_10008CC8: mov 0x98(%esi),%ecx;");
    asm("loc_10008CCE: mov 0x2C(%esi),%edx;");
    asm("loc_10008CD1: mov 0x20(%esi),%eax;");
    asm("loc_10008CD4: push %edi;");
    asm("loc_10008CD5: add %ecx,%edx;");
    asm("loc_10008CD7: mov 0x1C(%esi),%ecx;");
    asm("loc_10008CDA: push %edx;");
    asm("loc_10008CDB: push %eax;");
    asm("loc_10008CDC: push %ecx;");
    asm("loc_10008CDD: calll *0x10(%esi);");
    asm("loc_10008CE0: test %eax,%eax;");
    asm("loc_10008CE2: je loc_10008CEB;");
    asm("loc_10008CE4: pop %edi;");
    asm("loc_10008CE5: or $0xFFFFFFFF,%eax;");
    asm("loc_10008CE8: pop %ebp;");
    asm("loc_10008CE9: pop %ecx;");
    asm("loc_10008CEA: ret;");
    asm("loc_10008CEB: mov 0x20(%esi),%eax;");
    asm("loc_10008CEE: lea 0x10(%esp),%edx;");
    asm("loc_10008CF2: push %edx;");
    asm("loc_10008CF3: mov %esi,%ecx;");
    asm("loc_10008CF5: call _sub_10008470;");
    asm("loc_10008CFA: add $4,%esp;");
    asm("loc_10008CFD: test %eax,%eax;");
    asm("loc_10008CFF: je loc_10008D06;");
    asm("loc_10008D01: or $0xFFFFFFFF,%edi;");
    asm("loc_10008D04: jmp loc_10008D15;");
    asm("loc_10008D06: cmpl $0x4034B50,0x10(%esp);");
    asm("loc_10008D0E: je loc_10008D15;");
    asm("loc_10008D10: mov $0xFFFFFF99,%edi;");
    asm("loc_10008D15: lea 0x10(%esp),%eax;");
    asm("loc_10008D19: push %eax;");
    asm("loc_10008D1A: mov 0x20(%esi),%eax;");
    asm("loc_10008D1D: mov %esi,%ecx;");
    asm("loc_10008D1F: call _sub_10008410;");
    asm("loc_10008D24: add $4,%esp;");
    asm("loc_10008D27: test %eax,%eax;");
    asm("loc_10008D29: je loc_10008D2E;");
    asm("loc_10008D2B: or $0xFFFFFFFF,%edi;");
    asm("loc_10008D2E: mov 0x20(%esi),%eax;");
    asm("loc_10008D31: lea 8(%esp),%ecx;");
    asm("loc_10008D35: push %ecx;");
    asm("loc_10008D36: mov %esi,%ecx;");
    asm("loc_10008D38: call _sub_10008410;");
    asm("loc_10008D3D: add $4,%esp;");
    asm("loc_10008D40: test %eax,%eax;");
    asm("loc_10008D42: je loc_10008D47;");
    asm("loc_10008D44: or $0xFFFFFFFF,%edi;");
    asm("loc_10008D47: mov 0x20(%esi),%eax;");
    asm("loc_10008D4A: lea 0x10(%esp),%edx;");
    asm("loc_10008D4E: push %edx;");
    asm("loc_10008D4F: mov %esi,%ecx;");
    asm("loc_10008D51: call _sub_10008410;");
    asm("loc_10008D56: add $4,%esp;");
    asm("loc_10008D59: test %eax,%eax;");
    asm("loc_10008D5B: je loc_10008D62;");
    asm("loc_10008D5D: or $0xFFFFFFFF,%edi;");
    asm("loc_10008D60: jmp loc_10008D7D;");
    asm("loc_10008D62: test %edi,%edi;");
    asm("loc_10008D64: jne loc_10008D7D;");
    asm("loc_10008D66: mov 0x54(%esi),%eax;");
    asm("loc_10008D69: cmp %eax,0x10(%esp);");
    asm("loc_10008D6D: jne loc_10008D78;");
    asm("loc_10008D6F: test %eax,%eax;");
    asm("loc_10008D71: je loc_10008D7D;");
    asm("loc_10008D73: cmp $8,%eax;");
    asm("loc_10008D76: je loc_10008D7D;");
    asm("loc_10008D78: mov $0xFFFFFF99,%edi;");
    asm("loc_10008D7D: lea 0x10(%esp),%eax;");
    asm("loc_10008D81: push %eax;");
    asm("loc_10008D82: mov 0x20(%esi),%eax;");
    asm("loc_10008D85: mov %esi,%ecx;");
    asm("loc_10008D87: call _sub_10008470;");
    asm("loc_10008D8C: add $4,%esp;");
    asm("loc_10008D8F: test %eax,%eax;");
    asm("loc_10008D91: je loc_10008D96;");
    asm("loc_10008D93: or $0xFFFFFFFF,%edi;");
    asm("loc_10008D96: mov 0x20(%esi),%eax;");
    asm("loc_10008D99: lea 0x10(%esp),%ecx;");
    asm("loc_10008D9D: push %ebx;");
    asm("loc_10008D9E: push %ecx;");
    asm("loc_10008D9F: mov %esi,%ecx;");
    asm("loc_10008DA1: call _sub_10008470;");
    asm("loc_10008DA6: mov 0x10(%esp),%bl;");
    asm("loc_10008DAA: add $4,%esp;");
    asm("loc_10008DAD: test %eax,%eax;");
    asm("loc_10008DAF: je loc_10008DB6;");
    asm("loc_10008DB1: or $0xFFFFFFFF,%edi;");
    asm("loc_10008DB4: jmp loc_10008DCD;");
    asm("loc_10008DB6: test %edi,%edi;");
    asm("loc_10008DB8: jne loc_10008DCD;");
    asm("loc_10008DBA: mov 0x14(%esp),%edx;");
    asm("loc_10008DBE: cmp 0x5C(%esi),%edx;");
    asm("loc_10008DC1: je loc_10008DCD;");
    asm("loc_10008DC3: test $8,%bl;");
    asm("loc_10008DC6: jne loc_10008DCD;");
    asm("loc_10008DC8: mov $0xFFFFFF99,%edi;");
    asm("loc_10008DCD: lea 0x14(%esp),%eax;");
    asm("loc_10008DD1: push %eax;");
    asm("loc_10008DD2: mov 0x20(%esi),%eax;");
    asm("loc_10008DD5: mov %esi,%ecx;");
    asm("loc_10008DD7: call _sub_10008470;");
    asm("loc_10008DDC: add $4,%esp;");
    asm("loc_10008DDF: test %eax,%eax;");
    asm("loc_10008DE1: je loc_10008DE8;");
    asm("loc_10008DE3: or $0xFFFFFFFF,%edi;");
    asm("loc_10008DE6: jmp loc_10008DFF;");
    asm("loc_10008DE8: test %edi,%edi;");
    asm("loc_10008DEA: jne loc_10008DFF;");
    asm("loc_10008DEC: mov 0x14(%esp),%ecx;");
    asm("loc_10008DF0: cmp 0x60(%esi),%ecx;");
    asm("loc_10008DF3: je loc_10008DFF;");
    asm("loc_10008DF5: test $8,%bl;");
    asm("loc_10008DF8: jne loc_10008DFF;");
    asm("loc_10008DFA: mov $0xFFFFFF99,%edi;");
    asm("loc_10008DFF: mov 0x20(%esi),%eax;");
    asm("loc_10008E02: lea 0x14(%esp),%edx;");
    asm("loc_10008E06: push %edx;");
    asm("loc_10008E07: mov %esi,%ecx;");
    asm("loc_10008E09: call _sub_10008470;");
    asm("loc_10008E0E: add $4,%esp;");
    asm("loc_10008E11: test %eax,%eax;");
    asm("loc_10008E13: je loc_10008E1A;");
    asm("loc_10008E15: or $0xFFFFFFFF,%edi;");
    asm("loc_10008E18: jmp loc_10008E31;");
    asm("loc_10008E1A: test %edi,%edi;");
    asm("loc_10008E1C: jne loc_10008E31;");
    asm("loc_10008E1E: mov 0x14(%esp),%eax;");
    asm("loc_10008E22: cmp 0x64(%esi),%eax;");
    asm("loc_10008E25: je loc_10008E31;");
    asm("loc_10008E27: test $8,%bl;");
    asm("loc_10008E2A: jne loc_10008E31;");
    asm("loc_10008E2C: mov $0xFFFFFF99,%edi;");
    asm("loc_10008E31: mov 0x20(%esi),%eax;");
    asm("loc_10008E34: lea 0x14(%esp),%ecx;");
    asm("loc_10008E38: push %ecx;");
    asm("loc_10008E39: mov %esi,%ecx;");
    asm("loc_10008E3B: call _sub_10008410;");
    asm("loc_10008E40: mov 0x18(%esp),%ebx;");
    asm("loc_10008E44: add $4,%esp;");
    asm("loc_10008E47: test %eax,%eax;");
    asm("loc_10008E49: je loc_10008E50;");
    asm("loc_10008E4B: or $0xFFFFFFFF,%edi;");
    asm("loc_10008E4E: jmp loc_10008E5E;");
    asm("loc_10008E50: test %edi,%edi;");
    asm("loc_10008E52: jne loc_10008E5E;");
    asm("loc_10008E54: cmp 0x68(%esi),%ebx;");
    asm("loc_10008E57: je loc_10008E5E;");
    asm("loc_10008E59: mov $0xFFFFFF99,%edi;");
    asm("loc_10008E5E: add %ebx,(%ebp);");
    asm("loc_10008E61: mov 0x20(%esi),%eax;");
    asm("loc_10008E64: lea 0x14(%esp),%edx;");
    asm("loc_10008E68: push %edx;");
    asm("loc_10008E69: mov %esi,%ecx;");
    asm("loc_10008E6B: call _sub_10008410;");
    asm("loc_10008E70: add $4,%esp;");
    asm("loc_10008E73: test %eax,%eax;");
    asm("loc_10008E75: je loc_10008E7A;");
    asm("loc_10008E77: or $0xFFFFFFFF,%edi;");
    asm("loc_10008E7A: mov 0x98(%esi),%eax;");
    asm("loc_10008E80: mov 0x18(%esp),%edx;");
    asm("loc_10008E84: lea 0x1E(%ebx,%eax),%ecx;");
    asm("loc_10008E88: mov 0x14(%esp),%eax;");
    asm("loc_10008E8C: mov %ecx,(%edx);");
    asm("loc_10008E8E: mov 0x1C(%esp),%ecx;");
    asm("loc_10008E92: mov %eax,(%ecx);");
    asm("loc_10008E94: mov (%ebp),%ecx;");
    asm("loc_10008E97: add %eax,%ecx;");
    asm("loc_10008E99: pop %ebx;");
    asm("loc_10008E9A: mov %edi,%eax;");
    asm("loc_10008E9C: pop %edi;");
    asm("loc_10008E9D: mov %ecx,(%ebp);");
    asm("loc_10008EA0: pop %ebp;");
    asm("loc_10008EA1: pop %ecx;");
    asm("loc_10008EA2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10008EB0() // _unzReadCurrentFile
{
    __DEBUG_ASM(10008EB0);
    // chunk 0x10008EB0 _sub_10008EB0
    asm("loc_10008EB0: push %ecx;");
    asm("loc_10008EB1: mov 8(%esp),%eax;");
    asm("loc_10008EB5: test %eax,%eax;");
    asm("loc_10008EB7: movl $0,(%esp);");
    asm("loc_10008EBF: jne loc_10008ECA;");
    asm("loc_10008EC1: mov $0xFFFFFF9A,%eax;");
    asm("loc_10008EC6: pop %ecx;");
    asm("loc_10008EC7: ret $0xC;");
    asm("loc_10008ECA: push %ebx;");
    asm("loc_10008ECB: push %ebp;");
    asm("loc_10008ECC: push %esi;");
    asm("loc_10008ECD: mov 0x9C(%eax),%esi;");
    asm("loc_10008ED3: test %esi,%esi;");
    asm("loc_10008ED5: push %edi;");
    asm("loc_10008ED6: jne loc_10008EE5;");
    asm("loc_10008ED8: pop %edi;");
    asm("loc_10008ED9: pop %esi;");
    asm("loc_10008EDA: pop %ebp;");
    asm("loc_10008EDB: mov $0xFFFFFF9A,%eax;");
    asm("loc_10008EE0: pop %ebx;");
    asm("loc_10008EE1: pop %ecx;");
    asm("loc_10008EE2: ret $0xC;");
    asm("loc_10008EE5: cmpl $0,(%esi);");
    asm("loc_10008EE8: jne loc_10008EF7;");
    asm("loc_10008EEA: pop %edi;");
    asm("loc_10008EEB: pop %esi;");
    asm("loc_10008EEC: pop %ebp;");
    asm("loc_10008EED: mov $0xFFFFFF9C,%eax;");
    asm("loc_10008EF2: pop %ebx;");
    asm("loc_10008EF3: pop %ecx;");
    asm("loc_10008EF4: ret $0xC;");
    asm("loc_10008EF7: mov 0x20(%esp),%ecx;");
    asm("loc_10008EFB: test %ecx,%ecx;");
    asm("loc_10008EFD: jne loc_10008F09;");
    asm("loc_10008EFF: pop %edi;");
    asm("loc_10008F00: pop %esi;");
    asm("loc_10008F01: pop %ebp;");
    asm("loc_10008F02: xor %eax,%eax;");
    asm("loc_10008F04: pop %ebx;");
    asm("loc_10008F05: pop %ecx;");
    asm("loc_10008F06: ret $0xC;");
    asm("loc_10008F09: mov 0x1C(%esp),%eax;");
    asm("loc_10008F0D: mov %eax,0x10(%esi);");
    asm("loc_10008F10: mov 0x5C(%esi),%eax;");
    asm("loc_10008F13: cmp %eax,%ecx;");
    asm("loc_10008F15: mov %ecx,0x14(%esi);");
    asm("loc_10008F18: jbe loc_10008F1D;");
    asm("loc_10008F1A: mov %eax,0x14(%esi);");
    asm("loc_10008F1D: mov 0x14(%esi),%eax;");
    asm("loc_10008F20: test %eax,%eax;");
    asm("loc_10008F22: jbe loc_1000908A;");
    asm("loc_10008F28: mov 8(%esi),%eax;");
    asm("loc_10008F2B: test %eax,%eax;");
    asm("loc_10008F2D: jne loc_10008F97;");
    asm("loc_10008F2F: mov 0x58(%esi),%eax;");
    asm("loc_10008F32: test %eax,%eax;");
    asm("loc_10008F34: jbe loc_10008F97;");
    asm("loc_10008F36: mov $0x4000,%edi;");
    asm("loc_10008F3B: cmp %edi,%eax;");
    asm("loc_10008F3D: jae loc_10008F41;");
    asm("loc_10008F3F: mov %eax,%edi;");
    asm("loc_10008F41: mov 0x3C(%esi),%eax;");
    asm("loc_10008F44: mov 0x88(%esi),%ecx;");
    asm("loc_10008F4A: mov 0x80(%esi),%edx;");
    asm("loc_10008F50: push $0;");
    asm("loc_10008F52: add %eax,%ecx;");
    asm("loc_10008F54: mov 0x7C(%esi),%eax;");
    asm("loc_10008F57: push %ecx;");
    asm("loc_10008F58: push %edx;");
    asm("loc_10008F59: push %eax;");
    asm("loc_10008F5A: calll *0x70(%esi);");
    asm("loc_10008F5D: test %eax,%eax;");
    asm("loc_10008F5F: jne loc_10009096;");
    asm("loc_10008F65: mov (%esi),%ecx;");
    asm("loc_10008F67: mov 0x80(%esi),%edx;");
    asm("loc_10008F6D: mov 0x7C(%esi),%eax;");
    asm("loc_10008F70: push %edi;");
    asm("loc_10008F71: push %ecx;");
    asm("loc_10008F72: push %edx;");
    asm("loc_10008F73: push %eax;");
    asm("loc_10008F74: calll *0x64(%esi);");
    asm("loc_10008F77: cmp %edi,%eax;");
    asm("loc_10008F79: jne loc_10009096;");
    asm("loc_10008F7F: mov 0x3C(%esi),%ecx;");
    asm("loc_10008F82: mov 0x58(%esi),%eax;");
    asm("loc_10008F85: add %edi,%ecx;");
    asm("loc_10008F87: mov %ecx,0x3C(%esi);");
    asm("loc_10008F8A: mov (%esi),%ecx;");
    asm("loc_10008F8C: sub %edi,%eax;");
    asm("loc_10008F8E: mov %eax,0x58(%esi);");
    asm("loc_10008F91: mov %ecx,4(%esi);");
    asm("loc_10008F94: mov %edi,8(%esi);");
    asm("loc_10008F97: mov 0x84(%esi),%eax;");
    asm("loc_10008F9D: test %eax,%eax;");
    asm("loc_10008F9F: je loc_10009006;");
    asm("loc_10008FA1: mov 0x8C(%esi),%eax;");
    asm("loc_10008FA7: test %eax,%eax;");
    asm("loc_10008FA9: jne loc_10009006;");
    asm("loc_10008FAB: mov 0x10(%esi),%edx;");
    asm("loc_10008FAE: mov 0x18(%esi),%ebp;");
    asm("loc_10008FB1: push $2;");
    asm("loc_10008FB3: lea 4(%esi),%eax;");
    asm("loc_10008FB6: push %eax;");
    asm("loc_10008FB7: mov %edx,0x20(%esp);");
    asm("loc_10008FBB: call _sub_10005A00;");
    asm("loc_10008FC0: mov 0x18(%esi),%edi;");
    asm("loc_10008FC3: mov 0x18(%esp),%ecx;");
    asm("loc_10008FC7: mov 0x50(%esi),%edx;");
    asm("loc_10008FCA: sub %ebp,%edi;");
    asm("loc_10008FCC: push %edi;");
    asm("loc_10008FCD: push %ecx;");
    asm("loc_10008FCE: push %edx;");
    asm("loc_10008FCF: mov %eax,%ebx;");
    asm("loc_10008FD1: call _sub_10001A80;");
    asm("loc_10008FD6: mov 0x5C(%esi),%edx;");
    asm("loc_10008FD9: mov 0x10(%esp),%ecx;");
    asm("loc_10008FDD: sub %edi,%edx;");
    asm("loc_10008FDF: add %edi,%ecx;");
    asm("loc_10008FE1: cmp $1,%ebx;");
    asm("loc_10008FE4: mov %eax,0x50(%esi);");
    asm("loc_10008FE7: mov %edx,0x5C(%esi);");
    asm("loc_10008FEA: mov %ecx,0x10(%esp);");
    asm("loc_10008FEE: je loc_1000908A;");
    asm("loc_10008FF4: test %ebx,%ebx;");
    asm("loc_10008FF6: je loc_1000907F;");
    asm("loc_10008FFC: pop %edi;");
    asm("loc_10008FFD: pop %esi;");
    asm("loc_10008FFE: pop %ebp;");
    asm("loc_10008FFF: mov %ebx,%eax;");
    asm("loc_10009001: pop %ebx;");
    asm("loc_10009002: pop %ecx;");
    asm("loc_10009003: ret $0xC;");
    asm("loc_10009006: mov 8(%esi),%eax;");
    asm("loc_10009009: test %eax,%eax;");
    asm("loc_1000900B: jne loc_10009014;");
    asm("loc_1000900D: mov 0x58(%esi),%ecx;");
    asm("loc_10009010: test %ecx,%ecx;");
    asm("loc_10009012: je loc_1000908A;");
    asm("loc_10009014: mov 0x14(%esi),%edi;");
    asm("loc_10009017: cmp %eax,%edi;");
    asm("loc_10009019: jb loc_1000901D;");
    asm("loc_1000901B: mov %eax,%edi;");
    asm("loc_1000901D: xor %eax,%eax;");
    asm("loc_1000901F: test %edi,%edi;");
    asm("loc_10009021: jbe loc_10009034;");
    asm("loc_10009023: mov 4(%esi),%ecx;");
    asm("loc_10009026: mov (%eax,%ecx),%cl;");
    asm("loc_10009029: mov 0x10(%esi),%edx;");
    asm("loc_1000902C: mov %cl,(%eax,%edx);");
    asm("loc_1000902F: inc %eax;");
    asm("loc_10009030: cmp %edi,%eax;");
    asm("loc_10009032: jb loc_10009023;");
    asm("loc_10009034: mov 0x10(%esi),%edx;");
    asm("loc_10009037: mov 0x50(%esi),%eax;");
    asm("loc_1000903A: push %edi;");
    asm("loc_1000903B: push %edx;");
    asm("loc_1000903C: push %eax;");
    asm("loc_1000903D: call _sub_10001A80;");
    asm("loc_10009042: mov 0x5C(%esi),%ecx;");
    asm("loc_10009045: mov 0x14(%esi),%ebp;");
    asm("loc_10009048: mov 0x10(%esi),%ebx;");
    asm("loc_1000904B: mov 4(%esi),%edx;");
    asm("loc_1000904E: mov %eax,0x50(%esi);");
    asm("loc_10009051: mov 8(%esi),%eax;");
    asm("loc_10009054: sub %edi,%ecx;");
    asm("loc_10009056: sub %edi,%eax;");
    asm("loc_10009058: mov %ecx,0x5C(%esi);");
    asm("loc_1000905B: mov 0x18(%esi),%ecx;");
    asm("loc_1000905E: mov %eax,8(%esi);");
    asm("loc_10009061: mov 0x10(%esp),%eax;");
    asm("loc_10009065: sub %edi,%ebp;");
    asm("loc_10009067: add %edi,%ebx;");
    asm("loc_10009069: add %edi,%edx;");
    asm("loc_1000906B: add %edi,%ecx;");
    asm("loc_1000906D: add %edi,%eax;");
    asm("loc_1000906F: mov %ebp,0x14(%esi);");
    asm("loc_10009072: mov %ebx,0x10(%esi);");
    asm("loc_10009075: mov %edx,4(%esi);");
    asm("loc_10009078: mov %ecx,0x18(%esi);");
    asm("loc_1000907B: mov %eax,0x10(%esp);");
    asm("loc_1000907F: mov 0x14(%esi),%eax;");
    asm("loc_10009082: test %eax,%eax;");
    asm("loc_10009084: ja loc_10008F28;");
    asm("loc_1000908A: mov 0x10(%esp),%eax;");
    asm("loc_1000908E: pop %edi;");
    asm("loc_1000908F: pop %esi;");
    asm("loc_10009090: pop %ebp;");
    asm("loc_10009091: pop %ebx;");
    asm("loc_10009092: pop %ecx;");
    asm("loc_10009093: ret $0xC;");
    asm("loc_10009096: pop %edi;");
    asm("loc_10009097: pop %esi;");
    asm("loc_10009098: pop %ebp;");
    asm("loc_10009099: or $0xFFFFFFFF,%eax;");
    asm("loc_1000909C: pop %ebx;");
    asm("loc_1000909D: pop %ecx;");
    asm("loc_1000909E: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100090B0() // _unztell
{
    __DEBUG_ASM(100090B0);
    // chunk 0x100090B0 _sub_100090B0
    asm("loc_100090B0: mov 4(%esp),%eax;");
    asm("loc_100090B4: test %eax,%eax;");
    asm("loc_100090B6: je loc_100090C2;");
    asm("loc_100090B8: mov 0x9C(%eax),%eax;");
    asm("loc_100090BE: test %eax,%eax;");
    asm("loc_100090C0: jne loc_100090CA;");
    asm("loc_100090C2: mov $0xFFFFFF9A,%eax;");
    asm("loc_100090C7: ret $4;");
    asm("loc_100090CA: mov 0x18(%eax),%eax;");
    asm("loc_100090CD: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100090D0() // _unzeof
{
    __DEBUG_ASM(100090D0);
    // chunk 0x100090D0 _sub_100090D0
    asm("loc_100090D0: mov 4(%esp),%eax;");
    asm("loc_100090D4: test %eax,%eax;");
    asm("loc_100090D6: je loc_100090E2;");
    asm("loc_100090D8: mov 0x9C(%eax),%eax;");
    asm("loc_100090DE: test %eax,%eax;");
    asm("loc_100090E0: jne loc_100090EA;");
    asm("loc_100090E2: mov $0xFFFFFF9A,%eax;");
    asm("loc_100090E7: ret $4;");
    asm("loc_100090EA: mov 0x5C(%eax),%edx;");
    asm("loc_100090ED: xor %ecx,%ecx;");
    asm("loc_100090EF: test %edx,%edx;");
    asm("loc_100090F1: sete %cl;");
    asm("loc_100090F4: mov %ecx,%eax;");
    asm("loc_100090F6: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009100() // _unzGetLocalExtrafield
{
    __DEBUG_ASM(10009100);
    // chunk 0x10009100 _sub_10009100
    asm("loc_10009100: mov 4(%esp),%eax;");
    asm("loc_10009104: test %eax,%eax;");
    asm("loc_10009106: jne loc_10009110;");
    asm("loc_10009108: mov $0xFFFFFF9A,%eax;");
    asm("loc_1000910D: ret $0xC;");
    asm("loc_10009110: push %ebx;");
    asm("loc_10009111: push %ebp;");
    asm("loc_10009112: push %esi;");
    asm("loc_10009113: mov 0x9C(%eax),%esi;");
    asm("loc_10009119: test %esi,%esi;");
    asm("loc_1000911B: push %edi;");
    asm("loc_1000911C: jne loc_1000912A;");
    asm("loc_1000911E: pop %edi;");
    asm("loc_1000911F: pop %esi;");
    asm("loc_10009120: pop %ebp;");
    asm("loc_10009121: mov $0xFFFFFF9A,%eax;");
    asm("loc_10009126: pop %ebx;");
    asm("loc_10009127: ret $0xC;");
    asm("loc_1000912A: mov 0x4C(%esi),%eax;");
    asm("loc_1000912D: mov 0x48(%esi),%edi;");
    asm("loc_10009130: mov 0x18(%esp),%ebp;");
    asm("loc_10009134: sub %eax,%edi;");
    asm("loc_10009136: test %ebp,%ebp;");
    asm("loc_10009138: jne loc_10009143;");
    asm("loc_1000913A: mov %edi,%eax;");
    asm("loc_1000913C: pop %edi;");
    asm("loc_1000913D: pop %esi;");
    asm("loc_1000913E: pop %ebp;");
    asm("loc_1000913F: pop %ebx;");
    asm("loc_10009140: ret $0xC;");
    asm("loc_10009143: mov 0x1C(%esp),%ebx;");
    asm("loc_10009147: cmp %edi,%ebx;");
    asm("loc_10009149: jbe loc_1000914D;");
    asm("loc_1000914B: mov %edi,%ebx;");
    asm("loc_1000914D: test %ebx,%ebx;");
    asm("loc_1000914F: jne loc_1000915A;");
    asm("loc_10009151: pop %edi;");
    asm("loc_10009152: pop %esi;");
    asm("loc_10009153: pop %ebp;");
    asm("loc_10009154: xor %eax,%eax;");
    asm("loc_10009156: pop %ebx;");
    asm("loc_10009157: ret $0xC;");
    asm("loc_1000915A: mov 0x44(%esi),%ecx;");
    asm("loc_1000915D: mov 0x80(%esi),%edx;");
    asm("loc_10009163: push $0;");
    asm("loc_10009165: add %eax,%ecx;");
    asm("loc_10009167: mov 0x7C(%esi),%eax;");
    asm("loc_1000916A: push %ecx;");
    asm("loc_1000916B: push %edx;");
    asm("loc_1000916C: push %eax;");
    asm("loc_1000916D: calll *0x70(%esi);");
    asm("loc_10009170: test %eax,%eax;");
    asm("loc_10009172: je loc_1000917E;");
    asm("loc_10009174: pop %edi;");
    asm("loc_10009175: pop %esi;");
    asm("loc_10009176: pop %ebp;");
    asm("loc_10009177: or $0xFFFFFFFF,%eax;");
    asm("loc_1000917A: pop %ebx;");
    asm("loc_1000917B: ret $0xC;");
    asm("loc_1000917E: mov 0x80(%esi),%ecx;");
    asm("loc_10009184: mov 0x7C(%esi),%edx;");
    asm("loc_10009187: push %edi;");
    asm("loc_10009188: push %ebp;");
    asm("loc_10009189: push %ecx;");
    asm("loc_1000918A: push %edx;");
    asm("loc_1000918B: calll *0x64(%esi);");
    asm("loc_1000918E: cmp %edi,%eax;");
    asm("loc_10009190: jne loc_10009174;");
    asm("loc_10009192: pop %edi;");
    asm("loc_10009193: pop %esi;");
    asm("loc_10009194: pop %ebp;");
    asm("loc_10009195: mov %ebx,%eax;");
    asm("loc_10009197: pop %ebx;");
    asm("loc_10009198: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100091A0() // _unzCloseCurrentFile
{
    __DEBUG_ASM(100091A0);
    // chunk 0x100091A0 _sub_100091A0
    asm("loc_100091A0: push %ebp;");
    asm("loc_100091A1: push %edi;");
    asm("loc_100091A2: mov 0xC(%esp),%edi;");
    asm("loc_100091A6: xor %ebp,%ebp;");
    asm("loc_100091A8: test %edi,%edi;");
    asm("loc_100091AA: jne loc_100091B6;");
    asm("loc_100091AC: pop %edi;");
    asm("loc_100091AD: mov $0xFFFFFF9A,%eax;");
    asm("loc_100091B2: pop %ebp;");
    asm("loc_100091B3: ret $4;");
    asm("loc_100091B6: push %esi;");
    asm("loc_100091B7: mov 0x9C(%edi),%esi;");
    asm("loc_100091BD: test %esi,%esi;");
    asm("loc_100091BF: jne loc_100091CC;");
    asm("loc_100091C1: pop %esi;");
    asm("loc_100091C2: pop %edi;");
    asm("loc_100091C3: mov $0xFFFFFF9A,%eax;");
    asm("loc_100091C8: pop %ebp;");
    asm("loc_100091C9: ret $4;");
    asm("loc_100091CC: mov 0x5C(%esi),%eax;");
    asm("loc_100091CF: test %eax,%eax;");
    asm("loc_100091D1: jne loc_100091EA;");
    asm("loc_100091D3: mov 0x8C(%esi),%eax;");
    asm("loc_100091D9: test %eax,%eax;");
    asm("loc_100091DB: jne loc_100091EA;");
    asm("loc_100091DD: mov 0x50(%esi),%eax;");
    asm("loc_100091E0: cmp 0x54(%esi),%eax;");
    asm("loc_100091E3: je loc_100091EA;");
    asm("loc_100091E5: mov $0xFFFFFF97,%ebp;");
    asm("loc_100091EA: mov (%esi),%eax;");
    asm("loc_100091EC: test %eax,%eax;");
    asm("loc_100091EE: je loc_100091F9;");
    asm("loc_100091F0: push %eax;");
    asm("loc_100091F1: call _sub_1000A418;");
    asm("loc_100091F6: add $4,%esp;");
    asm("loc_100091F9: mov 0x40(%esi),%eax;");
    asm("loc_100091FC: test %eax,%eax;");
    asm("loc_100091FE: movl $0,(%esi);");
    asm("loc_10009204: je loc_1000920F;");
    asm("loc_10009206: lea 4(%esi),%ecx;");
    asm("loc_10009209: push %ecx;");
    asm("loc_1000920A: call _sub_10005890;");
    asm("loc_1000920F: push %esi;");
    asm("loc_10009210: movl $0,0x40(%esi);");
    asm("loc_10009217: call _sub_1000A418;");
    asm("loc_1000921C: add $4,%esp;");
    asm("loc_1000921F: pop %esi;");
    asm("loc_10009220: movl $0,0x9C(%edi);");
    asm("loc_1000922A: pop %edi;");
    asm("loc_1000922B: mov %ebp,%eax;");
    asm("loc_1000922D: pop %ebp;");
    asm("loc_1000922E: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009240() // _unzGetGlobalComment
{
    __DEBUG_ASM(10009240);
    // chunk 0x10009240 _sub_10009240
    asm("loc_10009240: push %esi;");
    asm("loc_10009241: mov 8(%esp),%esi;");
    asm("loc_10009245: test %esi,%esi;");
    asm("loc_10009247: jne loc_10009252;");
    asm("loc_10009249: mov $0xFFFFFF9A,%eax;");
    asm("loc_1000924E: pop %esi;");
    asm("loc_1000924F: ret $0xC;");
    asm("loc_10009252: mov 0x28(%esi),%eax;");
    asm("loc_10009255: push %ebx;");
    asm("loc_10009256: push %ebp;");
    asm("loc_10009257: mov 0x18(%esp),%ebp;");
    asm("loc_1000925B: cmp %eax,%ebp;");
    asm("loc_1000925D: push %edi;");
    asm("loc_1000925E: mov %ebp,%edi;");
    asm("loc_10009260: jbe loc_10009264;");
    asm("loc_10009262: mov %eax,%edi;");
    asm("loc_10009264: mov 0x3C(%esi),%eax;");
    asm("loc_10009267: mov 0x20(%esi),%ecx;");
    asm("loc_1000926A: mov 0x1C(%esi),%edx;");
    asm("loc_1000926D: push $0;");
    asm("loc_1000926F: add $0x16,%eax;");
    asm("loc_10009272: push %eax;");
    asm("loc_10009273: push %ecx;");
    asm("loc_10009274: push %edx;");
    asm("loc_10009275: calll *0x10(%esi);");
    asm("loc_10009278: test %eax,%eax;");
    asm("loc_1000927A: je loc_10009286;");
    asm("loc_1000927C: pop %edi;");
    asm("loc_1000927D: pop %ebp;");
    asm("loc_1000927E: pop %ebx;");
    asm("loc_1000927F: or $0xFFFFFFFF,%eax;");
    asm("loc_10009282: pop %esi;");
    asm("loc_10009283: ret $0xC;");
    asm("loc_10009286: test %edi,%edi;");
    asm("loc_10009288: mov 0x18(%esp),%ebx;");
    asm("loc_1000928C: jbe loc_100092A2;");
    asm("loc_1000928E: push %edi;");
    asm("loc_1000928F: movb $0,(%ebx);");
    asm("loc_10009292: mov 0x20(%esi),%eax;");
    asm("loc_10009295: mov 0x1C(%esi),%ecx;");
    asm("loc_10009298: push %ebx;");
    asm("loc_10009299: push %eax;");
    asm("loc_1000929A: push %ecx;");
    asm("loc_1000929B: calll *4(%esi);");
    asm("loc_1000929E: cmp %edi,%eax;");
    asm("loc_100092A0: jne loc_1000927C;");
    asm("loc_100092A2: test %ebx,%ebx;");
    asm("loc_100092A4: je loc_100092B1;");
    asm("loc_100092A6: mov 0x28(%esi),%esi;");
    asm("loc_100092A9: cmp %esi,%ebp;");
    asm("loc_100092AB: jbe loc_100092B1;");
    asm("loc_100092AD: movb $0,(%esi,%ebx);");
    asm("loc_100092B1: mov %edi,%eax;");
    asm("loc_100092B3: pop %edi;");
    asm("loc_100092B4: pop %ebp;");
    asm("loc_100092B5: pop %ebx;");
    asm("loc_100092B6: pop %esi;");
    asm("loc_100092B7: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100092C0() // _unzOpen2
{
    __DEBUG_ASM(100092C0);
    // chunk 0x100092C0 _sub_100092C0
    asm("loc_100092C0: sub $0xAC,%esp;");
    asm("loc_100092C6: push %ebp;");
    asm("loc_100092C7: push %esi;");
    asm("loc_100092C8: mov 0xBC(%esp),%esi;");
    asm("loc_100092CF: xor %ebp,%ebp;");
    asm("loc_100092D1: test %esi,%esi;");
    asm("loc_100092D3: push %edi;");
    asm("loc_100092D4: jne loc_100092E5;");
    asm("loc_100092D6: lea 0x18(%esp),%eax;");
    asm("loc_100092DA: push %eax;");
    asm("loc_100092DB: call _sub_10006920;");
    asm("loc_100092E0: add $4,%esp;");
    asm("loc_100092E3: jmp loc_100092F0;");
    asm("loc_100092E5: mov $8,%ecx;");
    asm("loc_100092EA: lea 0x18(%esp),%edi;");
    asm("loc_100092EE: rep movsl (%esi),(%edi);");
    asm("loc_100092F0: mov 0xBC(%esp),%ecx;");
    asm("loc_100092F7: mov 0x34(%esp),%edx;");
    asm("loc_100092FB: push $5;");
    asm("loc_100092FD: push %ecx;");
    asm("loc_100092FE: push %edx;");
    asm("loc_100092FF: calll *0x24(%esp);");
    asm("loc_10009303: test %eax,%eax;");
    asm("loc_10009305: mov %eax,0x38(%esp);");
    asm("loc_10009309: jne loc_10009317;");
    asm("loc_1000930B: pop %edi;");
    asm("loc_1000930C: pop %esi;");
    asm("loc_1000930D: pop %ebp;");
    asm("loc_1000930E: add $0xAC,%esp;");
    asm("loc_10009314: ret $8;");
    asm("loc_10009317: push %ebx;");
    asm("loc_10009318: push %eax;");
    asm("loc_10009319: lea 0x20(%esp),%ebx;");
    asm("loc_1000931D: call _sub_100085A0;");
    asm("loc_10009322: mov %eax,%esi;");
    asm("loc_10009324: add $4,%esp;");
    asm("loc_10009327: test %esi,%esi;");
    asm("loc_10009329: jne loc_1000932E;");
    asm("loc_1000932B: or $0xFFFFFFFF,%ebp;");
    asm("loc_1000932E: mov 0x3C(%esp),%eax;");
    asm("loc_10009332: mov 0x38(%esp),%ecx;");
    asm("loc_10009336: push $0;");
    asm("loc_10009338: push %esi;");
    asm("loc_10009339: push %eax;");
    asm("loc_1000933A: push %ecx;");
    asm("loc_1000933B: calll *0x3C(%esp);");
    asm("loc_1000933F: test %eax,%eax;");
    asm("loc_10009341: je loc_10009346;");
    asm("loc_10009343: or $0xFFFFFFFF,%ebp;");
    asm("loc_10009346: mov 0x3C(%esp),%eax;");
    asm("loc_1000934A: lea 0x10(%esp),%edx;");
    asm("loc_1000934E: push %edx;");
    asm("loc_1000934F: lea 0x20(%esp),%ecx;");
    asm("loc_10009353: call _sub_10008470;");
    asm("loc_10009358: add $4,%esp;");
    asm("loc_1000935B: test %eax,%eax;");
    asm("loc_1000935D: je loc_10009362;");
    asm("loc_1000935F: or $0xFFFFFFFF,%ebp;");
    asm("loc_10009362: lea 0x10(%esp),%eax;");
    asm("loc_10009366: push %eax;");
    asm("loc_10009367: mov 0x40(%esp),%eax;");
    asm("loc_1000936B: lea 0x20(%esp),%ecx;");
    asm("loc_1000936F: call _sub_10008410;");
    asm("loc_10009374: add $4,%esp;");
    asm("loc_10009377: test %eax,%eax;");
    asm("loc_10009379: je loc_1000937E;");
    asm("loc_1000937B: or $0xFFFFFFFF,%ebp;");
    asm("loc_1000937E: mov 0x3C(%esp),%eax;");
    asm("loc_10009382: lea 0x14(%esp),%ecx;");
    asm("loc_10009386: push %ecx;");
    asm("loc_10009387: lea 0x20(%esp),%ecx;");
    asm("loc_1000938B: call _sub_10008410;");
    asm("loc_10009390: add $4,%esp;");
    asm("loc_10009393: test %eax,%eax;");
    asm("loc_10009395: je loc_1000939A;");
    asm("loc_10009397: or $0xFFFFFFFF,%ebp;");
    asm("loc_1000939A: mov 0x3C(%esp),%eax;");
    asm("loc_1000939E: lea 0x40(%esp),%edx;");
    asm("loc_100093A2: push %edx;");
    asm("loc_100093A3: lea 0x20(%esp),%ecx;");
    asm("loc_100093A7: call _sub_10008410;");
    asm("loc_100093AC: add $4,%esp;");
    asm("loc_100093AF: test %eax,%eax;");
    asm("loc_100093B1: je loc_100093B6;");
    asm("loc_100093B3: or $0xFFFFFFFF,%ebp;");
    asm("loc_100093B6: lea 0x18(%esp),%eax;");
    asm("loc_100093BA: push %eax;");
    asm("loc_100093BB: mov 0x40(%esp),%eax;");
    asm("loc_100093BF: lea 0x20(%esp),%ecx;");
    asm("loc_100093C3: call _sub_10008410;");
    asm("loc_100093C8: add $4,%esp;");
    asm("loc_100093CB: test %eax,%eax;");
    asm("loc_100093CD: je loc_100093D2;");
    asm("loc_100093CF: or $0xFFFFFFFF,%ebp;");
    asm("loc_100093D2: mov 0x18(%esp),%ecx;");
    asm("loc_100093D6: cmp 0x40(%esp),%ecx;");
    asm("loc_100093DA: jne loc_100093EC;");
    asm("loc_100093DC: mov 0x14(%esp),%eax;");
    asm("loc_100093E0: test %eax,%eax;");
    asm("loc_100093E2: jne loc_100093EC;");
    asm("loc_100093E4: mov 0x10(%esp),%eax;");
    asm("loc_100093E8: test %eax,%eax;");
    asm("loc_100093EA: je loc_100093F1;");
    asm("loc_100093EC: mov $0xFFFFFF99,%ebp;");
    asm("loc_100093F1: mov 0x3C(%esp),%eax;");
    asm("loc_100093F5: lea 0x5C(%esp),%edx;");
    asm("loc_100093F9: push %edx;");
    asm("loc_100093FA: lea 0x20(%esp),%ecx;");
    asm("loc_100093FE: call _sub_10008470;");
    asm("loc_10009403: add $4,%esp;");
    asm("loc_10009406: test %eax,%eax;");
    asm("loc_10009408: je loc_1000940D;");
    asm("loc_1000940A: or $0xFFFFFFFF,%ebp;");
    asm("loc_1000940D: lea 0x60(%esp),%eax;");
    asm("loc_10009411: push %eax;");
    asm("loc_10009412: mov 0x40(%esp),%eax;");
    asm("loc_10009416: lea 0x20(%esp),%ecx;");
    asm("loc_1000941A: call _sub_10008470;");
    asm("loc_1000941F: add $4,%esp;");
    asm("loc_10009422: test %eax,%eax;");
    asm("loc_10009424: je loc_10009429;");
    asm("loc_10009426: or $0xFFFFFFFF,%ebp;");
    asm("loc_10009429: mov 0x3C(%esp),%eax;");
    asm("loc_1000942D: lea 0x44(%esp),%ecx;");
    asm("loc_10009431: push %ecx;");
    asm("loc_10009432: lea 0x20(%esp),%ecx;");
    asm("loc_10009436: call _sub_10008410;");
    asm("loc_1000943B: add $4,%esp;");
    asm("loc_1000943E: test %eax,%eax;");
    asm("loc_10009440: je loc_10009445;");
    asm("loc_10009442: or $0xFFFFFFFF,%ebp;");
    asm("loc_10009445: mov 0x5C(%esp),%eax;");
    asm("loc_10009449: mov 0x60(%esp),%ecx;");
    asm("loc_1000944D: lea (%eax,%ecx),%edx;");
    asm("loc_10009450: cmp %edx,%esi;");
    asm("loc_10009452: jb loc_10009458;");
    asm("loc_10009454: test %ebp,%ebp;");
    asm("loc_10009456: je loc_10009475;");
    asm("loc_10009458: mov 0x3C(%esp),%eax;");
    asm("loc_1000945C: mov 0x38(%esp),%ecx;");
    asm("loc_10009460: push %eax;");
    asm("loc_10009461: push %ecx;");
    asm("loc_10009462: calll *0x38(%esp);");
    asm("loc_10009466: pop %ebx;");
    asm("loc_10009467: pop %edi;");
    asm("loc_10009468: pop %esi;");
    asm("loc_10009469: xor %eax,%eax;");
    asm("loc_1000946B: pop %ebp;");
    asm("loc_1000946C: add $0xAC,%esp;");
    asm("loc_10009472: ret $8;");
    asm("loc_10009475: mov %esi,%edx;");
    asm("loc_10009477: sub %eax,%edx;");
    asm("loc_10009479: sub %ecx,%edx;");
    asm("loc_1000947B: push $0xA0;");
    asm("loc_10009480: mov %edx,0x4C(%esp);");
    asm("loc_10009484: mov %esi,0x5C(%esp);");
    asm("loc_10009488: movl $0,0xBC(%esp);");
    asm("loc_10009493: call _sub_1000A46A;");
    asm("loc_10009498: mov %eax,%ebx;");
    asm("loc_1000949A: add $4,%esp;");
    asm("loc_1000949D: mov $0x28,%ecx;");
    asm("loc_100094A2: lea 0x1C(%esp),%esi;");
    asm("loc_100094A6: mov %ebx,%edi;");
    asm("loc_100094A8: push %ebx;");
    asm("loc_100094A9: rep movsl (%esi),(%edi);");
    asm("loc_100094AB: call _sub_10008B00;");
    asm("loc_100094B0: mov %ebx,%eax;");
    asm("loc_100094B2: pop %ebx;");
    asm("loc_100094B3: pop %edi;");
    asm("loc_100094B4: pop %esi;");
    asm("loc_100094B5: pop %ebp;");
    asm("loc_100094B6: add $0xAC,%esp;");
    asm("loc_100094BC: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100094C0() // _unzOpen
{
    __DEBUG_ASM(100094C0);
    // chunk 0x100094C0 _sub_100094C0
    asm("loc_100094C0: mov 4(%esp),%eax;");
    asm("loc_100094C4: push $0;");
    asm("loc_100094C6: push %eax;");
    asm("loc_100094C7: call _sub_100092C0;");
    asm("loc_100094CC: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100094D0() // _unzClose
{
    __DEBUG_ASM(100094D0);
    // chunk 0x100094D0 _sub_100094D0
    asm("loc_100094D0: push %esi;");
    asm("loc_100094D1: mov 8(%esp),%esi;");
    asm("loc_100094D5: test %esi,%esi;");
    asm("loc_100094D7: jne loc_100094E2;");
    asm("loc_100094D9: mov $0xFFFFFF9A,%eax;");
    asm("loc_100094DE: pop %esi;");
    asm("loc_100094DF: ret $4;");
    asm("loc_100094E2: mov 0x9C(%esi),%eax;");
    asm("loc_100094E8: test %eax,%eax;");
    asm("loc_100094EA: je loc_100094F2;");
    asm("loc_100094EC: push %esi;");
    asm("loc_100094ED: call _sub_100091A0;");
    asm("loc_100094F2: mov 0x20(%esi),%eax;");
    asm("loc_100094F5: mov 0x1C(%esi),%ecx;");
    asm("loc_100094F8: push %eax;");
    asm("loc_100094F9: push %ecx;");
    asm("loc_100094FA: calll *0x14(%esi);");
    asm("loc_100094FD: push %esi;");
    asm("loc_100094FE: call _sub_1000A418;");
    asm("loc_10009503: add $4,%esp;");
    asm("loc_10009506: xor %eax,%eax;");
    asm("loc_10009508: pop %esi;");
    asm("loc_10009509: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009510() // _unzOpenCurrentFile2
{
    __DEBUG_ASM(10009510);
    // chunk 0x10009510 _sub_10009510
    asm("loc_10009510: sub $8,%esp;");
    asm("loc_10009513: push %ebp;");
    asm("loc_10009514: mov 0x10(%esp),%ebp;");
    asm("loc_10009518: push %edi;");
    asm("loc_10009519: xor %edi,%edi;");
    asm("loc_1000951B: cmp %edi,%ebp;");
    asm("loc_1000951D: je loc_10009524;");
    asm("loc_1000951F: cmp %edi,0x38(%ebp);");
    asm("loc_10009522: jne loc_10009531;");
    asm("loc_10009524: pop %edi;");
    asm("loc_10009525: mov $0xFFFFFF9A,%eax;");
    asm("loc_1000952A: pop %ebp;");
    asm("loc_1000952B: add $8,%esp;");
    asm("loc_1000952E: ret $0x10;");
    asm("loc_10009531: cmp %edi,0x9C(%ebp);");
    asm("loc_10009537: je loc_1000953F;");
    asm("loc_10009539: push %ebp;");
    asm("loc_1000953A: call _sub_100091A0;");
    asm("loc_1000953F: push %ebx;");
    asm("loc_10009540: push %esi;");
    asm("loc_10009541: lea 0x10(%esp),%eax;");
    asm("loc_10009545: push %eax;");
    asm("loc_10009546: lea 0x20(%esp),%ecx;");
    asm("loc_1000954A: push %ecx;");
    asm("loc_1000954B: lea 0x1C(%esp),%edx;");
    asm("loc_1000954F: push %edx;");
    asm("loc_10009550: mov %ebp,%esi;");
    asm("loc_10009552: call _sub_10008CB0;");
    asm("loc_10009557: add $0xC,%esp;");
    asm("loc_1000955A: test %eax,%eax;");
    asm("loc_1000955C: je loc_1000956D;");
    asm("loc_1000955E: pop %esi;");
    asm("loc_1000955F: pop %ebx;");
    asm("loc_10009560: pop %edi;");
    asm("loc_10009561: mov $0xFFFFFF99,%eax;");
    asm("loc_10009566: pop %ebp;");
    asm("loc_10009567: add $8,%esp;");
    asm("loc_1000956A: ret $0x10;");
    asm("loc_1000956D: push $0x90;");
    asm("loc_10009572: call _sub_1000A46A;");
    asm("loc_10009577: mov %eax,%ebx;");
    asm("loc_10009579: add $4,%esp;");
    asm("loc_1000957C: cmp %edi,%ebx;");
    asm("loc_1000957E: je loc_100095B7;");
    asm("loc_10009580: push $0x4000;");
    asm("loc_10009585: call _sub_1000A46A;");
    asm("loc_1000958A: mov 0x14(%esp),%edx;");
    asm("loc_1000958E: mov 0x20(%esp),%ecx;");
    asm("loc_10009592: mov %edx,0x48(%ebx);");
    asm("loc_10009595: mov 0x2C(%esp),%edx;");
    asm("loc_10009599: add $4,%esp;");
    asm("loc_1000959C: cmp %edi,%eax;");
    asm("loc_1000959E: mov %eax,(%ebx);");
    asm("loc_100095A0: mov %ecx,0x44(%ebx);");
    asm("loc_100095A3: mov %edi,0x4C(%ebx);");
    asm("loc_100095A6: mov %edx,0x8C(%ebx);");
    asm("loc_100095AC: jne loc_100095C6;");
    asm("loc_100095AE: push %ebx;");
    asm("loc_100095AF: call _sub_1000A418;");
    asm("loc_100095B4: add $4,%esp;");
    asm("loc_100095B7: pop %esi;");
    asm("loc_100095B8: pop %ebx;");
    asm("loc_100095B9: pop %edi;");
    asm("loc_100095BA: mov $0xFFFFFF98,%eax;");
    asm("loc_100095BF: pop %ebp;");
    asm("loc_100095C0: add $8,%esp;");
    asm("loc_100095C3: ret $0x10;");
    asm("loc_100095C6: mov 0x20(%esp),%eax;");
    asm("loc_100095CA: cmp %edi,%eax;");
    asm("loc_100095CC: mov %edi,0x40(%ebx);");
    asm("loc_100095CF: je loc_100095D6;");
    asm("loc_100095D1: mov 0x54(%ebp),%ecx;");
    asm("loc_100095D4: mov %ecx,(%eax);");
    asm("loc_100095D6: mov 0x24(%esp),%ecx;");
    asm("loc_100095DA: cmp %edi,%ecx;");
    asm("loc_100095DC: je loc_1000960F;");
    asm("loc_100095DE: movl $6,(%ecx);");
    asm("loc_100095E4: mov 0x50(%ebp),%eax;");
    asm("loc_100095E7: and $6,%eax;");
    asm("loc_100095EA: sub $2,%eax;");
    asm("loc_100095ED: je loc_10009609;");
    asm("loc_100095EF: sub $2,%eax;");
    asm("loc_100095F2: je loc_10009601;");
    asm("loc_100095F4: sub $2,%eax;");
    asm("loc_100095F7: jne loc_1000960F;");
    asm("loc_100095F9: movl $1,(%ecx);");
    asm("loc_100095FF: jmp loc_1000960F;");
    asm("loc_10009601: movl $2,(%ecx);");
    asm("loc_10009607: jmp loc_1000960F;");
    asm("loc_10009609: movl $9,(%ecx);");
    asm("loc_1000960F: mov 0x5C(%ebp),%eax;");
    asm("loc_10009612: mov %edi,0x50(%ebx);");
    asm("loc_10009615: mov %eax,0x54(%ebx);");
    asm("loc_10009618: mov 0x54(%ebp),%ecx;");
    asm("loc_1000961B: mov %ecx,0x84(%ebx);");
    asm("loc_10009621: mov 0x20(%ebp),%eax;");
    asm("loc_10009624: mov %eax,0x80(%ebx);");
    asm("loc_1000962A: lea 0x60(%ebx),%edi;");
    asm("loc_1000962D: mov $8,%ecx;");
    asm("loc_10009632: mov %ebp,%esi;");
    asm("loc_10009634: rep movsl (%esi),(%edi);");
    asm("loc_10009636: mov 0x2C(%ebp),%ecx;");
    asm("loc_10009639: xor %esi,%esi;");
    asm("loc_1000963B: mov %ecx,0x88(%ebx);");
    asm("loc_10009641: mov %esi,0x18(%ebx);");
    asm("loc_10009644: cmpl $8,0x54(%ebp);");
    asm("loc_10009648: jne loc_10009674;");
    asm("loc_1000964A: cmp %esi,%edx;");
    asm("loc_1000964C: jne loc_10009674;");
    asm("loc_1000964E: push $0x38;");
    asm("loc_10009650: push $_data_1000B068;");
    asm("loc_10009655: push $0xFFFFFFF1;");
    asm("loc_10009657: lea 4(%ebx),%edx;");
    asm("loc_1000965A: push %edx;");
    asm("loc_1000965B: mov %esi,0x24(%ebx);");
    asm("loc_1000965E: mov %esi,0x28(%ebx);");
    asm("loc_10009661: mov %esi,0x2C(%ebx);");
    asm("loc_10009664: call _sub_100058E0;");
    asm("loc_10009669: test %eax,%eax;");
    asm("loc_1000966B: jne loc_10009674;");
    asm("loc_1000966D: movl $1,0x40(%ebx);");
    asm("loc_10009674: mov 0x60(%ebp),%eax;");
    asm("loc_10009677: mov %eax,0x58(%ebx);");
    asm("loc_1000967A: mov 0x64(%ebp),%ecx;");
    asm("loc_1000967D: mov 0x14(%esp),%eax;");
    asm("loc_10009681: mov %ecx,0x5C(%ebx);");
    asm("loc_10009684: mov 0x98(%ebp),%edx;");
    asm("loc_1000968A: lea 0x1E(%edx,%eax),%ecx;");
    asm("loc_1000968E: mov %esi,8(%ebx);");
    asm("loc_10009691: pop %esi;");
    asm("loc_10009692: mov %ecx,0x3C(%ebx);");
    asm("loc_10009695: mov %ebx,0x9C(%ebp);");
    asm("loc_1000969B: pop %ebx;");
    asm("loc_1000969C: pop %edi;");
    asm("loc_1000969D: xor %eax,%eax;");
    asm("loc_1000969F: pop %ebp;");
    asm("loc_100096A0: add $8,%esp;");
    asm("loc_100096A3: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100096B0() // _unzOpenCurrentFile
{
    __DEBUG_ASM(100096B0);
    // chunk 0x100096B0 _sub_100096B0
    asm("loc_100096B0: mov 4(%esp),%eax;");
    asm("loc_100096B4: push $0;");
    asm("loc_100096B6: push $0;");
    asm("loc_100096B8: push $0;");
    asm("loc_100096BA: push %eax;");
    asm("loc_100096BB: call _sub_10009510;");
    asm("loc_100096C0: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100096D0() // _sub_100096D0
{
    __DEBUG_ASM(100096D0);
    // chunk 0x100096D0 _sub_100096D0
    asm("loc_100096D0: push $0x1000;");
    asm("loc_100096D5: call _sub_1000A46A;");
    asm("loc_100096DA: add $4,%esp;");
    asm("loc_100096DD: test %eax,%eax;");
    asm("loc_100096DF: je loc_100096F5;");
    asm("loc_100096E1: movl $0,(%eax);");
    asm("loc_100096E7: movl $0,8(%eax);");
    asm("loc_100096EE: movl $0xFF0,4(%eax);");
    asm("loc_100096F5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009700() // _sub_10009700
{
    __DEBUG_ASM(10009700);
    // chunk 0x10009700 _sub_10009700
    asm("loc_10009700: test %eax,%eax;");
    asm("loc_10009702: je loc_10009717;");
    asm("loc_10009704: push %esi;");
    asm("loc_10009705: mov (%eax),%esi;");
    asm("loc_10009707: push %eax;");
    asm("loc_10009708: call _sub_1000A418;");
    asm("loc_1000970D: add $4,%esp;");
    asm("loc_10009710: test %esi,%esi;");
    asm("loc_10009712: mov %esi,%eax;");
    asm("loc_10009714: jne loc_10009705;");
    asm("loc_10009716: pop %esi;");
    asm("loc_10009717: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009720() // _sub_10009720
{
    __DEBUG_ASM(10009720);
    // chunk 0x10009720 _sub_10009720
    asm("loc_10009720: movl $0,4(%eax);");
    asm("loc_10009727: movl $0,(%eax);");
    asm("loc_1000972D: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009730() // _sub_10009730
{
    __DEBUG_ASM(10009730);
    // chunk 0x10009730 _sub_10009730
    asm("loc_10009730: push %ebp;");
    asm("loc_10009731: mov 8(%esp),%ebp;");
    asm("loc_10009735: test %ebp,%ebp;");
    asm("loc_10009737: je loc_1000974F;");
    asm("loc_10009739: mov 4(%ebp),%eax;");
    asm("loc_1000973C: test %eax,%eax;");
    asm("loc_1000973E: jne loc_10009756;");
    asm("loc_10009740: call _sub_100096D0;");
    asm("loc_10009745: test %eax,%eax;");
    asm("loc_10009747: mov %eax,4(%ebp);");
    asm("loc_1000974A: mov %eax,(%ebp);");
    asm("loc_1000974D: jne loc_10009756;");
    asm("loc_1000974F: mov $0xFFFFFF98,%eax;");
    asm("loc_10009754: pop %ebp;");
    asm("loc_10009755: ret;");
    asm("loc_10009756: push %ebx;");
    asm("loc_10009757: mov 0x10(%esp),%ebx;");
    asm("loc_1000975B: push %esi;");
    asm("loc_1000975C: mov 4(%ebp),%esi;");
    asm("loc_1000975F: push %edi;");
    asm("loc_10009760: mov 0x1C(%esp),%edi;");
    asm("loc_10009764: test %edi,%edi;");
    asm("loc_10009766: jbe loc_100097CB;");
    asm("loc_10009768: mov 4(%esi),%eax;");
    asm("loc_1000976B: test %eax,%eax;");
    asm("loc_1000976D: jne loc_1000977F;");
    asm("loc_1000976F: call _sub_100096D0;");
    asm("loc_10009774: test %eax,%eax;");
    asm("loc_10009776: mov %eax,(%esi);");
    asm("loc_10009778: je loc_100097D2;");
    asm("loc_1000977A: mov %eax,%esi;");
    asm("loc_1000977C: mov %esi,4(%ebp);");
    asm("loc_1000977F: mov 4(%esi),%eax;");
    asm("loc_10009782: cmp %edi,%eax;");
    asm("loc_10009784: jb loc_10009788;");
    asm("loc_10009786: mov %edi,%eax;");
    asm("loc_10009788: test %eax,%eax;");
    asm("loc_1000978A: mov 8(%esi),%ecx;");
    asm("loc_1000978D: lea 0x10(%ecx,%esi),%ecx;");
    asm("loc_10009791: jbe loc_100097B1;");
    asm("loc_10009793: mov %ebx,%edi;");
    asm("loc_10009795: sub %ecx,%edi;");
    asm("loc_10009797: mov %eax,%ebp;");
    asm("loc_10009799: lea (%esp),%esp;");
    asm("loc_100097A0: mov (%edi,%ecx),%dl;");
    asm("loc_100097A3: mov %dl,(%ecx);");
    asm("loc_100097A5: inc %ecx;");
    asm("loc_100097A6: dec %ebp;");
    asm("loc_100097A7: jne loc_100097A0;");
    asm("loc_100097A9: mov 0x14(%esp),%ebp;");
    asm("loc_100097AD: mov 0x1C(%esp),%edi;");
    asm("loc_100097B1: mov 8(%esi),%edx;");
    asm("loc_100097B4: mov 4(%esi),%ecx;");
    asm("loc_100097B7: add %eax,%edx;");
    asm("loc_100097B9: sub %eax,%ecx;");
    asm("loc_100097BB: add %eax,%ebx;");
    asm("loc_100097BD: sub %eax,%edi;");
    asm("loc_100097BF: mov %edx,8(%esi);");
    asm("loc_100097C2: mov %ecx,4(%esi);");
    asm("loc_100097C5: mov %edi,0x1C(%esp);");
    asm("loc_100097C9: jne loc_10009768;");
    asm("loc_100097CB: pop %edi;");
    asm("loc_100097CC: pop %esi;");
    asm("loc_100097CD: pop %ebx;");
    asm("loc_100097CE: xor %eax,%eax;");
    asm("loc_100097D0: pop %ebp;");
    asm("loc_100097D1: ret;");
    asm("loc_100097D2: pop %edi;");
    asm("loc_100097D3: pop %esi;");
    asm("loc_100097D4: pop %ebx;");
    asm("loc_100097D5: mov $0xFFFFFF98,%eax;");
    asm("loc_100097DA: pop %ebp;");
    asm("loc_100097DB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_100097E0() // _sub_100097E0
{
    __DEBUG_ASM(100097E0);
    // chunk 0x100097E0 _sub_100097E0
    asm("loc_100097E0: push %ecx;");
    asm("loc_100097E1: xor %eax,%eax;");
    asm("loc_100097E3: test %esi,%esi;");
    asm("loc_100097E5: jle loc_100097F3;");
    asm("loc_100097E7: mov %cl,(%esp,%eax);");
    asm("loc_100097EB: shr $8,%ecx;");
    asm("loc_100097EE: inc %eax;");
    asm("loc_100097EF: cmp %esi,%eax;");
    asm("loc_100097F1: jl loc_100097E7;");
    asm("loc_100097F3: mov 8(%esp),%ecx;");
    asm("loc_100097F7: push %esi;");
    asm("loc_100097F8: lea 4(%esp),%eax;");
    asm("loc_100097FC: push %eax;");
    asm("loc_100097FD: mov 0x1C(%edx),%eax;");
    asm("loc_10009800: push %ecx;");
    asm("loc_10009801: push %eax;");
    asm("loc_10009802: calll *8(%edx);");
    asm("loc_10009805: sub %esi,%eax;");
    asm("loc_10009807: neg %eax;");
    asm("loc_10009809: sbb %eax,%eax;");
    asm("loc_1000980B: pop %ecx;");
    asm("loc_1000980C: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009810() // _sub_10009810
{
    __DEBUG_ASM(10009810);
    // chunk 0x10009810 _sub_10009810
    asm("loc_10009810: xor %eax,%eax;");
    asm("loc_10009812: test %edx,%edx;");
    asm("loc_10009814: jle loc_10009821;");
    asm("loc_10009816: mov %cl,(%eax,%esi);");
    asm("loc_10009819: shr $8,%ecx;");
    asm("loc_1000981C: inc %eax;");
    asm("loc_1000981D: cmp %edx,%eax;");
    asm("loc_1000981F: jl loc_10009816;");
    asm("loc_10009821: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009830() // _sub_10009830
{
    __DEBUG_ASM(10009830);
    // chunk 0x10009830 _sub_10009830
    asm("loc_10009830: mov 0x14(%edx),%ecx;");
    asm("loc_10009833: cmp $0x7BC,%ecx;");
    asm("loc_10009839: jbe loc_10009843;");
    asm("loc_1000983B: sub $0x7BC,%ecx;");
    asm("loc_10009841: jmp loc_1000984B;");
    asm("loc_10009843: cmp $0x50,%ecx;");
    asm("loc_10009846: jbe loc_1000984B;");
    asm("loc_10009848: sub $0x50,%ecx;");
    asm("loc_1000984B: mov 8(%edx),%eax;");
    asm("loc_1000984E: push %esi;");
    asm("loc_1000984F: mov 4(%edx),%esi;");
    asm("loc_10009852: shl $6,%eax;");
    asm("loc_10009855: add %esi,%eax;");
    asm("loc_10009857: mov (%edx),%esi;");
    asm("loc_10009859: shr $1,%esi;");
    asm("loc_1000985B: shl $5,%eax;");
    asm("loc_1000985E: add %esi,%eax;");
    asm("loc_10009860: mov 0x10(%edx),%esi;");
    asm("loc_10009863: shl $4,%ecx;");
    asm("loc_10009866: lea 1(%ecx,%esi),%ecx;");
    asm("loc_1000986A: mov 0xC(%edx),%esi;");
    asm("loc_1000986D: shl $5,%ecx;");
    asm("loc_10009870: add %esi,%ecx;");
    asm("loc_10009872: shl $0x10,%ecx;");
    asm("loc_10009875: or %ecx,%eax;");
    asm("loc_10009877: pop %esi;");
    asm("loc_10009878: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009880() // _sub_10009880
{
    __DEBUG_ASM(10009880);
    // chunk 0x10009880 _sub_10009880
    asm("loc_10009880: mov $0x4098,%eax;");
    asm("loc_10009885: call _sub_1000A424;");
    asm("loc_1000988A: push %esi;");
    asm("loc_1000988B: mov 0x40AC(%esp),%esi;");
    asm("loc_10009892: test %esi,%esi;");
    asm("loc_10009894: push %edi;");
    asm("loc_10009895: jne loc_100098A6;");
    asm("loc_10009897: lea 8(%esp),%eax;");
    asm("loc_1000989B: push %eax;");
    asm("loc_1000989C: call _sub_10006920;");
    asm("loc_100098A1: add $4,%esp;");
    asm("loc_100098A4: jmp loc_100098B1;");
    asm("loc_100098A6: mov $8,%ecx;");
    asm("loc_100098AB: lea 8(%esp),%edi;");
    asm("loc_100098AF: rep movsl (%esi),(%edi);");
    asm("loc_100098B1: mov 0x40A8(%esp),%eax;");
    asm("loc_100098B8: mov 0x40A4(%esp),%edx;");
    asm("loc_100098BF: xor %ecx,%ecx;");
    asm("loc_100098C1: test %eax,%eax;");
    asm("loc_100098C3: mov 0x24(%esp),%eax;");
    asm("loc_100098C7: sete %cl;");
    asm("loc_100098CA: lea 7(,%ecx,4),%ecx;");
    asm("loc_100098D1: push %ecx;");
    asm("loc_100098D2: push %edx;");
    asm("loc_100098D3: push %eax;");
    asm("loc_100098D4: calll *0x14(%esp);");
    asm("loc_100098D8: test %eax,%eax;");
    asm("loc_100098DA: mov %eax,0x28(%esp);");
    asm("loc_100098DE: je loc_10009934;");
    asm("loc_100098E0: mov 0x24(%esp),%ecx;");
    asm("loc_100098E4: push %eax;");
    asm("loc_100098E5: push %ecx;");
    asm("loc_100098E6: calll *0x1C(%esp);");
    asm("loc_100098EA: mov %eax,0x4098(%esp);");
    asm("loc_100098F1: lea 0x2C(%esp),%eax;");
    asm("loc_100098F5: movl $0,0x34(%esp);");
    asm("loc_100098FD: movl $0,0x70(%esp);");
    asm("loc_10009905: movl $0,0x409C(%esp);");
    asm("loc_10009910: call _sub_10009720;");
    asm("loc_10009915: push $0x4098;");
    asm("loc_1000991A: call _sub_1000A46A;");
    asm("loc_1000991F: add $4,%esp;");
    asm("loc_10009922: test %eax,%eax;");
    asm("loc_10009924: jne loc_10009941;");
    asm("loc_10009926: mov 0x28(%esp),%edx;");
    asm("loc_1000992A: mov 0x24(%esp),%eax;");
    asm("loc_1000992E: push %edx;");
    asm("loc_1000992F: push %eax;");
    asm("loc_10009930: calll *0x24(%esp);");
    asm("loc_10009934: pop %edi;");
    asm("loc_10009935: xor %eax,%eax;");
    asm("loc_10009937: pop %esi;");
    asm("loc_10009938: add $0x4098,%esp;");
    asm("loc_1000993E: ret $0x10;");
    asm("loc_10009941: mov $0x1026,%ecx;");
    asm("loc_10009946: lea 8(%esp),%esi;");
    asm("loc_1000994A: mov %eax,%edi;");
    asm("loc_1000994C: rep movsl (%esi),(%edi);");
    asm("loc_1000994E: pop %edi;");
    asm("loc_1000994F: pop %esi;");
    asm("loc_10009950: add $0x4098,%esp;");
    asm("loc_10009956: ret $0x10;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009960() // _zipOpen
{
    __DEBUG_ASM(10009960);
    // chunk 0x10009960 _sub_10009960
    asm("loc_10009960: mov 8(%esp),%eax;");
    asm("loc_10009964: mov 4(%esp),%ecx;");
    asm("loc_10009968: push $0;");
    asm("loc_1000996A: push $0;");
    asm("loc_1000996C: push %eax;");
    asm("loc_1000996D: push %ecx;");
    asm("loc_1000996E: call _sub_10009880;");
    asm("loc_10009973: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009980() // _zipWriteInFileInZip
{
    __DEBUG_ASM(10009980);
    // chunk 0x10009980 _sub_10009980
    asm("loc_10009980: push %ebx;");
    asm("loc_10009981: push %esi;");
    asm("loc_10009982: mov 0xC(%esp),%esi;");
    asm("loc_10009986: xor %ebx,%ebx;");
    asm("loc_10009988: test %esi,%esi;");
    asm("loc_1000998A: je loc_10009993;");
    asm("loc_1000998C: mov 0x2C(%esi),%eax;");
    asm("loc_1000998F: test %eax,%eax;");
    asm("loc_10009991: jne loc_1000999D;");
    asm("loc_10009993: pop %esi;");
    asm("loc_10009994: mov $0xFFFFFF9A,%eax;");
    asm("loc_10009999: pop %ebx;");
    asm("loc_1000999A: ret $0xC;");
    asm("loc_1000999D: mov 0x14(%esp),%ecx;");
    asm("loc_100099A1: mov 0x10(%esp),%eax;");
    asm("loc_100099A5: push %ebp;");
    asm("loc_100099A6: push %edi;");
    asm("loc_100099A7: push %ecx;");
    asm("loc_100099A8: lea 0x30(%esi),%ebp;");
    asm("loc_100099AB: push %eax;");
    asm("loc_100099AC: mov %eax,(%ebp);");
    asm("loc_100099AF: mov 0x408C(%esi),%eax;");
    asm("loc_100099B5: push %eax;");
    asm("loc_100099B6: mov %ecx,0x34(%esi);");
    asm("loc_100099B9: call _sub_10001A80;");
    asm("loc_100099BE: mov %eax,0x408C(%esi);");
    asm("loc_100099C4: mov 0x34(%esi),%eax;");
    asm("loc_100099C7: test %eax,%eax;");
    asm("loc_100099C9: jbe loc_10009A97;");
    asm("loc_100099CF: mov 0x40(%esi),%eax;");
    asm("loc_100099D2: test %eax,%eax;");
    asm("loc_100099D4: jne loc_10009A05;");
    asm("loc_100099D6: mov 0x6C(%esi),%ecx;");
    asm("loc_100099D9: mov 0x20(%esi),%edx;");
    asm("loc_100099DC: mov 0x1C(%esi),%eax;");
    asm("loc_100099DF: push %ecx;");
    asm("loc_100099E0: lea 0x88(%esi),%edi;");
    asm("loc_100099E6: push %edi;");
    asm("loc_100099E7: push %edx;");
    asm("loc_100099E8: push %eax;");
    asm("loc_100099E9: calll *8(%esi);");
    asm("loc_100099EC: cmp 0x6C(%esi),%eax;");
    asm("loc_100099EF: je loc_100099F4;");
    asm("loc_100099F1: or $0xFFFFFFFF,%ebx;");
    asm("loc_100099F4: movl $0,0x6C(%esi);");
    asm("loc_100099FB: movl $0x4000,0x40(%esi);");
    asm("loc_10009A02: mov %edi,0x3C(%esi);");
    asm("loc_10009A05: cmpl $8,0x80(%esi);");
    asm("loc_10009A0C: jne loc_10009A34;");
    asm("loc_10009A0E: mov 0x84(%esi),%eax;");
    asm("loc_10009A14: test %eax,%eax;");
    asm("loc_10009A16: jne loc_10009A34;");
    asm("loc_10009A18: mov 0x44(%esi),%edi;");
    asm("loc_10009A1B: push $0;");
    asm("loc_10009A1D: push %ebp;");
    asm("loc_10009A1E: call _sub_10001D60;");
    asm("loc_10009A23: mov 0x44(%esi),%ecx;");
    asm("loc_10009A26: mov %eax,%ebx;");
    asm("loc_10009A28: mov 0x6C(%esi),%eax;");
    asm("loc_10009A2B: sub %edi,%ecx;");
    asm("loc_10009A2D: add %ecx,%eax;");
    asm("loc_10009A2F: mov %eax,0x6C(%esi);");
    asm("loc_10009A32: jmp loc_10009A8F;");
    asm("loc_10009A34: mov 0x40(%esi),%eax;");
    asm("loc_10009A37: mov 0x34(%esi),%ecx;");
    asm("loc_10009A3A: cmp %eax,%ecx;");
    asm("loc_10009A3C: jae loc_10009A40;");
    asm("loc_10009A3E: mov %ecx,%eax;");
    asm("loc_10009A40: xor %ecx,%ecx;");
    asm("loc_10009A42: test %eax,%eax;");
    asm("loc_10009A44: jbe loc_10009A57;");
    asm("loc_10009A46: mov (%ebp),%edx;");
    asm("loc_10009A49: mov (%ecx,%edx),%dl;");
    asm("loc_10009A4C: mov 0x3C(%esi),%edi;");
    asm("loc_10009A4F: mov %dl,(%ecx,%edi);");
    asm("loc_10009A52: inc %ecx;");
    asm("loc_10009A53: cmp %eax,%ecx;");
    asm("loc_10009A55: jb loc_10009A46;");
    asm("loc_10009A57: mov 0x34(%esi),%ecx;");
    asm("loc_10009A5A: mov 0x40(%esi),%edi;");
    asm("loc_10009A5D: mov (%ebp),%edx;");
    asm("loc_10009A60: sub %eax,%ecx;");
    asm("loc_10009A62: mov %ecx,0x34(%esi);");
    asm("loc_10009A65: mov 0x3C(%esi),%ecx;");
    asm("loc_10009A68: sub %eax,%edi;");
    asm("loc_10009A6A: add %eax,%edx;");
    asm("loc_10009A6C: add %eax,%ecx;");
    asm("loc_10009A6E: mov %edi,0x40(%esi);");
    asm("loc_10009A71: mov 0x38(%esi),%edi;");
    asm("loc_10009A74: mov %edx,(%ebp);");
    asm("loc_10009A77: mov 0x44(%esi),%edx;");
    asm("loc_10009A7A: mov %ecx,0x3C(%esi);");
    asm("loc_10009A7D: mov 0x6C(%esi),%ecx;");
    asm("loc_10009A80: add %eax,%edi;");
    asm("loc_10009A82: add %eax,%edx;");
    asm("loc_10009A84: add %eax,%ecx;");
    asm("loc_10009A86: mov %edi,0x38(%esi);");
    asm("loc_10009A89: mov %edx,0x44(%esi);");
    asm("loc_10009A8C: mov %ecx,0x6C(%esi);");
    asm("loc_10009A8F: test %ebx,%ebx;");
    asm("loc_10009A91: je loc_100099C4;");
    asm("loc_10009A97: pop %edi;");
    asm("loc_10009A98: pop %ebp;");
    asm("loc_10009A99: pop %esi;");
    asm("loc_10009A9A: xor %eax,%eax;");
    asm("loc_10009A9C: pop %ebx;");
    asm("loc_10009A9D: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009AA0() // _zipCloseFileInZipRaw
{
    __DEBUG_ASM(10009AA0);
    // chunk 0x10009AA0 _sub_10009AA0
    asm("loc_10009AA0: push %ebx;");
    asm("loc_10009AA1: push %edi;");
    asm("loc_10009AA2: mov 0xC(%esp),%edi;");
    asm("loc_10009AA6: xor %ebx,%ebx;");
    asm("loc_10009AA8: cmp %ebx,%edi;");
    asm("loc_10009AAA: je loc_10009AB1;");
    asm("loc_10009AAC: cmp %ebx,0x2C(%edi);");
    asm("loc_10009AAF: jne loc_10009ABB;");
    asm("loc_10009AB1: pop %edi;");
    asm("loc_10009AB2: mov $0xFFFFFF9A,%eax;");
    asm("loc_10009AB7: pop %ebx;");
    asm("loc_10009AB8: ret $0xC;");
    asm("loc_10009ABB: cmpl $8,0x80(%edi);");
    asm("loc_10009AC2: push %ebp;");
    asm("loc_10009AC3: push %esi;");
    asm("loc_10009AC4: mov %ebx,0x34(%edi);");
    asm("loc_10009AC7: jne loc_10009B27;");
    asm("loc_10009AC9: cmp %ebx,0x84(%edi);");
    asm("loc_10009ACF: jne loc_10009B27;");
    asm("loc_10009AD1: lea 0x30(%edi),%ebp;");
    asm("loc_10009AD4: mov 0x40(%edi),%eax;");
    asm("loc_10009AD7: test %eax,%eax;");
    asm("loc_10009AD9: jne loc_10009B02;");
    asm("loc_10009ADB: mov 0x6C(%edi),%eax;");
    asm("loc_10009ADE: mov 0x20(%edi),%ecx;");
    asm("loc_10009AE1: mov 0x1C(%edi),%edx;");
    asm("loc_10009AE4: push %eax;");
    asm("loc_10009AE5: lea 0x88(%edi),%esi;");
    asm("loc_10009AEB: push %esi;");
    asm("loc_10009AEC: push %ecx;");
    asm("loc_10009AED: push %edx;");
    asm("loc_10009AEE: calll *8(%edi);");
    asm("loc_10009AF1: movl $0,0x6C(%edi);");
    asm("loc_10009AF8: movl $0x4000,0x40(%edi);");
    asm("loc_10009AFF: mov %esi,0x3C(%edi);");
    asm("loc_10009B02: mov 0x44(%edi),%esi;");
    asm("loc_10009B05: push $4;");
    asm("loc_10009B07: push %ebp;");
    asm("loc_10009B08: call _sub_10001D60;");
    asm("loc_10009B0D: mov 0x6C(%edi),%ecx;");
    asm("loc_10009B10: mov %eax,%ebx;");
    asm("loc_10009B12: mov 0x44(%edi),%eax;");
    asm("loc_10009B15: sub %esi,%eax;");
    asm("loc_10009B17: add %eax,%ecx;");
    asm("loc_10009B19: test %ebx,%ebx;");
    asm("loc_10009B1B: mov %ecx,0x6C(%edi);");
    asm("loc_10009B1E: je loc_10009AD4;");
    asm("loc_10009B20: cmp $1,%ebx;");
    asm("loc_10009B23: jne loc_10009B27;");
    asm("loc_10009B25: xor %ebx,%ebx;");
    asm("loc_10009B27: mov 0x6C(%edi),%eax;");
    asm("loc_10009B2A: test %eax,%eax;");
    asm("loc_10009B2C: jbe loc_10009B4D;");
    asm("loc_10009B2E: test %ebx,%ebx;");
    asm("loc_10009B30: jne loc_10009B4D;");
    asm("loc_10009B32: mov 0x20(%edi),%edx;");
    asm("loc_10009B35: push %eax;");
    asm("loc_10009B36: mov 0x1C(%edi),%eax;");
    asm("loc_10009B39: lea 0x88(%edi),%ecx;");
    asm("loc_10009B3F: push %ecx;");
    asm("loc_10009B40: push %edx;");
    asm("loc_10009B41: push %eax;");
    asm("loc_10009B42: calll *8(%edi);");
    asm("loc_10009B45: cmp 0x6C(%edi),%eax;");
    asm("loc_10009B48: je loc_10009B4D;");
    asm("loc_10009B4A: or $0xFFFFFFFF,%ebx;");
    asm("loc_10009B4D: cmpl $8,0x80(%edi);");
    asm("loc_10009B54: jne loc_10009B72;");
    asm("loc_10009B56: mov 0x84(%edi),%eax;");
    asm("loc_10009B5C: test %eax,%eax;");
    asm("loc_10009B5E: jne loc_10009B8B;");
    asm("loc_10009B60: lea 0x30(%edi),%ecx;");
    asm("loc_10009B63: push %ecx;");
    asm("loc_10009B64: call _sub_10001FF0;");
    asm("loc_10009B69: mov %eax,%ebx;");
    asm("loc_10009B6B: movl $0,0x68(%edi);");
    asm("loc_10009B72: mov 0x84(%edi),%eax;");
    asm("loc_10009B78: test %eax,%eax;");
    asm("loc_10009B7A: jne loc_10009B8B;");
    asm("loc_10009B7C: mov 0x38(%edi),%edx;");
    asm("loc_10009B7F: mov 0x408C(%edi),%ebp;");
    asm("loc_10009B85: mov %edx,0x18(%esp);");
    asm("loc_10009B89: jmp loc_10009B8F;");
    asm("loc_10009B8B: mov 0x1C(%esp),%ebp;");
    asm("loc_10009B8F: mov 0x74(%edi),%esi;");
    asm("loc_10009B92: mov 0x44(%edi),%eax;");
    asm("loc_10009B95: add $0x10,%esi;");
    asm("loc_10009B98: mov $4,%edx;");
    asm("loc_10009B9D: mov %ebp,%ecx;");
    asm("loc_10009B9F: mov %eax,0x14(%esp);");
    asm("loc_10009BA3: call _sub_10009810;");
    asm("loc_10009BA8: mov 0x74(%edi),%esi;");
    asm("loc_10009BAB: mov 0x14(%esp),%ecx;");
    asm("loc_10009BAF: add $0x14,%esi;");
    asm("loc_10009BB2: call _sub_10009810;");
    asm("loc_10009BB7: mov 0x5C(%edi),%eax;");
    asm("loc_10009BBA: mov $1,%ecx;");
    asm("loc_10009BBF: cmp %ecx,%eax;");
    asm("loc_10009BC1: jne loc_10009BD3;");
    asm("loc_10009BC3: mov 0x74(%edi),%esi;");
    asm("loc_10009BC6: add $0x24,%esi;");
    asm("loc_10009BC9: mov $2,%edx;");
    asm("loc_10009BCE: call _sub_10009810;");
    asm("loc_10009BD3: mov 0x74(%edi),%esi;");
    asm("loc_10009BD6: mov 0x18(%esp),%ecx;");
    asm("loc_10009BDA: add $0x18,%esi;");
    asm("loc_10009BDD: mov $4,%edx;");
    asm("loc_10009BE2: call _sub_10009810;");
    asm("loc_10009BE7: test %ebx,%ebx;");
    asm("loc_10009BE9: jne loc_10009C01;");
    asm("loc_10009BEB: mov 0x78(%edi),%ecx;");
    asm("loc_10009BEE: mov 0x74(%edi),%edx;");
    asm("loc_10009BF1: push %ecx;");
    asm("loc_10009BF2: push %edx;");
    asm("loc_10009BF3: lea 0x24(%edi),%eax;");
    asm("loc_10009BF6: push %eax;");
    asm("loc_10009BF7: call _sub_10009730;");
    asm("loc_10009BFC: add $0xC,%esp;");
    asm("loc_10009BFF: mov %eax,%ebx;");
    asm("loc_10009C01: mov 0x74(%edi),%ecx;");
    asm("loc_10009C04: push %ecx;");
    asm("loc_10009C05: call _sub_1000A418;");
    asm("loc_10009C0A: add $4,%esp;");
    asm("loc_10009C0D: test %ebx,%ebx;");
    asm("loc_10009C0F: jne loc_10009CA0;");
    asm("loc_10009C15: mov 0x20(%edi),%edx;");
    asm("loc_10009C18: mov 0x1C(%edi),%eax;");
    asm("loc_10009C1B: push %edx;");
    asm("loc_10009C1C: push %eax;");
    asm("loc_10009C1D: calll *0xC(%edi);");
    asm("loc_10009C20: mov 0x70(%edi),%ecx;");
    asm("loc_10009C23: mov 0x20(%edi),%edx;");
    asm("loc_10009C26: push %ebx;");
    asm("loc_10009C27: add $0xE,%ecx;");
    asm("loc_10009C2A: push %ecx;");
    asm("loc_10009C2B: mov %eax,0x24(%esp);");
    asm("loc_10009C2F: mov 0x1C(%edi),%eax;");
    asm("loc_10009C32: push %edx;");
    asm("loc_10009C33: push %eax;");
    asm("loc_10009C34: calll *0x10(%edi);");
    asm("loc_10009C37: test %eax,%eax;");
    asm("loc_10009C39: je loc_10009C40;");
    asm("loc_10009C3B: or $0xFFFFFFFF,%ebx;");
    asm("loc_10009C3E: jmp loc_10009C87;");
    asm("loc_10009C40: mov 0x20(%edi),%ecx;");
    asm("loc_10009C43: push %ecx;");
    asm("loc_10009C44: mov $4,%esi;");
    asm("loc_10009C49: mov %ebp,%ecx;");
    asm("loc_10009C4B: mov %edi,%edx;");
    asm("loc_10009C4D: call _sub_100097E0;");
    asm("loc_10009C52: mov %eax,%ebx;");
    asm("loc_10009C54: add $4,%esp;");
    asm("loc_10009C57: test %ebx,%ebx;");
    asm("loc_10009C59: jne loc_10009C87;");
    asm("loc_10009C5B: mov 0x20(%edi),%edx;");
    asm("loc_10009C5E: mov 0x14(%esp),%ecx;");
    asm("loc_10009C62: push %edx;");
    asm("loc_10009C63: mov %edi,%edx;");
    asm("loc_10009C65: call _sub_100097E0;");
    asm("loc_10009C6A: mov %eax,%ebx;");
    asm("loc_10009C6C: add $4,%esp;");
    asm("loc_10009C6F: test %ebx,%ebx;");
    asm("loc_10009C71: jne loc_10009C87;");
    asm("loc_10009C73: mov 0x20(%edi),%eax;");
    asm("loc_10009C76: mov 0x18(%esp),%ecx;");
    asm("loc_10009C7A: push %eax;");
    asm("loc_10009C7B: mov %edi,%edx;");
    asm("loc_10009C7D: call _sub_100097E0;");
    asm("loc_10009C82: add $4,%esp;");
    asm("loc_10009C85: mov %eax,%ebx;");
    asm("loc_10009C87: mov 0x1C(%esp),%ecx;");
    asm("loc_10009C8B: mov 0x20(%edi),%edx;");
    asm("loc_10009C8E: mov 0x1C(%edi),%eax;");
    asm("loc_10009C91: push $0;");
    asm("loc_10009C93: push %ecx;");
    asm("loc_10009C94: push %edx;");
    asm("loc_10009C95: push %eax;");
    asm("loc_10009C96: calll *0x10(%edi);");
    asm("loc_10009C99: test %eax,%eax;");
    asm("loc_10009C9B: je loc_10009CA0;");
    asm("loc_10009C9D: or $0xFFFFFFFF,%ebx;");
    asm("loc_10009CA0: mov 0x4094(%edi),%eax;");
    asm("loc_10009CA6: pop %esi;");
    asm("loc_10009CA7: inc %eax;");
    asm("loc_10009CA8: pop %ebp;");
    asm("loc_10009CA9: mov %eax,0x4094(%edi);");
    asm("loc_10009CAF: movl $0,0x2C(%edi);");
    asm("loc_10009CB6: pop %edi;");
    asm("loc_10009CB7: mov %ebx,%eax;");
    asm("loc_10009CB9: pop %ebx;");
    asm("loc_10009CBA: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009CC0() // _zipCloseFileInZip
{
    __DEBUG_ASM(10009CC0);
    // chunk 0x10009CC0 _sub_10009CC0
    asm("loc_10009CC0: mov 4(%esp),%eax;");
    asm("loc_10009CC4: push $0;");
    asm("loc_10009CC6: push $0;");
    asm("loc_10009CC8: push %eax;");
    asm("loc_10009CC9: call _sub_10009AA0;");
    asm("loc_10009CCE: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009CE0() // _zipClose
{
    __DEBUG_ASM(10009CE0);
    // chunk 0x10009CE0 _sub_10009CE0
    asm("loc_10009CE0: push %ecx;");
    asm("loc_10009CE1: push %ebp;");
    asm("loc_10009CE2: push %esi;");
    asm("loc_10009CE3: push %edi;");
    asm("loc_10009CE4: mov 0x14(%esp),%edi;");
    asm("loc_10009CE8: xor %esi,%esi;");
    asm("loc_10009CEA: xor %ebp,%ebp;");
    asm("loc_10009CEC: test %edi,%edi;");
    asm("loc_10009CEE: jne loc_10009CFC;");
    asm("loc_10009CF0: pop %edi;");
    asm("loc_10009CF1: pop %esi;");
    asm("loc_10009CF2: mov $0xFFFFFF9A,%eax;");
    asm("loc_10009CF7: pop %ebp;");
    asm("loc_10009CF8: pop %ecx;");
    asm("loc_10009CF9: ret $8;");
    asm("loc_10009CFC: cmpl $1,0x2C(%edi);");
    asm("loc_10009D00: jne loc_10009D0A;");
    asm("loc_10009D02: push %edi;");
    asm("loc_10009D03: call _sub_10009CC0;");
    asm("loc_10009D08: mov %eax,%esi;");
    asm("loc_10009D0A: mov 0x18(%esp),%eax;");
    asm("loc_10009D0E: test %eax,%eax;");
    asm("loc_10009D10: push %ebx;");
    asm("loc_10009D11: jne loc_10009D1B;");
    asm("loc_10009D13: xor %ebx,%ebx;");
    asm("loc_10009D15: mov %ebx,0x18(%esp);");
    asm("loc_10009D19: jmp loc_10009D2F;");
    asm("loc_10009D1B: lea 1(%eax),%edx;");
    asm("loc_10009D1E: mov %edi,%edi;");
    asm("loc_10009D20: mov (%eax),%cl;");
    asm("loc_10009D22: inc %eax;");
    asm("loc_10009D23: test %cl,%cl;");
    asm("loc_10009D25: jne loc_10009D20;");
    asm("loc_10009D27: sub %edx,%eax;");
    asm("loc_10009D29: mov %eax,0x18(%esp);");
    asm("loc_10009D2D: mov %eax,%ebx;");
    asm("loc_10009D2F: mov 0x20(%edi),%eax;");
    asm("loc_10009D32: mov 0x1C(%edi),%ecx;");
    asm("loc_10009D35: push %eax;");
    asm("loc_10009D36: push %ecx;");
    asm("loc_10009D37: calll *0xC(%edi);");
    asm("loc_10009D3A: test %esi,%esi;");
    asm("loc_10009D3C: mov %eax,0x10(%esp);");
    asm("loc_10009D40: jne loc_10009D82;");
    asm("loc_10009D42: mov 0x24(%edi),%ebx;");
    asm("loc_10009D45: test %ebx,%ebx;");
    asm("loc_10009D47: je loc_10009D7E;");
    asm("loc_10009D49: lea (%esp),%esp;");
    asm("loc_10009D50: test %esi,%esi;");
    asm("loc_10009D52: jne loc_10009D73;");
    asm("loc_10009D54: mov 8(%ebx),%eax;");
    asm("loc_10009D57: test %eax,%eax;");
    asm("loc_10009D59: jbe loc_10009D73;");
    asm("loc_10009D5B: mov 0x1C(%edi),%ecx;");
    asm("loc_10009D5E: push %eax;");
    asm("loc_10009D5F: mov 0x20(%edi),%eax;");
    asm("loc_10009D62: lea 0x10(%ebx),%edx;");
    asm("loc_10009D65: push %edx;");
    asm("loc_10009D66: push %eax;");
    asm("loc_10009D67: push %ecx;");
    asm("loc_10009D68: calll *8(%edi);");
    asm("loc_10009D6B: cmp 8(%ebx),%eax;");
    asm("loc_10009D6E: je loc_10009D73;");
    asm("loc_10009D70: or $0xFFFFFFFF,%esi;");
    asm("loc_10009D73: mov 8(%ebx),%ecx;");
    asm("loc_10009D76: mov (%ebx),%ebx;");
    asm("loc_10009D78: add %ecx,%ebp;");
    asm("loc_10009D7A: test %ebx,%ebx;");
    asm("loc_10009D7C: jne loc_10009D50;");
    asm("loc_10009D7E: mov 0x18(%esp),%ebx;");
    asm("loc_10009D82: mov 0x24(%edi),%eax;");
    asm("loc_10009D85: call _sub_10009700;");
    asm("loc_10009D8A: test %esi,%esi;");
    asm("loc_10009D8C: jne loc_10009EA3;");
    asm("loc_10009D92: mov 0x20(%edi),%edx;");
    asm("loc_10009D95: push %edx;");
    asm("loc_10009D96: mov $4,%esi;");
    asm("loc_10009D9B: mov $0x6054B50,%ecx;");
    asm("loc_10009DA0: mov %edi,%edx;");
    asm("loc_10009DA2: call _sub_100097E0;");
    asm("loc_10009DA7: mov %eax,%esi;");
    asm("loc_10009DA9: add $4,%esp;");
    asm("loc_10009DAC: test %esi,%esi;");
    asm("loc_10009DAE: jne loc_10009EA3;");
    asm("loc_10009DB4: mov 0x20(%edi),%eax;");
    asm("loc_10009DB7: push %eax;");
    asm("loc_10009DB8: mov $2,%esi;");
    asm("loc_10009DBD: xor %ecx,%ecx;");
    asm("loc_10009DBF: mov %edi,%edx;");
    asm("loc_10009DC1: call _sub_100097E0;");
    asm("loc_10009DC6: mov %eax,%esi;");
    asm("loc_10009DC8: add $4,%esp;");
    asm("loc_10009DCB: test %esi,%esi;");
    asm("loc_10009DCD: jne loc_10009EA3;");
    asm("loc_10009DD3: mov 0x20(%edi),%ecx;");
    asm("loc_10009DD6: push %ecx;");
    asm("loc_10009DD7: mov $2,%esi;");
    asm("loc_10009DDC: xor %ecx,%ecx;");
    asm("loc_10009DDE: mov %edi,%edx;");
    asm("loc_10009DE0: call _sub_100097E0;");
    asm("loc_10009DE5: mov %eax,%esi;");
    asm("loc_10009DE7: add $4,%esp;");
    asm("loc_10009DEA: test %esi,%esi;");
    asm("loc_10009DEC: jne loc_10009EA3;");
    asm("loc_10009DF2: mov 0x20(%edi),%edx;");
    asm("loc_10009DF5: mov 0x4094(%edi),%ecx;");
    asm("loc_10009DFB: push %edx;");
    asm("loc_10009DFC: mov $2,%esi;");
    asm("loc_10009E01: mov %edi,%edx;");
    asm("loc_10009E03: call _sub_100097E0;");
    asm("loc_10009E08: mov %eax,%esi;");
    asm("loc_10009E0A: add $4,%esp;");
    asm("loc_10009E0D: test %esi,%esi;");
    asm("loc_10009E0F: jne loc_10009EA3;");
    asm("loc_10009E15: mov 0x20(%edi),%eax;");
    asm("loc_10009E18: mov 0x4094(%edi),%ecx;");
    asm("loc_10009E1E: push %eax;");
    asm("loc_10009E1F: mov $2,%esi;");
    asm("loc_10009E24: mov %edi,%edx;");
    asm("loc_10009E26: call _sub_100097E0;");
    asm("loc_10009E2B: mov %eax,%esi;");
    asm("loc_10009E2D: add $4,%esp;");
    asm("loc_10009E30: test %esi,%esi;");
    asm("loc_10009E32: jne loc_10009EA3;");
    asm("loc_10009E34: mov 0x20(%edi),%ecx;");
    asm("loc_10009E37: push %ecx;");
    asm("loc_10009E38: mov $4,%esi;");
    asm("loc_10009E3D: mov %ebp,%ecx;");
    asm("loc_10009E3F: mov %edi,%edx;");
    asm("loc_10009E41: call _sub_100097E0;");
    asm("loc_10009E46: mov %eax,%esi;");
    asm("loc_10009E48: add $4,%esp;");
    asm("loc_10009E4B: test %esi,%esi;");
    asm("loc_10009E4D: jne loc_10009EA3;");
    asm("loc_10009E4F: mov 0x20(%edi),%edx;");
    asm("loc_10009E52: mov 0x10(%esp),%ecx;");
    asm("loc_10009E56: push %edx;");
    asm("loc_10009E57: mov $4,%esi;");
    asm("loc_10009E5C: mov %edi,%edx;");
    asm("loc_10009E5E: call _sub_100097E0;");
    asm("loc_10009E63: mov %eax,%esi;");
    asm("loc_10009E65: add $4,%esp;");
    asm("loc_10009E68: test %esi,%esi;");
    asm("loc_10009E6A: jne loc_10009EA3;");
    asm("loc_10009E6C: mov 0x20(%edi),%eax;");
    asm("loc_10009E6F: push %eax;");
    asm("loc_10009E70: mov $2,%esi;");
    asm("loc_10009E75: mov %ebx,%ecx;");
    asm("loc_10009E77: mov %edi,%edx;");
    asm("loc_10009E79: call _sub_100097E0;");
    asm("loc_10009E7E: mov %eax,%esi;");
    asm("loc_10009E80: add $4,%esp;");
    asm("loc_10009E83: test %esi,%esi;");
    asm("loc_10009E85: jne loc_10009EA3;");
    asm("loc_10009E87: test %ebx,%ebx;");
    asm("loc_10009E89: jbe loc_10009EA3;");
    asm("loc_10009E8B: mov 0x1C(%esp),%ecx;");
    asm("loc_10009E8F: mov 0x20(%edi),%edx;");
    asm("loc_10009E92: mov 0x1C(%edi),%eax;");
    asm("loc_10009E95: push %ebx;");
    asm("loc_10009E96: push %ecx;");
    asm("loc_10009E97: push %edx;");
    asm("loc_10009E98: push %eax;");
    asm("loc_10009E99: calll *8(%edi);");
    asm("loc_10009E9C: cmp %ebx,%eax;");
    asm("loc_10009E9E: je loc_10009EA3;");
    asm("loc_10009EA0: or $0xFFFFFFFF,%esi;");
    asm("loc_10009EA3: mov 0x20(%edi),%ecx;");
    asm("loc_10009EA6: mov 0x1C(%edi),%edx;");
    asm("loc_10009EA9: push %ecx;");
    asm("loc_10009EAA: push %edx;");
    asm("loc_10009EAB: calll *0x14(%edi);");
    asm("loc_10009EAE: push %edi;");
    asm("loc_10009EAF: call _sub_1000A418;");
    asm("loc_10009EB4: add $4,%esp;");
    asm("loc_10009EB7: pop %ebx;");
    asm("loc_10009EB8: pop %edi;");
    asm("loc_10009EB9: mov %esi,%eax;");
    asm("loc_10009EBB: pop %esi;");
    asm("loc_10009EBC: pop %ebp;");
    asm("loc_10009EBD: pop %ecx;");
    asm("loc_10009EBE: ret $8;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_10009ED0() // _zipOpenNewFileInZip2
{
    __DEBUG_ASM(10009ED0);
    // chunk 0x10009ED0 _sub_10009ED0
    asm("loc_10009ED0: push %esi;");
    asm("loc_10009ED1: push %edi;");
    asm("loc_10009ED2: mov 0xC(%esp),%edi;");
    asm("loc_10009ED6: xor %esi,%esi;");
    asm("loc_10009ED8: cmp %esi,%edi;");
    asm("loc_10009EDA: jne loc_10009EE6;");
    asm("loc_10009EDC: pop %edi;");
    asm("loc_10009EDD: mov $0xFFFFFF9A,%eax;");
    asm("loc_10009EE2: pop %esi;");
    asm("loc_10009EE3: ret $0x2C;");
    asm("loc_10009EE6: push %ebx;");
    asm("loc_10009EE7: push %ebp;");
    asm("loc_10009EE8: mov 0x34(%esp),%ebp;");
    asm("loc_10009EEC: cmp %esi,%ebp;");
    asm("loc_10009EEE: je loc_10009F01;");
    asm("loc_10009EF0: cmp $8,%ebp;");
    asm("loc_10009EF3: je loc_10009F01;");
    asm("loc_10009EF5: pop %ebp;");
    asm("loc_10009EF6: pop %ebx;");
    asm("loc_10009EF7: pop %edi;");
    asm("loc_10009EF8: mov $0xFFFFFF9A,%eax;");
    asm("loc_10009EFD: pop %esi;");
    asm("loc_10009EFE: ret $0x2C;");
    asm("loc_10009F01: cmpl $1,0x2C(%edi);");
    asm("loc_10009F05: jne loc_10009F15;");
    asm("loc_10009F07: push %edi;");
    asm("loc_10009F08: call _sub_10009CC0;");
    asm("loc_10009F0D: cmp %esi,%eax;");
    asm("loc_10009F0F: jne loc_1000A359;");
    asm("loc_10009F15: cmp %esi,0x18(%esp);");
    asm("loc_10009F19: jne loc_10009F23;");
    asm("loc_10009F1B: movl $_data_1000C0C0,0x18(%esp);");
    asm("loc_10009F23: mov 0x30(%esp),%eax;");
    asm("loc_10009F27: cmp %esi,%eax;");
    asm("loc_10009F29: jne loc_10009F31;");
    asm("loc_10009F2B: mov %esi,0x14(%esp);");
    asm("loc_10009F2F: jmp loc_10009F41;");
    asm("loc_10009F31: lea 1(%eax),%edx;");
    asm("loc_10009F34: mov (%eax),%cl;");
    asm("loc_10009F36: inc %eax;");
    asm("loc_10009F37: test %cl,%cl;");
    asm("loc_10009F39: jne loc_10009F34;");
    asm("loc_10009F3B: sub %edx,%eax;");
    asm("loc_10009F3D: mov %eax,0x14(%esp);");
    asm("loc_10009F41: mov 0x18(%esp),%ebx;");
    asm("loc_10009F45: lea 1(%ebx),%ecx;");
    asm("loc_10009F48: mov (%ebx),%al;");
    asm("loc_10009F4A: inc %ebx;");
    asm("loc_10009F4B: test %al,%al;");
    asm("loc_10009F4D: jne loc_10009F48;");
    asm("loc_10009F4F: mov 0x1C(%esp),%edx;");
    asm("loc_10009F53: sub %ecx,%ebx;");
    asm("loc_10009F55: cmp %esi,%edx;");
    asm("loc_10009F57: jne loc_10009F61;");
    asm("loc_10009F59: mov %esi,0x4088(%edi);");
    asm("loc_10009F5F: jmp loc_10009F77;");
    asm("loc_10009F61: mov 0x18(%edx),%eax;");
    asm("loc_10009F64: cmp %esi,%eax;");
    asm("loc_10009F66: jne loc_10009F71;");
    asm("loc_10009F68: push %esi;");
    asm("loc_10009F69: call _sub_10009830;");
    asm("loc_10009F6E: add $4,%esp;");
    asm("loc_10009F71: mov %eax,0x4088(%edi);");
    asm("loc_10009F77: mov 0x38(%esp),%eax;");
    asm("loc_10009F7B: cmp $8,%eax;");
    asm("loc_10009F7E: mov %esi,0x7C(%edi);");
    asm("loc_10009F81: je loc_10009F88;");
    asm("loc_10009F83: cmp $9,%eax;");
    asm("loc_10009F86: jne loc_10009F8F;");
    asm("loc_10009F88: movl $2,0x7C(%edi);");
    asm("loc_10009F8F: cmp $2,%eax;");
    asm("loc_10009F92: jne loc_10009F9C;");
    asm("loc_10009F94: mov 0x7C(%edi),%eax;");
    asm("loc_10009F97: or $4,%eax;");
    asm("loc_10009F9A: jmp loc_10009FA7;");
    asm("loc_10009F9C: cmp $1,%eax;");
    asm("loc_10009F9F: jne loc_10009FAA;");
    asm("loc_10009FA1: mov 0x7C(%edi),%eax;");
    asm("loc_10009FA4: or $6,%eax;");
    asm("loc_10009FA7: mov %eax,0x7C(%edi);");
    asm("loc_10009FAA: mov 0x20(%edi),%ecx;");
    asm("loc_10009FAD: mov 0x1C(%edi),%edx;");
    asm("loc_10009FB0: mov 0x3C(%esp),%eax;");
    asm("loc_10009FB4: push %ecx;");
    asm("loc_10009FB5: push %edx;");
    asm("loc_10009FB6: mov %esi,0x408C(%edi);");
    asm("loc_10009FBC: mov %ebp,0x80(%edi);");
    asm("loc_10009FC2: mov %esi,0x68(%edi);");
    asm("loc_10009FC5: mov %esi,0x6C(%edi);");
    asm("loc_10009FC8: mov %eax,0x84(%edi);");
    asm("loc_10009FCE: calll *0xC(%edi);");
    asm("loc_10009FD1: mov 0x2C(%esp),%ebp;");
    asm("loc_10009FD5: mov %eax,0x70(%edi);");
    asm("loc_10009FD8: mov 0x14(%esp),%eax;");
    asm("loc_10009FDC: lea (%ebx,%eax),%ecx;");
    asm("loc_10009FDF: lea 0x2E(%ecx,%ebp),%eax;");
    asm("loc_10009FE3: push %eax;");
    asm("loc_10009FE4: mov %eax,0x78(%edi);");
    asm("loc_10009FE7: call _sub_1000A46A;");
    asm("loc_10009FEC: add $4,%esp;");
    asm("loc_10009FEF: mov $4,%edx;");
    asm("loc_10009FF4: mov $0x2014B50,%ecx;");
    asm("loc_10009FF9: mov %eax,%esi;");
    asm("loc_10009FFB: mov %eax,0x74(%edi);");
    asm("loc_10009FFE: call _sub_10009810;");
    asm("loc_1000A003: mov 0x74(%edi),%esi;");
    asm("loc_1000A006: add %edx,%esi;");
    asm("loc_1000A008: mov $2,%edx;");
    asm("loc_1000A00D: xor %ecx,%ecx;");
    asm("loc_1000A00F: call _sub_10009810;");
    asm("loc_1000A014: mov 0x74(%edi),%esi;");
    asm("loc_1000A017: add $6,%esi;");
    asm("loc_1000A01A: mov $0x14,%ecx;");
    asm("loc_1000A01F: call _sub_10009810;");
    asm("loc_1000A024: mov 0x74(%edi),%esi;");
    asm("loc_1000A027: mov 0x7C(%edi),%ecx;");
    asm("loc_1000A02A: add $8,%esi;");
    asm("loc_1000A02D: call _sub_10009810;");
    asm("loc_1000A032: mov 0x74(%edi),%esi;");
    asm("loc_1000A035: mov 0x80(%edi),%ecx;");
    asm("loc_1000A03B: add $0xA,%esi;");
    asm("loc_1000A03E: call _sub_10009810;");
    asm("loc_1000A043: mov 0x74(%edi),%esi;");
    asm("loc_1000A046: mov 0x4088(%edi),%ecx;");
    asm("loc_1000A04C: add $0xC,%esi;");
    asm("loc_1000A04F: mov $4,%edx;");
    asm("loc_1000A054: call _sub_10009810;");
    asm("loc_1000A059: mov 0x74(%edi),%esi;");
    asm("loc_1000A05C: add $0x10,%esi;");
    asm("loc_1000A05F: xor %ecx,%ecx;");
    asm("loc_1000A061: call _sub_10009810;");
    asm("loc_1000A066: mov 0x74(%edi),%esi;");
    asm("loc_1000A069: add $0x14,%esi;");
    asm("loc_1000A06C: xor %ecx,%ecx;");
    asm("loc_1000A06E: call _sub_10009810;");
    asm("loc_1000A073: mov 0x74(%edi),%esi;");
    asm("loc_1000A076: add $0x18,%esi;");
    asm("loc_1000A079: xor %ecx,%ecx;");
    asm("loc_1000A07B: call _sub_10009810;");
    asm("loc_1000A080: mov 0x74(%edi),%esi;");
    asm("loc_1000A083: add $0x1C,%esi;");
    asm("loc_1000A086: mov $2,%edx;");
    asm("loc_1000A08B: mov %ebx,%ecx;");
    asm("loc_1000A08D: call _sub_10009810;");
    asm("loc_1000A092: mov 0x74(%edi),%esi;");
    asm("loc_1000A095: add $0x1E,%esi;");
    asm("loc_1000A098: mov %ebp,%ecx;");
    asm("loc_1000A09A: call _sub_10009810;");
    asm("loc_1000A09F: mov 0x74(%edi),%esi;");
    asm("loc_1000A0A2: mov 0x14(%esp),%ecx;");
    asm("loc_1000A0A6: add $0x20,%esi;");
    asm("loc_1000A0A9: call _sub_10009810;");
    asm("loc_1000A0AE: mov 0x74(%edi),%esi;");
    asm("loc_1000A0B1: add $0x22,%esi;");
    asm("loc_1000A0B4: xor %ecx,%ecx;");
    asm("loc_1000A0B6: call _sub_10009810;");
    asm("loc_1000A0BB: mov 0x74(%edi),%esi;");
    asm("loc_1000A0BE: mov 0x1C(%esp),%eax;");
    asm("loc_1000A0C2: add $0x24,%esi;");
    asm("loc_1000A0C5: test %eax,%eax;");
    asm("loc_1000A0C7: jne loc_1000A0D4;");
    asm("loc_1000A0C9: xor %ecx,%ecx;");
    asm("loc_1000A0CB: call _sub_10009810;");
    asm("loc_1000A0D0: xor %ecx,%ecx;");
    asm("loc_1000A0D2: jmp loc_1000A0E3;");
    asm("loc_1000A0D4: mov 0x1C(%eax),%ecx;");
    asm("loc_1000A0D7: call _sub_10009810;");
    asm("loc_1000A0DC: mov 0x1C(%esp),%eax;");
    asm("loc_1000A0E0: mov 0x20(%eax),%ecx;");
    asm("loc_1000A0E3: mov 0x74(%edi),%esi;");
    asm("loc_1000A0E6: add $0x26,%esi;");
    asm("loc_1000A0E9: mov $4,%edx;");
    asm("loc_1000A0EE: call _sub_10009810;");
    asm("loc_1000A0F3: mov 0x74(%edi),%esi;");
    asm("loc_1000A0F6: mov 0x70(%edi),%ecx;");
    asm("loc_1000A0F9: add $0x2A,%esi;");
    asm("loc_1000A0FC: call _sub_10009810;");
    asm("loc_1000A101: xor %eax,%eax;");
    asm("loc_1000A103: test %ebx,%ebx;");
    asm("loc_1000A105: jbe loc_1000A123;");
    asm("loc_1000A107: jmp loc_1000A110;");
    asm("loc_1000A109: lea (%esp),%esp;");
    asm("loc_1000A110: mov 0x18(%esp),%edx;");
    asm("loc_1000A114: mov (%eax,%edx),%dl;");
    asm("loc_1000A117: mov 0x74(%edi),%ecx;");
    asm("loc_1000A11A: mov %dl,0x2E(%ecx,%eax);");
    asm("loc_1000A11E: inc %eax;");
    asm("loc_1000A11F: cmp %ebx,%eax;");
    asm("loc_1000A121: jb loc_1000A110;");
    asm("loc_1000A123: xor %eax,%eax;");
    asm("loc_1000A125: test %ebp,%ebp;");
    asm("loc_1000A127: jbe loc_1000A141;");
    asm("loc_1000A129: mov 0x28(%esp),%esi;");
    asm("loc_1000A12D: lea (%ecx),%ecx;");
    asm("loc_1000A130: mov 0x74(%edi),%ecx;");
    asm("loc_1000A133: mov (%eax,%esi),%dl;");
    asm("loc_1000A136: add %eax,%ecx;");
    asm("loc_1000A138: inc %eax;");
    asm("loc_1000A139: cmp %ebp,%eax;");
    asm("loc_1000A13B: mov %dl,0x2E(%ecx,%ebx);");
    asm("loc_1000A13F: jb loc_1000A130;");
    asm("loc_1000A141: mov 0x14(%esp),%esi;");
    asm("loc_1000A145: xor %eax,%eax;");
    asm("loc_1000A147: test %esi,%esi;");
    asm("loc_1000A149: jbe loc_1000A167;");
    asm("loc_1000A14B: jmp loc_1000A150;");
    asm("loc_1000A14D: lea (%ecx),%ecx;");
    asm("loc_1000A150: mov 0x74(%edi),%ecx;");
    asm("loc_1000A153: mov 0x30(%esp),%edx;");
    asm("loc_1000A157: mov (%eax,%edx),%dl;");
    asm("loc_1000A15A: add %eax,%ecx;");
    asm("loc_1000A15C: add %ebx,%ecx;");
    asm("loc_1000A15E: inc %eax;");
    asm("loc_1000A15F: cmp %esi,%eax;");
    asm("loc_1000A161: mov %dl,0x2E(%ecx,%ebp);");
    asm("loc_1000A165: jb loc_1000A150;");
    asm("loc_1000A167: mov 0x74(%edi),%eax;");
    asm("loc_1000A16A: test %eax,%eax;");
    asm("loc_1000A16C: jne loc_1000A17A;");
    asm("loc_1000A16E: pop %ebp;");
    asm("loc_1000A16F: pop %ebx;");
    asm("loc_1000A170: pop %edi;");
    asm("loc_1000A171: mov $0xFFFFFF98,%eax;");
    asm("loc_1000A176: pop %esi;");
    asm("loc_1000A177: ret $0x2C;");
    asm("loc_1000A17A: mov 0x20(%edi),%eax;");
    asm("loc_1000A17D: push %eax;");
    asm("loc_1000A17E: mov $4,%esi;");
    asm("loc_1000A183: mov $0x4034B50,%ecx;");
    asm("loc_1000A188: mov %edi,%edx;");
    asm("loc_1000A18A: call _sub_100097E0;");
    asm("loc_1000A18F: mov %eax,%esi;");
    asm("loc_1000A191: xor %ebp,%ebp;");
    asm("loc_1000A193: add $4,%esp;");
    asm("loc_1000A196: cmp %ebp,%esi;");
    asm("loc_1000A198: jne loc_1000A2F0;");
    asm("loc_1000A19E: mov 0x20(%edi),%ecx;");
    asm("loc_1000A1A1: push %ecx;");
    asm("loc_1000A1A2: mov $2,%esi;");
    asm("loc_1000A1A7: mov $0x14,%ecx;");
    asm("loc_1000A1AC: mov %edi,%edx;");
    asm("loc_1000A1AE: call _sub_100097E0;");
    asm("loc_1000A1B3: mov %eax,%esi;");
    asm("loc_1000A1B5: add $4,%esp;");
    asm("loc_1000A1B8: cmp %ebp,%esi;");
    asm("loc_1000A1BA: jne loc_1000A2F0;");
    asm("loc_1000A1C0: mov 0x20(%edi),%edx;");
    asm("loc_1000A1C3: mov 0x7C(%edi),%ecx;");
    asm("loc_1000A1C6: push %edx;");
    asm("loc_1000A1C7: mov $2,%esi;");
    asm("loc_1000A1CC: mov %edi,%edx;");
    asm("loc_1000A1CE: call _sub_100097E0;");
    asm("loc_1000A1D3: mov %eax,%esi;");
    asm("loc_1000A1D5: add $4,%esp;");
    asm("loc_1000A1D8: cmp %ebp,%esi;");
    asm("loc_1000A1DA: jne loc_1000A2F0;");
    asm("loc_1000A1E0: mov 0x20(%edi),%eax;");
    asm("loc_1000A1E3: mov 0x80(%edi),%ecx;");
    asm("loc_1000A1E9: push %eax;");
    asm("loc_1000A1EA: mov $2,%esi;");
    asm("loc_1000A1EF: mov %edi,%edx;");
    asm("loc_1000A1F1: call _sub_100097E0;");
    asm("loc_1000A1F6: mov %eax,%esi;");
    asm("loc_1000A1F8: add $4,%esp;");
    asm("loc_1000A1FB: cmp %ebp,%esi;");
    asm("loc_1000A1FD: jne loc_1000A2F0;");
    asm("loc_1000A203: mov 0x20(%edi),%ecx;");
    asm("loc_1000A206: push %ecx;");
    asm("loc_1000A207: mov 0x4088(%edi),%ecx;");
    asm("loc_1000A20D: mov $4,%esi;");
    asm("loc_1000A212: mov %edi,%edx;");
    asm("loc_1000A214: call _sub_100097E0;");
    asm("loc_1000A219: mov %eax,%esi;");
    asm("loc_1000A21B: add $4,%esp;");
    asm("loc_1000A21E: cmp %ebp,%esi;");
    asm("loc_1000A220: jne loc_1000A2F0;");
    asm("loc_1000A226: mov 0x20(%edi),%edx;");
    asm("loc_1000A229: push %edx;");
    asm("loc_1000A22A: mov $4,%esi;");
    asm("loc_1000A22F: xor %ecx,%ecx;");
    asm("loc_1000A231: mov %edi,%edx;");
    asm("loc_1000A233: call _sub_100097E0;");
    asm("loc_1000A238: mov %eax,%esi;");
    asm("loc_1000A23A: add $4,%esp;");
    asm("loc_1000A23D: cmp %ebp,%esi;");
    asm("loc_1000A23F: jne loc_1000A2F0;");
    asm("loc_1000A245: mov 0x20(%edi),%eax;");
    asm("loc_1000A248: push %eax;");
    asm("loc_1000A249: mov $4,%esi;");
    asm("loc_1000A24E: xor %ecx,%ecx;");
    asm("loc_1000A250: mov %edi,%edx;");
    asm("loc_1000A252: call _sub_100097E0;");
    asm("loc_1000A257: mov %eax,%esi;");
    asm("loc_1000A259: add $4,%esp;");
    asm("loc_1000A25C: cmp %ebp,%esi;");
    asm("loc_1000A25E: jne loc_1000A2F0;");
    asm("loc_1000A264: mov 0x20(%edi),%ecx;");
    asm("loc_1000A267: push %ecx;");
    asm("loc_1000A268: mov $4,%esi;");
    asm("loc_1000A26D: xor %ecx,%ecx;");
    asm("loc_1000A26F: mov %edi,%edx;");
    asm("loc_1000A271: call _sub_100097E0;");
    asm("loc_1000A276: mov %eax,%esi;");
    asm("loc_1000A278: add $4,%esp;");
    asm("loc_1000A27B: cmp %ebp,%esi;");
    asm("loc_1000A27D: jne loc_1000A2F0;");
    asm("loc_1000A27F: mov 0x20(%edi),%edx;");
    asm("loc_1000A282: push %edx;");
    asm("loc_1000A283: mov $2,%esi;");
    asm("loc_1000A288: mov %ebx,%ecx;");
    asm("loc_1000A28A: mov %edi,%edx;");
    asm("loc_1000A28C: call _sub_100097E0;");
    asm("loc_1000A291: mov %eax,%esi;");
    asm("loc_1000A293: add $4,%esp;");
    asm("loc_1000A296: cmp %ebp,%esi;");
    asm("loc_1000A298: jne loc_1000A2F0;");
    asm("loc_1000A29A: mov 0x20(%edi),%eax;");
    asm("loc_1000A29D: mov 0x24(%esp),%ebp;");
    asm("loc_1000A2A1: push %eax;");
    asm("loc_1000A2A2: mov $2,%esi;");
    asm("loc_1000A2A7: mov %ebp,%ecx;");
    asm("loc_1000A2A9: mov %edi,%edx;");
    asm("loc_1000A2AB: call _sub_100097E0;");
    asm("loc_1000A2B0: mov %eax,%esi;");
    asm("loc_1000A2B2: add $4,%esp;");
    asm("loc_1000A2B5: test %esi,%esi;");
    asm("loc_1000A2B7: jne loc_1000A2EE;");
    asm("loc_1000A2B9: test %ebx,%ebx;");
    asm("loc_1000A2BB: jbe loc_1000A2D2;");
    asm("loc_1000A2BD: mov 0x18(%esp),%ecx;");
    asm("loc_1000A2C1: mov 0x20(%edi),%edx;");
    asm("loc_1000A2C4: mov 0x1C(%edi),%eax;");
    asm("loc_1000A2C7: push %ebx;");
    asm("loc_1000A2C8: push %ecx;");
    asm("loc_1000A2C9: push %edx;");
    asm("loc_1000A2CA: push %eax;");
    asm("loc_1000A2CB: calll *8(%edi);");
    asm("loc_1000A2CE: cmp %ebx,%eax;");
    asm("loc_1000A2D0: jne loc_1000A2EB;");
    asm("loc_1000A2D2: test %ebp,%ebp;");
    asm("loc_1000A2D4: jbe loc_1000A2EE;");
    asm("loc_1000A2D6: mov 0x20(%esp),%ecx;");
    asm("loc_1000A2DA: mov 0x20(%edi),%edx;");
    asm("loc_1000A2DD: mov 0x1C(%edi),%eax;");
    asm("loc_1000A2E0: push %ebp;");
    asm("loc_1000A2E1: push %ecx;");
    asm("loc_1000A2E2: push %edx;");
    asm("loc_1000A2E3: push %eax;");
    asm("loc_1000A2E4: calll *8(%edi);");
    asm("loc_1000A2E7: cmp %ebp,%eax;");
    asm("loc_1000A2E9: je loc_1000A2EE;");
    asm("loc_1000A2EB: or $0xFFFFFFFF,%esi;");
    asm("loc_1000A2EE: xor %ebp,%ebp;");
    asm("loc_1000A2F0: cmp %ebp,%esi;");
    asm("loc_1000A2F2: lea 0x88(%edi),%ecx;");
    asm("loc_1000A2F8: mov %ebp,0x34(%edi);");
    asm("loc_1000A2FB: movl $0x4000,0x40(%edi);");
    asm("loc_1000A302: mov %ecx,0x3C(%edi);");
    asm("loc_1000A305: mov %ebp,0x38(%edi);");
    asm("loc_1000A308: mov %ebp,0x44(%edi);");
    asm("loc_1000A30B: jne loc_1000A357;");
    asm("loc_1000A30D: cmpl $8,0x80(%edi);");
    asm("loc_1000A314: jne loc_1000A350;");
    asm("loc_1000A316: cmp %ebp,0x84(%edi);");
    asm("loc_1000A31C: jne loc_1000A350;");
    asm("loc_1000A31E: mov 0x38(%esp),%edx;");
    asm("loc_1000A322: push $0x38;");
    asm("loc_1000A324: push $_data_1000B068;");
    asm("loc_1000A329: push %ebp;");
    asm("loc_1000A32A: push $8;");
    asm("loc_1000A32C: push $0xFFFFFFF1;");
    asm("loc_1000A32E: push $8;");
    asm("loc_1000A330: push %edx;");
    asm("loc_1000A331: lea 0x30(%edi),%eax;");
    asm("loc_1000A334: push %eax;");
    asm("loc_1000A335: mov %ebp,0x50(%edi);");
    asm("loc_1000A338: mov %ebp,0x54(%edi);");
    asm("loc_1000A33B: mov %ebp,0x58(%edi);");
    asm("loc_1000A33E: call _sub_10002DE0;");
    asm("loc_1000A343: mov %eax,%esi;");
    asm("loc_1000A345: cmp %ebp,%esi;");
    asm("loc_1000A347: jne loc_1000A357;");
    asm("loc_1000A349: movl $1,0x68(%edi);");
    asm("loc_1000A350: movl $1,0x2C(%edi);");
    asm("loc_1000A357: mov %esi,%eax;");
    asm("loc_1000A359: pop %ebp;");
    asm("loc_1000A35A: pop %ebx;");
    asm("loc_1000A35B: pop %edi;");
    asm("loc_1000A35C: pop %esi;");
    asm("loc_1000A35D: ret $0x2C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A360() // _zipOpenNewFileInZip
{
    __DEBUG_ASM(1000A360);
    // chunk 0x1000A360 _sub_1000A360
    asm("loc_1000A360: mov 0x28(%esp),%eax;");
    asm("loc_1000A364: mov 0x24(%esp),%ecx;");
    asm("loc_1000A368: mov 0x20(%esp),%edx;");
    asm("loc_1000A36C: push $0;");
    asm("loc_1000A36E: push %eax;");
    asm("loc_1000A36F: mov 0x24(%esp),%eax;");
    asm("loc_1000A373: push %ecx;");
    asm("loc_1000A374: mov 0x24(%esp),%ecx;");
    asm("loc_1000A378: push %edx;");
    asm("loc_1000A379: mov 0x24(%esp),%edx;");
    asm("loc_1000A37D: push %eax;");
    asm("loc_1000A37E: mov 0x24(%esp),%eax;");
    asm("loc_1000A382: push %ecx;");
    asm("loc_1000A383: mov 0x24(%esp),%ecx;");
    asm("loc_1000A387: push %edx;");
    asm("loc_1000A388: mov 0x24(%esp),%edx;");
    asm("loc_1000A38C: push %eax;");
    asm("loc_1000A38D: mov 0x24(%esp),%eax;");
    asm("loc_1000A391: push %ecx;");
    asm("loc_1000A392: push %edx;");
    asm("loc_1000A393: push %eax;");
    asm("loc_1000A394: call _sub_10009ED0;");
    asm("loc_1000A399: ret $0x28;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A3A0() // _zlibVersion
{
    __DEBUG_ASM(1000A3A0);
    // chunk 0x1000A3A0 _sub_1000A3A0
    asm("loc_1000A3A0: mov $_data_1000B068,%eax;");
    asm("loc_1000A3A5: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A3B0() // _zError
{
    __DEBUG_ASM(1000A3B0);
    // chunk 0x1000A3B0 _sub_1000A3B0
    asm("loc_1000A3B0: mov 4(%esp),%eax;");
    asm("loc_1000A3B4: lea (,%eax,4),%ecx;");
    asm("loc_1000A3BB: mov $_off_1000E1A8,%edx;");
    asm("loc_1000A3C0: sub %ecx,%edx;");
    asm("loc_1000A3C2: mov (%edx),%eax;");
    asm("loc_1000A3C4: ret $4;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A3D0() // _sub_1000A3D0
{
    __DEBUG_ASM(1000A3D0);
    // chunk 0x1000A3D0 _sub_1000A3D0
    asm("loc_1000A3D0: mov 0xC(%esp),%eax;");
    asm("loc_1000A3D4: mov 8(%esp),%ecx;");
    asm("loc_1000A3D8: push %eax;");
    asm("loc_1000A3D9: push %ecx;");
    asm("loc_1000A3DA: call _sub_1000A48E;");
    asm("loc_1000A3DF: add $8,%esp;");
    asm("loc_1000A3E2: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A3F0() // _sub_1000A3F0
{
    __DEBUG_ASM(1000A3F0);
    // chunk 0x1000A3F0 _sub_1000A3F0
    asm("loc_1000A3F0: mov 8(%esp),%eax;");
    asm("loc_1000A3F4: push %eax;");
    asm("loc_1000A3F5: call _sub_1000A418;");
    asm("loc_1000A3FA: pop %ecx;");
    asm("loc_1000A3FB: ret;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A400() // _fwrite
{
    __DEBUG_ASM(1000A400);
    // chunk 0x1000A400 _sub_1000A400
    asm("loc_1000A400: jmpl *_import_1000B000;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A406() // _fread
{
    __DEBUG_ASM(1000A406);
    // chunk 0x1000A406 _sub_1000A406
    asm("loc_1000A406: jmpl *_import_1000B004;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A40C() // _errno
{
    __DEBUG_ASM(1000A40C);
    // chunk 0x1000A40C _sub_1000A40C
    asm("loc_1000A40C: jmpl *_import_1000B008;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A412() // _fclose
{
    __DEBUG_ASM(1000A412);
    // chunk 0x1000A412 _sub_1000A412
    asm("loc_1000A412: jmpl *_import_1000B00C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A418() // _free
{
    __DEBUG_ASM(1000A418);
    // chunk 0x1000A418 _sub_1000A418
    asm("loc_1000A418: jmpl *_import_1000B010;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A41E() // _vsprintf
{
    __DEBUG_ASM(1000A41E);
    // chunk 0x1000A41E _sub_1000A41E
    asm("loc_1000A41E: jmpl *_import_1000B014;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A424() // _sub_1000A424
{
    __DEBUG_ASM(1000A424);
    // chunk 0x1000A424 _sub_1000A424
    asm("loc_1000A424: push %ecx;");
    asm("loc_1000A425: mov %esp,%ecx;");
    asm("loc_1000A427: add $8,%ecx;");
    asm("loc_1000A42A: cmp $0x1000,%eax;");
    asm("loc_1000A42F: jb loc_1000A441;");
    asm("loc_1000A431: sub $0x1000,%ecx;");
    asm("loc_1000A437: orl $0,(%ecx);");
    asm("loc_1000A43A: sub $0x1000,%eax;");
    asm("loc_1000A43F: jmp loc_1000A42A;");
    asm("loc_1000A441: sub %eax,%ecx;");
    asm("loc_1000A443: orl $0,(%ecx);");
    asm("loc_1000A446: mov %esp,%eax;");
    asm("loc_1000A448: mov %ecx,%esp;");
    asm("loc_1000A44A: mov (%eax),%ecx;");
    asm("loc_1000A44C: mov 4(%eax),%eax;");
    asm("loc_1000A44F: jmp *%eax;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A452() // _fflush
{
    __DEBUG_ASM(1000A452);
    // chunk 0x1000A452 _sub_1000A452
    asm("loc_1000A452: jmpl *_import_1000B018;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A458() // _fseek
{
    __DEBUG_ASM(1000A458);
    // chunk 0x1000A458 _sub_1000A458
    asm("loc_1000A458: jmpl *_import_1000B01C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A45E() // _rewind
{
    __DEBUG_ASM(1000A45E);
    // chunk 0x1000A45E _sub_1000A45E
    asm("loc_1000A45E: jmpl *_import_1000B020;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A464() // _fputc
{
    __DEBUG_ASM(1000A464);
    // chunk 0x1000A464 _sub_1000A464
    asm("loc_1000A464: jmpl *_import_1000B024;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A46A() // _malloc
{
    __DEBUG_ASM(1000A46A);
    // chunk 0x1000A46A _sub_1000A46A
    asm("loc_1000A46A: jmpl *_import_1000B028;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A470() // _ftell
{
    __DEBUG_ASM(1000A470);
    // chunk 0x1000A470 _sub_1000A470
    asm("loc_1000A470: jmpl *_import_1000B02C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A476() // _fprintf
{
    __DEBUG_ASM(1000A476);
    // chunk 0x1000A476 _sub_1000A476
    asm("loc_1000A476: jmpl *_import_1000B030;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A47C() // _fdopen
{
    __DEBUG_ASM(1000A47C);
    // chunk 0x1000A47C _sub_1000A47C
    asm("loc_1000A47C: jmpl *_import_1000B034;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A482() // _fopen
{
    __DEBUG_ASM(1000A482);
    // chunk 0x1000A482 _sub_1000A482
    asm("loc_1000A482: jmpl *_import_1000B038;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A488() // _sprintf
{
    __DEBUG_ASM(1000A488);
    // chunk 0x1000A488 _sub_1000A488
    asm("loc_1000A488: jmpl *_import_1000B03C;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A48E() // _calloc
{
    __DEBUG_ASM(1000A48E);
    // chunk 0x1000A48E _sub_1000A48E
    asm("loc_1000A48E: jmpl *_import_1000B040;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A494() // _sub_1000A494
{
    __DEBUG_ASM(1000A494);
    // chunk 0x1000A494 _sub_1000A494
    asm("loc_1000A494: push %esi;");
    asm("loc_1000A495: mov 0xC(%esp),%esi;");
    asm("loc_1000A499: cmp $1,%esi;");
    asm("loc_1000A49C: jne loc_1000A4C6;");
    asm("loc_1000A49E: incl _data_1000E1D0;");
    asm("loc_1000A4A4: cmpl $0,_data_1000E1C8;");
    asm("loc_1000A4AB: jne loc_1000A4E8;");
    asm("loc_1000A4AD: calll *_import_1000B050;");
    asm("loc_1000A4B3: cmp $3,%al;");
    asm("loc_1000A4B5: jne loc_1000A4E2;");
    asm("loc_1000A4B7: test $0x80000000,%eax;");
    asm("loc_1000A4BC: je loc_1000A4E2;");
    asm("loc_1000A4BE: incl _data_1000E1C8;");
    asm("loc_1000A4C4: jmp loc_1000A4E8;");
    asm("loc_1000A4C6: test %esi,%esi;");
    asm("loc_1000A4C8: jne loc_1000A4A4;");
    asm("loc_1000A4CA: cmpl $0,_data_1000E1D0;");
    asm("loc_1000A4D1: jle loc_1000A4DB;");
    asm("loc_1000A4D3: decl _data_1000E1D0;");
    asm("loc_1000A4D9: jmp loc_1000A4A4;");
    asm("loc_1000A4DB: xor %eax,%eax;");
    asm("loc_1000A4DD: jmp loc_1000A5DC;");
    asm("loc_1000A4E2: decl _data_1000E1C8;");
    asm("loc_1000A4E8: cmp $1,%esi;");
    asm("loc_1000A4EB: jne loc_1000A57F;");
    asm("loc_1000A4F1: cmpl $0,_data_1000E1C8;");
    asm("loc_1000A4F8: jl loc_1000A510;");
    asm("loc_1000A4FA: cmpl $1,_data_1000E1D0;");
    asm("loc_1000A501: jne loc_1000A5D7;");
    asm("loc_1000A507: cmpl $0,_data_1000E1C8;");
    asm("loc_1000A50E: jge loc_1000A52D;");
    asm("loc_1000A510: push $0x80;");
    asm("loc_1000A515: call _sub_1000A46A;");
    asm("loc_1000A51A: add $4,%esp;");
    asm("loc_1000A51D: mov %eax,_data_1000E5DC;");
    asm("loc_1000A522: test %eax,%eax;");
    asm("loc_1000A524: jne loc_1000A556;");
    asm("loc_1000A526: xor %eax,%eax;");
    asm("loc_1000A528: jmp loc_1000A5DC;");
    asm("loc_1000A52D: cmpl $1,_data_1000E1D0;");
    asm("loc_1000A534: jne loc_1000A556;");
    asm("loc_1000A536: push $0x80;");
    asm("loc_1000A53B: push $0x2000;");
    asm("loc_1000A540: calll *_import_1000B04C;");
    asm("loc_1000A546: mov %eax,_data_1000E5DC;");
    asm("loc_1000A54B: test %eax,%eax;");
    asm("loc_1000A54D: jne loc_1000A556;");
    asm("loc_1000A54F: xor %eax,%eax;");
    asm("loc_1000A551: jmp loc_1000A5DC;");
    asm("loc_1000A556: mov _data_1000E5DC,%eax;");
    asm("loc_1000A55B: push $_data_1000B060;");
    asm("loc_1000A560: push $_data_1000B05C;");
    asm("loc_1000A565: movl $0,(%eax);");
    asm("loc_1000A56B: mov _data_1000E5DC,%eax;");
    asm("loc_1000A570: mov %eax,_data_1000E5D8;");
    asm("loc_1000A575: call _sub_1000A64C;");
    asm("loc_1000A57A: add $8,%esp;");
    asm("loc_1000A57D: jmp loc_1000A5D7;");
    asm("loc_1000A57F: test %esi,%esi;");
    asm("loc_1000A581: jne loc_1000A5D7;");
    asm("loc_1000A583: cmpl $0,_data_1000E1C8;");
    asm("loc_1000A58A: jl loc_1000A595;");
    asm("loc_1000A58C: cmpl $0,_data_1000E1D0;");
    asm("loc_1000A593: jne loc_1000A5D7;");
    asm("loc_1000A595: cmpl $0,_data_1000E5DC;");
    asm("loc_1000A59C: je loc_1000A5D7;");
    asm("loc_1000A59E: mov _data_1000E5D8,%esi;");
    asm("loc_1000A5A4: sub $4,%esi;");
    asm("loc_1000A5A7: cmp %esi,_data_1000E5DC;");
    asm("loc_1000A5AD: ja loc_1000A5C2;");
    asm("loc_1000A5AF: mov (%esi),%eax;");
    asm("loc_1000A5B1: test %eax,%eax;");
    asm("loc_1000A5B3: je loc_1000A5B7;");
    asm("loc_1000A5B5: call *%eax;");
    asm("loc_1000A5B7: sub $4,%esi;");
    asm("loc_1000A5BA: cmp %esi,_data_1000E5DC;");
    asm("loc_1000A5C0: jbe loc_1000A5AF;");
    asm("loc_1000A5C2: cmpl $0,_data_1000E1C8;");
    asm("loc_1000A5C9: jle loc_1000A5D7;");
    asm("loc_1000A5CB: mov _data_1000E5DC,%eax;");
    asm("loc_1000A5D0: push %eax;");
    asm("loc_1000A5D1: calll *_import_1000B054;");
    asm("loc_1000A5D7: mov $1,%eax;");
    asm("loc_1000A5DC: pop %esi;");
    asm("loc_1000A5DD: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A5E0() // _DllEntryPoint
{
    __DEBUG_ASM(1000A5E0);
    // chunk 0x1000A5E0 _sub_1000A5E0
    asm("loc_1000A5E0: push %ebp;");
    asm("loc_1000A5E1: mov %esp,%ebp;");
    asm("loc_1000A5E3: push %esi;");
    asm("loc_1000A5E4: push %edi;");
    asm("loc_1000A5E5: mov $1,%edi;");
    asm("loc_1000A5EA: mov 0xC(%ebp),%esi;");
    asm("loc_1000A5ED: test %esi,%esi;");
    asm("loc_1000A5EF: jne loc_1000A5FE;");
    asm("loc_1000A5F1: cmpl $0,_data_1000E1D0;");
    asm("loc_1000A5F8: jne loc_1000A5FE;");
    asm("loc_1000A5FA: xor %eax,%eax;");
    asm("loc_1000A5FC: jmp loc_1000A645;");
    asm("loc_1000A5FE: cmp $1,%esi;");
    asm("loc_1000A601: je loc_1000A608;");
    asm("loc_1000A603: cmp $2,%esi;");
    asm("loc_1000A606: jne loc_1000A616;");
    asm("loc_1000A608: pushl 0x10(%ebp);");
    asm("loc_1000A60B: push %esi;");
    asm("loc_1000A60C: pushl 8(%ebp);");
    asm("loc_1000A60F: call _sub_1000A494;");
    asm("loc_1000A614: mov %eax,%edi;");
    asm("loc_1000A616: test %edi,%edi;");
    asm("loc_1000A618: je loc_1000A628;");
    asm("loc_1000A61A: pushl 0x10(%ebp);");
    asm("loc_1000A61D: push %esi;");
    asm("loc_1000A61E: pushl 8(%ebp);");
    asm("loc_1000A621: call _sub_1000A652;");
    asm("loc_1000A626: mov %eax,%edi;");
    asm("loc_1000A628: test %esi,%esi;");
    asm("loc_1000A62A: je loc_1000A631;");
    asm("loc_1000A62C: cmp $3,%esi;");
    asm("loc_1000A62F: jne loc_1000A643;");
    asm("loc_1000A631: pushl 0x10(%ebp);");
    asm("loc_1000A634: push %esi;");
    asm("loc_1000A635: pushl 8(%ebp);");
    asm("loc_1000A638: call _sub_1000A494;");
    asm("loc_1000A63D: test %eax,%eax;");
    asm("loc_1000A63F: jne loc_1000A643;");
    asm("loc_1000A641: xor %edi,%edi;");
    asm("loc_1000A643: mov %edi,%eax;");
    asm("loc_1000A645: pop %edi;");
    asm("loc_1000A646: pop %esi;");
    asm("loc_1000A647: pop %ebp;");
    asm("loc_1000A648: ret $0xC;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A64C() // _initterm
{
    __DEBUG_ASM(1000A64C);
    // chunk 0x1000A64C _sub_1000A64C
    asm("loc_1000A64C: jmpl *_import_1000B044;");
    asm("int3;"); // unreachable
}
_naked _weak void _sub_1000A652() // _sub_1000A652
{
    __DEBUG_ASM(1000A652);
    // chunk 0x1000A652 _sub_1000A652
    asm("loc_1000A652: mov $1,%eax;");
    asm("loc_1000A657: ret $0xC;");
    asm("int3;"); // unreachable
}
#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __INTELLISENSE__
